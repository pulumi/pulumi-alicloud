// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ram.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class PolicyStatementArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyStatementArgs Empty = new PolicyStatementArgs();

    /**
     * (It has been deprecated since version 1.49.0, and use field &#39;document&#39; to replace.) List of operations for the `resource`. The format of each item in this list is `${service}:${action_name}`, such as `oss:ListBuckets` and `ecs:Describe*`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${action_name}` refers to the name of an api interface which related to the `${service}`.
     * 
     */
    @Import(name="actions", required=true)
    private Output<List<String>> actions;

    /**
     * @return (It has been deprecated since version 1.49.0, and use field &#39;document&#39; to replace.) List of operations for the `resource`. The format of each item in this list is `${service}:${action_name}`, such as `oss:ListBuckets` and `ecs:Describe*`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${action_name}` refers to the name of an api interface which related to the `${service}`.
     * 
     */
    public Output<List<String>> actions() {
        return this.actions;
    }

    /**
     * (It has been deprecated since version 1.49.0, and use field &#39;document&#39; to replace.) This parameter indicates whether or not the `action` is allowed. Valid values are `Allow` and `Deny`.
     * 
     */
    @Import(name="effect", required=true)
    private Output<String> effect;

    /**
     * @return (It has been deprecated since version 1.49.0, and use field &#39;document&#39; to replace.) This parameter indicates whether or not the `action` is allowed. Valid values are `Allow` and `Deny`.
     * 
     */
    public Output<String> effect() {
        return this.effect;
    }

    /**
     * (It has been deprecated since version 1.49.0, and use field &#39;document&#39; to replace.) List of specific objects which will be authorized. The format of each item in this list is `acs:${service}:${region}:${account_id}:${relative_id}`, such as `acs:ecs:*:*:instance/inst-002` and `acs:oss:*:1234567890000:mybucket`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${region}` is the region info which can use `*` replace when it is not supplied, the `${account_id}` refers to someone&#39;s Alicloud account id or you can use `*` to replace, the `${relative_id}` is the resource description section which related to the `${service}`.
     * 
     */
    @Import(name="resources", required=true)
    private Output<List<String>> resources;

    /**
     * @return (It has been deprecated since version 1.49.0, and use field &#39;document&#39; to replace.) List of specific objects which will be authorized. The format of each item in this list is `acs:${service}:${region}:${account_id}:${relative_id}`, such as `acs:ecs:*:*:instance/inst-002` and `acs:oss:*:1234567890000:mybucket`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${region}` is the region info which can use `*` replace when it is not supplied, the `${account_id}` refers to someone&#39;s Alicloud account id or you can use `*` to replace, the `${relative_id}` is the resource description section which related to the `${service}`.
     * 
     */
    public Output<List<String>> resources() {
        return this.resources;
    }

    private PolicyStatementArgs() {}

    private PolicyStatementArgs(PolicyStatementArgs $) {
        this.actions = $.actions;
        this.effect = $.effect;
        this.resources = $.resources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyStatementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyStatementArgs $;

        public Builder() {
            $ = new PolicyStatementArgs();
        }

        public Builder(PolicyStatementArgs defaults) {
            $ = new PolicyStatementArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions (It has been deprecated since version 1.49.0, and use field &#39;document&#39; to replace.) List of operations for the `resource`. The format of each item in this list is `${service}:${action_name}`, such as `oss:ListBuckets` and `ecs:Describe*`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${action_name}` refers to the name of an api interface which related to the `${service}`.
         * 
         * @return builder
         * 
         */
        public Builder actions(Output<List<String>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions (It has been deprecated since version 1.49.0, and use field &#39;document&#39; to replace.) List of operations for the `resource`. The format of each item in this list is `${service}:${action_name}`, such as `oss:ListBuckets` and `ecs:Describe*`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${action_name}` refers to the name of an api interface which related to the `${service}`.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<String> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions (It has been deprecated since version 1.49.0, and use field &#39;document&#39; to replace.) List of operations for the `resource`. The format of each item in this list is `${service}:${action_name}`, such as `oss:ListBuckets` and `ecs:Describe*`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${action_name}` refers to the name of an api interface which related to the `${service}`.
         * 
         * @return builder
         * 
         */
        public Builder actions(String... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param effect (It has been deprecated since version 1.49.0, and use field &#39;document&#39; to replace.) This parameter indicates whether or not the `action` is allowed. Valid values are `Allow` and `Deny`.
         * 
         * @return builder
         * 
         */
        public Builder effect(Output<String> effect) {
            $.effect = effect;
            return this;
        }

        /**
         * @param effect (It has been deprecated since version 1.49.0, and use field &#39;document&#39; to replace.) This parameter indicates whether or not the `action` is allowed. Valid values are `Allow` and `Deny`.
         * 
         * @return builder
         * 
         */
        public Builder effect(String effect) {
            return effect(Output.of(effect));
        }

        /**
         * @param resources (It has been deprecated since version 1.49.0, and use field &#39;document&#39; to replace.) List of specific objects which will be authorized. The format of each item in this list is `acs:${service}:${region}:${account_id}:${relative_id}`, such as `acs:ecs:*:*:instance/inst-002` and `acs:oss:*:1234567890000:mybucket`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${region}` is the region info which can use `*` replace when it is not supplied, the `${account_id}` refers to someone&#39;s Alicloud account id or you can use `*` to replace, the `${relative_id}` is the resource description section which related to the `${service}`.
         * 
         * @return builder
         * 
         */
        public Builder resources(Output<List<String>> resources) {
            $.resources = resources;
            return this;
        }

        /**
         * @param resources (It has been deprecated since version 1.49.0, and use field &#39;document&#39; to replace.) List of specific objects which will be authorized. The format of each item in this list is `acs:${service}:${region}:${account_id}:${relative_id}`, such as `acs:ecs:*:*:instance/inst-002` and `acs:oss:*:1234567890000:mybucket`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${region}` is the region info which can use `*` replace when it is not supplied, the `${account_id}` refers to someone&#39;s Alicloud account id or you can use `*` to replace, the `${relative_id}` is the resource description section which related to the `${service}`.
         * 
         * @return builder
         * 
         */
        public Builder resources(List<String> resources) {
            return resources(Output.of(resources));
        }

        /**
         * @param resources (It has been deprecated since version 1.49.0, and use field &#39;document&#39; to replace.) List of specific objects which will be authorized. The format of each item in this list is `acs:${service}:${region}:${account_id}:${relative_id}`, such as `acs:ecs:*:*:instance/inst-002` and `acs:oss:*:1234567890000:mybucket`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${region}` is the region info which can use `*` replace when it is not supplied, the `${account_id}` refers to someone&#39;s Alicloud account id or you can use `*` to replace, the `${relative_id}` is the resource description section which related to the `${service}`.
         * 
         * @return builder
         * 
         */
        public Builder resources(String... resources) {
            return resources(List.of(resources));
        }

        public PolicyStatementArgs build() {
            $.actions = Objects.requireNonNull($.actions, "expected parameter 'actions' to be non-null");
            $.effect = Objects.requireNonNull($.effect, "expected parameter 'effect' to be non-null");
            $.resources = Objects.requireNonNull($.resources, "expected parameter 'resources' to be non-null");
            return $;
        }
    }

}
