// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudmonitor.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetServiceHybridDoubleWritesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetServiceHybridDoubleWritesArgs Empty = new GetServiceHybridDoubleWritesArgs();

    /**
     * A list of Hybrid Double Write IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of Hybrid Double Write IDs.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * Target Namespace.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return Target Namespace.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * Source Namespace.
     * 
     */
    @Import(name="sourceNamespace")
    private @Nullable Output<String> sourceNamespace;

    /**
     * @return Source Namespace.
     * 
     */
    public Optional<Output<String>> sourceNamespace() {
        return Optional.ofNullable(this.sourceNamespace);
    }

    /**
     * Source UserId.
     * 
     */
    @Import(name="sourceUserId")
    private @Nullable Output<String> sourceUserId;

    /**
     * @return Source UserId.
     * 
     */
    public Optional<Output<String>> sourceUserId() {
        return Optional.ofNullable(this.sourceUserId);
    }

    /**
     * Target UserId.
     * 
     */
    @Import(name="userId")
    private @Nullable Output<String> userId;

    /**
     * @return Target UserId.
     * 
     */
    public Optional<Output<String>> userId() {
        return Optional.ofNullable(this.userId);
    }

    private GetServiceHybridDoubleWritesArgs() {}

    private GetServiceHybridDoubleWritesArgs(GetServiceHybridDoubleWritesArgs $) {
        this.ids = $.ids;
        this.namespace = $.namespace;
        this.outputFile = $.outputFile;
        this.sourceNamespace = $.sourceNamespace;
        this.sourceUserId = $.sourceUserId;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServiceHybridDoubleWritesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServiceHybridDoubleWritesArgs $;

        public Builder() {
            $ = new GetServiceHybridDoubleWritesArgs();
        }

        public Builder(GetServiceHybridDoubleWritesArgs defaults) {
            $ = new GetServiceHybridDoubleWritesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ids A list of Hybrid Double Write IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Hybrid Double Write IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of Hybrid Double Write IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param namespace Target Namespace.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace Target Namespace.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        /**
         * @param sourceNamespace Source Namespace.
         * 
         * @return builder
         * 
         */
        public Builder sourceNamespace(@Nullable Output<String> sourceNamespace) {
            $.sourceNamespace = sourceNamespace;
            return this;
        }

        /**
         * @param sourceNamespace Source Namespace.
         * 
         * @return builder
         * 
         */
        public Builder sourceNamespace(String sourceNamespace) {
            return sourceNamespace(Output.of(sourceNamespace));
        }

        /**
         * @param sourceUserId Source UserId.
         * 
         * @return builder
         * 
         */
        public Builder sourceUserId(@Nullable Output<String> sourceUserId) {
            $.sourceUserId = sourceUserId;
            return this;
        }

        /**
         * @param sourceUserId Source UserId.
         * 
         * @return builder
         * 
         */
        public Builder sourceUserId(String sourceUserId) {
            return sourceUserId(Output.of(sourceUserId));
        }

        /**
         * @param userId Target UserId.
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable Output<String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId Target UserId.
         * 
         * @return builder
         * 
         */
        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        public GetServiceHybridDoubleWritesArgs build() {
            return $;
        }
    }

}
