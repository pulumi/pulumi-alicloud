// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class SiteMonitorIspCityArgs extends com.pulumi.resources.ResourceArgs {

    public static final SiteMonitorIspCityArgs Empty = new SiteMonitorIspCityArgs();

    /**
     * The ID of the city.
     * 
     */
    @Import(name="city", required=true)
    private Output<String> city;

    /**
     * @return The ID of the city.
     * 
     */
    public Output<String> city() {
        return this.city;
    }

    /**
     * The ID of the carrier.
     * 
     */
    @Import(name="isp", required=true)
    private Output<String> isp;

    /**
     * @return The ID of the carrier.
     * 
     */
    public Output<String> isp() {
        return this.isp;
    }

    private SiteMonitorIspCityArgs() {}

    private SiteMonitorIspCityArgs(SiteMonitorIspCityArgs $) {
        this.city = $.city;
        this.isp = $.isp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SiteMonitorIspCityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SiteMonitorIspCityArgs $;

        public Builder() {
            $ = new SiteMonitorIspCityArgs();
        }

        public Builder(SiteMonitorIspCityArgs defaults) {
            $ = new SiteMonitorIspCityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param city The ID of the city.
         * 
         * @return builder
         * 
         */
        public Builder city(Output<String> city) {
            $.city = city;
            return this;
        }

        /**
         * @param city The ID of the city.
         * 
         * @return builder
         * 
         */
        public Builder city(String city) {
            return city(Output.of(city));
        }

        /**
         * @param isp The ID of the carrier.
         * 
         * @return builder
         * 
         */
        public Builder isp(Output<String> isp) {
            $.isp = isp;
            return this;
        }

        /**
         * @param isp The ID of the carrier.
         * 
         * @return builder
         * 
         */
        public Builder isp(String isp) {
            return isp(Output.of(isp));
        }

        public SiteMonitorIspCityArgs build() {
            if ($.city == null) {
                throw new MissingRequiredPropertyException("SiteMonitorIspCityArgs", "city");
            }
            if ($.isp == null) {
                throw new MissingRequiredPropertyException("SiteMonitorIspCityArgs", "isp");
            }
            return $;
        }
    }

}
