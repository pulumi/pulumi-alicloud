// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dds.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMongoInstancesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMongoInstancesPlainArgs Empty = new GetMongoInstancesPlainArgs();

    @Import(name="availabilityZone")
    private @Nullable String availabilityZone;

    public Optional<String> availabilityZone() {
        return Optional.ofNullable(this.availabilityZone);
    }

    @Import(name="ids")
    private @Nullable List<String> ids;

    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    @Import(name="instanceClass")
    private @Nullable String instanceClass;

    public Optional<String> instanceClass() {
        return Optional.ofNullable(this.instanceClass);
    }

    @Import(name="instanceType")
    private @Nullable String instanceType;

    public Optional<String> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    @Import(name="nameRegex")
    private @Nullable String nameRegex;

    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    @Import(name="outputFile")
    private @Nullable String outputFile;

    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetMongoInstancesPlainArgs() {}

    private GetMongoInstancesPlainArgs(GetMongoInstancesPlainArgs $) {
        this.availabilityZone = $.availabilityZone;
        this.ids = $.ids;
        this.instanceClass = $.instanceClass;
        this.instanceType = $.instanceType;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMongoInstancesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMongoInstancesPlainArgs $;

        public Builder() {
            $ = new GetMongoInstancesPlainArgs();
        }

        public Builder(GetMongoInstancesPlainArgs defaults) {
            $ = new GetMongoInstancesPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder availabilityZone(@Nullable String availabilityZone) {
            $.availabilityZone = availabilityZone;
            return this;
        }

        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        public Builder instanceClass(@Nullable String instanceClass) {
            $.instanceClass = instanceClass;
            return this;
        }

        public Builder instanceType(@Nullable String instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        public Builder nameRegex(@Nullable String nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public GetMongoInstancesPlainArgs build() {
            return $;
        }
    }

}
