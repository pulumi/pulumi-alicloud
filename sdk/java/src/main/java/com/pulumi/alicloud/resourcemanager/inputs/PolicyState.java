// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.resourcemanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyState extends com.pulumi.resources.ResourceArgs {

    public static final PolicyState Empty = new PolicyState();

    /**
     * The version of the policy. Default to v1.
     * 
     * @deprecated
     * Field &#39;default_version&#39; has been deprecated from provider version 1.90.0
     * 
     */
    @Deprecated /* Field 'default_version' has been deprecated from provider version 1.90.0 */
    @Import(name="defaultVersion")
    private @Nullable Output<String> defaultVersion;

    /**
     * @return The version of the policy. Default to v1.
     * 
     * @deprecated
     * Field &#39;default_version&#39; has been deprecated from provider version 1.90.0
     * 
     */
    @Deprecated /* Field 'default_version' has been deprecated from provider version 1.90.0 */
    public Optional<Output<String>> defaultVersion() {
        return Optional.ofNullable(this.defaultVersion);
    }

    /**
     * The description of the policy. The description must be 1 to 1,024 characters in length.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the policy. The description must be 1 to 1,024 characters in length.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The content of the policy. The content must be 1 to 2,048 characters in length.
     * 
     */
    @Import(name="policyDocument")
    private @Nullable Output<String> policyDocument;

    /**
     * @return The content of the policy. The content must be 1 to 2,048 characters in length.
     * 
     */
    public Optional<Output<String>> policyDocument() {
        return Optional.ofNullable(this.policyDocument);
    }

    /**
     * The name of the policy. name must be 1 to 128 characters in length and can contain letters, digits, and hyphens (-).
     * 
     */
    @Import(name="policyName")
    private @Nullable Output<String> policyName;

    /**
     * @return The name of the policy. name must be 1 to 128 characters in length and can contain letters, digits, and hyphens (-).
     * 
     */
    public Optional<Output<String>> policyName() {
        return Optional.ofNullable(this.policyName);
    }

    /**
     * The type of the policy. Valid values: `Custom`, `System`.
     * 
     */
    @Import(name="policyType")
    private @Nullable Output<String> policyType;

    /**
     * @return The type of the policy. Valid values: `Custom`, `System`.
     * 
     */
    public Optional<Output<String>> policyType() {
        return Optional.ofNullable(this.policyType);
    }

    private PolicyState() {}

    private PolicyState(PolicyState $) {
        this.defaultVersion = $.defaultVersion;
        this.description = $.description;
        this.policyDocument = $.policyDocument;
        this.policyName = $.policyName;
        this.policyType = $.policyType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyState $;

        public Builder() {
            $ = new PolicyState();
        }

        public Builder(PolicyState defaults) {
            $ = new PolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultVersion The version of the policy. Default to v1.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;default_version&#39; has been deprecated from provider version 1.90.0
         * 
         */
        @Deprecated /* Field 'default_version' has been deprecated from provider version 1.90.0 */
        public Builder defaultVersion(@Nullable Output<String> defaultVersion) {
            $.defaultVersion = defaultVersion;
            return this;
        }

        /**
         * @param defaultVersion The version of the policy. Default to v1.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;default_version&#39; has been deprecated from provider version 1.90.0
         * 
         */
        @Deprecated /* Field 'default_version' has been deprecated from provider version 1.90.0 */
        public Builder defaultVersion(String defaultVersion) {
            return defaultVersion(Output.of(defaultVersion));
        }

        /**
         * @param description The description of the policy. The description must be 1 to 1,024 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the policy. The description must be 1 to 1,024 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param policyDocument The content of the policy. The content must be 1 to 2,048 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder policyDocument(@Nullable Output<String> policyDocument) {
            $.policyDocument = policyDocument;
            return this;
        }

        /**
         * @param policyDocument The content of the policy. The content must be 1 to 2,048 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder policyDocument(String policyDocument) {
            return policyDocument(Output.of(policyDocument));
        }

        /**
         * @param policyName The name of the policy. name must be 1 to 128 characters in length and can contain letters, digits, and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder policyName(@Nullable Output<String> policyName) {
            $.policyName = policyName;
            return this;
        }

        /**
         * @param policyName The name of the policy. name must be 1 to 128 characters in length and can contain letters, digits, and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder policyName(String policyName) {
            return policyName(Output.of(policyName));
        }

        /**
         * @param policyType The type of the policy. Valid values: `Custom`, `System`.
         * 
         * @return builder
         * 
         */
        public Builder policyType(@Nullable Output<String> policyType) {
            $.policyType = policyType;
            return this;
        }

        /**
         * @param policyType The type of the policy. Valid values: `Custom`, `System`.
         * 
         * @return builder
         * 
         */
        public Builder policyType(String policyType) {
            return policyType(Output.of(policyType));
        }

        public PolicyState build() {
            return $;
        }
    }

}
