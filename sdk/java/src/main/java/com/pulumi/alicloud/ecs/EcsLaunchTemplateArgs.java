// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs;

import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateDataDiskArgs;
import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateNetworkInterfacesArgs;
import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateSystemDiskArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EcsLaunchTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final EcsLaunchTemplateArgs Empty = new EcsLaunchTemplateArgs();

    /**
     * Instance auto release time. The time is presented using the ISO8601 standard and in UTC time. The format is  YYYY-MM-DDTHH:MM:SSZ.
     * 
     */
    @Import(name="autoReleaseTime")
    private @Nullable Output<String> autoReleaseTime;

    /**
     * @return Instance auto release time. The time is presented using the ISO8601 standard and in UTC time. The format is  YYYY-MM-DDTHH:MM:SSZ.
     * 
     */
    public Optional<Output<String>> autoReleaseTime() {
        return Optional.ofNullable(this.autoReleaseTime);
    }

    /**
     * The list of data disks created with instance. See `data_disks` below.
     * 
     */
    @Import(name="dataDisks")
    private @Nullable Output<List<EcsLaunchTemplateDataDiskArgs>> dataDisks;

    /**
     * @return The list of data disks created with instance. See `data_disks` below.
     * 
     */
    public Optional<Output<List<EcsLaunchTemplateDataDiskArgs>>> dataDisks() {
        return Optional.ofNullable(this.dataDisks);
    }

    /**
     * The Deployment Set Id.
     * 
     */
    @Import(name="deploymentSetId")
    private @Nullable Output<String> deploymentSetId;

    /**
     * @return The Deployment Set Id.
     * 
     */
    public Optional<Output<String>> deploymentSetId() {
        return Optional.ofNullable(this.deploymentSetId);
    }

    /**
     * Description of instance launch template version 1. It can be [2, 256] characters in length. It cannot start with &#34;http://&#34; or &#34;https://&#34;. The default value is null.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of instance launch template version 1. It can be [2, 256] characters in length. It cannot start with &#34;http://&#34; or &#34;https://&#34;. The default value is null.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Whether to enable the instance operating system configuration.
     * 
     */
    @Import(name="enableVmOsConfig")
    private @Nullable Output<Boolean> enableVmOsConfig;

    /**
     * @return Whether to enable the instance operating system configuration.
     * 
     */
    public Optional<Output<Boolean>> enableVmOsConfig() {
        return Optional.ofNullable(this.enableVmOsConfig);
    }

    /**
     * Instance host name.It cannot start or end with a period (.) or a hyphen (-) and it cannot have two or more consecutive periods (.) or hyphens (-).For Windows: The host name can be [2, 15] characters in length. It can contain A-Z, a-z, numbers, periods (.), and hyphens (-). It cannot only contain numbers. For other operating systems: The host name can be [2, 64] characters in length. It can be segments separated by periods (.). It can contain A-Z, a-z, numbers, and hyphens (-).
     * 
     */
    @Import(name="hostName")
    private @Nullable Output<String> hostName;

    /**
     * @return Instance host name.It cannot start or end with a period (.) or a hyphen (-) and it cannot have two or more consecutive periods (.) or hyphens (-).For Windows: The host name can be [2, 15] characters in length. It can contain A-Z, a-z, numbers, periods (.), and hyphens (-). It cannot only contain numbers. For other operating systems: The host name can be [2, 64] characters in length. It can be segments separated by periods (.). It can contain A-Z, a-z, numbers, and hyphens (-).
     * 
     */
    public Optional<Output<String>> hostName() {
        return Optional.ofNullable(this.hostName);
    }

    /**
     * The Image ID.
     * 
     */
    @Import(name="imageId")
    private @Nullable Output<String> imageId;

    /**
     * @return The Image ID.
     * 
     */
    public Optional<Output<String>> imageId() {
        return Optional.ofNullable(this.imageId);
    }

    /**
     * Mirror source. Valid values: `system`, `self`, `others`, `marketplace`, `&#34;&#34;`. Default to: `&#34;&#34;`.
     * 
     */
    @Import(name="imageOwnerAlias")
    private @Nullable Output<String> imageOwnerAlias;

    /**
     * @return Mirror source. Valid values: `system`, `self`, `others`, `marketplace`, `&#34;&#34;`. Default to: `&#34;&#34;`.
     * 
     */
    public Optional<Output<String>> imageOwnerAlias() {
        return Optional.ofNullable(this.imageOwnerAlias);
    }

    /**
     * Billing methods. Valid values: `PostPaid`, `PrePaid`.
     * 
     */
    @Import(name="instanceChargeType")
    private @Nullable Output<String> instanceChargeType;

    /**
     * @return Billing methods. Valid values: `PostPaid`, `PrePaid`.
     * 
     */
    public Optional<Output<String>> instanceChargeType() {
        return Optional.ofNullable(this.instanceChargeType);
    }

    /**
     * The name of the instance. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), and hyphens (-).
     * 
     */
    @Import(name="instanceName")
    private @Nullable Output<String> instanceName;

    /**
     * @return The name of the instance. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), and hyphens (-).
     * 
     */
    public Optional<Output<String>> instanceName() {
        return Optional.ofNullable(this.instanceName);
    }

    /**
     * Instance type. For more information, call resource_alicloud_instances to obtain the latest instance type list.
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    /**
     * @return Instance type. For more information, call resource_alicloud_instances to obtain the latest instance type list.
     * 
     */
    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * Internet bandwidth billing method. Valid values: `PayByTraffic`, `PayByBandwidth`.
     * 
     */
    @Import(name="internetChargeType")
    private @Nullable Output<String> internetChargeType;

    /**
     * @return Internet bandwidth billing method. Valid values: `PayByTraffic`, `PayByBandwidth`.
     * 
     */
    public Optional<Output<String>> internetChargeType() {
        return Optional.ofNullable(this.internetChargeType);
    }

    /**
     * The maximum inbound bandwidth from the Internet network, measured in Mbit/s. Value range: [1, 200].
     * 
     */
    @Import(name="internetMaxBandwidthIn")
    private @Nullable Output<Integer> internetMaxBandwidthIn;

    /**
     * @return The maximum inbound bandwidth from the Internet network, measured in Mbit/s. Value range: [1, 200].
     * 
     */
    public Optional<Output<Integer>> internetMaxBandwidthIn() {
        return Optional.ofNullable(this.internetMaxBandwidthIn);
    }

    /**
     * Maximum outbound bandwidth from the Internet, its unit of measurement is Mbit/s. Value range: [0, 100].
     * 
     */
    @Import(name="internetMaxBandwidthOut")
    private @Nullable Output<Integer> internetMaxBandwidthOut;

    /**
     * @return Maximum outbound bandwidth from the Internet, its unit of measurement is Mbit/s. Value range: [0, 100].
     * 
     */
    public Optional<Output<Integer>> internetMaxBandwidthOut() {
        return Optional.ofNullable(this.internetMaxBandwidthOut);
    }

    /**
     * Whether it is an I/O-optimized instance or not. Valid values: `none`, `optimized`.
     * 
     */
    @Import(name="ioOptimized")
    private @Nullable Output<String> ioOptimized;

    /**
     * @return Whether it is an I/O-optimized instance or not. Valid values: `none`, `optimized`.
     * 
     */
    public Optional<Output<String>> ioOptimized() {
        return Optional.ofNullable(this.ioOptimized);
    }

    /**
     * The name of the key pair.
     * - Ignore this parameter for Windows instances. It is null by default. Even if you enter this parameter, only the  Password content is used.
     * - The password logon method for Linux instances is set to forbidden upon initialization.
     * 
     */
    @Import(name="keyPairName")
    private @Nullable Output<String> keyPairName;

    /**
     * @return The name of the key pair.
     * - Ignore this parameter for Windows instances. It is null by default. Even if you enter this parameter, only the  Password content is used.
     * - The password logon method for Linux instances is set to forbidden upon initialization.
     * 
     */
    public Optional<Output<String>> keyPairName() {
        return Optional.ofNullable(this.keyPairName);
    }

    /**
     * The name of Launch Template.
     * 
     */
    @Import(name="launchTemplateName")
    private @Nullable Output<String> launchTemplateName;

    /**
     * @return The name of Launch Template.
     * 
     */
    public Optional<Output<String>> launchTemplateName() {
        return Optional.ofNullable(this.launchTemplateName);
    }

    /**
     * It has been deprecated from version 1.120.0, and use field `launch_template_name` instead.
     * 
     * @deprecated
     * Field &#39;name&#39; has been deprecated from provider version 1.120.0. New field &#39;launch_template_name&#39; instead.
     * 
     */
    @Deprecated /* Field 'name' has been deprecated from provider version 1.120.0. New field 'launch_template_name' instead. */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return It has been deprecated from version 1.120.0, and use field `launch_template_name` instead.
     * 
     * @deprecated
     * Field &#39;name&#39; has been deprecated from provider version 1.120.0. New field &#39;launch_template_name&#39; instead.
     * 
     */
    @Deprecated /* Field 'name' has been deprecated from provider version 1.120.0. New field 'launch_template_name' instead. */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The list of network interfaces created with instance. See `network_interfaces` below.
     * 
     */
    @Import(name="networkInterfaces")
    private @Nullable Output<EcsLaunchTemplateNetworkInterfacesArgs> networkInterfaces;

    /**
     * @return The list of network interfaces created with instance. See `network_interfaces` below.
     * 
     */
    public Optional<Output<EcsLaunchTemplateNetworkInterfacesArgs>> networkInterfaces() {
        return Optional.ofNullable(this.networkInterfaces);
    }

    /**
     * Network type of the instance. Valid values: `classic`, `vpc`.
     * 
     */
    @Import(name="networkType")
    private @Nullable Output<String> networkType;

    /**
     * @return Network type of the instance. Valid values: `classic`, `vpc`.
     * 
     */
    public Optional<Output<String>> networkType() {
        return Optional.ofNullable(this.networkType);
    }

    /**
     * Whether to use the password preset by the mirror.
     * 
     */
    @Import(name="passwordInherit")
    private @Nullable Output<Boolean> passwordInherit;

    /**
     * @return Whether to use the password preset by the mirror.
     * 
     */
    public Optional<Output<Boolean>> passwordInherit() {
        return Optional.ofNullable(this.passwordInherit);
    }

    /**
     * The subscription period of the instance. Unit: months. This parameter takes effect and is required only when InstanceChargeType is set to PrePaid. If the DedicatedHostId parameter is specified, the value of the Period parameter must be within the subscription period of the dedicated host.
     * - When the PeriodUnit parameter is set to `Week`, the valid values of the Period parameter are `1`, `2`, `3`, and `4`.
     * - When the PeriodUnit parameter is set to `Month`, the valid values of the Period parameter are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `12`, `24`, `36`, `48`, and `60`.
     * 
     */
    @Import(name="period")
    private @Nullable Output<Integer> period;

    /**
     * @return The subscription period of the instance. Unit: months. This parameter takes effect and is required only when InstanceChargeType is set to PrePaid. If the DedicatedHostId parameter is specified, the value of the Period parameter must be within the subscription period of the dedicated host.
     * - When the PeriodUnit parameter is set to `Week`, the valid values of the Period parameter are `1`, `2`, `3`, and `4`.
     * - When the PeriodUnit parameter is set to `Month`, the valid values of the Period parameter are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `12`, `24`, `36`, `48`, and `60`.
     * 
     */
    public Optional<Output<Integer>> period() {
        return Optional.ofNullable(this.period);
    }

    /**
     * The private IP address of the instance.
     * 
     */
    @Import(name="privateIpAddress")
    private @Nullable Output<String> privateIpAddress;

    /**
     * @return The private IP address of the instance.
     * 
     */
    public Optional<Output<String>> privateIpAddress() {
        return Optional.ofNullable(this.privateIpAddress);
    }

    /**
     * The RAM role name of the instance. You can use the RAM API ListRoles to query instance RAM role names.
     * 
     */
    @Import(name="ramRoleName")
    private @Nullable Output<String> ramRoleName;

    /**
     * @return The RAM role name of the instance. You can use the RAM API ListRoles to query instance RAM role names.
     * 
     */
    public Optional<Output<String>> ramRoleName() {
        return Optional.ofNullable(this.ramRoleName);
    }

    /**
     * The ID of the resource group to which to assign the instance, Elastic Block Storage (EBS) device, and ENI.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group to which to assign the instance, Elastic Block Storage (EBS) device, and ENI.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * Whether or not to activate the security enhancement feature and install network security software free of charge. Valid values: `Active`, `Deactive`.
     * 
     */
    @Import(name="securityEnhancementStrategy")
    private @Nullable Output<String> securityEnhancementStrategy;

    /**
     * @return Whether or not to activate the security enhancement feature and install network security software free of charge. Valid values: `Active`, `Deactive`.
     * 
     */
    public Optional<Output<String>> securityEnhancementStrategy() {
        return Optional.ofNullable(this.securityEnhancementStrategy);
    }

    /**
     * The security group ID.
     * 
     */
    @Import(name="securityGroupId")
    private @Nullable Output<String> securityGroupId;

    /**
     * @return The security group ID.
     * 
     */
    public Optional<Output<String>> securityGroupId() {
        return Optional.ofNullable(this.securityGroupId);
    }

    /**
     * The ID of security group N to which to assign the instance.
     * 
     */
    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    /**
     * @return The ID of security group N to which to assign the instance.
     * 
     */
    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    /**
     * The protection period of the preemptible instance. Unit: hours. Valid values: `0`, `1`, `2`, `3`, `4`, `5`, and `6`. Default to: `1`.
     * 
     */
    @Import(name="spotDuration")
    private @Nullable Output<String> spotDuration;

    /**
     * @return The protection period of the preemptible instance. Unit: hours. Valid values: `0`, `1`, `2`, `3`, `4`, `5`, and `6`. Default to: `1`.
     * 
     */
    public Optional<Output<String>> spotDuration() {
        return Optional.ofNullable(this.spotDuration);
    }

    /**
     * Sets the maximum hourly instance price. Supports up to three decimal places.
     * 
     */
    @Import(name="spotPriceLimit")
    private @Nullable Output<Double> spotPriceLimit;

    /**
     * @return Sets the maximum hourly instance price. Supports up to three decimal places.
     * 
     */
    public Optional<Output<Double>> spotPriceLimit() {
        return Optional.ofNullable(this.spotPriceLimit);
    }

    /**
     * The spot strategy for a Pay-As-You-Go instance. This parameter is valid and required only when InstanceChargeType is set to PostPaid. Valid values: `NoSpot`, `SpotAsPriceGo`, `SpotWithPriceLimit`.
     * 
     */
    @Import(name="spotStrategy")
    private @Nullable Output<String> spotStrategy;

    /**
     * @return The spot strategy for a Pay-As-You-Go instance. This parameter is valid and required only when InstanceChargeType is set to PostPaid. Valid values: `NoSpot`, `SpotAsPriceGo`, `SpotWithPriceLimit`.
     * 
     */
    public Optional<Output<String>> spotStrategy() {
        return Optional.ofNullable(this.spotStrategy);
    }

    /**
     * The System Disk. See `system_disk` below.
     * 
     */
    @Import(name="systemDisk")
    private @Nullable Output<EcsLaunchTemplateSystemDiskArgs> systemDisk;

    /**
     * @return The System Disk. See `system_disk` below.
     * 
     */
    public Optional<Output<EcsLaunchTemplateSystemDiskArgs>> systemDisk() {
        return Optional.ofNullable(this.systemDisk);
    }

    /**
     * It has been deprecated from version 1.120.0, and use field `system_disk` instead.
     * 
     * @deprecated
     * Field &#39;system_disk_category&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
     * 
     */
    @Deprecated /* Field 'system_disk_category' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
    @Import(name="systemDiskCategory")
    private @Nullable Output<String> systemDiskCategory;

    /**
     * @return It has been deprecated from version 1.120.0, and use field `system_disk` instead.
     * 
     * @deprecated
     * Field &#39;system_disk_category&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
     * 
     */
    @Deprecated /* Field 'system_disk_category' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
    public Optional<Output<String>> systemDiskCategory() {
        return Optional.ofNullable(this.systemDiskCategory);
    }

    /**
     * It has been deprecated from version 1.120.0, and use field `system_disk` instead.
     * 
     * @deprecated
     * Field &#39;system_disk_description&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
     * 
     */
    @Deprecated /* Field 'system_disk_description' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
    @Import(name="systemDiskDescription")
    private @Nullable Output<String> systemDiskDescription;

    /**
     * @return It has been deprecated from version 1.120.0, and use field `system_disk` instead.
     * 
     * @deprecated
     * Field &#39;system_disk_description&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
     * 
     */
    @Deprecated /* Field 'system_disk_description' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
    public Optional<Output<String>> systemDiskDescription() {
        return Optional.ofNullable(this.systemDiskDescription);
    }

    /**
     * It has been deprecated from version 1.120.0, and use field `system_disk` instead.
     * 
     * @deprecated
     * Field &#39;system_disk_name&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
     * 
     */
    @Deprecated /* Field 'system_disk_name' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
    @Import(name="systemDiskName")
    private @Nullable Output<String> systemDiskName;

    /**
     * @return It has been deprecated from version 1.120.0, and use field `system_disk` instead.
     * 
     * @deprecated
     * Field &#39;system_disk_name&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
     * 
     */
    @Deprecated /* Field 'system_disk_name' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
    public Optional<Output<String>> systemDiskName() {
        return Optional.ofNullable(this.systemDiskName);
    }

    /**
     * It has been deprecated from version 1.120.0, and use field `system_disk` instead.
     * 
     * @deprecated
     * Field &#39;system_disk_size&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
     * 
     */
    @Deprecated /* Field 'system_disk_size' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
    @Import(name="systemDiskSize")
    private @Nullable Output<Integer> systemDiskSize;

    /**
     * @return It has been deprecated from version 1.120.0, and use field `system_disk` instead.
     * 
     * @deprecated
     * Field &#39;system_disk_size&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
     * 
     */
    @Deprecated /* Field 'system_disk_size' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
    public Optional<Output<Integer>> systemDiskSize() {
        return Optional.ofNullable(this.systemDiskSize);
    }

    /**
     * A mapping of tags to assign to instance, block storage, and elastic network.
     * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    /**
     * @return A mapping of tags to assign to instance, block storage, and elastic network.
     * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
     * 
     */
    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The template resource group id.
     * 
     */
    @Import(name="templateResourceGroupId")
    private @Nullable Output<String> templateResourceGroupId;

    /**
     * @return The template resource group id.
     * 
     */
    public Optional<Output<String>> templateResourceGroupId() {
        return Optional.ofNullable(this.templateResourceGroupId);
    }

    /**
     * A mapping of tags to assign to the launch template.
     * 
     */
    @Import(name="templateTags")
    private @Nullable Output<Map<String,Object>> templateTags;

    /**
     * @return A mapping of tags to assign to the launch template.
     * 
     */
    public Optional<Output<Map<String,Object>>> templateTags() {
        return Optional.ofNullable(this.templateTags);
    }

    /**
     * The User Data.
     * 
     */
    @Import(name="userData")
    private @Nullable Output<String> userData;

    /**
     * @return The User Data.
     * 
     */
    public Optional<Output<String>> userData() {
        return Optional.ofNullable(this.userData);
    }

    /**
     * It has been deprecated from version 1.120.0, and use field `user_data` instead.
     * 
     * @deprecated
     * Field &#39;userdata&#39; has been deprecated from provider version 1.120.0. New field &#39;user_data&#39; instead.
     * 
     */
    @Deprecated /* Field 'userdata' has been deprecated from provider version 1.120.0. New field 'user_data' instead. */
    @Import(name="userdata")
    private @Nullable Output<String> userdata;

    /**
     * @return It has been deprecated from version 1.120.0, and use field `user_data` instead.
     * 
     * @deprecated
     * Field &#39;userdata&#39; has been deprecated from provider version 1.120.0. New field &#39;user_data&#39; instead.
     * 
     */
    @Deprecated /* Field 'userdata' has been deprecated from provider version 1.120.0. New field 'user_data' instead. */
    public Optional<Output<String>> userdata() {
        return Optional.ofNullable(this.userdata);
    }

    /**
     * The description of the launch template version. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
     * 
     */
    @Import(name="versionDescription")
    private @Nullable Output<String> versionDescription;

    /**
     * @return The description of the launch template version. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
     * 
     */
    public Optional<Output<String>> versionDescription() {
        return Optional.ofNullable(this.versionDescription);
    }

    /**
     * The ID of the VPC.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The ID of the VPC.
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    /**
     * When creating a VPC-Connected instance, you must specify its VSwitch ID.
     * 
     */
    @Import(name="vswitchId")
    private @Nullable Output<String> vswitchId;

    /**
     * @return When creating a VPC-Connected instance, you must specify its VSwitch ID.
     * 
     */
    public Optional<Output<String>> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    /**
     * The zone ID of the instance.
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return The zone ID of the instance.
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private EcsLaunchTemplateArgs() {}

    private EcsLaunchTemplateArgs(EcsLaunchTemplateArgs $) {
        this.autoReleaseTime = $.autoReleaseTime;
        this.dataDisks = $.dataDisks;
        this.deploymentSetId = $.deploymentSetId;
        this.description = $.description;
        this.enableVmOsConfig = $.enableVmOsConfig;
        this.hostName = $.hostName;
        this.imageId = $.imageId;
        this.imageOwnerAlias = $.imageOwnerAlias;
        this.instanceChargeType = $.instanceChargeType;
        this.instanceName = $.instanceName;
        this.instanceType = $.instanceType;
        this.internetChargeType = $.internetChargeType;
        this.internetMaxBandwidthIn = $.internetMaxBandwidthIn;
        this.internetMaxBandwidthOut = $.internetMaxBandwidthOut;
        this.ioOptimized = $.ioOptimized;
        this.keyPairName = $.keyPairName;
        this.launchTemplateName = $.launchTemplateName;
        this.name = $.name;
        this.networkInterfaces = $.networkInterfaces;
        this.networkType = $.networkType;
        this.passwordInherit = $.passwordInherit;
        this.period = $.period;
        this.privateIpAddress = $.privateIpAddress;
        this.ramRoleName = $.ramRoleName;
        this.resourceGroupId = $.resourceGroupId;
        this.securityEnhancementStrategy = $.securityEnhancementStrategy;
        this.securityGroupId = $.securityGroupId;
        this.securityGroupIds = $.securityGroupIds;
        this.spotDuration = $.spotDuration;
        this.spotPriceLimit = $.spotPriceLimit;
        this.spotStrategy = $.spotStrategy;
        this.systemDisk = $.systemDisk;
        this.systemDiskCategory = $.systemDiskCategory;
        this.systemDiskDescription = $.systemDiskDescription;
        this.systemDiskName = $.systemDiskName;
        this.systemDiskSize = $.systemDiskSize;
        this.tags = $.tags;
        this.templateResourceGroupId = $.templateResourceGroupId;
        this.templateTags = $.templateTags;
        this.userData = $.userData;
        this.userdata = $.userdata;
        this.versionDescription = $.versionDescription;
        this.vpcId = $.vpcId;
        this.vswitchId = $.vswitchId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EcsLaunchTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EcsLaunchTemplateArgs $;

        public Builder() {
            $ = new EcsLaunchTemplateArgs();
        }

        public Builder(EcsLaunchTemplateArgs defaults) {
            $ = new EcsLaunchTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoReleaseTime Instance auto release time. The time is presented using the ISO8601 standard and in UTC time. The format is  YYYY-MM-DDTHH:MM:SSZ.
         * 
         * @return builder
         * 
         */
        public Builder autoReleaseTime(@Nullable Output<String> autoReleaseTime) {
            $.autoReleaseTime = autoReleaseTime;
            return this;
        }

        /**
         * @param autoReleaseTime Instance auto release time. The time is presented using the ISO8601 standard and in UTC time. The format is  YYYY-MM-DDTHH:MM:SSZ.
         * 
         * @return builder
         * 
         */
        public Builder autoReleaseTime(String autoReleaseTime) {
            return autoReleaseTime(Output.of(autoReleaseTime));
        }

        /**
         * @param dataDisks The list of data disks created with instance. See `data_disks` below.
         * 
         * @return builder
         * 
         */
        public Builder dataDisks(@Nullable Output<List<EcsLaunchTemplateDataDiskArgs>> dataDisks) {
            $.dataDisks = dataDisks;
            return this;
        }

        /**
         * @param dataDisks The list of data disks created with instance. See `data_disks` below.
         * 
         * @return builder
         * 
         */
        public Builder dataDisks(List<EcsLaunchTemplateDataDiskArgs> dataDisks) {
            return dataDisks(Output.of(dataDisks));
        }

        /**
         * @param dataDisks The list of data disks created with instance. See `data_disks` below.
         * 
         * @return builder
         * 
         */
        public Builder dataDisks(EcsLaunchTemplateDataDiskArgs... dataDisks) {
            return dataDisks(List.of(dataDisks));
        }

        /**
         * @param deploymentSetId The Deployment Set Id.
         * 
         * @return builder
         * 
         */
        public Builder deploymentSetId(@Nullable Output<String> deploymentSetId) {
            $.deploymentSetId = deploymentSetId;
            return this;
        }

        /**
         * @param deploymentSetId The Deployment Set Id.
         * 
         * @return builder
         * 
         */
        public Builder deploymentSetId(String deploymentSetId) {
            return deploymentSetId(Output.of(deploymentSetId));
        }

        /**
         * @param description Description of instance launch template version 1. It can be [2, 256] characters in length. It cannot start with &#34;http://&#34; or &#34;https://&#34;. The default value is null.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of instance launch template version 1. It can be [2, 256] characters in length. It cannot start with &#34;http://&#34; or &#34;https://&#34;. The default value is null.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param enableVmOsConfig Whether to enable the instance operating system configuration.
         * 
         * @return builder
         * 
         */
        public Builder enableVmOsConfig(@Nullable Output<Boolean> enableVmOsConfig) {
            $.enableVmOsConfig = enableVmOsConfig;
            return this;
        }

        /**
         * @param enableVmOsConfig Whether to enable the instance operating system configuration.
         * 
         * @return builder
         * 
         */
        public Builder enableVmOsConfig(Boolean enableVmOsConfig) {
            return enableVmOsConfig(Output.of(enableVmOsConfig));
        }

        /**
         * @param hostName Instance host name.It cannot start or end with a period (.) or a hyphen (-) and it cannot have two or more consecutive periods (.) or hyphens (-).For Windows: The host name can be [2, 15] characters in length. It can contain A-Z, a-z, numbers, periods (.), and hyphens (-). It cannot only contain numbers. For other operating systems: The host name can be [2, 64] characters in length. It can be segments separated by periods (.). It can contain A-Z, a-z, numbers, and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder hostName(@Nullable Output<String> hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param hostName Instance host name.It cannot start or end with a period (.) or a hyphen (-) and it cannot have two or more consecutive periods (.) or hyphens (-).For Windows: The host name can be [2, 15] characters in length. It can contain A-Z, a-z, numbers, periods (.), and hyphens (-). It cannot only contain numbers. For other operating systems: The host name can be [2, 64] characters in length. It can be segments separated by periods (.). It can contain A-Z, a-z, numbers, and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder hostName(String hostName) {
            return hostName(Output.of(hostName));
        }

        /**
         * @param imageId The Image ID.
         * 
         * @return builder
         * 
         */
        public Builder imageId(@Nullable Output<String> imageId) {
            $.imageId = imageId;
            return this;
        }

        /**
         * @param imageId The Image ID.
         * 
         * @return builder
         * 
         */
        public Builder imageId(String imageId) {
            return imageId(Output.of(imageId));
        }

        /**
         * @param imageOwnerAlias Mirror source. Valid values: `system`, `self`, `others`, `marketplace`, `&#34;&#34;`. Default to: `&#34;&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder imageOwnerAlias(@Nullable Output<String> imageOwnerAlias) {
            $.imageOwnerAlias = imageOwnerAlias;
            return this;
        }

        /**
         * @param imageOwnerAlias Mirror source. Valid values: `system`, `self`, `others`, `marketplace`, `&#34;&#34;`. Default to: `&#34;&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder imageOwnerAlias(String imageOwnerAlias) {
            return imageOwnerAlias(Output.of(imageOwnerAlias));
        }

        /**
         * @param instanceChargeType Billing methods. Valid values: `PostPaid`, `PrePaid`.
         * 
         * @return builder
         * 
         */
        public Builder instanceChargeType(@Nullable Output<String> instanceChargeType) {
            $.instanceChargeType = instanceChargeType;
            return this;
        }

        /**
         * @param instanceChargeType Billing methods. Valid values: `PostPaid`, `PrePaid`.
         * 
         * @return builder
         * 
         */
        public Builder instanceChargeType(String instanceChargeType) {
            return instanceChargeType(Output.of(instanceChargeType));
        }

        /**
         * @param instanceName The name of the instance. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder instanceName(@Nullable Output<String> instanceName) {
            $.instanceName = instanceName;
            return this;
        }

        /**
         * @param instanceName The name of the instance. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder instanceName(String instanceName) {
            return instanceName(Output.of(instanceName));
        }

        /**
         * @param instanceType Instance type. For more information, call resource_alicloud_instances to obtain the latest instance type list.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType Instance type. For more information, call resource_alicloud_instances to obtain the latest instance type list.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param internetChargeType Internet bandwidth billing method. Valid values: `PayByTraffic`, `PayByBandwidth`.
         * 
         * @return builder
         * 
         */
        public Builder internetChargeType(@Nullable Output<String> internetChargeType) {
            $.internetChargeType = internetChargeType;
            return this;
        }

        /**
         * @param internetChargeType Internet bandwidth billing method. Valid values: `PayByTraffic`, `PayByBandwidth`.
         * 
         * @return builder
         * 
         */
        public Builder internetChargeType(String internetChargeType) {
            return internetChargeType(Output.of(internetChargeType));
        }

        /**
         * @param internetMaxBandwidthIn The maximum inbound bandwidth from the Internet network, measured in Mbit/s. Value range: [1, 200].
         * 
         * @return builder
         * 
         */
        public Builder internetMaxBandwidthIn(@Nullable Output<Integer> internetMaxBandwidthIn) {
            $.internetMaxBandwidthIn = internetMaxBandwidthIn;
            return this;
        }

        /**
         * @param internetMaxBandwidthIn The maximum inbound bandwidth from the Internet network, measured in Mbit/s. Value range: [1, 200].
         * 
         * @return builder
         * 
         */
        public Builder internetMaxBandwidthIn(Integer internetMaxBandwidthIn) {
            return internetMaxBandwidthIn(Output.of(internetMaxBandwidthIn));
        }

        /**
         * @param internetMaxBandwidthOut Maximum outbound bandwidth from the Internet, its unit of measurement is Mbit/s. Value range: [0, 100].
         * 
         * @return builder
         * 
         */
        public Builder internetMaxBandwidthOut(@Nullable Output<Integer> internetMaxBandwidthOut) {
            $.internetMaxBandwidthOut = internetMaxBandwidthOut;
            return this;
        }

        /**
         * @param internetMaxBandwidthOut Maximum outbound bandwidth from the Internet, its unit of measurement is Mbit/s. Value range: [0, 100].
         * 
         * @return builder
         * 
         */
        public Builder internetMaxBandwidthOut(Integer internetMaxBandwidthOut) {
            return internetMaxBandwidthOut(Output.of(internetMaxBandwidthOut));
        }

        /**
         * @param ioOptimized Whether it is an I/O-optimized instance or not. Valid values: `none`, `optimized`.
         * 
         * @return builder
         * 
         */
        public Builder ioOptimized(@Nullable Output<String> ioOptimized) {
            $.ioOptimized = ioOptimized;
            return this;
        }

        /**
         * @param ioOptimized Whether it is an I/O-optimized instance or not. Valid values: `none`, `optimized`.
         * 
         * @return builder
         * 
         */
        public Builder ioOptimized(String ioOptimized) {
            return ioOptimized(Output.of(ioOptimized));
        }

        /**
         * @param keyPairName The name of the key pair.
         * - Ignore this parameter for Windows instances. It is null by default. Even if you enter this parameter, only the  Password content is used.
         * - The password logon method for Linux instances is set to forbidden upon initialization.
         * 
         * @return builder
         * 
         */
        public Builder keyPairName(@Nullable Output<String> keyPairName) {
            $.keyPairName = keyPairName;
            return this;
        }

        /**
         * @param keyPairName The name of the key pair.
         * - Ignore this parameter for Windows instances. It is null by default. Even if you enter this parameter, only the  Password content is used.
         * - The password logon method for Linux instances is set to forbidden upon initialization.
         * 
         * @return builder
         * 
         */
        public Builder keyPairName(String keyPairName) {
            return keyPairName(Output.of(keyPairName));
        }

        /**
         * @param launchTemplateName The name of Launch Template.
         * 
         * @return builder
         * 
         */
        public Builder launchTemplateName(@Nullable Output<String> launchTemplateName) {
            $.launchTemplateName = launchTemplateName;
            return this;
        }

        /**
         * @param launchTemplateName The name of Launch Template.
         * 
         * @return builder
         * 
         */
        public Builder launchTemplateName(String launchTemplateName) {
            return launchTemplateName(Output.of(launchTemplateName));
        }

        /**
         * @param name It has been deprecated from version 1.120.0, and use field `launch_template_name` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;name&#39; has been deprecated from provider version 1.120.0. New field &#39;launch_template_name&#39; instead.
         * 
         */
        @Deprecated /* Field 'name' has been deprecated from provider version 1.120.0. New field 'launch_template_name' instead. */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name It has been deprecated from version 1.120.0, and use field `launch_template_name` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;name&#39; has been deprecated from provider version 1.120.0. New field &#39;launch_template_name&#39; instead.
         * 
         */
        @Deprecated /* Field 'name' has been deprecated from provider version 1.120.0. New field 'launch_template_name' instead. */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkInterfaces The list of network interfaces created with instance. See `network_interfaces` below.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaces(@Nullable Output<EcsLaunchTemplateNetworkInterfacesArgs> networkInterfaces) {
            $.networkInterfaces = networkInterfaces;
            return this;
        }

        /**
         * @param networkInterfaces The list of network interfaces created with instance. See `network_interfaces` below.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaces(EcsLaunchTemplateNetworkInterfacesArgs networkInterfaces) {
            return networkInterfaces(Output.of(networkInterfaces));
        }

        /**
         * @param networkType Network type of the instance. Valid values: `classic`, `vpc`.
         * 
         * @return builder
         * 
         */
        public Builder networkType(@Nullable Output<String> networkType) {
            $.networkType = networkType;
            return this;
        }

        /**
         * @param networkType Network type of the instance. Valid values: `classic`, `vpc`.
         * 
         * @return builder
         * 
         */
        public Builder networkType(String networkType) {
            return networkType(Output.of(networkType));
        }

        /**
         * @param passwordInherit Whether to use the password preset by the mirror.
         * 
         * @return builder
         * 
         */
        public Builder passwordInherit(@Nullable Output<Boolean> passwordInherit) {
            $.passwordInherit = passwordInherit;
            return this;
        }

        /**
         * @param passwordInherit Whether to use the password preset by the mirror.
         * 
         * @return builder
         * 
         */
        public Builder passwordInherit(Boolean passwordInherit) {
            return passwordInherit(Output.of(passwordInherit));
        }

        /**
         * @param period The subscription period of the instance. Unit: months. This parameter takes effect and is required only when InstanceChargeType is set to PrePaid. If the DedicatedHostId parameter is specified, the value of the Period parameter must be within the subscription period of the dedicated host.
         * - When the PeriodUnit parameter is set to `Week`, the valid values of the Period parameter are `1`, `2`, `3`, and `4`.
         * - When the PeriodUnit parameter is set to `Month`, the valid values of the Period parameter are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `12`, `24`, `36`, `48`, and `60`.
         * 
         * @return builder
         * 
         */
        public Builder period(@Nullable Output<Integer> period) {
            $.period = period;
            return this;
        }

        /**
         * @param period The subscription period of the instance. Unit: months. This parameter takes effect and is required only when InstanceChargeType is set to PrePaid. If the DedicatedHostId parameter is specified, the value of the Period parameter must be within the subscription period of the dedicated host.
         * - When the PeriodUnit parameter is set to `Week`, the valid values of the Period parameter are `1`, `2`, `3`, and `4`.
         * - When the PeriodUnit parameter is set to `Month`, the valid values of the Period parameter are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `12`, `24`, `36`, `48`, and `60`.
         * 
         * @return builder
         * 
         */
        public Builder period(Integer period) {
            return period(Output.of(period));
        }

        /**
         * @param privateIpAddress The private IP address of the instance.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(@Nullable Output<String> privateIpAddress) {
            $.privateIpAddress = privateIpAddress;
            return this;
        }

        /**
         * @param privateIpAddress The private IP address of the instance.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(String privateIpAddress) {
            return privateIpAddress(Output.of(privateIpAddress));
        }

        /**
         * @param ramRoleName The RAM role name of the instance. You can use the RAM API ListRoles to query instance RAM role names.
         * 
         * @return builder
         * 
         */
        public Builder ramRoleName(@Nullable Output<String> ramRoleName) {
            $.ramRoleName = ramRoleName;
            return this;
        }

        /**
         * @param ramRoleName The RAM role name of the instance. You can use the RAM API ListRoles to query instance RAM role names.
         * 
         * @return builder
         * 
         */
        public Builder ramRoleName(String ramRoleName) {
            return ramRoleName(Output.of(ramRoleName));
        }

        /**
         * @param resourceGroupId The ID of the resource group to which to assign the instance, Elastic Block Storage (EBS) device, and ENI.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group to which to assign the instance, Elastic Block Storage (EBS) device, and ENI.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param securityEnhancementStrategy Whether or not to activate the security enhancement feature and install network security software free of charge. Valid values: `Active`, `Deactive`.
         * 
         * @return builder
         * 
         */
        public Builder securityEnhancementStrategy(@Nullable Output<String> securityEnhancementStrategy) {
            $.securityEnhancementStrategy = securityEnhancementStrategy;
            return this;
        }

        /**
         * @param securityEnhancementStrategy Whether or not to activate the security enhancement feature and install network security software free of charge. Valid values: `Active`, `Deactive`.
         * 
         * @return builder
         * 
         */
        public Builder securityEnhancementStrategy(String securityEnhancementStrategy) {
            return securityEnhancementStrategy(Output.of(securityEnhancementStrategy));
        }

        /**
         * @param securityGroupId The security group ID.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupId(@Nullable Output<String> securityGroupId) {
            $.securityGroupId = securityGroupId;
            return this;
        }

        /**
         * @param securityGroupId The security group ID.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupId(String securityGroupId) {
            return securityGroupId(Output.of(securityGroupId));
        }

        /**
         * @param securityGroupIds The ID of security group N to which to assign the instance.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        /**
         * @param securityGroupIds The ID of security group N to which to assign the instance.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        /**
         * @param securityGroupIds The ID of security group N to which to assign the instance.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        /**
         * @param spotDuration The protection period of the preemptible instance. Unit: hours. Valid values: `0`, `1`, `2`, `3`, `4`, `5`, and `6`. Default to: `1`.
         * 
         * @return builder
         * 
         */
        public Builder spotDuration(@Nullable Output<String> spotDuration) {
            $.spotDuration = spotDuration;
            return this;
        }

        /**
         * @param spotDuration The protection period of the preemptible instance. Unit: hours. Valid values: `0`, `1`, `2`, `3`, `4`, `5`, and `6`. Default to: `1`.
         * 
         * @return builder
         * 
         */
        public Builder spotDuration(String spotDuration) {
            return spotDuration(Output.of(spotDuration));
        }

        /**
         * @param spotPriceLimit Sets the maximum hourly instance price. Supports up to three decimal places.
         * 
         * @return builder
         * 
         */
        public Builder spotPriceLimit(@Nullable Output<Double> spotPriceLimit) {
            $.spotPriceLimit = spotPriceLimit;
            return this;
        }

        /**
         * @param spotPriceLimit Sets the maximum hourly instance price. Supports up to three decimal places.
         * 
         * @return builder
         * 
         */
        public Builder spotPriceLimit(Double spotPriceLimit) {
            return spotPriceLimit(Output.of(spotPriceLimit));
        }

        /**
         * @param spotStrategy The spot strategy for a Pay-As-You-Go instance. This parameter is valid and required only when InstanceChargeType is set to PostPaid. Valid values: `NoSpot`, `SpotAsPriceGo`, `SpotWithPriceLimit`.
         * 
         * @return builder
         * 
         */
        public Builder spotStrategy(@Nullable Output<String> spotStrategy) {
            $.spotStrategy = spotStrategy;
            return this;
        }

        /**
         * @param spotStrategy The spot strategy for a Pay-As-You-Go instance. This parameter is valid and required only when InstanceChargeType is set to PostPaid. Valid values: `NoSpot`, `SpotAsPriceGo`, `SpotWithPriceLimit`.
         * 
         * @return builder
         * 
         */
        public Builder spotStrategy(String spotStrategy) {
            return spotStrategy(Output.of(spotStrategy));
        }

        /**
         * @param systemDisk The System Disk. See `system_disk` below.
         * 
         * @return builder
         * 
         */
        public Builder systemDisk(@Nullable Output<EcsLaunchTemplateSystemDiskArgs> systemDisk) {
            $.systemDisk = systemDisk;
            return this;
        }

        /**
         * @param systemDisk The System Disk. See `system_disk` below.
         * 
         * @return builder
         * 
         */
        public Builder systemDisk(EcsLaunchTemplateSystemDiskArgs systemDisk) {
            return systemDisk(Output.of(systemDisk));
        }

        /**
         * @param systemDiskCategory It has been deprecated from version 1.120.0, and use field `system_disk` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;system_disk_category&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
         * 
         */
        @Deprecated /* Field 'system_disk_category' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
        public Builder systemDiskCategory(@Nullable Output<String> systemDiskCategory) {
            $.systemDiskCategory = systemDiskCategory;
            return this;
        }

        /**
         * @param systemDiskCategory It has been deprecated from version 1.120.0, and use field `system_disk` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;system_disk_category&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
         * 
         */
        @Deprecated /* Field 'system_disk_category' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
        public Builder systemDiskCategory(String systemDiskCategory) {
            return systemDiskCategory(Output.of(systemDiskCategory));
        }

        /**
         * @param systemDiskDescription It has been deprecated from version 1.120.0, and use field `system_disk` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;system_disk_description&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
         * 
         */
        @Deprecated /* Field 'system_disk_description' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
        public Builder systemDiskDescription(@Nullable Output<String> systemDiskDescription) {
            $.systemDiskDescription = systemDiskDescription;
            return this;
        }

        /**
         * @param systemDiskDescription It has been deprecated from version 1.120.0, and use field `system_disk` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;system_disk_description&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
         * 
         */
        @Deprecated /* Field 'system_disk_description' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
        public Builder systemDiskDescription(String systemDiskDescription) {
            return systemDiskDescription(Output.of(systemDiskDescription));
        }

        /**
         * @param systemDiskName It has been deprecated from version 1.120.0, and use field `system_disk` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;system_disk_name&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
         * 
         */
        @Deprecated /* Field 'system_disk_name' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
        public Builder systemDiskName(@Nullable Output<String> systemDiskName) {
            $.systemDiskName = systemDiskName;
            return this;
        }

        /**
         * @param systemDiskName It has been deprecated from version 1.120.0, and use field `system_disk` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;system_disk_name&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
         * 
         */
        @Deprecated /* Field 'system_disk_name' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
        public Builder systemDiskName(String systemDiskName) {
            return systemDiskName(Output.of(systemDiskName));
        }

        /**
         * @param systemDiskSize It has been deprecated from version 1.120.0, and use field `system_disk` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;system_disk_size&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
         * 
         */
        @Deprecated /* Field 'system_disk_size' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
        public Builder systemDiskSize(@Nullable Output<Integer> systemDiskSize) {
            $.systemDiskSize = systemDiskSize;
            return this;
        }

        /**
         * @param systemDiskSize It has been deprecated from version 1.120.0, and use field `system_disk` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;system_disk_size&#39; has been deprecated from provider version 1.120.0. New field &#39;system_disk&#39; instead.
         * 
         */
        @Deprecated /* Field 'system_disk_size' has been deprecated from provider version 1.120.0. New field 'system_disk' instead. */
        public Builder systemDiskSize(Integer systemDiskSize) {
            return systemDiskSize(Output.of(systemDiskSize));
        }

        /**
         * @param tags A mapping of tags to assign to instance, block storage, and elastic network.
         * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
         * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to instance, block storage, and elastic network.
         * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
         * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param templateResourceGroupId The template resource group id.
         * 
         * @return builder
         * 
         */
        public Builder templateResourceGroupId(@Nullable Output<String> templateResourceGroupId) {
            $.templateResourceGroupId = templateResourceGroupId;
            return this;
        }

        /**
         * @param templateResourceGroupId The template resource group id.
         * 
         * @return builder
         * 
         */
        public Builder templateResourceGroupId(String templateResourceGroupId) {
            return templateResourceGroupId(Output.of(templateResourceGroupId));
        }

        /**
         * @param templateTags A mapping of tags to assign to the launch template.
         * 
         * @return builder
         * 
         */
        public Builder templateTags(@Nullable Output<Map<String,Object>> templateTags) {
            $.templateTags = templateTags;
            return this;
        }

        /**
         * @param templateTags A mapping of tags to assign to the launch template.
         * 
         * @return builder
         * 
         */
        public Builder templateTags(Map<String,Object> templateTags) {
            return templateTags(Output.of(templateTags));
        }

        /**
         * @param userData The User Data.
         * 
         * @return builder
         * 
         */
        public Builder userData(@Nullable Output<String> userData) {
            $.userData = userData;
            return this;
        }

        /**
         * @param userData The User Data.
         * 
         * @return builder
         * 
         */
        public Builder userData(String userData) {
            return userData(Output.of(userData));
        }

        /**
         * @param userdata It has been deprecated from version 1.120.0, and use field `user_data` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;userdata&#39; has been deprecated from provider version 1.120.0. New field &#39;user_data&#39; instead.
         * 
         */
        @Deprecated /* Field 'userdata' has been deprecated from provider version 1.120.0. New field 'user_data' instead. */
        public Builder userdata(@Nullable Output<String> userdata) {
            $.userdata = userdata;
            return this;
        }

        /**
         * @param userdata It has been deprecated from version 1.120.0, and use field `user_data` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;userdata&#39; has been deprecated from provider version 1.120.0. New field &#39;user_data&#39; instead.
         * 
         */
        @Deprecated /* Field 'userdata' has been deprecated from provider version 1.120.0. New field 'user_data' instead. */
        public Builder userdata(String userdata) {
            return userdata(Output.of(userdata));
        }

        /**
         * @param versionDescription The description of the launch template version. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
         * 
         * @return builder
         * 
         */
        public Builder versionDescription(@Nullable Output<String> versionDescription) {
            $.versionDescription = versionDescription;
            return this;
        }

        /**
         * @param versionDescription The description of the launch template version. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
         * 
         * @return builder
         * 
         */
        public Builder versionDescription(String versionDescription) {
            return versionDescription(Output.of(versionDescription));
        }

        /**
         * @param vpcId The ID of the VPC.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The ID of the VPC.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param vswitchId When creating a VPC-Connected instance, you must specify its VSwitch ID.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(@Nullable Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId When creating a VPC-Connected instance, you must specify its VSwitch ID.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        /**
         * @param zoneId The zone ID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The zone ID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public EcsLaunchTemplateArgs build() {
            return $;
        }
    }

}
