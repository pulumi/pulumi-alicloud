// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.servicemesh.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceMeshMeshConfigPrometheusArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceMeshMeshConfigPrometheusArgs Empty = new ServiceMeshMeshConfigPrometheusArgs();

    /**
     * Prometheus service addresses (enabled external Prometheus when the system automatically populates).
     * 
     */
    @Import(name="externalUrl")
    private @Nullable Output<String> externalUrl;

    /**
     * @return Prometheus service addresses (enabled external Prometheus when the system automatically populates).
     * 
     */
    public Optional<Output<String>> externalUrl() {
        return Optional.ofNullable(this.externalUrl);
    }

    /**
     * Whether to enable external Prometheus.
     * 
     */
    @Import(name="useExternal")
    private @Nullable Output<Boolean> useExternal;

    /**
     * @return Whether to enable external Prometheus.
     * 
     */
    public Optional<Output<Boolean>> useExternal() {
        return Optional.ofNullable(this.useExternal);
    }

    private ServiceMeshMeshConfigPrometheusArgs() {}

    private ServiceMeshMeshConfigPrometheusArgs(ServiceMeshMeshConfigPrometheusArgs $) {
        this.externalUrl = $.externalUrl;
        this.useExternal = $.useExternal;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceMeshMeshConfigPrometheusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceMeshMeshConfigPrometheusArgs $;

        public Builder() {
            $ = new ServiceMeshMeshConfigPrometheusArgs();
        }

        public Builder(ServiceMeshMeshConfigPrometheusArgs defaults) {
            $ = new ServiceMeshMeshConfigPrometheusArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param externalUrl Prometheus service addresses (enabled external Prometheus when the system automatically populates).
         * 
         * @return builder
         * 
         */
        public Builder externalUrl(@Nullable Output<String> externalUrl) {
            $.externalUrl = externalUrl;
            return this;
        }

        /**
         * @param externalUrl Prometheus service addresses (enabled external Prometheus when the system automatically populates).
         * 
         * @return builder
         * 
         */
        public Builder externalUrl(String externalUrl) {
            return externalUrl(Output.of(externalUrl));
        }

        /**
         * @param useExternal Whether to enable external Prometheus.
         * 
         * @return builder
         * 
         */
        public Builder useExternal(@Nullable Output<Boolean> useExternal) {
            $.useExternal = useExternal;
            return this;
        }

        /**
         * @param useExternal Whether to enable external Prometheus.
         * 
         * @return builder
         * 
         */
        public Builder useExternal(Boolean useExternal) {
            return useExternal(Output.of(useExternal));
        }

        public ServiceMeshMeshConfigPrometheusArgs build() {
            return $;
        }
    }

}
