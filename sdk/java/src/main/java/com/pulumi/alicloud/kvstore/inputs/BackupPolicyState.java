// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.kvstore.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final BackupPolicyState Empty = new BackupPolicyState();

    /**
     * Backup Cycle. Allowed values: Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday.
     * 
     */
    @Import(name="backupPeriods")
    private @Nullable Output<List<String>> backupPeriods;

    /**
     * @return Backup Cycle. Allowed values: Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday.
     * 
     */
    public Optional<Output<List<String>>> backupPeriods() {
        return Optional.ofNullable(this.backupPeriods);
    }

    /**
     * Backup time, in the format of HH:mmZ- HH:mm Z.
     * 
     */
    @Import(name="backupTime")
    private @Nullable Output<String> backupTime;

    /**
     * @return Backup time, in the format of HH:mmZ- HH:mm Z.
     * 
     */
    public Optional<Output<String>> backupTime() {
        return Optional.ofNullable(this.backupTime);
    }

    /**
     * The id of Tair (Redis OSS-Compatible) And Memcache (KVStore) Instance.
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return The id of Tair (Redis OSS-Compatible) And Memcache (KVStore) Instance.
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    private BackupPolicyState() {}

    private BackupPolicyState(BackupPolicyState $) {
        this.backupPeriods = $.backupPeriods;
        this.backupTime = $.backupTime;
        this.instanceId = $.instanceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupPolicyState $;

        public Builder() {
            $ = new BackupPolicyState();
        }

        public Builder(BackupPolicyState defaults) {
            $ = new BackupPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupPeriods Backup Cycle. Allowed values: Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday.
         * 
         * @return builder
         * 
         */
        public Builder backupPeriods(@Nullable Output<List<String>> backupPeriods) {
            $.backupPeriods = backupPeriods;
            return this;
        }

        /**
         * @param backupPeriods Backup Cycle. Allowed values: Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday.
         * 
         * @return builder
         * 
         */
        public Builder backupPeriods(List<String> backupPeriods) {
            return backupPeriods(Output.of(backupPeriods));
        }

        /**
         * @param backupPeriods Backup Cycle. Allowed values: Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday.
         * 
         * @return builder
         * 
         */
        public Builder backupPeriods(String... backupPeriods) {
            return backupPeriods(List.of(backupPeriods));
        }

        /**
         * @param backupTime Backup time, in the format of HH:mmZ- HH:mm Z.
         * 
         * @return builder
         * 
         */
        public Builder backupTime(@Nullable Output<String> backupTime) {
            $.backupTime = backupTime;
            return this;
        }

        /**
         * @param backupTime Backup time, in the format of HH:mmZ- HH:mm Z.
         * 
         * @return builder
         * 
         */
        public Builder backupTime(String backupTime) {
            return backupTime(Output.of(backupTime));
        }

        /**
         * @param instanceId The id of Tair (Redis OSS-Compatible) And Memcache (KVStore) Instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The id of Tair (Redis OSS-Compatible) And Memcache (KVStore) Instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        public BackupPolicyState build() {
            return $;
        }
    }

}
