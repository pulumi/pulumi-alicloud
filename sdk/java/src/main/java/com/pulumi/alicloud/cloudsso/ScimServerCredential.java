// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudsso;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.cloudsso.ScimServerCredentialArgs;
import com.pulumi.alicloud.cloudsso.inputs.ScimServerCredentialState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Cloud SSO SCIM Server Credential resource.
 * 
 * For information about Cloud SSO SCIM Server Credential and how to use it, see [What is Cloud SSO SCIM Server Credential](https://www.alibabacloud.com/help/en/cloudsso/latest/api-cloudsso-2021-05-15-createscimservercredential).
 * 
 * &gt; **NOTE:** Available since v1.138.0.
 * 
 * &gt; **NOTE:** Cloud SSO Only Support `cn-shanghai` And `us-west-1` Region
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.cloudsso.CloudssoFunctions;
 * import com.pulumi.alicloud.cloudsso.inputs.GetDirectoriesArgs;
 * import com.pulumi.alicloud.cloudsso.ScimServerCredential;
 * import com.pulumi.alicloud.cloudsso.ScimServerCredentialArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         final var default = CloudssoFunctions.getDirectories(GetDirectoriesArgs.builder()
 *             .build());
 * 
 *         var defaultScimServerCredential = new ScimServerCredential("defaultScimServerCredential", ScimServerCredentialArgs.builder()
 *             .directoryId(default_.directories()[0].id())
 *             .credentialSecretFile("./credential_secret_file.txt")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Cloud SSO SCIM Server Credential can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:cloudsso/scimServerCredential:ScimServerCredential example &lt;directory_id&gt;:&lt;credential_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:cloudsso/scimServerCredential:ScimServerCredential")
public class ScimServerCredential extends com.pulumi.resources.CustomResource {
    /**
     * (Available since v1.245.0) The time when the SCIM credential was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return (Available since v1.245.0) The time when the SCIM credential was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The ID of the SCIM credential.
     * 
     */
    @Export(name="credentialId", refs={String.class}, tree="[0]")
    private Output<String> credentialId;

    /**
     * @return The ID of the SCIM credential.
     * 
     */
    public Output<String> credentialId() {
        return this.credentialId;
    }
    /**
     * The name of file that can save Credential ID and Credential Secret. Strongly suggest you to specified it when you creating credential, otherwise, you wouldn&#39;t get its secret ever.
     * 
     */
    @Export(name="credentialSecretFile", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> credentialSecretFile;

    /**
     * @return The name of file that can save Credential ID and Credential Secret. Strongly suggest you to specified it when you creating credential, otherwise, you wouldn&#39;t get its secret ever.
     * 
     */
    public Output<Optional<String>> credentialSecretFile() {
        return Codegen.optional(this.credentialSecretFile);
    }
    /**
     * (Available since v1.245.0) The type of the SCIM credential.
     * 
     */
    @Export(name="credentialType", refs={String.class}, tree="[0]")
    private Output<String> credentialType;

    /**
     * @return (Available since v1.245.0) The type of the SCIM credential.
     * 
     */
    public Output<String> credentialType() {
        return this.credentialType;
    }
    /**
     * The ID of the Directory.
     * 
     */
    @Export(name="directoryId", refs={String.class}, tree="[0]")
    private Output<String> directoryId;

    /**
     * @return The ID of the Directory.
     * 
     */
    public Output<String> directoryId() {
        return this.directoryId;
    }
    /**
     * (Available since v1.245.0) The time when the SCIM credential expires.
     * 
     */
    @Export(name="expireTime", refs={String.class}, tree="[0]")
    private Output<String> expireTime;

    /**
     * @return (Available since v1.245.0) The time when the SCIM credential expires.
     * 
     */
    public Output<String> expireTime() {
        return this.expireTime;
    }
    /**
     * The status of the SCIM Server Credential. Valid values: `Enabled`, `Disabled`.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the SCIM Server Credential. Valid values: `Enabled`, `Disabled`.
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ScimServerCredential(java.lang.String name) {
        this(name, ScimServerCredentialArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ScimServerCredential(java.lang.String name, ScimServerCredentialArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ScimServerCredential(java.lang.String name, ScimServerCredentialArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:cloudsso/scimServerCredential:ScimServerCredential", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ScimServerCredential(java.lang.String name, Output<java.lang.String> id, @Nullable ScimServerCredentialState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:cloudsso/scimServerCredential:ScimServerCredential", name, state, makeResourceOptions(options, id), false);
    }

    private static ScimServerCredentialArgs makeArgs(ScimServerCredentialArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ScimServerCredentialArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ScimServerCredential get(java.lang.String name, Output<java.lang.String> id, @Nullable ScimServerCredentialState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ScimServerCredential(name, id, state, options);
    }
}
