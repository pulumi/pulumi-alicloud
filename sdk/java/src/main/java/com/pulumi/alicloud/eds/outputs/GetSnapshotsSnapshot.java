// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eds.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSnapshotsSnapshot {
    /**
     * @return The time when the snapshot was created.
     * 
     */
    private String createTime;
    /**
     * @return The description of the snapshot.
     * 
     */
    private String description;
    /**
     * @return The ID of the cloud desktop to which the snapshot belongs.
     * 
     */
    private String desktopId;
    /**
     * @return The ID of the Snapshot.
     * 
     */
    private String id;
    /**
     * @return The progress of creating the snapshot.
     * 
     */
    private String progress;
    /**
     * @return The remaining time that is required to create the snapshot. Unit: seconds.
     * 
     */
    private Integer remainTime;
    /**
     * @return The ID of the snapshot.
     * 
     */
    private String snapshotId;
    /**
     * @return -The name of the snapshot.
     * 
     */
    private String snapshotName;
    /**
     * @return The type of the snapshot.
     * 
     */
    private String snapshotType;
    /**
     * @return The capacity of the source disk. Unit: GiB.
     * 
     */
    private String sourceDiskSize;
    /**
     * @return The type of the source disk.
     * 
     */
    private String sourceDiskType;
    /**
     * @return The status of the snapshot.
     * 
     */
    private String status;

    private GetSnapshotsSnapshot() {}
    /**
     * @return The time when the snapshot was created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The description of the snapshot.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The ID of the cloud desktop to which the snapshot belongs.
     * 
     */
    public String desktopId() {
        return this.desktopId;
    }
    /**
     * @return The ID of the Snapshot.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The progress of creating the snapshot.
     * 
     */
    public String progress() {
        return this.progress;
    }
    /**
     * @return The remaining time that is required to create the snapshot. Unit: seconds.
     * 
     */
    public Integer remainTime() {
        return this.remainTime;
    }
    /**
     * @return The ID of the snapshot.
     * 
     */
    public String snapshotId() {
        return this.snapshotId;
    }
    /**
     * @return -The name of the snapshot.
     * 
     */
    public String snapshotName() {
        return this.snapshotName;
    }
    /**
     * @return The type of the snapshot.
     * 
     */
    public String snapshotType() {
        return this.snapshotType;
    }
    /**
     * @return The capacity of the source disk. Unit: GiB.
     * 
     */
    public String sourceDiskSize() {
        return this.sourceDiskSize;
    }
    /**
     * @return The type of the source disk.
     * 
     */
    public String sourceDiskType() {
        return this.sourceDiskType;
    }
    /**
     * @return The status of the snapshot.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSnapshotsSnapshot defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String description;
        private String desktopId;
        private String id;
        private String progress;
        private Integer remainTime;
        private String snapshotId;
        private String snapshotName;
        private String snapshotType;
        private String sourceDiskSize;
        private String sourceDiskType;
        private String status;
        public Builder() {}
        public Builder(GetSnapshotsSnapshot defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.desktopId = defaults.desktopId;
    	      this.id = defaults.id;
    	      this.progress = defaults.progress;
    	      this.remainTime = defaults.remainTime;
    	      this.snapshotId = defaults.snapshotId;
    	      this.snapshotName = defaults.snapshotName;
    	      this.snapshotType = defaults.snapshotType;
    	      this.sourceDiskSize = defaults.sourceDiskSize;
    	      this.sourceDiskType = defaults.sourceDiskType;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder desktopId(String desktopId) {
            this.desktopId = Objects.requireNonNull(desktopId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder progress(String progress) {
            this.progress = Objects.requireNonNull(progress);
            return this;
        }
        @CustomType.Setter
        public Builder remainTime(Integer remainTime) {
            this.remainTime = Objects.requireNonNull(remainTime);
            return this;
        }
        @CustomType.Setter
        public Builder snapshotId(String snapshotId) {
            this.snapshotId = Objects.requireNonNull(snapshotId);
            return this;
        }
        @CustomType.Setter
        public Builder snapshotName(String snapshotName) {
            this.snapshotName = Objects.requireNonNull(snapshotName);
            return this;
        }
        @CustomType.Setter
        public Builder snapshotType(String snapshotType) {
            this.snapshotType = Objects.requireNonNull(snapshotType);
            return this;
        }
        @CustomType.Setter
        public Builder sourceDiskSize(String sourceDiskSize) {
            this.sourceDiskSize = Objects.requireNonNull(sourceDiskSize);
            return this;
        }
        @CustomType.Setter
        public Builder sourceDiskType(String sourceDiskType) {
            this.sourceDiskType = Objects.requireNonNull(sourceDiskType);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public GetSnapshotsSnapshot build() {
            final var o = new GetSnapshotsSnapshot();
            o.createTime = createTime;
            o.description = description;
            o.desktopId = desktopId;
            o.id = id;
            o.progress = progress;
            o.remainTime = remainTime;
            o.snapshotId = snapshotId;
            o.snapshotName = snapshotName;
            o.snapshotType = snapshotType;
            o.sourceDiskSize = sourceDiskSize;
            o.sourceDiskType = sourceDiskType;
            o.status = status;
            return o;
        }
    }
}
