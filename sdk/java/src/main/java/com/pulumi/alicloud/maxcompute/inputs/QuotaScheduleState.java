// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.maxcompute.inputs;

import com.pulumi.alicloud.maxcompute.inputs.QuotaScheduleScheduleListArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class QuotaScheduleState extends com.pulumi.resources.ResourceArgs {

    public static final QuotaScheduleState Empty = new QuotaScheduleState();

    /**
     * The nickname of level-1 compute quota.
     * 
     */
    @Import(name="nickname")
    private @Nullable Output<String> nickname;

    /**
     * @return The nickname of level-1 compute quota.
     * 
     */
    public Optional<Output<String>> nickname() {
        return Optional.ofNullable(this.nickname);
    }

    /**
     * schedule list See `schedule_list` below.
     * 
     */
    @Import(name="scheduleLists")
    private @Nullable Output<List<QuotaScheduleScheduleListArgs>> scheduleLists;

    /**
     * @return schedule list See `schedule_list` below.
     * 
     */
    public Optional<Output<List<QuotaScheduleScheduleListArgs>>> scheduleLists() {
        return Optional.ofNullable(this.scheduleLists);
    }

    /**
     * Time zone, reference value: UTC +8
     * 
     */
    @Import(name="timezone")
    private @Nullable Output<String> timezone;

    /**
     * @return Time zone, reference value: UTC +8
     * 
     */
    public Optional<Output<String>> timezone() {
        return Optional.ofNullable(this.timezone);
    }

    private QuotaScheduleState() {}

    private QuotaScheduleState(QuotaScheduleState $) {
        this.nickname = $.nickname;
        this.scheduleLists = $.scheduleLists;
        this.timezone = $.timezone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QuotaScheduleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QuotaScheduleState $;

        public Builder() {
            $ = new QuotaScheduleState();
        }

        public Builder(QuotaScheduleState defaults) {
            $ = new QuotaScheduleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param nickname The nickname of level-1 compute quota.
         * 
         * @return builder
         * 
         */
        public Builder nickname(@Nullable Output<String> nickname) {
            $.nickname = nickname;
            return this;
        }

        /**
         * @param nickname The nickname of level-1 compute quota.
         * 
         * @return builder
         * 
         */
        public Builder nickname(String nickname) {
            return nickname(Output.of(nickname));
        }

        /**
         * @param scheduleLists schedule list See `schedule_list` below.
         * 
         * @return builder
         * 
         */
        public Builder scheduleLists(@Nullable Output<List<QuotaScheduleScheduleListArgs>> scheduleLists) {
            $.scheduleLists = scheduleLists;
            return this;
        }

        /**
         * @param scheduleLists schedule list See `schedule_list` below.
         * 
         * @return builder
         * 
         */
        public Builder scheduleLists(List<QuotaScheduleScheduleListArgs> scheduleLists) {
            return scheduleLists(Output.of(scheduleLists));
        }

        /**
         * @param scheduleLists schedule list See `schedule_list` below.
         * 
         * @return builder
         * 
         */
        public Builder scheduleLists(QuotaScheduleScheduleListArgs... scheduleLists) {
            return scheduleLists(List.of(scheduleLists));
        }

        /**
         * @param timezone Time zone, reference value: UTC +8
         * 
         * @return builder
         * 
         */
        public Builder timezone(@Nullable Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        /**
         * @param timezone Time zone, reference value: UTC +8
         * 
         * @return builder
         * 
         */
        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        public QuotaScheduleState build() {
            return $;
        }
    }

}
