// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstancesInstance {
    /**
     * @return Instance Description.
     * 
     */
    private String description;
    /**
     * @return The ID of the Instance.
     * 
     */
    private String id;
    /**
     * @return The ID Of The Image.
     * 
     */
    private String imageId;
    /**
     * @return InstanceId.
     * 
     */
    private String instanceId;
    /**
     * @return Instance Name.
     * 
     */
    private String instanceName;
    /**
     * @return Instance Type.
     * 
     */
    private String instanceType;
    /**
     * @return The Key Name.
     * 
     */
    private String keyPairName;
    /**
     * @return The payment type.Valid values: `PayAsYouGo`,`Subscription`
     * 
     */
    private String paymentType;
    /**
     * @return Resolution.
     * 
     */
    private String resolution;
    /**
     * @return Security Group ID.
     * 
     */
    private String securityGroupId;
    /**
     * @return Instance Status.
     * 
     */
    private String status;
    /**
     * @return VNC login address.
     * 
     */
    private String vncUrl;
    /**
     * @return The vswitch id.
     * 
     */
    private String vswitchId;
    private String zoneId;

    private GetInstancesInstance() {}
    /**
     * @return Instance Description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The ID of the Instance.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID Of The Image.
     * 
     */
    public String imageId() {
        return this.imageId;
    }
    /**
     * @return InstanceId.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return Instance Name.
     * 
     */
    public String instanceName() {
        return this.instanceName;
    }
    /**
     * @return Instance Type.
     * 
     */
    public String instanceType() {
        return this.instanceType;
    }
    /**
     * @return The Key Name.
     * 
     */
    public String keyPairName() {
        return this.keyPairName;
    }
    /**
     * @return The payment type.Valid values: `PayAsYouGo`,`Subscription`
     * 
     */
    public String paymentType() {
        return this.paymentType;
    }
    /**
     * @return Resolution.
     * 
     */
    public String resolution() {
        return this.resolution;
    }
    /**
     * @return Security Group ID.
     * 
     */
    public String securityGroupId() {
        return this.securityGroupId;
    }
    /**
     * @return Instance Status.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return VNC login address.
     * 
     */
    public String vncUrl() {
        return this.vncUrl;
    }
    /**
     * @return The vswitch id.
     * 
     */
    public String vswitchId() {
        return this.vswitchId;
    }
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesInstance defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String id;
        private String imageId;
        private String instanceId;
        private String instanceName;
        private String instanceType;
        private String keyPairName;
        private String paymentType;
        private String resolution;
        private String securityGroupId;
        private String status;
        private String vncUrl;
        private String vswitchId;
        private String zoneId;
        public Builder() {}
        public Builder(GetInstancesInstance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.imageId = defaults.imageId;
    	      this.instanceId = defaults.instanceId;
    	      this.instanceName = defaults.instanceName;
    	      this.instanceType = defaults.instanceType;
    	      this.keyPairName = defaults.keyPairName;
    	      this.paymentType = defaults.paymentType;
    	      this.resolution = defaults.resolution;
    	      this.securityGroupId = defaults.securityGroupId;
    	      this.status = defaults.status;
    	      this.vncUrl = defaults.vncUrl;
    	      this.vswitchId = defaults.vswitchId;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageId(String imageId) {
            if (imageId == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "imageId");
            }
            this.imageId = imageId;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder instanceName(String instanceName) {
            if (instanceName == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "instanceName");
            }
            this.instanceName = instanceName;
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(String instanceType) {
            if (instanceType == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "instanceType");
            }
            this.instanceType = instanceType;
            return this;
        }
        @CustomType.Setter
        public Builder keyPairName(String keyPairName) {
            if (keyPairName == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "keyPairName");
            }
            this.keyPairName = keyPairName;
            return this;
        }
        @CustomType.Setter
        public Builder paymentType(String paymentType) {
            if (paymentType == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "paymentType");
            }
            this.paymentType = paymentType;
            return this;
        }
        @CustomType.Setter
        public Builder resolution(String resolution) {
            if (resolution == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "resolution");
            }
            this.resolution = resolution;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupId(String securityGroupId) {
            if (securityGroupId == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "securityGroupId");
            }
            this.securityGroupId = securityGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder vncUrl(String vncUrl) {
            if (vncUrl == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "vncUrl");
            }
            this.vncUrl = vncUrl;
            return this;
        }
        @CustomType.Setter
        public Builder vswitchId(String vswitchId) {
            if (vswitchId == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "vswitchId");
            }
            this.vswitchId = vswitchId;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetInstancesInstance build() {
            final var _resultValue = new GetInstancesInstance();
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.imageId = imageId;
            _resultValue.instanceId = instanceId;
            _resultValue.instanceName = instanceName;
            _resultValue.instanceType = instanceType;
            _resultValue.keyPairName = keyPairName;
            _resultValue.paymentType = paymentType;
            _resultValue.resolution = resolution;
            _resultValue.securityGroupId = securityGroupId;
            _resultValue.status = status;
            _resultValue.vncUrl = vncUrl;
            _resultValue.vswitchId = vswitchId;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
