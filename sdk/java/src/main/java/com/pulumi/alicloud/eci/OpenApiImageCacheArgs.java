// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eci;

import com.pulumi.alicloud.eci.inputs.OpenApiImageCacheImageRegistryCredentialArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OpenApiImageCacheArgs extends com.pulumi.resources.ResourceArgs {

    public static final OpenApiImageCacheArgs Empty = new OpenApiImageCacheArgs();

    @Import(name="eipInstanceId")
    private @Nullable Output<String> eipInstanceId;

    public Optional<Output<String>> eipInstanceId() {
        return Optional.ofNullable(this.eipInstanceId);
    }

    @Import(name="imageCacheName", required=true)
    private Output<String> imageCacheName;

    public Output<String> imageCacheName() {
        return this.imageCacheName;
    }

    @Import(name="imageCacheSize")
    private @Nullable Output<Integer> imageCacheSize;

    public Optional<Output<Integer>> imageCacheSize() {
        return Optional.ofNullable(this.imageCacheSize);
    }

    @Import(name="imageRegistryCredentials")
    private @Nullable Output<List<OpenApiImageCacheImageRegistryCredentialArgs>> imageRegistryCredentials;

    public Optional<Output<List<OpenApiImageCacheImageRegistryCredentialArgs>>> imageRegistryCredentials() {
        return Optional.ofNullable(this.imageRegistryCredentials);
    }

    @Import(name="images", required=true)
    private Output<List<String>> images;

    public Output<List<String>> images() {
        return this.images;
    }

    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    @Import(name="retentionDays")
    private @Nullable Output<Integer> retentionDays;

    public Optional<Output<Integer>> retentionDays() {
        return Optional.ofNullable(this.retentionDays);
    }

    @Import(name="securityGroupId", required=true)
    private Output<String> securityGroupId;

    public Output<String> securityGroupId() {
        return this.securityGroupId;
    }

    @Import(name="vswitchId", required=true)
    private Output<String> vswitchId;

    public Output<String> vswitchId() {
        return this.vswitchId;
    }

    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private OpenApiImageCacheArgs() {}

    private OpenApiImageCacheArgs(OpenApiImageCacheArgs $) {
        this.eipInstanceId = $.eipInstanceId;
        this.imageCacheName = $.imageCacheName;
        this.imageCacheSize = $.imageCacheSize;
        this.imageRegistryCredentials = $.imageRegistryCredentials;
        this.images = $.images;
        this.resourceGroupId = $.resourceGroupId;
        this.retentionDays = $.retentionDays;
        this.securityGroupId = $.securityGroupId;
        this.vswitchId = $.vswitchId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OpenApiImageCacheArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OpenApiImageCacheArgs $;

        public Builder() {
            $ = new OpenApiImageCacheArgs();
        }

        public Builder(OpenApiImageCacheArgs defaults) {
            $ = new OpenApiImageCacheArgs(Objects.requireNonNull(defaults));
        }

        public Builder eipInstanceId(@Nullable Output<String> eipInstanceId) {
            $.eipInstanceId = eipInstanceId;
            return this;
        }

        public Builder eipInstanceId(String eipInstanceId) {
            return eipInstanceId(Output.of(eipInstanceId));
        }

        public Builder imageCacheName(Output<String> imageCacheName) {
            $.imageCacheName = imageCacheName;
            return this;
        }

        public Builder imageCacheName(String imageCacheName) {
            return imageCacheName(Output.of(imageCacheName));
        }

        public Builder imageCacheSize(@Nullable Output<Integer> imageCacheSize) {
            $.imageCacheSize = imageCacheSize;
            return this;
        }

        public Builder imageCacheSize(Integer imageCacheSize) {
            return imageCacheSize(Output.of(imageCacheSize));
        }

        public Builder imageRegistryCredentials(@Nullable Output<List<OpenApiImageCacheImageRegistryCredentialArgs>> imageRegistryCredentials) {
            $.imageRegistryCredentials = imageRegistryCredentials;
            return this;
        }

        public Builder imageRegistryCredentials(List<OpenApiImageCacheImageRegistryCredentialArgs> imageRegistryCredentials) {
            return imageRegistryCredentials(Output.of(imageRegistryCredentials));
        }

        public Builder imageRegistryCredentials(OpenApiImageCacheImageRegistryCredentialArgs... imageRegistryCredentials) {
            return imageRegistryCredentials(List.of(imageRegistryCredentials));
        }

        public Builder images(Output<List<String>> images) {
            $.images = images;
            return this;
        }

        public Builder images(List<String> images) {
            return images(Output.of(images));
        }

        public Builder images(String... images) {
            return images(List.of(images));
        }

        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        public Builder retentionDays(@Nullable Output<Integer> retentionDays) {
            $.retentionDays = retentionDays;
            return this;
        }

        public Builder retentionDays(Integer retentionDays) {
            return retentionDays(Output.of(retentionDays));
        }

        public Builder securityGroupId(Output<String> securityGroupId) {
            $.securityGroupId = securityGroupId;
            return this;
        }

        public Builder securityGroupId(String securityGroupId) {
            return securityGroupId(Output.of(securityGroupId));
        }

        public Builder vswitchId(Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public OpenApiImageCacheArgs build() {
            if ($.imageCacheName == null) {
                throw new MissingRequiredPropertyException("OpenApiImageCacheArgs", "imageCacheName");
            }
            if ($.images == null) {
                throw new MissingRequiredPropertyException("OpenApiImageCacheArgs", "images");
            }
            if ($.securityGroupId == null) {
                throw new MissingRequiredPropertyException("OpenApiImageCacheArgs", "securityGroupId");
            }
            if ($.vswitchId == null) {
                throw new MissingRequiredPropertyException("OpenApiImageCacheArgs", "vswitchId");
            }
            return $;
        }
    }

}
