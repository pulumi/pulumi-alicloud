// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.arms;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.arms.inputs.GetAddonReleasesArgs;
import com.pulumi.alicloud.arms.inputs.GetAddonReleasesPlainArgs;
import com.pulumi.alicloud.arms.inputs.GetAlertContactGroupsArgs;
import com.pulumi.alicloud.arms.inputs.GetAlertContactGroupsPlainArgs;
import com.pulumi.alicloud.arms.inputs.GetAlertContactsArgs;
import com.pulumi.alicloud.arms.inputs.GetAlertContactsPlainArgs;
import com.pulumi.alicloud.arms.inputs.GetAlertRobotsArgs;
import com.pulumi.alicloud.arms.inputs.GetAlertRobotsPlainArgs;
import com.pulumi.alicloud.arms.inputs.GetDispatchRulesArgs;
import com.pulumi.alicloud.arms.inputs.GetDispatchRulesPlainArgs;
import com.pulumi.alicloud.arms.inputs.GetEnvCustomJobsArgs;
import com.pulumi.alicloud.arms.inputs.GetEnvCustomJobsPlainArgs;
import com.pulumi.alicloud.arms.inputs.GetEnvFeaturesArgs;
import com.pulumi.alicloud.arms.inputs.GetEnvFeaturesPlainArgs;
import com.pulumi.alicloud.arms.inputs.GetEnvPodMonitorsArgs;
import com.pulumi.alicloud.arms.inputs.GetEnvPodMonitorsPlainArgs;
import com.pulumi.alicloud.arms.inputs.GetEnvServiceMonitorsArgs;
import com.pulumi.alicloud.arms.inputs.GetEnvServiceMonitorsPlainArgs;
import com.pulumi.alicloud.arms.inputs.GetEnvironmentsArgs;
import com.pulumi.alicloud.arms.inputs.GetEnvironmentsPlainArgs;
import com.pulumi.alicloud.arms.inputs.GetIntegrationExportersArgs;
import com.pulumi.alicloud.arms.inputs.GetIntegrationExportersPlainArgs;
import com.pulumi.alicloud.arms.inputs.GetPrometheisArgs;
import com.pulumi.alicloud.arms.inputs.GetPrometheisPlainArgs;
import com.pulumi.alicloud.arms.inputs.GetPrometheusAlertRulesArgs;
import com.pulumi.alicloud.arms.inputs.GetPrometheusAlertRulesPlainArgs;
import com.pulumi.alicloud.arms.inputs.GetPrometheusArgs;
import com.pulumi.alicloud.arms.inputs.GetPrometheusMonitoringsArgs;
import com.pulumi.alicloud.arms.inputs.GetPrometheusMonitoringsPlainArgs;
import com.pulumi.alicloud.arms.inputs.GetPrometheusPlainArgs;
import com.pulumi.alicloud.arms.inputs.GetRemoteWritesArgs;
import com.pulumi.alicloud.arms.inputs.GetRemoteWritesPlainArgs;
import com.pulumi.alicloud.arms.outputs.GetAddonReleasesResult;
import com.pulumi.alicloud.arms.outputs.GetAlertContactGroupsResult;
import com.pulumi.alicloud.arms.outputs.GetAlertContactsResult;
import com.pulumi.alicloud.arms.outputs.GetAlertRobotsResult;
import com.pulumi.alicloud.arms.outputs.GetDispatchRulesResult;
import com.pulumi.alicloud.arms.outputs.GetEnvCustomJobsResult;
import com.pulumi.alicloud.arms.outputs.GetEnvFeaturesResult;
import com.pulumi.alicloud.arms.outputs.GetEnvPodMonitorsResult;
import com.pulumi.alicloud.arms.outputs.GetEnvServiceMonitorsResult;
import com.pulumi.alicloud.arms.outputs.GetEnvironmentsResult;
import com.pulumi.alicloud.arms.outputs.GetIntegrationExportersResult;
import com.pulumi.alicloud.arms.outputs.GetPrometheisResult;
import com.pulumi.alicloud.arms.outputs.GetPrometheusAlertRulesResult;
import com.pulumi.alicloud.arms.outputs.GetPrometheusMonitoringsResult;
import com.pulumi.alicloud.arms.outputs.GetPrometheusResult;
import com.pulumi.alicloud.arms.outputs.GetRemoteWritesResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import java.util.concurrent.CompletableFuture;

public final class ArmsFunctions {
    /**
     * This data source provides the ARMS Addon Releases of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.CidrsubnetArgs;
     * import com.pulumi.alicloud.ecs.SnapshotPolicy;
     * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.cs.ManagedKubernetes;
     * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.cs.NodePool;
     * import com.pulumi.alicloud.cs.NodePoolArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.AddonRelease;
     * import com.pulumi.alicloud.arms.AddonReleaseArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAddonReleasesArgs;
     * import static com.pulumi.codegen.internal.Serialization.*;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
     *             .build());
     * 
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .cidrBlock("192.168.0.0/16")
     *             .vpcName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .vpcId(vpc.id())
     *             .vswitchName(String.format("%s-%s", name,defaultInteger.result()))
     *             .zoneId(enhanced.zones()[0].zoneId())
     *             .cidrBlock(vpc.cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
     *                 .input(_cidrBlock)
     *                 .newbits(8)
     *                 .netnum(8)
     *                 .build())).applyValue(_invoke -> _invoke.result()))
     *             .build());
     * 
     *         var defaultSnapshotPolicy = new SnapshotPolicy("defaultSnapshotPolicy", SnapshotPolicyArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .repeatWeekdays(            
     *                 "1",
     *                 "2",
     *                 "3")
     *             .retentionDays(-1)
     *             .timePoints(            
     *                 "1",
     *                 "22",
     *                 "23")
     *             .build());
     * 
     *         final var default = vswitch.zoneId().applyValue(_zoneId -> EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(_zoneId)
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .kubernetesNodeRole("Worker")
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build()));
     * 
     *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .clusterSpec("ack.pro.small")
     *             .version("1.24.6-aliyun.1")
     *             .newNatGateway(true)
     *             .nodeCidrMask(26)
     *             .proxyMode("ipvs")
     *             .serviceCidr("172.23.0.0/16")
     *             .podCidr("10.95.0.0/16")
     *             .workerVswitchIds(vswitch.id())
     *             .build());
     * 
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyPairName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
     *             .name("desired_size")
     *             .clusterId(defaultManagedKubernetes.id())
     *             .vswitchIds(vswitch.id())
     *             .instanceTypes(default_.applyValue(_default_ -> _default_.instanceTypes()[0].id()))
     *             .systemDiskCategory("cloud_efficiency")
     *             .systemDiskSize(40)
     *             .keyName(defaultKeyPair.keyPairName())
     *             .desiredSize("2")
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .environmentType("CS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .bindResourceId(defaultNodePool.clusterId())
     *             .environmentSubType("ManagedKubernetes")
     *             .build());
     * 
     *         var defaultAddonRelease = new AddonRelease("defaultAddonRelease", AddonReleaseArgs.builder()
     *             .aliyunLang("zh")
     *             .addonName("mysql")
     *             .environmentId(defaultEnvironment.id())
     *             .addonVersion("0.0.2")
     *             .values(serializeJson(
     *                 jsonObject(
     *                     jsonProperty("host", "mysql-service.default"),
     *                     jsonProperty("password", "roots"),
     *                     jsonProperty("port", 3306),
     *                     jsonProperty("username", "root")
     *                 )))
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getAddonReleases(GetAddonReleasesArgs.builder()
     *             .environmentId(defaultAddonRelease.environmentId())
     *             .ids(defaultAddonRelease.id())
     *             .build());
     * 
     *         ctx.export("armsEnvServiceMonitorsId0", ids.applyValue(_ids -> _ids.releases()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAddonReleasesResult> getAddonReleases(GetAddonReleasesArgs args) {
        return getAddonReleases(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ARMS Addon Releases of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.CidrsubnetArgs;
     * import com.pulumi.alicloud.ecs.SnapshotPolicy;
     * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.cs.ManagedKubernetes;
     * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.cs.NodePool;
     * import com.pulumi.alicloud.cs.NodePoolArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.AddonRelease;
     * import com.pulumi.alicloud.arms.AddonReleaseArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAddonReleasesArgs;
     * import static com.pulumi.codegen.internal.Serialization.*;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
     *             .build());
     * 
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .cidrBlock("192.168.0.0/16")
     *             .vpcName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .vpcId(vpc.id())
     *             .vswitchName(String.format("%s-%s", name,defaultInteger.result()))
     *             .zoneId(enhanced.zones()[0].zoneId())
     *             .cidrBlock(vpc.cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
     *                 .input(_cidrBlock)
     *                 .newbits(8)
     *                 .netnum(8)
     *                 .build())).applyValue(_invoke -> _invoke.result()))
     *             .build());
     * 
     *         var defaultSnapshotPolicy = new SnapshotPolicy("defaultSnapshotPolicy", SnapshotPolicyArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .repeatWeekdays(            
     *                 "1",
     *                 "2",
     *                 "3")
     *             .retentionDays(-1)
     *             .timePoints(            
     *                 "1",
     *                 "22",
     *                 "23")
     *             .build());
     * 
     *         final var default = vswitch.zoneId().applyValue(_zoneId -> EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(_zoneId)
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .kubernetesNodeRole("Worker")
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build()));
     * 
     *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .clusterSpec("ack.pro.small")
     *             .version("1.24.6-aliyun.1")
     *             .newNatGateway(true)
     *             .nodeCidrMask(26)
     *             .proxyMode("ipvs")
     *             .serviceCidr("172.23.0.0/16")
     *             .podCidr("10.95.0.0/16")
     *             .workerVswitchIds(vswitch.id())
     *             .build());
     * 
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyPairName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
     *             .name("desired_size")
     *             .clusterId(defaultManagedKubernetes.id())
     *             .vswitchIds(vswitch.id())
     *             .instanceTypes(default_.applyValue(_default_ -> _default_.instanceTypes()[0].id()))
     *             .systemDiskCategory("cloud_efficiency")
     *             .systemDiskSize(40)
     *             .keyName(defaultKeyPair.keyPairName())
     *             .desiredSize("2")
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .environmentType("CS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .bindResourceId(defaultNodePool.clusterId())
     *             .environmentSubType("ManagedKubernetes")
     *             .build());
     * 
     *         var defaultAddonRelease = new AddonRelease("defaultAddonRelease", AddonReleaseArgs.builder()
     *             .aliyunLang("zh")
     *             .addonName("mysql")
     *             .environmentId(defaultEnvironment.id())
     *             .addonVersion("0.0.2")
     *             .values(serializeJson(
     *                 jsonObject(
     *                     jsonProperty("host", "mysql-service.default"),
     *                     jsonProperty("password", "roots"),
     *                     jsonProperty("port", 3306),
     *                     jsonProperty("username", "root")
     *                 )))
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getAddonReleases(GetAddonReleasesArgs.builder()
     *             .environmentId(defaultAddonRelease.environmentId())
     *             .ids(defaultAddonRelease.id())
     *             .build());
     * 
     *         ctx.export("armsEnvServiceMonitorsId0", ids.applyValue(_ids -> _ids.releases()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAddonReleasesResult> getAddonReleasesPlain(GetAddonReleasesPlainArgs args) {
        return getAddonReleasesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ARMS Addon Releases of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.CidrsubnetArgs;
     * import com.pulumi.alicloud.ecs.SnapshotPolicy;
     * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.cs.ManagedKubernetes;
     * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.cs.NodePool;
     * import com.pulumi.alicloud.cs.NodePoolArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.AddonRelease;
     * import com.pulumi.alicloud.arms.AddonReleaseArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAddonReleasesArgs;
     * import static com.pulumi.codegen.internal.Serialization.*;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
     *             .build());
     * 
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .cidrBlock("192.168.0.0/16")
     *             .vpcName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .vpcId(vpc.id())
     *             .vswitchName(String.format("%s-%s", name,defaultInteger.result()))
     *             .zoneId(enhanced.zones()[0].zoneId())
     *             .cidrBlock(vpc.cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
     *                 .input(_cidrBlock)
     *                 .newbits(8)
     *                 .netnum(8)
     *                 .build())).applyValue(_invoke -> _invoke.result()))
     *             .build());
     * 
     *         var defaultSnapshotPolicy = new SnapshotPolicy("defaultSnapshotPolicy", SnapshotPolicyArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .repeatWeekdays(            
     *                 "1",
     *                 "2",
     *                 "3")
     *             .retentionDays(-1)
     *             .timePoints(            
     *                 "1",
     *                 "22",
     *                 "23")
     *             .build());
     * 
     *         final var default = vswitch.zoneId().applyValue(_zoneId -> EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(_zoneId)
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .kubernetesNodeRole("Worker")
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build()));
     * 
     *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .clusterSpec("ack.pro.small")
     *             .version("1.24.6-aliyun.1")
     *             .newNatGateway(true)
     *             .nodeCidrMask(26)
     *             .proxyMode("ipvs")
     *             .serviceCidr("172.23.0.0/16")
     *             .podCidr("10.95.0.0/16")
     *             .workerVswitchIds(vswitch.id())
     *             .build());
     * 
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyPairName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
     *             .name("desired_size")
     *             .clusterId(defaultManagedKubernetes.id())
     *             .vswitchIds(vswitch.id())
     *             .instanceTypes(default_.applyValue(_default_ -> _default_.instanceTypes()[0].id()))
     *             .systemDiskCategory("cloud_efficiency")
     *             .systemDiskSize(40)
     *             .keyName(defaultKeyPair.keyPairName())
     *             .desiredSize("2")
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .environmentType("CS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .bindResourceId(defaultNodePool.clusterId())
     *             .environmentSubType("ManagedKubernetes")
     *             .build());
     * 
     *         var defaultAddonRelease = new AddonRelease("defaultAddonRelease", AddonReleaseArgs.builder()
     *             .aliyunLang("zh")
     *             .addonName("mysql")
     *             .environmentId(defaultEnvironment.id())
     *             .addonVersion("0.0.2")
     *             .values(serializeJson(
     *                 jsonObject(
     *                     jsonProperty("host", "mysql-service.default"),
     *                     jsonProperty("password", "roots"),
     *                     jsonProperty("port", 3306),
     *                     jsonProperty("username", "root")
     *                 )))
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getAddonReleases(GetAddonReleasesArgs.builder()
     *             .environmentId(defaultAddonRelease.environmentId())
     *             .ids(defaultAddonRelease.id())
     *             .build());
     * 
     *         ctx.export("armsEnvServiceMonitorsId0", ids.applyValue(_ids -> _ids.releases()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAddonReleasesResult> getAddonReleases(GetAddonReleasesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getAddonReleases:getAddonReleases", TypeShape.of(GetAddonReleasesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ARMS Addon Releases of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.CidrsubnetArgs;
     * import com.pulumi.alicloud.ecs.SnapshotPolicy;
     * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.cs.ManagedKubernetes;
     * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.cs.NodePool;
     * import com.pulumi.alicloud.cs.NodePoolArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.AddonRelease;
     * import com.pulumi.alicloud.arms.AddonReleaseArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAddonReleasesArgs;
     * import static com.pulumi.codegen.internal.Serialization.*;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
     *             .build());
     * 
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .cidrBlock("192.168.0.0/16")
     *             .vpcName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .vpcId(vpc.id())
     *             .vswitchName(String.format("%s-%s", name,defaultInteger.result()))
     *             .zoneId(enhanced.zones()[0].zoneId())
     *             .cidrBlock(vpc.cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
     *                 .input(_cidrBlock)
     *                 .newbits(8)
     *                 .netnum(8)
     *                 .build())).applyValue(_invoke -> _invoke.result()))
     *             .build());
     * 
     *         var defaultSnapshotPolicy = new SnapshotPolicy("defaultSnapshotPolicy", SnapshotPolicyArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .repeatWeekdays(            
     *                 "1",
     *                 "2",
     *                 "3")
     *             .retentionDays(-1)
     *             .timePoints(            
     *                 "1",
     *                 "22",
     *                 "23")
     *             .build());
     * 
     *         final var default = vswitch.zoneId().applyValue(_zoneId -> EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(_zoneId)
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .kubernetesNodeRole("Worker")
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build()));
     * 
     *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .clusterSpec("ack.pro.small")
     *             .version("1.24.6-aliyun.1")
     *             .newNatGateway(true)
     *             .nodeCidrMask(26)
     *             .proxyMode("ipvs")
     *             .serviceCidr("172.23.0.0/16")
     *             .podCidr("10.95.0.0/16")
     *             .workerVswitchIds(vswitch.id())
     *             .build());
     * 
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyPairName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
     *             .name("desired_size")
     *             .clusterId(defaultManagedKubernetes.id())
     *             .vswitchIds(vswitch.id())
     *             .instanceTypes(default_.applyValue(_default_ -> _default_.instanceTypes()[0].id()))
     *             .systemDiskCategory("cloud_efficiency")
     *             .systemDiskSize(40)
     *             .keyName(defaultKeyPair.keyPairName())
     *             .desiredSize("2")
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .environmentType("CS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .bindResourceId(defaultNodePool.clusterId())
     *             .environmentSubType("ManagedKubernetes")
     *             .build());
     * 
     *         var defaultAddonRelease = new AddonRelease("defaultAddonRelease", AddonReleaseArgs.builder()
     *             .aliyunLang("zh")
     *             .addonName("mysql")
     *             .environmentId(defaultEnvironment.id())
     *             .addonVersion("0.0.2")
     *             .values(serializeJson(
     *                 jsonObject(
     *                     jsonProperty("host", "mysql-service.default"),
     *                     jsonProperty("password", "roots"),
     *                     jsonProperty("port", 3306),
     *                     jsonProperty("username", "root")
     *                 )))
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getAddonReleases(GetAddonReleasesArgs.builder()
     *             .environmentId(defaultAddonRelease.environmentId())
     *             .ids(defaultAddonRelease.id())
     *             .build());
     * 
     *         ctx.export("armsEnvServiceMonitorsId0", ids.applyValue(_ids -> _ids.releases()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAddonReleasesResult> getAddonReleases(GetAddonReleasesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getAddonReleases:getAddonReleases", TypeShape.of(GetAddonReleasesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ARMS Addon Releases of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.CidrsubnetArgs;
     * import com.pulumi.alicloud.ecs.SnapshotPolicy;
     * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.cs.ManagedKubernetes;
     * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.cs.NodePool;
     * import com.pulumi.alicloud.cs.NodePoolArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.AddonRelease;
     * import com.pulumi.alicloud.arms.AddonReleaseArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAddonReleasesArgs;
     * import static com.pulumi.codegen.internal.Serialization.*;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
     *             .build());
     * 
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .cidrBlock("192.168.0.0/16")
     *             .vpcName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .vpcId(vpc.id())
     *             .vswitchName(String.format("%s-%s", name,defaultInteger.result()))
     *             .zoneId(enhanced.zones()[0].zoneId())
     *             .cidrBlock(vpc.cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
     *                 .input(_cidrBlock)
     *                 .newbits(8)
     *                 .netnum(8)
     *                 .build())).applyValue(_invoke -> _invoke.result()))
     *             .build());
     * 
     *         var defaultSnapshotPolicy = new SnapshotPolicy("defaultSnapshotPolicy", SnapshotPolicyArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .repeatWeekdays(            
     *                 "1",
     *                 "2",
     *                 "3")
     *             .retentionDays(-1)
     *             .timePoints(            
     *                 "1",
     *                 "22",
     *                 "23")
     *             .build());
     * 
     *         final var default = vswitch.zoneId().applyValue(_zoneId -> EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(_zoneId)
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .kubernetesNodeRole("Worker")
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build()));
     * 
     *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .clusterSpec("ack.pro.small")
     *             .version("1.24.6-aliyun.1")
     *             .newNatGateway(true)
     *             .nodeCidrMask(26)
     *             .proxyMode("ipvs")
     *             .serviceCidr("172.23.0.0/16")
     *             .podCidr("10.95.0.0/16")
     *             .workerVswitchIds(vswitch.id())
     *             .build());
     * 
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyPairName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
     *             .name("desired_size")
     *             .clusterId(defaultManagedKubernetes.id())
     *             .vswitchIds(vswitch.id())
     *             .instanceTypes(default_.applyValue(_default_ -> _default_.instanceTypes()[0].id()))
     *             .systemDiskCategory("cloud_efficiency")
     *             .systemDiskSize(40)
     *             .keyName(defaultKeyPair.keyPairName())
     *             .desiredSize("2")
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .environmentType("CS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .bindResourceId(defaultNodePool.clusterId())
     *             .environmentSubType("ManagedKubernetes")
     *             .build());
     * 
     *         var defaultAddonRelease = new AddonRelease("defaultAddonRelease", AddonReleaseArgs.builder()
     *             .aliyunLang("zh")
     *             .addonName("mysql")
     *             .environmentId(defaultEnvironment.id())
     *             .addonVersion("0.0.2")
     *             .values(serializeJson(
     *                 jsonObject(
     *                     jsonProperty("host", "mysql-service.default"),
     *                     jsonProperty("password", "roots"),
     *                     jsonProperty("port", 3306),
     *                     jsonProperty("username", "root")
     *                 )))
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getAddonReleases(GetAddonReleasesArgs.builder()
     *             .environmentId(defaultAddonRelease.environmentId())
     *             .ids(defaultAddonRelease.id())
     *             .build());
     * 
     *         ctx.export("armsEnvServiceMonitorsId0", ids.applyValue(_ids -> _ids.releases()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAddonReleasesResult> getAddonReleasesPlain(GetAddonReleasesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:arms/getAddonReleases:getAddonReleases", TypeShape.of(GetAddonReleasesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Alert Contact Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.131.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertContactGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nameRegex = ArmsFunctions.getAlertContactGroups(GetAlertContactGroupsArgs.builder()
     *             .nameRegex("^my-AlertContactGroup")
     *             .build());
     * 
     *         ctx.export("armsAlertContactGroupId", nameRegex.groups()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAlertContactGroupsResult> getAlertContactGroups() {
        return getAlertContactGroups(GetAlertContactGroupsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Alert Contact Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.131.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertContactGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nameRegex = ArmsFunctions.getAlertContactGroups(GetAlertContactGroupsArgs.builder()
     *             .nameRegex("^my-AlertContactGroup")
     *             .build());
     * 
     *         ctx.export("armsAlertContactGroupId", nameRegex.groups()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAlertContactGroupsResult> getAlertContactGroupsPlain() {
        return getAlertContactGroupsPlain(GetAlertContactGroupsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Alert Contact Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.131.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertContactGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nameRegex = ArmsFunctions.getAlertContactGroups(GetAlertContactGroupsArgs.builder()
     *             .nameRegex("^my-AlertContactGroup")
     *             .build());
     * 
     *         ctx.export("armsAlertContactGroupId", nameRegex.groups()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAlertContactGroupsResult> getAlertContactGroups(GetAlertContactGroupsArgs args) {
        return getAlertContactGroups(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Alert Contact Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.131.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertContactGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nameRegex = ArmsFunctions.getAlertContactGroups(GetAlertContactGroupsArgs.builder()
     *             .nameRegex("^my-AlertContactGroup")
     *             .build());
     * 
     *         ctx.export("armsAlertContactGroupId", nameRegex.groups()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAlertContactGroupsResult> getAlertContactGroupsPlain(GetAlertContactGroupsPlainArgs args) {
        return getAlertContactGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Alert Contact Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.131.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertContactGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nameRegex = ArmsFunctions.getAlertContactGroups(GetAlertContactGroupsArgs.builder()
     *             .nameRegex("^my-AlertContactGroup")
     *             .build());
     * 
     *         ctx.export("armsAlertContactGroupId", nameRegex.groups()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAlertContactGroupsResult> getAlertContactGroups(GetAlertContactGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getAlertContactGroups:getAlertContactGroups", TypeShape.of(GetAlertContactGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Alert Contact Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.131.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertContactGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nameRegex = ArmsFunctions.getAlertContactGroups(GetAlertContactGroupsArgs.builder()
     *             .nameRegex("^my-AlertContactGroup")
     *             .build());
     * 
     *         ctx.export("armsAlertContactGroupId", nameRegex.groups()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAlertContactGroupsResult> getAlertContactGroups(GetAlertContactGroupsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getAlertContactGroups:getAlertContactGroups", TypeShape.of(GetAlertContactGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Alert Contact Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.131.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertContactGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nameRegex = ArmsFunctions.getAlertContactGroups(GetAlertContactGroupsArgs.builder()
     *             .nameRegex("^my-AlertContactGroup")
     *             .build());
     * 
     *         ctx.export("armsAlertContactGroupId", nameRegex.groups()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAlertContactGroupsResult> getAlertContactGroupsPlain(GetAlertContactGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:arms/getAlertContactGroups:getAlertContactGroups", TypeShape.of(GetAlertContactGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Alert Contacts of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.129.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertContactsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getAlertContacts(GetAlertContactsArgs.builder()
     *             .build());
     * 
     *         ctx.export("armsAlertContactId1", ids.contacts()[0].id());
     *         final var nameRegex = ArmsFunctions.getAlertContacts(GetAlertContactsArgs.builder()
     *             .nameRegex("^my-AlertContact")
     *             .build());
     * 
     *         ctx.export("armsAlertContactId2", nameRegex.contacts()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAlertContactsResult> getAlertContacts() {
        return getAlertContacts(GetAlertContactsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Alert Contacts of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.129.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertContactsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getAlertContacts(GetAlertContactsArgs.builder()
     *             .build());
     * 
     *         ctx.export("armsAlertContactId1", ids.contacts()[0].id());
     *         final var nameRegex = ArmsFunctions.getAlertContacts(GetAlertContactsArgs.builder()
     *             .nameRegex("^my-AlertContact")
     *             .build());
     * 
     *         ctx.export("armsAlertContactId2", nameRegex.contacts()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAlertContactsResult> getAlertContactsPlain() {
        return getAlertContactsPlain(GetAlertContactsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Alert Contacts of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.129.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertContactsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getAlertContacts(GetAlertContactsArgs.builder()
     *             .build());
     * 
     *         ctx.export("armsAlertContactId1", ids.contacts()[0].id());
     *         final var nameRegex = ArmsFunctions.getAlertContacts(GetAlertContactsArgs.builder()
     *             .nameRegex("^my-AlertContact")
     *             .build());
     * 
     *         ctx.export("armsAlertContactId2", nameRegex.contacts()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAlertContactsResult> getAlertContacts(GetAlertContactsArgs args) {
        return getAlertContacts(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Alert Contacts of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.129.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertContactsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getAlertContacts(GetAlertContactsArgs.builder()
     *             .build());
     * 
     *         ctx.export("armsAlertContactId1", ids.contacts()[0].id());
     *         final var nameRegex = ArmsFunctions.getAlertContacts(GetAlertContactsArgs.builder()
     *             .nameRegex("^my-AlertContact")
     *             .build());
     * 
     *         ctx.export("armsAlertContactId2", nameRegex.contacts()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAlertContactsResult> getAlertContactsPlain(GetAlertContactsPlainArgs args) {
        return getAlertContactsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Alert Contacts of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.129.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertContactsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getAlertContacts(GetAlertContactsArgs.builder()
     *             .build());
     * 
     *         ctx.export("armsAlertContactId1", ids.contacts()[0].id());
     *         final var nameRegex = ArmsFunctions.getAlertContacts(GetAlertContactsArgs.builder()
     *             .nameRegex("^my-AlertContact")
     *             .build());
     * 
     *         ctx.export("armsAlertContactId2", nameRegex.contacts()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAlertContactsResult> getAlertContacts(GetAlertContactsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getAlertContacts:getAlertContacts", TypeShape.of(GetAlertContactsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Alert Contacts of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.129.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertContactsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getAlertContacts(GetAlertContactsArgs.builder()
     *             .build());
     * 
     *         ctx.export("armsAlertContactId1", ids.contacts()[0].id());
     *         final var nameRegex = ArmsFunctions.getAlertContacts(GetAlertContactsArgs.builder()
     *             .nameRegex("^my-AlertContact")
     *             .build());
     * 
     *         ctx.export("armsAlertContactId2", nameRegex.contacts()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAlertContactsResult> getAlertContacts(GetAlertContactsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getAlertContacts:getAlertContacts", TypeShape.of(GetAlertContactsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Alert Contacts of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.129.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertContactsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getAlertContacts(GetAlertContactsArgs.builder()
     *             .build());
     * 
     *         ctx.export("armsAlertContactId1", ids.contacts()[0].id());
     *         final var nameRegex = ArmsFunctions.getAlertContacts(GetAlertContactsArgs.builder()
     *             .nameRegex("^my-AlertContact")
     *             .build());
     * 
     *         ctx.export("armsAlertContactId2", nameRegex.contacts()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAlertContactsResult> getAlertContactsPlain(GetAlertContactsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:arms/getAlertContacts:getAlertContacts", TypeShape.of(GetAlertContactsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Alert Robots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.237.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.AlertRobot;
     * import com.pulumi.alicloud.arms.AlertRobotArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertRobotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var default_ = new AlertRobot("default", AlertRobotArgs.builder()
     *             .alertRobotName("my-AlertRobot")
     *             .robotType("wechat")
     *             .robotAddr("https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=1c704e23")
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getAlertRobots(GetAlertRobotsArgs.builder()
     *             .alertRobotName(default_.alertRobotName())
     *             .build());
     * 
     *         ctx.export("armsAlertRobotId", nameRegex.applyValue(_nameRegex -> _nameRegex.robots()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAlertRobotsResult> getAlertRobots() {
        return getAlertRobots(GetAlertRobotsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Alert Robots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.237.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.AlertRobot;
     * import com.pulumi.alicloud.arms.AlertRobotArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertRobotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var default_ = new AlertRobot("default", AlertRobotArgs.builder()
     *             .alertRobotName("my-AlertRobot")
     *             .robotType("wechat")
     *             .robotAddr("https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=1c704e23")
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getAlertRobots(GetAlertRobotsArgs.builder()
     *             .alertRobotName(default_.alertRobotName())
     *             .build());
     * 
     *         ctx.export("armsAlertRobotId", nameRegex.applyValue(_nameRegex -> _nameRegex.robots()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAlertRobotsResult> getAlertRobotsPlain() {
        return getAlertRobotsPlain(GetAlertRobotsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Alert Robots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.237.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.AlertRobot;
     * import com.pulumi.alicloud.arms.AlertRobotArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertRobotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var default_ = new AlertRobot("default", AlertRobotArgs.builder()
     *             .alertRobotName("my-AlertRobot")
     *             .robotType("wechat")
     *             .robotAddr("https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=1c704e23")
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getAlertRobots(GetAlertRobotsArgs.builder()
     *             .alertRobotName(default_.alertRobotName())
     *             .build());
     * 
     *         ctx.export("armsAlertRobotId", nameRegex.applyValue(_nameRegex -> _nameRegex.robots()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAlertRobotsResult> getAlertRobots(GetAlertRobotsArgs args) {
        return getAlertRobots(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Alert Robots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.237.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.AlertRobot;
     * import com.pulumi.alicloud.arms.AlertRobotArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertRobotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var default_ = new AlertRobot("default", AlertRobotArgs.builder()
     *             .alertRobotName("my-AlertRobot")
     *             .robotType("wechat")
     *             .robotAddr("https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=1c704e23")
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getAlertRobots(GetAlertRobotsArgs.builder()
     *             .alertRobotName(default_.alertRobotName())
     *             .build());
     * 
     *         ctx.export("armsAlertRobotId", nameRegex.applyValue(_nameRegex -> _nameRegex.robots()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAlertRobotsResult> getAlertRobotsPlain(GetAlertRobotsPlainArgs args) {
        return getAlertRobotsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Alert Robots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.237.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.AlertRobot;
     * import com.pulumi.alicloud.arms.AlertRobotArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertRobotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var default_ = new AlertRobot("default", AlertRobotArgs.builder()
     *             .alertRobotName("my-AlertRobot")
     *             .robotType("wechat")
     *             .robotAddr("https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=1c704e23")
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getAlertRobots(GetAlertRobotsArgs.builder()
     *             .alertRobotName(default_.alertRobotName())
     *             .build());
     * 
     *         ctx.export("armsAlertRobotId", nameRegex.applyValue(_nameRegex -> _nameRegex.robots()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAlertRobotsResult> getAlertRobots(GetAlertRobotsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getAlertRobots:getAlertRobots", TypeShape.of(GetAlertRobotsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Alert Robots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.237.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.AlertRobot;
     * import com.pulumi.alicloud.arms.AlertRobotArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertRobotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var default_ = new AlertRobot("default", AlertRobotArgs.builder()
     *             .alertRobotName("my-AlertRobot")
     *             .robotType("wechat")
     *             .robotAddr("https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=1c704e23")
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getAlertRobots(GetAlertRobotsArgs.builder()
     *             .alertRobotName(default_.alertRobotName())
     *             .build());
     * 
     *         ctx.export("armsAlertRobotId", nameRegex.applyValue(_nameRegex -> _nameRegex.robots()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAlertRobotsResult> getAlertRobots(GetAlertRobotsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getAlertRobots:getAlertRobots", TypeShape.of(GetAlertRobotsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Alert Robots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.237.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.AlertRobot;
     * import com.pulumi.alicloud.arms.AlertRobotArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetAlertRobotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var default_ = new AlertRobot("default", AlertRobotArgs.builder()
     *             .alertRobotName("my-AlertRobot")
     *             .robotType("wechat")
     *             .robotAddr("https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=1c704e23")
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getAlertRobots(GetAlertRobotsArgs.builder()
     *             .alertRobotName(default_.alertRobotName())
     *             .build());
     * 
     *         ctx.export("armsAlertRobotId", nameRegex.applyValue(_nameRegex -> _nameRegex.robots()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAlertRobotsResult> getAlertRobotsPlain(GetAlertRobotsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:arms/getAlertRobots:getAlertRobots", TypeShape.of(GetAlertRobotsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Dispatch Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.136.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.AlertContact;
     * import com.pulumi.alicloud.arms.AlertContactArgs;
     * import com.pulumi.alicloud.arms.AlertContactGroup;
     * import com.pulumi.alicloud.arms.AlertContactGroupArgs;
     * import com.pulumi.alicloud.arms.DispatchRule;
     * import com.pulumi.alicloud.arms.DispatchRuleArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleGroupRuleArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleLabelMatchExpressionGridArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleNotifyRuleArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetDispatchRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         var default_ = new AlertContact("default", AlertContactArgs.builder()
     *             .alertContactName("example_value")
     *             .email("example_value}{@literal @}{@code aaa.com")
     *             .build());
     * 
     *         var defaultAlertContactGroup = new AlertContactGroup("defaultAlertContactGroup", AlertContactGroupArgs.builder()
     *             .alertContactGroupName("example_value")
     *             .contactIds(default_.id())
     *             .build());
     * 
     *         var defaultDispatchRule = new DispatchRule("defaultDispatchRule", DispatchRuleArgs.builder()
     *             .dispatchRuleName("example_value")
     *             .dispatchType("CREATE_ALERT")
     *             .groupRules(DispatchRuleGroupRuleArgs.builder()
     *                 .groupWaitTime(5)
     *                 .groupInterval(15)
     *                 .repeatInterval(100)
     *                 .groupingFields("alertname")
     *                 .build())
     *             .labelMatchExpressionGrids(DispatchRuleLabelMatchExpressionGridArgs.builder()
     *                 .labelMatchExpressionGroups(DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupArgs.builder()
     *                     .labelMatchExpressions(DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupLabelMatchExpressionArgs.builder()
     *                         .key("_aliyun_arms_involvedObject_kind")
     *                         .value("app")
     *                         .operator("eq")
     *                         .build())
     *                     .build())
     *                 .build())
     *             .notifyRules(DispatchRuleNotifyRuleArgs.builder()
     *                 .notifyObjects(                
     *                     DispatchRuleNotifyRuleNotifyObjectArgs.builder()
     *                         .notifyObjectId(default_.id())
     *                         .notifyType("ARMS_CONTACT")
     *                         .name("example_value")
     *                         .build(),
     *                     DispatchRuleNotifyRuleNotifyObjectArgs.builder()
     *                         .notifyObjectId(defaultAlertContactGroup.id())
     *                         .notifyType("ARMS_CONTACT_GROUP")
     *                         .name("example_value")
     *                         .build())
     *                 .notifyChannels(                
     *                     "dingTalk",
     *                     "wechat")
     *                 .notifyStartTime("10:00")
     *                 .notifyEndTime("23:00")
     *                 .build())
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getDispatchRules(GetDispatchRulesArgs.builder()
     *             .ids(defaultDispatchRule.id())
     *             .build());
     * 
     *         ctx.export("armsDispatchRuleId1", ids.applyValue(_ids -> _ids.rules()[0].id()));
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * 
     */
    public static Output<GetDispatchRulesResult> getDispatchRules() {
        return getDispatchRules(GetDispatchRulesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Dispatch Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.136.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.AlertContact;
     * import com.pulumi.alicloud.arms.AlertContactArgs;
     * import com.pulumi.alicloud.arms.AlertContactGroup;
     * import com.pulumi.alicloud.arms.AlertContactGroupArgs;
     * import com.pulumi.alicloud.arms.DispatchRule;
     * import com.pulumi.alicloud.arms.DispatchRuleArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleGroupRuleArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleLabelMatchExpressionGridArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleNotifyRuleArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetDispatchRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         var default_ = new AlertContact("default", AlertContactArgs.builder()
     *             .alertContactName("example_value")
     *             .email("example_value}{@literal @}{@code aaa.com")
     *             .build());
     * 
     *         var defaultAlertContactGroup = new AlertContactGroup("defaultAlertContactGroup", AlertContactGroupArgs.builder()
     *             .alertContactGroupName("example_value")
     *             .contactIds(default_.id())
     *             .build());
     * 
     *         var defaultDispatchRule = new DispatchRule("defaultDispatchRule", DispatchRuleArgs.builder()
     *             .dispatchRuleName("example_value")
     *             .dispatchType("CREATE_ALERT")
     *             .groupRules(DispatchRuleGroupRuleArgs.builder()
     *                 .groupWaitTime(5)
     *                 .groupInterval(15)
     *                 .repeatInterval(100)
     *                 .groupingFields("alertname")
     *                 .build())
     *             .labelMatchExpressionGrids(DispatchRuleLabelMatchExpressionGridArgs.builder()
     *                 .labelMatchExpressionGroups(DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupArgs.builder()
     *                     .labelMatchExpressions(DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupLabelMatchExpressionArgs.builder()
     *                         .key("_aliyun_arms_involvedObject_kind")
     *                         .value("app")
     *                         .operator("eq")
     *                         .build())
     *                     .build())
     *                 .build())
     *             .notifyRules(DispatchRuleNotifyRuleArgs.builder()
     *                 .notifyObjects(                
     *                     DispatchRuleNotifyRuleNotifyObjectArgs.builder()
     *                         .notifyObjectId(default_.id())
     *                         .notifyType("ARMS_CONTACT")
     *                         .name("example_value")
     *                         .build(),
     *                     DispatchRuleNotifyRuleNotifyObjectArgs.builder()
     *                         .notifyObjectId(defaultAlertContactGroup.id())
     *                         .notifyType("ARMS_CONTACT_GROUP")
     *                         .name("example_value")
     *                         .build())
     *                 .notifyChannels(                
     *                     "dingTalk",
     *                     "wechat")
     *                 .notifyStartTime("10:00")
     *                 .notifyEndTime("23:00")
     *                 .build())
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getDispatchRules(GetDispatchRulesArgs.builder()
     *             .ids(defaultDispatchRule.id())
     *             .build());
     * 
     *         ctx.export("armsDispatchRuleId1", ids.applyValue(_ids -> _ids.rules()[0].id()));
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDispatchRulesResult> getDispatchRulesPlain() {
        return getDispatchRulesPlain(GetDispatchRulesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Dispatch Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.136.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.AlertContact;
     * import com.pulumi.alicloud.arms.AlertContactArgs;
     * import com.pulumi.alicloud.arms.AlertContactGroup;
     * import com.pulumi.alicloud.arms.AlertContactGroupArgs;
     * import com.pulumi.alicloud.arms.DispatchRule;
     * import com.pulumi.alicloud.arms.DispatchRuleArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleGroupRuleArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleLabelMatchExpressionGridArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleNotifyRuleArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetDispatchRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         var default_ = new AlertContact("default", AlertContactArgs.builder()
     *             .alertContactName("example_value")
     *             .email("example_value}{@literal @}{@code aaa.com")
     *             .build());
     * 
     *         var defaultAlertContactGroup = new AlertContactGroup("defaultAlertContactGroup", AlertContactGroupArgs.builder()
     *             .alertContactGroupName("example_value")
     *             .contactIds(default_.id())
     *             .build());
     * 
     *         var defaultDispatchRule = new DispatchRule("defaultDispatchRule", DispatchRuleArgs.builder()
     *             .dispatchRuleName("example_value")
     *             .dispatchType("CREATE_ALERT")
     *             .groupRules(DispatchRuleGroupRuleArgs.builder()
     *                 .groupWaitTime(5)
     *                 .groupInterval(15)
     *                 .repeatInterval(100)
     *                 .groupingFields("alertname")
     *                 .build())
     *             .labelMatchExpressionGrids(DispatchRuleLabelMatchExpressionGridArgs.builder()
     *                 .labelMatchExpressionGroups(DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupArgs.builder()
     *                     .labelMatchExpressions(DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupLabelMatchExpressionArgs.builder()
     *                         .key("_aliyun_arms_involvedObject_kind")
     *                         .value("app")
     *                         .operator("eq")
     *                         .build())
     *                     .build())
     *                 .build())
     *             .notifyRules(DispatchRuleNotifyRuleArgs.builder()
     *                 .notifyObjects(                
     *                     DispatchRuleNotifyRuleNotifyObjectArgs.builder()
     *                         .notifyObjectId(default_.id())
     *                         .notifyType("ARMS_CONTACT")
     *                         .name("example_value")
     *                         .build(),
     *                     DispatchRuleNotifyRuleNotifyObjectArgs.builder()
     *                         .notifyObjectId(defaultAlertContactGroup.id())
     *                         .notifyType("ARMS_CONTACT_GROUP")
     *                         .name("example_value")
     *                         .build())
     *                 .notifyChannels(                
     *                     "dingTalk",
     *                     "wechat")
     *                 .notifyStartTime("10:00")
     *                 .notifyEndTime("23:00")
     *                 .build())
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getDispatchRules(GetDispatchRulesArgs.builder()
     *             .ids(defaultDispatchRule.id())
     *             .build());
     * 
     *         ctx.export("armsDispatchRuleId1", ids.applyValue(_ids -> _ids.rules()[0].id()));
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * 
     */
    public static Output<GetDispatchRulesResult> getDispatchRules(GetDispatchRulesArgs args) {
        return getDispatchRules(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Dispatch Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.136.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.AlertContact;
     * import com.pulumi.alicloud.arms.AlertContactArgs;
     * import com.pulumi.alicloud.arms.AlertContactGroup;
     * import com.pulumi.alicloud.arms.AlertContactGroupArgs;
     * import com.pulumi.alicloud.arms.DispatchRule;
     * import com.pulumi.alicloud.arms.DispatchRuleArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleGroupRuleArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleLabelMatchExpressionGridArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleNotifyRuleArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetDispatchRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         var default_ = new AlertContact("default", AlertContactArgs.builder()
     *             .alertContactName("example_value")
     *             .email("example_value}{@literal @}{@code aaa.com")
     *             .build());
     * 
     *         var defaultAlertContactGroup = new AlertContactGroup("defaultAlertContactGroup", AlertContactGroupArgs.builder()
     *             .alertContactGroupName("example_value")
     *             .contactIds(default_.id())
     *             .build());
     * 
     *         var defaultDispatchRule = new DispatchRule("defaultDispatchRule", DispatchRuleArgs.builder()
     *             .dispatchRuleName("example_value")
     *             .dispatchType("CREATE_ALERT")
     *             .groupRules(DispatchRuleGroupRuleArgs.builder()
     *                 .groupWaitTime(5)
     *                 .groupInterval(15)
     *                 .repeatInterval(100)
     *                 .groupingFields("alertname")
     *                 .build())
     *             .labelMatchExpressionGrids(DispatchRuleLabelMatchExpressionGridArgs.builder()
     *                 .labelMatchExpressionGroups(DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupArgs.builder()
     *                     .labelMatchExpressions(DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupLabelMatchExpressionArgs.builder()
     *                         .key("_aliyun_arms_involvedObject_kind")
     *                         .value("app")
     *                         .operator("eq")
     *                         .build())
     *                     .build())
     *                 .build())
     *             .notifyRules(DispatchRuleNotifyRuleArgs.builder()
     *                 .notifyObjects(                
     *                     DispatchRuleNotifyRuleNotifyObjectArgs.builder()
     *                         .notifyObjectId(default_.id())
     *                         .notifyType("ARMS_CONTACT")
     *                         .name("example_value")
     *                         .build(),
     *                     DispatchRuleNotifyRuleNotifyObjectArgs.builder()
     *                         .notifyObjectId(defaultAlertContactGroup.id())
     *                         .notifyType("ARMS_CONTACT_GROUP")
     *                         .name("example_value")
     *                         .build())
     *                 .notifyChannels(                
     *                     "dingTalk",
     *                     "wechat")
     *                 .notifyStartTime("10:00")
     *                 .notifyEndTime("23:00")
     *                 .build())
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getDispatchRules(GetDispatchRulesArgs.builder()
     *             .ids(defaultDispatchRule.id())
     *             .build());
     * 
     *         ctx.export("armsDispatchRuleId1", ids.applyValue(_ids -> _ids.rules()[0].id()));
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDispatchRulesResult> getDispatchRulesPlain(GetDispatchRulesPlainArgs args) {
        return getDispatchRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Dispatch Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.136.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.AlertContact;
     * import com.pulumi.alicloud.arms.AlertContactArgs;
     * import com.pulumi.alicloud.arms.AlertContactGroup;
     * import com.pulumi.alicloud.arms.AlertContactGroupArgs;
     * import com.pulumi.alicloud.arms.DispatchRule;
     * import com.pulumi.alicloud.arms.DispatchRuleArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleGroupRuleArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleLabelMatchExpressionGridArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleNotifyRuleArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetDispatchRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         var default_ = new AlertContact("default", AlertContactArgs.builder()
     *             .alertContactName("example_value")
     *             .email("example_value}{@literal @}{@code aaa.com")
     *             .build());
     * 
     *         var defaultAlertContactGroup = new AlertContactGroup("defaultAlertContactGroup", AlertContactGroupArgs.builder()
     *             .alertContactGroupName("example_value")
     *             .contactIds(default_.id())
     *             .build());
     * 
     *         var defaultDispatchRule = new DispatchRule("defaultDispatchRule", DispatchRuleArgs.builder()
     *             .dispatchRuleName("example_value")
     *             .dispatchType("CREATE_ALERT")
     *             .groupRules(DispatchRuleGroupRuleArgs.builder()
     *                 .groupWaitTime(5)
     *                 .groupInterval(15)
     *                 .repeatInterval(100)
     *                 .groupingFields("alertname")
     *                 .build())
     *             .labelMatchExpressionGrids(DispatchRuleLabelMatchExpressionGridArgs.builder()
     *                 .labelMatchExpressionGroups(DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupArgs.builder()
     *                     .labelMatchExpressions(DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupLabelMatchExpressionArgs.builder()
     *                         .key("_aliyun_arms_involvedObject_kind")
     *                         .value("app")
     *                         .operator("eq")
     *                         .build())
     *                     .build())
     *                 .build())
     *             .notifyRules(DispatchRuleNotifyRuleArgs.builder()
     *                 .notifyObjects(                
     *                     DispatchRuleNotifyRuleNotifyObjectArgs.builder()
     *                         .notifyObjectId(default_.id())
     *                         .notifyType("ARMS_CONTACT")
     *                         .name("example_value")
     *                         .build(),
     *                     DispatchRuleNotifyRuleNotifyObjectArgs.builder()
     *                         .notifyObjectId(defaultAlertContactGroup.id())
     *                         .notifyType("ARMS_CONTACT_GROUP")
     *                         .name("example_value")
     *                         .build())
     *                 .notifyChannels(                
     *                     "dingTalk",
     *                     "wechat")
     *                 .notifyStartTime("10:00")
     *                 .notifyEndTime("23:00")
     *                 .build())
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getDispatchRules(GetDispatchRulesArgs.builder()
     *             .ids(defaultDispatchRule.id())
     *             .build());
     * 
     *         ctx.export("armsDispatchRuleId1", ids.applyValue(_ids -> _ids.rules()[0].id()));
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * 
     */
    public static Output<GetDispatchRulesResult> getDispatchRules(GetDispatchRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getDispatchRules:getDispatchRules", TypeShape.of(GetDispatchRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Dispatch Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.136.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.AlertContact;
     * import com.pulumi.alicloud.arms.AlertContactArgs;
     * import com.pulumi.alicloud.arms.AlertContactGroup;
     * import com.pulumi.alicloud.arms.AlertContactGroupArgs;
     * import com.pulumi.alicloud.arms.DispatchRule;
     * import com.pulumi.alicloud.arms.DispatchRuleArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleGroupRuleArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleLabelMatchExpressionGridArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleNotifyRuleArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetDispatchRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         var default_ = new AlertContact("default", AlertContactArgs.builder()
     *             .alertContactName("example_value")
     *             .email("example_value}{@literal @}{@code aaa.com")
     *             .build());
     * 
     *         var defaultAlertContactGroup = new AlertContactGroup("defaultAlertContactGroup", AlertContactGroupArgs.builder()
     *             .alertContactGroupName("example_value")
     *             .contactIds(default_.id())
     *             .build());
     * 
     *         var defaultDispatchRule = new DispatchRule("defaultDispatchRule", DispatchRuleArgs.builder()
     *             .dispatchRuleName("example_value")
     *             .dispatchType("CREATE_ALERT")
     *             .groupRules(DispatchRuleGroupRuleArgs.builder()
     *                 .groupWaitTime(5)
     *                 .groupInterval(15)
     *                 .repeatInterval(100)
     *                 .groupingFields("alertname")
     *                 .build())
     *             .labelMatchExpressionGrids(DispatchRuleLabelMatchExpressionGridArgs.builder()
     *                 .labelMatchExpressionGroups(DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupArgs.builder()
     *                     .labelMatchExpressions(DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupLabelMatchExpressionArgs.builder()
     *                         .key("_aliyun_arms_involvedObject_kind")
     *                         .value("app")
     *                         .operator("eq")
     *                         .build())
     *                     .build())
     *                 .build())
     *             .notifyRules(DispatchRuleNotifyRuleArgs.builder()
     *                 .notifyObjects(                
     *                     DispatchRuleNotifyRuleNotifyObjectArgs.builder()
     *                         .notifyObjectId(default_.id())
     *                         .notifyType("ARMS_CONTACT")
     *                         .name("example_value")
     *                         .build(),
     *                     DispatchRuleNotifyRuleNotifyObjectArgs.builder()
     *                         .notifyObjectId(defaultAlertContactGroup.id())
     *                         .notifyType("ARMS_CONTACT_GROUP")
     *                         .name("example_value")
     *                         .build())
     *                 .notifyChannels(                
     *                     "dingTalk",
     *                     "wechat")
     *                 .notifyStartTime("10:00")
     *                 .notifyEndTime("23:00")
     *                 .build())
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getDispatchRules(GetDispatchRulesArgs.builder()
     *             .ids(defaultDispatchRule.id())
     *             .build());
     * 
     *         ctx.export("armsDispatchRuleId1", ids.applyValue(_ids -> _ids.rules()[0].id()));
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * 
     */
    public static Output<GetDispatchRulesResult> getDispatchRules(GetDispatchRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getDispatchRules:getDispatchRules", TypeShape.of(GetDispatchRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Dispatch Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.136.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.AlertContact;
     * import com.pulumi.alicloud.arms.AlertContactArgs;
     * import com.pulumi.alicloud.arms.AlertContactGroup;
     * import com.pulumi.alicloud.arms.AlertContactGroupArgs;
     * import com.pulumi.alicloud.arms.DispatchRule;
     * import com.pulumi.alicloud.arms.DispatchRuleArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleGroupRuleArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleLabelMatchExpressionGridArgs;
     * import com.pulumi.alicloud.arms.inputs.DispatchRuleNotifyRuleArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetDispatchRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         var default_ = new AlertContact("default", AlertContactArgs.builder()
     *             .alertContactName("example_value")
     *             .email("example_value}{@literal @}{@code aaa.com")
     *             .build());
     * 
     *         var defaultAlertContactGroup = new AlertContactGroup("defaultAlertContactGroup", AlertContactGroupArgs.builder()
     *             .alertContactGroupName("example_value")
     *             .contactIds(default_.id())
     *             .build());
     * 
     *         var defaultDispatchRule = new DispatchRule("defaultDispatchRule", DispatchRuleArgs.builder()
     *             .dispatchRuleName("example_value")
     *             .dispatchType("CREATE_ALERT")
     *             .groupRules(DispatchRuleGroupRuleArgs.builder()
     *                 .groupWaitTime(5)
     *                 .groupInterval(15)
     *                 .repeatInterval(100)
     *                 .groupingFields("alertname")
     *                 .build())
     *             .labelMatchExpressionGrids(DispatchRuleLabelMatchExpressionGridArgs.builder()
     *                 .labelMatchExpressionGroups(DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupArgs.builder()
     *                     .labelMatchExpressions(DispatchRuleLabelMatchExpressionGridLabelMatchExpressionGroupLabelMatchExpressionArgs.builder()
     *                         .key("_aliyun_arms_involvedObject_kind")
     *                         .value("app")
     *                         .operator("eq")
     *                         .build())
     *                     .build())
     *                 .build())
     *             .notifyRules(DispatchRuleNotifyRuleArgs.builder()
     *                 .notifyObjects(                
     *                     DispatchRuleNotifyRuleNotifyObjectArgs.builder()
     *                         .notifyObjectId(default_.id())
     *                         .notifyType("ARMS_CONTACT")
     *                         .name("example_value")
     *                         .build(),
     *                     DispatchRuleNotifyRuleNotifyObjectArgs.builder()
     *                         .notifyObjectId(defaultAlertContactGroup.id())
     *                         .notifyType("ARMS_CONTACT_GROUP")
     *                         .name("example_value")
     *                         .build())
     *                 .notifyChannels(                
     *                     "dingTalk",
     *                     "wechat")
     *                 .notifyStartTime("10:00")
     *                 .notifyEndTime("23:00")
     *                 .build())
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getDispatchRules(GetDispatchRulesArgs.builder()
     *             .ids(defaultDispatchRule.id())
     *             .build());
     * 
     *         ctx.export("armsDispatchRuleId1", ids.applyValue(_ids -> _ids.rules()[0].id()));
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDispatchRulesResult> getDispatchRulesPlain(GetDispatchRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:arms/getDispatchRules:getDispatchRules", TypeShape.of(GetDispatchRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ARMS Env Custom Jobs of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.EnvCustomJob;
     * import com.pulumi.alicloud.arms.EnvCustomJobArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvCustomJobsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var default = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("^default-NODELETING$")
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .bindResourceId(default_.ids()[0])
     *             .environmentSubType("ECS")
     *             .environmentType("ECS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Environment")
     *             ))
     *             .build());
     * 
     *         var defaultEnvCustomJob = new EnvCustomJob("defaultEnvCustomJob", EnvCustomJobArgs.builder()
     *             .status("run")
     *             .environmentId(defaultEnvironment.id())
     *             .envCustomJobName(String.format("%s-%s", name,defaultInteger.result()))
     *             .configYaml("""
     * scrape_configs:
     * - job_name: job-demo1
     *   honor_timestamps: false
     *   honor_labels: false
     *   scrape_interval: 30s
     *   scheme: http
     *   metrics_path: /metric
     *   static_configs:
     *   - targets:
     *     - 127.0.0.1:9090
     *             """)
     *             .aliyunLang("en")
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvCustomJobs(GetEnvCustomJobsArgs.builder()
     *             .environmentId(defaultEnvCustomJob.environmentId())
     *             .ids(defaultEnvCustomJob.id())
     *             .build());
     * 
     *         ctx.export("armsEnvCustomJobsId0", ids.applyValue(_ids -> _ids.jobs()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEnvCustomJobsResult> getEnvCustomJobs(GetEnvCustomJobsArgs args) {
        return getEnvCustomJobs(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ARMS Env Custom Jobs of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.EnvCustomJob;
     * import com.pulumi.alicloud.arms.EnvCustomJobArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvCustomJobsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var default = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("^default-NODELETING$")
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .bindResourceId(default_.ids()[0])
     *             .environmentSubType("ECS")
     *             .environmentType("ECS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Environment")
     *             ))
     *             .build());
     * 
     *         var defaultEnvCustomJob = new EnvCustomJob("defaultEnvCustomJob", EnvCustomJobArgs.builder()
     *             .status("run")
     *             .environmentId(defaultEnvironment.id())
     *             .envCustomJobName(String.format("%s-%s", name,defaultInteger.result()))
     *             .configYaml("""
     * scrape_configs:
     * - job_name: job-demo1
     *   honor_timestamps: false
     *   honor_labels: false
     *   scrape_interval: 30s
     *   scheme: http
     *   metrics_path: /metric
     *   static_configs:
     *   - targets:
     *     - 127.0.0.1:9090
     *             """)
     *             .aliyunLang("en")
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvCustomJobs(GetEnvCustomJobsArgs.builder()
     *             .environmentId(defaultEnvCustomJob.environmentId())
     *             .ids(defaultEnvCustomJob.id())
     *             .build());
     * 
     *         ctx.export("armsEnvCustomJobsId0", ids.applyValue(_ids -> _ids.jobs()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEnvCustomJobsResult> getEnvCustomJobsPlain(GetEnvCustomJobsPlainArgs args) {
        return getEnvCustomJobsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ARMS Env Custom Jobs of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.EnvCustomJob;
     * import com.pulumi.alicloud.arms.EnvCustomJobArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvCustomJobsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var default = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("^default-NODELETING$")
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .bindResourceId(default_.ids()[0])
     *             .environmentSubType("ECS")
     *             .environmentType("ECS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Environment")
     *             ))
     *             .build());
     * 
     *         var defaultEnvCustomJob = new EnvCustomJob("defaultEnvCustomJob", EnvCustomJobArgs.builder()
     *             .status("run")
     *             .environmentId(defaultEnvironment.id())
     *             .envCustomJobName(String.format("%s-%s", name,defaultInteger.result()))
     *             .configYaml("""
     * scrape_configs:
     * - job_name: job-demo1
     *   honor_timestamps: false
     *   honor_labels: false
     *   scrape_interval: 30s
     *   scheme: http
     *   metrics_path: /metric
     *   static_configs:
     *   - targets:
     *     - 127.0.0.1:9090
     *             """)
     *             .aliyunLang("en")
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvCustomJobs(GetEnvCustomJobsArgs.builder()
     *             .environmentId(defaultEnvCustomJob.environmentId())
     *             .ids(defaultEnvCustomJob.id())
     *             .build());
     * 
     *         ctx.export("armsEnvCustomJobsId0", ids.applyValue(_ids -> _ids.jobs()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEnvCustomJobsResult> getEnvCustomJobs(GetEnvCustomJobsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getEnvCustomJobs:getEnvCustomJobs", TypeShape.of(GetEnvCustomJobsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ARMS Env Custom Jobs of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.EnvCustomJob;
     * import com.pulumi.alicloud.arms.EnvCustomJobArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvCustomJobsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var default = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("^default-NODELETING$")
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .bindResourceId(default_.ids()[0])
     *             .environmentSubType("ECS")
     *             .environmentType("ECS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Environment")
     *             ))
     *             .build());
     * 
     *         var defaultEnvCustomJob = new EnvCustomJob("defaultEnvCustomJob", EnvCustomJobArgs.builder()
     *             .status("run")
     *             .environmentId(defaultEnvironment.id())
     *             .envCustomJobName(String.format("%s-%s", name,defaultInteger.result()))
     *             .configYaml("""
     * scrape_configs:
     * - job_name: job-demo1
     *   honor_timestamps: false
     *   honor_labels: false
     *   scrape_interval: 30s
     *   scheme: http
     *   metrics_path: /metric
     *   static_configs:
     *   - targets:
     *     - 127.0.0.1:9090
     *             """)
     *             .aliyunLang("en")
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvCustomJobs(GetEnvCustomJobsArgs.builder()
     *             .environmentId(defaultEnvCustomJob.environmentId())
     *             .ids(defaultEnvCustomJob.id())
     *             .build());
     * 
     *         ctx.export("armsEnvCustomJobsId0", ids.applyValue(_ids -> _ids.jobs()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEnvCustomJobsResult> getEnvCustomJobs(GetEnvCustomJobsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getEnvCustomJobs:getEnvCustomJobs", TypeShape.of(GetEnvCustomJobsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ARMS Env Custom Jobs of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.EnvCustomJob;
     * import com.pulumi.alicloud.arms.EnvCustomJobArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvCustomJobsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var default = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("^default-NODELETING$")
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .bindResourceId(default_.ids()[0])
     *             .environmentSubType("ECS")
     *             .environmentType("ECS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Environment")
     *             ))
     *             .build());
     * 
     *         var defaultEnvCustomJob = new EnvCustomJob("defaultEnvCustomJob", EnvCustomJobArgs.builder()
     *             .status("run")
     *             .environmentId(defaultEnvironment.id())
     *             .envCustomJobName(String.format("%s-%s", name,defaultInteger.result()))
     *             .configYaml("""
     * scrape_configs:
     * - job_name: job-demo1
     *   honor_timestamps: false
     *   honor_labels: false
     *   scrape_interval: 30s
     *   scheme: http
     *   metrics_path: /metric
     *   static_configs:
     *   - targets:
     *     - 127.0.0.1:9090
     *             """)
     *             .aliyunLang("en")
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvCustomJobs(GetEnvCustomJobsArgs.builder()
     *             .environmentId(defaultEnvCustomJob.environmentId())
     *             .ids(defaultEnvCustomJob.id())
     *             .build());
     * 
     *         ctx.export("armsEnvCustomJobsId0", ids.applyValue(_ids -> _ids.jobs()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEnvCustomJobsResult> getEnvCustomJobsPlain(GetEnvCustomJobsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:arms/getEnvCustomJobs:getEnvCustomJobs", TypeShape.of(GetEnvCustomJobsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ARMS Env Features of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.CidrsubnetArgs;
     * import com.pulumi.alicloud.ecs.SnapshotPolicy;
     * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.cs.ManagedKubernetes;
     * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.cs.NodePool;
     * import com.pulumi.alicloud.cs.NodePoolArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.EnvFeature;
     * import com.pulumi.alicloud.arms.EnvFeatureArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvFeaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
     *             .build());
     * 
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .cidrBlock("192.168.0.0/16")
     *             .vpcName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .vpcId(vpc.id())
     *             .vswitchName(String.format("%s-%s", name,defaultInteger.result()))
     *             .zoneId(enhanced.zones()[0].zoneId())
     *             .cidrBlock(vpc.cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
     *                 .input(_cidrBlock)
     *                 .newbits(8)
     *                 .netnum(8)
     *                 .build())).applyValue(_invoke -> _invoke.result()))
     *             .build());
     * 
     *         var defaultSnapshotPolicy = new SnapshotPolicy("defaultSnapshotPolicy", SnapshotPolicyArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .repeatWeekdays(            
     *                 "1",
     *                 "2",
     *                 "3")
     *             .retentionDays(-1)
     *             .timePoints(            
     *                 "1",
     *                 "22",
     *                 "23")
     *             .build());
     * 
     *         final var default = vswitch.zoneId().applyValue(_zoneId -> EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(_zoneId)
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .kubernetesNodeRole("Worker")
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build()));
     * 
     *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .clusterSpec("ack.pro.small")
     *             .version("1.24.6-aliyun.1")
     *             .newNatGateway(true)
     *             .nodeCidrMask(26)
     *             .proxyMode("ipvs")
     *             .serviceCidr("172.23.0.0/16")
     *             .podCidr("10.95.0.0/16")
     *             .workerVswitchIds(vswitch.id())
     *             .build());
     * 
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyPairName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
     *             .name("desired_size")
     *             .clusterId(defaultManagedKubernetes.id())
     *             .vswitchIds(vswitch.id())
     *             .instanceTypes(default_.applyValue(_default_ -> _default_.instanceTypes()[0].id()))
     *             .systemDiskCategory("cloud_efficiency")
     *             .systemDiskSize(40)
     *             .keyName(defaultKeyPair.keyPairName())
     *             .desiredSize("2")
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .environmentType("CS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .bindResourceId(defaultNodePool.clusterId())
     *             .environmentSubType("ManagedKubernetes")
     *             .build());
     * 
     *         var defaultEnvFeature = new EnvFeature("defaultEnvFeature", EnvFeatureArgs.builder()
     *             .envFeatureName("metric-agent")
     *             .environmentId(defaultEnvironment.id())
     *             .featureVersion("1.1.17")
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvFeatures(GetEnvFeaturesArgs.builder()
     *             .environmentId(defaultEnvFeature.environmentId())
     *             .ids(defaultEnvFeature.id())
     *             .build());
     * 
     *         ctx.export("armsEnvFeaturesId0", ids.applyValue(_ids -> _ids.features()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEnvFeaturesResult> getEnvFeatures(GetEnvFeaturesArgs args) {
        return getEnvFeatures(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ARMS Env Features of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.CidrsubnetArgs;
     * import com.pulumi.alicloud.ecs.SnapshotPolicy;
     * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.cs.ManagedKubernetes;
     * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.cs.NodePool;
     * import com.pulumi.alicloud.cs.NodePoolArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.EnvFeature;
     * import com.pulumi.alicloud.arms.EnvFeatureArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvFeaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
     *             .build());
     * 
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .cidrBlock("192.168.0.0/16")
     *             .vpcName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .vpcId(vpc.id())
     *             .vswitchName(String.format("%s-%s", name,defaultInteger.result()))
     *             .zoneId(enhanced.zones()[0].zoneId())
     *             .cidrBlock(vpc.cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
     *                 .input(_cidrBlock)
     *                 .newbits(8)
     *                 .netnum(8)
     *                 .build())).applyValue(_invoke -> _invoke.result()))
     *             .build());
     * 
     *         var defaultSnapshotPolicy = new SnapshotPolicy("defaultSnapshotPolicy", SnapshotPolicyArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .repeatWeekdays(            
     *                 "1",
     *                 "2",
     *                 "3")
     *             .retentionDays(-1)
     *             .timePoints(            
     *                 "1",
     *                 "22",
     *                 "23")
     *             .build());
     * 
     *         final var default = vswitch.zoneId().applyValue(_zoneId -> EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(_zoneId)
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .kubernetesNodeRole("Worker")
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build()));
     * 
     *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .clusterSpec("ack.pro.small")
     *             .version("1.24.6-aliyun.1")
     *             .newNatGateway(true)
     *             .nodeCidrMask(26)
     *             .proxyMode("ipvs")
     *             .serviceCidr("172.23.0.0/16")
     *             .podCidr("10.95.0.0/16")
     *             .workerVswitchIds(vswitch.id())
     *             .build());
     * 
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyPairName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
     *             .name("desired_size")
     *             .clusterId(defaultManagedKubernetes.id())
     *             .vswitchIds(vswitch.id())
     *             .instanceTypes(default_.applyValue(_default_ -> _default_.instanceTypes()[0].id()))
     *             .systemDiskCategory("cloud_efficiency")
     *             .systemDiskSize(40)
     *             .keyName(defaultKeyPair.keyPairName())
     *             .desiredSize("2")
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .environmentType("CS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .bindResourceId(defaultNodePool.clusterId())
     *             .environmentSubType("ManagedKubernetes")
     *             .build());
     * 
     *         var defaultEnvFeature = new EnvFeature("defaultEnvFeature", EnvFeatureArgs.builder()
     *             .envFeatureName("metric-agent")
     *             .environmentId(defaultEnvironment.id())
     *             .featureVersion("1.1.17")
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvFeatures(GetEnvFeaturesArgs.builder()
     *             .environmentId(defaultEnvFeature.environmentId())
     *             .ids(defaultEnvFeature.id())
     *             .build());
     * 
     *         ctx.export("armsEnvFeaturesId0", ids.applyValue(_ids -> _ids.features()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEnvFeaturesResult> getEnvFeaturesPlain(GetEnvFeaturesPlainArgs args) {
        return getEnvFeaturesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ARMS Env Features of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.CidrsubnetArgs;
     * import com.pulumi.alicloud.ecs.SnapshotPolicy;
     * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.cs.ManagedKubernetes;
     * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.cs.NodePool;
     * import com.pulumi.alicloud.cs.NodePoolArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.EnvFeature;
     * import com.pulumi.alicloud.arms.EnvFeatureArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvFeaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
     *             .build());
     * 
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .cidrBlock("192.168.0.0/16")
     *             .vpcName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .vpcId(vpc.id())
     *             .vswitchName(String.format("%s-%s", name,defaultInteger.result()))
     *             .zoneId(enhanced.zones()[0].zoneId())
     *             .cidrBlock(vpc.cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
     *                 .input(_cidrBlock)
     *                 .newbits(8)
     *                 .netnum(8)
     *                 .build())).applyValue(_invoke -> _invoke.result()))
     *             .build());
     * 
     *         var defaultSnapshotPolicy = new SnapshotPolicy("defaultSnapshotPolicy", SnapshotPolicyArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .repeatWeekdays(            
     *                 "1",
     *                 "2",
     *                 "3")
     *             .retentionDays(-1)
     *             .timePoints(            
     *                 "1",
     *                 "22",
     *                 "23")
     *             .build());
     * 
     *         final var default = vswitch.zoneId().applyValue(_zoneId -> EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(_zoneId)
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .kubernetesNodeRole("Worker")
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build()));
     * 
     *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .clusterSpec("ack.pro.small")
     *             .version("1.24.6-aliyun.1")
     *             .newNatGateway(true)
     *             .nodeCidrMask(26)
     *             .proxyMode("ipvs")
     *             .serviceCidr("172.23.0.0/16")
     *             .podCidr("10.95.0.0/16")
     *             .workerVswitchIds(vswitch.id())
     *             .build());
     * 
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyPairName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
     *             .name("desired_size")
     *             .clusterId(defaultManagedKubernetes.id())
     *             .vswitchIds(vswitch.id())
     *             .instanceTypes(default_.applyValue(_default_ -> _default_.instanceTypes()[0].id()))
     *             .systemDiskCategory("cloud_efficiency")
     *             .systemDiskSize(40)
     *             .keyName(defaultKeyPair.keyPairName())
     *             .desiredSize("2")
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .environmentType("CS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .bindResourceId(defaultNodePool.clusterId())
     *             .environmentSubType("ManagedKubernetes")
     *             .build());
     * 
     *         var defaultEnvFeature = new EnvFeature("defaultEnvFeature", EnvFeatureArgs.builder()
     *             .envFeatureName("metric-agent")
     *             .environmentId(defaultEnvironment.id())
     *             .featureVersion("1.1.17")
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvFeatures(GetEnvFeaturesArgs.builder()
     *             .environmentId(defaultEnvFeature.environmentId())
     *             .ids(defaultEnvFeature.id())
     *             .build());
     * 
     *         ctx.export("armsEnvFeaturesId0", ids.applyValue(_ids -> _ids.features()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEnvFeaturesResult> getEnvFeatures(GetEnvFeaturesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getEnvFeatures:getEnvFeatures", TypeShape.of(GetEnvFeaturesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ARMS Env Features of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.CidrsubnetArgs;
     * import com.pulumi.alicloud.ecs.SnapshotPolicy;
     * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.cs.ManagedKubernetes;
     * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.cs.NodePool;
     * import com.pulumi.alicloud.cs.NodePoolArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.EnvFeature;
     * import com.pulumi.alicloud.arms.EnvFeatureArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvFeaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
     *             .build());
     * 
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .cidrBlock("192.168.0.0/16")
     *             .vpcName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .vpcId(vpc.id())
     *             .vswitchName(String.format("%s-%s", name,defaultInteger.result()))
     *             .zoneId(enhanced.zones()[0].zoneId())
     *             .cidrBlock(vpc.cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
     *                 .input(_cidrBlock)
     *                 .newbits(8)
     *                 .netnum(8)
     *                 .build())).applyValue(_invoke -> _invoke.result()))
     *             .build());
     * 
     *         var defaultSnapshotPolicy = new SnapshotPolicy("defaultSnapshotPolicy", SnapshotPolicyArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .repeatWeekdays(            
     *                 "1",
     *                 "2",
     *                 "3")
     *             .retentionDays(-1)
     *             .timePoints(            
     *                 "1",
     *                 "22",
     *                 "23")
     *             .build());
     * 
     *         final var default = vswitch.zoneId().applyValue(_zoneId -> EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(_zoneId)
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .kubernetesNodeRole("Worker")
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build()));
     * 
     *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .clusterSpec("ack.pro.small")
     *             .version("1.24.6-aliyun.1")
     *             .newNatGateway(true)
     *             .nodeCidrMask(26)
     *             .proxyMode("ipvs")
     *             .serviceCidr("172.23.0.0/16")
     *             .podCidr("10.95.0.0/16")
     *             .workerVswitchIds(vswitch.id())
     *             .build());
     * 
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyPairName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
     *             .name("desired_size")
     *             .clusterId(defaultManagedKubernetes.id())
     *             .vswitchIds(vswitch.id())
     *             .instanceTypes(default_.applyValue(_default_ -> _default_.instanceTypes()[0].id()))
     *             .systemDiskCategory("cloud_efficiency")
     *             .systemDiskSize(40)
     *             .keyName(defaultKeyPair.keyPairName())
     *             .desiredSize("2")
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .environmentType("CS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .bindResourceId(defaultNodePool.clusterId())
     *             .environmentSubType("ManagedKubernetes")
     *             .build());
     * 
     *         var defaultEnvFeature = new EnvFeature("defaultEnvFeature", EnvFeatureArgs.builder()
     *             .envFeatureName("metric-agent")
     *             .environmentId(defaultEnvironment.id())
     *             .featureVersion("1.1.17")
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvFeatures(GetEnvFeaturesArgs.builder()
     *             .environmentId(defaultEnvFeature.environmentId())
     *             .ids(defaultEnvFeature.id())
     *             .build());
     * 
     *         ctx.export("armsEnvFeaturesId0", ids.applyValue(_ids -> _ids.features()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEnvFeaturesResult> getEnvFeatures(GetEnvFeaturesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getEnvFeatures:getEnvFeatures", TypeShape.of(GetEnvFeaturesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ARMS Env Features of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.CidrsubnetArgs;
     * import com.pulumi.alicloud.ecs.SnapshotPolicy;
     * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.cs.ManagedKubernetes;
     * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.cs.NodePool;
     * import com.pulumi.alicloud.cs.NodePoolArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.EnvFeature;
     * import com.pulumi.alicloud.arms.EnvFeatureArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvFeaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
     *             .build());
     * 
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .cidrBlock("192.168.0.0/16")
     *             .vpcName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .vpcId(vpc.id())
     *             .vswitchName(String.format("%s-%s", name,defaultInteger.result()))
     *             .zoneId(enhanced.zones()[0].zoneId())
     *             .cidrBlock(vpc.cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
     *                 .input(_cidrBlock)
     *                 .newbits(8)
     *                 .netnum(8)
     *                 .build())).applyValue(_invoke -> _invoke.result()))
     *             .build());
     * 
     *         var defaultSnapshotPolicy = new SnapshotPolicy("defaultSnapshotPolicy", SnapshotPolicyArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .repeatWeekdays(            
     *                 "1",
     *                 "2",
     *                 "3")
     *             .retentionDays(-1)
     *             .timePoints(            
     *                 "1",
     *                 "22",
     *                 "23")
     *             .build());
     * 
     *         final var default = vswitch.zoneId().applyValue(_zoneId -> EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(_zoneId)
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .kubernetesNodeRole("Worker")
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build()));
     * 
     *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .clusterSpec("ack.pro.small")
     *             .version("1.24.6-aliyun.1")
     *             .newNatGateway(true)
     *             .nodeCidrMask(26)
     *             .proxyMode("ipvs")
     *             .serviceCidr("172.23.0.0/16")
     *             .podCidr("10.95.0.0/16")
     *             .workerVswitchIds(vswitch.id())
     *             .build());
     * 
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyPairName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
     *             .name("desired_size")
     *             .clusterId(defaultManagedKubernetes.id())
     *             .vswitchIds(vswitch.id())
     *             .instanceTypes(default_.applyValue(_default_ -> _default_.instanceTypes()[0].id()))
     *             .systemDiskCategory("cloud_efficiency")
     *             .systemDiskSize(40)
     *             .keyName(defaultKeyPair.keyPairName())
     *             .desiredSize("2")
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .environmentType("CS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .bindResourceId(defaultNodePool.clusterId())
     *             .environmentSubType("ManagedKubernetes")
     *             .build());
     * 
     *         var defaultEnvFeature = new EnvFeature("defaultEnvFeature", EnvFeatureArgs.builder()
     *             .envFeatureName("metric-agent")
     *             .environmentId(defaultEnvironment.id())
     *             .featureVersion("1.1.17")
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvFeatures(GetEnvFeaturesArgs.builder()
     *             .environmentId(defaultEnvFeature.environmentId())
     *             .ids(defaultEnvFeature.id())
     *             .build());
     * 
     *         ctx.export("armsEnvFeaturesId0", ids.applyValue(_ids -> _ids.features()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEnvFeaturesResult> getEnvFeaturesPlain(GetEnvFeaturesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:arms/getEnvFeatures:getEnvFeatures", TypeShape.of(GetEnvFeaturesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ARMS Env Pod Monitors of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.CidrsubnetArgs;
     * import com.pulumi.alicloud.ecs.SnapshotPolicy;
     * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.cs.ManagedKubernetes;
     * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.cs.NodePool;
     * import com.pulumi.alicloud.cs.NodePoolArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.EnvPodMonitor;
     * import com.pulumi.alicloud.arms.EnvPodMonitorArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvPodMonitorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
     *             .build());
     * 
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .max(99999)
     *             .min(10000)
     *             .build());
     * 
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .description(String.format("%s-%s", name,defaultInteger.result()))
     *             .cidrBlock("192.168.0.0/16")
     *             .vpcName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .description(String.format("%s-%s", name,defaultInteger.result()))
     *             .vpcId(vpc.id())
     *             .vswitchName(String.format("%s-%s", name,defaultInteger.result()))
     *             .zoneId(enhanced.zones()[0].zoneId())
     *             .cidrBlock(vpc.cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
     *                 .input(_cidrBlock)
     *                 .newbits(8)
     *                 .netnum(8)
     *                 .build())).applyValue(_invoke -> _invoke.result()))
     *             .build());
     * 
     *         var defaultSnapshotPolicy = new SnapshotPolicy("defaultSnapshotPolicy", SnapshotPolicyArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .repeatWeekdays(            
     *                 "1",
     *                 "2",
     *                 "3")
     *             .retentionDays(-1)
     *             .timePoints(            
     *                 "1",
     *                 "22",
     *                 "23")
     *             .build());
     * 
     *         final var default = vswitch.zoneId().applyValue(_zoneId -> EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(_zoneId)
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .kubernetesNodeRole("Worker")
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build()));
     * 
     *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
     *             .name(String.format("terraform-example-%s", defaultInteger.result()))
     *             .clusterSpec("ack.pro.small")
     *             .version("1.24.6-aliyun.1")
     *             .newNatGateway(true)
     *             .nodeCidrMask(26)
     *             .proxyMode("ipvs")
     *             .serviceCidr("172.23.0.0/16")
     *             .podCidr("10.95.0.0/16")
     *             .workerVswitchIds(vswitch.id())
     *             .build());
     * 
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyPairName(String.format("terraform-example-%s", defaultInteger.result()))
     *             .build());
     * 
     *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
     *             .name("desired_size")
     *             .clusterId(defaultManagedKubernetes.id())
     *             .vswitchIds(vswitch.id())
     *             .instanceTypes(default_.applyValue(_default_ -> _default_.instanceTypes()[0].id()))
     *             .systemDiskCategory("cloud_efficiency")
     *             .systemDiskSize(40)
     *             .keyName(defaultKeyPair.keyName())
     *             .desiredSize("2")
     *             .build());
     * 
     *         var environment_cs = new Environment("environment-cs", EnvironmentArgs.builder()
     *             .environmentType("CS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .bindResourceId(defaultNodePool.clusterId())
     *             .environmentSubType("ManagedKubernetes")
     *             .build());
     * 
     *         var defaultEnvPodMonitor = new EnvPodMonitor("defaultEnvPodMonitor", EnvPodMonitorArgs.builder()
     *             .aliyunLang("en")
     *             .environmentId(environment_cs.id())
     *             .configYaml("""
     * apiVersion: monitoring.coreos.com/v1
     * kind: PodMonitor
     * metadata:
     *   name: arms-admin-pm1
     *   namespace: arms-prom
     *   annotations:
     *     arms.prometheus.io/discovery: 'true'
     *     o11y.aliyun.com/addon-name: mysql
     *     o11y.aliyun.com/addon-version: 1.0.2
     *     o11y.aliyun.com/release-name: mysql2
     * spec:
     *   selector:
     *     matchLabels:
     *       app: arms-prometheus-ack-arms-prometheus
     *       release: arms-prometheus
     *   namespaceSelector:
     *     any: true
     *   podMetricsEndpoints:
     *   - interval: 30s
     *     targetPort: 9335
     *     path: /metrics
     *   - interval: 11s
     *     targetPort: 9335
     *     path: /metric
     *             """)
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvPodMonitors(GetEnvPodMonitorsArgs.builder()
     *             .environmentId(defaultEnvPodMonitor.environmentId())
     *             .ids(defaultEnvPodMonitor.id())
     *             .build());
     * 
     *         ctx.export("armsEnvPodMonitorsId0", ids.applyValue(_ids -> _ids.monitors()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEnvPodMonitorsResult> getEnvPodMonitors(GetEnvPodMonitorsArgs args) {
        return getEnvPodMonitors(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ARMS Env Pod Monitors of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.CidrsubnetArgs;
     * import com.pulumi.alicloud.ecs.SnapshotPolicy;
     * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.cs.ManagedKubernetes;
     * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.cs.NodePool;
     * import com.pulumi.alicloud.cs.NodePoolArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.EnvPodMonitor;
     * import com.pulumi.alicloud.arms.EnvPodMonitorArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvPodMonitorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
     *             .build());
     * 
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .max(99999)
     *             .min(10000)
     *             .build());
     * 
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .description(String.format("%s-%s", name,defaultInteger.result()))
     *             .cidrBlock("192.168.0.0/16")
     *             .vpcName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .description(String.format("%s-%s", name,defaultInteger.result()))
     *             .vpcId(vpc.id())
     *             .vswitchName(String.format("%s-%s", name,defaultInteger.result()))
     *             .zoneId(enhanced.zones()[0].zoneId())
     *             .cidrBlock(vpc.cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
     *                 .input(_cidrBlock)
     *                 .newbits(8)
     *                 .netnum(8)
     *                 .build())).applyValue(_invoke -> _invoke.result()))
     *             .build());
     * 
     *         var defaultSnapshotPolicy = new SnapshotPolicy("defaultSnapshotPolicy", SnapshotPolicyArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .repeatWeekdays(            
     *                 "1",
     *                 "2",
     *                 "3")
     *             .retentionDays(-1)
     *             .timePoints(            
     *                 "1",
     *                 "22",
     *                 "23")
     *             .build());
     * 
     *         final var default = vswitch.zoneId().applyValue(_zoneId -> EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(_zoneId)
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .kubernetesNodeRole("Worker")
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build()));
     * 
     *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
     *             .name(String.format("terraform-example-%s", defaultInteger.result()))
     *             .clusterSpec("ack.pro.small")
     *             .version("1.24.6-aliyun.1")
     *             .newNatGateway(true)
     *             .nodeCidrMask(26)
     *             .proxyMode("ipvs")
     *             .serviceCidr("172.23.0.0/16")
     *             .podCidr("10.95.0.0/16")
     *             .workerVswitchIds(vswitch.id())
     *             .build());
     * 
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyPairName(String.format("terraform-example-%s", defaultInteger.result()))
     *             .build());
     * 
     *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
     *             .name("desired_size")
     *             .clusterId(defaultManagedKubernetes.id())
     *             .vswitchIds(vswitch.id())
     *             .instanceTypes(default_.applyValue(_default_ -> _default_.instanceTypes()[0].id()))
     *             .systemDiskCategory("cloud_efficiency")
     *             .systemDiskSize(40)
     *             .keyName(defaultKeyPair.keyName())
     *             .desiredSize("2")
     *             .build());
     * 
     *         var environment_cs = new Environment("environment-cs", EnvironmentArgs.builder()
     *             .environmentType("CS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .bindResourceId(defaultNodePool.clusterId())
     *             .environmentSubType("ManagedKubernetes")
     *             .build());
     * 
     *         var defaultEnvPodMonitor = new EnvPodMonitor("defaultEnvPodMonitor", EnvPodMonitorArgs.builder()
     *             .aliyunLang("en")
     *             .environmentId(environment_cs.id())
     *             .configYaml("""
     * apiVersion: monitoring.coreos.com/v1
     * kind: PodMonitor
     * metadata:
     *   name: arms-admin-pm1
     *   namespace: arms-prom
     *   annotations:
     *     arms.prometheus.io/discovery: 'true'
     *     o11y.aliyun.com/addon-name: mysql
     *     o11y.aliyun.com/addon-version: 1.0.2
     *     o11y.aliyun.com/release-name: mysql2
     * spec:
     *   selector:
     *     matchLabels:
     *       app: arms-prometheus-ack-arms-prometheus
     *       release: arms-prometheus
     *   namespaceSelector:
     *     any: true
     *   podMetricsEndpoints:
     *   - interval: 30s
     *     targetPort: 9335
     *     path: /metrics
     *   - interval: 11s
     *     targetPort: 9335
     *     path: /metric
     *             """)
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvPodMonitors(GetEnvPodMonitorsArgs.builder()
     *             .environmentId(defaultEnvPodMonitor.environmentId())
     *             .ids(defaultEnvPodMonitor.id())
     *             .build());
     * 
     *         ctx.export("armsEnvPodMonitorsId0", ids.applyValue(_ids -> _ids.monitors()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEnvPodMonitorsResult> getEnvPodMonitorsPlain(GetEnvPodMonitorsPlainArgs args) {
        return getEnvPodMonitorsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ARMS Env Pod Monitors of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.CidrsubnetArgs;
     * import com.pulumi.alicloud.ecs.SnapshotPolicy;
     * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.cs.ManagedKubernetes;
     * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.cs.NodePool;
     * import com.pulumi.alicloud.cs.NodePoolArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.EnvPodMonitor;
     * import com.pulumi.alicloud.arms.EnvPodMonitorArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvPodMonitorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
     *             .build());
     * 
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .max(99999)
     *             .min(10000)
     *             .build());
     * 
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .description(String.format("%s-%s", name,defaultInteger.result()))
     *             .cidrBlock("192.168.0.0/16")
     *             .vpcName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .description(String.format("%s-%s", name,defaultInteger.result()))
     *             .vpcId(vpc.id())
     *             .vswitchName(String.format("%s-%s", name,defaultInteger.result()))
     *             .zoneId(enhanced.zones()[0].zoneId())
     *             .cidrBlock(vpc.cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
     *                 .input(_cidrBlock)
     *                 .newbits(8)
     *                 .netnum(8)
     *                 .build())).applyValue(_invoke -> _invoke.result()))
     *             .build());
     * 
     *         var defaultSnapshotPolicy = new SnapshotPolicy("defaultSnapshotPolicy", SnapshotPolicyArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .repeatWeekdays(            
     *                 "1",
     *                 "2",
     *                 "3")
     *             .retentionDays(-1)
     *             .timePoints(            
     *                 "1",
     *                 "22",
     *                 "23")
     *             .build());
     * 
     *         final var default = vswitch.zoneId().applyValue(_zoneId -> EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(_zoneId)
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .kubernetesNodeRole("Worker")
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build()));
     * 
     *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
     *             .name(String.format("terraform-example-%s", defaultInteger.result()))
     *             .clusterSpec("ack.pro.small")
     *             .version("1.24.6-aliyun.1")
     *             .newNatGateway(true)
     *             .nodeCidrMask(26)
     *             .proxyMode("ipvs")
     *             .serviceCidr("172.23.0.0/16")
     *             .podCidr("10.95.0.0/16")
     *             .workerVswitchIds(vswitch.id())
     *             .build());
     * 
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyPairName(String.format("terraform-example-%s", defaultInteger.result()))
     *             .build());
     * 
     *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
     *             .name("desired_size")
     *             .clusterId(defaultManagedKubernetes.id())
     *             .vswitchIds(vswitch.id())
     *             .instanceTypes(default_.applyValue(_default_ -> _default_.instanceTypes()[0].id()))
     *             .systemDiskCategory("cloud_efficiency")
     *             .systemDiskSize(40)
     *             .keyName(defaultKeyPair.keyName())
     *             .desiredSize("2")
     *             .build());
     * 
     *         var environment_cs = new Environment("environment-cs", EnvironmentArgs.builder()
     *             .environmentType("CS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .bindResourceId(defaultNodePool.clusterId())
     *             .environmentSubType("ManagedKubernetes")
     *             .build());
     * 
     *         var defaultEnvPodMonitor = new EnvPodMonitor("defaultEnvPodMonitor", EnvPodMonitorArgs.builder()
     *             .aliyunLang("en")
     *             .environmentId(environment_cs.id())
     *             .configYaml("""
     * apiVersion: monitoring.coreos.com/v1
     * kind: PodMonitor
     * metadata:
     *   name: arms-admin-pm1
     *   namespace: arms-prom
     *   annotations:
     *     arms.prometheus.io/discovery: 'true'
     *     o11y.aliyun.com/addon-name: mysql
     *     o11y.aliyun.com/addon-version: 1.0.2
     *     o11y.aliyun.com/release-name: mysql2
     * spec:
     *   selector:
     *     matchLabels:
     *       app: arms-prometheus-ack-arms-prometheus
     *       release: arms-prometheus
     *   namespaceSelector:
     *     any: true
     *   podMetricsEndpoints:
     *   - interval: 30s
     *     targetPort: 9335
     *     path: /metrics
     *   - interval: 11s
     *     targetPort: 9335
     *     path: /metric
     *             """)
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvPodMonitors(GetEnvPodMonitorsArgs.builder()
     *             .environmentId(defaultEnvPodMonitor.environmentId())
     *             .ids(defaultEnvPodMonitor.id())
     *             .build());
     * 
     *         ctx.export("armsEnvPodMonitorsId0", ids.applyValue(_ids -> _ids.monitors()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEnvPodMonitorsResult> getEnvPodMonitors(GetEnvPodMonitorsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getEnvPodMonitors:getEnvPodMonitors", TypeShape.of(GetEnvPodMonitorsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ARMS Env Pod Monitors of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.CidrsubnetArgs;
     * import com.pulumi.alicloud.ecs.SnapshotPolicy;
     * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.cs.ManagedKubernetes;
     * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.cs.NodePool;
     * import com.pulumi.alicloud.cs.NodePoolArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.EnvPodMonitor;
     * import com.pulumi.alicloud.arms.EnvPodMonitorArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvPodMonitorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
     *             .build());
     * 
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .max(99999)
     *             .min(10000)
     *             .build());
     * 
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .description(String.format("%s-%s", name,defaultInteger.result()))
     *             .cidrBlock("192.168.0.0/16")
     *             .vpcName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .description(String.format("%s-%s", name,defaultInteger.result()))
     *             .vpcId(vpc.id())
     *             .vswitchName(String.format("%s-%s", name,defaultInteger.result()))
     *             .zoneId(enhanced.zones()[0].zoneId())
     *             .cidrBlock(vpc.cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
     *                 .input(_cidrBlock)
     *                 .newbits(8)
     *                 .netnum(8)
     *                 .build())).applyValue(_invoke -> _invoke.result()))
     *             .build());
     * 
     *         var defaultSnapshotPolicy = new SnapshotPolicy("defaultSnapshotPolicy", SnapshotPolicyArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .repeatWeekdays(            
     *                 "1",
     *                 "2",
     *                 "3")
     *             .retentionDays(-1)
     *             .timePoints(            
     *                 "1",
     *                 "22",
     *                 "23")
     *             .build());
     * 
     *         final var default = vswitch.zoneId().applyValue(_zoneId -> EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(_zoneId)
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .kubernetesNodeRole("Worker")
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build()));
     * 
     *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
     *             .name(String.format("terraform-example-%s", defaultInteger.result()))
     *             .clusterSpec("ack.pro.small")
     *             .version("1.24.6-aliyun.1")
     *             .newNatGateway(true)
     *             .nodeCidrMask(26)
     *             .proxyMode("ipvs")
     *             .serviceCidr("172.23.0.0/16")
     *             .podCidr("10.95.0.0/16")
     *             .workerVswitchIds(vswitch.id())
     *             .build());
     * 
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyPairName(String.format("terraform-example-%s", defaultInteger.result()))
     *             .build());
     * 
     *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
     *             .name("desired_size")
     *             .clusterId(defaultManagedKubernetes.id())
     *             .vswitchIds(vswitch.id())
     *             .instanceTypes(default_.applyValue(_default_ -> _default_.instanceTypes()[0].id()))
     *             .systemDiskCategory("cloud_efficiency")
     *             .systemDiskSize(40)
     *             .keyName(defaultKeyPair.keyName())
     *             .desiredSize("2")
     *             .build());
     * 
     *         var environment_cs = new Environment("environment-cs", EnvironmentArgs.builder()
     *             .environmentType("CS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .bindResourceId(defaultNodePool.clusterId())
     *             .environmentSubType("ManagedKubernetes")
     *             .build());
     * 
     *         var defaultEnvPodMonitor = new EnvPodMonitor("defaultEnvPodMonitor", EnvPodMonitorArgs.builder()
     *             .aliyunLang("en")
     *             .environmentId(environment_cs.id())
     *             .configYaml("""
     * apiVersion: monitoring.coreos.com/v1
     * kind: PodMonitor
     * metadata:
     *   name: arms-admin-pm1
     *   namespace: arms-prom
     *   annotations:
     *     arms.prometheus.io/discovery: 'true'
     *     o11y.aliyun.com/addon-name: mysql
     *     o11y.aliyun.com/addon-version: 1.0.2
     *     o11y.aliyun.com/release-name: mysql2
     * spec:
     *   selector:
     *     matchLabels:
     *       app: arms-prometheus-ack-arms-prometheus
     *       release: arms-prometheus
     *   namespaceSelector:
     *     any: true
     *   podMetricsEndpoints:
     *   - interval: 30s
     *     targetPort: 9335
     *     path: /metrics
     *   - interval: 11s
     *     targetPort: 9335
     *     path: /metric
     *             """)
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvPodMonitors(GetEnvPodMonitorsArgs.builder()
     *             .environmentId(defaultEnvPodMonitor.environmentId())
     *             .ids(defaultEnvPodMonitor.id())
     *             .build());
     * 
     *         ctx.export("armsEnvPodMonitorsId0", ids.applyValue(_ids -> _ids.monitors()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEnvPodMonitorsResult> getEnvPodMonitors(GetEnvPodMonitorsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getEnvPodMonitors:getEnvPodMonitors", TypeShape.of(GetEnvPodMonitorsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ARMS Env Pod Monitors of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.CidrsubnetArgs;
     * import com.pulumi.alicloud.ecs.SnapshotPolicy;
     * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.cs.ManagedKubernetes;
     * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.cs.NodePool;
     * import com.pulumi.alicloud.cs.NodePoolArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.EnvPodMonitor;
     * import com.pulumi.alicloud.arms.EnvPodMonitorArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvPodMonitorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
     *             .build());
     * 
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .max(99999)
     *             .min(10000)
     *             .build());
     * 
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .description(String.format("%s-%s", name,defaultInteger.result()))
     *             .cidrBlock("192.168.0.0/16")
     *             .vpcName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .description(String.format("%s-%s", name,defaultInteger.result()))
     *             .vpcId(vpc.id())
     *             .vswitchName(String.format("%s-%s", name,defaultInteger.result()))
     *             .zoneId(enhanced.zones()[0].zoneId())
     *             .cidrBlock(vpc.cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
     *                 .input(_cidrBlock)
     *                 .newbits(8)
     *                 .netnum(8)
     *                 .build())).applyValue(_invoke -> _invoke.result()))
     *             .build());
     * 
     *         var defaultSnapshotPolicy = new SnapshotPolicy("defaultSnapshotPolicy", SnapshotPolicyArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .repeatWeekdays(            
     *                 "1",
     *                 "2",
     *                 "3")
     *             .retentionDays(-1)
     *             .timePoints(            
     *                 "1",
     *                 "22",
     *                 "23")
     *             .build());
     * 
     *         final var default = vswitch.zoneId().applyValue(_zoneId -> EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(_zoneId)
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .kubernetesNodeRole("Worker")
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build()));
     * 
     *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
     *             .name(String.format("terraform-example-%s", defaultInteger.result()))
     *             .clusterSpec("ack.pro.small")
     *             .version("1.24.6-aliyun.1")
     *             .newNatGateway(true)
     *             .nodeCidrMask(26)
     *             .proxyMode("ipvs")
     *             .serviceCidr("172.23.0.0/16")
     *             .podCidr("10.95.0.0/16")
     *             .workerVswitchIds(vswitch.id())
     *             .build());
     * 
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyPairName(String.format("terraform-example-%s", defaultInteger.result()))
     *             .build());
     * 
     *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
     *             .name("desired_size")
     *             .clusterId(defaultManagedKubernetes.id())
     *             .vswitchIds(vswitch.id())
     *             .instanceTypes(default_.applyValue(_default_ -> _default_.instanceTypes()[0].id()))
     *             .systemDiskCategory("cloud_efficiency")
     *             .systemDiskSize(40)
     *             .keyName(defaultKeyPair.keyName())
     *             .desiredSize("2")
     *             .build());
     * 
     *         var environment_cs = new Environment("environment-cs", EnvironmentArgs.builder()
     *             .environmentType("CS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .bindResourceId(defaultNodePool.clusterId())
     *             .environmentSubType("ManagedKubernetes")
     *             .build());
     * 
     *         var defaultEnvPodMonitor = new EnvPodMonitor("defaultEnvPodMonitor", EnvPodMonitorArgs.builder()
     *             .aliyunLang("en")
     *             .environmentId(environment_cs.id())
     *             .configYaml("""
     * apiVersion: monitoring.coreos.com/v1
     * kind: PodMonitor
     * metadata:
     *   name: arms-admin-pm1
     *   namespace: arms-prom
     *   annotations:
     *     arms.prometheus.io/discovery: 'true'
     *     o11y.aliyun.com/addon-name: mysql
     *     o11y.aliyun.com/addon-version: 1.0.2
     *     o11y.aliyun.com/release-name: mysql2
     * spec:
     *   selector:
     *     matchLabels:
     *       app: arms-prometheus-ack-arms-prometheus
     *       release: arms-prometheus
     *   namespaceSelector:
     *     any: true
     *   podMetricsEndpoints:
     *   - interval: 30s
     *     targetPort: 9335
     *     path: /metrics
     *   - interval: 11s
     *     targetPort: 9335
     *     path: /metric
     *             """)
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvPodMonitors(GetEnvPodMonitorsArgs.builder()
     *             .environmentId(defaultEnvPodMonitor.environmentId())
     *             .ids(defaultEnvPodMonitor.id())
     *             .build());
     * 
     *         ctx.export("armsEnvPodMonitorsId0", ids.applyValue(_ids -> _ids.monitors()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEnvPodMonitorsResult> getEnvPodMonitorsPlain(GetEnvPodMonitorsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:arms/getEnvPodMonitors:getEnvPodMonitors", TypeShape.of(GetEnvPodMonitorsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ARMS Env Service Monitors of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.CidrsubnetArgs;
     * import com.pulumi.alicloud.ecs.SnapshotPolicy;
     * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.cs.ManagedKubernetes;
     * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.cs.NodePool;
     * import com.pulumi.alicloud.cs.NodePoolArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.EnvServiceMonitor;
     * import com.pulumi.alicloud.arms.EnvServiceMonitorArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvServiceMonitorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
     *             .build());
     * 
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .cidrBlock("192.168.0.0/16")
     *             .vpcName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .vpcId(vpc.id())
     *             .vswitchName(String.format("%s-%s", name,defaultInteger.result()))
     *             .zoneId(enhanced.zones()[0].zoneId())
     *             .cidrBlock(vpc.cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
     *                 .input(_cidrBlock)
     *                 .newbits(8)
     *                 .netnum(8)
     *                 .build())).applyValue(_invoke -> _invoke.result()))
     *             .build());
     * 
     *         var defaultSnapshotPolicy = new SnapshotPolicy("defaultSnapshotPolicy", SnapshotPolicyArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .repeatWeekdays(            
     *                 "1",
     *                 "2",
     *                 "3")
     *             .retentionDays(-1)
     *             .timePoints(            
     *                 "1",
     *                 "22",
     *                 "23")
     *             .build());
     * 
     *         final var default = vswitch.zoneId().applyValue(_zoneId -> EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(_zoneId)
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .kubernetesNodeRole("Worker")
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build()));
     * 
     *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .clusterSpec("ack.pro.small")
     *             .version("1.24.6-aliyun.1")
     *             .newNatGateway(true)
     *             .nodeCidrMask(26)
     *             .proxyMode("ipvs")
     *             .serviceCidr("172.23.0.0/16")
     *             .podCidr("10.95.0.0/16")
     *             .workerVswitchIds(vswitch.id())
     *             .build());
     * 
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyPairName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
     *             .name("desired_size")
     *             .clusterId(defaultManagedKubernetes.id())
     *             .vswitchIds(vswitch.id())
     *             .instanceTypes(default_.applyValue(_default_ -> _default_.instanceTypes()[0].id()))
     *             .systemDiskCategory("cloud_efficiency")
     *             .systemDiskSize(40)
     *             .keyName(defaultKeyPair.keyPairName())
     *             .desiredSize("2")
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .environmentType("CS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .bindResourceId(defaultNodePool.clusterId())
     *             .environmentSubType("ManagedKubernetes")
     *             .build());
     * 
     *         var defaultEnvServiceMonitor = new EnvServiceMonitor("defaultEnvServiceMonitor", EnvServiceMonitorArgs.builder()
     *             .aliyunLang("en")
     *             .environmentId(defaultEnvironment.id())
     *             .configYaml("""
     * apiVersion: monitoring.coreos.com/v1
     * kind: ServiceMonitor
     * metadata:
     *   name: arms-admin1
     *   namespace: arms-prom
     *   annotations:
     *     arms.prometheus.io/discovery: 'true'
     *     o11y.aliyun.com/addon-name: mysql
     *     o11y.aliyun.com/addon-version: 1.0.1
     *     o11y.aliyun.com/release-name: mysql1
     * spec:
     *   endpoints:
     *   - interval: 30s
     *     port: operator
     *     path: /metrics
     *   - interval: 10s
     *     port: operator1
     *     path: /metrics
     *   namespaceSelector:
     *     any: true
     *   selector:
     *     matchLabels:
     *      app: arms-prometheus-ack-arms-prometheus
     *             """)
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvServiceMonitors(GetEnvServiceMonitorsArgs.builder()
     *             .environmentId(defaultEnvServiceMonitor.environmentId())
     *             .ids(defaultEnvServiceMonitor.id())
     *             .build());
     * 
     *         ctx.export("armsEnvServiceMonitorsId0", ids.applyValue(_ids -> _ids.monitors()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEnvServiceMonitorsResult> getEnvServiceMonitors(GetEnvServiceMonitorsArgs args) {
        return getEnvServiceMonitors(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ARMS Env Service Monitors of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.CidrsubnetArgs;
     * import com.pulumi.alicloud.ecs.SnapshotPolicy;
     * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.cs.ManagedKubernetes;
     * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.cs.NodePool;
     * import com.pulumi.alicloud.cs.NodePoolArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.EnvServiceMonitor;
     * import com.pulumi.alicloud.arms.EnvServiceMonitorArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvServiceMonitorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
     *             .build());
     * 
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .cidrBlock("192.168.0.0/16")
     *             .vpcName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .vpcId(vpc.id())
     *             .vswitchName(String.format("%s-%s", name,defaultInteger.result()))
     *             .zoneId(enhanced.zones()[0].zoneId())
     *             .cidrBlock(vpc.cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
     *                 .input(_cidrBlock)
     *                 .newbits(8)
     *                 .netnum(8)
     *                 .build())).applyValue(_invoke -> _invoke.result()))
     *             .build());
     * 
     *         var defaultSnapshotPolicy = new SnapshotPolicy("defaultSnapshotPolicy", SnapshotPolicyArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .repeatWeekdays(            
     *                 "1",
     *                 "2",
     *                 "3")
     *             .retentionDays(-1)
     *             .timePoints(            
     *                 "1",
     *                 "22",
     *                 "23")
     *             .build());
     * 
     *         final var default = vswitch.zoneId().applyValue(_zoneId -> EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(_zoneId)
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .kubernetesNodeRole("Worker")
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build()));
     * 
     *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .clusterSpec("ack.pro.small")
     *             .version("1.24.6-aliyun.1")
     *             .newNatGateway(true)
     *             .nodeCidrMask(26)
     *             .proxyMode("ipvs")
     *             .serviceCidr("172.23.0.0/16")
     *             .podCidr("10.95.0.0/16")
     *             .workerVswitchIds(vswitch.id())
     *             .build());
     * 
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyPairName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
     *             .name("desired_size")
     *             .clusterId(defaultManagedKubernetes.id())
     *             .vswitchIds(vswitch.id())
     *             .instanceTypes(default_.applyValue(_default_ -> _default_.instanceTypes()[0].id()))
     *             .systemDiskCategory("cloud_efficiency")
     *             .systemDiskSize(40)
     *             .keyName(defaultKeyPair.keyPairName())
     *             .desiredSize("2")
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .environmentType("CS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .bindResourceId(defaultNodePool.clusterId())
     *             .environmentSubType("ManagedKubernetes")
     *             .build());
     * 
     *         var defaultEnvServiceMonitor = new EnvServiceMonitor("defaultEnvServiceMonitor", EnvServiceMonitorArgs.builder()
     *             .aliyunLang("en")
     *             .environmentId(defaultEnvironment.id())
     *             .configYaml("""
     * apiVersion: monitoring.coreos.com/v1
     * kind: ServiceMonitor
     * metadata:
     *   name: arms-admin1
     *   namespace: arms-prom
     *   annotations:
     *     arms.prometheus.io/discovery: 'true'
     *     o11y.aliyun.com/addon-name: mysql
     *     o11y.aliyun.com/addon-version: 1.0.1
     *     o11y.aliyun.com/release-name: mysql1
     * spec:
     *   endpoints:
     *   - interval: 30s
     *     port: operator
     *     path: /metrics
     *   - interval: 10s
     *     port: operator1
     *     path: /metrics
     *   namespaceSelector:
     *     any: true
     *   selector:
     *     matchLabels:
     *      app: arms-prometheus-ack-arms-prometheus
     *             """)
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvServiceMonitors(GetEnvServiceMonitorsArgs.builder()
     *             .environmentId(defaultEnvServiceMonitor.environmentId())
     *             .ids(defaultEnvServiceMonitor.id())
     *             .build());
     * 
     *         ctx.export("armsEnvServiceMonitorsId0", ids.applyValue(_ids -> _ids.monitors()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEnvServiceMonitorsResult> getEnvServiceMonitorsPlain(GetEnvServiceMonitorsPlainArgs args) {
        return getEnvServiceMonitorsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ARMS Env Service Monitors of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.CidrsubnetArgs;
     * import com.pulumi.alicloud.ecs.SnapshotPolicy;
     * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.cs.ManagedKubernetes;
     * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.cs.NodePool;
     * import com.pulumi.alicloud.cs.NodePoolArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.EnvServiceMonitor;
     * import com.pulumi.alicloud.arms.EnvServiceMonitorArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvServiceMonitorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
     *             .build());
     * 
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .cidrBlock("192.168.0.0/16")
     *             .vpcName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .vpcId(vpc.id())
     *             .vswitchName(String.format("%s-%s", name,defaultInteger.result()))
     *             .zoneId(enhanced.zones()[0].zoneId())
     *             .cidrBlock(vpc.cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
     *                 .input(_cidrBlock)
     *                 .newbits(8)
     *                 .netnum(8)
     *                 .build())).applyValue(_invoke -> _invoke.result()))
     *             .build());
     * 
     *         var defaultSnapshotPolicy = new SnapshotPolicy("defaultSnapshotPolicy", SnapshotPolicyArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .repeatWeekdays(            
     *                 "1",
     *                 "2",
     *                 "3")
     *             .retentionDays(-1)
     *             .timePoints(            
     *                 "1",
     *                 "22",
     *                 "23")
     *             .build());
     * 
     *         final var default = vswitch.zoneId().applyValue(_zoneId -> EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(_zoneId)
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .kubernetesNodeRole("Worker")
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build()));
     * 
     *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .clusterSpec("ack.pro.small")
     *             .version("1.24.6-aliyun.1")
     *             .newNatGateway(true)
     *             .nodeCidrMask(26)
     *             .proxyMode("ipvs")
     *             .serviceCidr("172.23.0.0/16")
     *             .podCidr("10.95.0.0/16")
     *             .workerVswitchIds(vswitch.id())
     *             .build());
     * 
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyPairName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
     *             .name("desired_size")
     *             .clusterId(defaultManagedKubernetes.id())
     *             .vswitchIds(vswitch.id())
     *             .instanceTypes(default_.applyValue(_default_ -> _default_.instanceTypes()[0].id()))
     *             .systemDiskCategory("cloud_efficiency")
     *             .systemDiskSize(40)
     *             .keyName(defaultKeyPair.keyPairName())
     *             .desiredSize("2")
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .environmentType("CS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .bindResourceId(defaultNodePool.clusterId())
     *             .environmentSubType("ManagedKubernetes")
     *             .build());
     * 
     *         var defaultEnvServiceMonitor = new EnvServiceMonitor("defaultEnvServiceMonitor", EnvServiceMonitorArgs.builder()
     *             .aliyunLang("en")
     *             .environmentId(defaultEnvironment.id())
     *             .configYaml("""
     * apiVersion: monitoring.coreos.com/v1
     * kind: ServiceMonitor
     * metadata:
     *   name: arms-admin1
     *   namespace: arms-prom
     *   annotations:
     *     arms.prometheus.io/discovery: 'true'
     *     o11y.aliyun.com/addon-name: mysql
     *     o11y.aliyun.com/addon-version: 1.0.1
     *     o11y.aliyun.com/release-name: mysql1
     * spec:
     *   endpoints:
     *   - interval: 30s
     *     port: operator
     *     path: /metrics
     *   - interval: 10s
     *     port: operator1
     *     path: /metrics
     *   namespaceSelector:
     *     any: true
     *   selector:
     *     matchLabels:
     *      app: arms-prometheus-ack-arms-prometheus
     *             """)
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvServiceMonitors(GetEnvServiceMonitorsArgs.builder()
     *             .environmentId(defaultEnvServiceMonitor.environmentId())
     *             .ids(defaultEnvServiceMonitor.id())
     *             .build());
     * 
     *         ctx.export("armsEnvServiceMonitorsId0", ids.applyValue(_ids -> _ids.monitors()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEnvServiceMonitorsResult> getEnvServiceMonitors(GetEnvServiceMonitorsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getEnvServiceMonitors:getEnvServiceMonitors", TypeShape.of(GetEnvServiceMonitorsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ARMS Env Service Monitors of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.CidrsubnetArgs;
     * import com.pulumi.alicloud.ecs.SnapshotPolicy;
     * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.cs.ManagedKubernetes;
     * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.cs.NodePool;
     * import com.pulumi.alicloud.cs.NodePoolArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.EnvServiceMonitor;
     * import com.pulumi.alicloud.arms.EnvServiceMonitorArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvServiceMonitorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
     *             .build());
     * 
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .cidrBlock("192.168.0.0/16")
     *             .vpcName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .vpcId(vpc.id())
     *             .vswitchName(String.format("%s-%s", name,defaultInteger.result()))
     *             .zoneId(enhanced.zones()[0].zoneId())
     *             .cidrBlock(vpc.cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
     *                 .input(_cidrBlock)
     *                 .newbits(8)
     *                 .netnum(8)
     *                 .build())).applyValue(_invoke -> _invoke.result()))
     *             .build());
     * 
     *         var defaultSnapshotPolicy = new SnapshotPolicy("defaultSnapshotPolicy", SnapshotPolicyArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .repeatWeekdays(            
     *                 "1",
     *                 "2",
     *                 "3")
     *             .retentionDays(-1)
     *             .timePoints(            
     *                 "1",
     *                 "22",
     *                 "23")
     *             .build());
     * 
     *         final var default = vswitch.zoneId().applyValue(_zoneId -> EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(_zoneId)
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .kubernetesNodeRole("Worker")
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build()));
     * 
     *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .clusterSpec("ack.pro.small")
     *             .version("1.24.6-aliyun.1")
     *             .newNatGateway(true)
     *             .nodeCidrMask(26)
     *             .proxyMode("ipvs")
     *             .serviceCidr("172.23.0.0/16")
     *             .podCidr("10.95.0.0/16")
     *             .workerVswitchIds(vswitch.id())
     *             .build());
     * 
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyPairName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
     *             .name("desired_size")
     *             .clusterId(defaultManagedKubernetes.id())
     *             .vswitchIds(vswitch.id())
     *             .instanceTypes(default_.applyValue(_default_ -> _default_.instanceTypes()[0].id()))
     *             .systemDiskCategory("cloud_efficiency")
     *             .systemDiskSize(40)
     *             .keyName(defaultKeyPair.keyPairName())
     *             .desiredSize("2")
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .environmentType("CS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .bindResourceId(defaultNodePool.clusterId())
     *             .environmentSubType("ManagedKubernetes")
     *             .build());
     * 
     *         var defaultEnvServiceMonitor = new EnvServiceMonitor("defaultEnvServiceMonitor", EnvServiceMonitorArgs.builder()
     *             .aliyunLang("en")
     *             .environmentId(defaultEnvironment.id())
     *             .configYaml("""
     * apiVersion: monitoring.coreos.com/v1
     * kind: ServiceMonitor
     * metadata:
     *   name: arms-admin1
     *   namespace: arms-prom
     *   annotations:
     *     arms.prometheus.io/discovery: 'true'
     *     o11y.aliyun.com/addon-name: mysql
     *     o11y.aliyun.com/addon-version: 1.0.1
     *     o11y.aliyun.com/release-name: mysql1
     * spec:
     *   endpoints:
     *   - interval: 30s
     *     port: operator
     *     path: /metrics
     *   - interval: 10s
     *     port: operator1
     *     path: /metrics
     *   namespaceSelector:
     *     any: true
     *   selector:
     *     matchLabels:
     *      app: arms-prometheus-ack-arms-prometheus
     *             """)
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvServiceMonitors(GetEnvServiceMonitorsArgs.builder()
     *             .environmentId(defaultEnvServiceMonitor.environmentId())
     *             .ids(defaultEnvServiceMonitor.id())
     *             .build());
     * 
     *         ctx.export("armsEnvServiceMonitorsId0", ids.applyValue(_ids -> _ids.monitors()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEnvServiceMonitorsResult> getEnvServiceMonitors(GetEnvServiceMonitorsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getEnvServiceMonitors:getEnvServiceMonitors", TypeShape.of(GetEnvServiceMonitorsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ARMS Env Service Monitors of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.std.StdFunctions;
     * import com.pulumi.std.inputs.CidrsubnetArgs;
     * import com.pulumi.alicloud.ecs.SnapshotPolicy;
     * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.cs.ManagedKubernetes;
     * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.cs.NodePool;
     * import com.pulumi.alicloud.cs.NodePoolArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.EnvServiceMonitor;
     * import com.pulumi.alicloud.arms.EnvServiceMonitorArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvServiceMonitorsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
     *             .build());
     * 
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .cidrBlock("192.168.0.0/16")
     *             .vpcName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .description("api-resource-test1-hz")
     *             .vpcId(vpc.id())
     *             .vswitchName(String.format("%s-%s", name,defaultInteger.result()))
     *             .zoneId(enhanced.zones()[0].zoneId())
     *             .cidrBlock(vpc.cidrBlock().applyValue(_cidrBlock -> StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
     *                 .input(_cidrBlock)
     *                 .newbits(8)
     *                 .netnum(8)
     *                 .build())).applyValue(_invoke -> _invoke.result()))
     *             .build());
     * 
     *         var defaultSnapshotPolicy = new SnapshotPolicy("defaultSnapshotPolicy", SnapshotPolicyArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .repeatWeekdays(            
     *                 "1",
     *                 "2",
     *                 "3")
     *             .retentionDays(-1)
     *             .timePoints(            
     *                 "1",
     *                 "22",
     *                 "23")
     *             .build());
     * 
     *         final var default = vswitch.zoneId().applyValue(_zoneId -> EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(_zoneId)
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .kubernetesNodeRole("Worker")
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build()));
     * 
     *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
     *             .name(String.format("%s-%s", name,defaultInteger.result()))
     *             .clusterSpec("ack.pro.small")
     *             .version("1.24.6-aliyun.1")
     *             .newNatGateway(true)
     *             .nodeCidrMask(26)
     *             .proxyMode("ipvs")
     *             .serviceCidr("172.23.0.0/16")
     *             .podCidr("10.95.0.0/16")
     *             .workerVswitchIds(vswitch.id())
     *             .build());
     * 
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyPairName(String.format("%s-%s", name,defaultInteger.result()))
     *             .build());
     * 
     *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
     *             .name("desired_size")
     *             .clusterId(defaultManagedKubernetes.id())
     *             .vswitchIds(vswitch.id())
     *             .instanceTypes(default_.applyValue(_default_ -> _default_.instanceTypes()[0].id()))
     *             .systemDiskCategory("cloud_efficiency")
     *             .systemDiskSize(40)
     *             .keyName(defaultKeyPair.keyPairName())
     *             .desiredSize("2")
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .environmentType("CS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .bindResourceId(defaultNodePool.clusterId())
     *             .environmentSubType("ManagedKubernetes")
     *             .build());
     * 
     *         var defaultEnvServiceMonitor = new EnvServiceMonitor("defaultEnvServiceMonitor", EnvServiceMonitorArgs.builder()
     *             .aliyunLang("en")
     *             .environmentId(defaultEnvironment.id())
     *             .configYaml("""
     * apiVersion: monitoring.coreos.com/v1
     * kind: ServiceMonitor
     * metadata:
     *   name: arms-admin1
     *   namespace: arms-prom
     *   annotations:
     *     arms.prometheus.io/discovery: 'true'
     *     o11y.aliyun.com/addon-name: mysql
     *     o11y.aliyun.com/addon-version: 1.0.1
     *     o11y.aliyun.com/release-name: mysql1
     * spec:
     *   endpoints:
     *   - interval: 30s
     *     port: operator
     *     path: /metrics
     *   - interval: 10s
     *     port: operator1
     *     path: /metrics
     *   namespaceSelector:
     *     any: true
     *   selector:
     *     matchLabels:
     *      app: arms-prometheus-ack-arms-prometheus
     *             """)
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvServiceMonitors(GetEnvServiceMonitorsArgs.builder()
     *             .environmentId(defaultEnvServiceMonitor.environmentId())
     *             .ids(defaultEnvServiceMonitor.id())
     *             .build());
     * 
     *         ctx.export("armsEnvServiceMonitorsId0", ids.applyValue(_ids -> _ids.monitors()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEnvServiceMonitorsResult> getEnvServiceMonitorsPlain(GetEnvServiceMonitorsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:arms/getEnvServiceMonitors:getEnvServiceMonitors", TypeShape.of(GetEnvServiceMonitorsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ARMS Environments of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvironmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .status("OK")
     *             .build());
     * 
     *         final var defaultGetNetworks = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("^default-NODELETING$")
     *             .build());
     * 
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .bindResourceId(defaultGetNetworks.ids()[0])
     *             .environmentSubType("ECS")
     *             .environmentType("ECS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .resourceGroupId(default_.ids()[1])
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Environment")
     *             ))
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvironments(GetEnvironmentsArgs.builder()
     *             .ids(defaultEnvironment.id())
     *             .build());
     * 
     *         ctx.export("armsEnvironmentsId0", ids.applyValue(_ids -> _ids.environments()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEnvironmentsResult> getEnvironments() {
        return getEnvironments(GetEnvironmentsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ARMS Environments of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvironmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .status("OK")
     *             .build());
     * 
     *         final var defaultGetNetworks = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("^default-NODELETING$")
     *             .build());
     * 
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .bindResourceId(defaultGetNetworks.ids()[0])
     *             .environmentSubType("ECS")
     *             .environmentType("ECS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .resourceGroupId(default_.ids()[1])
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Environment")
     *             ))
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvironments(GetEnvironmentsArgs.builder()
     *             .ids(defaultEnvironment.id())
     *             .build());
     * 
     *         ctx.export("armsEnvironmentsId0", ids.applyValue(_ids -> _ids.environments()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEnvironmentsResult> getEnvironmentsPlain() {
        return getEnvironmentsPlain(GetEnvironmentsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ARMS Environments of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvironmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .status("OK")
     *             .build());
     * 
     *         final var defaultGetNetworks = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("^default-NODELETING$")
     *             .build());
     * 
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .bindResourceId(defaultGetNetworks.ids()[0])
     *             .environmentSubType("ECS")
     *             .environmentType("ECS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .resourceGroupId(default_.ids()[1])
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Environment")
     *             ))
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvironments(GetEnvironmentsArgs.builder()
     *             .ids(defaultEnvironment.id())
     *             .build());
     * 
     *         ctx.export("armsEnvironmentsId0", ids.applyValue(_ids -> _ids.environments()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEnvironmentsResult> getEnvironments(GetEnvironmentsArgs args) {
        return getEnvironments(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ARMS Environments of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvironmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .status("OK")
     *             .build());
     * 
     *         final var defaultGetNetworks = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("^default-NODELETING$")
     *             .build());
     * 
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .bindResourceId(defaultGetNetworks.ids()[0])
     *             .environmentSubType("ECS")
     *             .environmentType("ECS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .resourceGroupId(default_.ids()[1])
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Environment")
     *             ))
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvironments(GetEnvironmentsArgs.builder()
     *             .ids(defaultEnvironment.id())
     *             .build());
     * 
     *         ctx.export("armsEnvironmentsId0", ids.applyValue(_ids -> _ids.environments()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEnvironmentsResult> getEnvironmentsPlain(GetEnvironmentsPlainArgs args) {
        return getEnvironmentsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ARMS Environments of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvironmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .status("OK")
     *             .build());
     * 
     *         final var defaultGetNetworks = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("^default-NODELETING$")
     *             .build());
     * 
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .bindResourceId(defaultGetNetworks.ids()[0])
     *             .environmentSubType("ECS")
     *             .environmentType("ECS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .resourceGroupId(default_.ids()[1])
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Environment")
     *             ))
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvironments(GetEnvironmentsArgs.builder()
     *             .ids(defaultEnvironment.id())
     *             .build());
     * 
     *         ctx.export("armsEnvironmentsId0", ids.applyValue(_ids -> _ids.environments()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEnvironmentsResult> getEnvironments(GetEnvironmentsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getEnvironments:getEnvironments", TypeShape.of(GetEnvironmentsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ARMS Environments of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvironmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .status("OK")
     *             .build());
     * 
     *         final var defaultGetNetworks = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("^default-NODELETING$")
     *             .build());
     * 
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .bindResourceId(defaultGetNetworks.ids()[0])
     *             .environmentSubType("ECS")
     *             .environmentType("ECS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .resourceGroupId(default_.ids()[1])
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Environment")
     *             ))
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvironments(GetEnvironmentsArgs.builder()
     *             .ids(defaultEnvironment.id())
     *             .build());
     * 
     *         ctx.export("armsEnvironmentsId0", ids.applyValue(_ids -> _ids.environments()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEnvironmentsResult> getEnvironments(GetEnvironmentsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getEnvironments:getEnvironments", TypeShape.of(GetEnvironmentsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ARMS Environments of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.258.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.arms.Environment;
     * import com.pulumi.alicloud.arms.EnvironmentArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetEnvironmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .status("OK")
     *             .build());
     * 
     *         final var defaultGetNetworks = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("^default-NODELETING$")
     *             .build());
     * 
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         var defaultEnvironment = new Environment("defaultEnvironment", EnvironmentArgs.builder()
     *             .bindResourceId(defaultGetNetworks.ids()[0])
     *             .environmentSubType("ECS")
     *             .environmentType("ECS")
     *             .environmentName(String.format("%s-%s", name,defaultInteger.result()))
     *             .resourceGroupId(default_.ids()[1])
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Environment")
     *             ))
     *             .build());
     * 
     *         final var ids = ArmsFunctions.getEnvironments(GetEnvironmentsArgs.builder()
     *             .ids(defaultEnvironment.id())
     *             .build());
     * 
     *         ctx.export("armsEnvironmentsId0", ids.applyValue(_ids -> _ids.environments()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEnvironmentsResult> getEnvironmentsPlain(GetEnvironmentsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:arms/getEnvironments:getEnvironments", TypeShape.of(GetEnvironmentsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Integration Exporters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.203.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetIntegrationExportersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getIntegrationExporters(GetIntegrationExportersArgs.builder()
     *             .ids("example_id")
     *             .clusterId("your_cluster_id")
     *             .integrationType("kafka")
     *             .build());
     * 
     *         ctx.export("armsIntegrationExportersId1", ids.integrationExporters()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetIntegrationExportersResult> getIntegrationExporters(GetIntegrationExportersArgs args) {
        return getIntegrationExporters(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Integration Exporters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.203.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetIntegrationExportersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getIntegrationExporters(GetIntegrationExportersArgs.builder()
     *             .ids("example_id")
     *             .clusterId("your_cluster_id")
     *             .integrationType("kafka")
     *             .build());
     * 
     *         ctx.export("armsIntegrationExportersId1", ids.integrationExporters()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetIntegrationExportersResult> getIntegrationExportersPlain(GetIntegrationExportersPlainArgs args) {
        return getIntegrationExportersPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Integration Exporters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.203.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetIntegrationExportersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getIntegrationExporters(GetIntegrationExportersArgs.builder()
     *             .ids("example_id")
     *             .clusterId("your_cluster_id")
     *             .integrationType("kafka")
     *             .build());
     * 
     *         ctx.export("armsIntegrationExportersId1", ids.integrationExporters()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetIntegrationExportersResult> getIntegrationExporters(GetIntegrationExportersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getIntegrationExporters:getIntegrationExporters", TypeShape.of(GetIntegrationExportersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Integration Exporters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.203.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetIntegrationExportersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getIntegrationExporters(GetIntegrationExportersArgs.builder()
     *             .ids("example_id")
     *             .clusterId("your_cluster_id")
     *             .integrationType("kafka")
     *             .build());
     * 
     *         ctx.export("armsIntegrationExportersId1", ids.integrationExporters()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetIntegrationExportersResult> getIntegrationExporters(GetIntegrationExportersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getIntegrationExporters:getIntegrationExporters", TypeShape.of(GetIntegrationExportersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Integration Exporters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.203.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetIntegrationExportersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getIntegrationExporters(GetIntegrationExportersArgs.builder()
     *             .ids("example_id")
     *             .clusterId("your_cluster_id")
     *             .integrationType("kafka")
     *             .build());
     * 
     *         ctx.export("armsIntegrationExportersId1", ids.integrationExporters()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetIntegrationExportersResult> getIntegrationExportersPlain(GetIntegrationExportersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:arms/getIntegrationExporters:getIntegrationExporters", TypeShape.of(GetIntegrationExportersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Prometheis of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.203.0.
     * 
     * &gt; **DEPRECATED:** This data source has been renamed to alicloud.arms.Prometheus from version 1.214.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.arms.Prometheus;
     * import com.pulumi.alicloud.arms.PrometheusArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheisArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("tf-example");
     *         final var default = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("default-NODELETING")
     *             .build());
     * 
     *         final var defaultGetSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         final var defaultGetResourceGroups = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultPrometheus = new Prometheus("defaultPrometheus", PrometheusArgs.builder()
     *             .clusterType("ecs")
     *             .grafanaInstanceId("free")
     *             .vpcId(default_.ids()[0])
     *             .vswitchId(defaultGetSwitches.ids()[0])
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .clusterName(String.format("%s-%s", name,default_.ids()[0]))
     *             .resourceGroupId(defaultGetResourceGroups.groups()[1].id())
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Prometheus")
     *             ))
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getPrometheis(GetPrometheisArgs.builder()
     *             .nameRegex(defaultPrometheus.clusterName())
     *             .build());
     * 
     *         ctx.export("armsPrometheisId", nameRegex.applyValue(_nameRegex -> _nameRegex.prometheis()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPrometheisResult> getPrometheis() {
        return getPrometheis(GetPrometheisArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Prometheis of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.203.0.
     * 
     * &gt; **DEPRECATED:** This data source has been renamed to alicloud.arms.Prometheus from version 1.214.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.arms.Prometheus;
     * import com.pulumi.alicloud.arms.PrometheusArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheisArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("tf-example");
     *         final var default = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("default-NODELETING")
     *             .build());
     * 
     *         final var defaultGetSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         final var defaultGetResourceGroups = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultPrometheus = new Prometheus("defaultPrometheus", PrometheusArgs.builder()
     *             .clusterType("ecs")
     *             .grafanaInstanceId("free")
     *             .vpcId(default_.ids()[0])
     *             .vswitchId(defaultGetSwitches.ids()[0])
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .clusterName(String.format("%s-%s", name,default_.ids()[0]))
     *             .resourceGroupId(defaultGetResourceGroups.groups()[1].id())
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Prometheus")
     *             ))
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getPrometheis(GetPrometheisArgs.builder()
     *             .nameRegex(defaultPrometheus.clusterName())
     *             .build());
     * 
     *         ctx.export("armsPrometheisId", nameRegex.applyValue(_nameRegex -> _nameRegex.prometheis()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPrometheisResult> getPrometheisPlain() {
        return getPrometheisPlain(GetPrometheisPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Prometheis of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.203.0.
     * 
     * &gt; **DEPRECATED:** This data source has been renamed to alicloud.arms.Prometheus from version 1.214.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.arms.Prometheus;
     * import com.pulumi.alicloud.arms.PrometheusArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheisArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("tf-example");
     *         final var default = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("default-NODELETING")
     *             .build());
     * 
     *         final var defaultGetSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         final var defaultGetResourceGroups = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultPrometheus = new Prometheus("defaultPrometheus", PrometheusArgs.builder()
     *             .clusterType("ecs")
     *             .grafanaInstanceId("free")
     *             .vpcId(default_.ids()[0])
     *             .vswitchId(defaultGetSwitches.ids()[0])
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .clusterName(String.format("%s-%s", name,default_.ids()[0]))
     *             .resourceGroupId(defaultGetResourceGroups.groups()[1].id())
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Prometheus")
     *             ))
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getPrometheis(GetPrometheisArgs.builder()
     *             .nameRegex(defaultPrometheus.clusterName())
     *             .build());
     * 
     *         ctx.export("armsPrometheisId", nameRegex.applyValue(_nameRegex -> _nameRegex.prometheis()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPrometheisResult> getPrometheis(GetPrometheisArgs args) {
        return getPrometheis(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Prometheis of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.203.0.
     * 
     * &gt; **DEPRECATED:** This data source has been renamed to alicloud.arms.Prometheus from version 1.214.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.arms.Prometheus;
     * import com.pulumi.alicloud.arms.PrometheusArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheisArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("tf-example");
     *         final var default = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("default-NODELETING")
     *             .build());
     * 
     *         final var defaultGetSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         final var defaultGetResourceGroups = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultPrometheus = new Prometheus("defaultPrometheus", PrometheusArgs.builder()
     *             .clusterType("ecs")
     *             .grafanaInstanceId("free")
     *             .vpcId(default_.ids()[0])
     *             .vswitchId(defaultGetSwitches.ids()[0])
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .clusterName(String.format("%s-%s", name,default_.ids()[0]))
     *             .resourceGroupId(defaultGetResourceGroups.groups()[1].id())
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Prometheus")
     *             ))
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getPrometheis(GetPrometheisArgs.builder()
     *             .nameRegex(defaultPrometheus.clusterName())
     *             .build());
     * 
     *         ctx.export("armsPrometheisId", nameRegex.applyValue(_nameRegex -> _nameRegex.prometheis()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPrometheisResult> getPrometheisPlain(GetPrometheisPlainArgs args) {
        return getPrometheisPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Prometheis of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.203.0.
     * 
     * &gt; **DEPRECATED:** This data source has been renamed to alicloud.arms.Prometheus from version 1.214.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.arms.Prometheus;
     * import com.pulumi.alicloud.arms.PrometheusArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheisArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("tf-example");
     *         final var default = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("default-NODELETING")
     *             .build());
     * 
     *         final var defaultGetSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         final var defaultGetResourceGroups = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultPrometheus = new Prometheus("defaultPrometheus", PrometheusArgs.builder()
     *             .clusterType("ecs")
     *             .grafanaInstanceId("free")
     *             .vpcId(default_.ids()[0])
     *             .vswitchId(defaultGetSwitches.ids()[0])
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .clusterName(String.format("%s-%s", name,default_.ids()[0]))
     *             .resourceGroupId(defaultGetResourceGroups.groups()[1].id())
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Prometheus")
     *             ))
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getPrometheis(GetPrometheisArgs.builder()
     *             .nameRegex(defaultPrometheus.clusterName())
     *             .build());
     * 
     *         ctx.export("armsPrometheisId", nameRegex.applyValue(_nameRegex -> _nameRegex.prometheis()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPrometheisResult> getPrometheis(GetPrometheisArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getPrometheis:getPrometheis", TypeShape.of(GetPrometheisResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Prometheis of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.203.0.
     * 
     * &gt; **DEPRECATED:** This data source has been renamed to alicloud.arms.Prometheus from version 1.214.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.arms.Prometheus;
     * import com.pulumi.alicloud.arms.PrometheusArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheisArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("tf-example");
     *         final var default = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("default-NODELETING")
     *             .build());
     * 
     *         final var defaultGetSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         final var defaultGetResourceGroups = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultPrometheus = new Prometheus("defaultPrometheus", PrometheusArgs.builder()
     *             .clusterType("ecs")
     *             .grafanaInstanceId("free")
     *             .vpcId(default_.ids()[0])
     *             .vswitchId(defaultGetSwitches.ids()[0])
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .clusterName(String.format("%s-%s", name,default_.ids()[0]))
     *             .resourceGroupId(defaultGetResourceGroups.groups()[1].id())
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Prometheus")
     *             ))
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getPrometheis(GetPrometheisArgs.builder()
     *             .nameRegex(defaultPrometheus.clusterName())
     *             .build());
     * 
     *         ctx.export("armsPrometheisId", nameRegex.applyValue(_nameRegex -> _nameRegex.prometheis()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPrometheisResult> getPrometheis(GetPrometheisArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getPrometheis:getPrometheis", TypeShape.of(GetPrometheisResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Prometheis of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.203.0.
     * 
     * &gt; **DEPRECATED:** This data source has been renamed to alicloud.arms.Prometheus from version 1.214.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.arms.Prometheus;
     * import com.pulumi.alicloud.arms.PrometheusArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheisArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("tf-example");
     *         final var default = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("default-NODELETING")
     *             .build());
     * 
     *         final var defaultGetSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         final var defaultGetResourceGroups = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultPrometheus = new Prometheus("defaultPrometheus", PrometheusArgs.builder()
     *             .clusterType("ecs")
     *             .grafanaInstanceId("free")
     *             .vpcId(default_.ids()[0])
     *             .vswitchId(defaultGetSwitches.ids()[0])
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .clusterName(String.format("%s-%s", name,default_.ids()[0]))
     *             .resourceGroupId(defaultGetResourceGroups.groups()[1].id())
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Prometheus")
     *             ))
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getPrometheis(GetPrometheisArgs.builder()
     *             .nameRegex(defaultPrometheus.clusterName())
     *             .build());
     * 
     *         ctx.export("armsPrometheisId", nameRegex.applyValue(_nameRegex -> _nameRegex.prometheis()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPrometheisResult> getPrometheisPlain(GetPrometheisPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:arms/getPrometheis:getPrometheis", TypeShape.of(GetPrometheisResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Prometheus of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.214.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.arms.Prometheus;
     * import com.pulumi.alicloud.arms.PrometheusArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("tf-example");
     *         final var default = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("default-NODELETING")
     *             .build());
     * 
     *         final var defaultGetSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultPrometheus = new Prometheus("defaultPrometheus", PrometheusArgs.builder()
     *             .clusterType("ecs")
     *             .grafanaInstanceId("free")
     *             .vpcId(default_.ids()[0])
     *             .vswitchId(defaultGetSwitches.ids()[0])
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .clusterName(String.format("%s-%s", name,default_.ids()[0]))
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Prometheus")
     *             ))
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getPrometheus(GetPrometheusArgs.builder()
     *             .nameRegex(defaultPrometheus.clusterName())
     *             .build());
     * 
     *         ctx.export("armsPrometheusId", nameRegex.applyValue(_nameRegex -> _nameRegex.prometheis()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPrometheusResult> getPrometheus() {
        return getPrometheus(GetPrometheusArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Prometheus of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.214.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.arms.Prometheus;
     * import com.pulumi.alicloud.arms.PrometheusArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("tf-example");
     *         final var default = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("default-NODELETING")
     *             .build());
     * 
     *         final var defaultGetSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultPrometheus = new Prometheus("defaultPrometheus", PrometheusArgs.builder()
     *             .clusterType("ecs")
     *             .grafanaInstanceId("free")
     *             .vpcId(default_.ids()[0])
     *             .vswitchId(defaultGetSwitches.ids()[0])
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .clusterName(String.format("%s-%s", name,default_.ids()[0]))
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Prometheus")
     *             ))
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getPrometheus(GetPrometheusArgs.builder()
     *             .nameRegex(defaultPrometheus.clusterName())
     *             .build());
     * 
     *         ctx.export("armsPrometheusId", nameRegex.applyValue(_nameRegex -> _nameRegex.prometheis()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPrometheusResult> getPrometheusPlain() {
        return getPrometheusPlain(GetPrometheusPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Prometheus of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.214.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.arms.Prometheus;
     * import com.pulumi.alicloud.arms.PrometheusArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("tf-example");
     *         final var default = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("default-NODELETING")
     *             .build());
     * 
     *         final var defaultGetSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultPrometheus = new Prometheus("defaultPrometheus", PrometheusArgs.builder()
     *             .clusterType("ecs")
     *             .grafanaInstanceId("free")
     *             .vpcId(default_.ids()[0])
     *             .vswitchId(defaultGetSwitches.ids()[0])
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .clusterName(String.format("%s-%s", name,default_.ids()[0]))
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Prometheus")
     *             ))
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getPrometheus(GetPrometheusArgs.builder()
     *             .nameRegex(defaultPrometheus.clusterName())
     *             .build());
     * 
     *         ctx.export("armsPrometheusId", nameRegex.applyValue(_nameRegex -> _nameRegex.prometheis()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPrometheusResult> getPrometheus(GetPrometheusArgs args) {
        return getPrometheus(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Prometheus of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.214.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.arms.Prometheus;
     * import com.pulumi.alicloud.arms.PrometheusArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("tf-example");
     *         final var default = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("default-NODELETING")
     *             .build());
     * 
     *         final var defaultGetSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultPrometheus = new Prometheus("defaultPrometheus", PrometheusArgs.builder()
     *             .clusterType("ecs")
     *             .grafanaInstanceId("free")
     *             .vpcId(default_.ids()[0])
     *             .vswitchId(defaultGetSwitches.ids()[0])
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .clusterName(String.format("%s-%s", name,default_.ids()[0]))
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Prometheus")
     *             ))
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getPrometheus(GetPrometheusArgs.builder()
     *             .nameRegex(defaultPrometheus.clusterName())
     *             .build());
     * 
     *         ctx.export("armsPrometheusId", nameRegex.applyValue(_nameRegex -> _nameRegex.prometheis()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPrometheusResult> getPrometheusPlain(GetPrometheusPlainArgs args) {
        return getPrometheusPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Prometheus of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.214.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.arms.Prometheus;
     * import com.pulumi.alicloud.arms.PrometheusArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("tf-example");
     *         final var default = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("default-NODELETING")
     *             .build());
     * 
     *         final var defaultGetSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultPrometheus = new Prometheus("defaultPrometheus", PrometheusArgs.builder()
     *             .clusterType("ecs")
     *             .grafanaInstanceId("free")
     *             .vpcId(default_.ids()[0])
     *             .vswitchId(defaultGetSwitches.ids()[0])
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .clusterName(String.format("%s-%s", name,default_.ids()[0]))
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Prometheus")
     *             ))
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getPrometheus(GetPrometheusArgs.builder()
     *             .nameRegex(defaultPrometheus.clusterName())
     *             .build());
     * 
     *         ctx.export("armsPrometheusId", nameRegex.applyValue(_nameRegex -> _nameRegex.prometheis()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPrometheusResult> getPrometheus(GetPrometheusArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getPrometheus:getPrometheus", TypeShape.of(GetPrometheusResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Prometheus of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.214.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.arms.Prometheus;
     * import com.pulumi.alicloud.arms.PrometheusArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("tf-example");
     *         final var default = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("default-NODELETING")
     *             .build());
     * 
     *         final var defaultGetSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultPrometheus = new Prometheus("defaultPrometheus", PrometheusArgs.builder()
     *             .clusterType("ecs")
     *             .grafanaInstanceId("free")
     *             .vpcId(default_.ids()[0])
     *             .vswitchId(defaultGetSwitches.ids()[0])
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .clusterName(String.format("%s-%s", name,default_.ids()[0]))
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Prometheus")
     *             ))
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getPrometheus(GetPrometheusArgs.builder()
     *             .nameRegex(defaultPrometheus.clusterName())
     *             .build());
     * 
     *         ctx.export("armsPrometheusId", nameRegex.applyValue(_nameRegex -> _nameRegex.prometheis()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPrometheusResult> getPrometheus(GetPrometheusArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getPrometheus:getPrometheus", TypeShape.of(GetPrometheusResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Prometheus of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.214.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.VpcFunctions;
     * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
     * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.arms.Prometheus;
     * import com.pulumi.alicloud.arms.PrometheusArgs;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("tf-example");
     *         final var default = VpcFunctions.getNetworks(GetNetworksArgs.builder()
     *             .nameRegex("default-NODELETING")
     *             .build());
     * 
     *         final var defaultGetSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .vpcId(default_.ids()[0])
     *             .build());
     * 
     *         var defaultPrometheus = new Prometheus("defaultPrometheus", PrometheusArgs.builder()
     *             .clusterType("ecs")
     *             .grafanaInstanceId("free")
     *             .vpcId(default_.ids()[0])
     *             .vswitchId(defaultGetSwitches.ids()[0])
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .clusterName(String.format("%s-%s", name,default_.ids()[0]))
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Prometheus")
     *             ))
     *             .build());
     * 
     *         final var nameRegex = ArmsFunctions.getPrometheus(GetPrometheusArgs.builder()
     *             .nameRegex(defaultPrometheus.clusterName())
     *             .build());
     * 
     *         ctx.export("armsPrometheusId", nameRegex.applyValue(_nameRegex -> _nameRegex.prometheis()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPrometheusResult> getPrometheusPlain(GetPrometheusPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:arms/getPrometheus:getPrometheus", TypeShape.of(GetPrometheusResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Prometheus Alert Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.136.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheusAlertRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getPrometheusAlertRules(GetPrometheusAlertRulesArgs.builder()
     *             .clusterId("example_value")
     *             .ids(            
     *                 "example_value-1",
     *                 "example_value-2")
     *             .build());
     * 
     *         ctx.export("armsPrometheusAlertRuleId1", ids.rules()[0].id());
     *         final var nameRegex = ArmsFunctions.getPrometheusAlertRules(GetPrometheusAlertRulesArgs.builder()
     *             .clusterId("example_value")
     *             .nameRegex("^my-PrometheusAlertRule")
     *             .build());
     * 
     *         ctx.export("armsPrometheusAlertRuleId2", nameRegex.rules()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPrometheusAlertRulesResult> getPrometheusAlertRules(GetPrometheusAlertRulesArgs args) {
        return getPrometheusAlertRules(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Prometheus Alert Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.136.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheusAlertRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getPrometheusAlertRules(GetPrometheusAlertRulesArgs.builder()
     *             .clusterId("example_value")
     *             .ids(            
     *                 "example_value-1",
     *                 "example_value-2")
     *             .build());
     * 
     *         ctx.export("armsPrometheusAlertRuleId1", ids.rules()[0].id());
     *         final var nameRegex = ArmsFunctions.getPrometheusAlertRules(GetPrometheusAlertRulesArgs.builder()
     *             .clusterId("example_value")
     *             .nameRegex("^my-PrometheusAlertRule")
     *             .build());
     * 
     *         ctx.export("armsPrometheusAlertRuleId2", nameRegex.rules()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPrometheusAlertRulesResult> getPrometheusAlertRulesPlain(GetPrometheusAlertRulesPlainArgs args) {
        return getPrometheusAlertRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Prometheus Alert Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.136.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheusAlertRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getPrometheusAlertRules(GetPrometheusAlertRulesArgs.builder()
     *             .clusterId("example_value")
     *             .ids(            
     *                 "example_value-1",
     *                 "example_value-2")
     *             .build());
     * 
     *         ctx.export("armsPrometheusAlertRuleId1", ids.rules()[0].id());
     *         final var nameRegex = ArmsFunctions.getPrometheusAlertRules(GetPrometheusAlertRulesArgs.builder()
     *             .clusterId("example_value")
     *             .nameRegex("^my-PrometheusAlertRule")
     *             .build());
     * 
     *         ctx.export("armsPrometheusAlertRuleId2", nameRegex.rules()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPrometheusAlertRulesResult> getPrometheusAlertRules(GetPrometheusAlertRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getPrometheusAlertRules:getPrometheusAlertRules", TypeShape.of(GetPrometheusAlertRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Prometheus Alert Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.136.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheusAlertRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getPrometheusAlertRules(GetPrometheusAlertRulesArgs.builder()
     *             .clusterId("example_value")
     *             .ids(            
     *                 "example_value-1",
     *                 "example_value-2")
     *             .build());
     * 
     *         ctx.export("armsPrometheusAlertRuleId1", ids.rules()[0].id());
     *         final var nameRegex = ArmsFunctions.getPrometheusAlertRules(GetPrometheusAlertRulesArgs.builder()
     *             .clusterId("example_value")
     *             .nameRegex("^my-PrometheusAlertRule")
     *             .build());
     * 
     *         ctx.export("armsPrometheusAlertRuleId2", nameRegex.rules()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPrometheusAlertRulesResult> getPrometheusAlertRules(GetPrometheusAlertRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getPrometheusAlertRules:getPrometheusAlertRules", TypeShape.of(GetPrometheusAlertRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Prometheus Alert Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.136.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheusAlertRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getPrometheusAlertRules(GetPrometheusAlertRulesArgs.builder()
     *             .clusterId("example_value")
     *             .ids(            
     *                 "example_value-1",
     *                 "example_value-2")
     *             .build());
     * 
     *         ctx.export("armsPrometheusAlertRuleId1", ids.rules()[0].id());
     *         final var nameRegex = ArmsFunctions.getPrometheusAlertRules(GetPrometheusAlertRulesArgs.builder()
     *             .clusterId("example_value")
     *             .nameRegex("^my-PrometheusAlertRule")
     *             .build());
     * 
     *         ctx.export("armsPrometheusAlertRuleId2", nameRegex.rules()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPrometheusAlertRulesResult> getPrometheusAlertRulesPlain(GetPrometheusAlertRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:arms/getPrometheusAlertRules:getPrometheusAlertRules", TypeShape.of(GetPrometheusAlertRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Prometheus Monitorings of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.210.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheusMonitoringsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getPrometheusMonitorings(GetPrometheusMonitoringsArgs.builder()
     *             .clusterId("your_cluster_id")
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("armsPrometheusMonitoringsId1", ids.prometheusMonitorings()[0].id());
     *         final var nameRegex = ArmsFunctions.getPrometheusMonitorings(GetPrometheusMonitoringsArgs.builder()
     *             .clusterId("your_cluster_id")
     *             .nameRegex("tf-example")
     *             .build());
     * 
     *         ctx.export("armsPrometheusMonitoringsId2", nameRegex.prometheusMonitorings()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPrometheusMonitoringsResult> getPrometheusMonitorings(GetPrometheusMonitoringsArgs args) {
        return getPrometheusMonitorings(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Prometheus Monitorings of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.210.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheusMonitoringsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getPrometheusMonitorings(GetPrometheusMonitoringsArgs.builder()
     *             .clusterId("your_cluster_id")
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("armsPrometheusMonitoringsId1", ids.prometheusMonitorings()[0].id());
     *         final var nameRegex = ArmsFunctions.getPrometheusMonitorings(GetPrometheusMonitoringsArgs.builder()
     *             .clusterId("your_cluster_id")
     *             .nameRegex("tf-example")
     *             .build());
     * 
     *         ctx.export("armsPrometheusMonitoringsId2", nameRegex.prometheusMonitorings()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPrometheusMonitoringsResult> getPrometheusMonitoringsPlain(GetPrometheusMonitoringsPlainArgs args) {
        return getPrometheusMonitoringsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Prometheus Monitorings of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.210.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheusMonitoringsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getPrometheusMonitorings(GetPrometheusMonitoringsArgs.builder()
     *             .clusterId("your_cluster_id")
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("armsPrometheusMonitoringsId1", ids.prometheusMonitorings()[0].id());
     *         final var nameRegex = ArmsFunctions.getPrometheusMonitorings(GetPrometheusMonitoringsArgs.builder()
     *             .clusterId("your_cluster_id")
     *             .nameRegex("tf-example")
     *             .build());
     * 
     *         ctx.export("armsPrometheusMonitoringsId2", nameRegex.prometheusMonitorings()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPrometheusMonitoringsResult> getPrometheusMonitorings(GetPrometheusMonitoringsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getPrometheusMonitorings:getPrometheusMonitorings", TypeShape.of(GetPrometheusMonitoringsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Prometheus Monitorings of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.210.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheusMonitoringsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getPrometheusMonitorings(GetPrometheusMonitoringsArgs.builder()
     *             .clusterId("your_cluster_id")
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("armsPrometheusMonitoringsId1", ids.prometheusMonitorings()[0].id());
     *         final var nameRegex = ArmsFunctions.getPrometheusMonitorings(GetPrometheusMonitoringsArgs.builder()
     *             .clusterId("your_cluster_id")
     *             .nameRegex("tf-example")
     *             .build());
     * 
     *         ctx.export("armsPrometheusMonitoringsId2", nameRegex.prometheusMonitorings()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetPrometheusMonitoringsResult> getPrometheusMonitorings(GetPrometheusMonitoringsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getPrometheusMonitorings:getPrometheusMonitorings", TypeShape.of(GetPrometheusMonitoringsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Prometheus Monitorings of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.210.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetPrometheusMonitoringsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getPrometheusMonitorings(GetPrometheusMonitoringsArgs.builder()
     *             .clusterId("your_cluster_id")
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("armsPrometheusMonitoringsId1", ids.prometheusMonitorings()[0].id());
     *         final var nameRegex = ArmsFunctions.getPrometheusMonitorings(GetPrometheusMonitoringsArgs.builder()
     *             .clusterId("your_cluster_id")
     *             .nameRegex("tf-example")
     *             .build());
     * 
     *         ctx.export("armsPrometheusMonitoringsId2", nameRegex.prometheusMonitorings()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetPrometheusMonitoringsResult> getPrometheusMonitoringsPlain(GetPrometheusMonitoringsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:arms/getPrometheusMonitorings:getPrometheusMonitorings", TypeShape.of(GetPrometheusMonitoringsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Remote Writes of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.204.0.
     * 
     * &gt; **DEPRECATED:** This data source has been deprecated since v1.228.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetRemoteWritesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getRemoteWrites(GetRemoteWritesArgs.builder()
     *             .ids("example_id")
     *             .clusterId("your_cluster_id")
     *             .build());
     * 
     *         ctx.export("armsRemoteWritesId1", ids.remoteWrites()[0].id());
     *         final var nameRegex = ArmsFunctions.getRemoteWrites(GetRemoteWritesArgs.builder()
     *             .nameRegex("tf-example")
     *             .clusterId("your_cluster_id")
     *             .build());
     * 
     *         ctx.export("armsRemoteWritesId2", nameRegex.remoteWrites()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRemoteWritesResult> getRemoteWrites(GetRemoteWritesArgs args) {
        return getRemoteWrites(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Remote Writes of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.204.0.
     * 
     * &gt; **DEPRECATED:** This data source has been deprecated since v1.228.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetRemoteWritesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getRemoteWrites(GetRemoteWritesArgs.builder()
     *             .ids("example_id")
     *             .clusterId("your_cluster_id")
     *             .build());
     * 
     *         ctx.export("armsRemoteWritesId1", ids.remoteWrites()[0].id());
     *         final var nameRegex = ArmsFunctions.getRemoteWrites(GetRemoteWritesArgs.builder()
     *             .nameRegex("tf-example")
     *             .clusterId("your_cluster_id")
     *             .build());
     * 
     *         ctx.export("armsRemoteWritesId2", nameRegex.remoteWrites()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRemoteWritesResult> getRemoteWritesPlain(GetRemoteWritesPlainArgs args) {
        return getRemoteWritesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Arms Remote Writes of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.204.0.
     * 
     * &gt; **DEPRECATED:** This data source has been deprecated since v1.228.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetRemoteWritesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getRemoteWrites(GetRemoteWritesArgs.builder()
     *             .ids("example_id")
     *             .clusterId("your_cluster_id")
     *             .build());
     * 
     *         ctx.export("armsRemoteWritesId1", ids.remoteWrites()[0].id());
     *         final var nameRegex = ArmsFunctions.getRemoteWrites(GetRemoteWritesArgs.builder()
     *             .nameRegex("tf-example")
     *             .clusterId("your_cluster_id")
     *             .build());
     * 
     *         ctx.export("armsRemoteWritesId2", nameRegex.remoteWrites()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRemoteWritesResult> getRemoteWrites(GetRemoteWritesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getRemoteWrites:getRemoteWrites", TypeShape.of(GetRemoteWritesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Remote Writes of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.204.0.
     * 
     * &gt; **DEPRECATED:** This data source has been deprecated since v1.228.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetRemoteWritesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getRemoteWrites(GetRemoteWritesArgs.builder()
     *             .ids("example_id")
     *             .clusterId("your_cluster_id")
     *             .build());
     * 
     *         ctx.export("armsRemoteWritesId1", ids.remoteWrites()[0].id());
     *         final var nameRegex = ArmsFunctions.getRemoteWrites(GetRemoteWritesArgs.builder()
     *             .nameRegex("tf-example")
     *             .clusterId("your_cluster_id")
     *             .build());
     * 
     *         ctx.export("armsRemoteWritesId2", nameRegex.remoteWrites()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRemoteWritesResult> getRemoteWrites(GetRemoteWritesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:arms/getRemoteWrites:getRemoteWrites", TypeShape.of(GetRemoteWritesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Arms Remote Writes of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.204.0.
     * 
     * &gt; **DEPRECATED:** This data source has been deprecated since v1.228.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.arms.ArmsFunctions;
     * import com.pulumi.alicloud.arms.inputs.GetRemoteWritesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = ArmsFunctions.getRemoteWrites(GetRemoteWritesArgs.builder()
     *             .ids("example_id")
     *             .clusterId("your_cluster_id")
     *             .build());
     * 
     *         ctx.export("armsRemoteWritesId1", ids.remoteWrites()[0].id());
     *         final var nameRegex = ArmsFunctions.getRemoteWrites(GetRemoteWritesArgs.builder()
     *             .nameRegex("tf-example")
     *             .clusterId("your_cluster_id")
     *             .build());
     * 
     *         ctx.export("armsRemoteWritesId2", nameRegex.remoteWrites()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRemoteWritesResult> getRemoteWritesPlain(GetRemoteWritesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:arms/getRemoteWrites:getRemoteWrites", TypeShape.of(GetRemoteWritesResult.class), args, Utilities.withVersion(options));
    }
}
