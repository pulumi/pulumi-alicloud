// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.kms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClientKeyState extends com.pulumi.resources.ResourceArgs {

    public static final ClientKeyState Empty = new ClientKeyState();

    /**
     * ClientKey&#39;s parent Application Access Point name.
     * 
     */
    @Import(name="aapName")
    private @Nullable Output<String> aapName;

    /**
     * @return ClientKey&#39;s parent Application Access Point name.
     * 
     */
    public Optional<Output<String>> aapName() {
        return Optional.ofNullable(this.aapName);
    }

    /**
     * Create timestamp, e.g. &#34;2022-08-10T08:03:30Z&#34;.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Create timestamp, e.g. &#34;2022-08-10T08:03:30Z&#34;.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The ClientKey expiration time. Example: &#34;2027-08-10 T08:03:30Z&#34;.
     * 
     */
    @Import(name="notAfter")
    private @Nullable Output<String> notAfter;

    /**
     * @return The ClientKey expiration time. Example: &#34;2027-08-10 T08:03:30Z&#34;.
     * 
     */
    public Optional<Output<String>> notAfter() {
        return Optional.ofNullable(this.notAfter);
    }

    /**
     * The valid start time of the ClientKey. Example: &#34;2022-08-10 T08:03:30Z&#34;.
     * 
     */
    @Import(name="notBefore")
    private @Nullable Output<String> notBefore;

    /**
     * @return The valid start time of the ClientKey. Example: &#34;2022-08-10 T08:03:30Z&#34;.
     * 
     */
    public Optional<Output<String>> notBefore() {
        return Optional.ofNullable(this.notBefore);
    }

    /**
     * To enhance security, set a password for the downloaded Client Key,When an application accesses KMS, you must use the ClientKey content and this password to initialize the SDK client.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return To enhance security, set a password for the downloaded Client Key,When an application accesses KMS, you must use the ClientKey content and this password to initialize the SDK client.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * The name of file that can save access key id and access key secret. Strongly suggest you to specified it when you creating access key, otherwise, you wouldn&#39;t get its secret ever.
     * 
     */
    @Import(name="privateKeyDataFile")
    private @Nullable Output<String> privateKeyDataFile;

    /**
     * @return The name of file that can save access key id and access key secret. Strongly suggest you to specified it when you creating access key, otherwise, you wouldn&#39;t get its secret ever.
     * 
     */
    public Optional<Output<String>> privateKeyDataFile() {
        return Optional.ofNullable(this.privateKeyDataFile);
    }

    private ClientKeyState() {}

    private ClientKeyState(ClientKeyState $) {
        this.aapName = $.aapName;
        this.createTime = $.createTime;
        this.notAfter = $.notAfter;
        this.notBefore = $.notBefore;
        this.password = $.password;
        this.privateKeyDataFile = $.privateKeyDataFile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClientKeyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClientKeyState $;

        public Builder() {
            $ = new ClientKeyState();
        }

        public Builder(ClientKeyState defaults) {
            $ = new ClientKeyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param aapName ClientKey&#39;s parent Application Access Point name.
         * 
         * @return builder
         * 
         */
        public Builder aapName(@Nullable Output<String> aapName) {
            $.aapName = aapName;
            return this;
        }

        /**
         * @param aapName ClientKey&#39;s parent Application Access Point name.
         * 
         * @return builder
         * 
         */
        public Builder aapName(String aapName) {
            return aapName(Output.of(aapName));
        }

        /**
         * @param createTime Create timestamp, e.g. &#34;2022-08-10T08:03:30Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Create timestamp, e.g. &#34;2022-08-10T08:03:30Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param notAfter The ClientKey expiration time. Example: &#34;2027-08-10 T08:03:30Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder notAfter(@Nullable Output<String> notAfter) {
            $.notAfter = notAfter;
            return this;
        }

        /**
         * @param notAfter The ClientKey expiration time. Example: &#34;2027-08-10 T08:03:30Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder notAfter(String notAfter) {
            return notAfter(Output.of(notAfter));
        }

        /**
         * @param notBefore The valid start time of the ClientKey. Example: &#34;2022-08-10 T08:03:30Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder notBefore(@Nullable Output<String> notBefore) {
            $.notBefore = notBefore;
            return this;
        }

        /**
         * @param notBefore The valid start time of the ClientKey. Example: &#34;2022-08-10 T08:03:30Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder notBefore(String notBefore) {
            return notBefore(Output.of(notBefore));
        }

        /**
         * @param password To enhance security, set a password for the downloaded Client Key,When an application accesses KMS, you must use the ClientKey content and this password to initialize the SDK client.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password To enhance security, set a password for the downloaded Client Key,When an application accesses KMS, you must use the ClientKey content and this password to initialize the SDK client.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param privateKeyDataFile The name of file that can save access key id and access key secret. Strongly suggest you to specified it when you creating access key, otherwise, you wouldn&#39;t get its secret ever.
         * 
         * @return builder
         * 
         */
        public Builder privateKeyDataFile(@Nullable Output<String> privateKeyDataFile) {
            $.privateKeyDataFile = privateKeyDataFile;
            return this;
        }

        /**
         * @param privateKeyDataFile The name of file that can save access key id and access key secret. Strongly suggest you to specified it when you creating access key, otherwise, you wouldn&#39;t get its secret ever.
         * 
         * @return builder
         * 
         */
        public Builder privateKeyDataFile(String privateKeyDataFile) {
            return privateKeyDataFile(Output.of(privateKeyDataFile));
        }

        public ClientKeyState build() {
            return $;
        }
    }

}
