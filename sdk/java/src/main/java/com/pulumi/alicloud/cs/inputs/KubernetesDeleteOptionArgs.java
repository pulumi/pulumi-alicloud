// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KubernetesDeleteOptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final KubernetesDeleteOptionArgs Empty = new KubernetesDeleteOptionArgs();

    /**
     * The deletion mode of the cluster. Different resources may have different default behavior, see `resource_type` for details. Valid values:
     * 
     */
    @Import(name="deleteMode")
    private @Nullable Output<String> deleteMode;

    /**
     * @return The deletion mode of the cluster. Different resources may have different default behavior, see `resource_type` for details. Valid values:
     * 
     */
    public Optional<Output<String>> deleteMode() {
        return Optional.ofNullable(this.deleteMode);
    }

    /**
     * The type of resources that are created by cluster. Valid values:
     * 
     */
    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    /**
     * @return The type of resources that are created by cluster. Valid values:
     * 
     */
    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    private KubernetesDeleteOptionArgs() {}

    private KubernetesDeleteOptionArgs(KubernetesDeleteOptionArgs $) {
        this.deleteMode = $.deleteMode;
        this.resourceType = $.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubernetesDeleteOptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubernetesDeleteOptionArgs $;

        public Builder() {
            $ = new KubernetesDeleteOptionArgs();
        }

        public Builder(KubernetesDeleteOptionArgs defaults) {
            $ = new KubernetesDeleteOptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deleteMode The deletion mode of the cluster. Different resources may have different default behavior, see `resource_type` for details. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder deleteMode(@Nullable Output<String> deleteMode) {
            $.deleteMode = deleteMode;
            return this;
        }

        /**
         * @param deleteMode The deletion mode of the cluster. Different resources may have different default behavior, see `resource_type` for details. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder deleteMode(String deleteMode) {
            return deleteMode(Output.of(deleteMode));
        }

        /**
         * @param resourceType The type of resources that are created by cluster. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The type of resources that are created by cluster. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public KubernetesDeleteOptionArgs build() {
            return $;
        }
    }

}
