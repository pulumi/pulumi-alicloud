// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rocketmq.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetGroupsGroup {
    /**
     * @return The name of the group.
     * 
     */
    private String groupName;
    /**
     * @return Specify the protocol applicable to the created Group ID. Valid values: `tcp`, `http`. Default to `tcp`.
     * 
     */
    private String groupType;
    /**
     * @return The name of the group.
     * 
     */
    private String id;
    /**
     * @return Indicates whether namespaces are available. Read [Fields in SubscribeInfoDo](https://www.alibabacloud.com/help/doc-detail/29619.html) for further details.
     * 
     */
    private Boolean independentNaming;
    /**
     * @return ID of the ONS Instance that owns the groups.
     * 
     */
    private String instanceId;
    /**
     * @return The ID of the group owner, which is the Alibaba Cloud UID.
     * 
     */
    private String owner;
    /**
     * @return Remark of the group.
     * 
     */
    private String remark;
    /**
     * @return A map of tags assigned to the Ons instance.
     * 
     */
    private Map<String,Object> tags;

    private GetGroupsGroup() {}
    /**
     * @return The name of the group.
     * 
     */
    public String groupName() {
        return this.groupName;
    }
    /**
     * @return Specify the protocol applicable to the created Group ID. Valid values: `tcp`, `http`. Default to `tcp`.
     * 
     */
    public String groupType() {
        return this.groupType;
    }
    /**
     * @return The name of the group.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates whether namespaces are available. Read [Fields in SubscribeInfoDo](https://www.alibabacloud.com/help/doc-detail/29619.html) for further details.
     * 
     */
    public Boolean independentNaming() {
        return this.independentNaming;
    }
    /**
     * @return ID of the ONS Instance that owns the groups.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return The ID of the group owner, which is the Alibaba Cloud UID.
     * 
     */
    public String owner() {
        return this.owner;
    }
    /**
     * @return Remark of the group.
     * 
     */
    public String remark() {
        return this.remark;
    }
    /**
     * @return A map of tags assigned to the Ons instance.
     * 
     */
    public Map<String,Object> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupsGroup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String groupName;
        private String groupType;
        private String id;
        private Boolean independentNaming;
        private String instanceId;
        private String owner;
        private String remark;
        private Map<String,Object> tags;
        public Builder() {}
        public Builder(GetGroupsGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.groupName = defaults.groupName;
    	      this.groupType = defaults.groupType;
    	      this.id = defaults.id;
    	      this.independentNaming = defaults.independentNaming;
    	      this.instanceId = defaults.instanceId;
    	      this.owner = defaults.owner;
    	      this.remark = defaults.remark;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder groupName(String groupName) {
            if (groupName == null) {
              throw new MissingRequiredPropertyException("GetGroupsGroup", "groupName");
            }
            this.groupName = groupName;
            return this;
        }
        @CustomType.Setter
        public Builder groupType(String groupType) {
            if (groupType == null) {
              throw new MissingRequiredPropertyException("GetGroupsGroup", "groupType");
            }
            this.groupType = groupType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGroupsGroup", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder independentNaming(Boolean independentNaming) {
            if (independentNaming == null) {
              throw new MissingRequiredPropertyException("GetGroupsGroup", "independentNaming");
            }
            this.independentNaming = independentNaming;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetGroupsGroup", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder owner(String owner) {
            if (owner == null) {
              throw new MissingRequiredPropertyException("GetGroupsGroup", "owner");
            }
            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder remark(String remark) {
            if (remark == null) {
              throw new MissingRequiredPropertyException("GetGroupsGroup", "remark");
            }
            this.remark = remark;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,Object> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetGroupsGroup", "tags");
            }
            this.tags = tags;
            return this;
        }
        public GetGroupsGroup build() {
            final var _resultValue = new GetGroupsGroup();
            _resultValue.groupName = groupName;
            _resultValue.groupType = groupType;
            _resultValue.id = id;
            _resultValue.independentNaming = independentNaming;
            _resultValue.instanceId = instanceId;
            _resultValue.owner = owner;
            _resultValue.remark = remark;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
