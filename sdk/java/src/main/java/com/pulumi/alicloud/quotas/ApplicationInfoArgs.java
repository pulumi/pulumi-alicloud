// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.quotas;

import com.pulumi.alicloud.quotas.inputs.ApplicationInfoDimensionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationInfoArgs Empty = new ApplicationInfoArgs();

    @Import(name="auditMode")
    private @Nullable Output<String> auditMode;

    public Optional<Output<String>> auditMode() {
        return Optional.ofNullable(this.auditMode);
    }

    @Import(name="desireValue", required=true)
    private Output<Double> desireValue;

    public Output<Double> desireValue() {
        return this.desireValue;
    }

    @Import(name="dimensions")
    private @Nullable Output<List<ApplicationInfoDimensionArgs>> dimensions;

    public Optional<Output<List<ApplicationInfoDimensionArgs>>> dimensions() {
        return Optional.ofNullable(this.dimensions);
    }

    @Import(name="effectiveTime")
    private @Nullable Output<String> effectiveTime;

    public Optional<Output<String>> effectiveTime() {
        return Optional.ofNullable(this.effectiveTime);
    }

    @Import(name="envLanguage")
    private @Nullable Output<String> envLanguage;

    public Optional<Output<String>> envLanguage() {
        return Optional.ofNullable(this.envLanguage);
    }

    @Import(name="expireTime")
    private @Nullable Output<String> expireTime;

    public Optional<Output<String>> expireTime() {
        return Optional.ofNullable(this.expireTime);
    }

    @Import(name="noticeType")
    private @Nullable Output<Integer> noticeType;

    public Optional<Output<Integer>> noticeType() {
        return Optional.ofNullable(this.noticeType);
    }

    @Import(name="productCode", required=true)
    private Output<String> productCode;

    public Output<String> productCode() {
        return this.productCode;
    }

    @Import(name="quotaActionCode", required=true)
    private Output<String> quotaActionCode;

    public Output<String> quotaActionCode() {
        return this.quotaActionCode;
    }

    @Import(name="quotaCategory")
    private @Nullable Output<String> quotaCategory;

    public Optional<Output<String>> quotaCategory() {
        return Optional.ofNullable(this.quotaCategory);
    }

    @Import(name="reason", required=true)
    private Output<String> reason;

    public Output<String> reason() {
        return this.reason;
    }

    private ApplicationInfoArgs() {}

    private ApplicationInfoArgs(ApplicationInfoArgs $) {
        this.auditMode = $.auditMode;
        this.desireValue = $.desireValue;
        this.dimensions = $.dimensions;
        this.effectiveTime = $.effectiveTime;
        this.envLanguage = $.envLanguage;
        this.expireTime = $.expireTime;
        this.noticeType = $.noticeType;
        this.productCode = $.productCode;
        this.quotaActionCode = $.quotaActionCode;
        this.quotaCategory = $.quotaCategory;
        this.reason = $.reason;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationInfoArgs $;

        public Builder() {
            $ = new ApplicationInfoArgs();
        }

        public Builder(ApplicationInfoArgs defaults) {
            $ = new ApplicationInfoArgs(Objects.requireNonNull(defaults));
        }

        public Builder auditMode(@Nullable Output<String> auditMode) {
            $.auditMode = auditMode;
            return this;
        }

        public Builder auditMode(String auditMode) {
            return auditMode(Output.of(auditMode));
        }

        public Builder desireValue(Output<Double> desireValue) {
            $.desireValue = desireValue;
            return this;
        }

        public Builder desireValue(Double desireValue) {
            return desireValue(Output.of(desireValue));
        }

        public Builder dimensions(@Nullable Output<List<ApplicationInfoDimensionArgs>> dimensions) {
            $.dimensions = dimensions;
            return this;
        }

        public Builder dimensions(List<ApplicationInfoDimensionArgs> dimensions) {
            return dimensions(Output.of(dimensions));
        }

        public Builder dimensions(ApplicationInfoDimensionArgs... dimensions) {
            return dimensions(List.of(dimensions));
        }

        public Builder effectiveTime(@Nullable Output<String> effectiveTime) {
            $.effectiveTime = effectiveTime;
            return this;
        }

        public Builder effectiveTime(String effectiveTime) {
            return effectiveTime(Output.of(effectiveTime));
        }

        public Builder envLanguage(@Nullable Output<String> envLanguage) {
            $.envLanguage = envLanguage;
            return this;
        }

        public Builder envLanguage(String envLanguage) {
            return envLanguage(Output.of(envLanguage));
        }

        public Builder expireTime(@Nullable Output<String> expireTime) {
            $.expireTime = expireTime;
            return this;
        }

        public Builder expireTime(String expireTime) {
            return expireTime(Output.of(expireTime));
        }

        public Builder noticeType(@Nullable Output<Integer> noticeType) {
            $.noticeType = noticeType;
            return this;
        }

        public Builder noticeType(Integer noticeType) {
            return noticeType(Output.of(noticeType));
        }

        public Builder productCode(Output<String> productCode) {
            $.productCode = productCode;
            return this;
        }

        public Builder productCode(String productCode) {
            return productCode(Output.of(productCode));
        }

        public Builder quotaActionCode(Output<String> quotaActionCode) {
            $.quotaActionCode = quotaActionCode;
            return this;
        }

        public Builder quotaActionCode(String quotaActionCode) {
            return quotaActionCode(Output.of(quotaActionCode));
        }

        public Builder quotaCategory(@Nullable Output<String> quotaCategory) {
            $.quotaCategory = quotaCategory;
            return this;
        }

        public Builder quotaCategory(String quotaCategory) {
            return quotaCategory(Output.of(quotaCategory));
        }

        public Builder reason(Output<String> reason) {
            $.reason = reason;
            return this;
        }

        public Builder reason(String reason) {
            return reason(Output.of(reason));
        }

        public ApplicationInfoArgs build() {
            if ($.desireValue == null) {
                throw new MissingRequiredPropertyException("ApplicationInfoArgs", "desireValue");
            }
            if ($.productCode == null) {
                throw new MissingRequiredPropertyException("ApplicationInfoArgs", "productCode");
            }
            if ($.quotaActionCode == null) {
                throw new MissingRequiredPropertyException("ApplicationInfoArgs", "quotaActionCode");
            }
            if ($.reason == null) {
                throw new MissingRequiredPropertyException("ApplicationInfoArgs", "reason");
            }
            return $;
        }
    }

}
