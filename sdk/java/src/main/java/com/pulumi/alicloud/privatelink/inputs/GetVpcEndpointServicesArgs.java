// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.privatelink.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetVpcEndpointServicesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVpcEndpointServicesArgs Empty = new GetVpcEndpointServicesArgs();

    /**
     * Whether to automatically accept terminal node connections.
     * 
     */
    @Import(name="autoAcceptConnection")
    private @Nullable Output<Boolean> autoAcceptConnection;

    /**
     * @return Whether to automatically accept terminal node connections.
     * 
     */
    public Optional<Output<Boolean>> autoAcceptConnection() {
        return Optional.ofNullable(this.autoAcceptConnection);
    }

    /**
     * A list of Vpc Endpoint Service IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of Vpc Endpoint Service IDs.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * A regex string to filter results by Vpc Endpoint Service name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    /**
     * @return A regex string to filter results by Vpc Endpoint Service name.
     * 
     */
    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The business status of the terminal node service. Valid Value: `Normal`, `FinancialLocked` and `SecurityLocked`.
     * 
     */
    @Import(name="serviceBusinessStatus")
    private @Nullable Output<String> serviceBusinessStatus;

    /**
     * @return The business status of the terminal node service. Valid Value: `Normal`, `FinancialLocked` and `SecurityLocked`.
     * 
     */
    public Optional<Output<String>> serviceBusinessStatus() {
        return Optional.ofNullable(this.serviceBusinessStatus);
    }

    /**
     * The Status of Vpc Endpoint Service. Valid Value: `Active`, `Creating`, `Deleted`, `Deleting` and `Pending`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The Status of Vpc Endpoint Service. Valid Value: `Active`, `Creating`, `Deleted`, `Deleting` and `Pending`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The name of Vpc Endpoint Service.
     * 
     */
    @Import(name="vpcEndpointServiceName")
    private @Nullable Output<String> vpcEndpointServiceName;

    /**
     * @return The name of Vpc Endpoint Service.
     * 
     */
    public Optional<Output<String>> vpcEndpointServiceName() {
        return Optional.ofNullable(this.vpcEndpointServiceName);
    }

    private GetVpcEndpointServicesArgs() {}

    private GetVpcEndpointServicesArgs(GetVpcEndpointServicesArgs $) {
        this.autoAcceptConnection = $.autoAcceptConnection;
        this.ids = $.ids;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.serviceBusinessStatus = $.serviceBusinessStatus;
        this.status = $.status;
        this.vpcEndpointServiceName = $.vpcEndpointServiceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVpcEndpointServicesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVpcEndpointServicesArgs $;

        public Builder() {
            $ = new GetVpcEndpointServicesArgs();
        }

        public Builder(GetVpcEndpointServicesArgs defaults) {
            $ = new GetVpcEndpointServicesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoAcceptConnection Whether to automatically accept terminal node connections.
         * 
         * @return builder
         * 
         */
        public Builder autoAcceptConnection(@Nullable Output<Boolean> autoAcceptConnection) {
            $.autoAcceptConnection = autoAcceptConnection;
            return this;
        }

        /**
         * @param autoAcceptConnection Whether to automatically accept terminal node connections.
         * 
         * @return builder
         * 
         */
        public Builder autoAcceptConnection(Boolean autoAcceptConnection) {
            return autoAcceptConnection(Output.of(autoAcceptConnection));
        }

        /**
         * @param ids A list of Vpc Endpoint Service IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Vpc Endpoint Service IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of Vpc Endpoint Service IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param nameRegex A regex string to filter results by Vpc Endpoint Service name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param nameRegex A regex string to filter results by Vpc Endpoint Service name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        /**
         * @param serviceBusinessStatus The business status of the terminal node service. Valid Value: `Normal`, `FinancialLocked` and `SecurityLocked`.
         * 
         * @return builder
         * 
         */
        public Builder serviceBusinessStatus(@Nullable Output<String> serviceBusinessStatus) {
            $.serviceBusinessStatus = serviceBusinessStatus;
            return this;
        }

        /**
         * @param serviceBusinessStatus The business status of the terminal node service. Valid Value: `Normal`, `FinancialLocked` and `SecurityLocked`.
         * 
         * @return builder
         * 
         */
        public Builder serviceBusinessStatus(String serviceBusinessStatus) {
            return serviceBusinessStatus(Output.of(serviceBusinessStatus));
        }

        /**
         * @param status The Status of Vpc Endpoint Service. Valid Value: `Active`, `Creating`, `Deleted`, `Deleting` and `Pending`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The Status of Vpc Endpoint Service. Valid Value: `Active`, `Creating`, `Deleted`, `Deleting` and `Pending`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param vpcEndpointServiceName The name of Vpc Endpoint Service.
         * 
         * @return builder
         * 
         */
        public Builder vpcEndpointServiceName(@Nullable Output<String> vpcEndpointServiceName) {
            $.vpcEndpointServiceName = vpcEndpointServiceName;
            return this;
        }

        /**
         * @param vpcEndpointServiceName The name of Vpc Endpoint Service.
         * 
         * @return builder
         * 
         */
        public Builder vpcEndpointServiceName(String vpcEndpointServiceName) {
            return vpcEndpointServiceName(Output.of(vpcEndpointServiceName));
        }

        public GetVpcEndpointServicesArgs build() {
            return $;
        }
    }

}
