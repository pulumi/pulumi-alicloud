// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.selectdb;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.selectdb.DbClusterArgs;
import com.pulumi.alicloud.selectdb.inputs.DbClusterState;
import com.pulumi.alicloud.selectdb.outputs.DbClusterDesiredParam;
import com.pulumi.alicloud.selectdb.outputs.DbClusterParamChangeLog;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a SelectDB DBCluster resource.
 * 
 * For information about SelectDB DBCluster and how to use it, see [What is DBCluster](https://www.alibabacloud.com/help/zh/selectdb/latest/api-selectdb-2023-05-22-createdbcluster).
 * 
 * &gt; **NOTE:** Available since v1.229.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.vpc.VpcFunctions;
 * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
 * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
 * import com.pulumi.alicloud.selectdb.DbInstance;
 * import com.pulumi.alicloud.selectdb.DbInstanceArgs;
 * import com.pulumi.alicloud.selectdb.DbCluster;
 * import com.pulumi.alicloud.selectdb.DbClusterArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
 *             .availableResourceCreation("VSwitch")
 *             .build());
 * 
 *         final var name = config.get("name").orElse("terraform_example");
 *         final var defaultGetNetworks = VpcFunctions.getNetworks(GetNetworksArgs.builder()
 *             .nameRegex("^default-NODELETING$")
 *             .build());
 * 
 *         final var defaultGetSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
 *             .vpcId(defaultGetNetworks.applyValue(getNetworksResult -> getNetworksResult.ids()[0]))
 *             .zoneId(default_.zones()[0].id())
 *             .build());
 * 
 *         var defaultDbInstance = new DbInstance("defaultDbInstance", DbInstanceArgs.builder()
 *             .dbInstanceClass("selectdb.xlarge")
 *             .dbInstanceDescription(name)
 *             .cacheSize(200)
 *             .paymentType("PayAsYouGo")
 *             .vpcId(defaultGetSwitches.applyValue(getSwitchesResult -> getSwitchesResult.vswitches()[0].vpcId()))
 *             .zoneId(defaultGetSwitches.applyValue(getSwitchesResult -> getSwitchesResult.vswitches()[0].zoneId()))
 *             .vswitchId(defaultGetSwitches.applyValue(getSwitchesResult -> getSwitchesResult.vswitches()[0].id()))
 *             .build());
 * 
 *         var defaultDbCluster = new DbCluster("defaultDbCluster", DbClusterArgs.builder()
 *             .dbInstanceId(defaultDbInstance.id())
 *             .dbClusterDescription(name)
 *             .dbClusterClass("selectdb.2xlarge")
 *             .cacheSize(400)
 *             .paymentType("PayAsYouGo")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * SelectDB DBCluster can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:selectdb/dbCluster:DbCluster example &lt;db_instance_id&gt;:&lt;db_cluster_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:selectdb/dbCluster:DbCluster")
public class DbCluster extends com.pulumi.resources.CustomResource {
    /**
     * The desired cache size on creating cluster. The number should be divided by 100.
     * 
     */
    @Export(name="cacheSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> cacheSize;

    /**
     * @return The desired cache size on creating cluster. The number should be divided by 100.
     * 
     */
    public Output<Integer> cacheSize() {
        return this.cacheSize;
    }
    /**
     * The cpu resource amount of DBCluster. Depends on `db_cluster_class`.
     * 
     */
    @Export(name="cpu", refs={Integer.class}, tree="[0]")
    private Output<Integer> cpu;

    /**
     * @return The cpu resource amount of DBCluster. Depends on `db_cluster_class`.
     * 
     */
    public Output<Integer> cpu() {
        return this.cpu;
    }
    /**
     * The time when DBCluster is created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The time when DBCluster is created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The DBCluster class. db_cluster_class has a range of class from `selectdb.xlarge` to `selectdb.256xlarge`.
     * 
     */
    @Export(name="dbClusterClass", refs={String.class}, tree="[0]")
    private Output<String> dbClusterClass;

    /**
     * @return The DBCluster class. db_cluster_class has a range of class from `selectdb.xlarge` to `selectdb.256xlarge`.
     * 
     */
    public Output<String> dbClusterClass() {
        return this.dbClusterClass;
    }
    /**
     * The DBCluster description.
     * 
     */
    @Export(name="dbClusterDescription", refs={String.class}, tree="[0]")
    private Output<String> dbClusterDescription;

    /**
     * @return The DBCluster description.
     * 
     */
    public Output<String> dbClusterDescription() {
        return this.dbClusterDescription;
    }
    /**
     * The id of the cluster.
     * 
     */
    @Export(name="dbClusterId", refs={String.class}, tree="[0]")
    private Output<String> dbClusterId;

    /**
     * @return The id of the cluster.
     * 
     */
    public Output<String> dbClusterId() {
        return this.dbClusterId;
    }
    /**
     * The InstanceId of DBInstance for DBCluster. Every DBCluster requires one DBInstance to rely on.
     * 
     */
    @Export(name="dbInstanceId", refs={String.class}, tree="[0]")
    private Output<String> dbInstanceId;

    /**
     * @return The InstanceId of DBInstance for DBCluster. Every DBCluster requires one DBInstance to rely on.
     * 
     */
    public Output<String> dbInstanceId() {
        return this.dbInstanceId;
    }
    /**
     * The modified parameter in DBCluster. See `desired_params` below.
     * 
     */
    @Export(name="desiredParams", refs={List.class,DbClusterDesiredParam.class}, tree="[0,1]")
    private Output</* @Nullable */ List<DbClusterDesiredParam>> desiredParams;

    /**
     * @return The modified parameter in DBCluster. See `desired_params` below.
     * 
     */
    public Output<Optional<List<DbClusterDesiredParam>>> desiredParams() {
        return Codegen.optional(this.desiredParams);
    }
    /**
     * The desired status for the resource. Valid values: `ACTIVATION`,`STOPPED`,`STARTING`,`RESTART`.
     * 
     */
    @Export(name="desiredStatus", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> desiredStatus;

    /**
     * @return The desired status for the resource. Valid values: `ACTIVATION`,`STOPPED`,`STARTING`,`RESTART`.
     * 
     */
    public Output<Optional<String>> desiredStatus() {
        return Codegen.optional(this.desiredStatus);
    }
    /**
     * The engine of DBCluster. Always `selectdb`.
     * 
     */
    @Export(name="engine", refs={String.class}, tree="[0]")
    private Output<String> engine;

    /**
     * @return The engine of DBCluster. Always `selectdb`.
     * 
     */
    public Output<String> engine() {
        return this.engine;
    }
    /**
     * The version of DBCluster.
     * 
     */
    @Export(name="engineVersion", refs={String.class}, tree="[0]")
    private Output<String> engineVersion;

    /**
     * @return The version of DBCluster.
     * 
     */
    public Output<String> engineVersion() {
        return this.engineVersion;
    }
    /**
     * The memory resource amount of DBCluster. Depends on `db_cluster_class`.
     * 
     */
    @Export(name="memory", refs={Integer.class}, tree="[0]")
    private Output<Integer> memory;

    /**
     * @return The memory resource amount of DBCluster. Depends on `db_cluster_class`.
     * 
     */
    public Output<Integer> memory() {
        return this.memory;
    }
    /**
     * The details about parameter changelogs in DBCluster returned.
     * 
     */
    @Export(name="paramChangeLogs", refs={List.class,DbClusterParamChangeLog.class}, tree="[0,1]")
    private Output<List<DbClusterParamChangeLog>> paramChangeLogs;

    /**
     * @return The details about parameter changelogs in DBCluster returned.
     * 
     */
    public Output<List<DbClusterParamChangeLog>> paramChangeLogs() {
        return this.paramChangeLogs;
    }
    /**
     * The payment type of the resource. Valid values: `PayAsYouGo`,`Subscription`.
     * 
     */
    @Export(name="paymentType", refs={String.class}, tree="[0]")
    private Output<String> paymentType;

    /**
     * @return The payment type of the resource. Valid values: `PayAsYouGo`,`Subscription`.
     * 
     */
    public Output<String> paymentType() {
        return this.paymentType;
    }
    /**
     * The ID of region for the cluster.
     * 
     */
    @Export(name="regionId", refs={String.class}, tree="[0]")
    private Output<String> regionId;

    /**
     * @return The ID of region for the cluster.
     * 
     */
    public Output<String> regionId() {
        return this.regionId;
    }
    /**
     * The current status of the resource.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The current status of the resource.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The ID of the VPC for the cluster.
     * 
     */
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output<String> vpcId;

    /**
     * @return The ID of the VPC for the cluster.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }
    /**
     * The ID of zone for the cluster.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return The ID of zone for the cluster.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DbCluster(java.lang.String name) {
        this(name, DbClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DbCluster(java.lang.String name, DbClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DbCluster(java.lang.String name, DbClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:selectdb/dbCluster:DbCluster", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DbCluster(java.lang.String name, Output<java.lang.String> id, @Nullable DbClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:selectdb/dbCluster:DbCluster", name, state, makeResourceOptions(options, id), false);
    }

    private static DbClusterArgs makeArgs(DbClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DbClusterArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DbCluster get(java.lang.String name, Output<java.lang.String> id, @Nullable DbClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DbCluster(name, id, state, options);
    }
}
