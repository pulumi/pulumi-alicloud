// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.fc.V3CustomDomainArgs;
import com.pulumi.alicloud.fc.inputs.V3CustomDomainState;
import com.pulumi.alicloud.fc.outputs.V3CustomDomainAuthConfig;
import com.pulumi.alicloud.fc.outputs.V3CustomDomainCertConfig;
import com.pulumi.alicloud.fc.outputs.V3CustomDomainRouteConfig;
import com.pulumi.alicloud.fc.outputs.V3CustomDomainTlsConfig;
import com.pulumi.alicloud.fc.outputs.V3CustomDomainWafConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a FCV3 Custom Domain resource.
 * 
 * Custom Domain names allow users to access FC functions through custom domain names, providing convenience for building Web services using function compute.
 * You can bind a custom domain name to Function Compute and set different paths to different functions of different services.
 * 
 * For information about FCV3 Custom Domain and how to use it, see [What is Custom Domain](https://www.alibabacloud.com/help/en/functioncompute/developer-reference/api-fc-2023-03-30-getcustomdomain).
 * 
 * &gt; **NOTE:** This content is a technical preview, and should not be relied on in a production environment.
 * 
 * &gt; **NOTE:** Available since v1.228.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.fc.V3CustomDomain;
 * import com.pulumi.alicloud.fc.V3CustomDomainArgs;
 * import com.pulumi.alicloud.fc.inputs.V3CustomDomainRouteConfigArgs;
 * import com.pulumi.alicloud.fc.inputs.V3CustomDomainAuthConfigArgs;
 * import com.pulumi.alicloud.fc.inputs.V3CustomDomainCertConfigArgs;
 * import com.pulumi.alicloud.fc.inputs.V3CustomDomainTlsConfigArgs;
 * import com.pulumi.alicloud.fc.inputs.V3CustomDomainWafConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("flask-07ap.fcv3.1511928242963727.cn-shanghai.fc.devsapp.net");
 *         final var functionName1 = config.get("functionName1").orElse("terraform-custom-domain-t1");
 *         final var authConfig = config.get("authConfig").orElse("""
 * {
 *     "jwks": {
 *         "keys": [
 *             {
 *                 "p": "8AdUVeldoE4LueFuzEF_C8tvJ7NhlkzS58Gz9KJTPXPr5DADSUVLWJCr5OdFE79q513SneT0UhGo-JfQ1lNMoNv5-YZ1AxIo9fZUEPIe-KyX9ttaglpzCAUE3TeKdm5J-_HZQzBPKbyUwJHAILNgB2-4IBZZwK7LAfbmfi9TmFM",
 *                 "kty": "RSA",
 *                 "q": "x8m5ydXwC8AAp9I-hOnUAx6yQJz1Nx-jXPCfn--XdHpJuNcuwRQsuUCSRQs_h3SoCI3qZZdzswQnPrtHFxgUJtQFuMj-QZpyMnebDb81rmczl2KPVUtaVDVagJEF6U9Ov3PfrLhvHUEv5u7p6s4Z6maBUaByfFlhEVPv4_ao8Us",
 *                 "d": "bjIQAKD2e65gwJ38_Sqq_EmLFuMMey3gjDv1bSCHFH8fyONJTq-utrZfvspz6EegRwW2mSHW9kq87hRwIBW9y7ED5N4KG5gHDjyh57BRE0SKv0Dz1igtKLyp-nl8-aHc1DbONwr1d7tZfFt255TxIN8cPTakXOp2Av_ztql_JotVUGK8eHmXNJFlvq5tc180sKWMHNSNsCUhQgcB1TWb_gwcqxdsIWPsLZI491XKeTGQ98J7z5h6R1cTC97lfJZ0vNtJahd2jHd3WfTUDj5-untMKyZpYYak2Vr8xtFz8H6Q5Rsz8uX_7gtEqYH2CMjPdbXcebrnD1igRSJMYiP0lQ",
 *                 "e": "AQAB",
 *                 "use": "sig",
 *                 "qi": "MTCCRu8AcvvjbHms7V_sDFO7wX0YNyvOJAAbuTmHvQbJ0NDeDta-f-hi8cjkMk7Fpk2hej158E5gDyO62UG99wHZSbmHT34MvIdmhQ5mnbL-5KK9rxde0nayO1ebGepD_GJThPAg9iskzeWpCg5X2etNo2bHoG_ZLQGXj2BQ1VM",
 *                 "dp": "J4_ttKNcTTnP8PlZO81n1VfYoGCOqylKceyZbq76rVxX-yp2wDLtslFWI8qCtjiMtEnglynPo19JzH-pakocjT70us4Qp0rs-W16ebiOpko8WfHZvzaNUzsQjC3FYrPW-fHo74wc4DI3Cm57jmhCYbdmT9OfQ4UL7Oz3HMFMNAU",
 *                 "alg": "RS256",
 *                 "dq": "H4-VgvYB-sk1EU3cRIDv1iJWRHDHKBMeaoM0pD5kLalX1hRgNW4rdoRl1vRk79AU720D11Kqm2APlxBctaA_JrcdxEg0KkbsvV45p11KbKeu9b5DKFVECsN27ZJ7XZUCuqnibtWf7_4pRBD_8PDoFShmS2_ORiiUdflNjzSbEas",
 *                 "n": "u1LWgoomekdOMfB1lEe96OHehd4XRNCbZRm96RqwOYTTc28Sc_U5wKV2umDzolfoI682ct2BNnRRahYgZPhbOCzHYM6i8sRXjz9Ghx3QHw9zrYACtArwQxrTFiejbfzDPGdPrMQg7T8wjtLtkSyDmCzeXpbIdwmxuLyt_ahLfHelr94kEksMDa42V4Fi5bMW4cCLjlEKzBEHGmFdT8UbLPCvpgsM84JK63e5ifdeI9NdadbC8ZMiR--dFCujT7AgRRyMzxgdn2l-nZJ2ZaYzbLUtAW5_U2kfRVkDNa8d1g__2V5zjU6nfLJ1S2MoXMgRgDPeHpEehZVu2kNaSFvDUQ"
 *             }
 *         ]
 *     },
 *     "tokenLookup": "header:auth",
 *     "claimPassBy": "header:name:name"
 * }
 *         """);
 *         final var certificate = config.get("certificate").orElse("""
 * -----BEGIN CERTIFICATE-----
 * MIIDRjCCAq+gAwIBAgIJAJn3ox4K13PoMA0GCSqGSIb3DQEBBQUAMHYxCzAJBgNV
 * BAYTAkNOMQswCQYDVQQIEwJCSjELMAkGA1UEBxMCQkoxDDAKBgNVBAoTA0FMSTEP
 * MA0GA1UECxMGQUxJWVVOMQ0wCwYDVQQDEwR0ZXN0MR8wHQYJKoZIhvcNAQkBFhB0
 * ZXN0QGhvdG1haWwuY29tMB4XDTE0MTEyNDA2MDQyNVoXDTI0MTEyMTA2MDQyNVow
 * djELMAkGA1UEBhMCQ04xCzAJBgNVBAgTAkJKMQswCQYDVQQHEwJCSjEMMAoGA1UE
 * ChMDQUxJMQ8wDQYDVQQLEwZBTElZVU4xDTALBgNVBAMTBHRlc3QxHzAdBgkqhkiG
 * 9w0BCQEWEHRlc3RAaG90bWFpbC5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJ
 * AoGBAM7SS3e9+Nj0HKAsRuIDNSsS3UK6b+62YQb2uuhKrp1HMrOx61WSDR2qkAnB
 * coG00Uz38EE+9DLYNUVQBK7aSgLP5M1Ak4wr4GqGyCgjejzzh3DshUzLCCy2rook
 * KOyRTlPX+Q5l7rE1fcSNzgepcae5i2sE1XXXzLRIDIvQxcspAgMBAAGjgdswgdgw
 * HQYDVR0OBBYEFBdy+OuMsvbkV7R14f0OyoLoh2z4MIGoBgNVHSMEgaAwgZ2AFBdy
 * +OuMsvbkV7R14f0OyoLoh2z4oXqkeDB2MQswCQYDVQQGEwJDTjELMAkGA1UECBMC
 * QkoxCzAJBgNVBAcTAkJKMQwwCgYDVQQKEwNBTEkxDzANBgNVBAsTBkFMSVlVTjEN
 * MAsGA1UEAxMEdGVzdDEfMB0GCSqGSIb3DQEJARYQdGVzdEBob3RtYWlsLmNvbYIJ
 * AJn3ox4K13PoMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQADgYEAY7KOsnyT
 * cQzfhiiG7ASjiPakw5wXoycHt5GCvLG5htp2TKVzgv9QTliA3gtfv6oV4zRZx7X1
 * Ofi6hVgErtHaXJheuPVeW6eAW8mHBoEfvDAfU3y9waYrtUevSl07643bzKL6v+Qd
 * DUBTxOAvSYfXTtI90EAxEG/bJJyOm5LqoiA=
 * -----END CERTIFICATE-----
 *         """);
 *         final var privateKey = config.get("privateKey").orElse("""
 * -----BEGIN RSA PRIVATE KEY-----
 * MIICXAIBAAKBgQDO0kt3vfjY9BygLEbiAzUrEt1Cum/utmEG9rroSq6dRzKzsetV
 * kg0dqpAJwXKBtNFM9/BBPvQy2DVFUASu2koCz+TNQJOMK+BqhsgoI3o884dw7IVM
 * ywgstq6KJCjskU5T1/kOZe6xNX3Ejc4HqXGnuYtrBNV118y0SAyL0MXLKQIDAQAB
 * AoGAfe3NxbsGKhN42o4bGsKZPQDfeCHMxayGp5bTd10BtQIE/ST4BcJH+ihAS7Bd
 * 6FwQlKzivNd4GP1MckemklCXfsVckdL94e8ZbJl23GdWul3v8V+KndJHqv5zVJmP
 * hwWoKimwIBTb2s0ctVryr2f18N4hhyFw1yGp0VxclGHkjgECQQD9CvllsnOwHpP4
 * MdrDHbdb29QrobKyKW8pPcDd+sth+kP6Y8MnCVuAKXCKj5FeIsgVtfluPOsZjPzz
 * 71QQWS1dAkEA0T0KXO8gaBQwJhIoo/w6hy5JGZnrNSpOPp5xvJuMAafs2eyvmhJm
 * Ev9SN/Pf2VYa1z6FEnBaLOVD6hf6YQIsPQJAX/CZPoW6dzwgvimo1/GcY6eleiWE
 * qygqjWhsh71e/3bz7yuEAnj5yE3t7Zshcp+dXR3xxGo0eSuLfLFxHgGxwQJAAxf8
 * 9DzQ5NkPkTCJi0sqbl8/03IUKTgT6hcbpWdDXa7m8J3wRr3o5nUB+TPQ5nzAbthM
 * zWX931YQeACcwhxvHQJBAN5mTzzJD4w4Ma6YTaNHyXakdYfyAWrOkPIWZxfhMfXe
 * DrlNdiysTI4Dd1dLeErVpjsckAaOW/JDG5PCSwkaMxk=
 * -----END RSA PRIVATE KEY-----
 *         """);
 *         var default_ = new V3CustomDomain("default", V3CustomDomainArgs.builder()
 *             .customDomainName(name)
 *             .routeConfig(V3CustomDomainRouteConfigArgs.builder()
 *                 .routes(                
 *                     V3CustomDomainRouteConfigRouteArgs.builder()
 *                         .functionName(functionName1)
 *                         .rewriteConfig(V3CustomDomainRouteConfigRouteRewriteConfigArgs.builder()
 *                             .regexRules(                            
 *                                 V3CustomDomainRouteConfigRouteRewriteConfigRegexRuleArgs.builder()
 *                                     .match("/api/*")
 *                                     .replacement("$1")
 *                                     .build(),
 *                                 V3CustomDomainRouteConfigRouteRewriteConfigRegexRuleArgs.builder()
 *                                     .match("/api1/*")
 *                                     .replacement("$1")
 *                                     .build(),
 *                                 V3CustomDomainRouteConfigRouteRewriteConfigRegexRuleArgs.builder()
 *                                     .match("/api2/*")
 *                                     .replacement("$1")
 *                                     .build())
 *                             .wildcardRules(                            
 *                                 V3CustomDomainRouteConfigRouteRewriteConfigWildcardRuleArgs.builder()
 *                                     .match("^/api1/.+?/(.*)")
 *                                     .replacement("/api/v1/$1")
 *                                     .build(),
 *                                 V3CustomDomainRouteConfigRouteRewriteConfigWildcardRuleArgs.builder()
 *                                     .match("^/api2/.+?/(.*)")
 *                                     .replacement("/api/v2/$1")
 *                                     .build(),
 *                                 V3CustomDomainRouteConfigRouteRewriteConfigWildcardRuleArgs.builder()
 *                                     .match("^/api2/.+?/(.*)")
 *                                     .replacement("/api/v3/$1")
 *                                     .build())
 *                             .equalRules(                            
 *                                 V3CustomDomainRouteConfigRouteRewriteConfigEqualRuleArgs.builder()
 *                                     .match("/old")
 *                                     .replacement("/new")
 *                                     .build(),
 *                                 V3CustomDomainRouteConfigRouteRewriteConfigEqualRuleArgs.builder()
 *                                     .replacement("/new1")
 *                                     .match("/old1")
 *                                     .build(),
 *                                 V3CustomDomainRouteConfigRouteRewriteConfigEqualRuleArgs.builder()
 *                                     .match("/old2")
 *                                     .replacement("/new2")
 *                                     .build())
 *                             .build())
 *                         .methods(                        
 *                             "GET",
 *                             "POST",
 *                             "DELETE",
 *                             "HEAD")
 *                         .path("/a")
 *                         .qualifier("LATEST")
 *                         .build(),
 *                     V3CustomDomainRouteConfigRouteArgs.builder()
 *                         .functionName(functionName1)
 *                         .methods("GET")
 *                         .path("/b")
 *                         .qualifier("LATEST")
 *                         .build(),
 *                     V3CustomDomainRouteConfigRouteArgs.builder()
 *                         .functionName(functionName1)
 *                         .methods("POST")
 *                         .path("/c")
 *                         .qualifier("1")
 *                         .build())
 *                 .build())
 *             .authConfig(V3CustomDomainAuthConfigArgs.builder()
 *                 .authType("jwt")
 *                 .authInfo(authConfig)
 *                 .build())
 *             .protocol("HTTP,HTTPS")
 *             .certConfig(V3CustomDomainCertConfigArgs.builder()
 *                 .certName("cert-name")
 *                 .certificate(certificate)
 *                 .privateKey(privateKey)
 *                 .build())
 *             .tlsConfig(V3CustomDomainTlsConfigArgs.builder()
 *                 .cipherSuites(                
 *                     "TLS_RSA_WITH_AES_128_CBC_SHA",
 *                     "TLS_RSA_WITH_AES_256_CBC_SHA",
 *                     "TLS_RSA_WITH_AES_128_GCM_SHA256",
 *                     "TLS_RSA_WITH_AES_256_GCM_SHA384")
 *                 .maxVersion("TLSv1.3")
 *                 .minVersion("TLSv1.0")
 *                 .build())
 *             .wafConfig(V3CustomDomainWafConfigArgs.builder()
 *                 .enableWaf(false)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * FCV3 Custom Domain can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:fc/v3CustomDomain:V3CustomDomain example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:fc/v3CustomDomain:V3CustomDomain")
public class V3CustomDomain extends com.pulumi.resources.CustomResource {
    /**
     * (Available since v1.234.0) The ID of your Alibaba Cloud account (primary account).
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return (Available since v1.234.0) The ID of your Alibaba Cloud account (primary account).
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * (Available since v1.234.0) API version of Function Compute
     * 
     */
    @Export(name="apiVersion", refs={String.class}, tree="[0]")
    private Output<String> apiVersion;

    /**
     * @return (Available since v1.234.0) API version of Function Compute
     * 
     */
    public Output<String> apiVersion() {
        return this.apiVersion;
    }
    /**
     * Permission authentication configuration See `auth_config` below.
     * 
     */
    @Export(name="authConfig", refs={V3CustomDomainAuthConfig.class}, tree="[0]")
    private Output</* @Nullable */ V3CustomDomainAuthConfig> authConfig;

    /**
     * @return Permission authentication configuration See `auth_config` below.
     * 
     */
    public Output<Optional<V3CustomDomainAuthConfig>> authConfig() {
        return Codegen.optional(this.authConfig);
    }
    /**
     * HTTPS certificate information See `cert_config` below.
     * 
     */
    @Export(name="certConfig", refs={V3CustomDomainCertConfig.class}, tree="[0]")
    private Output<V3CustomDomainCertConfig> certConfig;

    /**
     * @return HTTPS certificate information See `cert_config` below.
     * 
     */
    public Output<V3CustomDomainCertConfig> certConfig() {
        return this.certConfig;
    }
    /**
     * The creation time of the resource
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The creation time of the resource
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The name of the resource
     * 
     */
    @Export(name="customDomainName", refs={String.class}, tree="[0]")
    private Output<String> customDomainName;

    /**
     * @return The name of the resource
     * 
     */
    public Output<String> customDomainName() {
        return this.customDomainName;
    }
    /**
     * (Available since v1.234.0) The last time the custom domain name was Updated
     * 
     */
    @Export(name="lastModifiedTime", refs={String.class}, tree="[0]")
    private Output<String> lastModifiedTime;

    /**
     * @return (Available since v1.234.0) The last time the custom domain name was Updated
     * 
     */
    public Output<String> lastModifiedTime() {
        return this.lastModifiedTime;
    }
    /**
     * The protocol type supported by the domain name. HTTP: only HTTP protocol is supported. HTTPS: only HTTPS is supported. HTTP,HTTPS: Supports HTTP and HTTPS protocols.
     * 
     */
    @Export(name="protocol", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> protocol;

    /**
     * @return The protocol type supported by the domain name. HTTP: only HTTP protocol is supported. HTTPS: only HTTPS is supported. HTTP,HTTPS: Supports HTTP and HTTPS protocols.
     * 
     */
    public Output<Optional<String>> protocol() {
        return Codegen.optional(this.protocol);
    }
    /**
     * Route matching rule configuration See `route_config` below.
     * 
     */
    @Export(name="routeConfig", refs={V3CustomDomainRouteConfig.class}, tree="[0]")
    private Output</* @Nullable */ V3CustomDomainRouteConfig> routeConfig;

    /**
     * @return Route matching rule configuration See `route_config` below.
     * 
     */
    public Output<Optional<V3CustomDomainRouteConfig>> routeConfig() {
        return Codegen.optional(this.routeConfig);
    }
    /**
     * (Available since v1.234.0) Number of subdomains
     * 
     */
    @Export(name="subdomainCount", refs={String.class}, tree="[0]")
    private Output<String> subdomainCount;

    /**
     * @return (Available since v1.234.0) Number of subdomains
     * 
     */
    public Output<String> subdomainCount() {
        return this.subdomainCount;
    }
    /**
     * TLS configuration information See `tls_config` below.
     * 
     */
    @Export(name="tlsConfig", refs={V3CustomDomainTlsConfig.class}, tree="[0]")
    private Output<V3CustomDomainTlsConfig> tlsConfig;

    /**
     * @return TLS configuration information See `tls_config` below.
     * 
     */
    public Output<V3CustomDomainTlsConfig> tlsConfig() {
        return this.tlsConfig;
    }
    /**
     * Web application firewall configuration information See `waf_config` below.
     * 
     */
    @Export(name="wafConfig", refs={V3CustomDomainWafConfig.class}, tree="[0]")
    private Output</* @Nullable */ V3CustomDomainWafConfig> wafConfig;

    /**
     * @return Web application firewall configuration information See `waf_config` below.
     * 
     */
    public Output<Optional<V3CustomDomainWafConfig>> wafConfig() {
        return Codegen.optional(this.wafConfig);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public V3CustomDomain(java.lang.String name) {
        this(name, V3CustomDomainArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public V3CustomDomain(java.lang.String name, @Nullable V3CustomDomainArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public V3CustomDomain(java.lang.String name, @Nullable V3CustomDomainArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:fc/v3CustomDomain:V3CustomDomain", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private V3CustomDomain(java.lang.String name, Output<java.lang.String> id, @Nullable V3CustomDomainState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:fc/v3CustomDomain:V3CustomDomain", name, state, makeResourceOptions(options, id), false);
    }

    private static V3CustomDomainArgs makeArgs(@Nullable V3CustomDomainArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? V3CustomDomainArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static V3CustomDomain get(java.lang.String name, Output<java.lang.String> id, @Nullable V3CustomDomainState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new V3CustomDomain(name, id, state, options);
    }
}
