// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.kms.inputs;

import com.pulumi.alicloud.kms.inputs.InstanceBindVpcArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceState extends com.pulumi.resources.ResourceArgs {

    public static final InstanceState Empty = new InstanceState();

    /**
     * Aucillary VPCs used to access this KMS instance. See `bind_vpcs` below.
     * 
     */
    @Import(name="bindVpcs")
    private @Nullable Output<List<InstanceBindVpcArgs>> bindVpcs;

    /**
     * @return Aucillary VPCs used to access this KMS instance. See `bind_vpcs` below.
     * 
     */
    public Optional<Output<List<InstanceBindVpcArgs>>> bindVpcs() {
        return Optional.ofNullable(this.bindVpcs);
    }

    /**
     * KMS instance certificate chain in PEM format.
     * 
     */
    @Import(name="caCertificateChainPem")
    private @Nullable Output<String> caCertificateChainPem;

    /**
     * @return KMS instance certificate chain in PEM format.
     * 
     */
    public Optional<Output<String>> caCertificateChainPem() {
        return Optional.ofNullable(this.caCertificateChainPem);
    }

    /**
     * The creation time of the resource.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time of the resource.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The name of the resource.
     * 
     */
    @Import(name="instanceName")
    private @Nullable Output<String> instanceName;

    /**
     * @return The name of the resource.
     * 
     */
    public Optional<Output<String>> instanceName() {
        return Optional.ofNullable(this.instanceName);
    }

    /**
     * Maximum number of stored keys.
     * 
     */
    @Import(name="keyNum")
    private @Nullable Output<Integer> keyNum;

    /**
     * @return Maximum number of stored keys.
     * 
     */
    public Optional<Output<Integer>> keyNum() {
        return Optional.ofNullable(this.keyNum);
    }

    /**
     * KMS Instance commodity type (software/hardware). Currently, only version 3 is supported.
     * 
     */
    @Import(name="productVersion")
    private @Nullable Output<String> productVersion;

    /**
     * @return KMS Instance commodity type (software/hardware). Currently, only version 3 is supported.
     * 
     */
    public Optional<Output<String>> productVersion() {
        return Optional.ofNullable(this.productVersion);
    }

    /**
     * Automatic renewal period, in months.
     * 
     */
    @Import(name="renewPeriod")
    private @Nullable Output<Integer> renewPeriod;

    /**
     * @return Automatic renewal period, in months.
     * 
     */
    public Optional<Output<Integer>> renewPeriod() {
        return Optional.ofNullable(this.renewPeriod);
    }

    /**
     * Renewal options (manual renewal, automatic renewal, no renewal).
     * 
     */
    @Import(name="renewStatus")
    private @Nullable Output<String> renewStatus;

    /**
     * @return Renewal options (manual renewal, automatic renewal, no renewal).
     * 
     */
    public Optional<Output<String>> renewStatus() {
        return Optional.ofNullable(this.renewStatus);
    }

    /**
     * Maximum number of Secrets.
     * 
     */
    @Import(name="secretNum")
    private @Nullable Output<Integer> secretNum;

    /**
     * @return Maximum number of Secrets.
     * 
     */
    public Optional<Output<Integer>> secretNum() {
        return Optional.ofNullable(this.secretNum);
    }

    /**
     * The computation performance level of the KMS instance.
     * 
     */
    @Import(name="spec")
    private @Nullable Output<Integer> spec;

    /**
     * @return The computation performance level of the KMS instance.
     * 
     */
    public Optional<Output<Integer>> spec() {
        return Optional.ofNullable(this.spec);
    }

    /**
     * Instance status.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Instance status.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Instance VPC id.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return Instance VPC id.
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    /**
     * The number of managed accesses. The maximum number of VPCs that can access this KMS instance.
     * 
     */
    @Import(name="vpcNum")
    private @Nullable Output<Integer> vpcNum;

    /**
     * @return The number of managed accesses. The maximum number of VPCs that can access this KMS instance.
     * 
     */
    public Optional<Output<Integer>> vpcNum() {
        return Optional.ofNullable(this.vpcNum);
    }

    /**
     * Instance bind vswitches.
     * 
     */
    @Import(name="vswitchIds")
    private @Nullable Output<List<String>> vswitchIds;

    /**
     * @return Instance bind vswitches.
     * 
     */
    public Optional<Output<List<String>>> vswitchIds() {
        return Optional.ofNullable(this.vswitchIds);
    }

    /**
     * zone id.
     * 
     */
    @Import(name="zoneIds")
    private @Nullable Output<List<String>> zoneIds;

    /**
     * @return zone id.
     * 
     */
    public Optional<Output<List<String>>> zoneIds() {
        return Optional.ofNullable(this.zoneIds);
    }

    private InstanceState() {}

    private InstanceState(InstanceState $) {
        this.bindVpcs = $.bindVpcs;
        this.caCertificateChainPem = $.caCertificateChainPem;
        this.createTime = $.createTime;
        this.instanceName = $.instanceName;
        this.keyNum = $.keyNum;
        this.productVersion = $.productVersion;
        this.renewPeriod = $.renewPeriod;
        this.renewStatus = $.renewStatus;
        this.secretNum = $.secretNum;
        this.spec = $.spec;
        this.status = $.status;
        this.vpcId = $.vpcId;
        this.vpcNum = $.vpcNum;
        this.vswitchIds = $.vswitchIds;
        this.zoneIds = $.zoneIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceState $;

        public Builder() {
            $ = new InstanceState();
        }

        public Builder(InstanceState defaults) {
            $ = new InstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param bindVpcs Aucillary VPCs used to access this KMS instance. See `bind_vpcs` below.
         * 
         * @return builder
         * 
         */
        public Builder bindVpcs(@Nullable Output<List<InstanceBindVpcArgs>> bindVpcs) {
            $.bindVpcs = bindVpcs;
            return this;
        }

        /**
         * @param bindVpcs Aucillary VPCs used to access this KMS instance. See `bind_vpcs` below.
         * 
         * @return builder
         * 
         */
        public Builder bindVpcs(List<InstanceBindVpcArgs> bindVpcs) {
            return bindVpcs(Output.of(bindVpcs));
        }

        /**
         * @param bindVpcs Aucillary VPCs used to access this KMS instance. See `bind_vpcs` below.
         * 
         * @return builder
         * 
         */
        public Builder bindVpcs(InstanceBindVpcArgs... bindVpcs) {
            return bindVpcs(List.of(bindVpcs));
        }

        /**
         * @param caCertificateChainPem KMS instance certificate chain in PEM format.
         * 
         * @return builder
         * 
         */
        public Builder caCertificateChainPem(@Nullable Output<String> caCertificateChainPem) {
            $.caCertificateChainPem = caCertificateChainPem;
            return this;
        }

        /**
         * @param caCertificateChainPem KMS instance certificate chain in PEM format.
         * 
         * @return builder
         * 
         */
        public Builder caCertificateChainPem(String caCertificateChainPem) {
            return caCertificateChainPem(Output.of(caCertificateChainPem));
        }

        /**
         * @param createTime The creation time of the resource.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the resource.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param instanceName The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(@Nullable Output<String> instanceName) {
            $.instanceName = instanceName;
            return this;
        }

        /**
         * @param instanceName The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(String instanceName) {
            return instanceName(Output.of(instanceName));
        }

        /**
         * @param keyNum Maximum number of stored keys.
         * 
         * @return builder
         * 
         */
        public Builder keyNum(@Nullable Output<Integer> keyNum) {
            $.keyNum = keyNum;
            return this;
        }

        /**
         * @param keyNum Maximum number of stored keys.
         * 
         * @return builder
         * 
         */
        public Builder keyNum(Integer keyNum) {
            return keyNum(Output.of(keyNum));
        }

        /**
         * @param productVersion KMS Instance commodity type (software/hardware). Currently, only version 3 is supported.
         * 
         * @return builder
         * 
         */
        public Builder productVersion(@Nullable Output<String> productVersion) {
            $.productVersion = productVersion;
            return this;
        }

        /**
         * @param productVersion KMS Instance commodity type (software/hardware). Currently, only version 3 is supported.
         * 
         * @return builder
         * 
         */
        public Builder productVersion(String productVersion) {
            return productVersion(Output.of(productVersion));
        }

        /**
         * @param renewPeriod Automatic renewal period, in months.
         * 
         * @return builder
         * 
         */
        public Builder renewPeriod(@Nullable Output<Integer> renewPeriod) {
            $.renewPeriod = renewPeriod;
            return this;
        }

        /**
         * @param renewPeriod Automatic renewal period, in months.
         * 
         * @return builder
         * 
         */
        public Builder renewPeriod(Integer renewPeriod) {
            return renewPeriod(Output.of(renewPeriod));
        }

        /**
         * @param renewStatus Renewal options (manual renewal, automatic renewal, no renewal).
         * 
         * @return builder
         * 
         */
        public Builder renewStatus(@Nullable Output<String> renewStatus) {
            $.renewStatus = renewStatus;
            return this;
        }

        /**
         * @param renewStatus Renewal options (manual renewal, automatic renewal, no renewal).
         * 
         * @return builder
         * 
         */
        public Builder renewStatus(String renewStatus) {
            return renewStatus(Output.of(renewStatus));
        }

        /**
         * @param secretNum Maximum number of Secrets.
         * 
         * @return builder
         * 
         */
        public Builder secretNum(@Nullable Output<Integer> secretNum) {
            $.secretNum = secretNum;
            return this;
        }

        /**
         * @param secretNum Maximum number of Secrets.
         * 
         * @return builder
         * 
         */
        public Builder secretNum(Integer secretNum) {
            return secretNum(Output.of(secretNum));
        }

        /**
         * @param spec The computation performance level of the KMS instance.
         * 
         * @return builder
         * 
         */
        public Builder spec(@Nullable Output<Integer> spec) {
            $.spec = spec;
            return this;
        }

        /**
         * @param spec The computation performance level of the KMS instance.
         * 
         * @return builder
         * 
         */
        public Builder spec(Integer spec) {
            return spec(Output.of(spec));
        }

        /**
         * @param status Instance status.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Instance status.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param vpcId Instance VPC id.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId Instance VPC id.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param vpcNum The number of managed accesses. The maximum number of VPCs that can access this KMS instance.
         * 
         * @return builder
         * 
         */
        public Builder vpcNum(@Nullable Output<Integer> vpcNum) {
            $.vpcNum = vpcNum;
            return this;
        }

        /**
         * @param vpcNum The number of managed accesses. The maximum number of VPCs that can access this KMS instance.
         * 
         * @return builder
         * 
         */
        public Builder vpcNum(Integer vpcNum) {
            return vpcNum(Output.of(vpcNum));
        }

        /**
         * @param vswitchIds Instance bind vswitches.
         * 
         * @return builder
         * 
         */
        public Builder vswitchIds(@Nullable Output<List<String>> vswitchIds) {
            $.vswitchIds = vswitchIds;
            return this;
        }

        /**
         * @param vswitchIds Instance bind vswitches.
         * 
         * @return builder
         * 
         */
        public Builder vswitchIds(List<String> vswitchIds) {
            return vswitchIds(Output.of(vswitchIds));
        }

        /**
         * @param vswitchIds Instance bind vswitches.
         * 
         * @return builder
         * 
         */
        public Builder vswitchIds(String... vswitchIds) {
            return vswitchIds(List.of(vswitchIds));
        }

        /**
         * @param zoneIds zone id.
         * 
         * @return builder
         * 
         */
        public Builder zoneIds(@Nullable Output<List<String>> zoneIds) {
            $.zoneIds = zoneIds;
            return this;
        }

        /**
         * @param zoneIds zone id.
         * 
         * @return builder
         * 
         */
        public Builder zoneIds(List<String> zoneIds) {
            return zoneIds(Output.of(zoneIds));
        }

        /**
         * @param zoneIds zone id.
         * 
         * @return builder
         * 
         */
        public Builder zoneIds(String... zoneIds) {
            return zoneIds(List.of(zoneIds));
        }

        public InstanceState build() {
            return $;
        }
    }

}
