// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.arms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class SyntheticTaskMonitor {
    /**
     * @return The city code of monitor.
     * 
     */
    private String cityCode;
    /**
     * @return The type of monitor.
     * 
     */
    private Integer clientType;
    /**
     * @return The operator code of monitor.
     * 
     */
    private String operatorCode;

    private SyntheticTaskMonitor() {}
    /**
     * @return The city code of monitor.
     * 
     */
    public String cityCode() {
        return this.cityCode;
    }
    /**
     * @return The type of monitor.
     * 
     */
    public Integer clientType() {
        return this.clientType;
    }
    /**
     * @return The operator code of monitor.
     * 
     */
    public String operatorCode() {
        return this.operatorCode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SyntheticTaskMonitor defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cityCode;
        private Integer clientType;
        private String operatorCode;
        public Builder() {}
        public Builder(SyntheticTaskMonitor defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cityCode = defaults.cityCode;
    	      this.clientType = defaults.clientType;
    	      this.operatorCode = defaults.operatorCode;
        }

        @CustomType.Setter
        public Builder cityCode(String cityCode) {
            if (cityCode == null) {
              throw new MissingRequiredPropertyException("SyntheticTaskMonitor", "cityCode");
            }
            this.cityCode = cityCode;
            return this;
        }
        @CustomType.Setter
        public Builder clientType(Integer clientType) {
            if (clientType == null) {
              throw new MissingRequiredPropertyException("SyntheticTaskMonitor", "clientType");
            }
            this.clientType = clientType;
            return this;
        }
        @CustomType.Setter
        public Builder operatorCode(String operatorCode) {
            if (operatorCode == null) {
              throw new MissingRequiredPropertyException("SyntheticTaskMonitor", "operatorCode");
            }
            this.operatorCode = operatorCode;
            return this;
        }
        public SyntheticTaskMonitor build() {
            final var _resultValue = new SyntheticTaskMonitor();
            _resultValue.cityCode = cityCode;
            _resultValue.clientType = clientType;
            _resultValue.operatorCode = operatorCode;
            return _resultValue;
        }
    }
}
