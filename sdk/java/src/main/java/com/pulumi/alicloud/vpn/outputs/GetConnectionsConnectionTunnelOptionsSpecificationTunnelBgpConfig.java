// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpn.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig {
    private String bgpStatus;
    /**
     * @return Local asn.
     * 
     */
    private String localAsn;
    /**
     * @return Local bgp IP.
     * 
     */
    private String localBgpIp;
    /**
     * @return The counterpart autonomous system number.
     * 
     */
    private String peerAsn;
    /**
     * @return The BGP address on the other side.
     * 
     */
    private String peerBgpIp;
    /**
     * @return BGP Tunnel CIDR.
     * 
     */
    private String tunnelCidr;

    private GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig() {}
    public String bgpStatus() {
        return this.bgpStatus;
    }
    /**
     * @return Local asn.
     * 
     */
    public String localAsn() {
        return this.localAsn;
    }
    /**
     * @return Local bgp IP.
     * 
     */
    public String localBgpIp() {
        return this.localBgpIp;
    }
    /**
     * @return The counterpart autonomous system number.
     * 
     */
    public String peerAsn() {
        return this.peerAsn;
    }
    /**
     * @return The BGP address on the other side.
     * 
     */
    public String peerBgpIp() {
        return this.peerBgpIp;
    }
    /**
     * @return BGP Tunnel CIDR.
     * 
     */
    public String tunnelCidr() {
        return this.tunnelCidr;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bgpStatus;
        private String localAsn;
        private String localBgpIp;
        private String peerAsn;
        private String peerBgpIp;
        private String tunnelCidr;
        public Builder() {}
        public Builder(GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bgpStatus = defaults.bgpStatus;
    	      this.localAsn = defaults.localAsn;
    	      this.localBgpIp = defaults.localBgpIp;
    	      this.peerAsn = defaults.peerAsn;
    	      this.peerBgpIp = defaults.peerBgpIp;
    	      this.tunnelCidr = defaults.tunnelCidr;
        }

        @CustomType.Setter
        public Builder bgpStatus(String bgpStatus) {
            if (bgpStatus == null) {
              throw new MissingRequiredPropertyException("GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig", "bgpStatus");
            }
            this.bgpStatus = bgpStatus;
            return this;
        }
        @CustomType.Setter
        public Builder localAsn(String localAsn) {
            if (localAsn == null) {
              throw new MissingRequiredPropertyException("GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig", "localAsn");
            }
            this.localAsn = localAsn;
            return this;
        }
        @CustomType.Setter
        public Builder localBgpIp(String localBgpIp) {
            if (localBgpIp == null) {
              throw new MissingRequiredPropertyException("GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig", "localBgpIp");
            }
            this.localBgpIp = localBgpIp;
            return this;
        }
        @CustomType.Setter
        public Builder peerAsn(String peerAsn) {
            if (peerAsn == null) {
              throw new MissingRequiredPropertyException("GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig", "peerAsn");
            }
            this.peerAsn = peerAsn;
            return this;
        }
        @CustomType.Setter
        public Builder peerBgpIp(String peerBgpIp) {
            if (peerBgpIp == null) {
              throw new MissingRequiredPropertyException("GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig", "peerBgpIp");
            }
            this.peerBgpIp = peerBgpIp;
            return this;
        }
        @CustomType.Setter
        public Builder tunnelCidr(String tunnelCidr) {
            if (tunnelCidr == null) {
              throw new MissingRequiredPropertyException("GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig", "tunnelCidr");
            }
            this.tunnelCidr = tunnelCidr;
            return this;
        }
        public GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig build() {
            final var _resultValue = new GetConnectionsConnectionTunnelOptionsSpecificationTunnelBgpConfig();
            _resultValue.bgpStatus = bgpStatus;
            _resultValue.localAsn = localAsn;
            _resultValue.localBgpIp = localBgpIp;
            _resultValue.peerAsn = peerAsn;
            _resultValue.peerBgpIp = peerBgpIp;
            _resultValue.tunnelCidr = tunnelCidr;
            return _resultValue;
        }
    }
}
