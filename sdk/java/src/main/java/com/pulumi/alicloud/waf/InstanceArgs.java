// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.waf;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceArgs Empty = new InstanceArgs();

    /**
     * Specify whether big screen is supported. Valid values: [&#34;0&#34;, &#34;1&#34;]. &#34;0&#34; for false and &#34;1&#34; for true.
     * 
     */
    @Import(name="bigScreen", required=true)
    private Output<String> bigScreen;

    /**
     * @return Specify whether big screen is supported. Valid values: [&#34;0&#34;, &#34;1&#34;]. &#34;0&#34; for false and &#34;1&#34; for true.
     * 
     */
    public Output<String> bigScreen() {
        return this.bigScreen;
    }

    /**
     * Specify the number of exclusive WAF IP addresses.
     * 
     */
    @Import(name="exclusiveIpPackage", required=true)
    private Output<String> exclusiveIpPackage;

    /**
     * @return Specify the number of exclusive WAF IP addresses.
     * 
     */
    public Output<String> exclusiveIpPackage() {
        return this.exclusiveIpPackage;
    }

    /**
     * The extra bandwidth. Unit: Mbit/s.
     * 
     */
    @Import(name="extBandwidth", required=true)
    private Output<String> extBandwidth;

    /**
     * @return The extra bandwidth. Unit: Mbit/s.
     * 
     */
    public Output<String> extBandwidth() {
        return this.extBandwidth;
    }

    /**
     * The number of extra domains.
     * 
     */
    @Import(name="extDomainPackage", required=true)
    private Output<String> extDomainPackage;

    /**
     * @return The number of extra domains.
     * 
     */
    public Output<String> extDomainPackage() {
        return this.extDomainPackage;
    }

    /**
     * Log storage size. Unit: T. Valid values: [3, 5, 10, 20, 50].
     * 
     */
    @Import(name="logStorage", required=true)
    private Output<String> logStorage;

    /**
     * @return Log storage size. Unit: T. Valid values: [3, 5, 10, 20, 50].
     * 
     */
    public Output<String> logStorage() {
        return this.logStorage;
    }

    /**
     * Log storage period. Unit: day. Valid values: [180, 360].
     * 
     */
    @Import(name="logTime", required=true)
    private Output<String> logTime;

    /**
     * @return Log storage period. Unit: day. Valid values: [180, 360].
     * 
     */
    public Output<String> logTime() {
        return this.logTime;
    }

    /**
     * Type of configuration change. Valid value: Upgrade.
     * 
     */
    @Import(name="modifyType")
    private @Nullable Output<String> modifyType;

    /**
     * @return Type of configuration change. Valid value: Upgrade.
     * 
     */
    public Optional<Output<String>> modifyType() {
        return Optional.ofNullable(this.modifyType);
    }

    /**
     * Subscription plan:
     * * China site customers can purchase the following versions of China Mainland region, valid values: [&#34;version_3&#34;, &#34;version_4&#34;, &#34;version_5&#34;].
     * * China site customers can purchase the following versions of International region, valid values: [&#34;version_pro_asia&#34;, &#34;version_business_asia&#34;, &#34;version_enterprise_asia&#34;]
     * * International site customers can purchase the following versions of China Mainland region: [&#34;version_pro_china&#34;, &#34;version_business_china&#34;, &#34;version_enterprise_china&#34;]
     * * International site customers can purchase the following versions of International region: [&#34;version_pro&#34;, &#34;version_business&#34;, &#34;version_enterprise&#34;].
     * 
     */
    @Import(name="packageCode", required=true)
    private Output<String> packageCode;

    /**
     * @return Subscription plan:
     * * China site customers can purchase the following versions of China Mainland region, valid values: [&#34;version_3&#34;, &#34;version_4&#34;, &#34;version_5&#34;].
     * * China site customers can purchase the following versions of International region, valid values: [&#34;version_pro_asia&#34;, &#34;version_business_asia&#34;, &#34;version_enterprise_asia&#34;]
     * * International site customers can purchase the following versions of China Mainland region: [&#34;version_pro_china&#34;, &#34;version_business_china&#34;, &#34;version_enterprise_china&#34;]
     * * International site customers can purchase the following versions of International region: [&#34;version_pro&#34;, &#34;version_business&#34;, &#34;version_enterprise&#34;].
     * 
     */
    public Output<String> packageCode() {
        return this.packageCode;
    }

    /**
     * Service time of Web Application Firewall.
     * 
     */
    @Import(name="period")
    private @Nullable Output<Integer> period;

    /**
     * @return Service time of Web Application Firewall.
     * 
     */
    public Optional<Output<Integer>> period() {
        return Optional.ofNullable(this.period);
    }

    /**
     * Specify whether professional service is supported. Valid values: [&#34;true&#34;, &#34;false&#34;]
     * 
     */
    @Import(name="prefessionalService", required=true)
    private Output<String> prefessionalService;

    /**
     * @return Specify whether professional service is supported. Valid values: [&#34;true&#34;, &#34;false&#34;]
     * 
     */
    public Output<String> prefessionalService() {
        return this.prefessionalService;
    }

    /**
     * The instance region ID.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The instance region ID.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Renewal period of WAF service. Unit: month
     * 
     */
    @Import(name="renewPeriod")
    private @Nullable Output<Integer> renewPeriod;

    /**
     * @return Renewal period of WAF service. Unit: month
     * 
     */
    public Optional<Output<Integer>> renewPeriod() {
        return Optional.ofNullable(this.renewPeriod);
    }

    /**
     * Renewal status of WAF service. Valid values:
     * * AutoRenewal: The service time of WAF is renewed automatically.
     * * ManualRenewal (default): The service time of WAF is renewed manually.Specifies whether to configure a Layer-7 proxy, such as Anti-DDoS Pro or CDN, to filter the inbound traffic before it is forwarded to WAF. Valid values: &#34;On&#34; and &#34;Off&#34;. Default to &#34;Off&#34;.
     * 
     */
    @Import(name="renewalStatus")
    private @Nullable Output<String> renewalStatus;

    /**
     * @return Renewal status of WAF service. Valid values:
     * * AutoRenewal: The service time of WAF is renewed automatically.
     * * ManualRenewal (default): The service time of WAF is renewed manually.Specifies whether to configure a Layer-7 proxy, such as Anti-DDoS Pro or CDN, to filter the inbound traffic before it is forwarded to WAF. Valid values: &#34;On&#34; and &#34;Off&#34;. Default to &#34;Off&#34;.
     * 
     */
    public Optional<Output<String>> renewalStatus() {
        return Optional.ofNullable(this.renewalStatus);
    }

    /**
     * The resource group ID.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The resource group ID.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * Subscription of WAF service. Valid values: [&#34;Subscription&#34;, &#34;PayAsYouGo&#34;].
     * 
     */
    @Import(name="subscriptionType", required=true)
    private Output<String> subscriptionType;

    /**
     * @return Subscription of WAF service. Valid values: [&#34;Subscription&#34;, &#34;PayAsYouGo&#34;].
     * 
     */
    public Output<String> subscriptionType() {
        return this.subscriptionType;
    }

    /**
     * Specify whether Log service is supported. Valid values: [&#34;true&#34;, &#34;false&#34;]
     * 
     */
    @Import(name="wafLog", required=true)
    private Output<String> wafLog;

    /**
     * @return Specify whether Log service is supported. Valid values: [&#34;true&#34;, &#34;false&#34;]
     * 
     */
    public Output<String> wafLog() {
        return this.wafLog;
    }

    private InstanceArgs() {}

    private InstanceArgs(InstanceArgs $) {
        this.bigScreen = $.bigScreen;
        this.exclusiveIpPackage = $.exclusiveIpPackage;
        this.extBandwidth = $.extBandwidth;
        this.extDomainPackage = $.extDomainPackage;
        this.logStorage = $.logStorage;
        this.logTime = $.logTime;
        this.modifyType = $.modifyType;
        this.packageCode = $.packageCode;
        this.period = $.period;
        this.prefessionalService = $.prefessionalService;
        this.region = $.region;
        this.renewPeriod = $.renewPeriod;
        this.renewalStatus = $.renewalStatus;
        this.resourceGroupId = $.resourceGroupId;
        this.subscriptionType = $.subscriptionType;
        this.wafLog = $.wafLog;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceArgs $;

        public Builder() {
            $ = new InstanceArgs();
        }

        public Builder(InstanceArgs defaults) {
            $ = new InstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bigScreen Specify whether big screen is supported. Valid values: [&#34;0&#34;, &#34;1&#34;]. &#34;0&#34; for false and &#34;1&#34; for true.
         * 
         * @return builder
         * 
         */
        public Builder bigScreen(Output<String> bigScreen) {
            $.bigScreen = bigScreen;
            return this;
        }

        /**
         * @param bigScreen Specify whether big screen is supported. Valid values: [&#34;0&#34;, &#34;1&#34;]. &#34;0&#34; for false and &#34;1&#34; for true.
         * 
         * @return builder
         * 
         */
        public Builder bigScreen(String bigScreen) {
            return bigScreen(Output.of(bigScreen));
        }

        /**
         * @param exclusiveIpPackage Specify the number of exclusive WAF IP addresses.
         * 
         * @return builder
         * 
         */
        public Builder exclusiveIpPackage(Output<String> exclusiveIpPackage) {
            $.exclusiveIpPackage = exclusiveIpPackage;
            return this;
        }

        /**
         * @param exclusiveIpPackage Specify the number of exclusive WAF IP addresses.
         * 
         * @return builder
         * 
         */
        public Builder exclusiveIpPackage(String exclusiveIpPackage) {
            return exclusiveIpPackage(Output.of(exclusiveIpPackage));
        }

        /**
         * @param extBandwidth The extra bandwidth. Unit: Mbit/s.
         * 
         * @return builder
         * 
         */
        public Builder extBandwidth(Output<String> extBandwidth) {
            $.extBandwidth = extBandwidth;
            return this;
        }

        /**
         * @param extBandwidth The extra bandwidth. Unit: Mbit/s.
         * 
         * @return builder
         * 
         */
        public Builder extBandwidth(String extBandwidth) {
            return extBandwidth(Output.of(extBandwidth));
        }

        /**
         * @param extDomainPackage The number of extra domains.
         * 
         * @return builder
         * 
         */
        public Builder extDomainPackage(Output<String> extDomainPackage) {
            $.extDomainPackage = extDomainPackage;
            return this;
        }

        /**
         * @param extDomainPackage The number of extra domains.
         * 
         * @return builder
         * 
         */
        public Builder extDomainPackage(String extDomainPackage) {
            return extDomainPackage(Output.of(extDomainPackage));
        }

        /**
         * @param logStorage Log storage size. Unit: T. Valid values: [3, 5, 10, 20, 50].
         * 
         * @return builder
         * 
         */
        public Builder logStorage(Output<String> logStorage) {
            $.logStorage = logStorage;
            return this;
        }

        /**
         * @param logStorage Log storage size. Unit: T. Valid values: [3, 5, 10, 20, 50].
         * 
         * @return builder
         * 
         */
        public Builder logStorage(String logStorage) {
            return logStorage(Output.of(logStorage));
        }

        /**
         * @param logTime Log storage period. Unit: day. Valid values: [180, 360].
         * 
         * @return builder
         * 
         */
        public Builder logTime(Output<String> logTime) {
            $.logTime = logTime;
            return this;
        }

        /**
         * @param logTime Log storage period. Unit: day. Valid values: [180, 360].
         * 
         * @return builder
         * 
         */
        public Builder logTime(String logTime) {
            return logTime(Output.of(logTime));
        }

        /**
         * @param modifyType Type of configuration change. Valid value: Upgrade.
         * 
         * @return builder
         * 
         */
        public Builder modifyType(@Nullable Output<String> modifyType) {
            $.modifyType = modifyType;
            return this;
        }

        /**
         * @param modifyType Type of configuration change. Valid value: Upgrade.
         * 
         * @return builder
         * 
         */
        public Builder modifyType(String modifyType) {
            return modifyType(Output.of(modifyType));
        }

        /**
         * @param packageCode Subscription plan:
         * * China site customers can purchase the following versions of China Mainland region, valid values: [&#34;version_3&#34;, &#34;version_4&#34;, &#34;version_5&#34;].
         * * China site customers can purchase the following versions of International region, valid values: [&#34;version_pro_asia&#34;, &#34;version_business_asia&#34;, &#34;version_enterprise_asia&#34;]
         * * International site customers can purchase the following versions of China Mainland region: [&#34;version_pro_china&#34;, &#34;version_business_china&#34;, &#34;version_enterprise_china&#34;]
         * * International site customers can purchase the following versions of International region: [&#34;version_pro&#34;, &#34;version_business&#34;, &#34;version_enterprise&#34;].
         * 
         * @return builder
         * 
         */
        public Builder packageCode(Output<String> packageCode) {
            $.packageCode = packageCode;
            return this;
        }

        /**
         * @param packageCode Subscription plan:
         * * China site customers can purchase the following versions of China Mainland region, valid values: [&#34;version_3&#34;, &#34;version_4&#34;, &#34;version_5&#34;].
         * * China site customers can purchase the following versions of International region, valid values: [&#34;version_pro_asia&#34;, &#34;version_business_asia&#34;, &#34;version_enterprise_asia&#34;]
         * * International site customers can purchase the following versions of China Mainland region: [&#34;version_pro_china&#34;, &#34;version_business_china&#34;, &#34;version_enterprise_china&#34;]
         * * International site customers can purchase the following versions of International region: [&#34;version_pro&#34;, &#34;version_business&#34;, &#34;version_enterprise&#34;].
         * 
         * @return builder
         * 
         */
        public Builder packageCode(String packageCode) {
            return packageCode(Output.of(packageCode));
        }

        /**
         * @param period Service time of Web Application Firewall.
         * 
         * @return builder
         * 
         */
        public Builder period(@Nullable Output<Integer> period) {
            $.period = period;
            return this;
        }

        /**
         * @param period Service time of Web Application Firewall.
         * 
         * @return builder
         * 
         */
        public Builder period(Integer period) {
            return period(Output.of(period));
        }

        /**
         * @param prefessionalService Specify whether professional service is supported. Valid values: [&#34;true&#34;, &#34;false&#34;]
         * 
         * @return builder
         * 
         */
        public Builder prefessionalService(Output<String> prefessionalService) {
            $.prefessionalService = prefessionalService;
            return this;
        }

        /**
         * @param prefessionalService Specify whether professional service is supported. Valid values: [&#34;true&#34;, &#34;false&#34;]
         * 
         * @return builder
         * 
         */
        public Builder prefessionalService(String prefessionalService) {
            return prefessionalService(Output.of(prefessionalService));
        }

        /**
         * @param region The instance region ID.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The instance region ID.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param renewPeriod Renewal period of WAF service. Unit: month
         * 
         * @return builder
         * 
         */
        public Builder renewPeriod(@Nullable Output<Integer> renewPeriod) {
            $.renewPeriod = renewPeriod;
            return this;
        }

        /**
         * @param renewPeriod Renewal period of WAF service. Unit: month
         * 
         * @return builder
         * 
         */
        public Builder renewPeriod(Integer renewPeriod) {
            return renewPeriod(Output.of(renewPeriod));
        }

        /**
         * @param renewalStatus Renewal status of WAF service. Valid values:
         * * AutoRenewal: The service time of WAF is renewed automatically.
         * * ManualRenewal (default): The service time of WAF is renewed manually.Specifies whether to configure a Layer-7 proxy, such as Anti-DDoS Pro or CDN, to filter the inbound traffic before it is forwarded to WAF. Valid values: &#34;On&#34; and &#34;Off&#34;. Default to &#34;Off&#34;.
         * 
         * @return builder
         * 
         */
        public Builder renewalStatus(@Nullable Output<String> renewalStatus) {
            $.renewalStatus = renewalStatus;
            return this;
        }

        /**
         * @param renewalStatus Renewal status of WAF service. Valid values:
         * * AutoRenewal: The service time of WAF is renewed automatically.
         * * ManualRenewal (default): The service time of WAF is renewed manually.Specifies whether to configure a Layer-7 proxy, such as Anti-DDoS Pro or CDN, to filter the inbound traffic before it is forwarded to WAF. Valid values: &#34;On&#34; and &#34;Off&#34;. Default to &#34;Off&#34;.
         * 
         * @return builder
         * 
         */
        public Builder renewalStatus(String renewalStatus) {
            return renewalStatus(Output.of(renewalStatus));
        }

        /**
         * @param resourceGroupId The resource group ID.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The resource group ID.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param subscriptionType Subscription of WAF service. Valid values: [&#34;Subscription&#34;, &#34;PayAsYouGo&#34;].
         * 
         * @return builder
         * 
         */
        public Builder subscriptionType(Output<String> subscriptionType) {
            $.subscriptionType = subscriptionType;
            return this;
        }

        /**
         * @param subscriptionType Subscription of WAF service. Valid values: [&#34;Subscription&#34;, &#34;PayAsYouGo&#34;].
         * 
         * @return builder
         * 
         */
        public Builder subscriptionType(String subscriptionType) {
            return subscriptionType(Output.of(subscriptionType));
        }

        /**
         * @param wafLog Specify whether Log service is supported. Valid values: [&#34;true&#34;, &#34;false&#34;]
         * 
         * @return builder
         * 
         */
        public Builder wafLog(Output<String> wafLog) {
            $.wafLog = wafLog;
            return this;
        }

        /**
         * @param wafLog Specify whether Log service is supported. Valid values: [&#34;true&#34;, &#34;false&#34;]
         * 
         * @return builder
         * 
         */
        public Builder wafLog(String wafLog) {
            return wafLog(Output.of(wafLog));
        }

        public InstanceArgs build() {
            if ($.bigScreen == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "bigScreen");
            }
            if ($.exclusiveIpPackage == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "exclusiveIpPackage");
            }
            if ($.extBandwidth == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "extBandwidth");
            }
            if ($.extDomainPackage == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "extDomainPackage");
            }
            if ($.logStorage == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "logStorage");
            }
            if ($.logTime == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "logTime");
            }
            if ($.packageCode == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "packageCode");
            }
            if ($.prefessionalService == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "prefessionalService");
            }
            if ($.subscriptionType == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "subscriptionType");
            }
            if ($.wafLog == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "wafLog");
            }
            return $;
        }
    }

}
