// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.inputs;

import com.pulumi.alicloud.esa.inputs.WafRuleConfigRateLimitCharacteristicsArgs;
import com.pulumi.alicloud.esa.inputs.WafRuleConfigRateLimitThresholdArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WafRuleConfigRateLimitArgs extends com.pulumi.resources.ResourceArgs {

    public static final WafRuleConfigRateLimitArgs Empty = new WafRuleConfigRateLimitArgs();

    /**
     * The statistical dimensions to which the rate limiting rule applies. See `characteristics` below.
     * 
     */
    @Import(name="characteristics")
    private @Nullable Output<WafRuleConfigRateLimitCharacteristicsArgs> characteristics;

    /**
     * @return The statistical dimensions to which the rate limiting rule applies. See `characteristics` below.
     * 
     */
    public Optional<Output<WafRuleConfigRateLimitCharacteristicsArgs>> characteristics() {
        return Optional.ofNullable(this.characteristics);
    }

    /**
     * The statistical interval.
     * 
     */
    @Import(name="interval")
    private @Nullable Output<Integer> interval;

    /**
     * @return The statistical interval.
     * 
     */
    public Optional<Output<Integer>> interval() {
        return Optional.ofNullable(this.interval);
    }

    /**
     * Indicates whether the rule applies to requests that hit the cache.
     * 
     */
    @Import(name="onHit")
    private @Nullable Output<Boolean> onHit;

    /**
     * @return Indicates whether the rule applies to requests that hit the cache.
     * 
     */
    public Optional<Output<Boolean>> onHit() {
        return Optional.ofNullable(this.onHit);
    }

    /**
     * Threshold settings for the rate limiting rule. See `threshold` below.
     * 
     */
    @Import(name="threshold")
    private @Nullable Output<WafRuleConfigRateLimitThresholdArgs> threshold;

    /**
     * @return Threshold settings for the rate limiting rule. See `threshold` below.
     * 
     */
    public Optional<Output<WafRuleConfigRateLimitThresholdArgs>> threshold() {
        return Optional.ofNullable(this.threshold);
    }

    /**
     * The timeout period for creating the stack used in rate limiting.
     * 
     */
    @Import(name="ttl")
    private @Nullable Output<Integer> ttl;

    /**
     * @return The timeout period for creating the stack used in rate limiting.
     * 
     */
    public Optional<Output<Integer>> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    private WafRuleConfigRateLimitArgs() {}

    private WafRuleConfigRateLimitArgs(WafRuleConfigRateLimitArgs $) {
        this.characteristics = $.characteristics;
        this.interval = $.interval;
        this.onHit = $.onHit;
        this.threshold = $.threshold;
        this.ttl = $.ttl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WafRuleConfigRateLimitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WafRuleConfigRateLimitArgs $;

        public Builder() {
            $ = new WafRuleConfigRateLimitArgs();
        }

        public Builder(WafRuleConfigRateLimitArgs defaults) {
            $ = new WafRuleConfigRateLimitArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param characteristics The statistical dimensions to which the rate limiting rule applies. See `characteristics` below.
         * 
         * @return builder
         * 
         */
        public Builder characteristics(@Nullable Output<WafRuleConfigRateLimitCharacteristicsArgs> characteristics) {
            $.characteristics = characteristics;
            return this;
        }

        /**
         * @param characteristics The statistical dimensions to which the rate limiting rule applies. See `characteristics` below.
         * 
         * @return builder
         * 
         */
        public Builder characteristics(WafRuleConfigRateLimitCharacteristicsArgs characteristics) {
            return characteristics(Output.of(characteristics));
        }

        /**
         * @param interval The statistical interval.
         * 
         * @return builder
         * 
         */
        public Builder interval(@Nullable Output<Integer> interval) {
            $.interval = interval;
            return this;
        }

        /**
         * @param interval The statistical interval.
         * 
         * @return builder
         * 
         */
        public Builder interval(Integer interval) {
            return interval(Output.of(interval));
        }

        /**
         * @param onHit Indicates whether the rule applies to requests that hit the cache.
         * 
         * @return builder
         * 
         */
        public Builder onHit(@Nullable Output<Boolean> onHit) {
            $.onHit = onHit;
            return this;
        }

        /**
         * @param onHit Indicates whether the rule applies to requests that hit the cache.
         * 
         * @return builder
         * 
         */
        public Builder onHit(Boolean onHit) {
            return onHit(Output.of(onHit));
        }

        /**
         * @param threshold Threshold settings for the rate limiting rule. See `threshold` below.
         * 
         * @return builder
         * 
         */
        public Builder threshold(@Nullable Output<WafRuleConfigRateLimitThresholdArgs> threshold) {
            $.threshold = threshold;
            return this;
        }

        /**
         * @param threshold Threshold settings for the rate limiting rule. See `threshold` below.
         * 
         * @return builder
         * 
         */
        public Builder threshold(WafRuleConfigRateLimitThresholdArgs threshold) {
            return threshold(Output.of(threshold));
        }

        /**
         * @param ttl The timeout period for creating the stack used in rate limiting.
         * 
         * @return builder
         * 
         */
        public Builder ttl(@Nullable Output<Integer> ttl) {
            $.ttl = ttl;
            return this;
        }

        /**
         * @param ttl The timeout period for creating the stack used in rate limiting.
         * 
         * @return builder
         * 
         */
        public Builder ttl(Integer ttl) {
            return ttl(Output.of(ttl));
        }

        public WafRuleConfigRateLimitArgs build() {
            return $;
        }
    }

}
