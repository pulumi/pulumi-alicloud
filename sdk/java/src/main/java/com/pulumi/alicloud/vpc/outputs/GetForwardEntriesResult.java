// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.outputs;

import com.pulumi.alicloud.vpc.outputs.GetForwardEntriesEntry;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetForwardEntriesResult {
    /**
     * @return A list of Forward Entries. Each element contains the following attributes:
     * 
     */
    private List<GetForwardEntriesEntry> entries;
    /**
     * @return The public IP address.
     * 
     */
    private @Nullable String externalIp;
    /**
     * @return The public port.
     * 
     */
    private @Nullable String externalPort;
    /**
     * @return The name of forward entry.
     * 
     */
    private @Nullable String forwardEntryName;
    private String forwardTableId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of Forward Entries IDs.
     * 
     */
    private List<String> ids;
    /**
     * @return The private IP address.
     * 
     */
    private @Nullable String internalIp;
    /**
     * @return The private port.
     * 
     */
    private @Nullable String internalPort;
    /**
     * @return The protocol type.
     * 
     */
    private @Nullable String ipProtocol;
    private @Nullable String nameRegex;
    /**
     * @return A list of Forward Entries names.
     * 
     */
    private List<String> names;
    private @Nullable String outputFile;
    /**
     * @return The status of forward entry.
     * 
     */
    private @Nullable String status;

    private GetForwardEntriesResult() {}
    /**
     * @return A list of Forward Entries. Each element contains the following attributes:
     * 
     */
    public List<GetForwardEntriesEntry> entries() {
        return this.entries;
    }
    /**
     * @return The public IP address.
     * 
     */
    public Optional<String> externalIp() {
        return Optional.ofNullable(this.externalIp);
    }
    /**
     * @return The public port.
     * 
     */
    public Optional<String> externalPort() {
        return Optional.ofNullable(this.externalPort);
    }
    /**
     * @return The name of forward entry.
     * 
     */
    public Optional<String> forwardEntryName() {
        return Optional.ofNullable(this.forwardEntryName);
    }
    public String forwardTableId() {
        return this.forwardTableId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of Forward Entries IDs.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    /**
     * @return The private IP address.
     * 
     */
    public Optional<String> internalIp() {
        return Optional.ofNullable(this.internalIp);
    }
    /**
     * @return The private port.
     * 
     */
    public Optional<String> internalPort() {
        return Optional.ofNullable(this.internalPort);
    }
    /**
     * @return The protocol type.
     * 
     */
    public Optional<String> ipProtocol() {
        return Optional.ofNullable(this.ipProtocol);
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    /**
     * @return A list of Forward Entries names.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return The status of forward entry.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetForwardEntriesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetForwardEntriesEntry> entries;
        private @Nullable String externalIp;
        private @Nullable String externalPort;
        private @Nullable String forwardEntryName;
        private String forwardTableId;
        private String id;
        private List<String> ids;
        private @Nullable String internalIp;
        private @Nullable String internalPort;
        private @Nullable String ipProtocol;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String outputFile;
        private @Nullable String status;
        public Builder() {}
        public Builder(GetForwardEntriesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.entries = defaults.entries;
    	      this.externalIp = defaults.externalIp;
    	      this.externalPort = defaults.externalPort;
    	      this.forwardEntryName = defaults.forwardEntryName;
    	      this.forwardTableId = defaults.forwardTableId;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.internalIp = defaults.internalIp;
    	      this.internalPort = defaults.internalPort;
    	      this.ipProtocol = defaults.ipProtocol;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.outputFile = defaults.outputFile;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder entries(List<GetForwardEntriesEntry> entries) {
            this.entries = Objects.requireNonNull(entries);
            return this;
        }
        public Builder entries(GetForwardEntriesEntry... entries) {
            return entries(List.of(entries));
        }
        @CustomType.Setter
        public Builder externalIp(@Nullable String externalIp) {
            this.externalIp = externalIp;
            return this;
        }
        @CustomType.Setter
        public Builder externalPort(@Nullable String externalPort) {
            this.externalPort = externalPort;
            return this;
        }
        @CustomType.Setter
        public Builder forwardEntryName(@Nullable String forwardEntryName) {
            this.forwardEntryName = forwardEntryName;
            return this;
        }
        @CustomType.Setter
        public Builder forwardTableId(String forwardTableId) {
            this.forwardTableId = Objects.requireNonNull(forwardTableId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder internalIp(@Nullable String internalIp) {
            this.internalIp = internalIp;
            return this;
        }
        @CustomType.Setter
        public Builder internalPort(@Nullable String internalPort) {
            this.internalPort = internalPort;
            return this;
        }
        @CustomType.Setter
        public Builder ipProtocol(@Nullable String ipProtocol) {
            this.ipProtocol = ipProtocol;
            return this;
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder names(List<String> names) {
            this.names = Objects.requireNonNull(names);
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public GetForwardEntriesResult build() {
            final var o = new GetForwardEntriesResult();
            o.entries = entries;
            o.externalIp = externalIp;
            o.externalPort = externalPort;
            o.forwardEntryName = forwardEntryName;
            o.forwardTableId = forwardTableId;
            o.id = id;
            o.ids = ids;
            o.internalIp = internalIp;
            o.internalPort = internalPort;
            o.ipProtocol = ipProtocol;
            o.nameRegex = nameRegex;
            o.names = names;
            o.outputFile = outputFile;
            o.status = status;
            return o;
        }
    }
}
