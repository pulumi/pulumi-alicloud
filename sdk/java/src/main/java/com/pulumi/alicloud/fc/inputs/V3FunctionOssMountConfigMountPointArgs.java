// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V3FunctionOssMountConfigMountPointArgs extends com.pulumi.resources.ResourceArgs {

    public static final V3FunctionOssMountConfigMountPointArgs Empty = new V3FunctionOssMountConfigMountPointArgs();

    /**
     * OSS Bucket name.
     * 
     */
    @Import(name="bucketName")
    private @Nullable Output<String> bucketName;

    /**
     * @return OSS Bucket name.
     * 
     */
    public Optional<Output<String>> bucketName() {
        return Optional.ofNullable(this.bucketName);
    }

    /**
     * Path of the mounted OSS Bucket.
     * 
     */
    @Import(name="bucketPath")
    private @Nullable Output<String> bucketPath;

    /**
     * @return Path of the mounted OSS Bucket.
     * 
     */
    public Optional<Output<String>> bucketPath() {
        return Optional.ofNullable(this.bucketPath);
    }

    /**
     * OSS access endpoint.
     * 
     */
    @Import(name="endpoint")
    private @Nullable Output<String> endpoint;

    /**
     * @return OSS access endpoint.
     * 
     */
    public Optional<Output<String>> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    @Import(name="mountDir")
    private @Nullable Output<String> mountDir;

    public Optional<Output<String>> mountDir() {
        return Optional.ofNullable(this.mountDir);
    }

    /**
     * Read-only.
     * 
     */
    @Import(name="readOnly")
    private @Nullable Output<Boolean> readOnly;

    /**
     * @return Read-only.
     * 
     */
    public Optional<Output<Boolean>> readOnly() {
        return Optional.ofNullable(this.readOnly);
    }

    private V3FunctionOssMountConfigMountPointArgs() {}

    private V3FunctionOssMountConfigMountPointArgs(V3FunctionOssMountConfigMountPointArgs $) {
        this.bucketName = $.bucketName;
        this.bucketPath = $.bucketPath;
        this.endpoint = $.endpoint;
        this.mountDir = $.mountDir;
        this.readOnly = $.readOnly;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V3FunctionOssMountConfigMountPointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V3FunctionOssMountConfigMountPointArgs $;

        public Builder() {
            $ = new V3FunctionOssMountConfigMountPointArgs();
        }

        public Builder(V3FunctionOssMountConfigMountPointArgs defaults) {
            $ = new V3FunctionOssMountConfigMountPointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucketName OSS Bucket name.
         * 
         * @return builder
         * 
         */
        public Builder bucketName(@Nullable Output<String> bucketName) {
            $.bucketName = bucketName;
            return this;
        }

        /**
         * @param bucketName OSS Bucket name.
         * 
         * @return builder
         * 
         */
        public Builder bucketName(String bucketName) {
            return bucketName(Output.of(bucketName));
        }

        /**
         * @param bucketPath Path of the mounted OSS Bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucketPath(@Nullable Output<String> bucketPath) {
            $.bucketPath = bucketPath;
            return this;
        }

        /**
         * @param bucketPath Path of the mounted OSS Bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucketPath(String bucketPath) {
            return bucketPath(Output.of(bucketPath));
        }

        /**
         * @param endpoint OSS access endpoint.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(@Nullable Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        /**
         * @param endpoint OSS access endpoint.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        public Builder mountDir(@Nullable Output<String> mountDir) {
            $.mountDir = mountDir;
            return this;
        }

        public Builder mountDir(String mountDir) {
            return mountDir(Output.of(mountDir));
        }

        /**
         * @param readOnly Read-only.
         * 
         * @return builder
         * 
         */
        public Builder readOnly(@Nullable Output<Boolean> readOnly) {
            $.readOnly = readOnly;
            return this;
        }

        /**
         * @param readOnly Read-only.
         * 
         * @return builder
         * 
         */
        public Builder readOnly(Boolean readOnly) {
            return readOnly(Output.of(readOnly));
        }

        public V3FunctionOssMountConfigMountPointArgs build() {
            return $;
        }
    }

}
