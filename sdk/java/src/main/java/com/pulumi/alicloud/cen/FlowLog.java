// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.cen.FlowLogArgs;
import com.pulumi.alicloud.cen.inputs.FlowLogState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a CEN Flow Log resource.
 * 
 * For information about CEN Flow Log and how to use it, see [What is Flow Log](https://www.alibabacloud.com/help/en/cen/developer-reference/api-cbn-2017-09-12-createflowlog).
 * 
 * &gt; **NOTE:** Available since v1.73.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.cen.Instance;
 * import com.pulumi.alicloud.cen.InstanceArgs;
 * import com.pulumi.alicloud.log.Project;
 * import com.pulumi.alicloud.log.ProjectArgs;
 * import com.pulumi.alicloud.log.Store;
 * import com.pulumi.alicloud.log.StoreArgs;
 * import com.pulumi.alicloud.cen.FlowLog;
 * import com.pulumi.alicloud.cen.FlowLogArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Create a cen flowlog resource and use it to publish a route entry pointing to an ECS.
 *         var default_ = new Instance("default", InstanceArgs.builder()
 *             .name("my-cen")
 *             .build());
 * 
 *         var defaultProject = new Project("defaultProject", ProjectArgs.builder()
 *             .name("sls-for-flowlog")
 *             .description("create by terraform")
 *             .build());
 * 
 *         var defaultStore = new Store("defaultStore", StoreArgs.builder()
 *             .project(defaultProject.name())
 *             .name("sls-for-flowlog")
 *             .retentionPeriod(3650)
 *             .shardCount(3)
 *             .autoSplit(true)
 *             .maxSplitShardCount(60)
 *             .appendMeta(true)
 *             .build());
 * 
 *         var defaultFlowLog = new FlowLog("defaultFlowLog", FlowLogArgs.builder()
 *             .flowLogName("my-flowlog")
 *             .cenId(default_.id())
 *             .projectName(defaultProject.name())
 *             .logStoreName(defaultStore.name())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * CEN Flow Log can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:cen/flowLog:FlowLog example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:cen/flowLog:FlowLog")
public class FlowLog extends com.pulumi.resources.CustomResource {
    /**
     * cen id
     * 
     */
    @Export(name="cenId", refs={String.class}, tree="[0]")
    private Output<String> cenId;

    /**
     * @return cen id
     * 
     */
    public Output<String> cenId() {
        return this.cenId;
    }
    /**
     * CreateTime
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return CreateTime
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The description of the flowlog.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the flowlog.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The name of the flowlog.
     * 
     */
    @Export(name="flowLogName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> flowLogName;

    /**
     * @return The name of the flowlog.
     * 
     */
    public Output<Optional<String>> flowLogName() {
        return Codegen.optional(this.flowLogName);
    }
    /**
     * The duration of the capture window for the flow log to capture traffic. Unit: seconds. Valid values: `60` or **600 * *. Default value: **600 * *.
     * 
     */
    @Export(name="interval", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> interval;

    /**
     * @return The duration of the capture window for the flow log to capture traffic. Unit: seconds. Valid values: `60` or **600 * *. Default value: **600 * *.
     * 
     */
    public Output<Optional<Integer>> interval() {
        return Codegen.optional(this.interval);
    }
    /**
     * Log Format
     * 
     */
    @Export(name="logFormatString", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> logFormatString;

    /**
     * @return Log Format
     * 
     */
    public Output<Optional<String>> logFormatString() {
        return Codegen.optional(this.logFormatString);
    }
    /**
     * The LogStore that stores the flowlog.
     * 
     */
    @Export(name="logStoreName", refs={String.class}, tree="[0]")
    private Output<String> logStoreName;

    /**
     * @return The LogStore that stores the flowlog.
     * 
     */
    public Output<String> logStoreName() {
        return this.logStoreName;
    }
    /**
     * The Project that stores the flowlog.
     * 
     */
    @Export(name="projectName", refs={String.class}, tree="[0]")
    private Output<String> projectName;

    /**
     * @return The Project that stores the flowlog.
     * 
     */
    public Output<String> projectName() {
        return this.projectName;
    }
    /**
     * region id
     * 
     */
    @Export(name="regionId", refs={String.class}, tree="[0]")
    private Output<String> regionId;

    /**
     * @return region id
     * 
     */
    public Output<String> regionId() {
        return this.regionId;
    }
    /**
     * The status of the flow log. Valid values:
     * - `Active`: started.
     * - `InActive`: not started.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the flow log. Valid values:
     * - `Active`: started.
     * - `InActive`: not started.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The tag of the resource
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return The tag of the resource
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Cross-region Connection ID or VBR connection ID.
     * 
     * &gt; **NOTE:**  This parameter is required.
     * 
     */
    @Export(name="transitRouterAttachmentId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> transitRouterAttachmentId;

    /**
     * @return Cross-region Connection ID or VBR connection ID.
     * 
     * &gt; **NOTE:**  This parameter is required.
     * 
     */
    public Output<Optional<String>> transitRouterAttachmentId() {
        return Codegen.optional(this.transitRouterAttachmentId);
    }
    /**
     * Transit Router ID
     * 
     */
    @Export(name="transitRouterId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> transitRouterId;

    /**
     * @return Transit Router ID
     * 
     */
    public Output<Optional<String>> transitRouterId() {
        return Codegen.optional(this.transitRouterId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FlowLog(java.lang.String name) {
        this(name, FlowLogArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FlowLog(java.lang.String name, FlowLogArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FlowLog(java.lang.String name, FlowLogArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:cen/flowLog:FlowLog", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private FlowLog(java.lang.String name, Output<java.lang.String> id, @Nullable FlowLogState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:cen/flowLog:FlowLog", name, state, makeResourceOptions(options, id), false);
    }

    private static FlowLogArgs makeArgs(FlowLogArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FlowLogArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FlowLog get(java.lang.String name, Output<java.lang.String> id, @Nullable FlowLogState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FlowLog(name, id, state, options);
    }
}
