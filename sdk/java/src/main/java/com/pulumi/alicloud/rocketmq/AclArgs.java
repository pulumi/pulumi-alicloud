// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rocketmq;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AclArgs extends com.pulumi.resources.ResourceArgs {

    public static final AclArgs Empty = new AclArgs();

    /**
     * The type of operations that can be performed on the resource. Valid values:
     * - If `resource_type` is set to `Topic`. Valid values: `Pub`, `Sub`.
     * - If `resource_type` is set to `Group`. Valid values: `Sub`.
     * 
     */
    @Import(name="actions", required=true)
    private Output<List<String>> actions;

    /**
     * @return The type of operations that can be performed on the resource. Valid values:
     * - If `resource_type` is set to `Topic`. Valid values: `Pub`, `Sub`.
     * - If `resource_type` is set to `Group`. Valid values: `Sub`.
     * 
     */
    public Output<List<String>> actions() {
        return this.actions;
    }

    /**
     * The decision result of the authorization. Valid values: `Deny`, `Allow`.
     * 
     */
    @Import(name="decision", required=true)
    private Output<String> decision;

    /**
     * @return The decision result of the authorization. Valid values: `Deny`, `Allow`.
     * 
     */
    public Output<String> decision() {
        return this.decision;
    }

    /**
     * The instance ID.
     * 
     */
    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    /**
     * @return The instance ID.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }

    /**
     * The IP address whitelists.
     * 
     */
    @Import(name="ipWhitelists")
    private @Nullable Output<List<String>> ipWhitelists;

    /**
     * @return The IP address whitelists.
     * 
     */
    public Optional<Output<List<String>>> ipWhitelists() {
        return Optional.ofNullable(this.ipWhitelists);
    }

    /**
     * The name of the resource on which you want to grant permissions.
     * 
     */
    @Import(name="resourceName", required=true)
    private Output<String> resourceName;

    /**
     * @return The name of the resource on which you want to grant permissions.
     * 
     */
    public Output<String> resourceName() {
        return this.resourceName;
    }

    /**
     * The type of the resource on which you want to grant permissions. Valid values: `Group`, `Topic`.
     * 
     */
    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    /**
     * @return The type of the resource on which you want to grant permissions. Valid values: `Group`, `Topic`.
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }

    /**
     * The username of the account.
     * 
     */
    @Import(name="username", required=true)
    private Output<String> username;

    /**
     * @return The username of the account.
     * 
     */
    public Output<String> username() {
        return this.username;
    }

    private AclArgs() {}

    private AclArgs(AclArgs $) {
        this.actions = $.actions;
        this.decision = $.decision;
        this.instanceId = $.instanceId;
        this.ipWhitelists = $.ipWhitelists;
        this.resourceName = $.resourceName;
        this.resourceType = $.resourceType;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AclArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AclArgs $;

        public Builder() {
            $ = new AclArgs();
        }

        public Builder(AclArgs defaults) {
            $ = new AclArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions The type of operations that can be performed on the resource. Valid values:
         * - If `resource_type` is set to `Topic`. Valid values: `Pub`, `Sub`.
         * - If `resource_type` is set to `Group`. Valid values: `Sub`.
         * 
         * @return builder
         * 
         */
        public Builder actions(Output<List<String>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions The type of operations that can be performed on the resource. Valid values:
         * - If `resource_type` is set to `Topic`. Valid values: `Pub`, `Sub`.
         * - If `resource_type` is set to `Group`. Valid values: `Sub`.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<String> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions The type of operations that can be performed on the resource. Valid values:
         * - If `resource_type` is set to `Topic`. Valid values: `Pub`, `Sub`.
         * - If `resource_type` is set to `Group`. Valid values: `Sub`.
         * 
         * @return builder
         * 
         */
        public Builder actions(String... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param decision The decision result of the authorization. Valid values: `Deny`, `Allow`.
         * 
         * @return builder
         * 
         */
        public Builder decision(Output<String> decision) {
            $.decision = decision;
            return this;
        }

        /**
         * @param decision The decision result of the authorization. Valid values: `Deny`, `Allow`.
         * 
         * @return builder
         * 
         */
        public Builder decision(String decision) {
            return decision(Output.of(decision));
        }

        /**
         * @param instanceId The instance ID.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The instance ID.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param ipWhitelists The IP address whitelists.
         * 
         * @return builder
         * 
         */
        public Builder ipWhitelists(@Nullable Output<List<String>> ipWhitelists) {
            $.ipWhitelists = ipWhitelists;
            return this;
        }

        /**
         * @param ipWhitelists The IP address whitelists.
         * 
         * @return builder
         * 
         */
        public Builder ipWhitelists(List<String> ipWhitelists) {
            return ipWhitelists(Output.of(ipWhitelists));
        }

        /**
         * @param ipWhitelists The IP address whitelists.
         * 
         * @return builder
         * 
         */
        public Builder ipWhitelists(String... ipWhitelists) {
            return ipWhitelists(List.of(ipWhitelists));
        }

        /**
         * @param resourceName The name of the resource on which you want to grant permissions.
         * 
         * @return builder
         * 
         */
        public Builder resourceName(Output<String> resourceName) {
            $.resourceName = resourceName;
            return this;
        }

        /**
         * @param resourceName The name of the resource on which you want to grant permissions.
         * 
         * @return builder
         * 
         */
        public Builder resourceName(String resourceName) {
            return resourceName(Output.of(resourceName));
        }

        /**
         * @param resourceType The type of the resource on which you want to grant permissions. Valid values: `Group`, `Topic`.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The type of the resource on which you want to grant permissions. Valid values: `Group`, `Topic`.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param username The username of the account.
         * 
         * @return builder
         * 
         */
        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username The username of the account.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public AclArgs build() {
            if ($.actions == null) {
                throw new MissingRequiredPropertyException("AclArgs", "actions");
            }
            if ($.decision == null) {
                throw new MissingRequiredPropertyException("AclArgs", "decision");
            }
            if ($.instanceId == null) {
                throw new MissingRequiredPropertyException("AclArgs", "instanceId");
            }
            if ($.resourceName == null) {
                throw new MissingRequiredPropertyException("AclArgs", "resourceName");
            }
            if ($.resourceType == null) {
                throw new MissingRequiredPropertyException("AclArgs", "resourceType");
            }
            if ($.username == null) {
                throw new MissingRequiredPropertyException("AclArgs", "username");
            }
            return $;
        }
    }

}
