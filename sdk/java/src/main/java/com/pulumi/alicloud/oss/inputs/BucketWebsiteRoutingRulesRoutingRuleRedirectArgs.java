// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss.inputs;

import com.pulumi.alicloud.oss.inputs.BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorAuthArgs;
import com.pulumi.alicloud.oss.inputs.BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersArgs;
import com.pulumi.alicloud.oss.inputs.BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorMultiAlternatesArgs;
import com.pulumi.alicloud.oss.inputs.BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorReturnHeadersArgs;
import com.pulumi.alicloud.oss.inputs.BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorTaggingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketWebsiteRoutingRulesRoutingRuleRedirectArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketWebsiteRoutingRulesRoutingRuleRedirectArgs Empty = new BucketWebsiteRoutingRulesRoutingRuleRedirectArgs();

    /**
     * If this field is set to true, the prefix of Object is replaced with the value specified by ReplaceKeyPrefixWith. If this field is not specified or is blank, the Object prefix is truncated.
     * 
     */
    @Import(name="enableReplacePrefix")
    private @Nullable Output<Boolean> enableReplacePrefix;

    /**
     * @return If this field is set to true, the prefix of Object is replaced with the value specified by ReplaceKeyPrefixWith. If this field is not specified or is blank, the Object prefix is truncated.
     * 
     */
    public Optional<Output<Boolean>> enableReplacePrefix() {
        return Optional.ofNullable(this.enableReplacePrefix);
    }

    /**
     * The domain name during the jump. The domain name must comply with the domain name specification.
     * 
     */
    @Import(name="hostName")
    private @Nullable Output<String> hostName;

    /**
     * @return The domain name during the jump. The domain name must comply with the domain name specification.
     * 
     */
    public Optional<Output<String>> hostName() {
        return Optional.ofNullable(this.hostName);
    }

    /**
     * The status code returned during the jump. It takes effect only when the RedirectType is set to External or AliCDN.
     * 
     */
    @Import(name="httpRedirectCode")
    private @Nullable Output<String> httpRedirectCode;

    /**
     * @return The status code returned during the jump. It takes effect only when the RedirectType is set to External or AliCDN.
     * 
     */
    public Optional<Output<String>> httpRedirectCode() {
        return Optional.ofNullable(this.httpRedirectCode);
    }

    /**
     * Image back-to-source allows getting Image information
     * 
     */
    @Import(name="mirrorAllowGetImageInfo")
    private @Nullable Output<Boolean> mirrorAllowGetImageInfo;

    /**
     * @return Image back-to-source allows getting Image information
     * 
     */
    public Optional<Output<Boolean>> mirrorAllowGetImageInfo() {
        return Optional.ofNullable(this.mirrorAllowGetImageInfo);
    }

    /**
     * Whether to allow HeadObject in image back-to-source
     * 
     */
    @Import(name="mirrorAllowHeadObject")
    private @Nullable Output<Boolean> mirrorAllowHeadObject;

    /**
     * @return Whether to allow HeadObject in image back-to-source
     * 
     */
    public Optional<Output<Boolean>> mirrorAllowHeadObject() {
        return Optional.ofNullable(this.mirrorAllowHeadObject);
    }

    /**
     * Mirror back-to-source allows support for video frame truncation
     * 
     */
    @Import(name="mirrorAllowVideoSnapshot")
    private @Nullable Output<Boolean> mirrorAllowVideoSnapshot;

    /**
     * @return Mirror back-to-source allows support for video frame truncation
     * 
     */
    public Optional<Output<Boolean>> mirrorAllowVideoSnapshot() {
        return Optional.ofNullable(this.mirrorAllowVideoSnapshot);
    }

    /**
     * The status code of the mirror back-to-source trigger asynchronous pull mode.
     * 
     */
    @Import(name="mirrorAsyncStatus")
    private @Nullable Output<Integer> mirrorAsyncStatus;

    /**
     * @return The status code of the mirror back-to-source trigger asynchronous pull mode.
     * 
     */
    public Optional<Output<Integer>> mirrorAsyncStatus() {
        return Optional.ofNullable(this.mirrorAsyncStatus);
    }

    /**
     * Image back Source station authentication information See `mirror_auth` below.
     * 
     */
    @Import(name="mirrorAuth")
    private @Nullable Output<BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorAuthArgs> mirrorAuth;

    /**
     * @return Image back Source station authentication information See `mirror_auth` below.
     * 
     */
    public Optional<Output<BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorAuthArgs>> mirrorAuth() {
        return Optional.ofNullable(this.mirrorAuth);
    }

    /**
     * Whether to check the MD5 of the source body. It takes effect only when the RedirectType is set to Mirror.
     * 
     */
    @Import(name="mirrorCheckMd5")
    private @Nullable Output<Boolean> mirrorCheckMd5;

    /**
     * @return Whether to check the MD5 of the source body. It takes effect only when the RedirectType is set to Mirror.
     * 
     */
    public Optional<Output<Boolean>> mirrorCheckMd5() {
        return Optional.ofNullable(this.mirrorCheckMd5);
    }

    /**
     * Mirrored back-to-source high-speed Channel vpregion
     * 
     */
    @Import(name="mirrorDstRegion")
    private @Nullable Output<String> mirrorDstRegion;

    /**
     * @return Mirrored back-to-source high-speed Channel vpregion
     * 
     */
    public Optional<Output<String>> mirrorDstRegion() {
        return Optional.ofNullable(this.mirrorDstRegion);
    }

    /**
     * Mirroring back-to-source high-speed Channel standby station VpcId
     * 
     */
    @Import(name="mirrorDstSlaveVpcId")
    private @Nullable Output<String> mirrorDstSlaveVpcId;

    /**
     * @return Mirroring back-to-source high-speed Channel standby station VpcId
     * 
     */
    public Optional<Output<String>> mirrorDstSlaveVpcId() {
        return Optional.ofNullable(this.mirrorDstSlaveVpcId);
    }

    /**
     * Mirror back-to-source high-speed Channel VpcId
     * 
     */
    @Import(name="mirrorDstVpcId")
    private @Nullable Output<String> mirrorDstVpcId;

    /**
     * @return Mirror back-to-source high-speed Channel VpcId
     * 
     */
    public Optional<Output<String>> mirrorDstVpcId() {
        return Optional.ofNullable(this.mirrorDstVpcId);
    }

    /**
     * If the result of the image back-to-source acquisition is 3xx, whether to continue to jump to the specified Location to obtain data. It takes effect only when the RedirectType is set to Mirror.
     * 
     */
    @Import(name="mirrorFollowRedirect")
    private @Nullable Output<Boolean> mirrorFollowRedirect;

    /**
     * @return If the result of the image back-to-source acquisition is 3xx, whether to continue to jump to the specified Location to obtain data. It takes effect only when the RedirectType is set to Mirror.
     * 
     */
    public Optional<Output<Boolean>> mirrorFollowRedirect() {
        return Optional.ofNullable(this.mirrorFollowRedirect);
    }

    /**
     * Specifies the Header carried when the image returns to the source. It takes effect only when the RedirectType is set to Mirror. See `mirror_headers` below.
     * 
     */
    @Import(name="mirrorHeaders")
    private @Nullable Output<BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersArgs> mirrorHeaders;

    /**
     * @return Specifies the Header carried when the image returns to the source. It takes effect only when the RedirectType is set to Mirror. See `mirror_headers` below.
     * 
     */
    public Optional<Output<BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersArgs>> mirrorHeaders() {
        return Optional.ofNullable(this.mirrorHeaders);
    }

    /**
     * Whether it is a mirror back-to-source high-speed Channel
     * 
     */
    @Import(name="mirrorIsExpressTunnel")
    private @Nullable Output<Boolean> mirrorIsExpressTunnel;

    /**
     * @return Whether it is a mirror back-to-source high-speed Channel
     * 
     */
    public Optional<Output<Boolean>> mirrorIsExpressTunnel() {
        return Optional.ofNullable(this.mirrorIsExpressTunnel);
    }

    /**
     * Mirror back-to-source multi-source station configuration container. **NOTE:**: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See `mirror_multi_alternates` below.
     * 
     */
    @Import(name="mirrorMultiAlternates")
    private @Nullable Output<BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorMultiAlternatesArgs> mirrorMultiAlternates;

    /**
     * @return Mirror back-to-source multi-source station configuration container. **NOTE:**: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See `mirror_multi_alternates` below.
     * 
     */
    public Optional<Output<BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorMultiAlternatesArgs>> mirrorMultiAlternates() {
        return Optional.ofNullable(this.mirrorMultiAlternates);
    }

    /**
     * Transparent transmission/to source Station
     * 
     */
    @Import(name="mirrorPassOriginalSlashes")
    private @Nullable Output<Boolean> mirrorPassOriginalSlashes;

    /**
     * @return Transparent transmission/to source Station
     * 
     */
    public Optional<Output<Boolean>> mirrorPassOriginalSlashes() {
        return Optional.ofNullable(this.mirrorPassOriginalSlashes);
    }

    /**
     * Same as PassQueryString and takes precedence over PassQueryString. It takes effect only when the RedirectType is set to Mirror.
     * 
     */
    @Import(name="mirrorPassQueryString")
    private @Nullable Output<Boolean> mirrorPassQueryString;

    /**
     * @return Same as PassQueryString and takes precedence over PassQueryString. It takes effect only when the RedirectType is set to Mirror.
     * 
     */
    public Optional<Output<Boolean>> mirrorPassQueryString() {
        return Optional.ofNullable(this.mirrorPassQueryString);
    }

    /**
     * Whether mirroring back to source does not save data
     * 
     */
    @Import(name="mirrorProxyPass")
    private @Nullable Output<Boolean> mirrorProxyPass;

    /**
     * @return Whether mirroring back to source does not save data
     * 
     */
    public Optional<Output<Boolean>> mirrorProxyPass() {
        return Optional.ofNullable(this.mirrorProxyPass);
    }

    /**
     * The container that saves the image back to the source and returns the response header rule. **NOTE:**: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See `mirror_return_headers` below.
     * 
     */
    @Import(name="mirrorReturnHeaders")
    private @Nullable Output<BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorReturnHeadersArgs> mirrorReturnHeaders;

    /**
     * @return The container that saves the image back to the source and returns the response header rule. **NOTE:**: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See `mirror_return_headers` below.
     * 
     */
    public Optional<Output<BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorReturnHeadersArgs>> mirrorReturnHeaders() {
        return Optional.ofNullable(this.mirrorReturnHeaders);
    }

    /**
     * Roles used when mirroring back-to-source
     * 
     */
    @Import(name="mirrorRole")
    private @Nullable Output<String> mirrorRole;

    /**
     * @return Roles used when mirroring back-to-source
     * 
     */
    public Optional<Output<String>> mirrorRole() {
        return Optional.ofNullable(this.mirrorRole);
    }

    /**
     * Mirror back-to-source back-to-source OSS automatically saves user metadata
     * 
     */
    @Import(name="mirrorSaveOssMeta")
    private @Nullable Output<Boolean> mirrorSaveOssMeta;

    /**
     * @return Mirror back-to-source back-to-source OSS automatically saves user metadata
     * 
     */
    public Optional<Output<Boolean>> mirrorSaveOssMeta() {
        return Optional.ofNullable(this.mirrorSaveOssMeta);
    }

    /**
     * Transparent transmission of SNI
     * 
     */
    @Import(name="mirrorSni")
    private @Nullable Output<Boolean> mirrorSni;

    /**
     * @return Transparent transmission of SNI
     * 
     */
    public Optional<Output<Boolean>> mirrorSni() {
        return Optional.ofNullable(this.mirrorSni);
    }

    /**
     * It is used to judge the status of active-standby switching. The judgment logic of active-standby switching is that the source station returns an error. If MirrorSwitchAllErrors is true, it is considered a failure except the following status code: 200,206,301,302,303,307,404; If false, only the source Station Returns 5xx or times out is considered a failure.
     * 
     */
    @Import(name="mirrorSwitchAllErrors")
    private @Nullable Output<Boolean> mirrorSwitchAllErrors;

    /**
     * @return It is used to judge the status of active-standby switching. The judgment logic of active-standby switching is that the source station returns an error. If MirrorSwitchAllErrors is true, it is considered a failure except the following status code: 200,206,301,302,303,307,404; If false, only the source Station Returns 5xx or times out is considered a failure.
     * 
     */
    public Optional<Output<Boolean>> mirrorSwitchAllErrors() {
        return Optional.ofNullable(this.mirrorSwitchAllErrors);
    }

    /**
     * Save the label according to the parameters when saving the file from the mirror back to the source. **NOTE:**: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See `mirror_taggings` below.
     * 
     */
    @Import(name="mirrorTaggings")
    private @Nullable Output<BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorTaggingsArgs> mirrorTaggings;

    /**
     * @return Save the label according to the parameters when saving the file from the mirror back to the source. **NOTE:**: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See `mirror_taggings` below.
     * 
     */
    public Optional<Output<BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorTaggingsArgs>> mirrorTaggings() {
        return Optional.ofNullable(this.mirrorTaggings);
    }

    /**
     * Mirror back-to-source leased line back-to-source tunnel ID
     * 
     */
    @Import(name="mirrorTunnelId")
    private @Nullable Output<String> mirrorTunnelId;

    /**
     * @return Mirror back-to-source leased line back-to-source tunnel ID
     * 
     */
    public Optional<Output<String>> mirrorTunnelId() {
        return Optional.ofNullable(this.mirrorTunnelId);
    }

    /**
     * The address of the origin of the image. It takes effect only when the RedirectType is set to Mirror. The origin address must start with http:// or https:// and end with a forward slash (/). OSS takes the Object name after the Origin address to form the origin URL.
     * 
     */
    @Import(name="mirrorUrl")
    private @Nullable Output<String> mirrorUrl;

    /**
     * @return The address of the origin of the image. It takes effect only when the RedirectType is set to Mirror. The origin address must start with http:// or https:// and end with a forward slash (/). OSS takes the Object name after the Origin address to form the origin URL.
     * 
     */
    public Optional<Output<String>> mirrorUrl() {
        return Optional.ofNullable(this.mirrorUrl);
    }

    /**
     * Mirror back-to-source Master-backup back-to-source switching decision URL
     * 
     */
    @Import(name="mirrorUrlProbe")
    private @Nullable Output<String> mirrorUrlProbe;

    /**
     * @return Mirror back-to-source Master-backup back-to-source switching decision URL
     * 
     */
    public Optional<Output<String>> mirrorUrlProbe() {
        return Optional.ofNullable(this.mirrorUrlProbe);
    }

    /**
     * Mirror back-to-source primary backup back-to-source backup station URL
     * 
     */
    @Import(name="mirrorUrlSlave")
    private @Nullable Output<String> mirrorUrlSlave;

    /**
     * @return Mirror back-to-source primary backup back-to-source backup station URL
     * 
     */
    public Optional<Output<String>> mirrorUrlSlave() {
        return Optional.ofNullable(this.mirrorUrlSlave);
    }

    /**
     * Whether the source station LastModifiedTime is used for the image back-to-source save file.
     * 
     */
    @Import(name="mirrorUserLastModified")
    private @Nullable Output<Boolean> mirrorUserLastModified;

    /**
     * @return Whether the source station LastModifiedTime is used for the image back-to-source save file.
     * 
     */
    public Optional<Output<Boolean>> mirrorUserLastModified() {
        return Optional.ofNullable(this.mirrorUserLastModified);
    }

    /**
     * Whether to use role for mirroring back to source
     * 
     */
    @Import(name="mirrorUsingRole")
    private @Nullable Output<Boolean> mirrorUsingRole;

    /**
     * @return Whether to use role for mirroring back to source
     * 
     */
    public Optional<Output<Boolean>> mirrorUsingRole() {
        return Optional.ofNullable(this.mirrorUsingRole);
    }

    /**
     * Whether to carry the request parameters when executing the jump or mirror back-to-source rule. Did the user carry the request parameters when requesting OSS? a = B &amp; c = d, and set PassQueryString to true. If the rule is a 302 jump, this request parameter is added to the Location header of the jump. For example Location:example.com? a = B &amp; c = d, and the jump type is mirrored back-to-origin, this request parameter is also carried in the back-to-origin request initiated. Values: true, false (default)
     * 
     */
    @Import(name="passQueryString")
    private @Nullable Output<Boolean> passQueryString;

    /**
     * @return Whether to carry the request parameters when executing the jump or mirror back-to-source rule. Did the user carry the request parameters when requesting OSS? a = B &amp; c = d, and set PassQueryString to true. If the rule is a 302 jump, this request parameter is added to the Location header of the jump. For example Location:example.com? a = B &amp; c = d, and the jump type is mirrored back-to-origin, this request parameter is also carried in the back-to-origin request initiated. Values: true, false (default)
     * 
     */
    public Optional<Output<Boolean>> passQueryString() {
        return Optional.ofNullable(this.passQueryString);
    }

    /**
     * The protocol at the time of the jump. It takes effect only when the RedirectType is set to External or AliCDN.
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return The protocol at the time of the jump. It takes effect only when the RedirectType is set to External or AliCDN.
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * Specifies the type of jump. The value range is as follows: Mirror: Mirror back to the source. External: External redirects, that is, OSS returns a 3xx request to redirect to another address. AliCDN: Alibaba Cloud CDN jump, mainly used for Alibaba Cloud CDN. Unlike External, OSS adds an additional Header. After recognizing this Header, Alibaba Cloud CDN redirects the data to the specified address and returns the obtained data to the user instead of returning the 3xx Redirection request to the user.
     * 
     */
    @Import(name="redirectType")
    private @Nullable Output<String> redirectType;

    /**
     * @return Specifies the type of jump. The value range is as follows: Mirror: Mirror back to the source. External: External redirects, that is, OSS returns a 3xx request to redirect to another address. AliCDN: Alibaba Cloud CDN jump, mainly used for Alibaba Cloud CDN. Unlike External, OSS adds an additional Header. After recognizing this Header, Alibaba Cloud CDN redirects the data to the specified address and returns the obtained data to the user instead of returning the 3xx Redirection request to the user.
     * 
     */
    public Optional<Output<String>> redirectType() {
        return Optional.ofNullable(this.redirectType);
    }

    /**
     * The prefix of the Object name will be replaced with this value during Redirect. If the prefix is empty, this string is inserted in front of the Object name.
     * 
     */
    @Import(name="replaceKeyPrefixWith")
    private @Nullable Output<String> replaceKeyPrefixWith;

    /**
     * @return The prefix of the Object name will be replaced with this value during Redirect. If the prefix is empty, this string is inserted in front of the Object name.
     * 
     */
    public Optional<Output<String>> replaceKeyPrefixWith() {
        return Optional.ofNullable(this.replaceKeyPrefixWith);
    }

    /**
     * During redirection, the Object name is replaced with the value specified by ReplaceKeyWith. You can set variables in ReplaceKeyWith. Currently, the supported variable is ${key}, which indicates the name of the Object in the request.
     * 
     */
    @Import(name="replaceKeyWith")
    private @Nullable Output<String> replaceKeyWith;

    /**
     * @return During redirection, the Object name is replaced with the value specified by ReplaceKeyWith. You can set variables in ReplaceKeyWith. Currently, the supported variable is ${key}, which indicates the name of the Object in the request.
     * 
     */
    public Optional<Output<String>> replaceKeyWith() {
        return Optional.ofNullable(this.replaceKeyWith);
    }

    /**
     * Mirror back-to-source transparent source station response code list
     * 
     */
    @Import(name="transparentMirrorResponseCodes")
    private @Nullable Output<String> transparentMirrorResponseCodes;

    /**
     * @return Mirror back-to-source transparent source station response code list
     * 
     */
    public Optional<Output<String>> transparentMirrorResponseCodes() {
        return Optional.ofNullable(this.transparentMirrorResponseCodes);
    }

    private BucketWebsiteRoutingRulesRoutingRuleRedirectArgs() {}

    private BucketWebsiteRoutingRulesRoutingRuleRedirectArgs(BucketWebsiteRoutingRulesRoutingRuleRedirectArgs $) {
        this.enableReplacePrefix = $.enableReplacePrefix;
        this.hostName = $.hostName;
        this.httpRedirectCode = $.httpRedirectCode;
        this.mirrorAllowGetImageInfo = $.mirrorAllowGetImageInfo;
        this.mirrorAllowHeadObject = $.mirrorAllowHeadObject;
        this.mirrorAllowVideoSnapshot = $.mirrorAllowVideoSnapshot;
        this.mirrorAsyncStatus = $.mirrorAsyncStatus;
        this.mirrorAuth = $.mirrorAuth;
        this.mirrorCheckMd5 = $.mirrorCheckMd5;
        this.mirrorDstRegion = $.mirrorDstRegion;
        this.mirrorDstSlaveVpcId = $.mirrorDstSlaveVpcId;
        this.mirrorDstVpcId = $.mirrorDstVpcId;
        this.mirrorFollowRedirect = $.mirrorFollowRedirect;
        this.mirrorHeaders = $.mirrorHeaders;
        this.mirrorIsExpressTunnel = $.mirrorIsExpressTunnel;
        this.mirrorMultiAlternates = $.mirrorMultiAlternates;
        this.mirrorPassOriginalSlashes = $.mirrorPassOriginalSlashes;
        this.mirrorPassQueryString = $.mirrorPassQueryString;
        this.mirrorProxyPass = $.mirrorProxyPass;
        this.mirrorReturnHeaders = $.mirrorReturnHeaders;
        this.mirrorRole = $.mirrorRole;
        this.mirrorSaveOssMeta = $.mirrorSaveOssMeta;
        this.mirrorSni = $.mirrorSni;
        this.mirrorSwitchAllErrors = $.mirrorSwitchAllErrors;
        this.mirrorTaggings = $.mirrorTaggings;
        this.mirrorTunnelId = $.mirrorTunnelId;
        this.mirrorUrl = $.mirrorUrl;
        this.mirrorUrlProbe = $.mirrorUrlProbe;
        this.mirrorUrlSlave = $.mirrorUrlSlave;
        this.mirrorUserLastModified = $.mirrorUserLastModified;
        this.mirrorUsingRole = $.mirrorUsingRole;
        this.passQueryString = $.passQueryString;
        this.protocol = $.protocol;
        this.redirectType = $.redirectType;
        this.replaceKeyPrefixWith = $.replaceKeyPrefixWith;
        this.replaceKeyWith = $.replaceKeyWith;
        this.transparentMirrorResponseCodes = $.transparentMirrorResponseCodes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketWebsiteRoutingRulesRoutingRuleRedirectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketWebsiteRoutingRulesRoutingRuleRedirectArgs $;

        public Builder() {
            $ = new BucketWebsiteRoutingRulesRoutingRuleRedirectArgs();
        }

        public Builder(BucketWebsiteRoutingRulesRoutingRuleRedirectArgs defaults) {
            $ = new BucketWebsiteRoutingRulesRoutingRuleRedirectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableReplacePrefix If this field is set to true, the prefix of Object is replaced with the value specified by ReplaceKeyPrefixWith. If this field is not specified or is blank, the Object prefix is truncated.
         * 
         * @return builder
         * 
         */
        public Builder enableReplacePrefix(@Nullable Output<Boolean> enableReplacePrefix) {
            $.enableReplacePrefix = enableReplacePrefix;
            return this;
        }

        /**
         * @param enableReplacePrefix If this field is set to true, the prefix of Object is replaced with the value specified by ReplaceKeyPrefixWith. If this field is not specified or is blank, the Object prefix is truncated.
         * 
         * @return builder
         * 
         */
        public Builder enableReplacePrefix(Boolean enableReplacePrefix) {
            return enableReplacePrefix(Output.of(enableReplacePrefix));
        }

        /**
         * @param hostName The domain name during the jump. The domain name must comply with the domain name specification.
         * 
         * @return builder
         * 
         */
        public Builder hostName(@Nullable Output<String> hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param hostName The domain name during the jump. The domain name must comply with the domain name specification.
         * 
         * @return builder
         * 
         */
        public Builder hostName(String hostName) {
            return hostName(Output.of(hostName));
        }

        /**
         * @param httpRedirectCode The status code returned during the jump. It takes effect only when the RedirectType is set to External or AliCDN.
         * 
         * @return builder
         * 
         */
        public Builder httpRedirectCode(@Nullable Output<String> httpRedirectCode) {
            $.httpRedirectCode = httpRedirectCode;
            return this;
        }

        /**
         * @param httpRedirectCode The status code returned during the jump. It takes effect only when the RedirectType is set to External or AliCDN.
         * 
         * @return builder
         * 
         */
        public Builder httpRedirectCode(String httpRedirectCode) {
            return httpRedirectCode(Output.of(httpRedirectCode));
        }

        /**
         * @param mirrorAllowGetImageInfo Image back-to-source allows getting Image information
         * 
         * @return builder
         * 
         */
        public Builder mirrorAllowGetImageInfo(@Nullable Output<Boolean> mirrorAllowGetImageInfo) {
            $.mirrorAllowGetImageInfo = mirrorAllowGetImageInfo;
            return this;
        }

        /**
         * @param mirrorAllowGetImageInfo Image back-to-source allows getting Image information
         * 
         * @return builder
         * 
         */
        public Builder mirrorAllowGetImageInfo(Boolean mirrorAllowGetImageInfo) {
            return mirrorAllowGetImageInfo(Output.of(mirrorAllowGetImageInfo));
        }

        /**
         * @param mirrorAllowHeadObject Whether to allow HeadObject in image back-to-source
         * 
         * @return builder
         * 
         */
        public Builder mirrorAllowHeadObject(@Nullable Output<Boolean> mirrorAllowHeadObject) {
            $.mirrorAllowHeadObject = mirrorAllowHeadObject;
            return this;
        }

        /**
         * @param mirrorAllowHeadObject Whether to allow HeadObject in image back-to-source
         * 
         * @return builder
         * 
         */
        public Builder mirrorAllowHeadObject(Boolean mirrorAllowHeadObject) {
            return mirrorAllowHeadObject(Output.of(mirrorAllowHeadObject));
        }

        /**
         * @param mirrorAllowVideoSnapshot Mirror back-to-source allows support for video frame truncation
         * 
         * @return builder
         * 
         */
        public Builder mirrorAllowVideoSnapshot(@Nullable Output<Boolean> mirrorAllowVideoSnapshot) {
            $.mirrorAllowVideoSnapshot = mirrorAllowVideoSnapshot;
            return this;
        }

        /**
         * @param mirrorAllowVideoSnapshot Mirror back-to-source allows support for video frame truncation
         * 
         * @return builder
         * 
         */
        public Builder mirrorAllowVideoSnapshot(Boolean mirrorAllowVideoSnapshot) {
            return mirrorAllowVideoSnapshot(Output.of(mirrorAllowVideoSnapshot));
        }

        /**
         * @param mirrorAsyncStatus The status code of the mirror back-to-source trigger asynchronous pull mode.
         * 
         * @return builder
         * 
         */
        public Builder mirrorAsyncStatus(@Nullable Output<Integer> mirrorAsyncStatus) {
            $.mirrorAsyncStatus = mirrorAsyncStatus;
            return this;
        }

        /**
         * @param mirrorAsyncStatus The status code of the mirror back-to-source trigger asynchronous pull mode.
         * 
         * @return builder
         * 
         */
        public Builder mirrorAsyncStatus(Integer mirrorAsyncStatus) {
            return mirrorAsyncStatus(Output.of(mirrorAsyncStatus));
        }

        /**
         * @param mirrorAuth Image back Source station authentication information See `mirror_auth` below.
         * 
         * @return builder
         * 
         */
        public Builder mirrorAuth(@Nullable Output<BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorAuthArgs> mirrorAuth) {
            $.mirrorAuth = mirrorAuth;
            return this;
        }

        /**
         * @param mirrorAuth Image back Source station authentication information See `mirror_auth` below.
         * 
         * @return builder
         * 
         */
        public Builder mirrorAuth(BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorAuthArgs mirrorAuth) {
            return mirrorAuth(Output.of(mirrorAuth));
        }

        /**
         * @param mirrorCheckMd5 Whether to check the MD5 of the source body. It takes effect only when the RedirectType is set to Mirror.
         * 
         * @return builder
         * 
         */
        public Builder mirrorCheckMd5(@Nullable Output<Boolean> mirrorCheckMd5) {
            $.mirrorCheckMd5 = mirrorCheckMd5;
            return this;
        }

        /**
         * @param mirrorCheckMd5 Whether to check the MD5 of the source body. It takes effect only when the RedirectType is set to Mirror.
         * 
         * @return builder
         * 
         */
        public Builder mirrorCheckMd5(Boolean mirrorCheckMd5) {
            return mirrorCheckMd5(Output.of(mirrorCheckMd5));
        }

        /**
         * @param mirrorDstRegion Mirrored back-to-source high-speed Channel vpregion
         * 
         * @return builder
         * 
         */
        public Builder mirrorDstRegion(@Nullable Output<String> mirrorDstRegion) {
            $.mirrorDstRegion = mirrorDstRegion;
            return this;
        }

        /**
         * @param mirrorDstRegion Mirrored back-to-source high-speed Channel vpregion
         * 
         * @return builder
         * 
         */
        public Builder mirrorDstRegion(String mirrorDstRegion) {
            return mirrorDstRegion(Output.of(mirrorDstRegion));
        }

        /**
         * @param mirrorDstSlaveVpcId Mirroring back-to-source high-speed Channel standby station VpcId
         * 
         * @return builder
         * 
         */
        public Builder mirrorDstSlaveVpcId(@Nullable Output<String> mirrorDstSlaveVpcId) {
            $.mirrorDstSlaveVpcId = mirrorDstSlaveVpcId;
            return this;
        }

        /**
         * @param mirrorDstSlaveVpcId Mirroring back-to-source high-speed Channel standby station VpcId
         * 
         * @return builder
         * 
         */
        public Builder mirrorDstSlaveVpcId(String mirrorDstSlaveVpcId) {
            return mirrorDstSlaveVpcId(Output.of(mirrorDstSlaveVpcId));
        }

        /**
         * @param mirrorDstVpcId Mirror back-to-source high-speed Channel VpcId
         * 
         * @return builder
         * 
         */
        public Builder mirrorDstVpcId(@Nullable Output<String> mirrorDstVpcId) {
            $.mirrorDstVpcId = mirrorDstVpcId;
            return this;
        }

        /**
         * @param mirrorDstVpcId Mirror back-to-source high-speed Channel VpcId
         * 
         * @return builder
         * 
         */
        public Builder mirrorDstVpcId(String mirrorDstVpcId) {
            return mirrorDstVpcId(Output.of(mirrorDstVpcId));
        }

        /**
         * @param mirrorFollowRedirect If the result of the image back-to-source acquisition is 3xx, whether to continue to jump to the specified Location to obtain data. It takes effect only when the RedirectType is set to Mirror.
         * 
         * @return builder
         * 
         */
        public Builder mirrorFollowRedirect(@Nullable Output<Boolean> mirrorFollowRedirect) {
            $.mirrorFollowRedirect = mirrorFollowRedirect;
            return this;
        }

        /**
         * @param mirrorFollowRedirect If the result of the image back-to-source acquisition is 3xx, whether to continue to jump to the specified Location to obtain data. It takes effect only when the RedirectType is set to Mirror.
         * 
         * @return builder
         * 
         */
        public Builder mirrorFollowRedirect(Boolean mirrorFollowRedirect) {
            return mirrorFollowRedirect(Output.of(mirrorFollowRedirect));
        }

        /**
         * @param mirrorHeaders Specifies the Header carried when the image returns to the source. It takes effect only when the RedirectType is set to Mirror. See `mirror_headers` below.
         * 
         * @return builder
         * 
         */
        public Builder mirrorHeaders(@Nullable Output<BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersArgs> mirrorHeaders) {
            $.mirrorHeaders = mirrorHeaders;
            return this;
        }

        /**
         * @param mirrorHeaders Specifies the Header carried when the image returns to the source. It takes effect only when the RedirectType is set to Mirror. See `mirror_headers` below.
         * 
         * @return builder
         * 
         */
        public Builder mirrorHeaders(BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorHeadersArgs mirrorHeaders) {
            return mirrorHeaders(Output.of(mirrorHeaders));
        }

        /**
         * @param mirrorIsExpressTunnel Whether it is a mirror back-to-source high-speed Channel
         * 
         * @return builder
         * 
         */
        public Builder mirrorIsExpressTunnel(@Nullable Output<Boolean> mirrorIsExpressTunnel) {
            $.mirrorIsExpressTunnel = mirrorIsExpressTunnel;
            return this;
        }

        /**
         * @param mirrorIsExpressTunnel Whether it is a mirror back-to-source high-speed Channel
         * 
         * @return builder
         * 
         */
        public Builder mirrorIsExpressTunnel(Boolean mirrorIsExpressTunnel) {
            return mirrorIsExpressTunnel(Output.of(mirrorIsExpressTunnel));
        }

        /**
         * @param mirrorMultiAlternates Mirror back-to-source multi-source station configuration container. **NOTE:**: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See `mirror_multi_alternates` below.
         * 
         * @return builder
         * 
         */
        public Builder mirrorMultiAlternates(@Nullable Output<BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorMultiAlternatesArgs> mirrorMultiAlternates) {
            $.mirrorMultiAlternates = mirrorMultiAlternates;
            return this;
        }

        /**
         * @param mirrorMultiAlternates Mirror back-to-source multi-source station configuration container. **NOTE:**: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See `mirror_multi_alternates` below.
         * 
         * @return builder
         * 
         */
        public Builder mirrorMultiAlternates(BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorMultiAlternatesArgs mirrorMultiAlternates) {
            return mirrorMultiAlternates(Output.of(mirrorMultiAlternates));
        }

        /**
         * @param mirrorPassOriginalSlashes Transparent transmission/to source Station
         * 
         * @return builder
         * 
         */
        public Builder mirrorPassOriginalSlashes(@Nullable Output<Boolean> mirrorPassOriginalSlashes) {
            $.mirrorPassOriginalSlashes = mirrorPassOriginalSlashes;
            return this;
        }

        /**
         * @param mirrorPassOriginalSlashes Transparent transmission/to source Station
         * 
         * @return builder
         * 
         */
        public Builder mirrorPassOriginalSlashes(Boolean mirrorPassOriginalSlashes) {
            return mirrorPassOriginalSlashes(Output.of(mirrorPassOriginalSlashes));
        }

        /**
         * @param mirrorPassQueryString Same as PassQueryString and takes precedence over PassQueryString. It takes effect only when the RedirectType is set to Mirror.
         * 
         * @return builder
         * 
         */
        public Builder mirrorPassQueryString(@Nullable Output<Boolean> mirrorPassQueryString) {
            $.mirrorPassQueryString = mirrorPassQueryString;
            return this;
        }

        /**
         * @param mirrorPassQueryString Same as PassQueryString and takes precedence over PassQueryString. It takes effect only when the RedirectType is set to Mirror.
         * 
         * @return builder
         * 
         */
        public Builder mirrorPassQueryString(Boolean mirrorPassQueryString) {
            return mirrorPassQueryString(Output.of(mirrorPassQueryString));
        }

        /**
         * @param mirrorProxyPass Whether mirroring back to source does not save data
         * 
         * @return builder
         * 
         */
        public Builder mirrorProxyPass(@Nullable Output<Boolean> mirrorProxyPass) {
            $.mirrorProxyPass = mirrorProxyPass;
            return this;
        }

        /**
         * @param mirrorProxyPass Whether mirroring back to source does not save data
         * 
         * @return builder
         * 
         */
        public Builder mirrorProxyPass(Boolean mirrorProxyPass) {
            return mirrorProxyPass(Output.of(mirrorProxyPass));
        }

        /**
         * @param mirrorReturnHeaders The container that saves the image back to the source and returns the response header rule. **NOTE:**: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See `mirror_return_headers` below.
         * 
         * @return builder
         * 
         */
        public Builder mirrorReturnHeaders(@Nullable Output<BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorReturnHeadersArgs> mirrorReturnHeaders) {
            $.mirrorReturnHeaders = mirrorReturnHeaders;
            return this;
        }

        /**
         * @param mirrorReturnHeaders The container that saves the image back to the source and returns the response header rule. **NOTE:**: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See `mirror_return_headers` below.
         * 
         * @return builder
         * 
         */
        public Builder mirrorReturnHeaders(BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorReturnHeadersArgs mirrorReturnHeaders) {
            return mirrorReturnHeaders(Output.of(mirrorReturnHeaders));
        }

        /**
         * @param mirrorRole Roles used when mirroring back-to-source
         * 
         * @return builder
         * 
         */
        public Builder mirrorRole(@Nullable Output<String> mirrorRole) {
            $.mirrorRole = mirrorRole;
            return this;
        }

        /**
         * @param mirrorRole Roles used when mirroring back-to-source
         * 
         * @return builder
         * 
         */
        public Builder mirrorRole(String mirrorRole) {
            return mirrorRole(Output.of(mirrorRole));
        }

        /**
         * @param mirrorSaveOssMeta Mirror back-to-source back-to-source OSS automatically saves user metadata
         * 
         * @return builder
         * 
         */
        public Builder mirrorSaveOssMeta(@Nullable Output<Boolean> mirrorSaveOssMeta) {
            $.mirrorSaveOssMeta = mirrorSaveOssMeta;
            return this;
        }

        /**
         * @param mirrorSaveOssMeta Mirror back-to-source back-to-source OSS automatically saves user metadata
         * 
         * @return builder
         * 
         */
        public Builder mirrorSaveOssMeta(Boolean mirrorSaveOssMeta) {
            return mirrorSaveOssMeta(Output.of(mirrorSaveOssMeta));
        }

        /**
         * @param mirrorSni Transparent transmission of SNI
         * 
         * @return builder
         * 
         */
        public Builder mirrorSni(@Nullable Output<Boolean> mirrorSni) {
            $.mirrorSni = mirrorSni;
            return this;
        }

        /**
         * @param mirrorSni Transparent transmission of SNI
         * 
         * @return builder
         * 
         */
        public Builder mirrorSni(Boolean mirrorSni) {
            return mirrorSni(Output.of(mirrorSni));
        }

        /**
         * @param mirrorSwitchAllErrors It is used to judge the status of active-standby switching. The judgment logic of active-standby switching is that the source station returns an error. If MirrorSwitchAllErrors is true, it is considered a failure except the following status code: 200,206,301,302,303,307,404; If false, only the source Station Returns 5xx or times out is considered a failure.
         * 
         * @return builder
         * 
         */
        public Builder mirrorSwitchAllErrors(@Nullable Output<Boolean> mirrorSwitchAllErrors) {
            $.mirrorSwitchAllErrors = mirrorSwitchAllErrors;
            return this;
        }

        /**
         * @param mirrorSwitchAllErrors It is used to judge the status of active-standby switching. The judgment logic of active-standby switching is that the source station returns an error. If MirrorSwitchAllErrors is true, it is considered a failure except the following status code: 200,206,301,302,303,307,404; If false, only the source Station Returns 5xx or times out is considered a failure.
         * 
         * @return builder
         * 
         */
        public Builder mirrorSwitchAllErrors(Boolean mirrorSwitchAllErrors) {
            return mirrorSwitchAllErrors(Output.of(mirrorSwitchAllErrors));
        }

        /**
         * @param mirrorTaggings Save the label according to the parameters when saving the file from the mirror back to the source. **NOTE:**: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See `mirror_taggings` below.
         * 
         * @return builder
         * 
         */
        public Builder mirrorTaggings(@Nullable Output<BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorTaggingsArgs> mirrorTaggings) {
            $.mirrorTaggings = mirrorTaggings;
            return this;
        }

        /**
         * @param mirrorTaggings Save the label according to the parameters when saving the file from the mirror back to the source. **NOTE:**: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See `mirror_taggings` below.
         * 
         * @return builder
         * 
         */
        public Builder mirrorTaggings(BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorTaggingsArgs mirrorTaggings) {
            return mirrorTaggings(Output.of(mirrorTaggings));
        }

        /**
         * @param mirrorTunnelId Mirror back-to-source leased line back-to-source tunnel ID
         * 
         * @return builder
         * 
         */
        public Builder mirrorTunnelId(@Nullable Output<String> mirrorTunnelId) {
            $.mirrorTunnelId = mirrorTunnelId;
            return this;
        }

        /**
         * @param mirrorTunnelId Mirror back-to-source leased line back-to-source tunnel ID
         * 
         * @return builder
         * 
         */
        public Builder mirrorTunnelId(String mirrorTunnelId) {
            return mirrorTunnelId(Output.of(mirrorTunnelId));
        }

        /**
         * @param mirrorUrl The address of the origin of the image. It takes effect only when the RedirectType is set to Mirror. The origin address must start with http:// or https:// and end with a forward slash (/). OSS takes the Object name after the Origin address to form the origin URL.
         * 
         * @return builder
         * 
         */
        public Builder mirrorUrl(@Nullable Output<String> mirrorUrl) {
            $.mirrorUrl = mirrorUrl;
            return this;
        }

        /**
         * @param mirrorUrl The address of the origin of the image. It takes effect only when the RedirectType is set to Mirror. The origin address must start with http:// or https:// and end with a forward slash (/). OSS takes the Object name after the Origin address to form the origin URL.
         * 
         * @return builder
         * 
         */
        public Builder mirrorUrl(String mirrorUrl) {
            return mirrorUrl(Output.of(mirrorUrl));
        }

        /**
         * @param mirrorUrlProbe Mirror back-to-source Master-backup back-to-source switching decision URL
         * 
         * @return builder
         * 
         */
        public Builder mirrorUrlProbe(@Nullable Output<String> mirrorUrlProbe) {
            $.mirrorUrlProbe = mirrorUrlProbe;
            return this;
        }

        /**
         * @param mirrorUrlProbe Mirror back-to-source Master-backup back-to-source switching decision URL
         * 
         * @return builder
         * 
         */
        public Builder mirrorUrlProbe(String mirrorUrlProbe) {
            return mirrorUrlProbe(Output.of(mirrorUrlProbe));
        }

        /**
         * @param mirrorUrlSlave Mirror back-to-source primary backup back-to-source backup station URL
         * 
         * @return builder
         * 
         */
        public Builder mirrorUrlSlave(@Nullable Output<String> mirrorUrlSlave) {
            $.mirrorUrlSlave = mirrorUrlSlave;
            return this;
        }

        /**
         * @param mirrorUrlSlave Mirror back-to-source primary backup back-to-source backup station URL
         * 
         * @return builder
         * 
         */
        public Builder mirrorUrlSlave(String mirrorUrlSlave) {
            return mirrorUrlSlave(Output.of(mirrorUrlSlave));
        }

        /**
         * @param mirrorUserLastModified Whether the source station LastModifiedTime is used for the image back-to-source save file.
         * 
         * @return builder
         * 
         */
        public Builder mirrorUserLastModified(@Nullable Output<Boolean> mirrorUserLastModified) {
            $.mirrorUserLastModified = mirrorUserLastModified;
            return this;
        }

        /**
         * @param mirrorUserLastModified Whether the source station LastModifiedTime is used for the image back-to-source save file.
         * 
         * @return builder
         * 
         */
        public Builder mirrorUserLastModified(Boolean mirrorUserLastModified) {
            return mirrorUserLastModified(Output.of(mirrorUserLastModified));
        }

        /**
         * @param mirrorUsingRole Whether to use role for mirroring back to source
         * 
         * @return builder
         * 
         */
        public Builder mirrorUsingRole(@Nullable Output<Boolean> mirrorUsingRole) {
            $.mirrorUsingRole = mirrorUsingRole;
            return this;
        }

        /**
         * @param mirrorUsingRole Whether to use role for mirroring back to source
         * 
         * @return builder
         * 
         */
        public Builder mirrorUsingRole(Boolean mirrorUsingRole) {
            return mirrorUsingRole(Output.of(mirrorUsingRole));
        }

        /**
         * @param passQueryString Whether to carry the request parameters when executing the jump or mirror back-to-source rule. Did the user carry the request parameters when requesting OSS? a = B &amp; c = d, and set PassQueryString to true. If the rule is a 302 jump, this request parameter is added to the Location header of the jump. For example Location:example.com? a = B &amp; c = d, and the jump type is mirrored back-to-origin, this request parameter is also carried in the back-to-origin request initiated. Values: true, false (default)
         * 
         * @return builder
         * 
         */
        public Builder passQueryString(@Nullable Output<Boolean> passQueryString) {
            $.passQueryString = passQueryString;
            return this;
        }

        /**
         * @param passQueryString Whether to carry the request parameters when executing the jump or mirror back-to-source rule. Did the user carry the request parameters when requesting OSS? a = B &amp; c = d, and set PassQueryString to true. If the rule is a 302 jump, this request parameter is added to the Location header of the jump. For example Location:example.com? a = B &amp; c = d, and the jump type is mirrored back-to-origin, this request parameter is also carried in the back-to-origin request initiated. Values: true, false (default)
         * 
         * @return builder
         * 
         */
        public Builder passQueryString(Boolean passQueryString) {
            return passQueryString(Output.of(passQueryString));
        }

        /**
         * @param protocol The protocol at the time of the jump. It takes effect only when the RedirectType is set to External or AliCDN.
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol The protocol at the time of the jump. It takes effect only when the RedirectType is set to External or AliCDN.
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param redirectType Specifies the type of jump. The value range is as follows: Mirror: Mirror back to the source. External: External redirects, that is, OSS returns a 3xx request to redirect to another address. AliCDN: Alibaba Cloud CDN jump, mainly used for Alibaba Cloud CDN. Unlike External, OSS adds an additional Header. After recognizing this Header, Alibaba Cloud CDN redirects the data to the specified address and returns the obtained data to the user instead of returning the 3xx Redirection request to the user.
         * 
         * @return builder
         * 
         */
        public Builder redirectType(@Nullable Output<String> redirectType) {
            $.redirectType = redirectType;
            return this;
        }

        /**
         * @param redirectType Specifies the type of jump. The value range is as follows: Mirror: Mirror back to the source. External: External redirects, that is, OSS returns a 3xx request to redirect to another address. AliCDN: Alibaba Cloud CDN jump, mainly used for Alibaba Cloud CDN. Unlike External, OSS adds an additional Header. After recognizing this Header, Alibaba Cloud CDN redirects the data to the specified address and returns the obtained data to the user instead of returning the 3xx Redirection request to the user.
         * 
         * @return builder
         * 
         */
        public Builder redirectType(String redirectType) {
            return redirectType(Output.of(redirectType));
        }

        /**
         * @param replaceKeyPrefixWith The prefix of the Object name will be replaced with this value during Redirect. If the prefix is empty, this string is inserted in front of the Object name.
         * 
         * @return builder
         * 
         */
        public Builder replaceKeyPrefixWith(@Nullable Output<String> replaceKeyPrefixWith) {
            $.replaceKeyPrefixWith = replaceKeyPrefixWith;
            return this;
        }

        /**
         * @param replaceKeyPrefixWith The prefix of the Object name will be replaced with this value during Redirect. If the prefix is empty, this string is inserted in front of the Object name.
         * 
         * @return builder
         * 
         */
        public Builder replaceKeyPrefixWith(String replaceKeyPrefixWith) {
            return replaceKeyPrefixWith(Output.of(replaceKeyPrefixWith));
        }

        /**
         * @param replaceKeyWith During redirection, the Object name is replaced with the value specified by ReplaceKeyWith. You can set variables in ReplaceKeyWith. Currently, the supported variable is ${key}, which indicates the name of the Object in the request.
         * 
         * @return builder
         * 
         */
        public Builder replaceKeyWith(@Nullable Output<String> replaceKeyWith) {
            $.replaceKeyWith = replaceKeyWith;
            return this;
        }

        /**
         * @param replaceKeyWith During redirection, the Object name is replaced with the value specified by ReplaceKeyWith. You can set variables in ReplaceKeyWith. Currently, the supported variable is ${key}, which indicates the name of the Object in the request.
         * 
         * @return builder
         * 
         */
        public Builder replaceKeyWith(String replaceKeyWith) {
            return replaceKeyWith(Output.of(replaceKeyWith));
        }

        /**
         * @param transparentMirrorResponseCodes Mirror back-to-source transparent source station response code list
         * 
         * @return builder
         * 
         */
        public Builder transparentMirrorResponseCodes(@Nullable Output<String> transparentMirrorResponseCodes) {
            $.transparentMirrorResponseCodes = transparentMirrorResponseCodes;
            return this;
        }

        /**
         * @param transparentMirrorResponseCodes Mirror back-to-source transparent source station response code list
         * 
         * @return builder
         * 
         */
        public Builder transparentMirrorResponseCodes(String transparentMirrorResponseCodes) {
            return transparentMirrorResponseCodes(Output.of(transparentMirrorResponseCodes));
        }

        public BucketWebsiteRoutingRulesRoutingRuleRedirectArgs build() {
            return $;
        }
    }

}
