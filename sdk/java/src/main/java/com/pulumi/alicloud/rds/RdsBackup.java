// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rds;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.rds.RdsBackupArgs;
import com.pulumi.alicloud.rds.inputs.RdsBackupState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a RDS Backup resource.
 * 
 * For information about RDS Backup and how to use it, see [What is Backup](https://www.alibabacloud.com/help/en/rds/developer-reference/api-rds-2014-08-15-createbackup).
 * 
 * &gt; **NOTE:** Available since v1.149.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.rds.Instance;
 * import com.pulumi.alicloud.rds.InstanceArgs;
 * import com.pulumi.alicloud.rds.RdsBackup;
 * import com.pulumi.alicloud.rds.RdsBackupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleInstance = new Instance(&#34;exampleInstance&#34;, InstanceArgs.builder()        
 *             .engine(&#34;MySQL&#34;)
 *             .engineVersion(&#34;5.6&#34;)
 *             .instanceType(&#34;rds.mysql.t1.small&#34;)
 *             .instanceStorage(&#34;30&#34;)
 *             .instanceChargeType(&#34;Postpaid&#34;)
 *             .dbInstanceStorageType(&#34;local_ssd&#34;)
 *             .build());
 * 
 *         var exampleRdsBackup = new RdsBackup(&#34;exampleRdsBackup&#34;, RdsBackupArgs.builder()        
 *             .dbInstanceId(exampleInstance.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * RDS Backup can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:rds/rdsBackup:RdsBackup example &lt;db_instance_id&gt;:&lt;backup_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:rds/rdsBackup:RdsBackup")
public class RdsBackup extends com.pulumi.resources.CustomResource {
    /**
     * The backup id.
     * 
     */
    @Export(name="backupId", refs={String.class}, tree="[0]")
    private Output<String> backupId;

    /**
     * @return The backup id.
     * 
     */
    public Output<String> backupId() {
        return this.backupId;
    }
    /**
     * The type of backup that you want to perform. Default value: `Physical`. Valid values: `Logical`, `Physical` and `Snapshot`.
     * 
     */
    @Export(name="backupMethod", refs={String.class}, tree="[0]")
    private Output<String> backupMethod;

    /**
     * @return The type of backup that you want to perform. Default value: `Physical`. Valid values: `Logical`, `Physical` and `Snapshot`.
     * 
     */
    public Output<String> backupMethod() {
        return this.backupMethod;
    }
    /**
     * The policy that you want to use for the backup task. Valid values:
     * * **db**: specifies to perform a database-level backup.
     * * **instance**: specifies to perform an instance-level backup.
     * 
     */
    @Export(name="backupStrategy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> backupStrategy;

    /**
     * @return The policy that you want to use for the backup task. Valid values:
     * * **db**: specifies to perform a database-level backup.
     * * **instance**: specifies to perform an instance-level backup.
     * 
     */
    public Output<Optional<String>> backupStrategy() {
        return Codegen.optional(this.backupStrategy);
    }
    /**
     * The method that you want to use for the backup task. Default value: `Auto`. Valid values:
     * * **Auto**: specifies to automatically perform a full or incremental backup.
     * * **FullBackup**: specifies to perform a full backup.
     * 
     */
    @Export(name="backupType", refs={String.class}, tree="[0]")
    private Output<String> backupType;

    /**
     * @return The method that you want to use for the backup task. Default value: `Auto`. Valid values:
     * * **Auto**: specifies to automatically perform a full or incremental backup.
     * * **FullBackup**: specifies to perform a full backup.
     * 
     */
    public Output<String> backupType() {
        return this.backupType;
    }
    /**
     * The db instance id.
     * 
     */
    @Export(name="dbInstanceId", refs={String.class}, tree="[0]")
    private Output<String> dbInstanceId;

    /**
     * @return The db instance id.
     * 
     */
    public Output<String> dbInstanceId() {
        return this.dbInstanceId;
    }
    /**
     * The names of the databases whose data you want to back up. Separate the names of the databases with commas (,).
     * 
     */
    @Export(name="dbName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dbName;

    /**
     * @return The names of the databases whose data you want to back up. Separate the names of the databases with commas (,).
     * 
     */
    public Output<Optional<String>> dbName() {
        return Codegen.optional(this.dbName);
    }
    /**
     * Remove form state when resource cannot be deleted. Valid values: `true` and `false`.
     * 
     */
    @Export(name="removeFromState", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> removeFromState;

    /**
     * @return Remove form state when resource cannot be deleted. Valid values: `true` and `false`.
     * 
     */
    public Output<Optional<Boolean>> removeFromState() {
        return Codegen.optional(this.removeFromState);
    }
    /**
     * Indicates whether the data backup file can be deleted. Valid values: `Enabled` and `Disabled`.
     * 
     */
    @Export(name="storeStatus", refs={String.class}, tree="[0]")
    private Output<String> storeStatus;

    /**
     * @return Indicates whether the data backup file can be deleted. Valid values: `Enabled` and `Disabled`.
     * 
     */
    public Output<String> storeStatus() {
        return this.storeStatus;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RdsBackup(String name) {
        this(name, RdsBackupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RdsBackup(String name, RdsBackupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RdsBackup(String name, RdsBackupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:rds/rdsBackup:RdsBackup", name, args == null ? RdsBackupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RdsBackup(String name, Output<String> id, @Nullable RdsBackupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:rds/rdsBackup:RdsBackup", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RdsBackup get(String name, Output<String> id, @Nullable RdsBackupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RdsBackup(name, id, state, options);
    }
}
