// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.maxcompute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetProjectsProjectPropertiesEncryption {
    /**
     * @return Algorithm.
     * 
     */
    private String algorithm;
    /**
     * @return Whether to open.
     * 
     */
    private Boolean enable;
    /**
     * @return Encryption algorithm key.
     * 
     */
    private String key;

    private GetProjectsProjectPropertiesEncryption() {}
    /**
     * @return Algorithm.
     * 
     */
    public String algorithm() {
        return this.algorithm;
    }
    /**
     * @return Whether to open.
     * 
     */
    public Boolean enable() {
        return this.enable;
    }
    /**
     * @return Encryption algorithm key.
     * 
     */
    public String key() {
        return this.key;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProjectsProjectPropertiesEncryption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String algorithm;
        private Boolean enable;
        private String key;
        public Builder() {}
        public Builder(GetProjectsProjectPropertiesEncryption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.algorithm = defaults.algorithm;
    	      this.enable = defaults.enable;
    	      this.key = defaults.key;
        }

        @CustomType.Setter
        public Builder algorithm(String algorithm) {
            if (algorithm == null) {
              throw new MissingRequiredPropertyException("GetProjectsProjectPropertiesEncryption", "algorithm");
            }
            this.algorithm = algorithm;
            return this;
        }
        @CustomType.Setter
        public Builder enable(Boolean enable) {
            if (enable == null) {
              throw new MissingRequiredPropertyException("GetProjectsProjectPropertiesEncryption", "enable");
            }
            this.enable = enable;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetProjectsProjectPropertiesEncryption", "key");
            }
            this.key = key;
            return this;
        }
        public GetProjectsProjectPropertiesEncryption build() {
            final var _resultValue = new GetProjectsProjectPropertiesEncryption();
            _resultValue.algorithm = algorithm;
            _resultValue.enable = enable;
            _resultValue.key = key;
            return _resultValue;
        }
    }
}
