// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.edas;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.edas.K8sApplicationArgs;
import com.pulumi.alicloud.edas.inputs.K8sApplicationState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Create an EDAS k8s application.For information about EDAS K8s Application and how to use it, see [What is EDAS K8s Application](https://www.alibabacloud.com/help/en/edas/developer-reference/api-edas-2017-08-01-insertk8sapplication).
 * 
 * &gt; **NOTE:** Available since v1.105.0.
 * 
 * ## Import
 * 
 * EDAS k8s application can be imported as below, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:edas/k8sApplication:K8sApplication new_k8s_application application_id
 * ```
 * 
 */
@ResourceType(type="alicloud:edas/k8sApplication:K8sApplication")
public class K8sApplication extends com.pulumi.resources.CustomResource {
    /**
     * The description of the application
     * 
     */
    @Export(name="applicationDescriotion", type=String.class, parameters={})
    private Output</* @Nullable */ String> applicationDescriotion;

    /**
     * @return The description of the application
     * 
     */
    public Output<Optional<String>> applicationDescriotion() {
        return Codegen.optional(this.applicationDescriotion);
    }
    /**
     * The name of the application you want to create. Must start with character,supports numbers, letters and dashes (-), supports up to 36 characters
     * 
     */
    @Export(name="applicationName", type=String.class, parameters={})
    private Output<String> applicationName;

    /**
     * @return The name of the application you want to create. Must start with character,supports numbers, letters and dashes (-), supports up to 36 characters
     * 
     */
    public Output<String> applicationName() {
        return this.applicationName;
    }
    /**
     * The ID of the alicloud container service kubernetes cluster that you want to import to. You can call the ListCluster operation to query.
     * 
     */
    @Export(name="clusterId", type=String.class, parameters={})
    private Output<String> clusterId;

    /**
     * @return The ID of the alicloud container service kubernetes cluster that you want to import to. You can call the ListCluster operation to query.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }
    /**
     * The set command, if set, will replace the startup command in the mirror when the mirror is started.
     * 
     */
    @Export(name="command", type=String.class, parameters={})
    private Output</* @Nullable */ String> command;

    /**
     * @return The set command, if set, will replace the startup command in the mirror when the mirror is started.
     * 
     */
    public Output<Optional<String>> command() {
        return Codegen.optional(this.command);
    }
    /**
     * Used in combination with the command, the parameter of the command is a JsonArray string in the format: `[{&#34;argument&#34;:&#34;-c&#34;},{&#34;argument&#34;:&#34;test&#34;}]`. Among them, -c and test are two parameters that need to be set.
     * 
     */
    @Export(name="commandArgs", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> commandArgs;

    /**
     * @return Used in combination with the command, the parameter of the command is a JsonArray string in the format: `[{&#34;argument&#34;:&#34;-c&#34;},{&#34;argument&#34;:&#34;test&#34;}]`. Among them, -c and test are two parameters that need to be set.
     * 
     */
    public Output<Optional<List<String>>> commandArgs() {
        return Codegen.optional(this.commandArgs);
    }
    /**
     * EDAS-Container version that the deployed package depends on. Image does not support this parameter.
     * 
     */
    @Export(name="edasContainerVersion", type=String.class, parameters={})
    private Output</* @Nullable */ String> edasContainerVersion;

    /**
     * @return EDAS-Container version that the deployed package depends on. Image does not support this parameter.
     * 
     */
    public Output<Optional<String>> edasContainerVersion() {
        return Codegen.optional(this.edasContainerVersion);
    }
    /**
     * Deployment environment variables, the format must conform to the JSON object array, such as: `{&#34;name&#34;:&#34;x&#34;,&#34;value&#34;:&#34;y&#34;},{&#34;name&#34;:&#34;x2&#34;,&#34;value&#34;:&#34;y2&#34;}`, If you want to cancel the configuration, you need to set an empty JSON array &#34;&#34; to indicate no configuration.
     * 
     */
    @Export(name="envs", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> envs;

    /**
     * @return Deployment environment variables, the format must conform to the JSON object array, such as: `{&#34;name&#34;:&#34;x&#34;,&#34;value&#34;:&#34;y&#34;},{&#34;name&#34;:&#34;x2&#34;,&#34;value&#34;:&#34;y2&#34;}`, If you want to cancel the configuration, you need to set an empty JSON array &#34;&#34; to indicate no configuration.
     * 
     */
    public Output<Optional<Map<String,String>>> envs() {
        return Codegen.optional(this.envs);
    }
    /**
     * Mirror address. When the package_type is set to &#39;Image&#39;, this parameter item is required.
     * 
     */
    @Export(name="imageUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> imageUrl;

    /**
     * @return Mirror address. When the package_type is set to &#39;Image&#39;, this parameter item is required.
     * 
     */
    public Output<Optional<String>> imageUrl() {
        return Codegen.optional(this.imageUrl);
    }
    /**
     * Public network SLB ID. If not configured, EDAS will automatically purchase a new SLB for the user.
     * It has been deprecated, and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
     * 
     * @deprecated
     * Field &#39;internet_slb_id&#39; has been deprecated, New Resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it
     * 
     */
    @Deprecated /* Field 'internet_slb_id' has been deprecated, New Resource 'alicloud_edas_k8s_slb_attachment' replaces it */
    @Export(name="internetSlbId", type=String.class, parameters={})
    private Output</* @Nullable */ String> internetSlbId;

    /**
     * @return Public network SLB ID. If not configured, EDAS will automatically purchase a new SLB for the user.
     * It has been deprecated, and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
     * 
     */
    public Output<Optional<String>> internetSlbId() {
        return Codegen.optional(this.internetSlbId);
    }
    /**
     * The public network SLB front-end port, range 1~65535. It has been deprecated and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
     * 
     * @deprecated
     * Field &#39;internet_slb_port&#39; has been deprecated, New Resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it
     * 
     */
    @Deprecated /* Field 'internet_slb_port' has been deprecated, New Resource 'alicloud_edas_k8s_slb_attachment' replaces it */
    @Export(name="internetSlbPort", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> internetSlbPort;

    /**
     * @return The public network SLB front-end port, range 1~65535. It has been deprecated and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
     * 
     */
    public Output<Optional<Integer>> internetSlbPort() {
        return Codegen.optional(this.internetSlbPort);
    }
    /**
     * The public network SLB protocol supports TCP, HTTP and HTTPS protocols. It has been deprecated, and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
     * 
     * @deprecated
     * Field &#39;internet_slb_protocol&#39; has been deprecated, New Resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it
     * 
     */
    @Deprecated /* Field 'internet_slb_protocol' has been deprecated, New Resource 'alicloud_edas_k8s_slb_attachment' replaces it */
    @Export(name="internetSlbProtocol", type=String.class, parameters={})
    private Output</* @Nullable */ String> internetSlbProtocol;

    /**
     * @return The public network SLB protocol supports TCP, HTTP and HTTPS protocols. It has been deprecated, and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
     * 
     */
    public Output<Optional<String>> internetSlbProtocol() {
        return Codegen.optional(this.internetSlbProtocol);
    }
    /**
     * The private SLB back-end port, is also the service port of the application, ranging from 1 to 65535.
     * It has been deprecated, and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
     * 
     * @deprecated
     * Field &#39;internet_target_port&#39; has been deprecated, New Resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it
     * 
     */
    @Deprecated /* Field 'internet_target_port' has been deprecated, New Resource 'alicloud_edas_k8s_slb_attachment' replaces it */
    @Export(name="internetTargetPort", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> internetTargetPort;

    /**
     * @return The private SLB back-end port, is also the service port of the application, ranging from 1 to 65535.
     * It has been deprecated, and new resource &#39;alicloud_edas_k8s_slb_attachment&#39; replaces it.
     * 
     */
    public Output<Optional<Integer>> internetTargetPort() {
        return Codegen.optional(this.internetTargetPort);
    }
    /**
     * The JDK version that the deployed package depends on. The optional parameter values are Open JDK 7 and Open JDK 8. Image does not support this parameter.
     * 
     */
    @Export(name="jdk", type=String.class, parameters={})
    private Output</* @Nullable */ String> jdk;

    /**
     * @return The JDK version that the deployed package depends on. The optional parameter values are Open JDK 7 and Open JDK 8. Image does not support this parameter.
     * 
     */
    public Output<Optional<String>> jdk() {
        return Codegen.optional(this.jdk);
    }
    /**
     * The CPU quota of the application instance during application operation. Unit: Number of millcores, set to 0 means unlimited, similar to request_cpu.
     * 
     */
    @Export(name="limitMCpu", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> limitMCpu;

    /**
     * @return The CPU quota of the application instance during application operation. Unit: Number of millcores, set to 0 means unlimited, similar to request_cpu.
     * 
     */
    public Output<Optional<Integer>> limitMCpu() {
        return Codegen.optional(this.limitMCpu);
    }
    /**
     * The memory limit of the application instance during application operation, unit: M.
     * 
     */
    @Export(name="limitMem", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> limitMem;

    /**
     * @return The memory limit of the application instance during application operation, unit: M.
     * 
     */
    public Output<Optional<Integer>> limitMem() {
        return Codegen.optional(this.limitMem);
    }
    /**
     * Container survival status monitoring, format such as: `{&#34;failureThreshold&#34;: 3,&#34;initialDelaySeconds&#34;: 5,&#34;successThreshold&#34;: 1,&#34;timeoutSeconds&#34;: 1,&#34;tcpSocket&#34;:{&#34;host&#34;:&#34;&#34;, &#34;port&#34;:8080} }`.
     * 
     */
    @Export(name="liveness", type=String.class, parameters={})
    private Output</* @Nullable */ String> liveness;

    /**
     * @return Container survival status monitoring, format such as: `{&#34;failureThreshold&#34;: 3,&#34;initialDelaySeconds&#34;: 5,&#34;successThreshold&#34;: 1,&#34;timeoutSeconds&#34;: 1,&#34;tcpSocket&#34;:{&#34;host&#34;:&#34;&#34;, &#34;port&#34;:8080} }`.
     * 
     */
    public Output<Optional<String>> liveness() {
        return Codegen.optional(this.liveness);
    }
    /**
     * The configuration of the host file mounted to the container. For example: `[{&#34;type&#34;:&#34;&#34;,&#34;nodePath&#34;:&#34;/localfiles&#34;,&#34;mountPath&#34;:&#34;/app/files&#34;},{&#34;type&#34;:&#34;Directory&#34;,&#34;nodePath&#34;:&#34;/mnt&#34;, &#34;mountPath&#34;:&#34;/app/storage&#34;}]`. Among them, nodePath is the host path; mountPath is the path in the container; type is the mount type.
     * 
     */
    @Export(name="localVolume", type=String.class, parameters={})
    private Output</* @Nullable */ String> localVolume;

    /**
     * @return The configuration of the host file mounted to the container. For example: `[{&#34;type&#34;:&#34;&#34;,&#34;nodePath&#34;:&#34;/localfiles&#34;,&#34;mountPath&#34;:&#34;/app/files&#34;},{&#34;type&#34;:&#34;Directory&#34;,&#34;nodePath&#34;:&#34;/mnt&#34;, &#34;mountPath&#34;:&#34;/app/storage&#34;}]`. Among them, nodePath is the host path; mountPath is the path in the container; type is the mount type.
     * 
     */
    public Output<Optional<String>> localVolume() {
        return Codegen.optional(this.localVolume);
    }
    /**
     * The ID corresponding to the EDAS namespace, the non-default namespace must be filled in.
     * 
     */
    @Export(name="logicalRegionId", type=String.class, parameters={})
    private Output</* @Nullable */ String> logicalRegionId;

    /**
     * @return The ID corresponding to the EDAS namespace, the non-default namespace must be filled in.
     * 
     */
    public Output<Optional<String>> logicalRegionId() {
        return Codegen.optional(this.logicalRegionId);
    }
    /**
     * Mount configuration description, as a serialized JSON. For example: `[{&#34;nasPath&#34;: &#34;/k8s&#34;,&#34;mountPath&#34;: &#34;/mnt&#34;},{&#34;nasPath&#34;: &#34;/files&#34;,&#34;mountPath&#34;: &#34;/app/files&#34;}]`. Among them, nasPath refers to the file storage path; mountPath refers to the path mounted in the container.
     * 
     */
    @Export(name="mountDescs", type=String.class, parameters={})
    private Output</* @Nullable */ String> mountDescs;

    /**
     * @return Mount configuration description, as a serialized JSON. For example: `[{&#34;nasPath&#34;: &#34;/k8s&#34;,&#34;mountPath&#34;: &#34;/mnt&#34;},{&#34;nasPath&#34;: &#34;/files&#34;,&#34;mountPath&#34;: &#34;/app/files&#34;}]`. Among them, nasPath refers to the file storage path; mountPath refers to the path mounted in the container.
     * 
     */
    public Output<Optional<String>> mountDescs() {
        return Codegen.optional(this.mountDescs);
    }
    /**
     * The namespace of the K8s cluster, it will determine which K8s namespace your application is deployed in. The default is &#39;default&#39;.
     * 
     */
    @Export(name="namespace", type=String.class, parameters={})
    private Output</* @Nullable */ String> namespace;

    /**
     * @return The namespace of the K8s cluster, it will determine which K8s namespace your application is deployed in. The default is &#39;default&#39;.
     * 
     */
    public Output<Optional<String>> namespace() {
        return Codegen.optional(this.namespace);
    }
    /**
     * The ID of the mounted NAS must be in the same region as the cluster. It must have an available mount point creation quota, or its mount point must be on a switch in the VPC. If it is not filled in and the mountDescs field exists, a NAS will be automatically purchased and mounted on the switch in the VPC by default.
     * 
     */
    @Export(name="nasId", type=String.class, parameters={})
    private Output</* @Nullable */ String> nasId;

    /**
     * @return The ID of the mounted NAS must be in the same region as the cluster. It must have an available mount point creation quota, or its mount point must be on a switch in the VPC. If it is not filled in and the mountDescs field exists, a NAS will be automatically purchased and mounted on the switch in the VPC by default.
     * 
     */
    public Output<Optional<String>> nasId() {
        return Codegen.optional(this.nasId);
    }
    /**
     * Application package type. Optional parameter values include: FatJar, WAR and Image.
     * 
     */
    @Export(name="packageType", type=String.class, parameters={})
    private Output</* @Nullable */ String> packageType;

    /**
     * @return Application package type. Optional parameter values include: FatJar, WAR and Image.
     * 
     */
    public Output<Optional<String>> packageType() {
        return Codegen.optional(this.packageType);
    }
    /**
     * The url of the package to deploy.Applications deployed through FatJar or WAR packages need to configure it.
     * 
     */
    @Export(name="packageUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> packageUrl;

    /**
     * @return The url of the package to deploy.Applications deployed through FatJar or WAR packages need to configure it.
     * 
     */
    public Output<Optional<String>> packageUrl() {
        return Codegen.optional(this.packageUrl);
    }
    /**
     * The version number of the deployment package. WAR and FatJar types are required. Please customize its meaning.
     * 
     */
    @Export(name="packageVersion", type=String.class, parameters={})
    private Output<String> packageVersion;

    /**
     * @return The version number of the deployment package. WAR and FatJar types are required. Please customize its meaning.
     * 
     */
    public Output<String> packageVersion() {
        return this.packageVersion;
    }
    /**
     * Execute script after startup
     * 
     */
    @Export(name="postStart", type=String.class, parameters={})
    private Output</* @Nullable */ String> postStart;

    /**
     * @return Execute script after startup
     * 
     */
    public Output<Optional<String>> postStart() {
        return Codegen.optional(this.postStart);
    }
    /**
     * Execute script before stopping
     * 
     */
    @Export(name="preStop", type=String.class, parameters={})
    private Output</* @Nullable */ String> preStop;

    /**
     * @return Execute script before stopping
     * 
     */
    public Output<Optional<String>> preStop() {
        return Codegen.optional(this.preStop);
    }
    /**
     * Container service status check. If the check fails, the traffic passing through K8s Service will not be transferred to the container. The format is: `{&#34;failureThreshold&#34;: 3,&#34;initialDelaySeconds&#34;: 5,&#34;successThreshold&#34;: 1,&#34;timeoutSeconds&#34;: 1, &#34;httpGet&#34;: {&#34;path&#34;: &#34;/consumer&#34;,&#34;port&#34;: 8080,&#34;scheme&#34;: &#34;HTTP&#34;,&#34;httpHeaders&#34;: [{&#34;name&#34;: &#34;test&#34;,&#34;value&#34;: &#34;testvalue&#34;} ]}}`.
     * 
     */
    @Export(name="readiness", type=String.class, parameters={})
    private Output</* @Nullable */ String> readiness;

    /**
     * @return Container service status check. If the check fails, the traffic passing through K8s Service will not be transferred to the container. The format is: `{&#34;failureThreshold&#34;: 3,&#34;initialDelaySeconds&#34;: 5,&#34;successThreshold&#34;: 1,&#34;timeoutSeconds&#34;: 1, &#34;httpGet&#34;: {&#34;path&#34;: &#34;/consumer&#34;,&#34;port&#34;: 8080,&#34;scheme&#34;: &#34;HTTP&#34;,&#34;httpHeaders&#34;: [{&#34;name&#34;: &#34;test&#34;,&#34;value&#34;: &#34;testvalue&#34;} ]}}`.
     * 
     */
    public Output<Optional<String>> readiness() {
        return Codegen.optional(this.readiness);
    }
    /**
     * Number of application instances.
     * 
     */
    @Export(name="replicas", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> replicas;

    /**
     * @return Number of application instances.
     * 
     */
    public Output<Optional<Integer>> replicas() {
        return Codegen.optional(this.replicas);
    }
    /**
     * When the application is created, the CPU quota of the application instance, unit: number of millcores, similar to request_cpu
     * 
     */
    @Export(name="requestsMCpu", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> requestsMCpu;

    /**
     * @return When the application is created, the CPU quota of the application instance, unit: number of millcores, similar to request_cpu
     * 
     */
    public Output<Optional<Integer>> requestsMCpu() {
        return Codegen.optional(this.requestsMCpu);
    }
    /**
     * When the application is created, the memory limit of the application instance, unit: M. When set to 0, it means unlimited.
     * 
     */
    @Export(name="requestsMem", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> requestsMem;

    /**
     * @return When the application is created, the memory limit of the application instance, unit: M. When set to 0, it means unlimited.
     * 
     */
    public Output<Optional<Integer>> requestsMem() {
        return Codegen.optional(this.requestsMem);
    }
    /**
     * The Tomcat version that the deployment package depends on. Applicable to Spring Cloud and Dubbo applications deployed through WAR packages. Image does not support this parameter.
     * 
     */
    @Export(name="webContainer", type=String.class, parameters={})
    private Output</* @Nullable */ String> webContainer;

    /**
     * @return The Tomcat version that the deployment package depends on. Applicable to Spring Cloud and Dubbo applications deployed through WAR packages. Image does not support this parameter.
     * 
     */
    public Output<Optional<String>> webContainer() {
        return Codegen.optional(this.webContainer);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public K8sApplication(String name) {
        this(name, K8sApplicationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public K8sApplication(String name, K8sApplicationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public K8sApplication(String name, K8sApplicationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:edas/k8sApplication:K8sApplication", name, args == null ? K8sApplicationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private K8sApplication(String name, Output<String> id, @Nullable K8sApplicationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:edas/k8sApplication:K8sApplication", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static K8sApplication get(String name, Output<String> id, @Nullable K8sApplicationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new K8sApplication(name, id, state, options);
    }
}
