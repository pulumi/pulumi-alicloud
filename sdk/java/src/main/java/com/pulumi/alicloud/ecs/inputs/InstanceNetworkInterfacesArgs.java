// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceNetworkInterfacesArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceNetworkInterfacesArgs Empty = new InstanceNetworkInterfacesArgs();

    /**
     * The index of the network card for Secondary ENI.
     * 
     */
    @Import(name="networkCardIndex")
    private @Nullable Output<Integer> networkCardIndex;

    /**
     * @return The index of the network card for Secondary ENI.
     * 
     */
    public Optional<Output<Integer>> networkCardIndex() {
        return Optional.ofNullable(this.networkCardIndex);
    }

    /**
     * The ID of the Secondary ENI.
     * 
     */
    @Import(name="networkInterfaceId")
    private @Nullable Output<String> networkInterfaceId;

    /**
     * @return The ID of the Secondary ENI.
     * 
     */
    public Optional<Output<String>> networkInterfaceId() {
        return Optional.ofNullable(this.networkInterfaceId);
    }

    /**
     * The communication mode of the Secondary ENI. Default value: `Standard`. Valid values:
     * - `Standard`: Uses the TCP communication mode.
     * - `HighPerformance`: Uses the remote direct memory access (RDMA) communication mode with Elastic RDMA Interface (ERI) enabled.
     * 
     */
    @Import(name="networkInterfaceTrafficMode")
    private @Nullable Output<String> networkInterfaceTrafficMode;

    /**
     * @return The communication mode of the Secondary ENI. Default value: `Standard`. Valid values:
     * - `Standard`: Uses the TCP communication mode.
     * - `HighPerformance`: Uses the remote direct memory access (RDMA) communication mode with Elastic RDMA Interface (ERI) enabled.
     * 
     */
    public Optional<Output<String>> networkInterfaceTrafficMode() {
        return Optional.ofNullable(this.networkInterfaceTrafficMode);
    }

    /**
     * The number of queues supported by the ERI.
     * 
     */
    @Import(name="queuePairNumber")
    private @Nullable Output<Integer> queuePairNumber;

    /**
     * @return The number of queues supported by the ERI.
     * 
     */
    public Optional<Output<Integer>> queuePairNumber() {
        return Optional.ofNullable(this.queuePairNumber);
    }

    /**
     * The ID of security group N to which to assign Secondary ENI N.
     * 
     */
    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    /**
     * @return The ID of security group N to which to assign Secondary ENI N.
     * 
     */
    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    /**
     * The ID of the vSwitch to which to connect Secondary ENI N.
     * 
     */
    @Import(name="vswitchId")
    private @Nullable Output<String> vswitchId;

    /**
     * @return The ID of the vSwitch to which to connect Secondary ENI N.
     * 
     */
    public Optional<Output<String>> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    private InstanceNetworkInterfacesArgs() {}

    private InstanceNetworkInterfacesArgs(InstanceNetworkInterfacesArgs $) {
        this.networkCardIndex = $.networkCardIndex;
        this.networkInterfaceId = $.networkInterfaceId;
        this.networkInterfaceTrafficMode = $.networkInterfaceTrafficMode;
        this.queuePairNumber = $.queuePairNumber;
        this.securityGroupIds = $.securityGroupIds;
        this.vswitchId = $.vswitchId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceNetworkInterfacesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceNetworkInterfacesArgs $;

        public Builder() {
            $ = new InstanceNetworkInterfacesArgs();
        }

        public Builder(InstanceNetworkInterfacesArgs defaults) {
            $ = new InstanceNetworkInterfacesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkCardIndex The index of the network card for Secondary ENI.
         * 
         * @return builder
         * 
         */
        public Builder networkCardIndex(@Nullable Output<Integer> networkCardIndex) {
            $.networkCardIndex = networkCardIndex;
            return this;
        }

        /**
         * @param networkCardIndex The index of the network card for Secondary ENI.
         * 
         * @return builder
         * 
         */
        public Builder networkCardIndex(Integer networkCardIndex) {
            return networkCardIndex(Output.of(networkCardIndex));
        }

        /**
         * @param networkInterfaceId The ID of the Secondary ENI.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaceId(@Nullable Output<String> networkInterfaceId) {
            $.networkInterfaceId = networkInterfaceId;
            return this;
        }

        /**
         * @param networkInterfaceId The ID of the Secondary ENI.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaceId(String networkInterfaceId) {
            return networkInterfaceId(Output.of(networkInterfaceId));
        }

        /**
         * @param networkInterfaceTrafficMode The communication mode of the Secondary ENI. Default value: `Standard`. Valid values:
         * - `Standard`: Uses the TCP communication mode.
         * - `HighPerformance`: Uses the remote direct memory access (RDMA) communication mode with Elastic RDMA Interface (ERI) enabled.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaceTrafficMode(@Nullable Output<String> networkInterfaceTrafficMode) {
            $.networkInterfaceTrafficMode = networkInterfaceTrafficMode;
            return this;
        }

        /**
         * @param networkInterfaceTrafficMode The communication mode of the Secondary ENI. Default value: `Standard`. Valid values:
         * - `Standard`: Uses the TCP communication mode.
         * - `HighPerformance`: Uses the remote direct memory access (RDMA) communication mode with Elastic RDMA Interface (ERI) enabled.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaceTrafficMode(String networkInterfaceTrafficMode) {
            return networkInterfaceTrafficMode(Output.of(networkInterfaceTrafficMode));
        }

        /**
         * @param queuePairNumber The number of queues supported by the ERI.
         * 
         * @return builder
         * 
         */
        public Builder queuePairNumber(@Nullable Output<Integer> queuePairNumber) {
            $.queuePairNumber = queuePairNumber;
            return this;
        }

        /**
         * @param queuePairNumber The number of queues supported by the ERI.
         * 
         * @return builder
         * 
         */
        public Builder queuePairNumber(Integer queuePairNumber) {
            return queuePairNumber(Output.of(queuePairNumber));
        }

        /**
         * @param securityGroupIds The ID of security group N to which to assign Secondary ENI N.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        /**
         * @param securityGroupIds The ID of security group N to which to assign Secondary ENI N.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        /**
         * @param securityGroupIds The ID of security group N to which to assign Secondary ENI N.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        /**
         * @param vswitchId The ID of the vSwitch to which to connect Secondary ENI N.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(@Nullable Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId The ID of the vSwitch to which to connect Secondary ENI N.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        public InstanceNetworkInterfacesArgs build() {
            return $;
        }
    }

}
