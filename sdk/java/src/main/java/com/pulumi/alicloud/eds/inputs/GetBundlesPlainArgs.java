// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eds.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetBundlesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBundlesPlainArgs Empty = new GetBundlesPlainArgs();

    @Import(name="bundleIds")
    private @Nullable List<String> bundleIds;

    public Optional<List<String>> bundleIds() {
        return Optional.ofNullable(this.bundleIds);
    }

    /**
     * The bundle type of  the bundle. Valid values: `SYSTEM`,`CUSTOM`.
     * 
     */
    @Import(name="bundleType")
    private @Nullable String bundleType;

    /**
     * @return The bundle type of  the bundle. Valid values: `SYSTEM`,`CUSTOM`.
     * 
     */
    public Optional<String> bundleType() {
        return Optional.ofNullable(this.bundleType);
    }

    /**
     * A list of Bundle IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable List<String> ids;

    /**
     * @return A list of Bundle IDs.
     * 
     */
    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * A regex string to filter results by Bundle name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable String nameRegex;

    /**
     * @return A regex string to filter results by Bundle name.
     * 
     */
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    private GetBundlesPlainArgs() {}

    private GetBundlesPlainArgs(GetBundlesPlainArgs $) {
        this.bundleIds = $.bundleIds;
        this.bundleType = $.bundleType;
        this.ids = $.ids;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBundlesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBundlesPlainArgs $;

        public Builder() {
            $ = new GetBundlesPlainArgs();
        }

        public Builder(GetBundlesPlainArgs defaults) {
            $ = new GetBundlesPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder bundleIds(@Nullable List<String> bundleIds) {
            $.bundleIds = bundleIds;
            return this;
        }

        public Builder bundleIds(String... bundleIds) {
            return bundleIds(List.of(bundleIds));
        }

        /**
         * @param bundleType The bundle type of  the bundle. Valid values: `SYSTEM`,`CUSTOM`.
         * 
         * @return builder
         * 
         */
        public Builder bundleType(@Nullable String bundleType) {
            $.bundleType = bundleType;
            return this;
        }

        /**
         * @param ids A list of Bundle IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Bundle IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param nameRegex A regex string to filter results by Bundle name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable String nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        public GetBundlesPlainArgs build() {
            return $;
        }
    }

}
