// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.outputs;

import com.pulumi.alicloud.ecs.outputs.GetEcsNetworkInterfacesInterface;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEcsNetworkInterfacesResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<String> ids;
    /**
     * @return The instance id.
     * 
     */
    private @Nullable String instanceId;
    /**
     * @return A list of Ecs Network Interfaces. Each element contains the following attributes:
     * 
     */
    private List<GetEcsNetworkInterfacesInterface> interfaces;
    /**
     * @return The network interface name.
     * 
     * @deprecated
     * Field &#39;name&#39; has been deprecated from provider version 1.123.1. New field &#39;network_interface_name&#39; instead
     * 
     */
    @Deprecated /* Field 'name' has been deprecated from provider version 1.123.1. New field 'network_interface_name' instead */
    private @Nullable String name;
    private @Nullable String nameRegex;
    /**
     * @return A list of Network Interface names.
     * 
     */
    private List<String> names;
    /**
     * @return The network interface name.
     * 
     */
    private @Nullable String networkInterfaceName;
    private @Nullable String outputFile;
    /**
     * @return The primary private IP address of the ENI.
     * 
     */
    private @Nullable String primaryIpAddress;
    /**
     * @return The primary private IP address of the ENI.
     * 
     * @deprecated
     * Field &#39;private_ip&#39; has been deprecated from provider version 1.123.1. New field &#39;primary_ip_address&#39; instead
     * 
     */
    @Deprecated /* Field 'private_ip' has been deprecated from provider version 1.123.1. New field 'primary_ip_address' instead */
    private @Nullable String privateIp;
    /**
     * @return The resource group id.
     * 
     */
    private @Nullable String resourceGroupId;
    private @Nullable String securityGroupId;
    /**
     * @return Whether the user of the elastic network card is a cloud product or a virtual vendor.
     * 
     */
    private @Nullable Boolean serviceManaged;
    /**
     * @return The status of the ENI.
     * 
     */
    private @Nullable String status;
    /**
     * @return The tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the ENI.
     * 
     */
    private @Nullable String type;
    /**
     * @return The Vpc Id.
     * 
     */
    private @Nullable String vpcId;
    /**
     * @return The vswitch id.
     * 
     */
    private @Nullable String vswitchId;

    private GetEcsNetworkInterfacesResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    /**
     * @return The instance id.
     * 
     */
    public Optional<String> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }
    /**
     * @return A list of Ecs Network Interfaces. Each element contains the following attributes:
     * 
     */
    public List<GetEcsNetworkInterfacesInterface> interfaces() {
        return this.interfaces;
    }
    /**
     * @return The network interface name.
     * 
     * @deprecated
     * Field &#39;name&#39; has been deprecated from provider version 1.123.1. New field &#39;network_interface_name&#39; instead
     * 
     */
    @Deprecated /* Field 'name' has been deprecated from provider version 1.123.1. New field 'network_interface_name' instead */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    /**
     * @return A list of Network Interface names.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    /**
     * @return The network interface name.
     * 
     */
    public Optional<String> networkInterfaceName() {
        return Optional.ofNullable(this.networkInterfaceName);
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return The primary private IP address of the ENI.
     * 
     */
    public Optional<String> primaryIpAddress() {
        return Optional.ofNullable(this.primaryIpAddress);
    }
    /**
     * @return The primary private IP address of the ENI.
     * 
     * @deprecated
     * Field &#39;private_ip&#39; has been deprecated from provider version 1.123.1. New field &#39;primary_ip_address&#39; instead
     * 
     */
    @Deprecated /* Field 'private_ip' has been deprecated from provider version 1.123.1. New field 'primary_ip_address' instead */
    public Optional<String> privateIp() {
        return Optional.ofNullable(this.privateIp);
    }
    /**
     * @return The resource group id.
     * 
     */
    public Optional<String> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }
    public Optional<String> securityGroupId() {
        return Optional.ofNullable(this.securityGroupId);
    }
    /**
     * @return Whether the user of the elastic network card is a cloud product or a virtual vendor.
     * 
     */
    public Optional<Boolean> serviceManaged() {
        return Optional.ofNullable(this.serviceManaged);
    }
    /**
     * @return The status of the ENI.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the ENI.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return The Vpc Id.
     * 
     */
    public Optional<String> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }
    /**
     * @return The vswitch id.
     * 
     */
    public Optional<String> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEcsNetworkInterfacesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<String> ids;
        private @Nullable String instanceId;
        private List<GetEcsNetworkInterfacesInterface> interfaces;
        private @Nullable String name;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String networkInterfaceName;
        private @Nullable String outputFile;
        private @Nullable String primaryIpAddress;
        private @Nullable String privateIp;
        private @Nullable String resourceGroupId;
        private @Nullable String securityGroupId;
        private @Nullable Boolean serviceManaged;
        private @Nullable String status;
        private @Nullable Map<String,String> tags;
        private @Nullable String type;
        private @Nullable String vpcId;
        private @Nullable String vswitchId;
        public Builder() {}
        public Builder(GetEcsNetworkInterfacesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.instanceId = defaults.instanceId;
    	      this.interfaces = defaults.interfaces;
    	      this.name = defaults.name;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.networkInterfaceName = defaults.networkInterfaceName;
    	      this.outputFile = defaults.outputFile;
    	      this.primaryIpAddress = defaults.primaryIpAddress;
    	      this.privateIp = defaults.privateIp;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.securityGroupId = defaults.securityGroupId;
    	      this.serviceManaged = defaults.serviceManaged;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.vpcId = defaults.vpcId;
    	      this.vswitchId = defaults.vswitchId;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEcsNetworkInterfacesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            if (ids == null) {
              throw new MissingRequiredPropertyException("GetEcsNetworkInterfacesResult", "ids");
            }
            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder instanceId(@Nullable String instanceId) {

            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder interfaces(List<GetEcsNetworkInterfacesInterface> interfaces) {
            if (interfaces == null) {
              throw new MissingRequiredPropertyException("GetEcsNetworkInterfacesResult", "interfaces");
            }
            this.interfaces = interfaces;
            return this;
        }
        public Builder interfaces(GetEcsNetworkInterfacesInterface... interfaces) {
            return interfaces(List.of(interfaces));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {

            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder names(List<String> names) {
            if (names == null) {
              throw new MissingRequiredPropertyException("GetEcsNetworkInterfacesResult", "names");
            }
            this.names = names;
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder networkInterfaceName(@Nullable String networkInterfaceName) {

            this.networkInterfaceName = networkInterfaceName;
            return this;
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder primaryIpAddress(@Nullable String primaryIpAddress) {

            this.primaryIpAddress = primaryIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder privateIp(@Nullable String privateIp) {

            this.privateIp = privateIp;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupId(@Nullable String resourceGroupId) {

            this.resourceGroupId = resourceGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupId(@Nullable String securityGroupId) {

            this.securityGroupId = securityGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder serviceManaged(@Nullable Boolean serviceManaged) {

            this.serviceManaged = serviceManaged;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {

            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(@Nullable String vpcId) {

            this.vpcId = vpcId;
            return this;
        }
        @CustomType.Setter
        public Builder vswitchId(@Nullable String vswitchId) {

            this.vswitchId = vswitchId;
            return this;
        }
        public GetEcsNetworkInterfacesResult build() {
            final var _resultValue = new GetEcsNetworkInterfacesResult();
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.instanceId = instanceId;
            _resultValue.interfaces = interfaces;
            _resultValue.name = name;
            _resultValue.nameRegex = nameRegex;
            _resultValue.names = names;
            _resultValue.networkInterfaceName = networkInterfaceName;
            _resultValue.outputFile = outputFile;
            _resultValue.primaryIpAddress = primaryIpAddress;
            _resultValue.privateIp = privateIp;
            _resultValue.resourceGroupId = resourceGroupId;
            _resultValue.securityGroupId = securityGroupId;
            _resultValue.serviceManaged = serviceManaged;
            _resultValue.status = status;
            _resultValue.tags = tags;
            _resultValue.type = type;
            _resultValue.vpcId = vpcId;
            _resultValue.vswitchId = vswitchId;
            return _resultValue;
        }
    }
}
