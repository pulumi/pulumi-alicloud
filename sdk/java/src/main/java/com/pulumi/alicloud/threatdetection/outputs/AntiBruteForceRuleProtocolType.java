// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AntiBruteForceRuleProtocolType {
    /**
     * @return Whether to enable RDP interception. Default value: `on`. Valid values: `on`, `off`.
     * 
     */
    private @Nullable String rdp;
    /**
     * @return Whether to enable the SqlServer interception method. Default value: `off`. Valid values: `on`, `off`.
     * 
     */
    private @Nullable String sqlServer;
    /**
     * @return Whether to enable SSH interception. Default value: `on`. Valid values: `on`, `off`.
     * 
     */
    private @Nullable String ssh;

    private AntiBruteForceRuleProtocolType() {}
    /**
     * @return Whether to enable RDP interception. Default value: `on`. Valid values: `on`, `off`.
     * 
     */
    public Optional<String> rdp() {
        return Optional.ofNullable(this.rdp);
    }
    /**
     * @return Whether to enable the SqlServer interception method. Default value: `off`. Valid values: `on`, `off`.
     * 
     */
    public Optional<String> sqlServer() {
        return Optional.ofNullable(this.sqlServer);
    }
    /**
     * @return Whether to enable SSH interception. Default value: `on`. Valid values: `on`, `off`.
     * 
     */
    public Optional<String> ssh() {
        return Optional.ofNullable(this.ssh);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AntiBruteForceRuleProtocolType defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String rdp;
        private @Nullable String sqlServer;
        private @Nullable String ssh;
        public Builder() {}
        public Builder(AntiBruteForceRuleProtocolType defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.rdp = defaults.rdp;
    	      this.sqlServer = defaults.sqlServer;
    	      this.ssh = defaults.ssh;
        }

        @CustomType.Setter
        public Builder rdp(@Nullable String rdp) {

            this.rdp = rdp;
            return this;
        }
        @CustomType.Setter
        public Builder sqlServer(@Nullable String sqlServer) {

            this.sqlServer = sqlServer;
            return this;
        }
        @CustomType.Setter
        public Builder ssh(@Nullable String ssh) {

            this.ssh = ssh;
            return this;
        }
        public AntiBruteForceRuleProtocolType build() {
            final var _resultValue = new AntiBruteForceRuleProtocolType();
            _resultValue.rdp = rdp;
            _resultValue.sqlServer = sqlServer;
            _resultValue.ssh = ssh;
            return _resultValue;
        }
    }
}
