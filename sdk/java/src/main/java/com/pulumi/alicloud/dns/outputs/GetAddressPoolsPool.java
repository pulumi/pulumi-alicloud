// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dns.outputs;

import com.pulumi.alicloud.dns.outputs.GetAddressPoolsPoolAddress;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAddressPoolsPool {
    /**
     * @return The first ID of the resource.
     * 
     */
    private String addressPoolId;
    /**
     * @return The name of the address pool.
     * 
     */
    private String addressPoolName;
    /**
     * @return The address that you want to add to the address pool.
     * 
     */
    private List<GetAddressPoolsPoolAddress> addresses;
    /**
     * @return The time when the address pool was created.
     * 
     */
    private String createTime;
    /**
     * @return The timestamp that indicates when the address pool was created.
     * 
     */
    private String createTimestamp;
    /**
     * @return The ID of the Address Pool.
     * 
     */
    private String id;
    /**
     * @return The id of the instance.
     * 
     */
    private String instanceId;
    /**
     * @return The load balancing policy of the address pool.
     * 
     */
    private String lbaStrategy;
    /**
     * @return The ID of the health check task.
     * 
     */
    private String monitorConfigId;
    /**
     * @return Indicates whether health checks are configured.
     * 
     */
    private String monitorStatus;
    /**
     * @return The type of the address pool.
     * 
     */
    private String type;
    /**
     * @return The time when the address pool was updated.
     * 
     */
    private String updateTime;
    /**
     * @return The timestamp that indicates when the address pool was updated.
     * 
     */
    private String updateTimestamp;

    private GetAddressPoolsPool() {}
    /**
     * @return The first ID of the resource.
     * 
     */
    public String addressPoolId() {
        return this.addressPoolId;
    }
    /**
     * @return The name of the address pool.
     * 
     */
    public String addressPoolName() {
        return this.addressPoolName;
    }
    /**
     * @return The address that you want to add to the address pool.
     * 
     */
    public List<GetAddressPoolsPoolAddress> addresses() {
        return this.addresses;
    }
    /**
     * @return The time when the address pool was created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The timestamp that indicates when the address pool was created.
     * 
     */
    public String createTimestamp() {
        return this.createTimestamp;
    }
    /**
     * @return The ID of the Address Pool.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The id of the instance.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return The load balancing policy of the address pool.
     * 
     */
    public String lbaStrategy() {
        return this.lbaStrategy;
    }
    /**
     * @return The ID of the health check task.
     * 
     */
    public String monitorConfigId() {
        return this.monitorConfigId;
    }
    /**
     * @return Indicates whether health checks are configured.
     * 
     */
    public String monitorStatus() {
        return this.monitorStatus;
    }
    /**
     * @return The type of the address pool.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The time when the address pool was updated.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }
    /**
     * @return The timestamp that indicates when the address pool was updated.
     * 
     */
    public String updateTimestamp() {
        return this.updateTimestamp;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAddressPoolsPool defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String addressPoolId;
        private String addressPoolName;
        private List<GetAddressPoolsPoolAddress> addresses;
        private String createTime;
        private String createTimestamp;
        private String id;
        private String instanceId;
        private String lbaStrategy;
        private String monitorConfigId;
        private String monitorStatus;
        private String type;
        private String updateTime;
        private String updateTimestamp;
        public Builder() {}
        public Builder(GetAddressPoolsPool defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressPoolId = defaults.addressPoolId;
    	      this.addressPoolName = defaults.addressPoolName;
    	      this.addresses = defaults.addresses;
    	      this.createTime = defaults.createTime;
    	      this.createTimestamp = defaults.createTimestamp;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.lbaStrategy = defaults.lbaStrategy;
    	      this.monitorConfigId = defaults.monitorConfigId;
    	      this.monitorStatus = defaults.monitorStatus;
    	      this.type = defaults.type;
    	      this.updateTime = defaults.updateTime;
    	      this.updateTimestamp = defaults.updateTimestamp;
        }

        @CustomType.Setter
        public Builder addressPoolId(String addressPoolId) {
            if (addressPoolId == null) {
              throw new MissingRequiredPropertyException("GetAddressPoolsPool", "addressPoolId");
            }
            this.addressPoolId = addressPoolId;
            return this;
        }
        @CustomType.Setter
        public Builder addressPoolName(String addressPoolName) {
            if (addressPoolName == null) {
              throw new MissingRequiredPropertyException("GetAddressPoolsPool", "addressPoolName");
            }
            this.addressPoolName = addressPoolName;
            return this;
        }
        @CustomType.Setter
        public Builder addresses(List<GetAddressPoolsPoolAddress> addresses) {
            if (addresses == null) {
              throw new MissingRequiredPropertyException("GetAddressPoolsPool", "addresses");
            }
            this.addresses = addresses;
            return this;
        }
        public Builder addresses(GetAddressPoolsPoolAddress... addresses) {
            return addresses(List.of(addresses));
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetAddressPoolsPool", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder createTimestamp(String createTimestamp) {
            if (createTimestamp == null) {
              throw new MissingRequiredPropertyException("GetAddressPoolsPool", "createTimestamp");
            }
            this.createTimestamp = createTimestamp;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAddressPoolsPool", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetAddressPoolsPool", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder lbaStrategy(String lbaStrategy) {
            if (lbaStrategy == null) {
              throw new MissingRequiredPropertyException("GetAddressPoolsPool", "lbaStrategy");
            }
            this.lbaStrategy = lbaStrategy;
            return this;
        }
        @CustomType.Setter
        public Builder monitorConfigId(String monitorConfigId) {
            if (monitorConfigId == null) {
              throw new MissingRequiredPropertyException("GetAddressPoolsPool", "monitorConfigId");
            }
            this.monitorConfigId = monitorConfigId;
            return this;
        }
        @CustomType.Setter
        public Builder monitorStatus(String monitorStatus) {
            if (monitorStatus == null) {
              throw new MissingRequiredPropertyException("GetAddressPoolsPool", "monitorStatus");
            }
            this.monitorStatus = monitorStatus;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetAddressPoolsPool", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            if (updateTime == null) {
              throw new MissingRequiredPropertyException("GetAddressPoolsPool", "updateTime");
            }
            this.updateTime = updateTime;
            return this;
        }
        @CustomType.Setter
        public Builder updateTimestamp(String updateTimestamp) {
            if (updateTimestamp == null) {
              throw new MissingRequiredPropertyException("GetAddressPoolsPool", "updateTimestamp");
            }
            this.updateTimestamp = updateTimestamp;
            return this;
        }
        public GetAddressPoolsPool build() {
            final var _resultValue = new GetAddressPoolsPool();
            _resultValue.addressPoolId = addressPoolId;
            _resultValue.addressPoolName = addressPoolName;
            _resultValue.addresses = addresses;
            _resultValue.createTime = createTime;
            _resultValue.createTimestamp = createTimestamp;
            _resultValue.id = id;
            _resultValue.instanceId = instanceId;
            _resultValue.lbaStrategy = lbaStrategy;
            _resultValue.monitorConfigId = monitorConfigId;
            _resultValue.monitorStatus = monitorStatus;
            _resultValue.type = type;
            _resultValue.updateTime = updateTime;
            _resultValue.updateTimestamp = updateTimestamp;
            return _resultValue;
        }
    }
}
