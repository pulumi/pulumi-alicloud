// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dts.outputs;

import com.pulumi.alicloud.dts.outputs.GetSubscriptionJobsJobSubscriptionHost;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSubscriptionJobsJob {
    /**
     * @return Subscription start time in Unix timestamp format.
     * 
     */
    private String checkpoint;
    /**
     * @return The creation time of subscription job instance.
     * 
     */
    private String createTime;
    /**
     * @return Subscription object, in the format of JSON strings.
     * 
     */
    private String dbList;
    /**
     * @return The ID of subscription job instance.
     * 
     */
    private String dtsInstanceId;
    /**
     * @return The ID of subscription job instance.
     * 
     */
    private String dtsJobId;
    /**
     * @return The name of subscription job instance.
     * 
     */
    private String dtsJobName;
    /**
     * @return The Expiration Time. Formatting with yyyy-MM-ddTHH:mm:ssZ(UTC time).
     * 
     */
    private String expireTime;
    /**
     * @return The ID of the Subscription Job.
     * 
     */
    private String id;
    /**
     * @return The payment type of the resource. Valid values: `Subscription`, `PayAsYouGo`.
     * 
     */
    private String paymentType;
    /**
     * @return To subscribe to the name of the database.
     * 
     */
    private String sourceEndpointDatabaseName;
    /**
     * @return The source database type value is MySQL or Oracle.
     * 
     */
    private String sourceEndpointEngineName;
    /**
     * @return The ID of source instance. Only when the type of source database instance was RDS MySQL, PolarDB-X 1.0, PolarDB MySQL, this parameter can be available and must be set.
     * 
     */
    private String sourceEndpointInstanceId;
    /**
     * @return The type of source instance. Valid values: `RDS`, `PolarDB`, `DRDS`, `LocalInstance`, `ECS`, `Express`, `CEN`, `dg`.
     * 
     */
    private String sourceEndpointInstanceType;
    /**
     * @return The IP of source endpoint.
     * 
     */
    private String sourceEndpointIp;
    /**
     * @return The SID of Oracle Database. When the source database is self-built Oracle and the Oracle database is a non-RAC instance, this parameter is available and must be passed in.
     * 
     */
    private String sourceEndpointOracleSid;
    /**
     * @return The Alibaba Cloud account ID to which the source instance belongs. This parameter is only available when configuring data subscriptions across Alibaba Cloud accounts and must be passed in.
     * 
     */
    private String sourceEndpointOwnerId;
    /**
     * @return The  port of source database.
     * 
     */
    private String sourceEndpointPort;
    /**
     * @return The region of source database.
     * 
     */
    private String sourceEndpointRegion;
    /**
     * @return Both the authorization roles. When the source instance and configure subscriptions task of the Alibaba Cloud account is not the same as the need to pass the parameter, to specify the source of the authorization roles, to allow configuration subscription task of the Alibaba Cloud account to access the source of the source instance information.
     * 
     */
    private String sourceEndpointRole;
    /**
     * @return The username of source database instance account.
     * 
     */
    private String sourceEndpointUserName;
    /**
     * @return The status of the task. Valid values: `NotStarted`, `Normal`, `Abnormal`. When a task created, it is in this state of `NotStarted`. You can specify this state of `Normal` to start the job, and specify this state of `Abnormal` to stop the job.
     * 
     */
    private String status;
    /**
     * @return Whether to subscribe the DDL type of data. Valid values: `true`, `false`.
     * 
     */
    private Boolean subscriptionDataTypeDdl;
    /**
     * @return Whether to subscribe the DML type of data. Valid values: `true`, `false`.
     * 
     */
    private Boolean subscriptionDataTypeDml;
    /**
     * @return Network information.
     * 
     */
    private List<GetSubscriptionJobsJobSubscriptionHost> subscriptionHosts;
    /**
     * @return The type of subscription instance network. Valid value: `classic`, `vpc`.
     * 
     */
    private String subscriptionInstanceNetworkType;
    /**
     * @return The ID of subscription instance vpc.
     * 
     */
    private String subscriptionInstanceVpcId;
    /**
     * @return The ID of subscription instance vswitch.
     * 
     */
    private String subscriptionInstanceVswitchId;
    /**
     * @return The tag of the resource.
     * 
     */
    private Map<String,Object> tags;

    private GetSubscriptionJobsJob() {}
    /**
     * @return Subscription start time in Unix timestamp format.
     * 
     */
    public String checkpoint() {
        return this.checkpoint;
    }
    /**
     * @return The creation time of subscription job instance.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Subscription object, in the format of JSON strings.
     * 
     */
    public String dbList() {
        return this.dbList;
    }
    /**
     * @return The ID of subscription job instance.
     * 
     */
    public String dtsInstanceId() {
        return this.dtsInstanceId;
    }
    /**
     * @return The ID of subscription job instance.
     * 
     */
    public String dtsJobId() {
        return this.dtsJobId;
    }
    /**
     * @return The name of subscription job instance.
     * 
     */
    public String dtsJobName() {
        return this.dtsJobName;
    }
    /**
     * @return The Expiration Time. Formatting with yyyy-MM-ddTHH:mm:ssZ(UTC time).
     * 
     */
    public String expireTime() {
        return this.expireTime;
    }
    /**
     * @return The ID of the Subscription Job.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The payment type of the resource. Valid values: `Subscription`, `PayAsYouGo`.
     * 
     */
    public String paymentType() {
        return this.paymentType;
    }
    /**
     * @return To subscribe to the name of the database.
     * 
     */
    public String sourceEndpointDatabaseName() {
        return this.sourceEndpointDatabaseName;
    }
    /**
     * @return The source database type value is MySQL or Oracle.
     * 
     */
    public String sourceEndpointEngineName() {
        return this.sourceEndpointEngineName;
    }
    /**
     * @return The ID of source instance. Only when the type of source database instance was RDS MySQL, PolarDB-X 1.0, PolarDB MySQL, this parameter can be available and must be set.
     * 
     */
    public String sourceEndpointInstanceId() {
        return this.sourceEndpointInstanceId;
    }
    /**
     * @return The type of source instance. Valid values: `RDS`, `PolarDB`, `DRDS`, `LocalInstance`, `ECS`, `Express`, `CEN`, `dg`.
     * 
     */
    public String sourceEndpointInstanceType() {
        return this.sourceEndpointInstanceType;
    }
    /**
     * @return The IP of source endpoint.
     * 
     */
    public String sourceEndpointIp() {
        return this.sourceEndpointIp;
    }
    /**
     * @return The SID of Oracle Database. When the source database is self-built Oracle and the Oracle database is a non-RAC instance, this parameter is available and must be passed in.
     * 
     */
    public String sourceEndpointOracleSid() {
        return this.sourceEndpointOracleSid;
    }
    /**
     * @return The Alibaba Cloud account ID to which the source instance belongs. This parameter is only available when configuring data subscriptions across Alibaba Cloud accounts and must be passed in.
     * 
     */
    public String sourceEndpointOwnerId() {
        return this.sourceEndpointOwnerId;
    }
    /**
     * @return The  port of source database.
     * 
     */
    public String sourceEndpointPort() {
        return this.sourceEndpointPort;
    }
    /**
     * @return The region of source database.
     * 
     */
    public String sourceEndpointRegion() {
        return this.sourceEndpointRegion;
    }
    /**
     * @return Both the authorization roles. When the source instance and configure subscriptions task of the Alibaba Cloud account is not the same as the need to pass the parameter, to specify the source of the authorization roles, to allow configuration subscription task of the Alibaba Cloud account to access the source of the source instance information.
     * 
     */
    public String sourceEndpointRole() {
        return this.sourceEndpointRole;
    }
    /**
     * @return The username of source database instance account.
     * 
     */
    public String sourceEndpointUserName() {
        return this.sourceEndpointUserName;
    }
    /**
     * @return The status of the task. Valid values: `NotStarted`, `Normal`, `Abnormal`. When a task created, it is in this state of `NotStarted`. You can specify this state of `Normal` to start the job, and specify this state of `Abnormal` to stop the job.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Whether to subscribe the DDL type of data. Valid values: `true`, `false`.
     * 
     */
    public Boolean subscriptionDataTypeDdl() {
        return this.subscriptionDataTypeDdl;
    }
    /**
     * @return Whether to subscribe the DML type of data. Valid values: `true`, `false`.
     * 
     */
    public Boolean subscriptionDataTypeDml() {
        return this.subscriptionDataTypeDml;
    }
    /**
     * @return Network information.
     * 
     */
    public List<GetSubscriptionJobsJobSubscriptionHost> subscriptionHosts() {
        return this.subscriptionHosts;
    }
    /**
     * @return The type of subscription instance network. Valid value: `classic`, `vpc`.
     * 
     */
    public String subscriptionInstanceNetworkType() {
        return this.subscriptionInstanceNetworkType;
    }
    /**
     * @return The ID of subscription instance vpc.
     * 
     */
    public String subscriptionInstanceVpcId() {
        return this.subscriptionInstanceVpcId;
    }
    /**
     * @return The ID of subscription instance vswitch.
     * 
     */
    public String subscriptionInstanceVswitchId() {
        return this.subscriptionInstanceVswitchId;
    }
    /**
     * @return The tag of the resource.
     * 
     */
    public Map<String,Object> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionJobsJob defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String checkpoint;
        private String createTime;
        private String dbList;
        private String dtsInstanceId;
        private String dtsJobId;
        private String dtsJobName;
        private String expireTime;
        private String id;
        private String paymentType;
        private String sourceEndpointDatabaseName;
        private String sourceEndpointEngineName;
        private String sourceEndpointInstanceId;
        private String sourceEndpointInstanceType;
        private String sourceEndpointIp;
        private String sourceEndpointOracleSid;
        private String sourceEndpointOwnerId;
        private String sourceEndpointPort;
        private String sourceEndpointRegion;
        private String sourceEndpointRole;
        private String sourceEndpointUserName;
        private String status;
        private Boolean subscriptionDataTypeDdl;
        private Boolean subscriptionDataTypeDml;
        private List<GetSubscriptionJobsJobSubscriptionHost> subscriptionHosts;
        private String subscriptionInstanceNetworkType;
        private String subscriptionInstanceVpcId;
        private String subscriptionInstanceVswitchId;
        private Map<String,Object> tags;
        public Builder() {}
        public Builder(GetSubscriptionJobsJob defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.checkpoint = defaults.checkpoint;
    	      this.createTime = defaults.createTime;
    	      this.dbList = defaults.dbList;
    	      this.dtsInstanceId = defaults.dtsInstanceId;
    	      this.dtsJobId = defaults.dtsJobId;
    	      this.dtsJobName = defaults.dtsJobName;
    	      this.expireTime = defaults.expireTime;
    	      this.id = defaults.id;
    	      this.paymentType = defaults.paymentType;
    	      this.sourceEndpointDatabaseName = defaults.sourceEndpointDatabaseName;
    	      this.sourceEndpointEngineName = defaults.sourceEndpointEngineName;
    	      this.sourceEndpointInstanceId = defaults.sourceEndpointInstanceId;
    	      this.sourceEndpointInstanceType = defaults.sourceEndpointInstanceType;
    	      this.sourceEndpointIp = defaults.sourceEndpointIp;
    	      this.sourceEndpointOracleSid = defaults.sourceEndpointOracleSid;
    	      this.sourceEndpointOwnerId = defaults.sourceEndpointOwnerId;
    	      this.sourceEndpointPort = defaults.sourceEndpointPort;
    	      this.sourceEndpointRegion = defaults.sourceEndpointRegion;
    	      this.sourceEndpointRole = defaults.sourceEndpointRole;
    	      this.sourceEndpointUserName = defaults.sourceEndpointUserName;
    	      this.status = defaults.status;
    	      this.subscriptionDataTypeDdl = defaults.subscriptionDataTypeDdl;
    	      this.subscriptionDataTypeDml = defaults.subscriptionDataTypeDml;
    	      this.subscriptionHosts = defaults.subscriptionHosts;
    	      this.subscriptionInstanceNetworkType = defaults.subscriptionInstanceNetworkType;
    	      this.subscriptionInstanceVpcId = defaults.subscriptionInstanceVpcId;
    	      this.subscriptionInstanceVswitchId = defaults.subscriptionInstanceVswitchId;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder checkpoint(String checkpoint) {
            this.checkpoint = Objects.requireNonNull(checkpoint);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder dbList(String dbList) {
            this.dbList = Objects.requireNonNull(dbList);
            return this;
        }
        @CustomType.Setter
        public Builder dtsInstanceId(String dtsInstanceId) {
            this.dtsInstanceId = Objects.requireNonNull(dtsInstanceId);
            return this;
        }
        @CustomType.Setter
        public Builder dtsJobId(String dtsJobId) {
            this.dtsJobId = Objects.requireNonNull(dtsJobId);
            return this;
        }
        @CustomType.Setter
        public Builder dtsJobName(String dtsJobName) {
            this.dtsJobName = Objects.requireNonNull(dtsJobName);
            return this;
        }
        @CustomType.Setter
        public Builder expireTime(String expireTime) {
            this.expireTime = Objects.requireNonNull(expireTime);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder paymentType(String paymentType) {
            this.paymentType = Objects.requireNonNull(paymentType);
            return this;
        }
        @CustomType.Setter
        public Builder sourceEndpointDatabaseName(String sourceEndpointDatabaseName) {
            this.sourceEndpointDatabaseName = Objects.requireNonNull(sourceEndpointDatabaseName);
            return this;
        }
        @CustomType.Setter
        public Builder sourceEndpointEngineName(String sourceEndpointEngineName) {
            this.sourceEndpointEngineName = Objects.requireNonNull(sourceEndpointEngineName);
            return this;
        }
        @CustomType.Setter
        public Builder sourceEndpointInstanceId(String sourceEndpointInstanceId) {
            this.sourceEndpointInstanceId = Objects.requireNonNull(sourceEndpointInstanceId);
            return this;
        }
        @CustomType.Setter
        public Builder sourceEndpointInstanceType(String sourceEndpointInstanceType) {
            this.sourceEndpointInstanceType = Objects.requireNonNull(sourceEndpointInstanceType);
            return this;
        }
        @CustomType.Setter
        public Builder sourceEndpointIp(String sourceEndpointIp) {
            this.sourceEndpointIp = Objects.requireNonNull(sourceEndpointIp);
            return this;
        }
        @CustomType.Setter
        public Builder sourceEndpointOracleSid(String sourceEndpointOracleSid) {
            this.sourceEndpointOracleSid = Objects.requireNonNull(sourceEndpointOracleSid);
            return this;
        }
        @CustomType.Setter
        public Builder sourceEndpointOwnerId(String sourceEndpointOwnerId) {
            this.sourceEndpointOwnerId = Objects.requireNonNull(sourceEndpointOwnerId);
            return this;
        }
        @CustomType.Setter
        public Builder sourceEndpointPort(String sourceEndpointPort) {
            this.sourceEndpointPort = Objects.requireNonNull(sourceEndpointPort);
            return this;
        }
        @CustomType.Setter
        public Builder sourceEndpointRegion(String sourceEndpointRegion) {
            this.sourceEndpointRegion = Objects.requireNonNull(sourceEndpointRegion);
            return this;
        }
        @CustomType.Setter
        public Builder sourceEndpointRole(String sourceEndpointRole) {
            this.sourceEndpointRole = Objects.requireNonNull(sourceEndpointRole);
            return this;
        }
        @CustomType.Setter
        public Builder sourceEndpointUserName(String sourceEndpointUserName) {
            this.sourceEndpointUserName = Objects.requireNonNull(sourceEndpointUserName);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionDataTypeDdl(Boolean subscriptionDataTypeDdl) {
            this.subscriptionDataTypeDdl = Objects.requireNonNull(subscriptionDataTypeDdl);
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionDataTypeDml(Boolean subscriptionDataTypeDml) {
            this.subscriptionDataTypeDml = Objects.requireNonNull(subscriptionDataTypeDml);
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionHosts(List<GetSubscriptionJobsJobSubscriptionHost> subscriptionHosts) {
            this.subscriptionHosts = Objects.requireNonNull(subscriptionHosts);
            return this;
        }
        public Builder subscriptionHosts(GetSubscriptionJobsJobSubscriptionHost... subscriptionHosts) {
            return subscriptionHosts(List.of(subscriptionHosts));
        }
        @CustomType.Setter
        public Builder subscriptionInstanceNetworkType(String subscriptionInstanceNetworkType) {
            this.subscriptionInstanceNetworkType = Objects.requireNonNull(subscriptionInstanceNetworkType);
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionInstanceVpcId(String subscriptionInstanceVpcId) {
            this.subscriptionInstanceVpcId = Objects.requireNonNull(subscriptionInstanceVpcId);
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionInstanceVswitchId(String subscriptionInstanceVswitchId) {
            this.subscriptionInstanceVswitchId = Objects.requireNonNull(subscriptionInstanceVswitchId);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,Object> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public GetSubscriptionJobsJob build() {
            final var o = new GetSubscriptionJobsJob();
            o.checkpoint = checkpoint;
            o.createTime = createTime;
            o.dbList = dbList;
            o.dtsInstanceId = dtsInstanceId;
            o.dtsJobId = dtsJobId;
            o.dtsJobName = dtsJobName;
            o.expireTime = expireTime;
            o.id = id;
            o.paymentType = paymentType;
            o.sourceEndpointDatabaseName = sourceEndpointDatabaseName;
            o.sourceEndpointEngineName = sourceEndpointEngineName;
            o.sourceEndpointInstanceId = sourceEndpointInstanceId;
            o.sourceEndpointInstanceType = sourceEndpointInstanceType;
            o.sourceEndpointIp = sourceEndpointIp;
            o.sourceEndpointOracleSid = sourceEndpointOracleSid;
            o.sourceEndpointOwnerId = sourceEndpointOwnerId;
            o.sourceEndpointPort = sourceEndpointPort;
            o.sourceEndpointRegion = sourceEndpointRegion;
            o.sourceEndpointRole = sourceEndpointRole;
            o.sourceEndpointUserName = sourceEndpointUserName;
            o.status = status;
            o.subscriptionDataTypeDdl = subscriptionDataTypeDdl;
            o.subscriptionDataTypeDml = subscriptionDataTypeDml;
            o.subscriptionHosts = subscriptionHosts;
            o.subscriptionInstanceNetworkType = subscriptionInstanceNetworkType;
            o.subscriptionInstanceVpcId = subscriptionInstanceVpcId;
            o.subscriptionInstanceVswitchId = subscriptionInstanceVswitchId;
            o.tags = tags;
            return o;
        }
    }
}
