// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDhcpOptionsSetsSet {
    /**
     * @return The Number of VPCs bound by the DHCP option set.
     * 
     */
    private Integer associateVpcCount;
    /**
     * @return The description of the DHCP options set. The description must be 2 to 256
     * characters in length and cannot start with `http://` or `https://`.
     * 
     */
    private String dhcpOptionsSetDescription;
    private String dhcpOptionsSetId;
    /**
     * @return The root domain, for example, example.com. After a DHCP options set is associated with a
     * Virtual Private Cloud (VPC) network, the root domain in the DHCP options set is automatically synchronized to the
     * ECS instances in the VPC network.
     * 
     */
    private String dhcpOptionsSetName;
    /**
     * @return The root domain, for example, example.com. After a DHCP options set is associated with a Virtual
     * Private Cloud (VPC) network, the root domain in the DHCP options set is automatically synchronized to the ECS
     * instances in the VPC network.
     * 
     */
    private String domainName;
    /**
     * @return The DNS server IP addresses. Up to four DNS server IP addresses can be specified. IP
     * addresses must be separated with commas (,).
     * 
     */
    private String domainNameServers;
    private String id;
    /**
     * @return The ID of the account to which the DHCP options set belongs.
     * 
     */
    private String ownerId;
    /**
     * @return The status of the DHCP options set. Valid values: `Available`, `InUse` or `Pending`. `Available`: The DHCP options set is available for use. `InUse`: The DHCP options set is in use. `Pending`: The DHCP options set is being configured.
     * 
     */
    private String status;

    private GetDhcpOptionsSetsSet() {}
    /**
     * @return The Number of VPCs bound by the DHCP option set.
     * 
     */
    public Integer associateVpcCount() {
        return this.associateVpcCount;
    }
    /**
     * @return The description of the DHCP options set. The description must be 2 to 256
     * characters in length and cannot start with `http://` or `https://`.
     * 
     */
    public String dhcpOptionsSetDescription() {
        return this.dhcpOptionsSetDescription;
    }
    public String dhcpOptionsSetId() {
        return this.dhcpOptionsSetId;
    }
    /**
     * @return The root domain, for example, example.com. After a DHCP options set is associated with a
     * Virtual Private Cloud (VPC) network, the root domain in the DHCP options set is automatically synchronized to the
     * ECS instances in the VPC network.
     * 
     */
    public String dhcpOptionsSetName() {
        return this.dhcpOptionsSetName;
    }
    /**
     * @return The root domain, for example, example.com. After a DHCP options set is associated with a Virtual
     * Private Cloud (VPC) network, the root domain in the DHCP options set is automatically synchronized to the ECS
     * instances in the VPC network.
     * 
     */
    public String domainName() {
        return this.domainName;
    }
    /**
     * @return The DNS server IP addresses. Up to four DNS server IP addresses can be specified. IP
     * addresses must be separated with commas (,).
     * 
     */
    public String domainNameServers() {
        return this.domainNameServers;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the account to which the DHCP options set belongs.
     * 
     */
    public String ownerId() {
        return this.ownerId;
    }
    /**
     * @return The status of the DHCP options set. Valid values: `Available`, `InUse` or `Pending`. `Available`: The DHCP options set is available for use. `InUse`: The DHCP options set is in use. `Pending`: The DHCP options set is being configured.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDhcpOptionsSetsSet defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer associateVpcCount;
        private String dhcpOptionsSetDescription;
        private String dhcpOptionsSetId;
        private String dhcpOptionsSetName;
        private String domainName;
        private String domainNameServers;
        private String id;
        private String ownerId;
        private String status;
        public Builder() {}
        public Builder(GetDhcpOptionsSetsSet defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associateVpcCount = defaults.associateVpcCount;
    	      this.dhcpOptionsSetDescription = defaults.dhcpOptionsSetDescription;
    	      this.dhcpOptionsSetId = defaults.dhcpOptionsSetId;
    	      this.dhcpOptionsSetName = defaults.dhcpOptionsSetName;
    	      this.domainName = defaults.domainName;
    	      this.domainNameServers = defaults.domainNameServers;
    	      this.id = defaults.id;
    	      this.ownerId = defaults.ownerId;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder associateVpcCount(Integer associateVpcCount) {
            this.associateVpcCount = Objects.requireNonNull(associateVpcCount);
            return this;
        }
        @CustomType.Setter
        public Builder dhcpOptionsSetDescription(String dhcpOptionsSetDescription) {
            this.dhcpOptionsSetDescription = Objects.requireNonNull(dhcpOptionsSetDescription);
            return this;
        }
        @CustomType.Setter
        public Builder dhcpOptionsSetId(String dhcpOptionsSetId) {
            this.dhcpOptionsSetId = Objects.requireNonNull(dhcpOptionsSetId);
            return this;
        }
        @CustomType.Setter
        public Builder dhcpOptionsSetName(String dhcpOptionsSetName) {
            this.dhcpOptionsSetName = Objects.requireNonNull(dhcpOptionsSetName);
            return this;
        }
        @CustomType.Setter
        public Builder domainName(String domainName) {
            this.domainName = Objects.requireNonNull(domainName);
            return this;
        }
        @CustomType.Setter
        public Builder domainNameServers(String domainNameServers) {
            this.domainNameServers = Objects.requireNonNull(domainNameServers);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ownerId(String ownerId) {
            this.ownerId = Objects.requireNonNull(ownerId);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public GetDhcpOptionsSetsSet build() {
            final var o = new GetDhcpOptionsSetsSet();
            o.associateVpcCount = associateVpcCount;
            o.dhcpOptionsSetDescription = dhcpOptionsSetDescription;
            o.dhcpOptionsSetId = dhcpOptionsSetId;
            o.dhcpOptionsSetName = dhcpOptionsSetName;
            o.domainName = domainName;
            o.domainNameServers = domainNameServers;
            o.id = id;
            o.ownerId = ownerId;
            o.status = status;
            return o;
        }
    }
}
