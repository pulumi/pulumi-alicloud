// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.servicecatalog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class PrincipalPortfolioAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final PrincipalPortfolioAssociationArgs Empty = new PrincipalPortfolioAssociationArgs();

    /**
     * Product Portfolio ID
     * 
     */
    @Import(name="portfolioId", required=true)
    private Output<String> portfolioId;

    /**
     * @return Product Portfolio ID
     * 
     */
    public Output<String> portfolioId() {
        return this.portfolioId;
    }

    /**
     * RAM entity ID
     * 
     */
    @Import(name="principalId", required=true)
    private Output<String> principalId;

    /**
     * @return RAM entity ID
     * 
     */
    public Output<String> principalId() {
        return this.principalId;
    }

    /**
     * RAM entity type
     * 
     */
    @Import(name="principalType", required=true)
    private Output<String> principalType;

    /**
     * @return RAM entity type
     * 
     */
    public Output<String> principalType() {
        return this.principalType;
    }

    private PrincipalPortfolioAssociationArgs() {}

    private PrincipalPortfolioAssociationArgs(PrincipalPortfolioAssociationArgs $) {
        this.portfolioId = $.portfolioId;
        this.principalId = $.principalId;
        this.principalType = $.principalType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrincipalPortfolioAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrincipalPortfolioAssociationArgs $;

        public Builder() {
            $ = new PrincipalPortfolioAssociationArgs();
        }

        public Builder(PrincipalPortfolioAssociationArgs defaults) {
            $ = new PrincipalPortfolioAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param portfolioId Product Portfolio ID
         * 
         * @return builder
         * 
         */
        public Builder portfolioId(Output<String> portfolioId) {
            $.portfolioId = portfolioId;
            return this;
        }

        /**
         * @param portfolioId Product Portfolio ID
         * 
         * @return builder
         * 
         */
        public Builder portfolioId(String portfolioId) {
            return portfolioId(Output.of(portfolioId));
        }

        /**
         * @param principalId RAM entity ID
         * 
         * @return builder
         * 
         */
        public Builder principalId(Output<String> principalId) {
            $.principalId = principalId;
            return this;
        }

        /**
         * @param principalId RAM entity ID
         * 
         * @return builder
         * 
         */
        public Builder principalId(String principalId) {
            return principalId(Output.of(principalId));
        }

        /**
         * @param principalType RAM entity type
         * 
         * @return builder
         * 
         */
        public Builder principalType(Output<String> principalType) {
            $.principalType = principalType;
            return this;
        }

        /**
         * @param principalType RAM entity type
         * 
         * @return builder
         * 
         */
        public Builder principalType(String principalType) {
            return principalType(Output.of(principalType));
        }

        public PrincipalPortfolioAssociationArgs build() {
            if ($.portfolioId == null) {
                throw new MissingRequiredPropertyException("PrincipalPortfolioAssociationArgs", "portfolioId");
            }
            if ($.principalId == null) {
                throw new MissingRequiredPropertyException("PrincipalPortfolioAssociationArgs", "principalId");
            }
            if ($.principalType == null) {
                throw new MissingRequiredPropertyException("PrincipalPortfolioAssociationArgs", "principalType");
            }
            return $;
        }
    }

}
