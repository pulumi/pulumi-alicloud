// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.pai;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.pai.WorkspaceWorkspaceArgs;
import com.pulumi.alicloud.pai.inputs.WorkspaceWorkspaceState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a PAI Workspace Workspace resource.
 * 
 * For information about PAI Workspace Workspace and how to use it, see [What is Workspace](https://next.api.alibabacloud.com/document/AIWorkSpace/2021-02-04/CreateWorkspace).
 * 
 * &gt; **NOTE:** Available since v1.233.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.pai.WorkspaceWorkspace;
 * import com.pulumi.alicloud.pai.WorkspaceWorkspaceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform_example");
 *         var default_ = new WorkspaceWorkspace("default", WorkspaceWorkspaceArgs.builder()
 *             .description(name)
 *             .workspaceName(name)
 *             .displayName(name)
 *             .envTypes("prod")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * PAI Workspace Workspace can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:pai/workspaceWorkspace:WorkspaceWorkspace example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:pai/workspaceWorkspace:WorkspaceWorkspace")
public class WorkspaceWorkspace extends com.pulumi.resources.CustomResource {
    /**
     * The UTC time when the workspace is created. The time format is ISO8601.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The UTC time when the workspace is created. The time format is ISO8601.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Workspace description, no more than 80 characters.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return Workspace description, no more than 80 characters.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * It is recommended that you name the workspace based on the business attribute to identify the purpose of the workspace. If not configured, the default value is the workspace name.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return It is recommended that you name the workspace based on the business attribute to identify the purpose of the workspace. If not configured, the default value is the workspace name.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * Environments contained in the workspace:
     * - Simple mode only production environment (prod).
     * - Standard mode includes development environment (dev) and production environment (prod).
     * 
     */
    @Export(name="envTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> envTypes;

    /**
     * @return Environments contained in the workspace:
     * - Simple mode only production environment (prod).
     * - Standard mode includes development environment (dev) and production environment (prod).
     * 
     */
    public Output<List<String>> envTypes() {
        return this.envTypes;
    }
    /**
     * Workspace state, possible values:
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return Workspace state, possible values:
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The workspace name. The format is as follows:
     * - 3 to 23 characters in length and can contain letters, underscores, or numbers.
     * - Must start with a large or small letter.
     * - Unique in the current region.
     * 
     */
    @Export(name="workspaceName", refs={String.class}, tree="[0]")
    private Output<String> workspaceName;

    /**
     * @return The workspace name. The format is as follows:
     * - 3 to 23 characters in length and can contain letters, underscores, or numbers.
     * - Must start with a large or small letter.
     * - Unique in the current region.
     * 
     */
    public Output<String> workspaceName() {
        return this.workspaceName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WorkspaceWorkspace(java.lang.String name) {
        this(name, WorkspaceWorkspaceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WorkspaceWorkspace(java.lang.String name, WorkspaceWorkspaceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WorkspaceWorkspace(java.lang.String name, WorkspaceWorkspaceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:pai/workspaceWorkspace:WorkspaceWorkspace", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private WorkspaceWorkspace(java.lang.String name, Output<java.lang.String> id, @Nullable WorkspaceWorkspaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:pai/workspaceWorkspace:WorkspaceWorkspace", name, state, makeResourceOptions(options, id), false);
    }

    private static WorkspaceWorkspaceArgs makeArgs(WorkspaceWorkspaceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? WorkspaceWorkspaceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WorkspaceWorkspace get(java.lang.String name, Output<java.lang.String> id, @Nullable WorkspaceWorkspaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new WorkspaceWorkspace(name, id, state, options);
    }
}
