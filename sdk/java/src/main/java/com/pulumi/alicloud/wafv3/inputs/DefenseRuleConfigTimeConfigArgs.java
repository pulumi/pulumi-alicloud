// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.wafv3.inputs;

import com.pulumi.alicloud.wafv3.inputs.DefenseRuleConfigTimeConfigTimePeriodArgs;
import com.pulumi.alicloud.wafv3.inputs.DefenseRuleConfigTimeConfigWeekTimePeriodArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DefenseRuleConfigTimeConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DefenseRuleConfigTimeConfigArgs Empty = new DefenseRuleConfigTimeConfigArgs();

    /**
     * The time period during which the rule is effective. This parameter is required when you set the `TimeScope` parameter to `period`. A maximum of five time periods can be set. See `timePeriods` below.
     * 
     */
    @Import(name="timePeriods")
    private @Nullable Output<List<DefenseRuleConfigTimeConfigTimePeriodArgs>> timePeriods;

    /**
     * @return The time period during which the rule is effective. This parameter is required when you set the `TimeScope` parameter to `period`. A maximum of five time periods can be set. See `timePeriods` below.
     * 
     */
    public Optional<Output<List<DefenseRuleConfigTimeConfigTimePeriodArgs>>> timePeriods() {
        return Optional.ofNullable(this.timePeriods);
    }

    /**
     * The effective period of the rule. Valid values:
     * 
     */
    @Import(name="timeScope")
    private @Nullable Output<String> timeScope;

    /**
     * @return The effective period of the rule. Valid values:
     * 
     */
    public Optional<Output<String>> timeScope() {
        return Optional.ofNullable(this.timeScope);
    }

    /**
     * The time zone in which the rule is effective. The default value is `8`. The value must be in the range of - 12 to 12. `0` indicates UTC. `8` indicates UTC+8. **-8** indicates UTC-8.
     * 
     */
    @Import(name="timeZone")
    private @Nullable Output<Integer> timeZone;

    /**
     * @return The time zone in which the rule is effective. The default value is `8`. The value must be in the range of - 12 to 12. `0` indicates UTC. `8` indicates UTC+8. **-8** indicates UTC-8.
     * 
     */
    public Optional<Output<Integer>> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    /**
     * The periodic time period during which the rule is effective. This parameter is required when you set the `TimeScope` parameter to `cycle`. A maximum of five time periods can be set. See `weekTimePeriods` below.
     * 
     */
    @Import(name="weekTimePeriods")
    private @Nullable Output<List<DefenseRuleConfigTimeConfigWeekTimePeriodArgs>> weekTimePeriods;

    /**
     * @return The periodic time period during which the rule is effective. This parameter is required when you set the `TimeScope` parameter to `cycle`. A maximum of five time periods can be set. See `weekTimePeriods` below.
     * 
     */
    public Optional<Output<List<DefenseRuleConfigTimeConfigWeekTimePeriodArgs>>> weekTimePeriods() {
        return Optional.ofNullable(this.weekTimePeriods);
    }

    private DefenseRuleConfigTimeConfigArgs() {}

    private DefenseRuleConfigTimeConfigArgs(DefenseRuleConfigTimeConfigArgs $) {
        this.timePeriods = $.timePeriods;
        this.timeScope = $.timeScope;
        this.timeZone = $.timeZone;
        this.weekTimePeriods = $.weekTimePeriods;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DefenseRuleConfigTimeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DefenseRuleConfigTimeConfigArgs $;

        public Builder() {
            $ = new DefenseRuleConfigTimeConfigArgs();
        }

        public Builder(DefenseRuleConfigTimeConfigArgs defaults) {
            $ = new DefenseRuleConfigTimeConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param timePeriods The time period during which the rule is effective. This parameter is required when you set the `TimeScope` parameter to `period`. A maximum of five time periods can be set. See `timePeriods` below.
         * 
         * @return builder
         * 
         */
        public Builder timePeriods(@Nullable Output<List<DefenseRuleConfigTimeConfigTimePeriodArgs>> timePeriods) {
            $.timePeriods = timePeriods;
            return this;
        }

        /**
         * @param timePeriods The time period during which the rule is effective. This parameter is required when you set the `TimeScope` parameter to `period`. A maximum of five time periods can be set. See `timePeriods` below.
         * 
         * @return builder
         * 
         */
        public Builder timePeriods(List<DefenseRuleConfigTimeConfigTimePeriodArgs> timePeriods) {
            return timePeriods(Output.of(timePeriods));
        }

        /**
         * @param timePeriods The time period during which the rule is effective. This parameter is required when you set the `TimeScope` parameter to `period`. A maximum of five time periods can be set. See `timePeriods` below.
         * 
         * @return builder
         * 
         */
        public Builder timePeriods(DefenseRuleConfigTimeConfigTimePeriodArgs... timePeriods) {
            return timePeriods(List.of(timePeriods));
        }

        /**
         * @param timeScope The effective period of the rule. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder timeScope(@Nullable Output<String> timeScope) {
            $.timeScope = timeScope;
            return this;
        }

        /**
         * @param timeScope The effective period of the rule. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder timeScope(String timeScope) {
            return timeScope(Output.of(timeScope));
        }

        /**
         * @param timeZone The time zone in which the rule is effective. The default value is `8`. The value must be in the range of - 12 to 12. `0` indicates UTC. `8` indicates UTC+8. **-8** indicates UTC-8.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(@Nullable Output<Integer> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        /**
         * @param timeZone The time zone in which the rule is effective. The default value is `8`. The value must be in the range of - 12 to 12. `0` indicates UTC. `8` indicates UTC+8. **-8** indicates UTC-8.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(Integer timeZone) {
            return timeZone(Output.of(timeZone));
        }

        /**
         * @param weekTimePeriods The periodic time period during which the rule is effective. This parameter is required when you set the `TimeScope` parameter to `cycle`. A maximum of five time periods can be set. See `weekTimePeriods` below.
         * 
         * @return builder
         * 
         */
        public Builder weekTimePeriods(@Nullable Output<List<DefenseRuleConfigTimeConfigWeekTimePeriodArgs>> weekTimePeriods) {
            $.weekTimePeriods = weekTimePeriods;
            return this;
        }

        /**
         * @param weekTimePeriods The periodic time period during which the rule is effective. This parameter is required when you set the `TimeScope` parameter to `cycle`. A maximum of five time periods can be set. See `weekTimePeriods` below.
         * 
         * @return builder
         * 
         */
        public Builder weekTimePeriods(List<DefenseRuleConfigTimeConfigWeekTimePeriodArgs> weekTimePeriods) {
            return weekTimePeriods(Output.of(weekTimePeriods));
        }

        /**
         * @param weekTimePeriods The periodic time period during which the rule is effective. This parameter is required when you set the `TimeScope` parameter to `cycle`. A maximum of five time periods can be set. See `weekTimePeriods` below.
         * 
         * @return builder
         * 
         */
        public Builder weekTimePeriods(DefenseRuleConfigTimeConfigWeekTimePeriodArgs... weekTimePeriods) {
            return weekTimePeriods(List.of(weekTimePeriods));
        }

        public DefenseRuleConfigTimeConfigArgs build() {
            return $;
        }
    }

}
