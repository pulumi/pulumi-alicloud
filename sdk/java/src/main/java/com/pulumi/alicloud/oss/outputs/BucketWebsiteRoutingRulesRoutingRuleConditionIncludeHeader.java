// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BucketWebsiteRoutingRulesRoutingRuleConditionIncludeHeader {
    /**
     * @return This rule can only be matched if the request contains the Header specified by Key and the value ends with this value.
     * 
     */
    private @Nullable String endsWith;
    /**
     * @return This rule can only be matched if the request contains the Header specified by Key and the value is the specified value.
     * 
     */
    private @Nullable String equals;
    private @Nullable String key;
    /**
     * @return This rule can only be matched if the request contains the Header specified by Key and the value starts with this value.
     * 
     */
    private @Nullable String startsWith;

    private BucketWebsiteRoutingRulesRoutingRuleConditionIncludeHeader() {}
    /**
     * @return This rule can only be matched if the request contains the Header specified by Key and the value ends with this value.
     * 
     */
    public Optional<String> endsWith() {
        return Optional.ofNullable(this.endsWith);
    }
    /**
     * @return This rule can only be matched if the request contains the Header specified by Key and the value is the specified value.
     * 
     */
    public Optional<String> equals_() {
        return Optional.ofNullable(this.equals);
    }
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return This rule can only be matched if the request contains the Header specified by Key and the value starts with this value.
     * 
     */
    public Optional<String> startsWith() {
        return Optional.ofNullable(this.startsWith);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketWebsiteRoutingRulesRoutingRuleConditionIncludeHeader defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String endsWith;
        private @Nullable String equals;
        private @Nullable String key;
        private @Nullable String startsWith;
        public Builder() {}
        public Builder(BucketWebsiteRoutingRulesRoutingRuleConditionIncludeHeader defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endsWith = defaults.endsWith;
    	      this.equals = defaults.equals;
    	      this.key = defaults.key;
    	      this.startsWith = defaults.startsWith;
        }

        @CustomType.Setter
        public Builder endsWith(@Nullable String endsWith) {

            this.endsWith = endsWith;
            return this;
        }
        @CustomType.Setter("equals")
        public Builder equals_(@Nullable String equals) {

            this.equals = equals;
            return this;
        }
        @CustomType.Setter
        public Builder key(@Nullable String key) {

            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder startsWith(@Nullable String startsWith) {

            this.startsWith = startsWith;
            return this;
        }
        public BucketWebsiteRoutingRulesRoutingRuleConditionIncludeHeader build() {
            final var _resultValue = new BucketWebsiteRoutingRulesRoutingRuleConditionIncludeHeader();
            _resultValue.endsWith = endsWith;
            _resultValue.equals = equals;
            _resultValue.key = key;
            _resultValue.startsWith = startsWith;
            return _resultValue;
        }
    }
}
