// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCertificatesCertificate {
    /**
     * @return The cert is buy from aliyun or not.
     * 
     */
    private Boolean buyInAliyun;
    private String cert;
    private String certId;
    private String certificateName;
    /**
     * @return The cert&#39;s city.
     * 
     */
    private String city;
    /**
     * @return The cert&#39;s common name.
     * 
     */
    private String common;
    /**
     * @return The cert&#39;s country.
     * 
     */
    private String country;
    /**
     * @return The cert&#39;s not valid after time.
     * 
     */
    private String endDate;
    /**
     * @return The cert is expired or not.
     * 
     */
    private Boolean expired;
    private String fingerprint;
    /**
     * @return The cert&#39;s id.
     * 
     */
    private String id;
    /**
     * @return The cert&#39;s .
     * 
     */
    private String issuer;
    private String key;
    /**
     * @return The cert&#39;s name.
     * 
     * @deprecated
     * Field &#39;name&#39; has been deprecated from provider version 1.129.0 and it will be removed in the future version. Please use the new attribute &#39;certificate_name&#39; instead.
     * 
     */
    @Deprecated /* Field 'name' has been deprecated from provider version 1.129.0 and it will be removed in the future version. Please use the new attribute 'certificate_name' instead. */
    private String name;
    /**
     * @return The cert&#39;s organization.
     * 
     */
    private String orgName;
    /**
     * @return The cert&#39;s province.
     * 
     */
    private String province;
    /**
     * @return The cert&#39;s subject alternative name.
     * 
     */
    private String sans;
    /**
     * @return The cert&#39;s not valid before time.
     * 
     */
    private String startDate;

    private GetCertificatesCertificate() {}
    /**
     * @return The cert is buy from aliyun or not.
     * 
     */
    public Boolean buyInAliyun() {
        return this.buyInAliyun;
    }
    public String cert() {
        return this.cert;
    }
    public String certId() {
        return this.certId;
    }
    public String certificateName() {
        return this.certificateName;
    }
    /**
     * @return The cert&#39;s city.
     * 
     */
    public String city() {
        return this.city;
    }
    /**
     * @return The cert&#39;s common name.
     * 
     */
    public String common() {
        return this.common;
    }
    /**
     * @return The cert&#39;s country.
     * 
     */
    public String country() {
        return this.country;
    }
    /**
     * @return The cert&#39;s not valid after time.
     * 
     */
    public String endDate() {
        return this.endDate;
    }
    /**
     * @return The cert is expired or not.
     * 
     */
    public Boolean expired() {
        return this.expired;
    }
    public String fingerprint() {
        return this.fingerprint;
    }
    /**
     * @return The cert&#39;s id.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The cert&#39;s .
     * 
     */
    public String issuer() {
        return this.issuer;
    }
    public String key() {
        return this.key;
    }
    /**
     * @return The cert&#39;s name.
     * 
     * @deprecated
     * Field &#39;name&#39; has been deprecated from provider version 1.129.0 and it will be removed in the future version. Please use the new attribute &#39;certificate_name&#39; instead.
     * 
     */
    @Deprecated /* Field 'name' has been deprecated from provider version 1.129.0 and it will be removed in the future version. Please use the new attribute 'certificate_name' instead. */
    public String name() {
        return this.name;
    }
    /**
     * @return The cert&#39;s organization.
     * 
     */
    public String orgName() {
        return this.orgName;
    }
    /**
     * @return The cert&#39;s province.
     * 
     */
    public String province() {
        return this.province;
    }
    /**
     * @return The cert&#39;s subject alternative name.
     * 
     */
    public String sans() {
        return this.sans;
    }
    /**
     * @return The cert&#39;s not valid before time.
     * 
     */
    public String startDate() {
        return this.startDate;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificatesCertificate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean buyInAliyun;
        private String cert;
        private String certId;
        private String certificateName;
        private String city;
        private String common;
        private String country;
        private String endDate;
        private Boolean expired;
        private String fingerprint;
        private String id;
        private String issuer;
        private String key;
        private String name;
        private String orgName;
        private String province;
        private String sans;
        private String startDate;
        public Builder() {}
        public Builder(GetCertificatesCertificate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.buyInAliyun = defaults.buyInAliyun;
    	      this.cert = defaults.cert;
    	      this.certId = defaults.certId;
    	      this.certificateName = defaults.certificateName;
    	      this.city = defaults.city;
    	      this.common = defaults.common;
    	      this.country = defaults.country;
    	      this.endDate = defaults.endDate;
    	      this.expired = defaults.expired;
    	      this.fingerprint = defaults.fingerprint;
    	      this.id = defaults.id;
    	      this.issuer = defaults.issuer;
    	      this.key = defaults.key;
    	      this.name = defaults.name;
    	      this.orgName = defaults.orgName;
    	      this.province = defaults.province;
    	      this.sans = defaults.sans;
    	      this.startDate = defaults.startDate;
        }

        @CustomType.Setter
        public Builder buyInAliyun(Boolean buyInAliyun) {
            if (buyInAliyun == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificate", "buyInAliyun");
            }
            this.buyInAliyun = buyInAliyun;
            return this;
        }
        @CustomType.Setter
        public Builder cert(String cert) {
            if (cert == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificate", "cert");
            }
            this.cert = cert;
            return this;
        }
        @CustomType.Setter
        public Builder certId(String certId) {
            if (certId == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificate", "certId");
            }
            this.certId = certId;
            return this;
        }
        @CustomType.Setter
        public Builder certificateName(String certificateName) {
            if (certificateName == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificate", "certificateName");
            }
            this.certificateName = certificateName;
            return this;
        }
        @CustomType.Setter
        public Builder city(String city) {
            if (city == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificate", "city");
            }
            this.city = city;
            return this;
        }
        @CustomType.Setter
        public Builder common(String common) {
            if (common == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificate", "common");
            }
            this.common = common;
            return this;
        }
        @CustomType.Setter
        public Builder country(String country) {
            if (country == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificate", "country");
            }
            this.country = country;
            return this;
        }
        @CustomType.Setter
        public Builder endDate(String endDate) {
            if (endDate == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificate", "endDate");
            }
            this.endDate = endDate;
            return this;
        }
        @CustomType.Setter
        public Builder expired(Boolean expired) {
            if (expired == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificate", "expired");
            }
            this.expired = expired;
            return this;
        }
        @CustomType.Setter
        public Builder fingerprint(String fingerprint) {
            if (fingerprint == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificate", "fingerprint");
            }
            this.fingerprint = fingerprint;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificate", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder issuer(String issuer) {
            if (issuer == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificate", "issuer");
            }
            this.issuer = issuer;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificate", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificate", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder orgName(String orgName) {
            if (orgName == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificate", "orgName");
            }
            this.orgName = orgName;
            return this;
        }
        @CustomType.Setter
        public Builder province(String province) {
            if (province == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificate", "province");
            }
            this.province = province;
            return this;
        }
        @CustomType.Setter
        public Builder sans(String sans) {
            if (sans == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificate", "sans");
            }
            this.sans = sans;
            return this;
        }
        @CustomType.Setter
        public Builder startDate(String startDate) {
            if (startDate == null) {
              throw new MissingRequiredPropertyException("GetCertificatesCertificate", "startDate");
            }
            this.startDate = startDate;
            return this;
        }
        public GetCertificatesCertificate build() {
            final var _resultValue = new GetCertificatesCertificate();
            _resultValue.buyInAliyun = buyInAliyun;
            _resultValue.cert = cert;
            _resultValue.certId = certId;
            _resultValue.certificateName = certificateName;
            _resultValue.city = city;
            _resultValue.common = common;
            _resultValue.country = country;
            _resultValue.endDate = endDate;
            _resultValue.expired = expired;
            _resultValue.fingerprint = fingerprint;
            _resultValue.id = id;
            _resultValue.issuer = issuer;
            _resultValue.key = key;
            _resultValue.name = name;
            _resultValue.orgName = orgName;
            _resultValue.province = province;
            _resultValue.sans = sans;
            _resultValue.startDate = startDate;
            return _resultValue;
        }
    }
}
