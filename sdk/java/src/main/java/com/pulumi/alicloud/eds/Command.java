// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eds;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.eds.CommandArgs;
import com.pulumi.alicloud.eds.inputs.CommandState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a ECD Command resource.
 * 
 * For information about ECD Command and how to use it, see [What is Command](https://www.alibabacloud.com/help/en/wuying-workspace/developer-reference/api-ecd-2020-09-30-runcommand).
 * 
 * &gt; **NOTE:** Available since v1.146.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.eds.SimpleOfficeSite;
 * import com.pulumi.alicloud.eds.SimpleOfficeSiteArgs;
 * import com.pulumi.alicloud.eds.EcdPolicyGroup;
 * import com.pulumi.alicloud.eds.EcdPolicyGroupArgs;
 * import com.pulumi.alicloud.eds.inputs.EcdPolicyGroupAuthorizeAccessPolicyRuleArgs;
 * import com.pulumi.alicloud.eds.inputs.EcdPolicyGroupAuthorizeSecurityPolicyRuleArgs;
 * import com.pulumi.alicloud.eds.EdsFunctions;
 * import com.pulumi.alicloud.eds.inputs.GetBundlesArgs;
 * import com.pulumi.alicloud.eds.Desktop;
 * import com.pulumi.alicloud.eds.DesktopArgs;
 * import com.pulumi.alicloud.eds.Command;
 * import com.pulumi.alicloud.eds.CommandArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
 *             .min(10000)
 *             .max(99999)
 *             .build());
 * 
 *         var defaultSimpleOfficeSite = new SimpleOfficeSite("defaultSimpleOfficeSite", SimpleOfficeSiteArgs.builder()
 *             .cidrBlock("172.16.0.0/12")
 *             .enableAdminAccess(true)
 *             .desktopAccessType("Internet")
 *             .officeSiteName(String.format("%s-%s", name,defaultInteger.result()))
 *             .build());
 * 
 *         var defaultEcdPolicyGroup = new EcdPolicyGroup("defaultEcdPolicyGroup", EcdPolicyGroupArgs.builder()
 *             .policyGroupName(name)
 *             .clipboard("read")
 *             .localDrive("read")
 *             .usbRedirect("off")
 *             .watermark("off")
 *             .authorizeAccessPolicyRules(EcdPolicyGroupAuthorizeAccessPolicyRuleArgs.builder()
 *                 .description(name)
 *                 .cidrIp("1.2.3.45/24")
 *                 .build())
 *             .authorizeSecurityPolicyRules(EcdPolicyGroupAuthorizeSecurityPolicyRuleArgs.builder()
 *                 .type("inflow")
 *                 .policy("accept")
 *                 .description(name)
 *                 .portRange("80/80")
 *                 .ipProtocol("TCP")
 *                 .priority("1")
 *                 .cidrIp("1.2.3.4/24")
 *                 .build())
 *             .build());
 * 
 *         final var default = EdsFunctions.getBundles(GetBundlesArgs.builder()
 *             .bundleType("SYSTEM")
 *             .bundleIds(            
 *                 "bundle_eds_enterprise_office_4c8g_s8d2_win2019_edu",
 *                 "bundle_eds_enterprise_office_8c16g_s8d2_win2019_edu")
 *             .build());
 * 
 *         var defaultDesktop = new Desktop("defaultDesktop", DesktopArgs.builder()
 *             .officeSiteId(defaultSimpleOfficeSite.id())
 *             .policyGroupId(defaultEcdPolicyGroup.id())
 *             .bundleId(default_.bundles()[0].id())
 *             .desktopName(name)
 *             .build());
 * 
 *         var defaultCommand = new Command("defaultCommand", CommandArgs.builder()
 *             .commandContent("ipconfig")
 *             .commandType("RunPowerShellScript")
 *             .desktopId(defaultDesktop.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ECD Command can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:eds/command:Command example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:eds/command:Command")
public class Command extends com.pulumi.resources.CustomResource {
    /**
     * The Contents of the Script to Base64 Encoded Transmission.
     * 
     */
    @Export(name="commandContent", refs={String.class}, tree="[0]")
    private Output<String> commandContent;

    /**
     * @return The Contents of the Script to Base64 Encoded Transmission.
     * 
     */
    public Output<String> commandContent() {
        return this.commandContent;
    }
    /**
     * The Script Type. Valid values: `RunBatScript`, `RunPowerShellScript`.
     * 
     */
    @Export(name="commandType", refs={String.class}, tree="[0]")
    private Output<String> commandType;

    /**
     * @return The Script Type. Valid values: `RunBatScript`, `RunPowerShellScript`.
     * 
     */
    public Output<String> commandType() {
        return this.commandType;
    }
    /**
     * That Returns the Data Encoding Method. Valid values: `Base64`, `PlainText`.
     * 
     */
    @Export(name="contentEncoding", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> contentEncoding;

    /**
     * @return That Returns the Data Encoding Method. Valid values: `Base64`, `PlainText`.
     * 
     */
    public Output<Optional<String>> contentEncoding() {
        return Codegen.optional(this.contentEncoding);
    }
    /**
     * The desktop id of the Desktop.
     * 
     */
    @Export(name="desktopId", refs={String.class}, tree="[0]")
    private Output<String> desktopId;

    /**
     * @return The desktop id of the Desktop.
     * 
     */
    public Output<String> desktopId() {
        return this.desktopId;
    }
    /**
     * Script Is Executed in the Overall Implementation of the State. Valid values: `Pending`, `Failed`, `PartialFailed`, `Running`, `Stopped`, `Stopping`, `Finished`, `Success`.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return Script Is Executed in the Overall Implementation of the State. Valid values: `Pending`, `Failed`, `PartialFailed`, `Running`, `Stopped`, `Stopping`, `Finished`, `Success`.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The timeout period for script execution the unit is seconds. Default to: `60`.
     * 
     */
    @Export(name="timeout", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timeout;

    /**
     * @return The timeout period for script execution the unit is seconds. Default to: `60`.
     * 
     */
    public Output<Optional<String>> timeout() {
        return Codegen.optional(this.timeout);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Command(java.lang.String name) {
        this(name, CommandArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Command(java.lang.String name, CommandArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Command(java.lang.String name, CommandArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:eds/command:Command", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Command(java.lang.String name, Output<java.lang.String> id, @Nullable CommandState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:eds/command:Command", name, state, makeResourceOptions(options, id), false);
    }

    private static CommandArgs makeArgs(CommandArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CommandArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Command get(java.lang.String name, Output<java.lang.String> id, @Nullable CommandState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Command(name, id, state, options);
    }
}
