// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouterInterfaceConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouterInterfaceConnectionArgs Empty = new RouterInterfaceConnectionArgs();

    /**
     * One side router interface ID.
     * 
     */
    @Import(name="interfaceId", required=true)
    private Output<String> interfaceId;

    /**
     * @return One side router interface ID.
     * 
     */
    public Output<String> interfaceId() {
        return this.interfaceId;
    }

    /**
     * Another side router interface ID. It must belong the specified &#34;opposite_interface_owner_id&#34; account.
     * 
     */
    @Import(name="oppositeInterfaceId", required=true)
    private Output<String> oppositeInterfaceId;

    /**
     * @return Another side router interface ID. It must belong the specified &#34;opposite_interface_owner_id&#34; account.
     * 
     */
    public Output<String> oppositeInterfaceId() {
        return this.oppositeInterfaceId;
    }

    /**
     * Another side router interface account ID. Log on to the Alibaba Cloud console, select User Info &gt; Account Management to check the account ID. Default to Provider account_id.
     * 
     */
    @Import(name="oppositeInterfaceOwnerId")
    private @Nullable Output<String> oppositeInterfaceOwnerId;

    /**
     * @return Another side router interface account ID. Log on to the Alibaba Cloud console, select User Info &gt; Account Management to check the account ID. Default to Provider account_id.
     * 
     */
    public Optional<Output<String>> oppositeInterfaceOwnerId() {
        return Optional.ofNullable(this.oppositeInterfaceOwnerId);
    }

    /**
     * Another side router ID. It must belong the specified &#34;opposite_interface_owner_id&#34; account. It is valid when field &#34;opposite_interface_owner_id&#34; is specified.
     * 
     */
    @Import(name="oppositeRouterId")
    private @Nullable Output<String> oppositeRouterId;

    /**
     * @return Another side router ID. It must belong the specified &#34;opposite_interface_owner_id&#34; account. It is valid when field &#34;opposite_interface_owner_id&#34; is specified.
     * 
     */
    public Optional<Output<String>> oppositeRouterId() {
        return Optional.ofNullable(this.oppositeRouterId);
    }

    /**
     * Another side router Type. Optional value: VRouter, VBR. It is valid when field &#34;opposite_interface_owner_id&#34; is specified.
     * 
     * &gt; **NOTE:** The value of &#34;opposite_interface_owner_id&#34; or &#34;account_id&#34; must be main account and not be sub account.
     * 
     */
    @Import(name="oppositeRouterType")
    private @Nullable Output<String> oppositeRouterType;

    /**
     * @return Another side router Type. Optional value: VRouter, VBR. It is valid when field &#34;opposite_interface_owner_id&#34; is specified.
     * 
     * &gt; **NOTE:** The value of &#34;opposite_interface_owner_id&#34; or &#34;account_id&#34; must be main account and not be sub account.
     * 
     */
    public Optional<Output<String>> oppositeRouterType() {
        return Optional.ofNullable(this.oppositeRouterType);
    }

    private RouterInterfaceConnectionArgs() {}

    private RouterInterfaceConnectionArgs(RouterInterfaceConnectionArgs $) {
        this.interfaceId = $.interfaceId;
        this.oppositeInterfaceId = $.oppositeInterfaceId;
        this.oppositeInterfaceOwnerId = $.oppositeInterfaceOwnerId;
        this.oppositeRouterId = $.oppositeRouterId;
        this.oppositeRouterType = $.oppositeRouterType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouterInterfaceConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouterInterfaceConnectionArgs $;

        public Builder() {
            $ = new RouterInterfaceConnectionArgs();
        }

        public Builder(RouterInterfaceConnectionArgs defaults) {
            $ = new RouterInterfaceConnectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param interfaceId One side router interface ID.
         * 
         * @return builder
         * 
         */
        public Builder interfaceId(Output<String> interfaceId) {
            $.interfaceId = interfaceId;
            return this;
        }

        /**
         * @param interfaceId One side router interface ID.
         * 
         * @return builder
         * 
         */
        public Builder interfaceId(String interfaceId) {
            return interfaceId(Output.of(interfaceId));
        }

        /**
         * @param oppositeInterfaceId Another side router interface ID. It must belong the specified &#34;opposite_interface_owner_id&#34; account.
         * 
         * @return builder
         * 
         */
        public Builder oppositeInterfaceId(Output<String> oppositeInterfaceId) {
            $.oppositeInterfaceId = oppositeInterfaceId;
            return this;
        }

        /**
         * @param oppositeInterfaceId Another side router interface ID. It must belong the specified &#34;opposite_interface_owner_id&#34; account.
         * 
         * @return builder
         * 
         */
        public Builder oppositeInterfaceId(String oppositeInterfaceId) {
            return oppositeInterfaceId(Output.of(oppositeInterfaceId));
        }

        /**
         * @param oppositeInterfaceOwnerId Another side router interface account ID. Log on to the Alibaba Cloud console, select User Info &gt; Account Management to check the account ID. Default to Provider account_id.
         * 
         * @return builder
         * 
         */
        public Builder oppositeInterfaceOwnerId(@Nullable Output<String> oppositeInterfaceOwnerId) {
            $.oppositeInterfaceOwnerId = oppositeInterfaceOwnerId;
            return this;
        }

        /**
         * @param oppositeInterfaceOwnerId Another side router interface account ID. Log on to the Alibaba Cloud console, select User Info &gt; Account Management to check the account ID. Default to Provider account_id.
         * 
         * @return builder
         * 
         */
        public Builder oppositeInterfaceOwnerId(String oppositeInterfaceOwnerId) {
            return oppositeInterfaceOwnerId(Output.of(oppositeInterfaceOwnerId));
        }

        /**
         * @param oppositeRouterId Another side router ID. It must belong the specified &#34;opposite_interface_owner_id&#34; account. It is valid when field &#34;opposite_interface_owner_id&#34; is specified.
         * 
         * @return builder
         * 
         */
        public Builder oppositeRouterId(@Nullable Output<String> oppositeRouterId) {
            $.oppositeRouterId = oppositeRouterId;
            return this;
        }

        /**
         * @param oppositeRouterId Another side router ID. It must belong the specified &#34;opposite_interface_owner_id&#34; account. It is valid when field &#34;opposite_interface_owner_id&#34; is specified.
         * 
         * @return builder
         * 
         */
        public Builder oppositeRouterId(String oppositeRouterId) {
            return oppositeRouterId(Output.of(oppositeRouterId));
        }

        /**
         * @param oppositeRouterType Another side router Type. Optional value: VRouter, VBR. It is valid when field &#34;opposite_interface_owner_id&#34; is specified.
         * 
         * &gt; **NOTE:** The value of &#34;opposite_interface_owner_id&#34; or &#34;account_id&#34; must be main account and not be sub account.
         * 
         * @return builder
         * 
         */
        public Builder oppositeRouterType(@Nullable Output<String> oppositeRouterType) {
            $.oppositeRouterType = oppositeRouterType;
            return this;
        }

        /**
         * @param oppositeRouterType Another side router Type. Optional value: VRouter, VBR. It is valid when field &#34;opposite_interface_owner_id&#34; is specified.
         * 
         * &gt; **NOTE:** The value of &#34;opposite_interface_owner_id&#34; or &#34;account_id&#34; must be main account and not be sub account.
         * 
         * @return builder
         * 
         */
        public Builder oppositeRouterType(String oppositeRouterType) {
            return oppositeRouterType(Output.of(oppositeRouterType));
        }

        public RouterInterfaceConnectionArgs build() {
            if ($.interfaceId == null) {
                throw new MissingRequiredPropertyException("RouterInterfaceConnectionArgs", "interfaceId");
            }
            if ($.oppositeInterfaceId == null) {
                throw new MissingRequiredPropertyException("RouterInterfaceConnectionArgs", "oppositeInterfaceId");
            }
            return $;
        }
    }

}
