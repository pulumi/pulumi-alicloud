// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sls.outputs;

import com.pulumi.alicloud.sls.outputs.GetIndexsIndex;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetIndexsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of Index IDs.
     * 
     */
    private List<String> ids;
    /**
     * @return A list of Index Entries. Each element contains the following attributes:
     * 
     */
    private List<GetIndexsIndex> indexs;
    private String logstoreName;
    private @Nullable String outputFile;
    private String projectName;

    private GetIndexsResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of Index IDs.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    /**
     * @return A list of Index Entries. Each element contains the following attributes:
     * 
     */
    public List<GetIndexsIndex> indexs() {
        return this.indexs;
    }
    public String logstoreName() {
        return this.logstoreName;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public String projectName() {
        return this.projectName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIndexsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<String> ids;
        private List<GetIndexsIndex> indexs;
        private String logstoreName;
        private @Nullable String outputFile;
        private String projectName;
        public Builder() {}
        public Builder(GetIndexsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.indexs = defaults.indexs;
    	      this.logstoreName = defaults.logstoreName;
    	      this.outputFile = defaults.outputFile;
    	      this.projectName = defaults.projectName;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIndexsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            if (ids == null) {
              throw new MissingRequiredPropertyException("GetIndexsResult", "ids");
            }
            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder indexs(List<GetIndexsIndex> indexs) {
            if (indexs == null) {
              throw new MissingRequiredPropertyException("GetIndexsResult", "indexs");
            }
            this.indexs = indexs;
            return this;
        }
        public Builder indexs(GetIndexsIndex... indexs) {
            return indexs(List.of(indexs));
        }
        @CustomType.Setter
        public Builder logstoreName(String logstoreName) {
            if (logstoreName == null) {
              throw new MissingRequiredPropertyException("GetIndexsResult", "logstoreName");
            }
            this.logstoreName = logstoreName;
            return this;
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder projectName(String projectName) {
            if (projectName == null) {
              throw new MissingRequiredPropertyException("GetIndexsResult", "projectName");
            }
            this.projectName = projectName;
            return this;
        }
        public GetIndexsResult build() {
            final var _resultValue = new GetIndexsResult();
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.indexs = indexs;
            _resultValue.logstoreName = logstoreName;
            _resultValue.outputFile = outputFile;
            _resultValue.projectName = projectName;
            return _resultValue;
        }
    }
}
