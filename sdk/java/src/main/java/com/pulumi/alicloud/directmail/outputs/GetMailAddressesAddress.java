// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.directmail.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMailAddressesAddress {
    /**
     * @return The sender address.
     * 
     */
    private String accountName;
    /**
     * @return The creation of the record time.
     * 
     */
    private String createTime;
    /**
     * @return On the quota limit.
     * 
     */
    private String dailyCount;
    /**
     * @return On the quota.
     * 
     */
    private String dailyReqCount;
    /**
     * @return Domain name status. Valid values: `0`, `1`.
     * 
     */
    private String domainStatus;
    /**
     * @return The ID of the Mail Address.
     * 
     */
    private String id;
    /**
     * @return The sender address ID.
     * 
     */
    private String mailAddressId;
    /**
     * @return Monthly quota limit.
     * 
     */
    private String monthCount;
    /**
     * @return Months amount.
     * 
     */
    private String monthReqCount;
    /**
     * @return Return address.
     * 
     */
    private String replyAddress;
    /**
     * @return If using STMP address status.
     * 
     */
    private String replyStatus;
    /**
     * @return Account type.
     * 
     */
    private String sendtype;
    /**
     * @return Account Status. Valid values: `0`, `1`. Freeze: 1, normal: 0.
     * 
     */
    private String status;

    private GetMailAddressesAddress() {}
    /**
     * @return The sender address.
     * 
     */
    public String accountName() {
        return this.accountName;
    }
    /**
     * @return The creation of the record time.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return On the quota limit.
     * 
     */
    public String dailyCount() {
        return this.dailyCount;
    }
    /**
     * @return On the quota.
     * 
     */
    public String dailyReqCount() {
        return this.dailyReqCount;
    }
    /**
     * @return Domain name status. Valid values: `0`, `1`.
     * 
     */
    public String domainStatus() {
        return this.domainStatus;
    }
    /**
     * @return The ID of the Mail Address.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The sender address ID.
     * 
     */
    public String mailAddressId() {
        return this.mailAddressId;
    }
    /**
     * @return Monthly quota limit.
     * 
     */
    public String monthCount() {
        return this.monthCount;
    }
    /**
     * @return Months amount.
     * 
     */
    public String monthReqCount() {
        return this.monthReqCount;
    }
    /**
     * @return Return address.
     * 
     */
    public String replyAddress() {
        return this.replyAddress;
    }
    /**
     * @return If using STMP address status.
     * 
     */
    public String replyStatus() {
        return this.replyStatus;
    }
    /**
     * @return Account type.
     * 
     */
    public String sendtype() {
        return this.sendtype;
    }
    /**
     * @return Account Status. Valid values: `0`, `1`. Freeze: 1, normal: 0.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMailAddressesAddress defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountName;
        private String createTime;
        private String dailyCount;
        private String dailyReqCount;
        private String domainStatus;
        private String id;
        private String mailAddressId;
        private String monthCount;
        private String monthReqCount;
        private String replyAddress;
        private String replyStatus;
        private String sendtype;
        private String status;
        public Builder() {}
        public Builder(GetMailAddressesAddress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.createTime = defaults.createTime;
    	      this.dailyCount = defaults.dailyCount;
    	      this.dailyReqCount = defaults.dailyReqCount;
    	      this.domainStatus = defaults.domainStatus;
    	      this.id = defaults.id;
    	      this.mailAddressId = defaults.mailAddressId;
    	      this.monthCount = defaults.monthCount;
    	      this.monthReqCount = defaults.monthReqCount;
    	      this.replyAddress = defaults.replyAddress;
    	      this.replyStatus = defaults.replyStatus;
    	      this.sendtype = defaults.sendtype;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder accountName(String accountName) {
            if (accountName == null) {
              throw new MissingRequiredPropertyException("GetMailAddressesAddress", "accountName");
            }
            this.accountName = accountName;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetMailAddressesAddress", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder dailyCount(String dailyCount) {
            if (dailyCount == null) {
              throw new MissingRequiredPropertyException("GetMailAddressesAddress", "dailyCount");
            }
            this.dailyCount = dailyCount;
            return this;
        }
        @CustomType.Setter
        public Builder dailyReqCount(String dailyReqCount) {
            if (dailyReqCount == null) {
              throw new MissingRequiredPropertyException("GetMailAddressesAddress", "dailyReqCount");
            }
            this.dailyReqCount = dailyReqCount;
            return this;
        }
        @CustomType.Setter
        public Builder domainStatus(String domainStatus) {
            if (domainStatus == null) {
              throw new MissingRequiredPropertyException("GetMailAddressesAddress", "domainStatus");
            }
            this.domainStatus = domainStatus;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMailAddressesAddress", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder mailAddressId(String mailAddressId) {
            if (mailAddressId == null) {
              throw new MissingRequiredPropertyException("GetMailAddressesAddress", "mailAddressId");
            }
            this.mailAddressId = mailAddressId;
            return this;
        }
        @CustomType.Setter
        public Builder monthCount(String monthCount) {
            if (monthCount == null) {
              throw new MissingRequiredPropertyException("GetMailAddressesAddress", "monthCount");
            }
            this.monthCount = monthCount;
            return this;
        }
        @CustomType.Setter
        public Builder monthReqCount(String monthReqCount) {
            if (monthReqCount == null) {
              throw new MissingRequiredPropertyException("GetMailAddressesAddress", "monthReqCount");
            }
            this.monthReqCount = monthReqCount;
            return this;
        }
        @CustomType.Setter
        public Builder replyAddress(String replyAddress) {
            if (replyAddress == null) {
              throw new MissingRequiredPropertyException("GetMailAddressesAddress", "replyAddress");
            }
            this.replyAddress = replyAddress;
            return this;
        }
        @CustomType.Setter
        public Builder replyStatus(String replyStatus) {
            if (replyStatus == null) {
              throw new MissingRequiredPropertyException("GetMailAddressesAddress", "replyStatus");
            }
            this.replyStatus = replyStatus;
            return this;
        }
        @CustomType.Setter
        public Builder sendtype(String sendtype) {
            if (sendtype == null) {
              throw new MissingRequiredPropertyException("GetMailAddressesAddress", "sendtype");
            }
            this.sendtype = sendtype;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetMailAddressesAddress", "status");
            }
            this.status = status;
            return this;
        }
        public GetMailAddressesAddress build() {
            final var _resultValue = new GetMailAddressesAddress();
            _resultValue.accountName = accountName;
            _resultValue.createTime = createTime;
            _resultValue.dailyCount = dailyCount;
            _resultValue.dailyReqCount = dailyReqCount;
            _resultValue.domainStatus = domainStatus;
            _resultValue.id = id;
            _resultValue.mailAddressId = mailAddressId;
            _resultValue.monthCount = monthCount;
            _resultValue.monthReqCount = monthReqCount;
            _resultValue.replyAddress = replyAddress;
            _resultValue.replyStatus = replyStatus;
            _resultValue.sendtype = sendtype;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
