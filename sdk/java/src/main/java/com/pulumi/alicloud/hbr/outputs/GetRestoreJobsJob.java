// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.hbr.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRestoreJobsJob {
    /**
     * @return The actual size of Snapshot.
     * 
     */
    private String actualBytes;
    /**
     * @return The actual number of files.
     * 
     */
    private String actualItems;
    /**
     * @return The size of restore job recovered.
     * 
     */
    private String bytesDone;
    /**
     * @return The total size of restore job recovered.
     * 
     */
    private String bytesTotal;
    /**
     * @return The completion time of restore Job.
     * 
     */
    private String completeTime;
    /**
     * @return The creation time of restore job.
     * 
     */
    private String createTime;
    private String errorFile;
    /**
     * @return The error message of recovery task execution.
     * 
     */
    private String errorMessage;
    /**
     * @return The expiration time of restore job. Unix Time in seconds.
     * 
     */
    private String expireTime;
    /**
     * @return The ID of the restore job.
     * 
     */
    private String id;
    /**
     * @return The number of items restore job recovered.
     * 
     */
    private String itemsDone;
    /**
     * @return The total number of items restore job recovered.
     * 
     */
    private String itemsTotal;
    /**
     * @return Recovery Options.
     * 
     */
    private String options;
    private String parentId;
    /**
     * @return The recovery progress.
     * 
     */
    private Integer progress;
    /**
     * @return The ID of restore job.
     * 
     */
    private String restoreJobId;
    /**
     * @return The type of recovery destination. Valid Values: `ECS_FILE`, `OSS`, `NAS`.
     * 
     */
    private String restoreType;
    /**
     * @return The hashcode of Snapshot.
     * 
     */
    private String snapshotHash;
    /**
     * @return The ID of Snapshot.
     * 
     */
    private String snapshotId;
    /**
     * @return The list of data source types. Valid values: `ECS_FILE`, `NAS`, `OSS`, `OTS_TABLE`,`UDM_ECS_ROLLBACK`.
     * 
     */
    private String sourceType;
    /**
     * @return The start time of restore job. Unix Time in Seconds.
     * 
     */
    private String startTime;
    /**
     * @return The status of restore job.
     * 
     */
    private String status;
    /**
     * @return The name of target ofo OSS bucket.
     * 
     */
    private String targetBucket;
    private String targetClientId;
    /**
     * @return The creation time of destination file system.
     * 
     */
    private String targetCreateTime;
    private String targetDataSourceId;
    /**
     * @return The ID of destination file system.
     * 
     */
    private String targetFileSystemId;
    /**
     * @return The ID of target ECS instance.
     * 
     */
    private String targetInstanceId;
    /**
     * @return The target file path of ECS instance.
     * 
     */
    private String targetPath;
    /**
     * @return The file prefix of target OSS object.
     * 
     */
    private String targetPrefix;
    /**
     * @return The update Time of restore job. Unix Time in Seconds.
     * 
     */
    private String updatedTime;
    /**
     * @return The ID of backup vault.
     * 
     */
    private String vaultId;

    private GetRestoreJobsJob() {}
    /**
     * @return The actual size of Snapshot.
     * 
     */
    public String actualBytes() {
        return this.actualBytes;
    }
    /**
     * @return The actual number of files.
     * 
     */
    public String actualItems() {
        return this.actualItems;
    }
    /**
     * @return The size of restore job recovered.
     * 
     */
    public String bytesDone() {
        return this.bytesDone;
    }
    /**
     * @return The total size of restore job recovered.
     * 
     */
    public String bytesTotal() {
        return this.bytesTotal;
    }
    /**
     * @return The completion time of restore Job.
     * 
     */
    public String completeTime() {
        return this.completeTime;
    }
    /**
     * @return The creation time of restore job.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    public String errorFile() {
        return this.errorFile;
    }
    /**
     * @return The error message of recovery task execution.
     * 
     */
    public String errorMessage() {
        return this.errorMessage;
    }
    /**
     * @return The expiration time of restore job. Unix Time in seconds.
     * 
     */
    public String expireTime() {
        return this.expireTime;
    }
    /**
     * @return The ID of the restore job.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The number of items restore job recovered.
     * 
     */
    public String itemsDone() {
        return this.itemsDone;
    }
    /**
     * @return The total number of items restore job recovered.
     * 
     */
    public String itemsTotal() {
        return this.itemsTotal;
    }
    /**
     * @return Recovery Options.
     * 
     */
    public String options() {
        return this.options;
    }
    public String parentId() {
        return this.parentId;
    }
    /**
     * @return The recovery progress.
     * 
     */
    public Integer progress() {
        return this.progress;
    }
    /**
     * @return The ID of restore job.
     * 
     */
    public String restoreJobId() {
        return this.restoreJobId;
    }
    /**
     * @return The type of recovery destination. Valid Values: `ECS_FILE`, `OSS`, `NAS`.
     * 
     */
    public String restoreType() {
        return this.restoreType;
    }
    /**
     * @return The hashcode of Snapshot.
     * 
     */
    public String snapshotHash() {
        return this.snapshotHash;
    }
    /**
     * @return The ID of Snapshot.
     * 
     */
    public String snapshotId() {
        return this.snapshotId;
    }
    /**
     * @return The list of data source types. Valid values: `ECS_FILE`, `NAS`, `OSS`, `OTS_TABLE`,`UDM_ECS_ROLLBACK`.
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }
    /**
     * @return The start time of restore job. Unix Time in Seconds.
     * 
     */
    public String startTime() {
        return this.startTime;
    }
    /**
     * @return The status of restore job.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The name of target ofo OSS bucket.
     * 
     */
    public String targetBucket() {
        return this.targetBucket;
    }
    public String targetClientId() {
        return this.targetClientId;
    }
    /**
     * @return The creation time of destination file system.
     * 
     */
    public String targetCreateTime() {
        return this.targetCreateTime;
    }
    public String targetDataSourceId() {
        return this.targetDataSourceId;
    }
    /**
     * @return The ID of destination file system.
     * 
     */
    public String targetFileSystemId() {
        return this.targetFileSystemId;
    }
    /**
     * @return The ID of target ECS instance.
     * 
     */
    public String targetInstanceId() {
        return this.targetInstanceId;
    }
    /**
     * @return The target file path of ECS instance.
     * 
     */
    public String targetPath() {
        return this.targetPath;
    }
    /**
     * @return The file prefix of target OSS object.
     * 
     */
    public String targetPrefix() {
        return this.targetPrefix;
    }
    /**
     * @return The update Time of restore job. Unix Time in Seconds.
     * 
     */
    public String updatedTime() {
        return this.updatedTime;
    }
    /**
     * @return The ID of backup vault.
     * 
     */
    public String vaultId() {
        return this.vaultId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRestoreJobsJob defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String actualBytes;
        private String actualItems;
        private String bytesDone;
        private String bytesTotal;
        private String completeTime;
        private String createTime;
        private String errorFile;
        private String errorMessage;
        private String expireTime;
        private String id;
        private String itemsDone;
        private String itemsTotal;
        private String options;
        private String parentId;
        private Integer progress;
        private String restoreJobId;
        private String restoreType;
        private String snapshotHash;
        private String snapshotId;
        private String sourceType;
        private String startTime;
        private String status;
        private String targetBucket;
        private String targetClientId;
        private String targetCreateTime;
        private String targetDataSourceId;
        private String targetFileSystemId;
        private String targetInstanceId;
        private String targetPath;
        private String targetPrefix;
        private String updatedTime;
        private String vaultId;
        public Builder() {}
        public Builder(GetRestoreJobsJob defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actualBytes = defaults.actualBytes;
    	      this.actualItems = defaults.actualItems;
    	      this.bytesDone = defaults.bytesDone;
    	      this.bytesTotal = defaults.bytesTotal;
    	      this.completeTime = defaults.completeTime;
    	      this.createTime = defaults.createTime;
    	      this.errorFile = defaults.errorFile;
    	      this.errorMessage = defaults.errorMessage;
    	      this.expireTime = defaults.expireTime;
    	      this.id = defaults.id;
    	      this.itemsDone = defaults.itemsDone;
    	      this.itemsTotal = defaults.itemsTotal;
    	      this.options = defaults.options;
    	      this.parentId = defaults.parentId;
    	      this.progress = defaults.progress;
    	      this.restoreJobId = defaults.restoreJobId;
    	      this.restoreType = defaults.restoreType;
    	      this.snapshotHash = defaults.snapshotHash;
    	      this.snapshotId = defaults.snapshotId;
    	      this.sourceType = defaults.sourceType;
    	      this.startTime = defaults.startTime;
    	      this.status = defaults.status;
    	      this.targetBucket = defaults.targetBucket;
    	      this.targetClientId = defaults.targetClientId;
    	      this.targetCreateTime = defaults.targetCreateTime;
    	      this.targetDataSourceId = defaults.targetDataSourceId;
    	      this.targetFileSystemId = defaults.targetFileSystemId;
    	      this.targetInstanceId = defaults.targetInstanceId;
    	      this.targetPath = defaults.targetPath;
    	      this.targetPrefix = defaults.targetPrefix;
    	      this.updatedTime = defaults.updatedTime;
    	      this.vaultId = defaults.vaultId;
        }

        @CustomType.Setter
        public Builder actualBytes(String actualBytes) {
            if (actualBytes == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "actualBytes");
            }
            this.actualBytes = actualBytes;
            return this;
        }
        @CustomType.Setter
        public Builder actualItems(String actualItems) {
            if (actualItems == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "actualItems");
            }
            this.actualItems = actualItems;
            return this;
        }
        @CustomType.Setter
        public Builder bytesDone(String bytesDone) {
            if (bytesDone == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "bytesDone");
            }
            this.bytesDone = bytesDone;
            return this;
        }
        @CustomType.Setter
        public Builder bytesTotal(String bytesTotal) {
            if (bytesTotal == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "bytesTotal");
            }
            this.bytesTotal = bytesTotal;
            return this;
        }
        @CustomType.Setter
        public Builder completeTime(String completeTime) {
            if (completeTime == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "completeTime");
            }
            this.completeTime = completeTime;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder errorFile(String errorFile) {
            if (errorFile == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "errorFile");
            }
            this.errorFile = errorFile;
            return this;
        }
        @CustomType.Setter
        public Builder errorMessage(String errorMessage) {
            if (errorMessage == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "errorMessage");
            }
            this.errorMessage = errorMessage;
            return this;
        }
        @CustomType.Setter
        public Builder expireTime(String expireTime) {
            if (expireTime == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "expireTime");
            }
            this.expireTime = expireTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder itemsDone(String itemsDone) {
            if (itemsDone == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "itemsDone");
            }
            this.itemsDone = itemsDone;
            return this;
        }
        @CustomType.Setter
        public Builder itemsTotal(String itemsTotal) {
            if (itemsTotal == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "itemsTotal");
            }
            this.itemsTotal = itemsTotal;
            return this;
        }
        @CustomType.Setter
        public Builder options(String options) {
            if (options == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "options");
            }
            this.options = options;
            return this;
        }
        @CustomType.Setter
        public Builder parentId(String parentId) {
            if (parentId == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "parentId");
            }
            this.parentId = parentId;
            return this;
        }
        @CustomType.Setter
        public Builder progress(Integer progress) {
            if (progress == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "progress");
            }
            this.progress = progress;
            return this;
        }
        @CustomType.Setter
        public Builder restoreJobId(String restoreJobId) {
            if (restoreJobId == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "restoreJobId");
            }
            this.restoreJobId = restoreJobId;
            return this;
        }
        @CustomType.Setter
        public Builder restoreType(String restoreType) {
            if (restoreType == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "restoreType");
            }
            this.restoreType = restoreType;
            return this;
        }
        @CustomType.Setter
        public Builder snapshotHash(String snapshotHash) {
            if (snapshotHash == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "snapshotHash");
            }
            this.snapshotHash = snapshotHash;
            return this;
        }
        @CustomType.Setter
        public Builder snapshotId(String snapshotId) {
            if (snapshotId == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "snapshotId");
            }
            this.snapshotId = snapshotId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceType(String sourceType) {
            if (sourceType == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "sourceType");
            }
            this.sourceType = sourceType;
            return this;
        }
        @CustomType.Setter
        public Builder startTime(String startTime) {
            if (startTime == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "startTime");
            }
            this.startTime = startTime;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder targetBucket(String targetBucket) {
            if (targetBucket == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "targetBucket");
            }
            this.targetBucket = targetBucket;
            return this;
        }
        @CustomType.Setter
        public Builder targetClientId(String targetClientId) {
            if (targetClientId == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "targetClientId");
            }
            this.targetClientId = targetClientId;
            return this;
        }
        @CustomType.Setter
        public Builder targetCreateTime(String targetCreateTime) {
            if (targetCreateTime == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "targetCreateTime");
            }
            this.targetCreateTime = targetCreateTime;
            return this;
        }
        @CustomType.Setter
        public Builder targetDataSourceId(String targetDataSourceId) {
            if (targetDataSourceId == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "targetDataSourceId");
            }
            this.targetDataSourceId = targetDataSourceId;
            return this;
        }
        @CustomType.Setter
        public Builder targetFileSystemId(String targetFileSystemId) {
            if (targetFileSystemId == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "targetFileSystemId");
            }
            this.targetFileSystemId = targetFileSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder targetInstanceId(String targetInstanceId) {
            if (targetInstanceId == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "targetInstanceId");
            }
            this.targetInstanceId = targetInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder targetPath(String targetPath) {
            if (targetPath == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "targetPath");
            }
            this.targetPath = targetPath;
            return this;
        }
        @CustomType.Setter
        public Builder targetPrefix(String targetPrefix) {
            if (targetPrefix == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "targetPrefix");
            }
            this.targetPrefix = targetPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder updatedTime(String updatedTime) {
            if (updatedTime == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "updatedTime");
            }
            this.updatedTime = updatedTime;
            return this;
        }
        @CustomType.Setter
        public Builder vaultId(String vaultId) {
            if (vaultId == null) {
              throw new MissingRequiredPropertyException("GetRestoreJobsJob", "vaultId");
            }
            this.vaultId = vaultId;
            return this;
        }
        public GetRestoreJobsJob build() {
            final var _resultValue = new GetRestoreJobsJob();
            _resultValue.actualBytes = actualBytes;
            _resultValue.actualItems = actualItems;
            _resultValue.bytesDone = bytesDone;
            _resultValue.bytesTotal = bytesTotal;
            _resultValue.completeTime = completeTime;
            _resultValue.createTime = createTime;
            _resultValue.errorFile = errorFile;
            _resultValue.errorMessage = errorMessage;
            _resultValue.expireTime = expireTime;
            _resultValue.id = id;
            _resultValue.itemsDone = itemsDone;
            _resultValue.itemsTotal = itemsTotal;
            _resultValue.options = options;
            _resultValue.parentId = parentId;
            _resultValue.progress = progress;
            _resultValue.restoreJobId = restoreJobId;
            _resultValue.restoreType = restoreType;
            _resultValue.snapshotHash = snapshotHash;
            _resultValue.snapshotId = snapshotId;
            _resultValue.sourceType = sourceType;
            _resultValue.startTime = startTime;
            _resultValue.status = status;
            _resultValue.targetBucket = targetBucket;
            _resultValue.targetClientId = targetClientId;
            _resultValue.targetCreateTime = targetCreateTime;
            _resultValue.targetDataSourceId = targetDataSourceId;
            _resultValue.targetFileSystemId = targetFileSystemId;
            _resultValue.targetInstanceId = targetInstanceId;
            _resultValue.targetPath = targetPath;
            _resultValue.targetPrefix = targetPrefix;
            _resultValue.updatedTime = updatedTime;
            _resultValue.vaultId = vaultId;
            return _resultValue;
        }
    }
}
