// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class V3ProvisionConfigTargetTrackingPolicy {
    /**
     * @return Policy expiration time
     * 
     */
    private @Nullable String endTime;
    /**
     * @return Maximum value of expansion
     * 
     */
    private @Nullable Integer maxCapacity;
    /**
     * @return Tracking value of the indicator
     * 
     */
    private @Nullable Double metricTarget;
    /**
     * @return Provisionedconcurrency utilization: Concurrency utilization of reserved mode instances. CPU utilization: CPU utilization. GPUMemUtilization:GPU utilization
     * 
     */
    private @Nullable String metricType;
    /**
     * @return Minimum Shrinkage
     * 
     */
    private @Nullable Integer minCapacity;
    /**
     * @return Policy Name
     * 
     */
    private @Nullable String name;
    /**
     * @return Policy Effective Time
     * 
     */
    private @Nullable String startTime;
    /**
     * @return Time zone.
     * 
     */
    private @Nullable String timeZone;

    private V3ProvisionConfigTargetTrackingPolicy() {}
    /**
     * @return Policy expiration time
     * 
     */
    public Optional<String> endTime() {
        return Optional.ofNullable(this.endTime);
    }
    /**
     * @return Maximum value of expansion
     * 
     */
    public Optional<Integer> maxCapacity() {
        return Optional.ofNullable(this.maxCapacity);
    }
    /**
     * @return Tracking value of the indicator
     * 
     */
    public Optional<Double> metricTarget() {
        return Optional.ofNullable(this.metricTarget);
    }
    /**
     * @return Provisionedconcurrency utilization: Concurrency utilization of reserved mode instances. CPU utilization: CPU utilization. GPUMemUtilization:GPU utilization
     * 
     */
    public Optional<String> metricType() {
        return Optional.ofNullable(this.metricType);
    }
    /**
     * @return Minimum Shrinkage
     * 
     */
    public Optional<Integer> minCapacity() {
        return Optional.ofNullable(this.minCapacity);
    }
    /**
     * @return Policy Name
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Policy Effective Time
     * 
     */
    public Optional<String> startTime() {
        return Optional.ofNullable(this.startTime);
    }
    /**
     * @return Time zone.
     * 
     */
    public Optional<String> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(V3ProvisionConfigTargetTrackingPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String endTime;
        private @Nullable Integer maxCapacity;
        private @Nullable Double metricTarget;
        private @Nullable String metricType;
        private @Nullable Integer minCapacity;
        private @Nullable String name;
        private @Nullable String startTime;
        private @Nullable String timeZone;
        public Builder() {}
        public Builder(V3ProvisionConfigTargetTrackingPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endTime = defaults.endTime;
    	      this.maxCapacity = defaults.maxCapacity;
    	      this.metricTarget = defaults.metricTarget;
    	      this.metricType = defaults.metricType;
    	      this.minCapacity = defaults.minCapacity;
    	      this.name = defaults.name;
    	      this.startTime = defaults.startTime;
    	      this.timeZone = defaults.timeZone;
        }

        @CustomType.Setter
        public Builder endTime(@Nullable String endTime) {

            this.endTime = endTime;
            return this;
        }
        @CustomType.Setter
        public Builder maxCapacity(@Nullable Integer maxCapacity) {

            this.maxCapacity = maxCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder metricTarget(@Nullable Double metricTarget) {

            this.metricTarget = metricTarget;
            return this;
        }
        @CustomType.Setter
        public Builder metricType(@Nullable String metricType) {

            this.metricType = metricType;
            return this;
        }
        @CustomType.Setter
        public Builder minCapacity(@Nullable Integer minCapacity) {

            this.minCapacity = minCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder startTime(@Nullable String startTime) {

            this.startTime = startTime;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(@Nullable String timeZone) {

            this.timeZone = timeZone;
            return this;
        }
        public V3ProvisionConfigTargetTrackingPolicy build() {
            final var _resultValue = new V3ProvisionConfigTargetTrackingPolicy();
            _resultValue.endTime = endTime;
            _resultValue.maxCapacity = maxCapacity;
            _resultValue.metricTarget = metricTarget;
            _resultValue.metricType = metricType;
            _resultValue.minCapacity = minCapacity;
            _resultValue.name = name;
            _resultValue.startTime = startTime;
            _resultValue.timeZone = timeZone;
            return _resultValue;
        }
    }
}
