// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cassandra;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.cassandra.DataCenterArgs;
import com.pulumi.alicloud.cassandra.inputs.DataCenterState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Cassandra dataCenter resource supports replica set dataCenters only. The Cassandra provides stable, reliable, and automatic scalable database services.
 * It offers a full range of database solutions, such as disaster recovery, backup, recovery, monitoring, and alarms.
 * You can see detail product introduction [here](https://www.alibabacloud.com/help/product/49055.htm).
 * 
 * &gt; **NOTE:**  Available in 1.88.0+.
 * 
 * &gt; **NOTE:**  Create a cassandra dataCenter need a clusterId,so need create a cassandra cluster first.
 * 
 * &gt; **NOTE:**  The following regions support create Vpc network Cassandra cluster.
 * The official website mark  more regions. Or you can call [DescribeRegions](https://help.aliyun.com/document_detail/157540.html).
 * 
 * &gt; **NOTE:**  Create Cassandra dataCenter or change dataCenter type and storage would cost 30 minutes. Please make full preparation.
 * 
 * ## Example Usage
 * ### Create a cassandra dataCenter
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.cassandra.Cluster;
 * import com.pulumi.alicloud.cassandra.ClusterArgs;
 * import com.pulumi.alicloud.cassandra.DataCenter;
 * import com.pulumi.alicloud.cassandra.DataCenterArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var defaultCluster = new Cluster(&#34;defaultCluster&#34;, ClusterArgs.builder()        
 *             .clusterName(&#34;cassandra-cluster-name-tf&#34;)
 *             .dataCenterName(&#34;dc-1&#34;)
 *             .autoRenew(&#34;false&#34;)
 *             .instanceType(&#34;cassandra.c.large&#34;)
 *             .majorVersion(&#34;3.11&#34;)
 *             .nodeCount(&#34;2&#34;)
 *             .payType(&#34;PayAsYouGo&#34;)
 *             .vswitchId(&#34;vsw-xxxx1&#34;)
 *             .diskSize(&#34;160&#34;)
 *             .diskType(&#34;cloud_ssd&#34;)
 *             .maintainStartTime(&#34;18:00Z&#34;)
 *             .maintainEndTime(&#34;20:00Z&#34;)
 *             .ipWhite(&#34;127.0.0.1&#34;)
 *             .build());
 * 
 *         var defaultDataCenter = new DataCenter(&#34;defaultDataCenter&#34;, DataCenterArgs.builder()        
 *             .clusterId(defaultCluster.id())
 *             .dataCenterName(&#34;dc-2&#34;)
 *             .autoRenew(&#34;false&#34;)
 *             .instanceType(&#34;cassandra.c.large&#34;)
 *             .nodeCount(&#34;2&#34;)
 *             .payType(&#34;PayAsYouGo&#34;)
 *             .vswitchId(&#34;vsw-xxxx2&#34;)
 *             .diskSize(&#34;160&#34;)
 *             .diskType(&#34;cloud_ssd&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * This is a example for class netType dataCenter. You can find more detail with the examples/cassandra_data_center dir.
 * 
 * ## Import
 * 
 * If you need full function, please import Cassandra cluster first.
 * 
 *  Cassandra dataCenter can be imported using the dcId:clusterId, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:cassandra/dataCenter:DataCenter dc_2 cn-shenxxxx-x:cds-wz933ryoaurxxxxx
 * ```
 * 
 */
@ResourceType(type="alicloud:cassandra/dataCenter:DataCenter")
public class DataCenter extends com.pulumi.resources.CustomResource {
    /**
     * Auto renew of dataCenter-2,`true` or `false`. System default to `false`, valid when pay_type = Subscription.
     * 
     */
    @Export(name="autoRenew", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autoRenew;

    /**
     * @return Auto renew of dataCenter-2,`true` or `false`. System default to `false`, valid when pay_type = Subscription.
     * 
     */
    public Output<Optional<Boolean>> autoRenew() {
        return Codegen.optional(this.autoRenew);
    }
    /**
     * Period of dataCenter-2 auto renew, if auto renew is `true`, one of `1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 60`, valid when pay_type = Subscription. Unit: month.
     * 
     */
    @Export(name="autoRenewPeriod", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> autoRenewPeriod;

    /**
     * @return Period of dataCenter-2 auto renew, if auto renew is `true`, one of `1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 60`, valid when pay_type = Subscription. Unit: month.
     * 
     */
    public Output<Optional<Integer>> autoRenewPeriod() {
        return Codegen.optional(this.autoRenewPeriod);
    }
    /**
     * Cassandra cluster id of dataCenter-2 belongs to.
     * 
     */
    @Export(name="clusterId", refs={String.class}, tree="[0]")
    private Output<String> clusterId;

    /**
     * @return Cassandra cluster id of dataCenter-2 belongs to.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }
    @Export(name="dataCenterId", refs={String.class}, tree="[0]")
    private Output<String> dataCenterId;

    public Output<String> dataCenterId() {
        return this.dataCenterId;
    }
    /**
     * Cassandra dataCenter-2 name. Length must be 2~128 characters long. Only Chinese characters, English letters, numbers, period `.`, underline `_`, or dash `-` are permitted.
     * 
     */
    @Export(name="dataCenterName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dataCenterName;

    /**
     * @return Cassandra dataCenter-2 name. Length must be 2~128 characters long. Only Chinese characters, English letters, numbers, period `.`, underline `_`, or dash `-` are permitted.
     * 
     */
    public Output<Optional<String>> dataCenterName() {
        return Codegen.optional(this.dataCenterName);
    }
    /**
     * User-defined Cassandra dataCenter one core node&#39;s storage space.Unit: GB. Value range:
     * - Custom storage space; value range: [160, 2000].
     * - 80-GB increments.
     * 
     */
    @Export(name="diskSize", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> diskSize;

    /**
     * @return User-defined Cassandra dataCenter one core node&#39;s storage space.Unit: GB. Value range:
     * - Custom storage space; value range: [160, 2000].
     * - 80-GB increments.
     * 
     */
    public Output<Optional<Integer>> diskSize() {
        return Codegen.optional(this.diskSize);
    }
    /**
     * The disk type of Cassandra dataCenter-2. Valid values are `cloud_ssd`, `cloud_efficiency`, `local_hdd_pro`, `local_ssd_pro`, local_disk size is fixed.
     * 
     */
    @Export(name="diskType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> diskType;

    /**
     * @return The disk type of Cassandra dataCenter-2. Valid values are `cloud_ssd`, `cloud_efficiency`, `local_hdd_pro`, `local_ssd_pro`, local_disk size is fixed.
     * 
     */
    public Output<Optional<String>> diskType() {
        return Codegen.optional(this.diskType);
    }
    @Export(name="enablePublic", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enablePublic;

    public Output<Optional<Boolean>> enablePublic() {
        return Codegen.optional(this.enablePublic);
    }
    /**
     * Instance specification. See [Instance specifications](https://help.aliyun.com/document_detail/157445.html). Or you can call describeInstanceType api.
     * 
     */
    @Export(name="instanceType", refs={String.class}, tree="[0]")
    private Output<String> instanceType;

    /**
     * @return Instance specification. See [Instance specifications](https://help.aliyun.com/document_detail/157445.html). Or you can call describeInstanceType api.
     * 
     */
    public Output<String> instanceType() {
        return this.instanceType;
    }
    /**
     * The node count of Cassandra dataCenter-2, default to 2.
     * 
     */
    @Export(name="nodeCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> nodeCount;

    /**
     * @return The node count of Cassandra dataCenter-2, default to 2.
     * 
     */
    public Output<Integer> nodeCount() {
        return this.nodeCount;
    }
    /**
     * The pay type of Cassandra dataCenter-2. Valid values are `Subscription`, `PayAsYouGo`. System default to `PayAsYouGo`.
     * 
     */
    @Export(name="payType", refs={String.class}, tree="[0]")
    private Output<String> payType;

    /**
     * @return The pay type of Cassandra dataCenter-2. Valid values are `Subscription`, `PayAsYouGo`. System default to `PayAsYouGo`.
     * 
     */
    public Output<String> payType() {
        return this.payType;
    }
    @Export(name="period", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> period;

    public Output<Optional<Integer>> period() {
        return Codegen.optional(this.period);
    }
    @Export(name="periodUnit", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> periodUnit;

    public Output<Optional<String>> periodUnit() {
        return Codegen.optional(this.periodUnit);
    }
    @Export(name="publicPoints", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> publicPoints;

    public Output<List<String>> publicPoints() {
        return this.publicPoints;
    }
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    public Output<String> status() {
        return this.status;
    }
    /**
     * The vswitch_id of dataCenter-2, mast different of vswitch_id(dc-1), can not empty.
     * 
     * &gt; **NOTE:** Now data_center_name,instance_type,node_count,disk_type,disk_size can be change. The others(auto_renew, auto_renew_period and so on) will be supported in the furture.
     * 
     */
    @Export(name="vswitchId", refs={String.class}, tree="[0]")
    private Output<String> vswitchId;

    /**
     * @return The vswitch_id of dataCenter-2, mast different of vswitch_id(dc-1), can not empty.
     * 
     * &gt; **NOTE:** Now data_center_name,instance_type,node_count,disk_type,disk_size can be change. The others(auto_renew, auto_renew_period and so on) will be supported in the furture.
     * 
     */
    public Output<String> vswitchId() {
        return this.vswitchId;
    }
    /**
     * The Zone to launch the Cassandra dataCenter-2. If vswitch_id is not empty, this zone_id can be &#34;&#34; or consistent.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return The Zone to launch the Cassandra dataCenter-2. If vswitch_id is not empty, this zone_id can be &#34;&#34; or consistent.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DataCenter(String name) {
        this(name, DataCenterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DataCenter(String name, DataCenterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DataCenter(String name, DataCenterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:cassandra/dataCenter:DataCenter", name, args == null ? DataCenterArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DataCenter(String name, Output<String> id, @Nullable DataCenterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:cassandra/dataCenter:DataCenter", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DataCenter get(String name, Output<String> id, @Nullable DataCenterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DataCenter(name, id, state, options);
    }
}
