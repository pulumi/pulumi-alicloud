// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkOptimizationArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkOptimizationArgs Empty = new NetworkOptimizationArgs();

    /**
     * Whether to enable GRPC, default is disabled. Value range:
     * 
     */
    @Import(name="grpc")
    private @Nullable Output<String> grpc;

    /**
     * @return Whether to enable GRPC, default is disabled. Value range:
     * 
     */
    public Optional<Output<String>> grpc() {
        return Optional.ofNullable(this.grpc);
    }

    /**
     * Whether to enable HTTP2 origin, default is disabled. Value range:
     * 
     */
    @Import(name="http2Origin")
    private @Nullable Output<String> http2Origin;

    /**
     * @return Whether to enable HTTP2 origin, default is disabled. Value range:
     * 
     */
    public Optional<Output<String>> http2Origin() {
        return Optional.ofNullable(this.http2Origin);
    }

    /**
     * Rule content.
     * 
     */
    @Import(name="rule")
    private @Nullable Output<String> rule;

    /**
     * @return Rule content.
     * 
     */
    public Optional<Output<String>> rule() {
        return Optional.ofNullable(this.rule);
    }

    /**
     * Rule switch. Values:
     * 
     */
    @Import(name="ruleEnable")
    private @Nullable Output<String> ruleEnable;

    /**
     * @return Rule switch. Values:
     * 
     */
    public Optional<Output<String>> ruleEnable() {
        return Optional.ofNullable(this.ruleEnable);
    }

    /**
     * Rule name.
     * 
     */
    @Import(name="ruleName")
    private @Nullable Output<String> ruleName;

    /**
     * @return Rule name.
     * 
     */
    public Optional<Output<String>> ruleName() {
        return Optional.ofNullable(this.ruleName);
    }

    /**
     * Site ID.
     * 
     */
    @Import(name="siteId", required=true)
    private Output<Integer> siteId;

    /**
     * @return Site ID.
     * 
     */
    public Output<Integer> siteId() {
        return this.siteId;
    }

    /**
     * Site version number.
     * 
     */
    @Import(name="siteVersion")
    private @Nullable Output<Integer> siteVersion;

    /**
     * @return Site version number.
     * 
     */
    public Optional<Output<Integer>> siteVersion() {
        return Optional.ofNullable(this.siteVersion);
    }

    /**
     * Whether to enable smart routing service, default is disabled. Value range:
     * 
     */
    @Import(name="smartRouting")
    private @Nullable Output<String> smartRouting;

    /**
     * @return Whether to enable smart routing service, default is disabled. Value range:
     * 
     */
    public Optional<Output<String>> smartRouting() {
        return Optional.ofNullable(this.smartRouting);
    }

    /**
     * Maximum upload file size, in MB, value range: 100～500.
     * 
     */
    @Import(name="uploadMaxFilesize")
    private @Nullable Output<String> uploadMaxFilesize;

    /**
     * @return Maximum upload file size, in MB, value range: 100～500.
     * 
     */
    public Optional<Output<String>> uploadMaxFilesize() {
        return Optional.ofNullable(this.uploadMaxFilesize);
    }

    /**
     * Whether to enable Websocket, default is enabled. Value range:
     * 
     */
    @Import(name="websocket")
    private @Nullable Output<String> websocket;

    /**
     * @return Whether to enable Websocket, default is enabled. Value range:
     * 
     */
    public Optional<Output<String>> websocket() {
        return Optional.ofNullable(this.websocket);
    }

    private NetworkOptimizationArgs() {}

    private NetworkOptimizationArgs(NetworkOptimizationArgs $) {
        this.grpc = $.grpc;
        this.http2Origin = $.http2Origin;
        this.rule = $.rule;
        this.ruleEnable = $.ruleEnable;
        this.ruleName = $.ruleName;
        this.siteId = $.siteId;
        this.siteVersion = $.siteVersion;
        this.smartRouting = $.smartRouting;
        this.uploadMaxFilesize = $.uploadMaxFilesize;
        this.websocket = $.websocket;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkOptimizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkOptimizationArgs $;

        public Builder() {
            $ = new NetworkOptimizationArgs();
        }

        public Builder(NetworkOptimizationArgs defaults) {
            $ = new NetworkOptimizationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param grpc Whether to enable GRPC, default is disabled. Value range:
         * 
         * @return builder
         * 
         */
        public Builder grpc(@Nullable Output<String> grpc) {
            $.grpc = grpc;
            return this;
        }

        /**
         * @param grpc Whether to enable GRPC, default is disabled. Value range:
         * 
         * @return builder
         * 
         */
        public Builder grpc(String grpc) {
            return grpc(Output.of(grpc));
        }

        /**
         * @param http2Origin Whether to enable HTTP2 origin, default is disabled. Value range:
         * 
         * @return builder
         * 
         */
        public Builder http2Origin(@Nullable Output<String> http2Origin) {
            $.http2Origin = http2Origin;
            return this;
        }

        /**
         * @param http2Origin Whether to enable HTTP2 origin, default is disabled. Value range:
         * 
         * @return builder
         * 
         */
        public Builder http2Origin(String http2Origin) {
            return http2Origin(Output.of(http2Origin));
        }

        /**
         * @param rule Rule content.
         * 
         * @return builder
         * 
         */
        public Builder rule(@Nullable Output<String> rule) {
            $.rule = rule;
            return this;
        }

        /**
         * @param rule Rule content.
         * 
         * @return builder
         * 
         */
        public Builder rule(String rule) {
            return rule(Output.of(rule));
        }

        /**
         * @param ruleEnable Rule switch. Values:
         * 
         * @return builder
         * 
         */
        public Builder ruleEnable(@Nullable Output<String> ruleEnable) {
            $.ruleEnable = ruleEnable;
            return this;
        }

        /**
         * @param ruleEnable Rule switch. Values:
         * 
         * @return builder
         * 
         */
        public Builder ruleEnable(String ruleEnable) {
            return ruleEnable(Output.of(ruleEnable));
        }

        /**
         * @param ruleName Rule name.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(@Nullable Output<String> ruleName) {
            $.ruleName = ruleName;
            return this;
        }

        /**
         * @param ruleName Rule name.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(String ruleName) {
            return ruleName(Output.of(ruleName));
        }

        /**
         * @param siteId Site ID.
         * 
         * @return builder
         * 
         */
        public Builder siteId(Output<Integer> siteId) {
            $.siteId = siteId;
            return this;
        }

        /**
         * @param siteId Site ID.
         * 
         * @return builder
         * 
         */
        public Builder siteId(Integer siteId) {
            return siteId(Output.of(siteId));
        }

        /**
         * @param siteVersion Site version number.
         * 
         * @return builder
         * 
         */
        public Builder siteVersion(@Nullable Output<Integer> siteVersion) {
            $.siteVersion = siteVersion;
            return this;
        }

        /**
         * @param siteVersion Site version number.
         * 
         * @return builder
         * 
         */
        public Builder siteVersion(Integer siteVersion) {
            return siteVersion(Output.of(siteVersion));
        }

        /**
         * @param smartRouting Whether to enable smart routing service, default is disabled. Value range:
         * 
         * @return builder
         * 
         */
        public Builder smartRouting(@Nullable Output<String> smartRouting) {
            $.smartRouting = smartRouting;
            return this;
        }

        /**
         * @param smartRouting Whether to enable smart routing service, default is disabled. Value range:
         * 
         * @return builder
         * 
         */
        public Builder smartRouting(String smartRouting) {
            return smartRouting(Output.of(smartRouting));
        }

        /**
         * @param uploadMaxFilesize Maximum upload file size, in MB, value range: 100～500.
         * 
         * @return builder
         * 
         */
        public Builder uploadMaxFilesize(@Nullable Output<String> uploadMaxFilesize) {
            $.uploadMaxFilesize = uploadMaxFilesize;
            return this;
        }

        /**
         * @param uploadMaxFilesize Maximum upload file size, in MB, value range: 100～500.
         * 
         * @return builder
         * 
         */
        public Builder uploadMaxFilesize(String uploadMaxFilesize) {
            return uploadMaxFilesize(Output.of(uploadMaxFilesize));
        }

        /**
         * @param websocket Whether to enable Websocket, default is enabled. Value range:
         * 
         * @return builder
         * 
         */
        public Builder websocket(@Nullable Output<String> websocket) {
            $.websocket = websocket;
            return this;
        }

        /**
         * @param websocket Whether to enable Websocket, default is enabled. Value range:
         * 
         * @return builder
         * 
         */
        public Builder websocket(String websocket) {
            return websocket(Output.of(websocket));
        }

        public NetworkOptimizationArgs build() {
            if ($.siteId == null) {
                throw new MissingRequiredPropertyException("NetworkOptimizationArgs", "siteId");
            }
            return $;
        }
    }

}
