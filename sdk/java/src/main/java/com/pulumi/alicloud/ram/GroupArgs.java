// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ram;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final GroupArgs Empty = new GroupArgs();

    /**
     * The Group comment information. The maximum length is 128 characters.
     * 
     */
    @Import(name="comments")
    private @Nullable Output<String> comments;

    /**
     * @return The Group comment information. The maximum length is 128 characters.
     * 
     */
    public Optional<Output<String>> comments() {
        return Optional.ofNullable(this.comments);
    }

    /**
     * Specifies whether to force delete the Group. Default value: `false`. Valid values:
     * 
     */
    @Import(name="force")
    private @Nullable Output<Boolean> force;

    /**
     * @return Specifies whether to force delete the Group. Default value: `false`. Valid values:
     * 
     */
    public Optional<Output<Boolean>> force() {
        return Optional.ofNullable(this.force);
    }

    /**
     * The group name. You must specify at least one of the `groupName` and `name`.
     * It can be 1 to 64 characters in length and can contain letters, digits, periods (.), underscores (_), and dashes (-).
     * 
     * The following arguments will be discarded. Please use new fields as soon as possible:
     * 
     */
    @Import(name="groupName")
    private @Nullable Output<String> groupName;

    /**
     * @return The group name. You must specify at least one of the `groupName` and `name`.
     * It can be 1 to 64 characters in length and can contain letters, digits, periods (.), underscores (_), and dashes (-).
     * 
     * The following arguments will be discarded. Please use new fields as soon as possible:
     * 
     */
    public Optional<Output<String>> groupName() {
        return Optional.ofNullable(this.groupName);
    }

    /**
     * . Field &#39;name&#39; has been deprecated from provider version 1.120.0. New field &#39;group_name&#39; instead.
     * 
     * @deprecated
     * Field `name` has been deprecated from provider version 1.245.0. New field `groupName` instead.
     * 
     */
    @Deprecated /* Field `name` has been deprecated from provider version 1.245.0. New field `groupName` instead. */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return . Field &#39;name&#39; has been deprecated from provider version 1.120.0. New field &#39;group_name&#39; instead.
     * 
     * @deprecated
     * Field `name` has been deprecated from provider version 1.245.0. New field `groupName` instead.
     * 
     */
    @Deprecated /* Field `name` has been deprecated from provider version 1.245.0. New field `groupName` instead. */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private GroupArgs() {}

    private GroupArgs(GroupArgs $) {
        this.comments = $.comments;
        this.force = $.force;
        this.groupName = $.groupName;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupArgs $;

        public Builder() {
            $ = new GroupArgs();
        }

        public Builder(GroupArgs defaults) {
            $ = new GroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param comments The Group comment information. The maximum length is 128 characters.
         * 
         * @return builder
         * 
         */
        public Builder comments(@Nullable Output<String> comments) {
            $.comments = comments;
            return this;
        }

        /**
         * @param comments The Group comment information. The maximum length is 128 characters.
         * 
         * @return builder
         * 
         */
        public Builder comments(String comments) {
            return comments(Output.of(comments));
        }

        /**
         * @param force Specifies whether to force delete the Group. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder force(@Nullable Output<Boolean> force) {
            $.force = force;
            return this;
        }

        /**
         * @param force Specifies whether to force delete the Group. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder force(Boolean force) {
            return force(Output.of(force));
        }

        /**
         * @param groupName The group name. You must specify at least one of the `groupName` and `name`.
         * It can be 1 to 64 characters in length and can contain letters, digits, periods (.), underscores (_), and dashes (-).
         * 
         * The following arguments will be discarded. Please use new fields as soon as possible:
         * 
         * @return builder
         * 
         */
        public Builder groupName(@Nullable Output<String> groupName) {
            $.groupName = groupName;
            return this;
        }

        /**
         * @param groupName The group name. You must specify at least one of the `groupName` and `name`.
         * It can be 1 to 64 characters in length and can contain letters, digits, periods (.), underscores (_), and dashes (-).
         * 
         * The following arguments will be discarded. Please use new fields as soon as possible:
         * 
         * @return builder
         * 
         */
        public Builder groupName(String groupName) {
            return groupName(Output.of(groupName));
        }

        /**
         * @param name . Field &#39;name&#39; has been deprecated from provider version 1.120.0. New field &#39;group_name&#39; instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `name` has been deprecated from provider version 1.245.0. New field `groupName` instead.
         * 
         */
        @Deprecated /* Field `name` has been deprecated from provider version 1.245.0. New field `groupName` instead. */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name . Field &#39;name&#39; has been deprecated from provider version 1.120.0. New field &#39;group_name&#39; instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `name` has been deprecated from provider version 1.245.0. New field `groupName` instead.
         * 
         */
        @Deprecated /* Field `name` has been deprecated from provider version 1.245.0. New field `groupName` instead. */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GroupArgs build() {
            return $;
        }
    }

}
