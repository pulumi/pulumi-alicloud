// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.emr.outputs;

import com.pulumi.alicloud.emr.outputs.GetInstanceTypesType;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInstanceTypesResult {
    private String clusterType;
    private String destinationResource;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of emr instance types IDs.
     * 
     */
    private List<String> ids;
    private String instanceChargeType;
    private @Nullable String instanceType;
    private @Nullable String outputFile;
    private @Nullable Boolean supportLocalStorage;
    private @Nullable List<String> supportNodeTypes;
    /**
     * @return A list of emr instance types. Each element contains the following attributes:
     * 
     */
    private List<GetInstanceTypesType> types;
    /**
     * @return The available zone id in Alibaba Cloud account
     * 
     */
    private @Nullable String zoneId;

    private GetInstanceTypesResult() {}
    public String clusterType() {
        return this.clusterType;
    }
    public String destinationResource() {
        return this.destinationResource;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of emr instance types IDs.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    public String instanceChargeType() {
        return this.instanceChargeType;
    }
    public Optional<String> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public Optional<Boolean> supportLocalStorage() {
        return Optional.ofNullable(this.supportLocalStorage);
    }
    public List<String> supportNodeTypes() {
        return this.supportNodeTypes == null ? List.of() : this.supportNodeTypes;
    }
    /**
     * @return A list of emr instance types. Each element contains the following attributes:
     * 
     */
    public List<GetInstanceTypesType> types() {
        return this.types;
    }
    /**
     * @return The available zone id in Alibaba Cloud account
     * 
     */
    public Optional<String> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceTypesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterType;
        private String destinationResource;
        private String id;
        private List<String> ids;
        private String instanceChargeType;
        private @Nullable String instanceType;
        private @Nullable String outputFile;
        private @Nullable Boolean supportLocalStorage;
        private @Nullable List<String> supportNodeTypes;
        private List<GetInstanceTypesType> types;
        private @Nullable String zoneId;
        public Builder() {}
        public Builder(GetInstanceTypesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterType = defaults.clusterType;
    	      this.destinationResource = defaults.destinationResource;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.instanceChargeType = defaults.instanceChargeType;
    	      this.instanceType = defaults.instanceType;
    	      this.outputFile = defaults.outputFile;
    	      this.supportLocalStorage = defaults.supportLocalStorage;
    	      this.supportNodeTypes = defaults.supportNodeTypes;
    	      this.types = defaults.types;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder clusterType(String clusterType) {
            if (clusterType == null) {
              throw new MissingRequiredPropertyException("GetInstanceTypesResult", "clusterType");
            }
            this.clusterType = clusterType;
            return this;
        }
        @CustomType.Setter
        public Builder destinationResource(String destinationResource) {
            if (destinationResource == null) {
              throw new MissingRequiredPropertyException("GetInstanceTypesResult", "destinationResource");
            }
            this.destinationResource = destinationResource;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetInstanceTypesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            if (ids == null) {
              throw new MissingRequiredPropertyException("GetInstanceTypesResult", "ids");
            }
            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder instanceChargeType(String instanceChargeType) {
            if (instanceChargeType == null) {
              throw new MissingRequiredPropertyException("GetInstanceTypesResult", "instanceChargeType");
            }
            this.instanceChargeType = instanceChargeType;
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(@Nullable String instanceType) {

            this.instanceType = instanceType;
            return this;
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder supportLocalStorage(@Nullable Boolean supportLocalStorage) {

            this.supportLocalStorage = supportLocalStorage;
            return this;
        }
        @CustomType.Setter
        public Builder supportNodeTypes(@Nullable List<String> supportNodeTypes) {

            this.supportNodeTypes = supportNodeTypes;
            return this;
        }
        public Builder supportNodeTypes(String... supportNodeTypes) {
            return supportNodeTypes(List.of(supportNodeTypes));
        }
        @CustomType.Setter
        public Builder types(List<GetInstanceTypesType> types) {
            if (types == null) {
              throw new MissingRequiredPropertyException("GetInstanceTypesResult", "types");
            }
            this.types = types;
            return this;
        }
        public Builder types(GetInstanceTypesType... types) {
            return types(List.of(types));
        }
        @CustomType.Setter
        public Builder zoneId(@Nullable String zoneId) {

            this.zoneId = zoneId;
            return this;
        }
        public GetInstanceTypesResult build() {
            final var _resultValue = new GetInstanceTypesResult();
            _resultValue.clusterType = clusterType;
            _resultValue.destinationResource = destinationResource;
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.instanceChargeType = instanceChargeType;
            _resultValue.instanceType = instanceType;
            _resultValue.outputFile = outputFile;
            _resultValue.supportLocalStorage = supportLocalStorage;
            _resultValue.supportNodeTypes = supportNodeTypes;
            _resultValue.types = types;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
