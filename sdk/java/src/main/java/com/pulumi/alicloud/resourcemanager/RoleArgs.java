// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.resourcemanager;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RoleArgs extends com.pulumi.resources.ResourceArgs {

    public static final RoleArgs Empty = new RoleArgs();

    /**
     * The content of the permissions strategy that plays a role.
     * 
     */
    @Import(name="assumeRolePolicyDocument", required=true)
    private Output<String> assumeRolePolicyDocument;

    /**
     * @return The content of the permissions strategy that plays a role.
     * 
     */
    public Output<String> assumeRolePolicyDocument() {
        return this.assumeRolePolicyDocument;
    }

    /**
     * The description of the Resource Manager role.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Resource Manager role.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Role maximum session time. Valid values: [3600-43200]. Default to `3600`.
     * 
     */
    @Import(name="maxSessionDuration")
    private @Nullable Output<Integer> maxSessionDuration;

    /**
     * @return Role maximum session time. Valid values: [3600-43200]. Default to `3600`.
     * 
     */
    public Optional<Output<Integer>> maxSessionDuration() {
        return Optional.ofNullable(this.maxSessionDuration);
    }

    /**
     * Role Name. The length is 1 ~ 64 characters, which can include English letters, numbers, dots &#34;.&#34; and dashes &#34;-&#34;.
     * 
     */
    @Import(name="roleName", required=true)
    private Output<String> roleName;

    /**
     * @return Role Name. The length is 1 ~ 64 characters, which can include English letters, numbers, dots &#34;.&#34; and dashes &#34;-&#34;.
     * 
     */
    public Output<String> roleName() {
        return this.roleName;
    }

    private RoleArgs() {}

    private RoleArgs(RoleArgs $) {
        this.assumeRolePolicyDocument = $.assumeRolePolicyDocument;
        this.description = $.description;
        this.maxSessionDuration = $.maxSessionDuration;
        this.roleName = $.roleName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoleArgs $;

        public Builder() {
            $ = new RoleArgs();
        }

        public Builder(RoleArgs defaults) {
            $ = new RoleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param assumeRolePolicyDocument The content of the permissions strategy that plays a role.
         * 
         * @return builder
         * 
         */
        public Builder assumeRolePolicyDocument(Output<String> assumeRolePolicyDocument) {
            $.assumeRolePolicyDocument = assumeRolePolicyDocument;
            return this;
        }

        /**
         * @param assumeRolePolicyDocument The content of the permissions strategy that plays a role.
         * 
         * @return builder
         * 
         */
        public Builder assumeRolePolicyDocument(String assumeRolePolicyDocument) {
            return assumeRolePolicyDocument(Output.of(assumeRolePolicyDocument));
        }

        /**
         * @param description The description of the Resource Manager role.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Resource Manager role.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param maxSessionDuration Role maximum session time. Valid values: [3600-43200]. Default to `3600`.
         * 
         * @return builder
         * 
         */
        public Builder maxSessionDuration(@Nullable Output<Integer> maxSessionDuration) {
            $.maxSessionDuration = maxSessionDuration;
            return this;
        }

        /**
         * @param maxSessionDuration Role maximum session time. Valid values: [3600-43200]. Default to `3600`.
         * 
         * @return builder
         * 
         */
        public Builder maxSessionDuration(Integer maxSessionDuration) {
            return maxSessionDuration(Output.of(maxSessionDuration));
        }

        /**
         * @param roleName Role Name. The length is 1 ~ 64 characters, which can include English letters, numbers, dots &#34;.&#34; and dashes &#34;-&#34;.
         * 
         * @return builder
         * 
         */
        public Builder roleName(Output<String> roleName) {
            $.roleName = roleName;
            return this;
        }

        /**
         * @param roleName Role Name. The length is 1 ~ 64 characters, which can include English letters, numbers, dots &#34;.&#34; and dashes &#34;-&#34;.
         * 
         * @return builder
         * 
         */
        public Builder roleName(String roleName) {
            return roleName(Output.of(roleName));
        }

        public RoleArgs build() {
            if ($.assumeRolePolicyDocument == null) {
                throw new MissingRequiredPropertyException("RoleArgs", "assumeRolePolicyDocument");
            }
            if ($.roleName == null) {
                throw new MissingRequiredPropertyException("RoleArgs", "roleName");
            }
            return $;
        }
    }

}
