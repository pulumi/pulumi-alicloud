// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.wafv3.outputs;

import com.pulumi.alicloud.wafv3.outputs.GetDomainsDomainListen;
import com.pulumi.alicloud.wafv3.outputs.GetDomainsDomainRedirect;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDomainsDomain {
    /**
     * @return The name of the domain name to query.
     * 
     */
    private String domain;
    /**
     * @return The ID of the domain. It formats as `&lt;instance_id&gt;:&lt;domain&gt;`.
     * 
     */
    private String id;
    /**
     * @return Configure listening information
     * 
     */
    private List<GetDomainsDomainListen> listens;
    /**
     * @return Configure forwarding information.
     * 
     */
    private List<GetDomainsDomainRedirect> redirects;
    /**
     * @return The ID of the resource group.
     * 
     */
    private String resourceManagerResourceGroupId;
    /**
     * @return The status of the domain.
     * 
     */
    private String status;

    private GetDomainsDomain() {}
    /**
     * @return The name of the domain name to query.
     * 
     */
    public String domain() {
        return this.domain;
    }
    /**
     * @return The ID of the domain. It formats as `&lt;instance_id&gt;:&lt;domain&gt;`.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Configure listening information
     * 
     */
    public List<GetDomainsDomainListen> listens() {
        return this.listens;
    }
    /**
     * @return Configure forwarding information.
     * 
     */
    public List<GetDomainsDomainRedirect> redirects() {
        return this.redirects;
    }
    /**
     * @return The ID of the resource group.
     * 
     */
    public String resourceManagerResourceGroupId() {
        return this.resourceManagerResourceGroupId;
    }
    /**
     * @return The status of the domain.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsDomain defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String domain;
        private String id;
        private List<GetDomainsDomainListen> listens;
        private List<GetDomainsDomainRedirect> redirects;
        private String resourceManagerResourceGroupId;
        private String status;
        public Builder() {}
        public Builder(GetDomainsDomain defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domain = defaults.domain;
    	      this.id = defaults.id;
    	      this.listens = defaults.listens;
    	      this.redirects = defaults.redirects;
    	      this.resourceManagerResourceGroupId = defaults.resourceManagerResourceGroupId;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder domain(String domain) {
            this.domain = Objects.requireNonNull(domain);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder listens(List<GetDomainsDomainListen> listens) {
            this.listens = Objects.requireNonNull(listens);
            return this;
        }
        public Builder listens(GetDomainsDomainListen... listens) {
            return listens(List.of(listens));
        }
        @CustomType.Setter
        public Builder redirects(List<GetDomainsDomainRedirect> redirects) {
            this.redirects = Objects.requireNonNull(redirects);
            return this;
        }
        public Builder redirects(GetDomainsDomainRedirect... redirects) {
            return redirects(List.of(redirects));
        }
        @CustomType.Setter
        public Builder resourceManagerResourceGroupId(String resourceManagerResourceGroupId) {
            this.resourceManagerResourceGroupId = Objects.requireNonNull(resourceManagerResourceGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public GetDomainsDomain build() {
            final var _resultValue = new GetDomainsDomain();
            _resultValue.domain = domain;
            _resultValue.id = id;
            _resultValue.listens = listens;
            _resultValue.redirects = redirects;
            _resultValue.resourceManagerResourceGroupId = resourceManagerResourceGroupId;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
