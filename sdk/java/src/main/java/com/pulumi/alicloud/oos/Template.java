// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oos;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.oos.TemplateArgs;
import com.pulumi.alicloud.oos.inputs.TemplateState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a OOS Template resource. For information about Alicloud OOS Template and how to use it, see [What is Resource Alicloud OOS Template](https://www.alibabacloud.com/help/doc-detail/120761.htm).
 * 
 * &gt; **NOTE:** Available in 1.92.0+.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.oos.Template;
 * import com.pulumi.alicloud.oos.TemplateArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Template(&#34;example&#34;, TemplateArgs.builder()        
 *             .content(&#34;&#34;&#34;
 *   {
 *     &#34;FormatVersion&#34;: &#34;OOS-2019-06-01&#34;,
 *     &#34;Description&#34;: &#34;Update Describe instances of given status&#34;,
 *     &#34;Parameters&#34;:{
 *       &#34;Status&#34;:{
 *         &#34;Type&#34;: &#34;String&#34;,
 *         &#34;Description&#34;: &#34;(Required) The status of the Ecs instance.&#34;
 *       }
 *     },
 *     &#34;Tasks&#34;: [
 *       {
 *         &#34;Properties&#34; :{
 *           &#34;Parameters&#34;:{
 *             &#34;Status&#34;: &#34;{{ Status }}&#34;
 *           },
 *           &#34;API&#34;: &#34;DescribeInstances&#34;,
 *           &#34;Service&#34;: &#34;Ecs&#34;
 *         },
 *         &#34;Name&#34;: &#34;foo&#34;,
 *         &#34;Action&#34;: &#34;ACS::ExecuteApi&#34;
 *       }]
 *   }
 *   
 *             &#34;&#34;&#34;)
 *             .tags(Map.ofEntries(
 *                 Map.entry(&#34;Created&#34;, &#34;TF&#34;),
 *                 Map.entry(&#34;For&#34;, &#34;acceptance Test&#34;)
 *             ))
 *             .templateName(&#34;test-name&#34;)
 *             .versionName(&#34;test&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * OOS Template can be imported using the id or template_name, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:oos/template:Template example template_name
 * ```
 * 
 */
@ResourceType(type="alicloud:oos/template:Template")
public class Template extends com.pulumi.resources.CustomResource {
    /**
     * When deleting a template, whether to delete its related executions. Default to `false`.
     * 
     */
    @Export(name="autoDeleteExecutions", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autoDeleteExecutions;

    /**
     * @return When deleting a template, whether to delete its related executions. Default to `false`.
     * 
     */
    public Output<Optional<Boolean>> autoDeleteExecutions() {
        return Codegen.optional(this.autoDeleteExecutions);
    }
    /**
     * The content of the template. The template must be in the JSON or YAML format. Maximum size: 64 KB.
     * 
     */
    @Export(name="content", refs={String.class}, tree="[0]")
    private Output<String> content;

    /**
     * @return The content of the template. The template must be in the JSON or YAML format. Maximum size: 64 KB.
     * 
     */
    public Output<String> content() {
        return this.content;
    }
    /**
     * The creator of the template.
     * 
     */
    @Export(name="createdBy", refs={String.class}, tree="[0]")
    private Output<String> createdBy;

    /**
     * @return The creator of the template.
     * 
     */
    public Output<String> createdBy() {
        return this.createdBy;
    }
    /**
     * The time when the template is created.
     * 
     */
    @Export(name="createdDate", refs={String.class}, tree="[0]")
    private Output<String> createdDate;

    /**
     * @return The time when the template is created.
     * 
     */
    public Output<String> createdDate() {
        return this.createdDate;
    }
    /**
     * The description of the template.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return The description of the template.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Is it triggered successfully.
     * 
     */
    @Export(name="hasTrigger", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> hasTrigger;

    /**
     * @return Is it triggered successfully.
     * 
     */
    public Output<Boolean> hasTrigger() {
        return this.hasTrigger;
    }
    /**
     * The ID of resource group which the template belongs.
     * 
     */
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupId;

    /**
     * @return The ID of resource group which the template belongs.
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * The sharing type of the template. The sharing type of templates created by users are set to Private. The sharing type of common templates provided by OOS are set to Public.
     * 
     */
    @Export(name="shareType", refs={String.class}, tree="[0]")
    private Output<String> shareType;

    /**
     * @return The sharing type of the template. The sharing type of templates created by users are set to Private. The sharing type of common templates provided by OOS are set to Public.
     * 
     */
    public Output<String> shareType() {
        return this.shareType;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,Object>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The format of the template. The format can be JSON or YAML. The system automatically identifies the format.
     * 
     */
    @Export(name="templateFormat", refs={String.class}, tree="[0]")
    private Output<String> templateFormat;

    /**
     * @return The format of the template. The format can be JSON or YAML. The system automatically identifies the format.
     * 
     */
    public Output<String> templateFormat() {
        return this.templateFormat;
    }
    /**
     * The id of OOS Template.
     * 
     */
    @Export(name="templateId", refs={String.class}, tree="[0]")
    private Output<String> templateId;

    /**
     * @return The id of OOS Template.
     * 
     */
    public Output<String> templateId() {
        return this.templateId;
    }
    /**
     * The name of the template. The template name can be up to 200 characters in length. The name can contain letters, digits, hyphens (-), and underscores (_). It cannot start with `ALIYUN`, `ACS`, `ALIBABA`, or `ALICLOUD`.
     * 
     */
    @Export(name="templateName", refs={String.class}, tree="[0]")
    private Output<String> templateName;

    /**
     * @return The name of the template. The template name can be up to 200 characters in length. The name can contain letters, digits, hyphens (-), and underscores (_). It cannot start with `ALIYUN`, `ACS`, `ALIBABA`, or `ALICLOUD`.
     * 
     */
    public Output<String> templateName() {
        return this.templateName;
    }
    /**
     * The type of OOS Template. `Automation` means the implementation of Alibaba Cloud API template, `Package` means represents a template for installing software.
     * 
     */
    @Export(name="templateType", refs={String.class}, tree="[0]")
    private Output<String> templateType;

    /**
     * @return The type of OOS Template. `Automation` means the implementation of Alibaba Cloud API template, `Package` means represents a template for installing software.
     * 
     */
    public Output<String> templateType() {
        return this.templateType;
    }
    /**
     * The version of OOS Template.
     * 
     */
    @Export(name="templateVersion", refs={String.class}, tree="[0]")
    private Output<String> templateVersion;

    /**
     * @return The version of OOS Template.
     * 
     */
    public Output<String> templateVersion() {
        return this.templateVersion;
    }
    /**
     * The user who updated the template.
     * 
     */
    @Export(name="updatedBy", refs={String.class}, tree="[0]")
    private Output<String> updatedBy;

    /**
     * @return The user who updated the template.
     * 
     */
    public Output<String> updatedBy() {
        return this.updatedBy;
    }
    /**
     * The time when the template was updated.
     * 
     */
    @Export(name="updatedDate", refs={String.class}, tree="[0]")
    private Output<String> updatedDate;

    /**
     * @return The time when the template was updated.
     * 
     */
    public Output<String> updatedDate() {
        return this.updatedDate;
    }
    /**
     * The name of template version.
     * 
     */
    @Export(name="versionName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> versionName;

    /**
     * @return The name of template version.
     * 
     */
    public Output<Optional<String>> versionName() {
        return Codegen.optional(this.versionName);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Template(String name) {
        this(name, TemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Template(String name, TemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Template(String name, TemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:oos/template:Template", name, args == null ? TemplateArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Template(String name, Output<String> id, @Nullable TemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:oos/template:Template", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Template get(String name, Output<String> id, @Nullable TemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Template(name, id, state, options);
    }
}
