// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sls;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.sls.LogtailConfigArgs;
import com.pulumi.alicloud.sls.inputs.LogtailConfigState;
import com.pulumi.alicloud.sls.outputs.LogtailConfigOutputDetail;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Log Service (SLS) Logtail Config resource.
 * 
 * For information about Log Service (SLS) Logtail Config and how to use it, see [What is Logtail Config](https://next.api.alibabacloud.com/document/Sls/2020-12-30/CreateConfig).
 * 
 * &gt; **NOTE:** Available since v1.259.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.log.Project;
 * import com.pulumi.alicloud.log.ProjectArgs;
 * import com.pulumi.alicloud.sls.LogtailConfig;
 * import com.pulumi.alicloud.sls.LogtailConfigArgs;
 * import com.pulumi.alicloud.sls.inputs.LogtailConfigOutputDetailArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         var default_ = new Integer("default", IntegerArgs.builder()
 *             .max(99999)
 *             .min(10000)
 *             .build());
 * 
 *         final var name = config.get("name").orElse("tfaccsls62147");
 *         final var projectName = config.get("projectName").orElse("project-for-logtail-terraform");
 *         var defaultuA28zS = new Project("defaultuA28zS", ProjectArgs.builder()
 *             .projectName(projectName)
 *             .build());
 * 
 *         var defaultLogtailConfig = new LogtailConfig("defaultLogtailConfig", LogtailConfigArgs.builder()
 *             .projectName(defaultuA28zS.projectName())
 *             .outputDetail(LogtailConfigOutputDetailArgs.builder()
 *                 .endpoint("cn-hangzhou-intranet.log.aliyuncs.com")
 *                 .region("cn-hangzhou")
 *                 .logstoreName("example")
 *                 .build())
 *             .outputType("LogService")
 *             .inputDetail(serializeJson(
 *                 jsonObject(
 *                     jsonProperty("adjustTimezone", false),
 *                     jsonProperty("delayAlarmBytes", 0),
 *                     jsonProperty("delaySkipBytes", 0),
 *                     jsonProperty("discardNonUtf8", false),
 *                     jsonProperty("discardUnmatch", true),
 *                     jsonProperty("dockerFile", false),
 *                     jsonProperty("enableRawLog", false),
 *                     jsonProperty("enableTag", false),
 *                     jsonProperty("fileEncoding", "utf8"),
 *                     jsonProperty("filePattern", "access*.log"),
 *                     jsonProperty("filterKey", jsonArray("key1")),
 *                     jsonProperty("filterRegex", jsonArray("regex1")),
 *                     jsonProperty("key", jsonArray(
 *                         "key1", 
 *                         "key2"
 *                     )),
 *                     jsonProperty("localStorage", true),
 *                     jsonProperty("logBeginRegex", ".*"),
 *                     jsonProperty("logPath", "/var/log/httpd"),
 *                     jsonProperty("logTimezone", ""),
 *                     jsonProperty("logType", "common_reg_log"),
 *                     jsonProperty("maxDepth", 1000),
 *                     jsonProperty("maxSendRate", -1),
 *                     jsonProperty("mergeType", "topic"),
 *                     jsonProperty("preserve", true),
 *                     jsonProperty("preserveDepth", 0),
 *                     jsonProperty("priority", 0),
 *                     jsonProperty("regex", "(w+)(s+)"),
 *                     jsonProperty("sendRateExpire", 0),
 *                     jsonProperty("sensitive_keys", jsonArray(
 *                     )),
 *                     jsonProperty("tailExisted", false),
 *                     jsonProperty("timeFormat", "%Y/%m/%d %H:%M:%S"),
 *                     jsonProperty("timeKey", "time"),
 *                     jsonProperty("topicFormat", "none")
 *                 )))
 *             .logtailConfigName("tfaccsls62147")
 *             .inputType("file")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Log Service (SLS) Logtail Config can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:sls/logtailConfig:LogtailConfig example &lt;project_name&gt;:&lt;logtail_config_name&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:sls/logtailConfig:LogtailConfig")
public class LogtailConfig extends com.pulumi.resources.CustomResource {
    /**
     * The creation time of the resource
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The creation time of the resource
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The detailed configuration entered by logtail.
     * 
     */
    @Export(name="inputDetail", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> inputDetail;

    /**
     * @return The detailed configuration entered by logtail.
     * 
     */
    public Output<Optional<String>> inputDetail() {
        return Codegen.optional(this.inputDetail);
    }
    /**
     * Method of log entry
     * 
     */
    @Export(name="inputType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> inputType;

    /**
     * @return Method of log entry
     * 
     */
    public Output<Optional<String>> inputType() {
        return Codegen.optional(this.inputType);
    }
    /**
     * Last modification time, unix timestamp
     * 
     */
    @Export(name="lastModifyTime", refs={Integer.class}, tree="[0]")
    private Output<Integer> lastModifyTime;

    /**
     * @return Last modification time, unix timestamp
     * 
     */
    public Output<Integer> lastModifyTime() {
        return this.lastModifyTime;
    }
    /**
     * Sample log
     * 
     */
    @Export(name="logSample", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> logSample;

    /**
     * @return Sample log
     * 
     */
    public Output<Optional<String>> logSample() {
        return Codegen.optional(this.logSample);
    }
    /**
     * The name of the resource
     * 
     */
    @Export(name="logtailConfigName", refs={String.class}, tree="[0]")
    private Output<String> logtailConfigName;

    /**
     * @return The name of the resource
     * 
     */
    public Output<String> logtailConfigName() {
        return this.logtailConfigName;
    }
    /**
     * Detailed configuration of logtail output See `output_detail` below.
     * 
     */
    @Export(name="outputDetail", refs={LogtailConfigOutputDetail.class}, tree="[0]")
    private Output</* @Nullable */ LogtailConfigOutputDetail> outputDetail;

    /**
     * @return Detailed configuration of logtail output See `output_detail` below.
     * 
     */
    public Output<Optional<LogtailConfigOutputDetail>> outputDetail() {
        return Codegen.optional(this.outputDetail);
    }
    /**
     * Log output mode. You can only upload data to log service.
     * 
     */
    @Export(name="outputType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> outputType;

    /**
     * @return Log output mode. You can only upload data to log service.
     * 
     */
    public Output<Optional<String>> outputType() {
        return Codegen.optional(this.outputType);
    }
    /**
     * Project name
     * 
     */
    @Export(name="projectName", refs={String.class}, tree="[0]")
    private Output<String> projectName;

    /**
     * @return Project name
     * 
     */
    public Output<String> projectName() {
        return this.projectName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LogtailConfig(java.lang.String name) {
        this(name, LogtailConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LogtailConfig(java.lang.String name, LogtailConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LogtailConfig(java.lang.String name, LogtailConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:sls/logtailConfig:LogtailConfig", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private LogtailConfig(java.lang.String name, Output<java.lang.String> id, @Nullable LogtailConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:sls/logtailConfig:LogtailConfig", name, state, makeResourceOptions(options, id), false);
    }

    private static LogtailConfigArgs makeArgs(LogtailConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? LogtailConfigArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LogtailConfig get(java.lang.String name, Output<java.lang.String> id, @Nullable LogtailConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LogtailConfig(name, id, state, options);
    }
}
