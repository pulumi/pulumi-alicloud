// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eventbridge;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.eventbridge.EventSourceArgs;
import com.pulumi.alicloud.eventbridge.inputs.EventSourceState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Event Bridge Event Source resource.
 * 
 * For information about Event Bridge Event Source and how to use it, see [What is Event Source](https://www.alibabacloud.com/help/en/eventbridge/latest/api-eventbridge-2020-04-01-createeventsource).
 * 
 * &gt; **NOTE:** Available since v1.130.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.eventbridge.EventBus;
 * import com.pulumi.alicloud.eventbridge.EventBusArgs;
 * import com.pulumi.alicloud.mns.Queue;
 * import com.pulumi.alicloud.eventbridge.EventSource;
 * import com.pulumi.alicloud.eventbridge.EventSourceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get(&#34;name&#34;).orElse(&#34;tf-example&#34;);
 *         var exampleEventBus = new EventBus(&#34;exampleEventBus&#34;, EventBusArgs.builder()        
 *             .eventBusName(name)
 *             .build());
 * 
 *         var exampleQueue = new Queue(&#34;exampleQueue&#34;);
 * 
 *         var exampleEventSource = new EventSource(&#34;exampleEventSource&#34;, EventSourceArgs.builder()        
 *             .eventBusName(exampleEventBus.eventBusName())
 *             .eventSourceName(name)
 *             .description(name)
 *             .linkedExternalSource(true)
 *             .externalSourceType(&#34;MNS&#34;)
 *             .externalSourceConfig(Map.of(&#34;QueueName&#34;, exampleQueue.name()))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Event Bridge Event Source can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:eventbridge/eventSource:EventSource example &lt;event_source_name&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:eventbridge/eventSource:EventSource")
public class EventSource extends com.pulumi.resources.CustomResource {
    /**
     * The detail describe of event source.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The detail describe of event source.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The name of event bus.
     * 
     */
    @Export(name="eventBusName", type=String.class, parameters={})
    private Output<String> eventBusName;

    /**
     * @return The name of event bus.
     * 
     */
    public Output<String> eventBusName() {
        return this.eventBusName;
    }
    /**
     * The code name of event source.
     * 
     */
    @Export(name="eventSourceName", type=String.class, parameters={})
    private Output<String> eventSourceName;

    /**
     * @return The code name of event source.
     * 
     */
    public Output<String> eventSourceName() {
        return this.eventSourceName;
    }
    /**
     * The config of external source.
     * When `external_source_type` is `RabbitMQ`, The following attributes are supported:
     * `RegionId` - The region ID of RabbitMQ.
     * `InstanceId` - The instance ID of RabbitMQ.
     * `VirtualHostName` - The virtual host name of RabbitMQ.
     * `QueueName` - The queue name of RabbitMQ.
     * When `external_source_type` is `RabbitMQ`, The following attributes are supported:
     * `RegionId` - The region ID of RabbitMQ.
     * `InstanceId` - The instance ID of RabbitMQ.
     * `Topic` - The topic of RabbitMQ.
     * `Offset` -  The offset of RabbitMQ, valid values: `CONSUME_FROM_FIRST_OFFSET`, `CONSUME_FROM_LAST_OFFSET` and `CONSUME_FROM_TIMESTAMP`.
     * `GroupID` - The group ID of consumer.
     * When `external_source_type` is `MNS`, The following attributes are supported:
     * `QueueName` - The queue name of MNS.
     * 
     */
    @Export(name="externalSourceConfig", type=Map.class, parameters={String.class, Object.class})
    private Output</* @Nullable */ Map<String,Object>> externalSourceConfig;

    /**
     * @return The config of external source.
     * When `external_source_type` is `RabbitMQ`, The following attributes are supported:
     * `RegionId` - The region ID of RabbitMQ.
     * `InstanceId` - The instance ID of RabbitMQ.
     * `VirtualHostName` - The virtual host name of RabbitMQ.
     * `QueueName` - The queue name of RabbitMQ.
     * When `external_source_type` is `RabbitMQ`, The following attributes are supported:
     * `RegionId` - The region ID of RabbitMQ.
     * `InstanceId` - The instance ID of RabbitMQ.
     * `Topic` - The topic of RabbitMQ.
     * `Offset` -  The offset of RabbitMQ, valid values: `CONSUME_FROM_FIRST_OFFSET`, `CONSUME_FROM_LAST_OFFSET` and `CONSUME_FROM_TIMESTAMP`.
     * `GroupID` - The group ID of consumer.
     * When `external_source_type` is `MNS`, The following attributes are supported:
     * `QueueName` - The queue name of MNS.
     * 
     */
    public Output<Optional<Map<String,Object>>> externalSourceConfig() {
        return Codegen.optional(this.externalSourceConfig);
    }
    /**
     * The type of external data source. Valid value : `RabbitMQ`, `RocketMQ` and `MNS`. **NOTE:** Only When `linked_external_source` is `true`, This field is valid.
     * 
     */
    @Export(name="externalSourceType", type=String.class, parameters={})
    private Output</* @Nullable */ String> externalSourceType;

    /**
     * @return The type of external data source. Valid value : `RabbitMQ`, `RocketMQ` and `MNS`. **NOTE:** Only When `linked_external_source` is `true`, This field is valid.
     * 
     */
    public Output<Optional<String>> externalSourceType() {
        return Codegen.optional(this.externalSourceType);
    }
    /**
     * Whether to connect to an external data source. Default value: `false`
     * 
     */
    @Export(name="linkedExternalSource", type=Boolean.class, parameters={})
    private Output<Boolean> linkedExternalSource;

    /**
     * @return Whether to connect to an external data source. Default value: `false`
     * 
     */
    public Output<Boolean> linkedExternalSource() {
        return this.linkedExternalSource;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EventSource(String name) {
        this(name, EventSourceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EventSource(String name, EventSourceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EventSource(String name, EventSourceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:eventbridge/eventSource:EventSource", name, args == null ? EventSourceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private EventSource(String name, Output<String> id, @Nullable EventSourceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:eventbridge/eventSource:EventSource", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EventSource get(String name, Output<String> id, @Nullable EventSourceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EventSource(name, id, state, options);
    }
}
