// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cdn.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRealTimeLogDeliveriesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRealTimeLogDeliveriesArgs Empty = new GetRealTimeLogDeliveriesArgs();

    /**
     * Real-Time Log Service Domain.
     * 
     */
    @Import(name="domain", required=true)
    private Output<String> domain;

    /**
     * @return Real-Time Log Service Domain.
     * 
     */
    public Output<String> domain() {
        return this.domain;
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The status of the real-time log delivery feature. Valid Values: `online` and `offline`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the real-time log delivery feature. Valid Values: `online` and `offline`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private GetRealTimeLogDeliveriesArgs() {}

    private GetRealTimeLogDeliveriesArgs(GetRealTimeLogDeliveriesArgs $) {
        this.domain = $.domain;
        this.outputFile = $.outputFile;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRealTimeLogDeliveriesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRealTimeLogDeliveriesArgs $;

        public Builder() {
            $ = new GetRealTimeLogDeliveriesArgs();
        }

        public Builder(GetRealTimeLogDeliveriesArgs defaults) {
            $ = new GetRealTimeLogDeliveriesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domain Real-Time Log Service Domain.
         * 
         * @return builder
         * 
         */
        public Builder domain(Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain Real-Time Log Service Domain.
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        /**
         * @param status The status of the real-time log delivery feature. Valid Values: `online` and `offline`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the real-time log delivery feature. Valid Values: `online` and `offline`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public GetRealTimeLogDeliveriesArgs build() {
            if ($.domain == null) {
                throw new MissingRequiredPropertyException("GetRealTimeLogDeliveriesArgs", "domain");
            }
            return $;
        }
    }

}
