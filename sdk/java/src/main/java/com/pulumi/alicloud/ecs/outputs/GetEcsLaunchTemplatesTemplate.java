// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.outputs;

import com.pulumi.alicloud.ecs.outputs.GetEcsLaunchTemplatesTemplateDataDisk;
import com.pulumi.alicloud.ecs.outputs.GetEcsLaunchTemplatesTemplateNetworkInterface;
import com.pulumi.alicloud.ecs.outputs.GetEcsLaunchTemplatesTemplateSystemDisk;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetEcsLaunchTemplatesTemplate {
    /**
     * @return Instance auto release time.
     * 
     */
    private String autoReleaseTime;
    /**
     * @return CreatedBy.
     * 
     */
    private String createdBy;
    /**
     * @return The list of data disks created with instance.
     * 
     */
    private List<GetEcsLaunchTemplatesTemplateDataDisk> dataDisks;
    /**
     * @return The Default Version Number.
     * 
     */
    private Integer defaultVersionNumber;
    /**
     * @return The Deployment Set Id.
     * 
     */
    private String deploymentSetId;
    /**
     * @return System disk description.
     * 
     */
    private String description;
    /**
     * @return Whether to enable the instance operating system configuration.
     * 
     */
    private Boolean enableVmOsConfig;
    /**
     * @return Instance host name.
     * 
     */
    private String hostName;
    /**
     * @return The ID of the Launch Template.
     * 
     */
    private String id;
    /**
     * @return The Image Id.
     * 
     */
    private String imageId;
    /**
     * @return Mirror source.
     * 
     */
    private String imageOwnerAlias;
    /**
     * @return Internet bandwidth billing method.
     * 
     */
    private String instanceChargeType;
    /**
     * @return The Instance Name.
     * 
     */
    private String instanceName;
    /**
     * @return Instance type.
     * 
     */
    private String instanceType;
    /**
     * @return Internet bandwidth billing method.
     * 
     */
    private String internetChargeType;
    /**
     * @return The maximum inbound bandwidth from the Internet network, measured in Mbit/s.
     * 
     */
    private Integer internetMaxBandwidthIn;
    /**
     * @return Maximum outbound bandwidth from the Internet, its unit of measurement is Mbit/s.
     * 
     */
    private Integer internetMaxBandwidthOut;
    /**
     * @return Whether it is an I/O-optimized instance or not.
     * 
     */
    private String ioOptimized;
    /**
     * @return The name of the key pair.
     * 
     */
    private String keyPairName;
    /**
     * @return The Latest Version Number.
     * 
     */
    private Integer latestVersionNumber;
    /**
     * @return The ID of the Launch Template.
     * 
     */
    private String launchTemplateId;
    /**
     * @return The Launch Template Name.
     * 
     */
    private String launchTemplateName;
    /**
     * @return The Modified Time.
     * 
     */
    private String modifiedTime;
    /**
     * @return The list of network interfaces created with instance.
     * 
     */
    private List<GetEcsLaunchTemplatesTemplateNetworkInterface> networkInterfaces;
    /**
     * @return Network type of the instance.
     * 
     */
    private String networkType;
    /**
     * @return Whether to use the password preset by the mirror.
     * 
     */
    private Boolean passwordInherit;
    /**
     * @return The subscription period of the instance.
     * 
     */
    private Integer period;
    /**
     * @return The private IP address of the instance.
     * 
     */
    private String privateIpAddress;
    /**
     * @return The RAM role name of the instance.
     * 
     */
    private String ramRoleName;
    /**
     * @return The ID of the resource group to which to assign the instance, Elastic Block Storage (EBS) device, and ENI.
     * 
     */
    private String resourceGroupId;
    /**
     * @return Whether or not to activate the security enhancement feature and install network security software free of charge.
     * 
     */
    private String securityEnhancementStrategy;
    /**
     * @return The security group ID.
     * 
     */
    private String securityGroupId;
    /**
     * @return The security group IDs.
     * 
     */
    private List<String> securityGroupIds;
    /**
     * @return The protection period of the preemptible instance.
     * 
     */
    private String spotDuration;
    /**
     * @return Sets the maximum hourly instance price.
     * 
     */
    private Double spotPriceLimit;
    /**
     * @return The spot strategy for a Pay-As-You-Go instance.
     * 
     */
    private String spotStrategy;
    /**
     * @return The System Disk.
     * 
     */
    private List<GetEcsLaunchTemplatesTemplateSystemDisk> systemDisks;
    /**
     * @return The template tags.
     * 
     */
    private Map<String,Object> templateTags;
    /**
     * @return The User Data.
     * 
     */
    private String userData;
    /**
     * @return The Version Description.
     * 
     */
    private String versionDescription;
    /**
     * @return VpcId.
     * 
     */
    private String vpcId;
    /**
     * @return The vswitch id.
     * 
     */
    private String vswitchId;
    /**
     * @return The Zone Id.
     * 
     */
    private String zoneId;

    private GetEcsLaunchTemplatesTemplate() {}
    /**
     * @return Instance auto release time.
     * 
     */
    public String autoReleaseTime() {
        return this.autoReleaseTime;
    }
    /**
     * @return CreatedBy.
     * 
     */
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return The list of data disks created with instance.
     * 
     */
    public List<GetEcsLaunchTemplatesTemplateDataDisk> dataDisks() {
        return this.dataDisks;
    }
    /**
     * @return The Default Version Number.
     * 
     */
    public Integer defaultVersionNumber() {
        return this.defaultVersionNumber;
    }
    /**
     * @return The Deployment Set Id.
     * 
     */
    public String deploymentSetId() {
        return this.deploymentSetId;
    }
    /**
     * @return System disk description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Whether to enable the instance operating system configuration.
     * 
     */
    public Boolean enableVmOsConfig() {
        return this.enableVmOsConfig;
    }
    /**
     * @return Instance host name.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return The ID of the Launch Template.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Image Id.
     * 
     */
    public String imageId() {
        return this.imageId;
    }
    /**
     * @return Mirror source.
     * 
     */
    public String imageOwnerAlias() {
        return this.imageOwnerAlias;
    }
    /**
     * @return Internet bandwidth billing method.
     * 
     */
    public String instanceChargeType() {
        return this.instanceChargeType;
    }
    /**
     * @return The Instance Name.
     * 
     */
    public String instanceName() {
        return this.instanceName;
    }
    /**
     * @return Instance type.
     * 
     */
    public String instanceType() {
        return this.instanceType;
    }
    /**
     * @return Internet bandwidth billing method.
     * 
     */
    public String internetChargeType() {
        return this.internetChargeType;
    }
    /**
     * @return The maximum inbound bandwidth from the Internet network, measured in Mbit/s.
     * 
     */
    public Integer internetMaxBandwidthIn() {
        return this.internetMaxBandwidthIn;
    }
    /**
     * @return Maximum outbound bandwidth from the Internet, its unit of measurement is Mbit/s.
     * 
     */
    public Integer internetMaxBandwidthOut() {
        return this.internetMaxBandwidthOut;
    }
    /**
     * @return Whether it is an I/O-optimized instance or not.
     * 
     */
    public String ioOptimized() {
        return this.ioOptimized;
    }
    /**
     * @return The name of the key pair.
     * 
     */
    public String keyPairName() {
        return this.keyPairName;
    }
    /**
     * @return The Latest Version Number.
     * 
     */
    public Integer latestVersionNumber() {
        return this.latestVersionNumber;
    }
    /**
     * @return The ID of the Launch Template.
     * 
     */
    public String launchTemplateId() {
        return this.launchTemplateId;
    }
    /**
     * @return The Launch Template Name.
     * 
     */
    public String launchTemplateName() {
        return this.launchTemplateName;
    }
    /**
     * @return The Modified Time.
     * 
     */
    public String modifiedTime() {
        return this.modifiedTime;
    }
    /**
     * @return The list of network interfaces created with instance.
     * 
     */
    public List<GetEcsLaunchTemplatesTemplateNetworkInterface> networkInterfaces() {
        return this.networkInterfaces;
    }
    /**
     * @return Network type of the instance.
     * 
     */
    public String networkType() {
        return this.networkType;
    }
    /**
     * @return Whether to use the password preset by the mirror.
     * 
     */
    public Boolean passwordInherit() {
        return this.passwordInherit;
    }
    /**
     * @return The subscription period of the instance.
     * 
     */
    public Integer period() {
        return this.period;
    }
    /**
     * @return The private IP address of the instance.
     * 
     */
    public String privateIpAddress() {
        return this.privateIpAddress;
    }
    /**
     * @return The RAM role name of the instance.
     * 
     */
    public String ramRoleName() {
        return this.ramRoleName;
    }
    /**
     * @return The ID of the resource group to which to assign the instance, Elastic Block Storage (EBS) device, and ENI.
     * 
     */
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * @return Whether or not to activate the security enhancement feature and install network security software free of charge.
     * 
     */
    public String securityEnhancementStrategy() {
        return this.securityEnhancementStrategy;
    }
    /**
     * @return The security group ID.
     * 
     */
    public String securityGroupId() {
        return this.securityGroupId;
    }
    /**
     * @return The security group IDs.
     * 
     */
    public List<String> securityGroupIds() {
        return this.securityGroupIds;
    }
    /**
     * @return The protection period of the preemptible instance.
     * 
     */
    public String spotDuration() {
        return this.spotDuration;
    }
    /**
     * @return Sets the maximum hourly instance price.
     * 
     */
    public Double spotPriceLimit() {
        return this.spotPriceLimit;
    }
    /**
     * @return The spot strategy for a Pay-As-You-Go instance.
     * 
     */
    public String spotStrategy() {
        return this.spotStrategy;
    }
    /**
     * @return The System Disk.
     * 
     */
    public List<GetEcsLaunchTemplatesTemplateSystemDisk> systemDisks() {
        return this.systemDisks;
    }
    /**
     * @return The template tags.
     * 
     */
    public Map<String,Object> templateTags() {
        return this.templateTags;
    }
    /**
     * @return The User Data.
     * 
     */
    public String userData() {
        return this.userData;
    }
    /**
     * @return The Version Description.
     * 
     */
    public String versionDescription() {
        return this.versionDescription;
    }
    /**
     * @return VpcId.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }
    /**
     * @return The vswitch id.
     * 
     */
    public String vswitchId() {
        return this.vswitchId;
    }
    /**
     * @return The Zone Id.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEcsLaunchTemplatesTemplate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String autoReleaseTime;
        private String createdBy;
        private List<GetEcsLaunchTemplatesTemplateDataDisk> dataDisks;
        private Integer defaultVersionNumber;
        private String deploymentSetId;
        private String description;
        private Boolean enableVmOsConfig;
        private String hostName;
        private String id;
        private String imageId;
        private String imageOwnerAlias;
        private String instanceChargeType;
        private String instanceName;
        private String instanceType;
        private String internetChargeType;
        private Integer internetMaxBandwidthIn;
        private Integer internetMaxBandwidthOut;
        private String ioOptimized;
        private String keyPairName;
        private Integer latestVersionNumber;
        private String launchTemplateId;
        private String launchTemplateName;
        private String modifiedTime;
        private List<GetEcsLaunchTemplatesTemplateNetworkInterface> networkInterfaces;
        private String networkType;
        private Boolean passwordInherit;
        private Integer period;
        private String privateIpAddress;
        private String ramRoleName;
        private String resourceGroupId;
        private String securityEnhancementStrategy;
        private String securityGroupId;
        private List<String> securityGroupIds;
        private String spotDuration;
        private Double spotPriceLimit;
        private String spotStrategy;
        private List<GetEcsLaunchTemplatesTemplateSystemDisk> systemDisks;
        private Map<String,Object> templateTags;
        private String userData;
        private String versionDescription;
        private String vpcId;
        private String vswitchId;
        private String zoneId;
        public Builder() {}
        public Builder(GetEcsLaunchTemplatesTemplate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoReleaseTime = defaults.autoReleaseTime;
    	      this.createdBy = defaults.createdBy;
    	      this.dataDisks = defaults.dataDisks;
    	      this.defaultVersionNumber = defaults.defaultVersionNumber;
    	      this.deploymentSetId = defaults.deploymentSetId;
    	      this.description = defaults.description;
    	      this.enableVmOsConfig = defaults.enableVmOsConfig;
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.imageId = defaults.imageId;
    	      this.imageOwnerAlias = defaults.imageOwnerAlias;
    	      this.instanceChargeType = defaults.instanceChargeType;
    	      this.instanceName = defaults.instanceName;
    	      this.instanceType = defaults.instanceType;
    	      this.internetChargeType = defaults.internetChargeType;
    	      this.internetMaxBandwidthIn = defaults.internetMaxBandwidthIn;
    	      this.internetMaxBandwidthOut = defaults.internetMaxBandwidthOut;
    	      this.ioOptimized = defaults.ioOptimized;
    	      this.keyPairName = defaults.keyPairName;
    	      this.latestVersionNumber = defaults.latestVersionNumber;
    	      this.launchTemplateId = defaults.launchTemplateId;
    	      this.launchTemplateName = defaults.launchTemplateName;
    	      this.modifiedTime = defaults.modifiedTime;
    	      this.networkInterfaces = defaults.networkInterfaces;
    	      this.networkType = defaults.networkType;
    	      this.passwordInherit = defaults.passwordInherit;
    	      this.period = defaults.period;
    	      this.privateIpAddress = defaults.privateIpAddress;
    	      this.ramRoleName = defaults.ramRoleName;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.securityEnhancementStrategy = defaults.securityEnhancementStrategy;
    	      this.securityGroupId = defaults.securityGroupId;
    	      this.securityGroupIds = defaults.securityGroupIds;
    	      this.spotDuration = defaults.spotDuration;
    	      this.spotPriceLimit = defaults.spotPriceLimit;
    	      this.spotStrategy = defaults.spotStrategy;
    	      this.systemDisks = defaults.systemDisks;
    	      this.templateTags = defaults.templateTags;
    	      this.userData = defaults.userData;
    	      this.versionDescription = defaults.versionDescription;
    	      this.vpcId = defaults.vpcId;
    	      this.vswitchId = defaults.vswitchId;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder autoReleaseTime(String autoReleaseTime) {
            this.autoReleaseTime = Objects.requireNonNull(autoReleaseTime);
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            this.createdBy = Objects.requireNonNull(createdBy);
            return this;
        }
        @CustomType.Setter
        public Builder dataDisks(List<GetEcsLaunchTemplatesTemplateDataDisk> dataDisks) {
            this.dataDisks = Objects.requireNonNull(dataDisks);
            return this;
        }
        public Builder dataDisks(GetEcsLaunchTemplatesTemplateDataDisk... dataDisks) {
            return dataDisks(List.of(dataDisks));
        }
        @CustomType.Setter
        public Builder defaultVersionNumber(Integer defaultVersionNumber) {
            this.defaultVersionNumber = Objects.requireNonNull(defaultVersionNumber);
            return this;
        }
        @CustomType.Setter
        public Builder deploymentSetId(String deploymentSetId) {
            this.deploymentSetId = Objects.requireNonNull(deploymentSetId);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder enableVmOsConfig(Boolean enableVmOsConfig) {
            this.enableVmOsConfig = Objects.requireNonNull(enableVmOsConfig);
            return this;
        }
        @CustomType.Setter
        public Builder hostName(String hostName) {
            this.hostName = Objects.requireNonNull(hostName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder imageId(String imageId) {
            this.imageId = Objects.requireNonNull(imageId);
            return this;
        }
        @CustomType.Setter
        public Builder imageOwnerAlias(String imageOwnerAlias) {
            this.imageOwnerAlias = Objects.requireNonNull(imageOwnerAlias);
            return this;
        }
        @CustomType.Setter
        public Builder instanceChargeType(String instanceChargeType) {
            this.instanceChargeType = Objects.requireNonNull(instanceChargeType);
            return this;
        }
        @CustomType.Setter
        public Builder instanceName(String instanceName) {
            this.instanceName = Objects.requireNonNull(instanceName);
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }
        @CustomType.Setter
        public Builder internetChargeType(String internetChargeType) {
            this.internetChargeType = Objects.requireNonNull(internetChargeType);
            return this;
        }
        @CustomType.Setter
        public Builder internetMaxBandwidthIn(Integer internetMaxBandwidthIn) {
            this.internetMaxBandwidthIn = Objects.requireNonNull(internetMaxBandwidthIn);
            return this;
        }
        @CustomType.Setter
        public Builder internetMaxBandwidthOut(Integer internetMaxBandwidthOut) {
            this.internetMaxBandwidthOut = Objects.requireNonNull(internetMaxBandwidthOut);
            return this;
        }
        @CustomType.Setter
        public Builder ioOptimized(String ioOptimized) {
            this.ioOptimized = Objects.requireNonNull(ioOptimized);
            return this;
        }
        @CustomType.Setter
        public Builder keyPairName(String keyPairName) {
            this.keyPairName = Objects.requireNonNull(keyPairName);
            return this;
        }
        @CustomType.Setter
        public Builder latestVersionNumber(Integer latestVersionNumber) {
            this.latestVersionNumber = Objects.requireNonNull(latestVersionNumber);
            return this;
        }
        @CustomType.Setter
        public Builder launchTemplateId(String launchTemplateId) {
            this.launchTemplateId = Objects.requireNonNull(launchTemplateId);
            return this;
        }
        @CustomType.Setter
        public Builder launchTemplateName(String launchTemplateName) {
            this.launchTemplateName = Objects.requireNonNull(launchTemplateName);
            return this;
        }
        @CustomType.Setter
        public Builder modifiedTime(String modifiedTime) {
            this.modifiedTime = Objects.requireNonNull(modifiedTime);
            return this;
        }
        @CustomType.Setter
        public Builder networkInterfaces(List<GetEcsLaunchTemplatesTemplateNetworkInterface> networkInterfaces) {
            this.networkInterfaces = Objects.requireNonNull(networkInterfaces);
            return this;
        }
        public Builder networkInterfaces(GetEcsLaunchTemplatesTemplateNetworkInterface... networkInterfaces) {
            return networkInterfaces(List.of(networkInterfaces));
        }
        @CustomType.Setter
        public Builder networkType(String networkType) {
            this.networkType = Objects.requireNonNull(networkType);
            return this;
        }
        @CustomType.Setter
        public Builder passwordInherit(Boolean passwordInherit) {
            this.passwordInherit = Objects.requireNonNull(passwordInherit);
            return this;
        }
        @CustomType.Setter
        public Builder period(Integer period) {
            this.period = Objects.requireNonNull(period);
            return this;
        }
        @CustomType.Setter
        public Builder privateIpAddress(String privateIpAddress) {
            this.privateIpAddress = Objects.requireNonNull(privateIpAddress);
            return this;
        }
        @CustomType.Setter
        public Builder ramRoleName(String ramRoleName) {
            this.ramRoleName = Objects.requireNonNull(ramRoleName);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupId(String resourceGroupId) {
            this.resourceGroupId = Objects.requireNonNull(resourceGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder securityEnhancementStrategy(String securityEnhancementStrategy) {
            this.securityEnhancementStrategy = Objects.requireNonNull(securityEnhancementStrategy);
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupId(String securityGroupId) {
            this.securityGroupId = Objects.requireNonNull(securityGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupIds(List<String> securityGroupIds) {
            this.securityGroupIds = Objects.requireNonNull(securityGroupIds);
            return this;
        }
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }
        @CustomType.Setter
        public Builder spotDuration(String spotDuration) {
            this.spotDuration = Objects.requireNonNull(spotDuration);
            return this;
        }
        @CustomType.Setter
        public Builder spotPriceLimit(Double spotPriceLimit) {
            this.spotPriceLimit = Objects.requireNonNull(spotPriceLimit);
            return this;
        }
        @CustomType.Setter
        public Builder spotStrategy(String spotStrategy) {
            this.spotStrategy = Objects.requireNonNull(spotStrategy);
            return this;
        }
        @CustomType.Setter
        public Builder systemDisks(List<GetEcsLaunchTemplatesTemplateSystemDisk> systemDisks) {
            this.systemDisks = Objects.requireNonNull(systemDisks);
            return this;
        }
        public Builder systemDisks(GetEcsLaunchTemplatesTemplateSystemDisk... systemDisks) {
            return systemDisks(List.of(systemDisks));
        }
        @CustomType.Setter
        public Builder templateTags(Map<String,Object> templateTags) {
            this.templateTags = Objects.requireNonNull(templateTags);
            return this;
        }
        @CustomType.Setter
        public Builder userData(String userData) {
            this.userData = Objects.requireNonNull(userData);
            return this;
        }
        @CustomType.Setter
        public Builder versionDescription(String versionDescription) {
            this.versionDescription = Objects.requireNonNull(versionDescription);
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }
        @CustomType.Setter
        public Builder vswitchId(String vswitchId) {
            this.vswitchId = Objects.requireNonNull(vswitchId);
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            this.zoneId = Objects.requireNonNull(zoneId);
            return this;
        }
        public GetEcsLaunchTemplatesTemplate build() {
            final var o = new GetEcsLaunchTemplatesTemplate();
            o.autoReleaseTime = autoReleaseTime;
            o.createdBy = createdBy;
            o.dataDisks = dataDisks;
            o.defaultVersionNumber = defaultVersionNumber;
            o.deploymentSetId = deploymentSetId;
            o.description = description;
            o.enableVmOsConfig = enableVmOsConfig;
            o.hostName = hostName;
            o.id = id;
            o.imageId = imageId;
            o.imageOwnerAlias = imageOwnerAlias;
            o.instanceChargeType = instanceChargeType;
            o.instanceName = instanceName;
            o.instanceType = instanceType;
            o.internetChargeType = internetChargeType;
            o.internetMaxBandwidthIn = internetMaxBandwidthIn;
            o.internetMaxBandwidthOut = internetMaxBandwidthOut;
            o.ioOptimized = ioOptimized;
            o.keyPairName = keyPairName;
            o.latestVersionNumber = latestVersionNumber;
            o.launchTemplateId = launchTemplateId;
            o.launchTemplateName = launchTemplateName;
            o.modifiedTime = modifiedTime;
            o.networkInterfaces = networkInterfaces;
            o.networkType = networkType;
            o.passwordInherit = passwordInherit;
            o.period = period;
            o.privateIpAddress = privateIpAddress;
            o.ramRoleName = ramRoleName;
            o.resourceGroupId = resourceGroupId;
            o.securityEnhancementStrategy = securityEnhancementStrategy;
            o.securityGroupId = securityGroupId;
            o.securityGroupIds = securityGroupIds;
            o.spotDuration = spotDuration;
            o.spotPriceLimit = spotPriceLimit;
            o.spotStrategy = spotStrategy;
            o.systemDisks = systemDisks;
            o.templateTags = templateTags;
            o.userData = userData;
            o.versionDescription = versionDescription;
            o.vpcId = vpcId;
            o.vswitchId = vswitchId;
            o.zoneId = zoneId;
            return o;
        }
    }
}
