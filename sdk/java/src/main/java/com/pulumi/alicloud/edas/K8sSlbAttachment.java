// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.edas;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.edas.K8sSlbAttachmentArgs;
import com.pulumi.alicloud.edas.inputs.K8sSlbAttachmentState;
import com.pulumi.alicloud.edas.outputs.K8sSlbAttachmentSlbConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Binds SLBs to an EDAS k8s application.
 * 
 * For information about EDAS k8s slb attachment and how to use it, see [What is k8s slb attachment](https://www.alibabacloud.com/help/en/enterprise-distributed-application-service/latest/bindk8sslb).
 * 
 * &gt; **NOTE:** Available since v1.194.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.ecs.EcsFunctions;
 * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
 * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.cs.ManagedKubernetes;
 * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
 * import com.pulumi.std.StdFunctions;
 * import com.pulumi.std.inputs.CidrsubnetArgs;
 * import com.pulumi.alicloud.cs.NodePool;
 * import com.pulumi.alicloud.cs.NodePoolArgs;
 * import com.pulumi.alicloud.edas.K8sCluster;
 * import com.pulumi.alicloud.edas.K8sClusterArgs;
 * import com.pulumi.alicloud.edas.K8sApplication;
 * import com.pulumi.alicloud.edas.K8sApplicationArgs;
 * import com.pulumi.alicloud.edas.K8sSlbAttachment;
 * import com.pulumi.alicloud.edas.K8sSlbAttachmentArgs;
 * import com.pulumi.alicloud.edas.inputs.K8sSlbAttachmentSlbConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("tf-example");
 *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
 *             .availableResourceCreation("VSwitch")
 *             .build());
 * 
 *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
 *             .nameRegex("^ubuntu_18.*64")
 *             .mostRecent(true)
 *             .owners("system")
 *             .build());
 * 
 *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
 *             .availabilityZone(default_.zones()[0].id())
 *             .cpuCoreCount(4)
 *             .memorySize(8)
 *             .kubernetesNodeRole("Worker")
 *             .build());
 * 
 *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
 *             .vpcName(name)
 *             .cidrBlock("10.4.0.0/16")
 *             .build());
 * 
 *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
 *             .vswitchName(name)
 *             .cidrBlock("10.4.0.0/24")
 *             .vpcId(defaultNetwork.id())
 *             .zoneId(default_.zones()[0].id())
 *             .build());
 * 
 *         var defaultManagedKubernetes = new ManagedKubernetes("defaultManagedKubernetes", ManagedKubernetesArgs.builder()
 *             .namePrefix(name)
 *             .clusterSpec("ack.pro.small")
 *             .workerVswitchIds(defaultSwitch.id())
 *             .newNatGateway(true)
 *             .podCidr(StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
 *                 .input("10.0.0.0/8")
 *                 .newbits(8)
 *                 .netnum(36)
 *                 .build()).result())
 *             .serviceCidr(StdFunctions.cidrsubnet(CidrsubnetArgs.builder()
 *                 .input("172.16.0.0/16")
 *                 .newbits(4)
 *                 .netnum(7)
 *                 .build()).result())
 *             .slbInternetEnabled(true)
 *             .build());
 * 
 *         var defaultNodePool = new NodePool("defaultNodePool", NodePoolArgs.builder()
 *             .name(name)
 *             .clusterId(defaultManagedKubernetes.id())
 *             .vswitchIds(defaultSwitch.id())
 *             .instanceTypes(defaultGetInstanceTypes.instanceTypes()[0].id())
 *             .systemDiskCategory("cloud_efficiency")
 *             .systemDiskSize(40)
 *             .desiredSize("2")
 *             .build());
 * 
 *         var defaultK8sCluster = new K8sCluster("defaultK8sCluster", K8sClusterArgs.builder()
 *             .csClusterId(defaultNodePool.clusterId())
 *             .build());
 * 
 *         var defaultK8sApplication = new K8sApplication("defaultK8sApplication", K8sApplicationArgs.builder()
 *             .applicationName(name)
 *             .clusterId(defaultK8sCluster.id())
 *             .packageType("FatJar")
 *             .packageUrl("http://edas-bj.oss-cn-beijing.aliyuncs.com/prod/demo/SPRING_CLOUD_PROVIDER.jar")
 *             .jdk("Open JDK 8")
 *             .replicas(2)
 *             .readiness("{\"failureThreshold\": 3,\"initialDelaySeconds\": 5,\"successThreshold\": 1,\"timeoutSeconds\": 1,\"tcpSocket\":{\"port\":18081}}")
 *             .liveness("{\"failureThreshold\": 3,\"initialDelaySeconds\": 5,\"successThreshold\": 1,\"timeoutSeconds\": 1,\"tcpSocket\":{\"port\":18081}}")
 *             .applicationDescriotion(name)
 *             .build());
 * 
 *         var defaultK8sSlbAttachment = new K8sSlbAttachment("defaultK8sSlbAttachment", K8sSlbAttachmentArgs.builder()
 *             .appId(defaultK8sApplication.id())
 *             .slbConfigs(K8sSlbAttachmentSlbConfigArgs.builder()
 *                 .type("internet")
 *                 .scheduler("rr")
 *                 .portMappings(K8sSlbAttachmentSlbConfigPortMappingArgs.builder()
 *                     .loadbalancerProtocol("TCP")
 *                     .servicePort(K8sSlbAttachmentSlbConfigPortMappingServicePortArgs.builder()
 *                         .port(80)
 *                         .protocol("TCP")
 *                         .targetPort(8080)
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Slb information of EDAS k8s application can be imported using the ID of an EDAS k8s application. e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:edas/k8sSlbAttachment:K8sSlbAttachment example &lt;EDAS k8s app id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:edas/k8sSlbAttachment:K8sSlbAttachment")
public class K8sSlbAttachment extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the EDAS k8s application to which you want to bind SLB instances.
     * 
     */
    @Export(name="appId", refs={String.class}, tree="[0]")
    private Output<String> appId;

    /**
     * @return The ID of the EDAS k8s application to which you want to bind SLB instances.
     * 
     */
    public Output<String> appId() {
        return this.appId;
    }
    /**
     * The configurations of SLB attachment, which is supported for multiple configurations. See `slb_configs` below.
     * 
     */
    @Export(name="slbConfigs", refs={List.class,K8sSlbAttachmentSlbConfig.class}, tree="[0,1]")
    private Output<List<K8sSlbAttachmentSlbConfig>> slbConfigs;

    /**
     * @return The configurations of SLB attachment, which is supported for multiple configurations. See `slb_configs` below.
     * 
     */
    public Output<List<K8sSlbAttachmentSlbConfig>> slbConfigs() {
        return this.slbConfigs;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public K8sSlbAttachment(java.lang.String name) {
        this(name, K8sSlbAttachmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public K8sSlbAttachment(java.lang.String name, K8sSlbAttachmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public K8sSlbAttachment(java.lang.String name, K8sSlbAttachmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:edas/k8sSlbAttachment:K8sSlbAttachment", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private K8sSlbAttachment(java.lang.String name, Output<java.lang.String> id, @Nullable K8sSlbAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:edas/k8sSlbAttachment:K8sSlbAttachment", name, state, makeResourceOptions(options, id), false);
    }

    private static K8sSlbAttachmentArgs makeArgs(K8sSlbAttachmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? K8sSlbAttachmentArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static K8sSlbAttachment get(java.lang.String name, Output<java.lang.String> id, @Nullable K8sSlbAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new K8sSlbAttachment(name, id, state, options);
    }
}
