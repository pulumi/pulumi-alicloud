// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.edas.outputs;

import com.pulumi.alicloud.edas.outputs.GetClustersCluster;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClustersResult {
    /**
     * @return A list of clusters.
     * 
     */
    private List<GetClustersCluster> clusters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of cluster IDs.
     * 
     */
    private List<String> ids;
    private String logicalRegionId;
    private @Nullable String nameRegex;
    /**
     * @return A list of cluster names.
     * 
     */
    private List<String> names;
    private @Nullable String outputFile;

    private GetClustersResult() {}
    /**
     * @return A list of clusters.
     * 
     */
    public List<GetClustersCluster> clusters() {
        return this.clusters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of cluster IDs.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    public String logicalRegionId() {
        return this.logicalRegionId;
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    /**
     * @return A list of cluster names.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClustersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetClustersCluster> clusters;
        private String id;
        private List<String> ids;
        private String logicalRegionId;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String outputFile;
        public Builder() {}
        public Builder(GetClustersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusters = defaults.clusters;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.logicalRegionId = defaults.logicalRegionId;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.outputFile = defaults.outputFile;
        }

        @CustomType.Setter
        public Builder clusters(List<GetClustersCluster> clusters) {
            if (clusters == null) {
              throw new MissingRequiredPropertyException("GetClustersResult", "clusters");
            }
            this.clusters = clusters;
            return this;
        }
        public Builder clusters(GetClustersCluster... clusters) {
            return clusters(List.of(clusters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetClustersResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            if (ids == null) {
              throw new MissingRequiredPropertyException("GetClustersResult", "ids");
            }
            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder logicalRegionId(String logicalRegionId) {
            if (logicalRegionId == null) {
              throw new MissingRequiredPropertyException("GetClustersResult", "logicalRegionId");
            }
            this.logicalRegionId = logicalRegionId;
            return this;
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {

            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder names(List<String> names) {
            if (names == null) {
              throw new MissingRequiredPropertyException("GetClustersResult", "names");
            }
            this.names = names;
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        public GetClustersResult build() {
            final var _resultValue = new GetClustersResult();
            _resultValue.clusters = clusters;
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.logicalRegionId = logicalRegionId;
            _resultValue.nameRegex = nameRegex;
            _resultValue.names = names;
            _resultValue.outputFile = outputFile;
            return _resultValue;
        }
    }
}
