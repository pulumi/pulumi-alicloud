// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eflo;

import com.pulumi.alicloud.eflo.inputs.ResourceMachineTypesArgs;
import com.pulumi.alicloud.eflo.inputs.ResourceUserAccessParamArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceArgs Empty = new ResourceArgs();

    /**
     * Used to provide a description or comment on the compute cluster.
     * 
     */
    @Import(name="clusterDesc")
    private @Nullable Output<String> clusterDesc;

    /**
     * @return Used to provide a description or comment on the compute cluster.
     * 
     */
    public Optional<Output<String>> clusterDesc() {
        return Optional.ofNullable(this.clusterDesc);
    }

    /**
     * Used to uniquely identify a computing cluster.
     * 
     */
    @Import(name="clusterId", required=true)
    private Output<String> clusterId;

    /**
     * @return Used to uniquely identify a computing cluster.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }

    /**
     * Represents the name of the compute cluster, usually including the model number.
     * 
     */
    @Import(name="clusterName", required=true)
    private Output<String> clusterName;

    /**
     * @return Represents the name of the compute cluster, usually including the model number.
     * 
     */
    public Output<String> clusterName() {
        return this.clusterName;
    }

    /**
     * Generally refers to the type or instance type of a computing resource. See `machineTypes` below.
     * 
     */
    @Import(name="machineTypes", required=true)
    private Output<ResourceMachineTypesArgs> machineTypes;

    /**
     * @return Generally refers to the type or instance type of a computing resource. See `machineTypes` below.
     * 
     */
    public Output<ResourceMachineTypesArgs> machineTypes() {
        return this.machineTypes;
    }

    /**
     * Used to define the access parameters for the user. See `userAccessParam` below.
     * 
     */
    @Import(name="userAccessParam", required=true)
    private Output<ResourceUserAccessParamArgs> userAccessParam;

    /**
     * @return Used to define the access parameters for the user. See `userAccessParam` below.
     * 
     */
    public Output<ResourceUserAccessParamArgs> userAccessParam() {
        return this.userAccessParam;
    }

    private ResourceArgs() {}

    private ResourceArgs(ResourceArgs $) {
        this.clusterDesc = $.clusterDesc;
        this.clusterId = $.clusterId;
        this.clusterName = $.clusterName;
        this.machineTypes = $.machineTypes;
        this.userAccessParam = $.userAccessParam;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceArgs $;

        public Builder() {
            $ = new ResourceArgs();
        }

        public Builder(ResourceArgs defaults) {
            $ = new ResourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterDesc Used to provide a description or comment on the compute cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterDesc(@Nullable Output<String> clusterDesc) {
            $.clusterDesc = clusterDesc;
            return this;
        }

        /**
         * @param clusterDesc Used to provide a description or comment on the compute cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterDesc(String clusterDesc) {
            return clusterDesc(Output.of(clusterDesc));
        }

        /**
         * @param clusterId Used to uniquely identify a computing cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId Used to uniquely identify a computing cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param clusterName Represents the name of the compute cluster, usually including the model number.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterName Represents the name of the compute cluster, usually including the model number.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        /**
         * @param machineTypes Generally refers to the type or instance type of a computing resource. See `machineTypes` below.
         * 
         * @return builder
         * 
         */
        public Builder machineTypes(Output<ResourceMachineTypesArgs> machineTypes) {
            $.machineTypes = machineTypes;
            return this;
        }

        /**
         * @param machineTypes Generally refers to the type or instance type of a computing resource. See `machineTypes` below.
         * 
         * @return builder
         * 
         */
        public Builder machineTypes(ResourceMachineTypesArgs machineTypes) {
            return machineTypes(Output.of(machineTypes));
        }

        /**
         * @param userAccessParam Used to define the access parameters for the user. See `userAccessParam` below.
         * 
         * @return builder
         * 
         */
        public Builder userAccessParam(Output<ResourceUserAccessParamArgs> userAccessParam) {
            $.userAccessParam = userAccessParam;
            return this;
        }

        /**
         * @param userAccessParam Used to define the access parameters for the user. See `userAccessParam` below.
         * 
         * @return builder
         * 
         */
        public Builder userAccessParam(ResourceUserAccessParamArgs userAccessParam) {
            return userAccessParam(Output.of(userAccessParam));
        }

        public ResourceArgs build() {
            if ($.clusterId == null) {
                throw new MissingRequiredPropertyException("ResourceArgs", "clusterId");
            }
            if ($.clusterName == null) {
                throw new MissingRequiredPropertyException("ResourceArgs", "clusterName");
            }
            if ($.machineTypes == null) {
                throw new MissingRequiredPropertyException("ResourceArgs", "machineTypes");
            }
            if ($.userAccessParam == null) {
                throw new MissingRequiredPropertyException("ResourceArgs", "userAccessParam");
            }
            return $;
        }
    }

}
