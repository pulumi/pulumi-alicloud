// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlarmContactArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlarmContactArgs Empty = new AlarmContactArgs();

    /**
     * The name of the alarm contact. The length should between 2 and 40 characters.
     * 
     */
    @Import(name="alarmContactName", required=true)
    private Output<String> alarmContactName;

    /**
     * @return The name of the alarm contact. The length should between 2 and 40 characters.
     * 
     */
    public Output<String> alarmContactName() {
        return this.alarmContactName;
    }

    /**
     * The TradeManager ID of the alarm contact.
     * 
     */
    @Import(name="channelsAliim")
    private @Nullable Output<String> channelsAliim;

    /**
     * @return The TradeManager ID of the alarm contact.
     * 
     */
    public Optional<Output<String>> channelsAliim() {
        return Optional.ofNullable(this.channelsAliim);
    }

    /**
     * The webhook URL of the DingTalk chatbot.
     * 
     */
    @Import(name="channelsDingWebHook")
    private @Nullable Output<String> channelsDingWebHook;

    /**
     * @return The webhook URL of the DingTalk chatbot.
     * 
     */
    public Optional<Output<String>> channelsDingWebHook() {
        return Optional.ofNullable(this.channelsDingWebHook);
    }

    /**
     * The email address of the alarm contact. After you add or modify an email address, the recipient receives an email that contains an activation link. The system adds the recipient to the list of alarm contacts only after the recipient activates the email address.
     * 
     */
    @Import(name="channelsMail")
    private @Nullable Output<String> channelsMail;

    /**
     * @return The email address of the alarm contact. After you add or modify an email address, the recipient receives an email that contains an activation link. The system adds the recipient to the list of alarm contacts only after the recipient activates the email address.
     * 
     */
    public Optional<Output<String>> channelsMail() {
        return Optional.ofNullable(this.channelsMail);
    }

    /**
     * The phone number of the alarm contact. After you add or modify an email address, the recipient receives an email that contains an activation link. The system adds the recipient to the list of alarm contacts only after the recipient activates the email address.
     * 
     */
    @Import(name="channelsSms")
    private @Nullable Output<String> channelsSms;

    /**
     * @return The phone number of the alarm contact. After you add or modify an email address, the recipient receives an email that contains an activation link. The system adds the recipient to the list of alarm contacts only after the recipient activates the email address.
     * 
     */
    public Optional<Output<String>> channelsSms() {
        return Optional.ofNullable(this.channelsSms);
    }

    /**
     * The description of the alarm contact.
     * 
     */
    @Import(name="describe", required=true)
    private Output<String> describe;

    /**
     * @return The description of the alarm contact.
     * 
     */
    public Output<String> describe() {
        return this.describe;
    }

    /**
     * The language type of the alarm. Valid values: `en`, `zh-cn`.
     * 
     * &gt; **NOTE:** Specify at least one of the following alarm notification targets: `channels_aliim`, `channels_ding_web_hook`, `channels_mail`, `channels_sms`.
     * 
     */
    @Import(name="lang")
    private @Nullable Output<String> lang;

    /**
     * @return The language type of the alarm. Valid values: `en`, `zh-cn`.
     * 
     * &gt; **NOTE:** Specify at least one of the following alarm notification targets: `channels_aliim`, `channels_ding_web_hook`, `channels_mail`, `channels_sms`.
     * 
     */
    public Optional<Output<String>> lang() {
        return Optional.ofNullable(this.lang);
    }

    private AlarmContactArgs() {}

    private AlarmContactArgs(AlarmContactArgs $) {
        this.alarmContactName = $.alarmContactName;
        this.channelsAliim = $.channelsAliim;
        this.channelsDingWebHook = $.channelsDingWebHook;
        this.channelsMail = $.channelsMail;
        this.channelsSms = $.channelsSms;
        this.describe = $.describe;
        this.lang = $.lang;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlarmContactArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlarmContactArgs $;

        public Builder() {
            $ = new AlarmContactArgs();
        }

        public Builder(AlarmContactArgs defaults) {
            $ = new AlarmContactArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param alarmContactName The name of the alarm contact. The length should between 2 and 40 characters.
         * 
         * @return builder
         * 
         */
        public Builder alarmContactName(Output<String> alarmContactName) {
            $.alarmContactName = alarmContactName;
            return this;
        }

        /**
         * @param alarmContactName The name of the alarm contact. The length should between 2 and 40 characters.
         * 
         * @return builder
         * 
         */
        public Builder alarmContactName(String alarmContactName) {
            return alarmContactName(Output.of(alarmContactName));
        }

        /**
         * @param channelsAliim The TradeManager ID of the alarm contact.
         * 
         * @return builder
         * 
         */
        public Builder channelsAliim(@Nullable Output<String> channelsAliim) {
            $.channelsAliim = channelsAliim;
            return this;
        }

        /**
         * @param channelsAliim The TradeManager ID of the alarm contact.
         * 
         * @return builder
         * 
         */
        public Builder channelsAliim(String channelsAliim) {
            return channelsAliim(Output.of(channelsAliim));
        }

        /**
         * @param channelsDingWebHook The webhook URL of the DingTalk chatbot.
         * 
         * @return builder
         * 
         */
        public Builder channelsDingWebHook(@Nullable Output<String> channelsDingWebHook) {
            $.channelsDingWebHook = channelsDingWebHook;
            return this;
        }

        /**
         * @param channelsDingWebHook The webhook URL of the DingTalk chatbot.
         * 
         * @return builder
         * 
         */
        public Builder channelsDingWebHook(String channelsDingWebHook) {
            return channelsDingWebHook(Output.of(channelsDingWebHook));
        }

        /**
         * @param channelsMail The email address of the alarm contact. After you add or modify an email address, the recipient receives an email that contains an activation link. The system adds the recipient to the list of alarm contacts only after the recipient activates the email address.
         * 
         * @return builder
         * 
         */
        public Builder channelsMail(@Nullable Output<String> channelsMail) {
            $.channelsMail = channelsMail;
            return this;
        }

        /**
         * @param channelsMail The email address of the alarm contact. After you add or modify an email address, the recipient receives an email that contains an activation link. The system adds the recipient to the list of alarm contacts only after the recipient activates the email address.
         * 
         * @return builder
         * 
         */
        public Builder channelsMail(String channelsMail) {
            return channelsMail(Output.of(channelsMail));
        }

        /**
         * @param channelsSms The phone number of the alarm contact. After you add or modify an email address, the recipient receives an email that contains an activation link. The system adds the recipient to the list of alarm contacts only after the recipient activates the email address.
         * 
         * @return builder
         * 
         */
        public Builder channelsSms(@Nullable Output<String> channelsSms) {
            $.channelsSms = channelsSms;
            return this;
        }

        /**
         * @param channelsSms The phone number of the alarm contact. After you add or modify an email address, the recipient receives an email that contains an activation link. The system adds the recipient to the list of alarm contacts only after the recipient activates the email address.
         * 
         * @return builder
         * 
         */
        public Builder channelsSms(String channelsSms) {
            return channelsSms(Output.of(channelsSms));
        }

        /**
         * @param describe The description of the alarm contact.
         * 
         * @return builder
         * 
         */
        public Builder describe(Output<String> describe) {
            $.describe = describe;
            return this;
        }

        /**
         * @param describe The description of the alarm contact.
         * 
         * @return builder
         * 
         */
        public Builder describe(String describe) {
            return describe(Output.of(describe));
        }

        /**
         * @param lang The language type of the alarm. Valid values: `en`, `zh-cn`.
         * 
         * &gt; **NOTE:** Specify at least one of the following alarm notification targets: `channels_aliim`, `channels_ding_web_hook`, `channels_mail`, `channels_sms`.
         * 
         * @return builder
         * 
         */
        public Builder lang(@Nullable Output<String> lang) {
            $.lang = lang;
            return this;
        }

        /**
         * @param lang The language type of the alarm. Valid values: `en`, `zh-cn`.
         * 
         * &gt; **NOTE:** Specify at least one of the following alarm notification targets: `channels_aliim`, `channels_ding_web_hook`, `channels_mail`, `channels_sms`.
         * 
         * @return builder
         * 
         */
        public Builder lang(String lang) {
            return lang(Output.of(lang));
        }

        public AlarmContactArgs build() {
            if ($.alarmContactName == null) {
                throw new MissingRequiredPropertyException("AlarmContactArgs", "alarmContactName");
            }
            if ($.describe == null) {
                throw new MissingRequiredPropertyException("AlarmContactArgs", "describe");
            }
            return $;
        }
    }

}
