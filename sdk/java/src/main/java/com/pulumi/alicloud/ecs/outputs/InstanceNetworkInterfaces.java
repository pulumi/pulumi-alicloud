// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceNetworkInterfaces {
    /**
     * @return The index of the network card for Secondary ENI.
     * 
     */
    private @Nullable Integer networkCardIndex;
    /**
     * @return The ID of the Secondary ENI.
     * 
     */
    private @Nullable String networkInterfaceId;
    /**
     * @return The communication mode of the Secondary ENI. Default value: `Standard`. Valid values:
     * - `Standard`: Uses the TCP communication mode.
     * - `HighPerformance`: Uses the remote direct memory access (RDMA) communication mode with Elastic RDMA Interface (ERI) enabled.
     * 
     */
    private @Nullable String networkInterfaceTrafficMode;
    /**
     * @return The number of queues supported by the ERI.
     * 
     */
    private @Nullable Integer queuePairNumber;
    /**
     * @return The ID of security group N to which to assign Secondary ENI N.
     * 
     */
    private @Nullable List<String> securityGroupIds;
    /**
     * @return The ID of the vSwitch to which to connect Secondary ENI N.
     * 
     */
    private @Nullable String vswitchId;

    private InstanceNetworkInterfaces() {}
    /**
     * @return The index of the network card for Secondary ENI.
     * 
     */
    public Optional<Integer> networkCardIndex() {
        return Optional.ofNullable(this.networkCardIndex);
    }
    /**
     * @return The ID of the Secondary ENI.
     * 
     */
    public Optional<String> networkInterfaceId() {
        return Optional.ofNullable(this.networkInterfaceId);
    }
    /**
     * @return The communication mode of the Secondary ENI. Default value: `Standard`. Valid values:
     * - `Standard`: Uses the TCP communication mode.
     * - `HighPerformance`: Uses the remote direct memory access (RDMA) communication mode with Elastic RDMA Interface (ERI) enabled.
     * 
     */
    public Optional<String> networkInterfaceTrafficMode() {
        return Optional.ofNullable(this.networkInterfaceTrafficMode);
    }
    /**
     * @return The number of queues supported by the ERI.
     * 
     */
    public Optional<Integer> queuePairNumber() {
        return Optional.ofNullable(this.queuePairNumber);
    }
    /**
     * @return The ID of security group N to which to assign Secondary ENI N.
     * 
     */
    public List<String> securityGroupIds() {
        return this.securityGroupIds == null ? List.of() : this.securityGroupIds;
    }
    /**
     * @return The ID of the vSwitch to which to connect Secondary ENI N.
     * 
     */
    public Optional<String> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceNetworkInterfaces defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer networkCardIndex;
        private @Nullable String networkInterfaceId;
        private @Nullable String networkInterfaceTrafficMode;
        private @Nullable Integer queuePairNumber;
        private @Nullable List<String> securityGroupIds;
        private @Nullable String vswitchId;
        public Builder() {}
        public Builder(InstanceNetworkInterfaces defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.networkCardIndex = defaults.networkCardIndex;
    	      this.networkInterfaceId = defaults.networkInterfaceId;
    	      this.networkInterfaceTrafficMode = defaults.networkInterfaceTrafficMode;
    	      this.queuePairNumber = defaults.queuePairNumber;
    	      this.securityGroupIds = defaults.securityGroupIds;
    	      this.vswitchId = defaults.vswitchId;
        }

        @CustomType.Setter
        public Builder networkCardIndex(@Nullable Integer networkCardIndex) {

            this.networkCardIndex = networkCardIndex;
            return this;
        }
        @CustomType.Setter
        public Builder networkInterfaceId(@Nullable String networkInterfaceId) {

            this.networkInterfaceId = networkInterfaceId;
            return this;
        }
        @CustomType.Setter
        public Builder networkInterfaceTrafficMode(@Nullable String networkInterfaceTrafficMode) {

            this.networkInterfaceTrafficMode = networkInterfaceTrafficMode;
            return this;
        }
        @CustomType.Setter
        public Builder queuePairNumber(@Nullable Integer queuePairNumber) {

            this.queuePairNumber = queuePairNumber;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupIds(@Nullable List<String> securityGroupIds) {

            this.securityGroupIds = securityGroupIds;
            return this;
        }
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }
        @CustomType.Setter
        public Builder vswitchId(@Nullable String vswitchId) {

            this.vswitchId = vswitchId;
            return this;
        }
        public InstanceNetworkInterfaces build() {
            final var _resultValue = new InstanceNetworkInterfaces();
            _resultValue.networkCardIndex = networkCardIndex;
            _resultValue.networkInterfaceId = networkInterfaceId;
            _resultValue.networkInterfaceTrafficMode = networkInterfaceTrafficMode;
            _resultValue.queuePairNumber = queuePairNumber;
            _resultValue.securityGroupIds = securityGroupIds;
            _resultValue.vswitchId = vswitchId;
            return _resultValue;
        }
    }
}
