// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cfg;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.cfg.AggregatorArgs;
import com.pulumi.alicloud.cfg.inputs.AggregatorState;
import com.pulumi.alicloud.cfg.outputs.AggregatorAggregatorAccount;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides a Cloud Config Aggregator resource.
 * 
 * For information about Cloud Config Aggregate Config Rule and how to use it, see [What is Aggregator](https://www.alibabacloud.com/help/en/cloud-config/latest/api-config-2020-09-07-createaggregator).
 * 
 * &gt; **NOTE:** Available since v1.124.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
 * import com.pulumi.alicloud.resourcemanager.inputs.GetAccountsArgs;
 * import com.pulumi.alicloud.cfg.Aggregator;
 * import com.pulumi.alicloud.cfg.AggregatorArgs;
 * import com.pulumi.alicloud.cfg.inputs.AggregatorAggregatorAccountArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get(&#34;name&#34;).orElse(&#34;tf_example&#34;);
 *         final var defaultAccounts = ResourcemanagerFunctions.getAccounts(GetAccountsArgs.builder()
 *             .status(&#34;CreateSuccess&#34;)
 *             .build());
 * 
 *         var defaultAggregator = new Aggregator(&#34;defaultAggregator&#34;, AggregatorArgs.builder()        
 *             .aggregatorAccounts(AggregatorAggregatorAccountArgs.builder()
 *                 .accountId(defaultAccounts.applyValue(getAccountsResult -&gt; getAccountsResult.accounts()[0].accountId()))
 *                 .accountName(defaultAccounts.applyValue(getAccountsResult -&gt; getAccountsResult.accounts()[0].displayName()))
 *                 .accountType(&#34;ResourceDirectory&#34;)
 *                 .build())
 *             .aggregatorName(name)
 *             .description(name)
 *             .aggregatorType(&#34;CUSTOM&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Cloud Config Aggregator can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:cfg/aggregator:Aggregator example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:cfg/aggregator:Aggregator")
public class Aggregator extends com.pulumi.resources.CustomResource {
    /**
     * The information of account in aggregator. If the aggregator_type is RD, it is optional and means add all members in the resource directory to the account group. See `aggregator_accounts` below.  **NOTE:** the field `aggregator_accounts` is not required from version 1.148.0.
     * 
     */
    @Export(name="aggregatorAccounts", type=List.class, parameters={AggregatorAggregatorAccount.class})
    private Output<List<AggregatorAggregatorAccount>> aggregatorAccounts;

    /**
     * @return The information of account in aggregator. If the aggregator_type is RD, it is optional and means add all members in the resource directory to the account group. See `aggregator_accounts` below.  **NOTE:** the field `aggregator_accounts` is not required from version 1.148.0.
     * 
     */
    public Output<List<AggregatorAggregatorAccount>> aggregatorAccounts() {
        return this.aggregatorAccounts;
    }
    /**
     * The name of aggregator.
     * 
     */
    @Export(name="aggregatorName", type=String.class, parameters={})
    private Output<String> aggregatorName;

    /**
     * @return The name of aggregator.
     * 
     */
    public Output<String> aggregatorName() {
        return this.aggregatorName;
    }
    /**
     * The type of aggregator. Valid values: `CUSTOM`, `RD`. The Default value: `CUSTOM`.
     * 
     */
    @Export(name="aggregatorType", type=String.class, parameters={})
    private Output<String> aggregatorType;

    /**
     * @return The type of aggregator. Valid values: `CUSTOM`, `RD`. The Default value: `CUSTOM`.
     * 
     */
    public Output<String> aggregatorType() {
        return this.aggregatorType;
    }
    /**
     * The description of aggregator.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return The description of aggregator.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * The status of the resource. Valid values: `0`: creating `1`: normal `2`: deleting.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return The status of the resource. Valid values: `0`: creating `1`: normal `2`: deleting.
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Aggregator(String name) {
        this(name, AggregatorArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Aggregator(String name, AggregatorArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Aggregator(String name, AggregatorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:cfg/aggregator:Aggregator", name, args == null ? AggregatorArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Aggregator(String name, Output<String> id, @Nullable AggregatorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:cfg/aggregator:Aggregator", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Aggregator get(String name, Output<String> id, @Nullable AggregatorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Aggregator(name, id, state, options);
    }
}
