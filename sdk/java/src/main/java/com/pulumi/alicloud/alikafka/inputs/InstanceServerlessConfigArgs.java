// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alikafka.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceServerlessConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceServerlessConfigArgs Empty = new InstanceServerlessConfigArgs();

    /**
     * The reserved capacity for publishing messages.
     * 
     */
    @Import(name="reservedPublishCapacity")
    private @Nullable Output<Integer> reservedPublishCapacity;

    /**
     * @return The reserved capacity for publishing messages.
     * 
     */
    public Optional<Output<Integer>> reservedPublishCapacity() {
        return Optional.ofNullable(this.reservedPublishCapacity);
    }

    /**
     * The reserved capacity for subscribing to message.
     * 
     */
    @Import(name="reservedSubscribeCapacity")
    private @Nullable Output<Integer> reservedSubscribeCapacity;

    /**
     * @return The reserved capacity for subscribing to message.
     * 
     */
    public Optional<Output<Integer>> reservedSubscribeCapacity() {
        return Optional.ofNullable(this.reservedSubscribeCapacity);
    }

    private InstanceServerlessConfigArgs() {}

    private InstanceServerlessConfigArgs(InstanceServerlessConfigArgs $) {
        this.reservedPublishCapacity = $.reservedPublishCapacity;
        this.reservedSubscribeCapacity = $.reservedSubscribeCapacity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceServerlessConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceServerlessConfigArgs $;

        public Builder() {
            $ = new InstanceServerlessConfigArgs();
        }

        public Builder(InstanceServerlessConfigArgs defaults) {
            $ = new InstanceServerlessConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param reservedPublishCapacity The reserved capacity for publishing messages.
         * 
         * @return builder
         * 
         */
        public Builder reservedPublishCapacity(@Nullable Output<Integer> reservedPublishCapacity) {
            $.reservedPublishCapacity = reservedPublishCapacity;
            return this;
        }

        /**
         * @param reservedPublishCapacity The reserved capacity for publishing messages.
         * 
         * @return builder
         * 
         */
        public Builder reservedPublishCapacity(Integer reservedPublishCapacity) {
            return reservedPublishCapacity(Output.of(reservedPublishCapacity));
        }

        /**
         * @param reservedSubscribeCapacity The reserved capacity for subscribing to message.
         * 
         * @return builder
         * 
         */
        public Builder reservedSubscribeCapacity(@Nullable Output<Integer> reservedSubscribeCapacity) {
            $.reservedSubscribeCapacity = reservedSubscribeCapacity;
            return this;
        }

        /**
         * @param reservedSubscribeCapacity The reserved capacity for subscribing to message.
         * 
         * @return builder
         * 
         */
        public Builder reservedSubscribeCapacity(Integer reservedSubscribeCapacity) {
            return reservedSubscribeCapacity(Output.of(reservedSubscribeCapacity));
        }

        public InstanceServerlessConfigArgs build() {
            return $;
        }
    }

}
