// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.pvtz.outputs;

import com.pulumi.alicloud.pvtz.outputs.GetEndpointsEndpointIpConfig;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEndpointsEndpoint {
    /**
     * @return The creation time of the resource.
     * 
     */
    private String createTime;
    /**
     * @return The name of the resource.
     * 
     */
    private String endpointName;
    private String id;
    /**
     * @return The Ip Configs.
     * 
     */
    private List<GetEndpointsEndpointIpConfig> ipConfigs;
    /**
     * @return The ID of the Security Group.
     * 
     */
    private String securityGroupId;
    /**
     * @return The status of the resource. Valid values: `CHANGE_FAILED`, `CHANGE_INIT`, `EXCEPTION`, `FAILED`, `INIT`, `SUCCESS`.
     * 
     */
    private String status;
    /**
     * @return The VPC ID.
     * 
     */
    private String vpcId;
    /**
     * @return The name of the VPC.
     * 
     */
    private String vpcName;
    /**
     * @return The Region of the VPC.
     * 
     */
    private String vpcRegionId;

    private GetEndpointsEndpoint() {}
    /**
     * @return The creation time of the resource.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The name of the resource.
     * 
     */
    public String endpointName() {
        return this.endpointName;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return The Ip Configs.
     * 
     */
    public List<GetEndpointsEndpointIpConfig> ipConfigs() {
        return this.ipConfigs;
    }
    /**
     * @return The ID of the Security Group.
     * 
     */
    public String securityGroupId() {
        return this.securityGroupId;
    }
    /**
     * @return The status of the resource. Valid values: `CHANGE_FAILED`, `CHANGE_INIT`, `EXCEPTION`, `FAILED`, `INIT`, `SUCCESS`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The VPC ID.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }
    /**
     * @return The name of the VPC.
     * 
     */
    public String vpcName() {
        return this.vpcName;
    }
    /**
     * @return The Region of the VPC.
     * 
     */
    public String vpcRegionId() {
        return this.vpcRegionId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEndpointsEndpoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String endpointName;
        private String id;
        private List<GetEndpointsEndpointIpConfig> ipConfigs;
        private String securityGroupId;
        private String status;
        private String vpcId;
        private String vpcName;
        private String vpcRegionId;
        public Builder() {}
        public Builder(GetEndpointsEndpoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.endpointName = defaults.endpointName;
    	      this.id = defaults.id;
    	      this.ipConfigs = defaults.ipConfigs;
    	      this.securityGroupId = defaults.securityGroupId;
    	      this.status = defaults.status;
    	      this.vpcId = defaults.vpcId;
    	      this.vpcName = defaults.vpcName;
    	      this.vpcRegionId = defaults.vpcRegionId;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetEndpointsEndpoint", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder endpointName(String endpointName) {
            if (endpointName == null) {
              throw new MissingRequiredPropertyException("GetEndpointsEndpoint", "endpointName");
            }
            this.endpointName = endpointName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEndpointsEndpoint", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipConfigs(List<GetEndpointsEndpointIpConfig> ipConfigs) {
            if (ipConfigs == null) {
              throw new MissingRequiredPropertyException("GetEndpointsEndpoint", "ipConfigs");
            }
            this.ipConfigs = ipConfigs;
            return this;
        }
        public Builder ipConfigs(GetEndpointsEndpointIpConfig... ipConfigs) {
            return ipConfigs(List.of(ipConfigs));
        }
        @CustomType.Setter
        public Builder securityGroupId(String securityGroupId) {
            if (securityGroupId == null) {
              throw new MissingRequiredPropertyException("GetEndpointsEndpoint", "securityGroupId");
            }
            this.securityGroupId = securityGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetEndpointsEndpoint", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            if (vpcId == null) {
              throw new MissingRequiredPropertyException("GetEndpointsEndpoint", "vpcId");
            }
            this.vpcId = vpcId;
            return this;
        }
        @CustomType.Setter
        public Builder vpcName(String vpcName) {
            if (vpcName == null) {
              throw new MissingRequiredPropertyException("GetEndpointsEndpoint", "vpcName");
            }
            this.vpcName = vpcName;
            return this;
        }
        @CustomType.Setter
        public Builder vpcRegionId(String vpcRegionId) {
            if (vpcRegionId == null) {
              throw new MissingRequiredPropertyException("GetEndpointsEndpoint", "vpcRegionId");
            }
            this.vpcRegionId = vpcRegionId;
            return this;
        }
        public GetEndpointsEndpoint build() {
            final var _resultValue = new GetEndpointsEndpoint();
            _resultValue.createTime = createTime;
            _resultValue.endpointName = endpointName;
            _resultValue.id = id;
            _resultValue.ipConfigs = ipConfigs;
            _resultValue.securityGroupId = securityGroupId;
            _resultValue.status = status;
            _resultValue.vpcId = vpcId;
            _resultValue.vpcName = vpcName;
            _resultValue.vpcRegionId = vpcRegionId;
            return _resultValue;
        }
    }
}
