// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTriggersTrigger {
    /**
     * @return JSON-encoded trigger configuration. See [Configure triggers and events](https://www.alibabacloud.com/help/doc-detail/70140.htm) for more details.
     * 
     */
    private String config;
    /**
     * @return FC trigger creation time.
     * 
     */
    private String creationTime;
    /**
     * @return FC trigger ID.
     * 
     */
    private String id;
    /**
     * @return RAM role arn attached to the Function Compute trigger. Role used by the event source to call the function. The value format is &#34;acs:ram::$account-id:role/$role-name&#34;. See [Create a trigger](https://www.alibabacloud.com/help/doc-detail/53102.htm) for more details.
     * 
     */
    private String invocationRole;
    /**
     * @return FC trigger last modification time.
     * 
     */
    private String lastModificationTime;
    /**
     * @return FC trigger name.
     * 
     */
    private String name;
    /**
     * @return Event source resource address. See [Create a trigger](https://www.alibabacloud.com/help/doc-detail/53102.htm) for more details.
     * 
     */
    private String sourceArn;
    /**
     * @return Type of the trigger. Valid values: `oss`, `log`, `timer`, `http`, `mns_topic`, `cdn_events` and `eventbridge`.
     * 
     */
    private String type;

    private GetTriggersTrigger() {}
    /**
     * @return JSON-encoded trigger configuration. See [Configure triggers and events](https://www.alibabacloud.com/help/doc-detail/70140.htm) for more details.
     * 
     */
    public String config() {
        return this.config;
    }
    /**
     * @return FC trigger creation time.
     * 
     */
    public String creationTime() {
        return this.creationTime;
    }
    /**
     * @return FC trigger ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return RAM role arn attached to the Function Compute trigger. Role used by the event source to call the function. The value format is &#34;acs:ram::$account-id:role/$role-name&#34;. See [Create a trigger](https://www.alibabacloud.com/help/doc-detail/53102.htm) for more details.
     * 
     */
    public String invocationRole() {
        return this.invocationRole;
    }
    /**
     * @return FC trigger last modification time.
     * 
     */
    public String lastModificationTime() {
        return this.lastModificationTime;
    }
    /**
     * @return FC trigger name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Event source resource address. See [Create a trigger](https://www.alibabacloud.com/help/doc-detail/53102.htm) for more details.
     * 
     */
    public String sourceArn() {
        return this.sourceArn;
    }
    /**
     * @return Type of the trigger. Valid values: `oss`, `log`, `timer`, `http`, `mns_topic`, `cdn_events` and `eventbridge`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTriggersTrigger defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String config;
        private String creationTime;
        private String id;
        private String invocationRole;
        private String lastModificationTime;
        private String name;
        private String sourceArn;
        private String type;
        public Builder() {}
        public Builder(GetTriggersTrigger defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.config = defaults.config;
    	      this.creationTime = defaults.creationTime;
    	      this.id = defaults.id;
    	      this.invocationRole = defaults.invocationRole;
    	      this.lastModificationTime = defaults.lastModificationTime;
    	      this.name = defaults.name;
    	      this.sourceArn = defaults.sourceArn;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder config(String config) {
            if (config == null) {
              throw new MissingRequiredPropertyException("GetTriggersTrigger", "config");
            }
            this.config = config;
            return this;
        }
        @CustomType.Setter
        public Builder creationTime(String creationTime) {
            if (creationTime == null) {
              throw new MissingRequiredPropertyException("GetTriggersTrigger", "creationTime");
            }
            this.creationTime = creationTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTriggersTrigger", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder invocationRole(String invocationRole) {
            if (invocationRole == null) {
              throw new MissingRequiredPropertyException("GetTriggersTrigger", "invocationRole");
            }
            this.invocationRole = invocationRole;
            return this;
        }
        @CustomType.Setter
        public Builder lastModificationTime(String lastModificationTime) {
            if (lastModificationTime == null) {
              throw new MissingRequiredPropertyException("GetTriggersTrigger", "lastModificationTime");
            }
            this.lastModificationTime = lastModificationTime;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetTriggersTrigger", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder sourceArn(String sourceArn) {
            if (sourceArn == null) {
              throw new MissingRequiredPropertyException("GetTriggersTrigger", "sourceArn");
            }
            this.sourceArn = sourceArn;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetTriggersTrigger", "type");
            }
            this.type = type;
            return this;
        }
        public GetTriggersTrigger build() {
            final var _resultValue = new GetTriggersTrigger();
            _resultValue.config = config;
            _resultValue.creationTime = creationTime;
            _resultValue.id = id;
            _resultValue.invocationRole = invocationRole;
            _resultValue.lastModificationTime = lastModificationTime;
            _resultValue.name = name;
            _resultValue.sourceArn = sourceArn;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
