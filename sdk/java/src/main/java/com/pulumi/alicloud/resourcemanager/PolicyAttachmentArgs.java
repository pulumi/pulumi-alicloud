// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.resourcemanager;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class PolicyAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyAttachmentArgs Empty = new PolicyAttachmentArgs();

    /**
     * The name of the policy. name must be 1 to 128 characters in length and can contain letters, digits, and hyphens (-).
     * 
     */
    @Import(name="policyName", required=true)
    private Output<String> policyName;

    /**
     * @return The name of the policy. name must be 1 to 128 characters in length and can contain letters, digits, and hyphens (-).
     * 
     */
    public Output<String> policyName() {
        return this.policyName;
    }

    /**
     * The type of the policy. Valid values: `Custom`, `System`.
     * 
     */
    @Import(name="policyType", required=true)
    private Output<String> policyType;

    /**
     * @return The type of the policy. Valid values: `Custom`, `System`.
     * 
     */
    public Output<String> policyType() {
        return this.policyType;
    }

    /**
     * The name of the object to which you want to attach the policy.
     * 
     */
    @Import(name="principalName", required=true)
    private Output<String> principalName;

    /**
     * @return The name of the object to which you want to attach the policy.
     * 
     */
    public Output<String> principalName() {
        return this.principalName;
    }

    /**
     * The type of the object to which you want to attach the policy. Valid values: `IMSUser`: RAM user, `IMSGroup`: RAM user group, `ServiceRole`: RAM role.
     * 
     */
    @Import(name="principalType", required=true)
    private Output<String> principalType;

    /**
     * @return The type of the object to which you want to attach the policy. Valid values: `IMSUser`: RAM user, `IMSGroup`: RAM user group, `ServiceRole`: RAM role.
     * 
     */
    public Output<String> principalType() {
        return this.principalType;
    }

    /**
     * The ID of the resource group or the ID of the Alibaba Cloud account to which the resource group belongs.
     * 
     */
    @Import(name="resourceGroupId", required=true)
    private Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group or the ID of the Alibaba Cloud account to which the resource group belongs.
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }

    private PolicyAttachmentArgs() {}

    private PolicyAttachmentArgs(PolicyAttachmentArgs $) {
        this.policyName = $.policyName;
        this.policyType = $.policyType;
        this.principalName = $.principalName;
        this.principalType = $.principalType;
        this.resourceGroupId = $.resourceGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyAttachmentArgs $;

        public Builder() {
            $ = new PolicyAttachmentArgs();
        }

        public Builder(PolicyAttachmentArgs defaults) {
            $ = new PolicyAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param policyName The name of the policy. name must be 1 to 128 characters in length and can contain letters, digits, and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder policyName(Output<String> policyName) {
            $.policyName = policyName;
            return this;
        }

        /**
         * @param policyName The name of the policy. name must be 1 to 128 characters in length and can contain letters, digits, and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder policyName(String policyName) {
            return policyName(Output.of(policyName));
        }

        /**
         * @param policyType The type of the policy. Valid values: `Custom`, `System`.
         * 
         * @return builder
         * 
         */
        public Builder policyType(Output<String> policyType) {
            $.policyType = policyType;
            return this;
        }

        /**
         * @param policyType The type of the policy. Valid values: `Custom`, `System`.
         * 
         * @return builder
         * 
         */
        public Builder policyType(String policyType) {
            return policyType(Output.of(policyType));
        }

        /**
         * @param principalName The name of the object to which you want to attach the policy.
         * 
         * @return builder
         * 
         */
        public Builder principalName(Output<String> principalName) {
            $.principalName = principalName;
            return this;
        }

        /**
         * @param principalName The name of the object to which you want to attach the policy.
         * 
         * @return builder
         * 
         */
        public Builder principalName(String principalName) {
            return principalName(Output.of(principalName));
        }

        /**
         * @param principalType The type of the object to which you want to attach the policy. Valid values: `IMSUser`: RAM user, `IMSGroup`: RAM user group, `ServiceRole`: RAM role.
         * 
         * @return builder
         * 
         */
        public Builder principalType(Output<String> principalType) {
            $.principalType = principalType;
            return this;
        }

        /**
         * @param principalType The type of the object to which you want to attach the policy. Valid values: `IMSUser`: RAM user, `IMSGroup`: RAM user group, `ServiceRole`: RAM role.
         * 
         * @return builder
         * 
         */
        public Builder principalType(String principalType) {
            return principalType(Output.of(principalType));
        }

        /**
         * @param resourceGroupId The ID of the resource group or the ID of the Alibaba Cloud account to which the resource group belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group or the ID of the Alibaba Cloud account to which the resource group belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        public PolicyAttachmentArgs build() {
            $.policyName = Objects.requireNonNull($.policyName, "expected parameter 'policyName' to be non-null");
            $.policyType = Objects.requireNonNull($.policyType, "expected parameter 'policyType' to be non-null");
            $.principalName = Objects.requireNonNull($.principalName, "expected parameter 'principalName' to be non-null");
            $.principalType = Objects.requireNonNull($.principalType, "expected parameter 'principalType' to be non-null");
            $.resourceGroupId = Objects.requireNonNull($.resourceGroupId, "expected parameter 'resourceGroupId' to be non-null");
            return $;
        }
    }

}
