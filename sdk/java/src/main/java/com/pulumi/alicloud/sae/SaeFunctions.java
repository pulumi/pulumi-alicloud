// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sae;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.sae.inputs.GetApplicationScalingRulesArgs;
import com.pulumi.alicloud.sae.inputs.GetApplicationScalingRulesPlainArgs;
import com.pulumi.alicloud.sae.inputs.GetApplicationsArgs;
import com.pulumi.alicloud.sae.inputs.GetApplicationsPlainArgs;
import com.pulumi.alicloud.sae.inputs.GetConfigMapsArgs;
import com.pulumi.alicloud.sae.inputs.GetConfigMapsPlainArgs;
import com.pulumi.alicloud.sae.inputs.GetGreyTagRoutesArgs;
import com.pulumi.alicloud.sae.inputs.GetGreyTagRoutesPlainArgs;
import com.pulumi.alicloud.sae.inputs.GetIngressesArgs;
import com.pulumi.alicloud.sae.inputs.GetIngressesPlainArgs;
import com.pulumi.alicloud.sae.inputs.GetInstanceSpecificationsArgs;
import com.pulumi.alicloud.sae.inputs.GetInstanceSpecificationsPlainArgs;
import com.pulumi.alicloud.sae.inputs.GetNamespacesArgs;
import com.pulumi.alicloud.sae.inputs.GetNamespacesPlainArgs;
import com.pulumi.alicloud.sae.inputs.GetServiceArgs;
import com.pulumi.alicloud.sae.inputs.GetServicePlainArgs;
import com.pulumi.alicloud.sae.outputs.GetApplicationScalingRulesResult;
import com.pulumi.alicloud.sae.outputs.GetApplicationsResult;
import com.pulumi.alicloud.sae.outputs.GetConfigMapsResult;
import com.pulumi.alicloud.sae.outputs.GetGreyTagRoutesResult;
import com.pulumi.alicloud.sae.outputs.GetIngressesResult;
import com.pulumi.alicloud.sae.outputs.GetInstanceSpecificationsResult;
import com.pulumi.alicloud.sae.outputs.GetNamespacesResult;
import com.pulumi.alicloud.sae.outputs.GetServiceResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class SaeFunctions {
    /**
     * This data source provides the Sae Application Scaling Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.159.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetApplicationScalingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SaeFunctions.getApplicationScalingRules(GetApplicationScalingRulesArgs.builder()
     *             .appId(&#34;example_value&#34;)
     *             .ids(            
     *                 &#34;example_value-1&#34;,
     *                 &#34;example_value-2&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;saeApplicationScalingRuleId1&#34;, ids.applyValue(getApplicationScalingRulesResult -&gt; getApplicationScalingRulesResult.rules()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationScalingRulesResult> getApplicationScalingRules(GetApplicationScalingRulesArgs args) {
        return getApplicationScalingRules(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Sae Application Scaling Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.159.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetApplicationScalingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SaeFunctions.getApplicationScalingRules(GetApplicationScalingRulesArgs.builder()
     *             .appId(&#34;example_value&#34;)
     *             .ids(            
     *                 &#34;example_value-1&#34;,
     *                 &#34;example_value-2&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;saeApplicationScalingRuleId1&#34;, ids.applyValue(getApplicationScalingRulesResult -&gt; getApplicationScalingRulesResult.rules()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationScalingRulesResult> getApplicationScalingRulesPlain(GetApplicationScalingRulesPlainArgs args) {
        return getApplicationScalingRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Sae Application Scaling Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.159.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetApplicationScalingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SaeFunctions.getApplicationScalingRules(GetApplicationScalingRulesArgs.builder()
     *             .appId(&#34;example_value&#34;)
     *             .ids(            
     *                 &#34;example_value-1&#34;,
     *                 &#34;example_value-2&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;saeApplicationScalingRuleId1&#34;, ids.applyValue(getApplicationScalingRulesResult -&gt; getApplicationScalingRulesResult.rules()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationScalingRulesResult> getApplicationScalingRules(GetApplicationScalingRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:sae/getApplicationScalingRules:getApplicationScalingRules", TypeShape.of(GetApplicationScalingRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Sae Application Scaling Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.159.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetApplicationScalingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SaeFunctions.getApplicationScalingRules(GetApplicationScalingRulesArgs.builder()
     *             .appId(&#34;example_value&#34;)
     *             .ids(            
     *                 &#34;example_value-1&#34;,
     *                 &#34;example_value-2&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;saeApplicationScalingRuleId1&#34;, ids.applyValue(getApplicationScalingRulesResult -&gt; getApplicationScalingRulesResult.rules()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationScalingRulesResult> getApplicationScalingRulesPlain(GetApplicationScalingRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:sae/getApplicationScalingRules:getApplicationScalingRules", TypeShape.of(GetApplicationScalingRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Sae Applications of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.161.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.sae.Namespace;
     * import com.pulumi.alicloud.sae.NamespaceArgs;
     * import com.pulumi.alicloud.sae.Application;
     * import com.pulumi.alicloud.sae.ApplicationArgs;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get(&#34;name&#34;).orElse(&#34;tf-testacc&#34;);
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation(&#34;VSwitch&#34;)
     *             .build());
     * 
     *         var vpc = new Network(&#34;vpc&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;tf_testacc&#34;)
     *             .cidrBlock(&#34;172.16.0.0/12&#34;)
     *             .build());
     * 
     *         var vsw = new Switch(&#34;vsw&#34;, SwitchArgs.builder()        
     *             .vpcId(vpc.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(name)
     *             .build());
     * 
     *         var defaultNamespace = new Namespace(&#34;defaultNamespace&#34;, NamespaceArgs.builder()        
     *             .namespaceDescription(name)
     *             .namespaceId(&#34;cn-hangzhou:tfacctest&#34;)
     *             .namespaceName(name)
     *             .build());
     * 
     *         var defaultApplication = new Application(&#34;defaultApplication&#34;, ApplicationArgs.builder()        
     *             .appDescription(&#34;tf-testaccDescription&#34;)
     *             .appName(&#34;tf-testaccAppName131&#34;)
     *             .namespaceId(defaultNamespace.id())
     *             .imageUrl(&#34;registry-vpc.cn-hangzhou.aliyuncs.com/lxepoo/apache-php5&#34;)
     *             .packageType(&#34;Image&#34;)
     *             .vswitchId(vsw.id())
     *             .timezone(&#34;Asia/Beijing&#34;)
     *             .replicas(&#34;5&#34;)
     *             .cpu(&#34;500&#34;)
     *             .memory(&#34;2048&#34;)
     *             .build());
     * 
     *         final var defaultGetApplications = SaeFunctions.getApplications(GetApplicationsArgs.builder()
     *             .ids(defaultApplication.id())
     *             .build());
     * 
     *         ctx.export(&#34;saeApplicationId&#34;, defaultGetApplications.applyValue(getApplicationsResult -&gt; getApplicationsResult).applyValue(defaultGetApplications -&gt; defaultGetApplications.applyValue(getApplicationsResult -&gt; getApplicationsResult.applications()[0].id())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationsResult> getApplications() {
        return getApplications(GetApplicationsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Sae Applications of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.161.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.sae.Namespace;
     * import com.pulumi.alicloud.sae.NamespaceArgs;
     * import com.pulumi.alicloud.sae.Application;
     * import com.pulumi.alicloud.sae.ApplicationArgs;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get(&#34;name&#34;).orElse(&#34;tf-testacc&#34;);
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation(&#34;VSwitch&#34;)
     *             .build());
     * 
     *         var vpc = new Network(&#34;vpc&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;tf_testacc&#34;)
     *             .cidrBlock(&#34;172.16.0.0/12&#34;)
     *             .build());
     * 
     *         var vsw = new Switch(&#34;vsw&#34;, SwitchArgs.builder()        
     *             .vpcId(vpc.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(name)
     *             .build());
     * 
     *         var defaultNamespace = new Namespace(&#34;defaultNamespace&#34;, NamespaceArgs.builder()        
     *             .namespaceDescription(name)
     *             .namespaceId(&#34;cn-hangzhou:tfacctest&#34;)
     *             .namespaceName(name)
     *             .build());
     * 
     *         var defaultApplication = new Application(&#34;defaultApplication&#34;, ApplicationArgs.builder()        
     *             .appDescription(&#34;tf-testaccDescription&#34;)
     *             .appName(&#34;tf-testaccAppName131&#34;)
     *             .namespaceId(defaultNamespace.id())
     *             .imageUrl(&#34;registry-vpc.cn-hangzhou.aliyuncs.com/lxepoo/apache-php5&#34;)
     *             .packageType(&#34;Image&#34;)
     *             .vswitchId(vsw.id())
     *             .timezone(&#34;Asia/Beijing&#34;)
     *             .replicas(&#34;5&#34;)
     *             .cpu(&#34;500&#34;)
     *             .memory(&#34;2048&#34;)
     *             .build());
     * 
     *         final var defaultGetApplications = SaeFunctions.getApplications(GetApplicationsArgs.builder()
     *             .ids(defaultApplication.id())
     *             .build());
     * 
     *         ctx.export(&#34;saeApplicationId&#34;, defaultGetApplications.applyValue(getApplicationsResult -&gt; getApplicationsResult).applyValue(defaultGetApplications -&gt; defaultGetApplications.applyValue(getApplicationsResult -&gt; getApplicationsResult.applications()[0].id())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationsResult> getApplicationsPlain() {
        return getApplicationsPlain(GetApplicationsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Sae Applications of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.161.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.sae.Namespace;
     * import com.pulumi.alicloud.sae.NamespaceArgs;
     * import com.pulumi.alicloud.sae.Application;
     * import com.pulumi.alicloud.sae.ApplicationArgs;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get(&#34;name&#34;).orElse(&#34;tf-testacc&#34;);
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation(&#34;VSwitch&#34;)
     *             .build());
     * 
     *         var vpc = new Network(&#34;vpc&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;tf_testacc&#34;)
     *             .cidrBlock(&#34;172.16.0.0/12&#34;)
     *             .build());
     * 
     *         var vsw = new Switch(&#34;vsw&#34;, SwitchArgs.builder()        
     *             .vpcId(vpc.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(name)
     *             .build());
     * 
     *         var defaultNamespace = new Namespace(&#34;defaultNamespace&#34;, NamespaceArgs.builder()        
     *             .namespaceDescription(name)
     *             .namespaceId(&#34;cn-hangzhou:tfacctest&#34;)
     *             .namespaceName(name)
     *             .build());
     * 
     *         var defaultApplication = new Application(&#34;defaultApplication&#34;, ApplicationArgs.builder()        
     *             .appDescription(&#34;tf-testaccDescription&#34;)
     *             .appName(&#34;tf-testaccAppName131&#34;)
     *             .namespaceId(defaultNamespace.id())
     *             .imageUrl(&#34;registry-vpc.cn-hangzhou.aliyuncs.com/lxepoo/apache-php5&#34;)
     *             .packageType(&#34;Image&#34;)
     *             .vswitchId(vsw.id())
     *             .timezone(&#34;Asia/Beijing&#34;)
     *             .replicas(&#34;5&#34;)
     *             .cpu(&#34;500&#34;)
     *             .memory(&#34;2048&#34;)
     *             .build());
     * 
     *         final var defaultGetApplications = SaeFunctions.getApplications(GetApplicationsArgs.builder()
     *             .ids(defaultApplication.id())
     *             .build());
     * 
     *         ctx.export(&#34;saeApplicationId&#34;, defaultGetApplications.applyValue(getApplicationsResult -&gt; getApplicationsResult).applyValue(defaultGetApplications -&gt; defaultGetApplications.applyValue(getApplicationsResult -&gt; getApplicationsResult.applications()[0].id())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationsResult> getApplications(GetApplicationsArgs args) {
        return getApplications(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Sae Applications of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.161.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.sae.Namespace;
     * import com.pulumi.alicloud.sae.NamespaceArgs;
     * import com.pulumi.alicloud.sae.Application;
     * import com.pulumi.alicloud.sae.ApplicationArgs;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get(&#34;name&#34;).orElse(&#34;tf-testacc&#34;);
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation(&#34;VSwitch&#34;)
     *             .build());
     * 
     *         var vpc = new Network(&#34;vpc&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;tf_testacc&#34;)
     *             .cidrBlock(&#34;172.16.0.0/12&#34;)
     *             .build());
     * 
     *         var vsw = new Switch(&#34;vsw&#34;, SwitchArgs.builder()        
     *             .vpcId(vpc.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(name)
     *             .build());
     * 
     *         var defaultNamespace = new Namespace(&#34;defaultNamespace&#34;, NamespaceArgs.builder()        
     *             .namespaceDescription(name)
     *             .namespaceId(&#34;cn-hangzhou:tfacctest&#34;)
     *             .namespaceName(name)
     *             .build());
     * 
     *         var defaultApplication = new Application(&#34;defaultApplication&#34;, ApplicationArgs.builder()        
     *             .appDescription(&#34;tf-testaccDescription&#34;)
     *             .appName(&#34;tf-testaccAppName131&#34;)
     *             .namespaceId(defaultNamespace.id())
     *             .imageUrl(&#34;registry-vpc.cn-hangzhou.aliyuncs.com/lxepoo/apache-php5&#34;)
     *             .packageType(&#34;Image&#34;)
     *             .vswitchId(vsw.id())
     *             .timezone(&#34;Asia/Beijing&#34;)
     *             .replicas(&#34;5&#34;)
     *             .cpu(&#34;500&#34;)
     *             .memory(&#34;2048&#34;)
     *             .build());
     * 
     *         final var defaultGetApplications = SaeFunctions.getApplications(GetApplicationsArgs.builder()
     *             .ids(defaultApplication.id())
     *             .build());
     * 
     *         ctx.export(&#34;saeApplicationId&#34;, defaultGetApplications.applyValue(getApplicationsResult -&gt; getApplicationsResult).applyValue(defaultGetApplications -&gt; defaultGetApplications.applyValue(getApplicationsResult -&gt; getApplicationsResult.applications()[0].id())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationsResult> getApplicationsPlain(GetApplicationsPlainArgs args) {
        return getApplicationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Sae Applications of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.161.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.sae.Namespace;
     * import com.pulumi.alicloud.sae.NamespaceArgs;
     * import com.pulumi.alicloud.sae.Application;
     * import com.pulumi.alicloud.sae.ApplicationArgs;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get(&#34;name&#34;).orElse(&#34;tf-testacc&#34;);
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation(&#34;VSwitch&#34;)
     *             .build());
     * 
     *         var vpc = new Network(&#34;vpc&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;tf_testacc&#34;)
     *             .cidrBlock(&#34;172.16.0.0/12&#34;)
     *             .build());
     * 
     *         var vsw = new Switch(&#34;vsw&#34;, SwitchArgs.builder()        
     *             .vpcId(vpc.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(name)
     *             .build());
     * 
     *         var defaultNamespace = new Namespace(&#34;defaultNamespace&#34;, NamespaceArgs.builder()        
     *             .namespaceDescription(name)
     *             .namespaceId(&#34;cn-hangzhou:tfacctest&#34;)
     *             .namespaceName(name)
     *             .build());
     * 
     *         var defaultApplication = new Application(&#34;defaultApplication&#34;, ApplicationArgs.builder()        
     *             .appDescription(&#34;tf-testaccDescription&#34;)
     *             .appName(&#34;tf-testaccAppName131&#34;)
     *             .namespaceId(defaultNamespace.id())
     *             .imageUrl(&#34;registry-vpc.cn-hangzhou.aliyuncs.com/lxepoo/apache-php5&#34;)
     *             .packageType(&#34;Image&#34;)
     *             .vswitchId(vsw.id())
     *             .timezone(&#34;Asia/Beijing&#34;)
     *             .replicas(&#34;5&#34;)
     *             .cpu(&#34;500&#34;)
     *             .memory(&#34;2048&#34;)
     *             .build());
     * 
     *         final var defaultGetApplications = SaeFunctions.getApplications(GetApplicationsArgs.builder()
     *             .ids(defaultApplication.id())
     *             .build());
     * 
     *         ctx.export(&#34;saeApplicationId&#34;, defaultGetApplications.applyValue(getApplicationsResult -&gt; getApplicationsResult).applyValue(defaultGetApplications -&gt; defaultGetApplications.applyValue(getApplicationsResult -&gt; getApplicationsResult.applications()[0].id())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationsResult> getApplications(GetApplicationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:sae/getApplications:getApplications", TypeShape.of(GetApplicationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Sae Applications of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.161.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.sae.Namespace;
     * import com.pulumi.alicloud.sae.NamespaceArgs;
     * import com.pulumi.alicloud.sae.Application;
     * import com.pulumi.alicloud.sae.ApplicationArgs;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetApplicationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get(&#34;name&#34;).orElse(&#34;tf-testacc&#34;);
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation(&#34;VSwitch&#34;)
     *             .build());
     * 
     *         var vpc = new Network(&#34;vpc&#34;, NetworkArgs.builder()        
     *             .vpcName(&#34;tf_testacc&#34;)
     *             .cidrBlock(&#34;172.16.0.0/12&#34;)
     *             .build());
     * 
     *         var vsw = new Switch(&#34;vsw&#34;, SwitchArgs.builder()        
     *             .vpcId(vpc.id())
     *             .cidrBlock(&#34;172.16.0.0/24&#34;)
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(name)
     *             .build());
     * 
     *         var defaultNamespace = new Namespace(&#34;defaultNamespace&#34;, NamespaceArgs.builder()        
     *             .namespaceDescription(name)
     *             .namespaceId(&#34;cn-hangzhou:tfacctest&#34;)
     *             .namespaceName(name)
     *             .build());
     * 
     *         var defaultApplication = new Application(&#34;defaultApplication&#34;, ApplicationArgs.builder()        
     *             .appDescription(&#34;tf-testaccDescription&#34;)
     *             .appName(&#34;tf-testaccAppName131&#34;)
     *             .namespaceId(defaultNamespace.id())
     *             .imageUrl(&#34;registry-vpc.cn-hangzhou.aliyuncs.com/lxepoo/apache-php5&#34;)
     *             .packageType(&#34;Image&#34;)
     *             .vswitchId(vsw.id())
     *             .timezone(&#34;Asia/Beijing&#34;)
     *             .replicas(&#34;5&#34;)
     *             .cpu(&#34;500&#34;)
     *             .memory(&#34;2048&#34;)
     *             .build());
     * 
     *         final var defaultGetApplications = SaeFunctions.getApplications(GetApplicationsArgs.builder()
     *             .ids(defaultApplication.id())
     *             .build());
     * 
     *         ctx.export(&#34;saeApplicationId&#34;, defaultGetApplications.applyValue(getApplicationsResult -&gt; getApplicationsResult).applyValue(defaultGetApplications -&gt; defaultGetApplications.applyValue(getApplicationsResult -&gt; getApplicationsResult.applications()[0].id())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationsResult> getApplicationsPlain(GetApplicationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:sae/getApplications:getApplications", TypeShape.of(GetApplicationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Sae Config Maps of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.130.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.Namespace;
     * import com.pulumi.alicloud.sae.NamespaceArgs;
     * import com.pulumi.alicloud.sae.ConfigMap;
     * import com.pulumi.alicloud.sae.ConfigMapArgs;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetConfigMapsArgs;
     * import static com.pulumi.codegen.internal.Serialization.*;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var configMapName = config.get(&#34;configMapName&#34;).orElse(&#34;examplename&#34;);
     *         var example = new Namespace(&#34;example&#34;, NamespaceArgs.builder()        
     *             .namespaceId(&#34;cn-hangzhou:yourname&#34;)
     *             .namespaceName(&#34;example_value&#34;)
     *             .namespaceDescription(&#34;your_description&#34;)
     *             .build());
     * 
     *         var exampleConfigMap = new ConfigMap(&#34;exampleConfigMap&#34;, ConfigMapArgs.builder()        
     *             .data(serializeJson(
     *                 jsonObject(
     *                     jsonProperty(&#34;env.home&#34;, &#34;/root&#34;),
     *                     jsonProperty(&#34;env.shell&#34;, &#34;/bin/sh&#34;)
     *                 )))
     *             .name(configMapName)
     *             .namespaceId(example.namespaceId())
     *             .build());
     * 
     *         final var nameRegex = SaeFunctions.getConfigMaps(GetConfigMapsArgs.builder()
     *             .namespaceId(example.namespaceId())
     *             .nameRegex(&#34;^example&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;saeConfigMapId&#34;, nameRegex.applyValue(getConfigMapsResult -&gt; getConfigMapsResult).applyValue(nameRegex -&gt; nameRegex.applyValue(getConfigMapsResult -&gt; getConfigMapsResult.maps()[0].id())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConfigMapsResult> getConfigMaps(GetConfigMapsArgs args) {
        return getConfigMaps(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Sae Config Maps of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.130.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.Namespace;
     * import com.pulumi.alicloud.sae.NamespaceArgs;
     * import com.pulumi.alicloud.sae.ConfigMap;
     * import com.pulumi.alicloud.sae.ConfigMapArgs;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetConfigMapsArgs;
     * import static com.pulumi.codegen.internal.Serialization.*;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var configMapName = config.get(&#34;configMapName&#34;).orElse(&#34;examplename&#34;);
     *         var example = new Namespace(&#34;example&#34;, NamespaceArgs.builder()        
     *             .namespaceId(&#34;cn-hangzhou:yourname&#34;)
     *             .namespaceName(&#34;example_value&#34;)
     *             .namespaceDescription(&#34;your_description&#34;)
     *             .build());
     * 
     *         var exampleConfigMap = new ConfigMap(&#34;exampleConfigMap&#34;, ConfigMapArgs.builder()        
     *             .data(serializeJson(
     *                 jsonObject(
     *                     jsonProperty(&#34;env.home&#34;, &#34;/root&#34;),
     *                     jsonProperty(&#34;env.shell&#34;, &#34;/bin/sh&#34;)
     *                 )))
     *             .name(configMapName)
     *             .namespaceId(example.namespaceId())
     *             .build());
     * 
     *         final var nameRegex = SaeFunctions.getConfigMaps(GetConfigMapsArgs.builder()
     *             .namespaceId(example.namespaceId())
     *             .nameRegex(&#34;^example&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;saeConfigMapId&#34;, nameRegex.applyValue(getConfigMapsResult -&gt; getConfigMapsResult).applyValue(nameRegex -&gt; nameRegex.applyValue(getConfigMapsResult -&gt; getConfigMapsResult.maps()[0].id())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConfigMapsResult> getConfigMapsPlain(GetConfigMapsPlainArgs args) {
        return getConfigMapsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Sae Config Maps of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.130.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.Namespace;
     * import com.pulumi.alicloud.sae.NamespaceArgs;
     * import com.pulumi.alicloud.sae.ConfigMap;
     * import com.pulumi.alicloud.sae.ConfigMapArgs;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetConfigMapsArgs;
     * import static com.pulumi.codegen.internal.Serialization.*;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var configMapName = config.get(&#34;configMapName&#34;).orElse(&#34;examplename&#34;);
     *         var example = new Namespace(&#34;example&#34;, NamespaceArgs.builder()        
     *             .namespaceId(&#34;cn-hangzhou:yourname&#34;)
     *             .namespaceName(&#34;example_value&#34;)
     *             .namespaceDescription(&#34;your_description&#34;)
     *             .build());
     * 
     *         var exampleConfigMap = new ConfigMap(&#34;exampleConfigMap&#34;, ConfigMapArgs.builder()        
     *             .data(serializeJson(
     *                 jsonObject(
     *                     jsonProperty(&#34;env.home&#34;, &#34;/root&#34;),
     *                     jsonProperty(&#34;env.shell&#34;, &#34;/bin/sh&#34;)
     *                 )))
     *             .name(configMapName)
     *             .namespaceId(example.namespaceId())
     *             .build());
     * 
     *         final var nameRegex = SaeFunctions.getConfigMaps(GetConfigMapsArgs.builder()
     *             .namespaceId(example.namespaceId())
     *             .nameRegex(&#34;^example&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;saeConfigMapId&#34;, nameRegex.applyValue(getConfigMapsResult -&gt; getConfigMapsResult).applyValue(nameRegex -&gt; nameRegex.applyValue(getConfigMapsResult -&gt; getConfigMapsResult.maps()[0].id())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConfigMapsResult> getConfigMaps(GetConfigMapsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:sae/getConfigMaps:getConfigMaps", TypeShape.of(GetConfigMapsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Sae Config Maps of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.130.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.Namespace;
     * import com.pulumi.alicloud.sae.NamespaceArgs;
     * import com.pulumi.alicloud.sae.ConfigMap;
     * import com.pulumi.alicloud.sae.ConfigMapArgs;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetConfigMapsArgs;
     * import static com.pulumi.codegen.internal.Serialization.*;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var configMapName = config.get(&#34;configMapName&#34;).orElse(&#34;examplename&#34;);
     *         var example = new Namespace(&#34;example&#34;, NamespaceArgs.builder()        
     *             .namespaceId(&#34;cn-hangzhou:yourname&#34;)
     *             .namespaceName(&#34;example_value&#34;)
     *             .namespaceDescription(&#34;your_description&#34;)
     *             .build());
     * 
     *         var exampleConfigMap = new ConfigMap(&#34;exampleConfigMap&#34;, ConfigMapArgs.builder()        
     *             .data(serializeJson(
     *                 jsonObject(
     *                     jsonProperty(&#34;env.home&#34;, &#34;/root&#34;),
     *                     jsonProperty(&#34;env.shell&#34;, &#34;/bin/sh&#34;)
     *                 )))
     *             .name(configMapName)
     *             .namespaceId(example.namespaceId())
     *             .build());
     * 
     *         final var nameRegex = SaeFunctions.getConfigMaps(GetConfigMapsArgs.builder()
     *             .namespaceId(example.namespaceId())
     *             .nameRegex(&#34;^example&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;saeConfigMapId&#34;, nameRegex.applyValue(getConfigMapsResult -&gt; getConfigMapsResult).applyValue(nameRegex -&gt; nameRegex.applyValue(getConfigMapsResult -&gt; getConfigMapsResult.maps()[0].id())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConfigMapsResult> getConfigMapsPlain(GetConfigMapsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:sae/getConfigMaps:getConfigMaps", TypeShape.of(GetConfigMapsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Sae GreyTagRoutes of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.160.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetGreyTagRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nameRegex = SaeFunctions.getGreyTagRoutes(GetGreyTagRoutesArgs.builder()
     *             .appId(&#34;example_id&#34;)
     *             .nameRegex(&#34;^my-GreyTagRoute&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;saeGreyTagRoutesId&#34;, nameRegex.applyValue(getGreyTagRoutesResult -&gt; getGreyTagRoutesResult.routes()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGreyTagRoutesResult> getGreyTagRoutes(GetGreyTagRoutesArgs args) {
        return getGreyTagRoutes(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Sae GreyTagRoutes of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.160.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetGreyTagRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nameRegex = SaeFunctions.getGreyTagRoutes(GetGreyTagRoutesArgs.builder()
     *             .appId(&#34;example_id&#34;)
     *             .nameRegex(&#34;^my-GreyTagRoute&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;saeGreyTagRoutesId&#34;, nameRegex.applyValue(getGreyTagRoutesResult -&gt; getGreyTagRoutesResult.routes()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetGreyTagRoutesResult> getGreyTagRoutesPlain(GetGreyTagRoutesPlainArgs args) {
        return getGreyTagRoutesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Sae GreyTagRoutes of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.160.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetGreyTagRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nameRegex = SaeFunctions.getGreyTagRoutes(GetGreyTagRoutesArgs.builder()
     *             .appId(&#34;example_id&#34;)
     *             .nameRegex(&#34;^my-GreyTagRoute&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;saeGreyTagRoutesId&#34;, nameRegex.applyValue(getGreyTagRoutesResult -&gt; getGreyTagRoutesResult.routes()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGreyTagRoutesResult> getGreyTagRoutes(GetGreyTagRoutesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:sae/getGreyTagRoutes:getGreyTagRoutes", TypeShape.of(GetGreyTagRoutesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Sae GreyTagRoutes of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.160.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetGreyTagRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nameRegex = SaeFunctions.getGreyTagRoutes(GetGreyTagRoutesArgs.builder()
     *             .appId(&#34;example_id&#34;)
     *             .nameRegex(&#34;^my-GreyTagRoute&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;saeGreyTagRoutesId&#34;, nameRegex.applyValue(getGreyTagRoutesResult -&gt; getGreyTagRoutesResult.routes()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetGreyTagRoutesResult> getGreyTagRoutesPlain(GetGreyTagRoutesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:sae/getGreyTagRoutes:getGreyTagRoutes", TypeShape.of(GetGreyTagRoutesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Sae Ingresses of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.137.0+.
     * 
     */
    public static Output<GetIngressesResult> getIngresses(GetIngressesArgs args) {
        return getIngresses(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Sae Ingresses of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.137.0+.
     * 
     */
    public static CompletableFuture<GetIngressesResult> getIngressesPlain(GetIngressesPlainArgs args) {
        return getIngressesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Sae Ingresses of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.137.0+.
     * 
     */
    public static Output<GetIngressesResult> getIngresses(GetIngressesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:sae/getIngresses:getIngresses", TypeShape.of(GetIngressesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Sae Ingresses of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.137.0+.
     * 
     */
    public static CompletableFuture<GetIngressesResult> getIngressesPlain(GetIngressesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:sae/getIngresses:getIngresses", TypeShape.of(GetIngressesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Sae Instance Specifications of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.139.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetInstanceSpecificationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SaeFunctions.getInstanceSpecifications();
     * 
     *         ctx.export(&#34;saeInstanceSpecificationId1&#34;, ids.applyValue(getInstanceSpecificationsResult -&gt; getInstanceSpecificationsResult.specifications()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceSpecificationsResult> getInstanceSpecifications() {
        return getInstanceSpecifications(GetInstanceSpecificationsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Sae Instance Specifications of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.139.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetInstanceSpecificationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SaeFunctions.getInstanceSpecifications();
     * 
     *         ctx.export(&#34;saeInstanceSpecificationId1&#34;, ids.applyValue(getInstanceSpecificationsResult -&gt; getInstanceSpecificationsResult.specifications()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceSpecificationsResult> getInstanceSpecificationsPlain() {
        return getInstanceSpecificationsPlain(GetInstanceSpecificationsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Sae Instance Specifications of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.139.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetInstanceSpecificationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SaeFunctions.getInstanceSpecifications();
     * 
     *         ctx.export(&#34;saeInstanceSpecificationId1&#34;, ids.applyValue(getInstanceSpecificationsResult -&gt; getInstanceSpecificationsResult.specifications()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceSpecificationsResult> getInstanceSpecifications(GetInstanceSpecificationsArgs args) {
        return getInstanceSpecifications(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Sae Instance Specifications of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.139.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetInstanceSpecificationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SaeFunctions.getInstanceSpecifications();
     * 
     *         ctx.export(&#34;saeInstanceSpecificationId1&#34;, ids.applyValue(getInstanceSpecificationsResult -&gt; getInstanceSpecificationsResult.specifications()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceSpecificationsResult> getInstanceSpecificationsPlain(GetInstanceSpecificationsPlainArgs args) {
        return getInstanceSpecificationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Sae Instance Specifications of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.139.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetInstanceSpecificationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SaeFunctions.getInstanceSpecifications();
     * 
     *         ctx.export(&#34;saeInstanceSpecificationId1&#34;, ids.applyValue(getInstanceSpecificationsResult -&gt; getInstanceSpecificationsResult.specifications()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceSpecificationsResult> getInstanceSpecifications(GetInstanceSpecificationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:sae/getInstanceSpecifications:getInstanceSpecifications", TypeShape.of(GetInstanceSpecificationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Sae Instance Specifications of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.139.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetInstanceSpecificationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SaeFunctions.getInstanceSpecifications();
     * 
     *         ctx.export(&#34;saeInstanceSpecificationId1&#34;, ids.applyValue(getInstanceSpecificationsResult -&gt; getInstanceSpecificationsResult.specifications()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceSpecificationsResult> getInstanceSpecificationsPlain(GetInstanceSpecificationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:sae/getInstanceSpecifications:getInstanceSpecifications", TypeShape.of(GetInstanceSpecificationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Sae Namespaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.129.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nameRegex = SaeFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .nameRegex(&#34;^my-Namespace&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;saeNamespaceId&#34;, nameRegex.applyValue(getNamespacesResult -&gt; getNamespacesResult.namespaces()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNamespacesResult> getNamespaces() {
        return getNamespaces(GetNamespacesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Sae Namespaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.129.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nameRegex = SaeFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .nameRegex(&#34;^my-Namespace&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;saeNamespaceId&#34;, nameRegex.applyValue(getNamespacesResult -&gt; getNamespacesResult.namespaces()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNamespacesResult> getNamespacesPlain() {
        return getNamespacesPlain(GetNamespacesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Sae Namespaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.129.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nameRegex = SaeFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .nameRegex(&#34;^my-Namespace&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;saeNamespaceId&#34;, nameRegex.applyValue(getNamespacesResult -&gt; getNamespacesResult.namespaces()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNamespacesResult> getNamespaces(GetNamespacesArgs args) {
        return getNamespaces(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Sae Namespaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.129.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nameRegex = SaeFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .nameRegex(&#34;^my-Namespace&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;saeNamespaceId&#34;, nameRegex.applyValue(getNamespacesResult -&gt; getNamespacesResult.namespaces()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNamespacesResult> getNamespacesPlain(GetNamespacesPlainArgs args) {
        return getNamespacesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Sae Namespaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.129.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nameRegex = SaeFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .nameRegex(&#34;^my-Namespace&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;saeNamespaceId&#34;, nameRegex.applyValue(getNamespacesResult -&gt; getNamespacesResult.namespaces()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNamespacesResult> getNamespaces(GetNamespacesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:sae/getNamespaces:getNamespaces", TypeShape.of(GetNamespacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Sae Namespaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.129.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var nameRegex = SaeFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .nameRegex(&#34;^my-Namespace&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;saeNamespaceId&#34;, nameRegex.applyValue(getNamespacesResult -&gt; getNamespacesResult.namespaces()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNamespacesResult> getNamespacesPlain(GetNamespacesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:sae/getNamespaces:getNamespaces", TypeShape.of(GetNamespacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Using this data source can open SAE service automatically. If the service has been opened, it will return opened.
     * 
     * For information about SAE and how to use it, see [What is SAE](https://help.aliyun.com/document_detail/125720.html).
     * 
     * &gt; **NOTE:** Available in v1.120.0+
     * 
     * &gt; **NOTE:** The SAE service is not support in the international site.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = SaeFunctions.getService(GetServiceArgs.builder()
     *             .enable(&#34;On&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceResult> getService() {
        return getService(GetServiceArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Using this data source can open SAE service automatically. If the service has been opened, it will return opened.
     * 
     * For information about SAE and how to use it, see [What is SAE](https://help.aliyun.com/document_detail/125720.html).
     * 
     * &gt; **NOTE:** Available in v1.120.0+
     * 
     * &gt; **NOTE:** The SAE service is not support in the international site.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = SaeFunctions.getService(GetServiceArgs.builder()
     *             .enable(&#34;On&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain() {
        return getServicePlain(GetServicePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Using this data source can open SAE service automatically. If the service has been opened, it will return opened.
     * 
     * For information about SAE and how to use it, see [What is SAE](https://help.aliyun.com/document_detail/125720.html).
     * 
     * &gt; **NOTE:** Available in v1.120.0+
     * 
     * &gt; **NOTE:** The SAE service is not support in the international site.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = SaeFunctions.getService(GetServiceArgs.builder()
     *             .enable(&#34;On&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args) {
        return getService(args, InvokeOptions.Empty);
    }
    /**
     * Using this data source can open SAE service automatically. If the service has been opened, it will return opened.
     * 
     * For information about SAE and how to use it, see [What is SAE](https://help.aliyun.com/document_detail/125720.html).
     * 
     * &gt; **NOTE:** Available in v1.120.0+
     * 
     * &gt; **NOTE:** The SAE service is not support in the international site.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = SaeFunctions.getService(GetServiceArgs.builder()
     *             .enable(&#34;On&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args) {
        return getServicePlain(args, InvokeOptions.Empty);
    }
    /**
     * Using this data source can open SAE service automatically. If the service has been opened, it will return opened.
     * 
     * For information about SAE and how to use it, see [What is SAE](https://help.aliyun.com/document_detail/125720.html).
     * 
     * &gt; **NOTE:** Available in v1.120.0+
     * 
     * &gt; **NOTE:** The SAE service is not support in the international site.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = SaeFunctions.getService(GetServiceArgs.builder()
     *             .enable(&#34;On&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:sae/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Using this data source can open SAE service automatically. If the service has been opened, it will return opened.
     * 
     * For information about SAE and how to use it, see [What is SAE](https://help.aliyun.com/document_detail/125720.html).
     * 
     * &gt; **NOTE:** Available in v1.120.0+
     * 
     * &gt; **NOTE:** The SAE service is not support in the international site.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.sae.SaeFunctions;
     * import com.pulumi.alicloud.sae.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = SaeFunctions.getService(GetServiceArgs.builder()
     *             .enable(&#34;On&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:sae/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
}
