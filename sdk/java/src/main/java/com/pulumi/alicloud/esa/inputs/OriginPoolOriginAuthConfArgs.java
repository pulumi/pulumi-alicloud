// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OriginPoolOriginAuthConfArgs extends com.pulumi.resources.ResourceArgs {

    public static final OriginPoolOriginAuthConfArgs Empty = new OriginPoolOriginAuthConfArgs();

    /**
     * The AccessKey to be passed when AuthType is set to private_cross_account or private.
     * 
     */
    @Import(name="accessKey")
    private @Nullable Output<String> accessKey;

    /**
     * @return The AccessKey to be passed when AuthType is set to private_cross_account or private.
     * 
     */
    public Optional<Output<String>> accessKey() {
        return Optional.ofNullable(this.accessKey);
    }

    /**
     * Authentication type.
     * 
     */
    @Import(name="authType")
    private @Nullable Output<String> authType;

    /**
     * @return Authentication type.
     * 
     */
    public Optional<Output<String>> authType() {
        return Optional.ofNullable(this.authType);
    }

    /**
     * The Region of the source station to be transmitted when the source station is AWS S3.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The Region of the source station to be transmitted when the source station is AWS S3.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The SecretKey to be passed when AuthType is set to private_cross_account or private.
     * 
     */
    @Import(name="secretKey")
    private @Nullable Output<String> secretKey;

    /**
     * @return The SecretKey to be passed when AuthType is set to private_cross_account or private.
     * 
     */
    public Optional<Output<String>> secretKey() {
        return Optional.ofNullable(this.secretKey);
    }

    /**
     * The signature version to be transmitted when the source station is AWS S3.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return The signature version to be transmitted when the source station is AWS S3.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private OriginPoolOriginAuthConfArgs() {}

    private OriginPoolOriginAuthConfArgs(OriginPoolOriginAuthConfArgs $) {
        this.accessKey = $.accessKey;
        this.authType = $.authType;
        this.region = $.region;
        this.secretKey = $.secretKey;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OriginPoolOriginAuthConfArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OriginPoolOriginAuthConfArgs $;

        public Builder() {
            $ = new OriginPoolOriginAuthConfArgs();
        }

        public Builder(OriginPoolOriginAuthConfArgs defaults) {
            $ = new OriginPoolOriginAuthConfArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKey The AccessKey to be passed when AuthType is set to private_cross_account or private.
         * 
         * @return builder
         * 
         */
        public Builder accessKey(@Nullable Output<String> accessKey) {
            $.accessKey = accessKey;
            return this;
        }

        /**
         * @param accessKey The AccessKey to be passed when AuthType is set to private_cross_account or private.
         * 
         * @return builder
         * 
         */
        public Builder accessKey(String accessKey) {
            return accessKey(Output.of(accessKey));
        }

        /**
         * @param authType Authentication type.
         * 
         * @return builder
         * 
         */
        public Builder authType(@Nullable Output<String> authType) {
            $.authType = authType;
            return this;
        }

        /**
         * @param authType Authentication type.
         * 
         * @return builder
         * 
         */
        public Builder authType(String authType) {
            return authType(Output.of(authType));
        }

        /**
         * @param region The Region of the source station to be transmitted when the source station is AWS S3.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The Region of the source station to be transmitted when the source station is AWS S3.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param secretKey The SecretKey to be passed when AuthType is set to private_cross_account or private.
         * 
         * @return builder
         * 
         */
        public Builder secretKey(@Nullable Output<String> secretKey) {
            $.secretKey = secretKey;
            return this;
        }

        /**
         * @param secretKey The SecretKey to be passed when AuthType is set to private_cross_account or private.
         * 
         * @return builder
         * 
         */
        public Builder secretKey(String secretKey) {
            return secretKey(Output.of(secretKey));
        }

        /**
         * @param version The signature version to be transmitted when the source station is AWS S3.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The signature version to be transmitted when the source station is AWS S3.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public OriginPoolOriginAuthConfArgs build() {
            return $;
        }
    }

}
