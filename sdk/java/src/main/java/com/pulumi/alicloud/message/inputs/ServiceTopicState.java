// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.message.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceTopicState extends com.pulumi.resources.ResourceArgs {

    public static final ServiceTopicState Empty = new ServiceTopicState();

    /**
     * (Available since v1.241.0) The time when the topic was created.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return (Available since v1.241.0) The time when the topic was created.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Specifies whether to enable the logging feature. Default value: `false`. Valid values:
     * 
     */
    @Import(name="enableLogging")
    private @Nullable Output<Boolean> enableLogging;

    /**
     * @return Specifies whether to enable the logging feature. Default value: `false`. Valid values:
     * 
     */
    public Optional<Output<Boolean>> enableLogging() {
        return Optional.ofNullable(this.enableLogging);
    }

    /**
     * . Field `logging_enabled` has been deprecated from provider version 1.241.0. New field `enable_logging` instead.
     * 
     * @deprecated
     * Field `logging_enabled` has been deprecated from provider version 1.241.0. New field `enable_logging` instead.
     * 
     */
    @Deprecated /* Field `logging_enabled` has been deprecated from provider version 1.241.0. New field `enable_logging` instead. */
    @Import(name="loggingEnabled")
    private @Nullable Output<Boolean> loggingEnabled;

    /**
     * @return . Field `logging_enabled` has been deprecated from provider version 1.241.0. New field `enable_logging` instead.
     * 
     * @deprecated
     * Field `logging_enabled` has been deprecated from provider version 1.241.0. New field `enable_logging` instead.
     * 
     */
    @Deprecated /* Field `logging_enabled` has been deprecated from provider version 1.241.0. New field `enable_logging` instead. */
    public Optional<Output<Boolean>> loggingEnabled() {
        return Optional.ofNullable(this.loggingEnabled);
    }

    /**
     * The maximum length of the message that is sent to the topic. Default value: `65536`. Valid values: `1024` to `65536`. Unit: bytes.
     * 
     */
    @Import(name="maxMessageSize")
    private @Nullable Output<Integer> maxMessageSize;

    /**
     * @return The maximum length of the message that is sent to the topic. Default value: `65536`. Valid values: `1024` to `65536`. Unit: bytes.
     * 
     */
    public Optional<Output<Integer>> maxMessageSize() {
        return Optional.ofNullable(this.maxMessageSize);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The name of the topic.
     * 
     * The following arguments will be discarded. Please use new fields as soon as possible:
     * 
     */
    @Import(name="topicName")
    private @Nullable Output<String> topicName;

    /**
     * @return The name of the topic.
     * 
     * The following arguments will be discarded. Please use new fields as soon as possible:
     * 
     */
    public Optional<Output<String>> topicName() {
        return Optional.ofNullable(this.topicName);
    }

    private ServiceTopicState() {}

    private ServiceTopicState(ServiceTopicState $) {
        this.createTime = $.createTime;
        this.enableLogging = $.enableLogging;
        this.loggingEnabled = $.loggingEnabled;
        this.maxMessageSize = $.maxMessageSize;
        this.tags = $.tags;
        this.topicName = $.topicName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceTopicState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceTopicState $;

        public Builder() {
            $ = new ServiceTopicState();
        }

        public Builder(ServiceTopicState defaults) {
            $ = new ServiceTopicState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime (Available since v1.241.0) The time when the topic was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime (Available since v1.241.0) The time when the topic was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param enableLogging Specifies whether to enable the logging feature. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder enableLogging(@Nullable Output<Boolean> enableLogging) {
            $.enableLogging = enableLogging;
            return this;
        }

        /**
         * @param enableLogging Specifies whether to enable the logging feature. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder enableLogging(Boolean enableLogging) {
            return enableLogging(Output.of(enableLogging));
        }

        /**
         * @param loggingEnabled . Field `logging_enabled` has been deprecated from provider version 1.241.0. New field `enable_logging` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `logging_enabled` has been deprecated from provider version 1.241.0. New field `enable_logging` instead.
         * 
         */
        @Deprecated /* Field `logging_enabled` has been deprecated from provider version 1.241.0. New field `enable_logging` instead. */
        public Builder loggingEnabled(@Nullable Output<Boolean> loggingEnabled) {
            $.loggingEnabled = loggingEnabled;
            return this;
        }

        /**
         * @param loggingEnabled . Field `logging_enabled` has been deprecated from provider version 1.241.0. New field `enable_logging` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `logging_enabled` has been deprecated from provider version 1.241.0. New field `enable_logging` instead.
         * 
         */
        @Deprecated /* Field `logging_enabled` has been deprecated from provider version 1.241.0. New field `enable_logging` instead. */
        public Builder loggingEnabled(Boolean loggingEnabled) {
            return loggingEnabled(Output.of(loggingEnabled));
        }

        /**
         * @param maxMessageSize The maximum length of the message that is sent to the topic. Default value: `65536`. Valid values: `1024` to `65536`. Unit: bytes.
         * 
         * @return builder
         * 
         */
        public Builder maxMessageSize(@Nullable Output<Integer> maxMessageSize) {
            $.maxMessageSize = maxMessageSize;
            return this;
        }

        /**
         * @param maxMessageSize The maximum length of the message that is sent to the topic. Default value: `65536`. Valid values: `1024` to `65536`. Unit: bytes.
         * 
         * @return builder
         * 
         */
        public Builder maxMessageSize(Integer maxMessageSize) {
            return maxMessageSize(Output.of(maxMessageSize));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param topicName The name of the topic.
         * 
         * The following arguments will be discarded. Please use new fields as soon as possible:
         * 
         * @return builder
         * 
         */
        public Builder topicName(@Nullable Output<String> topicName) {
            $.topicName = topicName;
            return this;
        }

        /**
         * @param topicName The name of the topic.
         * 
         * The following arguments will be discarded. Please use new fields as soon as possible:
         * 
         * @return builder
         * 
         */
        public Builder topicName(String topicName) {
            return topicName(Output.of(topicName));
        }

        public ServiceTopicState build() {
            return $;
        }
    }

}
