// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudfirewall.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ControlPolicyOrderState extends com.pulumi.resources.ResourceArgs {

    public static final ControlPolicyOrderState Empty = new ControlPolicyOrderState();

    /**
     * The unique ID of the access control policy.
     * 
     */
    @Import(name="aclUuid")
    private @Nullable Output<String> aclUuid;

    /**
     * @return The unique ID of the access control policy.
     * 
     */
    public Optional<Output<String>> aclUuid() {
        return Optional.ofNullable(this.aclUuid);
    }

    /**
     * The direction of the traffic to which the access control policy applies. Valid values: `in`, `out`.
     * 
     */
    @Import(name="direction")
    private @Nullable Output<String> direction;

    /**
     * @return The direction of the traffic to which the access control policy applies. Valid values: `in`, `out`.
     * 
     */
    public Optional<Output<String>> direction() {
        return Optional.ofNullable(this.direction);
    }

    /**
     * The priority of the access control policy. The priority value starts from 1. A small priority value indicates a high priority. **NOTE:** The value of `-1` indicates the lowest priority.
     * &gt; **NOTE:** From version 1.227.1, `order` must be set.
     * 
     */
    @Import(name="order")
    private @Nullable Output<Integer> order;

    /**
     * @return The priority of the access control policy. The priority value starts from 1. A small priority value indicates a high priority. **NOTE:** The value of `-1` indicates the lowest priority.
     * &gt; **NOTE:** From version 1.227.1, `order` must be set.
     * 
     */
    public Optional<Output<Integer>> order() {
        return Optional.ofNullable(this.order);
    }

    private ControlPolicyOrderState() {}

    private ControlPolicyOrderState(ControlPolicyOrderState $) {
        this.aclUuid = $.aclUuid;
        this.direction = $.direction;
        this.order = $.order;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ControlPolicyOrderState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ControlPolicyOrderState $;

        public Builder() {
            $ = new ControlPolicyOrderState();
        }

        public Builder(ControlPolicyOrderState defaults) {
            $ = new ControlPolicyOrderState(Objects.requireNonNull(defaults));
        }

        /**
         * @param aclUuid The unique ID of the access control policy.
         * 
         * @return builder
         * 
         */
        public Builder aclUuid(@Nullable Output<String> aclUuid) {
            $.aclUuid = aclUuid;
            return this;
        }

        /**
         * @param aclUuid The unique ID of the access control policy.
         * 
         * @return builder
         * 
         */
        public Builder aclUuid(String aclUuid) {
            return aclUuid(Output.of(aclUuid));
        }

        /**
         * @param direction The direction of the traffic to which the access control policy applies. Valid values: `in`, `out`.
         * 
         * @return builder
         * 
         */
        public Builder direction(@Nullable Output<String> direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param direction The direction of the traffic to which the access control policy applies. Valid values: `in`, `out`.
         * 
         * @return builder
         * 
         */
        public Builder direction(String direction) {
            return direction(Output.of(direction));
        }

        /**
         * @param order The priority of the access control policy. The priority value starts from 1. A small priority value indicates a high priority. **NOTE:** The value of `-1` indicates the lowest priority.
         * &gt; **NOTE:** From version 1.227.1, `order` must be set.
         * 
         * @return builder
         * 
         */
        public Builder order(@Nullable Output<Integer> order) {
            $.order = order;
            return this;
        }

        /**
         * @param order The priority of the access control policy. The priority value starts from 1. A small priority value indicates a high priority. **NOTE:** The value of `-1` indicates the lowest priority.
         * &gt; **NOTE:** From version 1.227.1, `order` must be set.
         * 
         * @return builder
         * 
         */
        public Builder order(Integer order) {
            return order(Output.of(order));
        }

        public ControlPolicyOrderState build() {
            return $;
        }
    }

}
