// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.polardb.inputs;

import com.pulumi.alicloud.polardb.inputs.ClusterDbClusterIpArrayArgs;
import com.pulumi.alicloud.polardb.inputs.ClusterParameterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterState extends com.pulumi.resources.ResourceArgs {

    public static final ClusterState Empty = new ClusterState();

    /**
     * Auto-renewal period of an cluster, in the unit of the month. It is valid when pay_type is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
     * 
     */
    @Import(name="autoRenewPeriod")
    private @Nullable Output<Integer> autoRenewPeriod;

    /**
     * @return Auto-renewal period of an cluster, in the unit of the month. It is valid when pay_type is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
     * 
     */
    public Optional<Output<Integer>> autoRenewPeriod() {
        return Optional.ofNullable(this.autoRenewPeriod);
    }

    /**
     * The retention policy for the backup sets when you delete the cluster.  Valid values are `ALL`, `LATEST`, `NONE`. Value options can refer to the latest docs [DeleteDBCluster](https://help.aliyun.com/document_detail/98170.html)
     * 
     */
    @Import(name="backupRetentionPolicyOnClusterDeletion")
    private @Nullable Output<String> backupRetentionPolicyOnClusterDeletion;

    /**
     * @return The retention policy for the backup sets when you delete the cluster.  Valid values are `ALL`, `LATEST`, `NONE`. Value options can refer to the latest docs [DeleteDBCluster](https://help.aliyun.com/document_detail/98170.html)
     * 
     */
    public Optional<Output<String>> backupRetentionPolicyOnClusterDeletion() {
        return Optional.ofNullable(this.backupRetentionPolicyOnClusterDeletion);
    }

    /**
     * The time point of data to be cloned. Valid values are `LATEST`,`BackupID`,`Timestamp`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CloneDataPoint`.
     * &gt; **NOTE:** If CreationOption is set to CloneFromRDS, the value of this parameter must be LATEST.
     * 
     */
    @Import(name="cloneDataPoint")
    private @Nullable Output<String> cloneDataPoint;

    /**
     * @return The time point of data to be cloned. Valid values are `LATEST`,`BackupID`,`Timestamp`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CloneDataPoint`.
     * &gt; **NOTE:** If CreationOption is set to CloneFromRDS, the value of this parameter must be LATEST.
     * 
     */
    public Optional<Output<String>> cloneDataPoint() {
        return Optional.ofNullable(this.cloneDataPoint);
    }

    /**
     * Specifies whether to enable or disable SQL data collector. Valid values are `Enable`, `Disabled`.
     * 
     */
    @Import(name="collectorStatus")
    private @Nullable Output<String> collectorStatus;

    /**
     * @return Specifies whether to enable or disable SQL data collector. Valid values are `Enable`, `Disabled`.
     * 
     */
    public Optional<Output<String>> collectorStatus() {
        return Optional.ofNullable(this.collectorStatus);
    }

    /**
     * (Available in 1.81.0+) PolarDB cluster connection string.
     * 
     */
    @Import(name="connectionString")
    private @Nullable Output<String> connectionString;

    /**
     * @return (Available in 1.81.0+) PolarDB cluster connection string.
     * 
     */
    public Optional<Output<String>> connectionString() {
        return Optional.ofNullable(this.connectionString);
    }

    /**
     * The edition of the PolarDB service. Valid values are `Normal`,`Basic`,`ArchiveNormal`,`NormalMultimaster`,`SENormal`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CreationCategory`.
     * &gt; **NOTE:** You can set this parameter to Basic only when DBType is set to MySQL and DBVersion is set to 5.6, 5.7, or 8.0. You can set this parameter to Archive only when DBType is set to MySQL and DBVersion is set to 8.0. From version 1.188.0, `creation_category` can be set to `NormalMultimaster`. From version 1.203.0, `creation_category` can be set to `SENormal`.
     * 
     */
    @Import(name="creationCategory")
    private @Nullable Output<String> creationCategory;

    /**
     * @return The edition of the PolarDB service. Valid values are `Normal`,`Basic`,`ArchiveNormal`,`NormalMultimaster`,`SENormal`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CreationCategory`.
     * &gt; **NOTE:** You can set this parameter to Basic only when DBType is set to MySQL and DBVersion is set to 5.6, 5.7, or 8.0. You can set this parameter to Archive only when DBType is set to MySQL and DBVersion is set to 8.0. From version 1.188.0, `creation_category` can be set to `NormalMultimaster`. From version 1.203.0, `creation_category` can be set to `SENormal`.
     * 
     */
    public Optional<Output<String>> creationCategory() {
        return Optional.ofNullable(this.creationCategory);
    }

    /**
     * The method that is used to create a cluster. Valid values are `Normal`,`CloneFromPolarDB`,`CloneFromRDS`,`MigrationFromRDS`,`CreateGdnStandby`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CreationOption`.
     * &gt; **NOTE:** The default value is Normal. If DBType is set to MySQL and DBVersion is set to 5.6 or 5.7, this parameter can be set to CloneFromRDS or MigrationFromRDS. If DBType is set to MySQL and DBVersion is set to 8.0, this parameter can be set to CreateGdnStandby.
     * 
     */
    @Import(name="creationOption")
    private @Nullable Output<String> creationOption;

    /**
     * @return The method that is used to create a cluster. Valid values are `Normal`,`CloneFromPolarDB`,`CloneFromRDS`,`MigrationFromRDS`,`CreateGdnStandby`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CreationOption`.
     * &gt; **NOTE:** The default value is Normal. If DBType is set to MySQL and DBVersion is set to 5.6 or 5.7, this parameter can be set to CloneFromRDS or MigrationFromRDS. If DBType is set to MySQL and DBVersion is set to 8.0, this parameter can be set to CreateGdnStandby.
     * 
     */
    public Optional<Output<String>> creationOption() {
        return Optional.ofNullable(this.creationOption);
    }

    /**
     * db_cluster_ip_array defines how users can send requests to your API.
     * 
     */
    @Import(name="dbClusterIpArrays")
    private @Nullable Output<List<ClusterDbClusterIpArrayArgs>> dbClusterIpArrays;

    /**
     * @return db_cluster_ip_array defines how users can send requests to your API.
     * 
     */
    public Optional<Output<List<ClusterDbClusterIpArrayArgs>>> dbClusterIpArrays() {
        return Optional.ofNullable(this.dbClusterIpArrays);
    }

    /**
     * The db_node_class of cluster node.
     * &gt; **NOTE:** Node specifications are divided into cluster version, single node version and History Library version. They can&#39;t change each other, but the general specification and exclusive specification of cluster version can be changed.
     * 
     */
    @Import(name="dbNodeClass")
    private @Nullable Output<String> dbNodeClass;

    /**
     * @return The db_node_class of cluster node.
     * &gt; **NOTE:** Node specifications are divided into cluster version, single node version and History Library version. They can&#39;t change each other, but the general specification and exclusive specification of cluster version can be changed.
     * 
     */
    public Optional<Output<String>> dbNodeClass() {
        return Optional.ofNullable(this.dbNodeClass);
    }

    /**
     * Number of the PolarDB cluster nodes, default is 2(Each cluster must contain at least a primary node and a read-only node). Add/remove nodes by modifying this parameter, valid values: [2~16].
     * &gt; **NOTE:** To avoid adding or removing multiple read-only nodes by mistake, the system allows you to add or remove one read-only node at a time.
     * 
     */
    @Import(name="dbNodeCount")
    private @Nullable Output<Integer> dbNodeCount;

    /**
     * @return Number of the PolarDB cluster nodes, default is 2(Each cluster must contain at least a primary node and a read-only node). Add/remove nodes by modifying this parameter, valid values: [2~16].
     * &gt; **NOTE:** To avoid adding or removing multiple read-only nodes by mistake, the system allows you to add or remove one read-only node at a time.
     * 
     */
    public Optional<Output<Integer>> dbNodeCount() {
        return Optional.ofNullable(this.dbNodeCount);
    }

    /**
     * Database type. Value options: MySQL, Oracle, PostgreSQL.
     * 
     */
    @Import(name="dbType")
    private @Nullable Output<String> dbType;

    /**
     * @return Database type. Value options: MySQL, Oracle, PostgreSQL.
     * 
     */
    public Optional<Output<String>> dbType() {
        return Optional.ofNullable(this.dbType);
    }

    /**
     * Database version. Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `DBVersion`.
     * 
     */
    @Import(name="dbVersion")
    private @Nullable Output<String> dbVersion;

    /**
     * @return Database version. Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `DBVersion`.
     * 
     */
    public Optional<Output<String>> dbVersion() {
        return Optional.ofNullable(this.dbVersion);
    }

    /**
     * turn on table deletion_lock. Valid values are 0, 1. 1 means to open the cluster protection lock, 0 means to close the cluster protection lock
     * &gt; **NOTE:**  Cannot modify after created when `pay_type` is `Prepaid` .`deletion_lock` the cluster protection lock can be turned on or off when `pay_type` is `Postpaid`.
     * 
     */
    @Import(name="deletionLock")
    private @Nullable Output<Integer> deletionLock;

    /**
     * @return turn on table deletion_lock. Valid values are 0, 1. 1 means to open the cluster protection lock, 0 means to close the cluster protection lock
     * &gt; **NOTE:**  Cannot modify after created when `pay_type` is `Prepaid` .`deletion_lock` the cluster protection lock can be turned on or off when `pay_type` is `Postpaid`.
     * 
     */
    public Optional<Output<Integer>> deletionLock() {
        return Optional.ofNullable(this.deletionLock);
    }

    /**
     * The description of cluster.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of cluster.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * turn on table auto encryption. Valid values are `ON`, `OFF`. Only MySQL 8.0 supports.
     * &gt; **NOTE:** `encrypt_new_tables` Polardb MySQL 8.0 cluster, after TDE and Automatic Encryption are enabled, all newly created tables are automatically encrypted in the cluster.
     * 
     */
    @Import(name="encryptNewTables")
    private @Nullable Output<String> encryptNewTables;

    /**
     * @return turn on table auto encryption. Valid values are `ON`, `OFF`. Only MySQL 8.0 supports.
     * &gt; **NOTE:** `encrypt_new_tables` Polardb MySQL 8.0 cluster, after TDE and Automatic Encryption are enabled, all newly created tables are automatically encrypted in the cluster.
     * 
     */
    public Optional<Output<String>> encryptNewTables() {
        return Optional.ofNullable(this.encryptNewTables);
    }

    /**
     * The ID of the custom key. `encryption_key` cannot be modified after TDE is opened.
     * 
     */
    @Import(name="encryptionKey")
    private @Nullable Output<String> encryptionKey;

    /**
     * @return The ID of the custom key. `encryption_key` cannot be modified after TDE is opened.
     * 
     */
    public Optional<Output<String>> encryptionKey() {
        return Optional.ofNullable(this.encryptionKey);
    }

    /**
     * The ID of the global database network (GDN).
     * &gt; **NOTE:** This parameter is required if CreationOption is set to CreateGdnStandby.
     * 
     */
    @Import(name="gdnId")
    private @Nullable Output<String> gdnId;

    /**
     * @return The ID of the global database network (GDN).
     * &gt; **NOTE:** This parameter is required if CreationOption is set to CreateGdnStandby.
     * 
     */
    public Optional<Output<String>> gdnId() {
        return Optional.ofNullable(this.gdnId);
    }

    /**
     * Whether to enable the hot standby cluster. Valid values are `ON`, `OFF`. Only MySQL supports.
     * 
     */
    @Import(name="hotStandbyCluster")
    private @Nullable Output<String> hotStandbyCluster;

    /**
     * @return Whether to enable the hot standby cluster. Valid values are `ON`, `OFF`. Only MySQL supports.
     * 
     */
    public Optional<Output<String>> hotStandbyCluster() {
        return Optional.ofNullable(this.hotStandbyCluster);
    }

    /**
     * Specifies whether to enable the In-Memory Column Index (IMCI) feature. Valid values are `ON`, `OFF`.
     * &gt; **NOTE:**  Only polardb MySQL Cluster version is available. The cluster with minor version number of 8.0.1 supports the column index feature, and the specific kernel version must be 8.0.1.1.22 or above.
     * **NOTE:**  The single node, the single node version of the history library, and the cluster version of the history library do not support column save indexes.
     * 
     */
    @Import(name="imciSwitch")
    private @Nullable Output<String> imciSwitch;

    /**
     * @return Specifies whether to enable the In-Memory Column Index (IMCI) feature. Valid values are `ON`, `OFF`.
     * &gt; **NOTE:**  Only polardb MySQL Cluster version is available. The cluster with minor version number of 8.0.1 supports the column index feature, and the specific kernel version must be 8.0.1.1.22 or above.
     * **NOTE:**  The single node, the single node version of the history library, and the cluster version of the history library do not support column save indexes.
     * 
     */
    public Optional<Output<String>> imciSwitch() {
        return Optional.ofNullable(this.imciSwitch);
    }

    /**
     * Maintainable time period format of the instance: HH:MMZ-HH:MMZ (UTC time)
     * 
     */
    @Import(name="maintainTime")
    private @Nullable Output<String> maintainTime;

    /**
     * @return Maintainable time period format of the instance: HH:MMZ-HH:MMZ (UTC time)
     * 
     */
    public Optional<Output<String>> maintainTime() {
        return Optional.ofNullable(this.maintainTime);
    }

    /**
     * Use as `db_node_class` change class, define upgrade or downgrade. Valid values are `Upgrade`, `Downgrade`, Default to `Upgrade`.
     * 
     */
    @Import(name="modifyType")
    private @Nullable Output<String> modifyType;

    /**
     * @return Use as `db_node_class` change class, define upgrade or downgrade. Valid values are `Upgrade`, `Downgrade`, Default to `Upgrade`.
     * 
     */
    public Optional<Output<String>> modifyType() {
        return Optional.ofNullable(this.modifyType);
    }

    /**
     * Set of parameters needs to be set after DB cluster was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/98122.htm) .
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<List<ClusterParameterArgs>> parameters;

    /**
     * @return Set of parameters needs to be set after DB cluster was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/98122.htm) .
     * 
     */
    public Optional<Output<List<ClusterParameterArgs>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
     * 
     */
    @Import(name="payType")
    private @Nullable Output<String> payType;

    /**
     * @return Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
     * 
     */
    public Optional<Output<String>> payType() {
        return Optional.ofNullable(this.payType);
    }

    @Import(name="period")
    private @Nullable Output<Integer> period;

    public Optional<Output<Integer>> period() {
        return Optional.ofNullable(this.period);
    }

    /**
     * (Available in 1.196.0+) PolarDB cluster connection port.
     * 
     */
    @Import(name="port")
    private @Nullable Output<String> port;

    /**
     * @return (Available in 1.196.0+) PolarDB cluster connection port.
     * 
     */
    public Optional<Output<String>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
     * 
     */
    @Import(name="renewalStatus")
    private @Nullable Output<String> renewalStatus;

    /**
     * @return Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
     * 
     */
    public Optional<Output<String>> renewalStatus() {
        return Optional.ofNullable(this.renewalStatus);
    }

    /**
     * The ID of resource group which the PolarDB cluster belongs. If not specified, then it belongs to the default resource group.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of resource group which the PolarDB cluster belongs. If not specified, then it belongs to the default resource group.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The Alibaba Cloud Resource Name (ARN) of the RAM role. A RAM role is a virtual identity that you can create within your Alibaba Cloud account. For more information see [RAM role overview](https://www.alibabacloud.com/help/en/resource-access-management/latest/ram-role-overview).
     * 
     */
    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    /**
     * @return The Alibaba Cloud Resource Name (ARN) of the RAM role. A RAM role is a virtual identity that you can create within your Alibaba Cloud account. For more information see [RAM role overview](https://www.alibabacloud.com/help/en/resource-access-management/latest/ram-role-overview).
     * 
     */
    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    /**
     * The ID of the security group. Separate multiple security groups with commas (,). You can add a maximum of three security groups to a cluster.
     * &gt; **NOTE:** Because of data backup and migration, change DB cluster type and storage would cost 15~20 minutes. Please make full preparation before changing them.
     * 
     */
    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    /**
     * @return The ID of the security group. Separate multiple security groups with commas (,). You can add a maximum of three security groups to a cluster.
     * &gt; **NOTE:** Because of data backup and migration, change DB cluster type and storage would cost 15~20 minutes. Please make full preparation before changing them.
     * 
     */
    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    /**
     * This attribute has been deprecated from v1.130.0 and using `db_cluster_ip_array` sub-element `security_ips` instead.
     * Its value is same as `db_cluster_ip_array` sub-element `security_ips` value and its db_cluster_ip_array_name is &#34;default&#34;.
     * 
     */
    @Import(name="securityIps")
    private @Nullable Output<List<String>> securityIps;

    /**
     * @return This attribute has been deprecated from v1.130.0 and using `db_cluster_ip_array` sub-element `security_ips` instead.
     * Its value is same as `db_cluster_ip_array` sub-element `security_ips` value and its db_cluster_ip_array_name is &#34;default&#34;.
     * 
     */
    public Optional<Output<List<String>>> securityIps() {
        return Optional.ofNullable(this.securityIps);
    }

    /**
     * The ID of the source RDS instance or the ID of the source PolarDB cluster. This parameter is required only when CreationOption is set to MigrationFromRDS, CloneFromRDS, or CloneFromPolarDB.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `SourceResourceId`.
     * 
     */
    @Import(name="sourceResourceId")
    private @Nullable Output<String> sourceResourceId;

    /**
     * @return The ID of the source RDS instance or the ID of the source PolarDB cluster. This parameter is required only when CreationOption is set to MigrationFromRDS, CloneFromRDS, or CloneFromPolarDB.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `SourceResourceId`.
     * 
     */
    public Optional<Output<String>> sourceResourceId() {
        return Optional.ofNullable(this.sourceResourceId);
    }

    /**
     * Storage space charged by space (monthly package). Unit: GB.
     * 
     */
    @Import(name="storageSpace")
    private @Nullable Output<Integer> storageSpace;

    /**
     * @return Storage space charged by space (monthly package). Unit: GB.
     * 
     */
    public Optional<Output<Integer>> storageSpace() {
        return Optional.ofNullable(this.storageSpace);
    }

    /**
     * The storage type of the cluster. Enterprise storage type values are `PSL5`, `PSL4`. The standard version storage type values are `ESSDPL1`, `ESSDPL2`, `ESSDPL3`. The standard version only supports MySQL.
     * &gt; **NOTE:** Serverless cluster does not support this parameter.
     * 
     */
    @Import(name="storageType")
    private @Nullable Output<String> storageType;

    /**
     * @return The storage type of the cluster. Enterprise storage type values are `PSL5`, `PSL4`. The standard version storage type values are `ESSDPL1`, `ESSDPL2`, `ESSDPL3`. The standard version only supports MySQL.
     * &gt; **NOTE:** Serverless cluster does not support this parameter.
     * 
     */
    public Optional<Output<String>> storageType() {
        return Optional.ofNullable(this.storageType);
    }

    /**
     * The category of the cluster. Valid values are `Exclusive`, `General`. Only MySQL supports.
     * 
     */
    @Import(name="subCategory")
    private @Nullable Output<String> subCategory;

    /**
     * @return The category of the cluster. Valid values are `Exclusive`, `General`. Only MySQL supports.
     * 
     */
    public Optional<Output<String>> subCategory() {
        return Optional.ofNullable(this.subCategory);
    }

    /**
     * A mapping of tags to assign to the resource.
     * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
     * 
     */
    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * (Available in 1.200.0+) The region where the TDE key resides.
     * &gt; **NOTE:** TDE can be enabled on clusters that have joined a global database network (GDN). After TDE is enabled on the primary cluster in a GDN, TDE is enabled on the secondary clusters in the GDN by default. The key used by the secondary clusters and the region for the key resides must be the same as the primary cluster. The region of the key cannot be modified.
     * **NOTE:** You cannot enable TDE for the secondary clusters in a GDN. Used to view user KMS activation status.
     * 
     */
    @Import(name="tdeRegion")
    private @Nullable Output<String> tdeRegion;

    /**
     * @return (Available in 1.200.0+) The region where the TDE key resides.
     * &gt; **NOTE:** TDE can be enabled on clusters that have joined a global database network (GDN). After TDE is enabled on the primary cluster in a GDN, TDE is enabled on the secondary clusters in the GDN by default. The key used by the secondary clusters and the region for the key resides must be the same as the primary cluster. The region of the key cannot be modified.
     * **NOTE:** You cannot enable TDE for the secondary clusters in a GDN. Used to view user KMS activation status.
     * 
     */
    public Optional<Output<String>> tdeRegion() {
        return Optional.ofNullable(this.tdeRegion);
    }

    /**
     * turn on TDE encryption. Valid values are `Enabled`, `Disabled`. Default to `Disabled`. TDE cannot be closed after it is turned on.
     * &gt; **NOTE:** `tde_status` Cannot modify after created when `db_type` is `PostgreSQL` or `Oracle`.`tde_status` only support modification from `Disabled` to `Enabled` when `db_type` is `MySQL`.
     * 
     */
    @Import(name="tdeStatus")
    private @Nullable Output<String> tdeStatus;

    /**
     * @return turn on TDE encryption. Valid values are `Enabled`, `Disabled`. Default to `Disabled`. TDE cannot be closed after it is turned on.
     * &gt; **NOTE:** `tde_status` Cannot modify after created when `db_type` is `PostgreSQL` or `Oracle`.`tde_status` only support modification from `Disabled` to `Enabled` when `db_type` is `MySQL`.
     * 
     */
    public Optional<Output<String>> tdeStatus() {
        return Optional.ofNullable(this.tdeStatus);
    }

    /**
     * The id of the VPC.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The id of the VPC.
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    /**
     * The virtual switch ID to launch DB instances in one VPC.
     * &gt; **NOTE:** If vswitch_id is not specified, system will get a vswitch belongs to the user automatically.
     * 
     */
    @Import(name="vswitchId")
    private @Nullable Output<String> vswitchId;

    /**
     * @return The virtual switch ID to launch DB instances in one VPC.
     * &gt; **NOTE:** If vswitch_id is not specified, system will get a vswitch belongs to the user automatically.
     * 
     */
    public Optional<Output<String>> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    /**
     * The Zone to launch the DB cluster. it supports multiple zone.
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return The Zone to launch the DB cluster. it supports multiple zone.
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private ClusterState() {}

    private ClusterState(ClusterState $) {
        this.autoRenewPeriod = $.autoRenewPeriod;
        this.backupRetentionPolicyOnClusterDeletion = $.backupRetentionPolicyOnClusterDeletion;
        this.cloneDataPoint = $.cloneDataPoint;
        this.collectorStatus = $.collectorStatus;
        this.connectionString = $.connectionString;
        this.creationCategory = $.creationCategory;
        this.creationOption = $.creationOption;
        this.dbClusterIpArrays = $.dbClusterIpArrays;
        this.dbNodeClass = $.dbNodeClass;
        this.dbNodeCount = $.dbNodeCount;
        this.dbType = $.dbType;
        this.dbVersion = $.dbVersion;
        this.deletionLock = $.deletionLock;
        this.description = $.description;
        this.encryptNewTables = $.encryptNewTables;
        this.encryptionKey = $.encryptionKey;
        this.gdnId = $.gdnId;
        this.hotStandbyCluster = $.hotStandbyCluster;
        this.imciSwitch = $.imciSwitch;
        this.maintainTime = $.maintainTime;
        this.modifyType = $.modifyType;
        this.parameters = $.parameters;
        this.payType = $.payType;
        this.period = $.period;
        this.port = $.port;
        this.renewalStatus = $.renewalStatus;
        this.resourceGroupId = $.resourceGroupId;
        this.roleArn = $.roleArn;
        this.securityGroupIds = $.securityGroupIds;
        this.securityIps = $.securityIps;
        this.sourceResourceId = $.sourceResourceId;
        this.storageSpace = $.storageSpace;
        this.storageType = $.storageType;
        this.subCategory = $.subCategory;
        this.tags = $.tags;
        this.tdeRegion = $.tdeRegion;
        this.tdeStatus = $.tdeStatus;
        this.vpcId = $.vpcId;
        this.vswitchId = $.vswitchId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterState $;

        public Builder() {
            $ = new ClusterState();
        }

        public Builder(ClusterState defaults) {
            $ = new ClusterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoRenewPeriod Auto-renewal period of an cluster, in the unit of the month. It is valid when pay_type is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
         * 
         * @return builder
         * 
         */
        public Builder autoRenewPeriod(@Nullable Output<Integer> autoRenewPeriod) {
            $.autoRenewPeriod = autoRenewPeriod;
            return this;
        }

        /**
         * @param autoRenewPeriod Auto-renewal period of an cluster, in the unit of the month. It is valid when pay_type is `PrePaid`. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
         * 
         * @return builder
         * 
         */
        public Builder autoRenewPeriod(Integer autoRenewPeriod) {
            return autoRenewPeriod(Output.of(autoRenewPeriod));
        }

        /**
         * @param backupRetentionPolicyOnClusterDeletion The retention policy for the backup sets when you delete the cluster.  Valid values are `ALL`, `LATEST`, `NONE`. Value options can refer to the latest docs [DeleteDBCluster](https://help.aliyun.com/document_detail/98170.html)
         * 
         * @return builder
         * 
         */
        public Builder backupRetentionPolicyOnClusterDeletion(@Nullable Output<String> backupRetentionPolicyOnClusterDeletion) {
            $.backupRetentionPolicyOnClusterDeletion = backupRetentionPolicyOnClusterDeletion;
            return this;
        }

        /**
         * @param backupRetentionPolicyOnClusterDeletion The retention policy for the backup sets when you delete the cluster.  Valid values are `ALL`, `LATEST`, `NONE`. Value options can refer to the latest docs [DeleteDBCluster](https://help.aliyun.com/document_detail/98170.html)
         * 
         * @return builder
         * 
         */
        public Builder backupRetentionPolicyOnClusterDeletion(String backupRetentionPolicyOnClusterDeletion) {
            return backupRetentionPolicyOnClusterDeletion(Output.of(backupRetentionPolicyOnClusterDeletion));
        }

        /**
         * @param cloneDataPoint The time point of data to be cloned. Valid values are `LATEST`,`BackupID`,`Timestamp`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CloneDataPoint`.
         * &gt; **NOTE:** If CreationOption is set to CloneFromRDS, the value of this parameter must be LATEST.
         * 
         * @return builder
         * 
         */
        public Builder cloneDataPoint(@Nullable Output<String> cloneDataPoint) {
            $.cloneDataPoint = cloneDataPoint;
            return this;
        }

        /**
         * @param cloneDataPoint The time point of data to be cloned. Valid values are `LATEST`,`BackupID`,`Timestamp`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CloneDataPoint`.
         * &gt; **NOTE:** If CreationOption is set to CloneFromRDS, the value of this parameter must be LATEST.
         * 
         * @return builder
         * 
         */
        public Builder cloneDataPoint(String cloneDataPoint) {
            return cloneDataPoint(Output.of(cloneDataPoint));
        }

        /**
         * @param collectorStatus Specifies whether to enable or disable SQL data collector. Valid values are `Enable`, `Disabled`.
         * 
         * @return builder
         * 
         */
        public Builder collectorStatus(@Nullable Output<String> collectorStatus) {
            $.collectorStatus = collectorStatus;
            return this;
        }

        /**
         * @param collectorStatus Specifies whether to enable or disable SQL data collector. Valid values are `Enable`, `Disabled`.
         * 
         * @return builder
         * 
         */
        public Builder collectorStatus(String collectorStatus) {
            return collectorStatus(Output.of(collectorStatus));
        }

        /**
         * @param connectionString (Available in 1.81.0+) PolarDB cluster connection string.
         * 
         * @return builder
         * 
         */
        public Builder connectionString(@Nullable Output<String> connectionString) {
            $.connectionString = connectionString;
            return this;
        }

        /**
         * @param connectionString (Available in 1.81.0+) PolarDB cluster connection string.
         * 
         * @return builder
         * 
         */
        public Builder connectionString(String connectionString) {
            return connectionString(Output.of(connectionString));
        }

        /**
         * @param creationCategory The edition of the PolarDB service. Valid values are `Normal`,`Basic`,`ArchiveNormal`,`NormalMultimaster`,`SENormal`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CreationCategory`.
         * &gt; **NOTE:** You can set this parameter to Basic only when DBType is set to MySQL and DBVersion is set to 5.6, 5.7, or 8.0. You can set this parameter to Archive only when DBType is set to MySQL and DBVersion is set to 8.0. From version 1.188.0, `creation_category` can be set to `NormalMultimaster`. From version 1.203.0, `creation_category` can be set to `SENormal`.
         * 
         * @return builder
         * 
         */
        public Builder creationCategory(@Nullable Output<String> creationCategory) {
            $.creationCategory = creationCategory;
            return this;
        }

        /**
         * @param creationCategory The edition of the PolarDB service. Valid values are `Normal`,`Basic`,`ArchiveNormal`,`NormalMultimaster`,`SENormal`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CreationCategory`.
         * &gt; **NOTE:** You can set this parameter to Basic only when DBType is set to MySQL and DBVersion is set to 5.6, 5.7, or 8.0. You can set this parameter to Archive only when DBType is set to MySQL and DBVersion is set to 8.0. From version 1.188.0, `creation_category` can be set to `NormalMultimaster`. From version 1.203.0, `creation_category` can be set to `SENormal`.
         * 
         * @return builder
         * 
         */
        public Builder creationCategory(String creationCategory) {
            return creationCategory(Output.of(creationCategory));
        }

        /**
         * @param creationOption The method that is used to create a cluster. Valid values are `Normal`,`CloneFromPolarDB`,`CloneFromRDS`,`MigrationFromRDS`,`CreateGdnStandby`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CreationOption`.
         * &gt; **NOTE:** The default value is Normal. If DBType is set to MySQL and DBVersion is set to 5.6 or 5.7, this parameter can be set to CloneFromRDS or MigrationFromRDS. If DBType is set to MySQL and DBVersion is set to 8.0, this parameter can be set to CreateGdnStandby.
         * 
         * @return builder
         * 
         */
        public Builder creationOption(@Nullable Output<String> creationOption) {
            $.creationOption = creationOption;
            return this;
        }

        /**
         * @param creationOption The method that is used to create a cluster. Valid values are `Normal`,`CloneFromPolarDB`,`CloneFromRDS`,`MigrationFromRDS`,`CreateGdnStandby`.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `CreationOption`.
         * &gt; **NOTE:** The default value is Normal. If DBType is set to MySQL and DBVersion is set to 5.6 or 5.7, this parameter can be set to CloneFromRDS or MigrationFromRDS. If DBType is set to MySQL and DBVersion is set to 8.0, this parameter can be set to CreateGdnStandby.
         * 
         * @return builder
         * 
         */
        public Builder creationOption(String creationOption) {
            return creationOption(Output.of(creationOption));
        }

        /**
         * @param dbClusterIpArrays db_cluster_ip_array defines how users can send requests to your API.
         * 
         * @return builder
         * 
         */
        public Builder dbClusterIpArrays(@Nullable Output<List<ClusterDbClusterIpArrayArgs>> dbClusterIpArrays) {
            $.dbClusterIpArrays = dbClusterIpArrays;
            return this;
        }

        /**
         * @param dbClusterIpArrays db_cluster_ip_array defines how users can send requests to your API.
         * 
         * @return builder
         * 
         */
        public Builder dbClusterIpArrays(List<ClusterDbClusterIpArrayArgs> dbClusterIpArrays) {
            return dbClusterIpArrays(Output.of(dbClusterIpArrays));
        }

        /**
         * @param dbClusterIpArrays db_cluster_ip_array defines how users can send requests to your API.
         * 
         * @return builder
         * 
         */
        public Builder dbClusterIpArrays(ClusterDbClusterIpArrayArgs... dbClusterIpArrays) {
            return dbClusterIpArrays(List.of(dbClusterIpArrays));
        }

        /**
         * @param dbNodeClass The db_node_class of cluster node.
         * &gt; **NOTE:** Node specifications are divided into cluster version, single node version and History Library version. They can&#39;t change each other, but the general specification and exclusive specification of cluster version can be changed.
         * 
         * @return builder
         * 
         */
        public Builder dbNodeClass(@Nullable Output<String> dbNodeClass) {
            $.dbNodeClass = dbNodeClass;
            return this;
        }

        /**
         * @param dbNodeClass The db_node_class of cluster node.
         * &gt; **NOTE:** Node specifications are divided into cluster version, single node version and History Library version. They can&#39;t change each other, but the general specification and exclusive specification of cluster version can be changed.
         * 
         * @return builder
         * 
         */
        public Builder dbNodeClass(String dbNodeClass) {
            return dbNodeClass(Output.of(dbNodeClass));
        }

        /**
         * @param dbNodeCount Number of the PolarDB cluster nodes, default is 2(Each cluster must contain at least a primary node and a read-only node). Add/remove nodes by modifying this parameter, valid values: [2~16].
         * &gt; **NOTE:** To avoid adding or removing multiple read-only nodes by mistake, the system allows you to add or remove one read-only node at a time.
         * 
         * @return builder
         * 
         */
        public Builder dbNodeCount(@Nullable Output<Integer> dbNodeCount) {
            $.dbNodeCount = dbNodeCount;
            return this;
        }

        /**
         * @param dbNodeCount Number of the PolarDB cluster nodes, default is 2(Each cluster must contain at least a primary node and a read-only node). Add/remove nodes by modifying this parameter, valid values: [2~16].
         * &gt; **NOTE:** To avoid adding or removing multiple read-only nodes by mistake, the system allows you to add or remove one read-only node at a time.
         * 
         * @return builder
         * 
         */
        public Builder dbNodeCount(Integer dbNodeCount) {
            return dbNodeCount(Output.of(dbNodeCount));
        }

        /**
         * @param dbType Database type. Value options: MySQL, Oracle, PostgreSQL.
         * 
         * @return builder
         * 
         */
        public Builder dbType(@Nullable Output<String> dbType) {
            $.dbType = dbType;
            return this;
        }

        /**
         * @param dbType Database type. Value options: MySQL, Oracle, PostgreSQL.
         * 
         * @return builder
         * 
         */
        public Builder dbType(String dbType) {
            return dbType(Output.of(dbType));
        }

        /**
         * @param dbVersion Database version. Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `DBVersion`.
         * 
         * @return builder
         * 
         */
        public Builder dbVersion(@Nullable Output<String> dbVersion) {
            $.dbVersion = dbVersion;
            return this;
        }

        /**
         * @param dbVersion Database version. Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `DBVersion`.
         * 
         * @return builder
         * 
         */
        public Builder dbVersion(String dbVersion) {
            return dbVersion(Output.of(dbVersion));
        }

        /**
         * @param deletionLock turn on table deletion_lock. Valid values are 0, 1. 1 means to open the cluster protection lock, 0 means to close the cluster protection lock
         * &gt; **NOTE:**  Cannot modify after created when `pay_type` is `Prepaid` .`deletion_lock` the cluster protection lock can be turned on or off when `pay_type` is `Postpaid`.
         * 
         * @return builder
         * 
         */
        public Builder deletionLock(@Nullable Output<Integer> deletionLock) {
            $.deletionLock = deletionLock;
            return this;
        }

        /**
         * @param deletionLock turn on table deletion_lock. Valid values are 0, 1. 1 means to open the cluster protection lock, 0 means to close the cluster protection lock
         * &gt; **NOTE:**  Cannot modify after created when `pay_type` is `Prepaid` .`deletion_lock` the cluster protection lock can be turned on or off when `pay_type` is `Postpaid`.
         * 
         * @return builder
         * 
         */
        public Builder deletionLock(Integer deletionLock) {
            return deletionLock(Output.of(deletionLock));
        }

        /**
         * @param description The description of cluster.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of cluster.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param encryptNewTables turn on table auto encryption. Valid values are `ON`, `OFF`. Only MySQL 8.0 supports.
         * &gt; **NOTE:** `encrypt_new_tables` Polardb MySQL 8.0 cluster, after TDE and Automatic Encryption are enabled, all newly created tables are automatically encrypted in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder encryptNewTables(@Nullable Output<String> encryptNewTables) {
            $.encryptNewTables = encryptNewTables;
            return this;
        }

        /**
         * @param encryptNewTables turn on table auto encryption. Valid values are `ON`, `OFF`. Only MySQL 8.0 supports.
         * &gt; **NOTE:** `encrypt_new_tables` Polardb MySQL 8.0 cluster, after TDE and Automatic Encryption are enabled, all newly created tables are automatically encrypted in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder encryptNewTables(String encryptNewTables) {
            return encryptNewTables(Output.of(encryptNewTables));
        }

        /**
         * @param encryptionKey The ID of the custom key. `encryption_key` cannot be modified after TDE is opened.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKey(@Nullable Output<String> encryptionKey) {
            $.encryptionKey = encryptionKey;
            return this;
        }

        /**
         * @param encryptionKey The ID of the custom key. `encryption_key` cannot be modified after TDE is opened.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKey(String encryptionKey) {
            return encryptionKey(Output.of(encryptionKey));
        }

        /**
         * @param gdnId The ID of the global database network (GDN).
         * &gt; **NOTE:** This parameter is required if CreationOption is set to CreateGdnStandby.
         * 
         * @return builder
         * 
         */
        public Builder gdnId(@Nullable Output<String> gdnId) {
            $.gdnId = gdnId;
            return this;
        }

        /**
         * @param gdnId The ID of the global database network (GDN).
         * &gt; **NOTE:** This parameter is required if CreationOption is set to CreateGdnStandby.
         * 
         * @return builder
         * 
         */
        public Builder gdnId(String gdnId) {
            return gdnId(Output.of(gdnId));
        }

        /**
         * @param hotStandbyCluster Whether to enable the hot standby cluster. Valid values are `ON`, `OFF`. Only MySQL supports.
         * 
         * @return builder
         * 
         */
        public Builder hotStandbyCluster(@Nullable Output<String> hotStandbyCluster) {
            $.hotStandbyCluster = hotStandbyCluster;
            return this;
        }

        /**
         * @param hotStandbyCluster Whether to enable the hot standby cluster. Valid values are `ON`, `OFF`. Only MySQL supports.
         * 
         * @return builder
         * 
         */
        public Builder hotStandbyCluster(String hotStandbyCluster) {
            return hotStandbyCluster(Output.of(hotStandbyCluster));
        }

        /**
         * @param imciSwitch Specifies whether to enable the In-Memory Column Index (IMCI) feature. Valid values are `ON`, `OFF`.
         * &gt; **NOTE:**  Only polardb MySQL Cluster version is available. The cluster with minor version number of 8.0.1 supports the column index feature, and the specific kernel version must be 8.0.1.1.22 or above.
         * **NOTE:**  The single node, the single node version of the history library, and the cluster version of the history library do not support column save indexes.
         * 
         * @return builder
         * 
         */
        public Builder imciSwitch(@Nullable Output<String> imciSwitch) {
            $.imciSwitch = imciSwitch;
            return this;
        }

        /**
         * @param imciSwitch Specifies whether to enable the In-Memory Column Index (IMCI) feature. Valid values are `ON`, `OFF`.
         * &gt; **NOTE:**  Only polardb MySQL Cluster version is available. The cluster with minor version number of 8.0.1 supports the column index feature, and the specific kernel version must be 8.0.1.1.22 or above.
         * **NOTE:**  The single node, the single node version of the history library, and the cluster version of the history library do not support column save indexes.
         * 
         * @return builder
         * 
         */
        public Builder imciSwitch(String imciSwitch) {
            return imciSwitch(Output.of(imciSwitch));
        }

        /**
         * @param maintainTime Maintainable time period format of the instance: HH:MMZ-HH:MMZ (UTC time)
         * 
         * @return builder
         * 
         */
        public Builder maintainTime(@Nullable Output<String> maintainTime) {
            $.maintainTime = maintainTime;
            return this;
        }

        /**
         * @param maintainTime Maintainable time period format of the instance: HH:MMZ-HH:MMZ (UTC time)
         * 
         * @return builder
         * 
         */
        public Builder maintainTime(String maintainTime) {
            return maintainTime(Output.of(maintainTime));
        }

        /**
         * @param modifyType Use as `db_node_class` change class, define upgrade or downgrade. Valid values are `Upgrade`, `Downgrade`, Default to `Upgrade`.
         * 
         * @return builder
         * 
         */
        public Builder modifyType(@Nullable Output<String> modifyType) {
            $.modifyType = modifyType;
            return this;
        }

        /**
         * @param modifyType Use as `db_node_class` change class, define upgrade or downgrade. Valid values are `Upgrade`, `Downgrade`, Default to `Upgrade`.
         * 
         * @return builder
         * 
         */
        public Builder modifyType(String modifyType) {
            return modifyType(Output.of(modifyType));
        }

        /**
         * @param parameters Set of parameters needs to be set after DB cluster was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/98122.htm) .
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<List<ClusterParameterArgs>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Set of parameters needs to be set after DB cluster was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/98122.htm) .
         * 
         * @return builder
         * 
         */
        public Builder parameters(List<ClusterParameterArgs> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param parameters Set of parameters needs to be set after DB cluster was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/98122.htm) .
         * 
         * @return builder
         * 
         */
        public Builder parameters(ClusterParameterArgs... parameters) {
            return parameters(List.of(parameters));
        }

        /**
         * @param payType Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
         * 
         * @return builder
         * 
         */
        public Builder payType(@Nullable Output<String> payType) {
            $.payType = payType;
            return this;
        }

        /**
         * @param payType Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
         * 
         * @return builder
         * 
         */
        public Builder payType(String payType) {
            return payType(Output.of(payType));
        }

        public Builder period(@Nullable Output<Integer> period) {
            $.period = period;
            return this;
        }

        public Builder period(Integer period) {
            return period(Output.of(period));
        }

        /**
         * @param port (Available in 1.196.0+) PolarDB cluster connection port.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<String> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port (Available in 1.196.0+) PolarDB cluster connection port.
         * 
         * @return builder
         * 
         */
        public Builder port(String port) {
            return port(Output.of(port));
        }

        /**
         * @param renewalStatus Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
         * 
         * @return builder
         * 
         */
        public Builder renewalStatus(@Nullable Output<String> renewalStatus) {
            $.renewalStatus = renewalStatus;
            return this;
        }

        /**
         * @param renewalStatus Valid values are `AutoRenewal`, `Normal`, `NotRenewal`, Default to `NotRenewal`.
         * 
         * @return builder
         * 
         */
        public Builder renewalStatus(String renewalStatus) {
            return renewalStatus(Output.of(renewalStatus));
        }

        /**
         * @param resourceGroupId The ID of resource group which the PolarDB cluster belongs. If not specified, then it belongs to the default resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of resource group which the PolarDB cluster belongs. If not specified, then it belongs to the default resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param roleArn The Alibaba Cloud Resource Name (ARN) of the RAM role. A RAM role is a virtual identity that you can create within your Alibaba Cloud account. For more information see [RAM role overview](https://www.alibabacloud.com/help/en/resource-access-management/latest/ram-role-overview).
         * 
         * @return builder
         * 
         */
        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The Alibaba Cloud Resource Name (ARN) of the RAM role. A RAM role is a virtual identity that you can create within your Alibaba Cloud account. For more information see [RAM role overview](https://www.alibabacloud.com/help/en/resource-access-management/latest/ram-role-overview).
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param securityGroupIds The ID of the security group. Separate multiple security groups with commas (,). You can add a maximum of three security groups to a cluster.
         * &gt; **NOTE:** Because of data backup and migration, change DB cluster type and storage would cost 15~20 minutes. Please make full preparation before changing them.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        /**
         * @param securityGroupIds The ID of the security group. Separate multiple security groups with commas (,). You can add a maximum of three security groups to a cluster.
         * &gt; **NOTE:** Because of data backup and migration, change DB cluster type and storage would cost 15~20 minutes. Please make full preparation before changing them.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        /**
         * @param securityGroupIds The ID of the security group. Separate multiple security groups with commas (,). You can add a maximum of three security groups to a cluster.
         * &gt; **NOTE:** Because of data backup and migration, change DB cluster type and storage would cost 15~20 minutes. Please make full preparation before changing them.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        /**
         * @param securityIps This attribute has been deprecated from v1.130.0 and using `db_cluster_ip_array` sub-element `security_ips` instead.
         * Its value is same as `db_cluster_ip_array` sub-element `security_ips` value and its db_cluster_ip_array_name is &#34;default&#34;.
         * 
         * @return builder
         * 
         */
        public Builder securityIps(@Nullable Output<List<String>> securityIps) {
            $.securityIps = securityIps;
            return this;
        }

        /**
         * @param securityIps This attribute has been deprecated from v1.130.0 and using `db_cluster_ip_array` sub-element `security_ips` instead.
         * Its value is same as `db_cluster_ip_array` sub-element `security_ips` value and its db_cluster_ip_array_name is &#34;default&#34;.
         * 
         * @return builder
         * 
         */
        public Builder securityIps(List<String> securityIps) {
            return securityIps(Output.of(securityIps));
        }

        /**
         * @param securityIps This attribute has been deprecated from v1.130.0 and using `db_cluster_ip_array` sub-element `security_ips` instead.
         * Its value is same as `db_cluster_ip_array` sub-element `security_ips` value and its db_cluster_ip_array_name is &#34;default&#34;.
         * 
         * @return builder
         * 
         */
        public Builder securityIps(String... securityIps) {
            return securityIps(List.of(securityIps));
        }

        /**
         * @param sourceResourceId The ID of the source RDS instance or the ID of the source PolarDB cluster. This parameter is required only when CreationOption is set to MigrationFromRDS, CloneFromRDS, or CloneFromPolarDB.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `SourceResourceId`.
         * 
         * @return builder
         * 
         */
        public Builder sourceResourceId(@Nullable Output<String> sourceResourceId) {
            $.sourceResourceId = sourceResourceId;
            return this;
        }

        /**
         * @param sourceResourceId The ID of the source RDS instance or the ID of the source PolarDB cluster. This parameter is required only when CreationOption is set to MigrationFromRDS, CloneFromRDS, or CloneFromPolarDB.Value options can refer to the latest docs [CreateDBCluster](https://help.aliyun.com/document_detail/98169.html) `SourceResourceId`.
         * 
         * @return builder
         * 
         */
        public Builder sourceResourceId(String sourceResourceId) {
            return sourceResourceId(Output.of(sourceResourceId));
        }

        /**
         * @param storageSpace Storage space charged by space (monthly package). Unit: GB.
         * 
         * @return builder
         * 
         */
        public Builder storageSpace(@Nullable Output<Integer> storageSpace) {
            $.storageSpace = storageSpace;
            return this;
        }

        /**
         * @param storageSpace Storage space charged by space (monthly package). Unit: GB.
         * 
         * @return builder
         * 
         */
        public Builder storageSpace(Integer storageSpace) {
            return storageSpace(Output.of(storageSpace));
        }

        /**
         * @param storageType The storage type of the cluster. Enterprise storage type values are `PSL5`, `PSL4`. The standard version storage type values are `ESSDPL1`, `ESSDPL2`, `ESSDPL3`. The standard version only supports MySQL.
         * &gt; **NOTE:** Serverless cluster does not support this parameter.
         * 
         * @return builder
         * 
         */
        public Builder storageType(@Nullable Output<String> storageType) {
            $.storageType = storageType;
            return this;
        }

        /**
         * @param storageType The storage type of the cluster. Enterprise storage type values are `PSL5`, `PSL4`. The standard version storage type values are `ESSDPL1`, `ESSDPL2`, `ESSDPL3`. The standard version only supports MySQL.
         * &gt; **NOTE:** Serverless cluster does not support this parameter.
         * 
         * @return builder
         * 
         */
        public Builder storageType(String storageType) {
            return storageType(Output.of(storageType));
        }

        /**
         * @param subCategory The category of the cluster. Valid values are `Exclusive`, `General`. Only MySQL supports.
         * 
         * @return builder
         * 
         */
        public Builder subCategory(@Nullable Output<String> subCategory) {
            $.subCategory = subCategory;
            return this;
        }

        /**
         * @param subCategory The category of the cluster. Valid values are `Exclusive`, `General`. Only MySQL supports.
         * 
         * @return builder
         * 
         */
        public Builder subCategory(String subCategory) {
            return subCategory(Output.of(subCategory));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
         * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
         * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tdeRegion (Available in 1.200.0+) The region where the TDE key resides.
         * &gt; **NOTE:** TDE can be enabled on clusters that have joined a global database network (GDN). After TDE is enabled on the primary cluster in a GDN, TDE is enabled on the secondary clusters in the GDN by default. The key used by the secondary clusters and the region for the key resides must be the same as the primary cluster. The region of the key cannot be modified.
         * **NOTE:** You cannot enable TDE for the secondary clusters in a GDN. Used to view user KMS activation status.
         * 
         * @return builder
         * 
         */
        public Builder tdeRegion(@Nullable Output<String> tdeRegion) {
            $.tdeRegion = tdeRegion;
            return this;
        }

        /**
         * @param tdeRegion (Available in 1.200.0+) The region where the TDE key resides.
         * &gt; **NOTE:** TDE can be enabled on clusters that have joined a global database network (GDN). After TDE is enabled on the primary cluster in a GDN, TDE is enabled on the secondary clusters in the GDN by default. The key used by the secondary clusters and the region for the key resides must be the same as the primary cluster. The region of the key cannot be modified.
         * **NOTE:** You cannot enable TDE for the secondary clusters in a GDN. Used to view user KMS activation status.
         * 
         * @return builder
         * 
         */
        public Builder tdeRegion(String tdeRegion) {
            return tdeRegion(Output.of(tdeRegion));
        }

        /**
         * @param tdeStatus turn on TDE encryption. Valid values are `Enabled`, `Disabled`. Default to `Disabled`. TDE cannot be closed after it is turned on.
         * &gt; **NOTE:** `tde_status` Cannot modify after created when `db_type` is `PostgreSQL` or `Oracle`.`tde_status` only support modification from `Disabled` to `Enabled` when `db_type` is `MySQL`.
         * 
         * @return builder
         * 
         */
        public Builder tdeStatus(@Nullable Output<String> tdeStatus) {
            $.tdeStatus = tdeStatus;
            return this;
        }

        /**
         * @param tdeStatus turn on TDE encryption. Valid values are `Enabled`, `Disabled`. Default to `Disabled`. TDE cannot be closed after it is turned on.
         * &gt; **NOTE:** `tde_status` Cannot modify after created when `db_type` is `PostgreSQL` or `Oracle`.`tde_status` only support modification from `Disabled` to `Enabled` when `db_type` is `MySQL`.
         * 
         * @return builder
         * 
         */
        public Builder tdeStatus(String tdeStatus) {
            return tdeStatus(Output.of(tdeStatus));
        }

        /**
         * @param vpcId The id of the VPC.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The id of the VPC.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param vswitchId The virtual switch ID to launch DB instances in one VPC.
         * &gt; **NOTE:** If vswitch_id is not specified, system will get a vswitch belongs to the user automatically.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(@Nullable Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId The virtual switch ID to launch DB instances in one VPC.
         * &gt; **NOTE:** If vswitch_id is not specified, system will get a vswitch belongs to the user automatically.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        /**
         * @param zoneId The Zone to launch the DB cluster. it supports multiple zone.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The Zone to launch the DB cluster. it supports multiple zone.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public ClusterState build() {
            return $;
        }
    }

}
