// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.arms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntegrationExporterState extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationExporterState Empty = new IntegrationExporterState();

    /**
     * The ID of the Prometheus instance.
     * 
     */
    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    /**
     * @return The ID of the Prometheus instance.
     * 
     */
    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * The ID of the Integration Exporter instance.
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<Integer> instanceId;

    /**
     * @return The ID of the Integration Exporter instance.
     * 
     */
    public Optional<Output<Integer>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * The type of prometheus integration.
     * 
     */
    @Import(name="integrationType")
    private @Nullable Output<String> integrationType;

    /**
     * @return The type of prometheus integration.
     * 
     */
    public Optional<Output<String>> integrationType() {
        return Optional.ofNullable(this.integrationType);
    }

    /**
     * Exporter configuration parameter json string.
     * 
     */
    @Import(name="param")
    private @Nullable Output<String> param;

    /**
     * @return Exporter configuration parameter json string.
     * 
     */
    public Optional<Output<String>> param() {
        return Optional.ofNullable(this.param);
    }

    private IntegrationExporterState() {}

    private IntegrationExporterState(IntegrationExporterState $) {
        this.clusterId = $.clusterId;
        this.instanceId = $.instanceId;
        this.integrationType = $.integrationType;
        this.param = $.param;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationExporterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationExporterState $;

        public Builder() {
            $ = new IntegrationExporterState();
        }

        public Builder(IntegrationExporterState defaults) {
            $ = new IntegrationExporterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId The ID of the Prometheus instance.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The ID of the Prometheus instance.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param instanceId The ID of the Integration Exporter instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<Integer> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The ID of the Integration Exporter instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Integer instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param integrationType The type of prometheus integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationType(@Nullable Output<String> integrationType) {
            $.integrationType = integrationType;
            return this;
        }

        /**
         * @param integrationType The type of prometheus integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationType(String integrationType) {
            return integrationType(Output.of(integrationType));
        }

        /**
         * @param param Exporter configuration parameter json string.
         * 
         * @return builder
         * 
         */
        public Builder param(@Nullable Output<String> param) {
            $.param = param;
            return this;
        }

        /**
         * @param param Exporter configuration parameter json string.
         * 
         * @return builder
         * 
         */
        public Builder param(String param) {
            return param(Output.of(param));
        }

        public IntegrationExporterState build() {
            return $;
        }
    }

}
