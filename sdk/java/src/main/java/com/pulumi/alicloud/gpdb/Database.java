// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.gpdb;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.gpdb.DatabaseArgs;
import com.pulumi.alicloud.gpdb.inputs.DatabaseState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a GPDB Database resource.
 * 
 * For information about GPDB Database and how to use it, see [What is Database](https://www.alibabacloud.com/help/en/).
 * 
 * &gt; **NOTE:** Available since v1.232.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.gpdb.Instance;
 * import com.pulumi.alicloud.gpdb.InstanceArgs;
 * import com.pulumi.alicloud.gpdb.Database;
 * import com.pulumi.alicloud.gpdb.DatabaseArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         var default35OkxY = new Network("default35OkxY", NetworkArgs.builder()
 *             .cidrBlock("192.168.0.0/16")
 *             .build());
 * 
 *         var defaultl8haQ3 = new Switch("defaultl8haQ3", SwitchArgs.builder()
 *             .vpcId(default35OkxY.id())
 *             .zoneId("cn-beijing-h")
 *             .cidrBlock("192.168.1.0/24")
 *             .build());
 * 
 *         var defaultTC08a9 = new Instance("defaultTC08a9", InstanceArgs.builder()
 *             .instanceSpec("2C8G")
 *             .segNodeNum(2)
 *             .segStorageType("cloud_essd")
 *             .instanceNetworkType("VPC")
 *             .dbInstanceCategory("Basic")
 *             .paymentType("PayAsYouGo")
 *             .sslEnabled(0)
 *             .engineVersion("6.0")
 *             .engine("gpdb")
 *             .zoneId("cn-beijing-h")
 *             .vswitchId(defaultl8haQ3.id())
 *             .storageSize(50)
 *             .masterCu(4)
 *             .vpcId(default35OkxY.id())
 *             .dbInstanceMode("StorageElastic")
 *             .build());
 * 
 *         var default_ = new Database("default", DatabaseArgs.builder()
 *             .characterSetName("UTF8")
 *             .owner("adbpgadmin")
 *             .description("go-to-the-docks-for-french-fries")
 *             .databaseName("seagull")
 *             .collate("en_US.utf8")
 *             .ctype("en_US.utf8")
 *             .dbInstanceId(defaultTC08a9.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * GPDB Database can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:gpdb/database:Database example &lt;db_instance_id&gt;:&lt;database_name&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:gpdb/database:Database")
public class Database extends com.pulumi.resources.CustomResource {
    /**
     * Character set, default value is UTF8
     * 
     */
    @Export(name="characterSetName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> characterSetName;

    /**
     * @return Character set, default value is UTF8
     * 
     */
    public Output<Optional<String>> characterSetName() {
        return Codegen.optional(this.characterSetName);
    }
    /**
     * Database locale parameters, specifying string comparison/collation
     * 
     */
    @Export(name="collate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> collate;

    /**
     * @return Database locale parameters, specifying string comparison/collation
     * 
     */
    public Output<Optional<String>> collate() {
        return Codegen.optional(this.collate);
    }
    /**
     * Database locale parameters, specifying character classification/case conversion rules
     * 
     */
    @Export(name="ctype", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ctype;

    /**
     * @return Database locale parameters, specifying character classification/case conversion rules
     * 
     */
    public Output<Optional<String>> ctype() {
        return Codegen.optional(this.ctype);
    }
    /**
     * Database Name
     * 
     */
    @Export(name="databaseName", refs={String.class}, tree="[0]")
    private Output<String> databaseName;

    /**
     * @return Database Name
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }
    /**
     * Instance ID
     * 
     */
    @Export(name="dbInstanceId", refs={String.class}, tree="[0]")
    private Output<String> dbInstanceId;

    /**
     * @return Instance ID
     * 
     */
    public Output<String> dbInstanceId() {
        return this.dbInstanceId;
    }
    /**
     * Database Description
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Database Description
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Data Sheet owner
     * 
     */
    @Export(name="owner", refs={String.class}, tree="[0]")
    private Output<String> owner;

    /**
     * @return Data Sheet owner
     * 
     */
    public Output<String> owner() {
        return this.owner;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Database(java.lang.String name) {
        this(name, DatabaseArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Database(java.lang.String name, DatabaseArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Database(java.lang.String name, DatabaseArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:gpdb/database:Database", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Database(java.lang.String name, Output<java.lang.String> id, @Nullable DatabaseState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:gpdb/database:Database", name, state, makeResourceOptions(options, id), false);
    }

    private static DatabaseArgs makeArgs(DatabaseArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DatabaseArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Database get(java.lang.String name, Output<java.lang.String> id, @Nullable DatabaseState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Database(name, id, state, options);
    }
}
