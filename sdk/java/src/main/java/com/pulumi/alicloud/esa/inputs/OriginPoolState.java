// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.inputs;

import com.pulumi.alicloud.esa.inputs.OriginPoolOriginArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OriginPoolState extends com.pulumi.resources.ResourceArgs {

    public static final OriginPoolState Empty = new OriginPoolState();

    /**
     * Whether the source address pool is enabled:
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether the source address pool is enabled:
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * OriginPool Id
     * 
     */
    @Import(name="originPoolId")
    private @Nullable Output<Integer> originPoolId;

    /**
     * @return OriginPool Id
     * 
     */
    public Optional<Output<Integer>> originPoolId() {
        return Optional.ofNullable(this.originPoolId);
    }

    /**
     * The source address pool name.
     * 
     */
    @Import(name="originPoolName")
    private @Nullable Output<String> originPoolName;

    /**
     * @return The source address pool name.
     * 
     */
    public Optional<Output<String>> originPoolName() {
        return Optional.ofNullable(this.originPoolName);
    }

    /**
     * The Source station information added to the source address pool. Multiple Source stations use arrays to transfer values. See `origins` below.
     * 
     */
    @Import(name="origins")
    private @Nullable Output<List<OriginPoolOriginArgs>> origins;

    /**
     * @return The Source station information added to the source address pool. Multiple Source stations use arrays to transfer values. See `origins` below.
     * 
     */
    public Optional<Output<List<OriginPoolOriginArgs>>> origins() {
        return Optional.ofNullable(this.origins);
    }

    /**
     * The site ID.
     * 
     */
    @Import(name="siteId")
    private @Nullable Output<Integer> siteId;

    /**
     * @return The site ID.
     * 
     */
    public Optional<Output<Integer>> siteId() {
        return Optional.ofNullable(this.siteId);
    }

    private OriginPoolState() {}

    private OriginPoolState(OriginPoolState $) {
        this.enabled = $.enabled;
        this.originPoolId = $.originPoolId;
        this.originPoolName = $.originPoolName;
        this.origins = $.origins;
        this.siteId = $.siteId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OriginPoolState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OriginPoolState $;

        public Builder() {
            $ = new OriginPoolState();
        }

        public Builder(OriginPoolState defaults) {
            $ = new OriginPoolState(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Whether the source address pool is enabled:
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether the source address pool is enabled:
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param originPoolId OriginPool Id
         * 
         * @return builder
         * 
         */
        public Builder originPoolId(@Nullable Output<Integer> originPoolId) {
            $.originPoolId = originPoolId;
            return this;
        }

        /**
         * @param originPoolId OriginPool Id
         * 
         * @return builder
         * 
         */
        public Builder originPoolId(Integer originPoolId) {
            return originPoolId(Output.of(originPoolId));
        }

        /**
         * @param originPoolName The source address pool name.
         * 
         * @return builder
         * 
         */
        public Builder originPoolName(@Nullable Output<String> originPoolName) {
            $.originPoolName = originPoolName;
            return this;
        }

        /**
         * @param originPoolName The source address pool name.
         * 
         * @return builder
         * 
         */
        public Builder originPoolName(String originPoolName) {
            return originPoolName(Output.of(originPoolName));
        }

        /**
         * @param origins The Source station information added to the source address pool. Multiple Source stations use arrays to transfer values. See `origins` below.
         * 
         * @return builder
         * 
         */
        public Builder origins(@Nullable Output<List<OriginPoolOriginArgs>> origins) {
            $.origins = origins;
            return this;
        }

        /**
         * @param origins The Source station information added to the source address pool. Multiple Source stations use arrays to transfer values. See `origins` below.
         * 
         * @return builder
         * 
         */
        public Builder origins(List<OriginPoolOriginArgs> origins) {
            return origins(Output.of(origins));
        }

        /**
         * @param origins The Source station information added to the source address pool. Multiple Source stations use arrays to transfer values. See `origins` below.
         * 
         * @return builder
         * 
         */
        public Builder origins(OriginPoolOriginArgs... origins) {
            return origins(List.of(origins));
        }

        /**
         * @param siteId The site ID.
         * 
         * @return builder
         * 
         */
        public Builder siteId(@Nullable Output<Integer> siteId) {
            $.siteId = siteId;
            return this;
        }

        /**
         * @param siteId The site ID.
         * 
         * @return builder
         * 
         */
        public Builder siteId(Integer siteId) {
            return siteId(Output.of(siteId));
        }

        public OriginPoolState build() {
            return $;
        }
    }

}
