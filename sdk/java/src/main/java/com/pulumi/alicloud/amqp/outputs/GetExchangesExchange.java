// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.amqp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetExchangesExchange {
    /**
     * @return The attributes.
     * 
     */
    private Map<String,Object> attributes;
    /**
     * @return Indicates whether the Auto Delete attribute is configured.
     * 
     */
    private Boolean autoDeleteState;
    /**
     * @return The creation time.
     * 
     */
    private String createTime;
    /**
     * @return The name of the exchange.
     * 
     */
    private String exchangeName;
    /**
     * @return The type of the exchange.
     * 
     */
    private String exchangeType;
    /**
     * @return The ID of the Exchange. Its value is same as Queue Name.
     * 
     */
    private String id;
    /**
     * @return The ID of the instance.
     * 
     */
    private String instanceId;
    /**
     * @return The name of virtual host where an exchange resides.
     * 
     */
    private String virtualHostName;

    private GetExchangesExchange() {}
    /**
     * @return The attributes.
     * 
     */
    public Map<String,Object> attributes() {
        return this.attributes;
    }
    /**
     * @return Indicates whether the Auto Delete attribute is configured.
     * 
     */
    public Boolean autoDeleteState() {
        return this.autoDeleteState;
    }
    /**
     * @return The creation time.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The name of the exchange.
     * 
     */
    public String exchangeName() {
        return this.exchangeName;
    }
    /**
     * @return The type of the exchange.
     * 
     */
    public String exchangeType() {
        return this.exchangeType;
    }
    /**
     * @return The ID of the Exchange. Its value is same as Queue Name.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the instance.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return The name of virtual host where an exchange resides.
     * 
     */
    public String virtualHostName() {
        return this.virtualHostName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExchangesExchange defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,Object> attributes;
        private Boolean autoDeleteState;
        private String createTime;
        private String exchangeName;
        private String exchangeType;
        private String id;
        private String instanceId;
        private String virtualHostName;
        public Builder() {}
        public Builder(GetExchangesExchange defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributes = defaults.attributes;
    	      this.autoDeleteState = defaults.autoDeleteState;
    	      this.createTime = defaults.createTime;
    	      this.exchangeName = defaults.exchangeName;
    	      this.exchangeType = defaults.exchangeType;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.virtualHostName = defaults.virtualHostName;
        }

        @CustomType.Setter
        public Builder attributes(Map<String,Object> attributes) {
            if (attributes == null) {
              throw new MissingRequiredPropertyException("GetExchangesExchange", "attributes");
            }
            this.attributes = attributes;
            return this;
        }
        @CustomType.Setter
        public Builder autoDeleteState(Boolean autoDeleteState) {
            if (autoDeleteState == null) {
              throw new MissingRequiredPropertyException("GetExchangesExchange", "autoDeleteState");
            }
            this.autoDeleteState = autoDeleteState;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetExchangesExchange", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder exchangeName(String exchangeName) {
            if (exchangeName == null) {
              throw new MissingRequiredPropertyException("GetExchangesExchange", "exchangeName");
            }
            this.exchangeName = exchangeName;
            return this;
        }
        @CustomType.Setter
        public Builder exchangeType(String exchangeType) {
            if (exchangeType == null) {
              throw new MissingRequiredPropertyException("GetExchangesExchange", "exchangeType");
            }
            this.exchangeType = exchangeType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetExchangesExchange", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetExchangesExchange", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder virtualHostName(String virtualHostName) {
            if (virtualHostName == null) {
              throw new MissingRequiredPropertyException("GetExchangesExchange", "virtualHostName");
            }
            this.virtualHostName = virtualHostName;
            return this;
        }
        public GetExchangesExchange build() {
            final var _resultValue = new GetExchangesExchange();
            _resultValue.attributes = attributes;
            _resultValue.autoDeleteState = autoDeleteState;
            _resultValue.createTime = createTime;
            _resultValue.exchangeName = exchangeName;
            _resultValue.exchangeType = exchangeType;
            _resultValue.id = id;
            _resultValue.instanceId = instanceId;
            _resultValue.virtualHostName = virtualHostName;
            return _resultValue;
        }
    }
}
