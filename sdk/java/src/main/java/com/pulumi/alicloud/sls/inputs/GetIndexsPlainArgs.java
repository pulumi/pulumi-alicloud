// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sls.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIndexsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIndexsPlainArgs Empty = new GetIndexsPlainArgs();

    /**
     * A list of Index IDs. The value is formulated as `&lt;project_name&gt;:&lt;logstore_name&gt;`.
     * 
     */
    @Import(name="ids")
    private @Nullable List<String> ids;

    /**
     * @return A list of Index IDs. The value is formulated as `&lt;project_name&gt;:&lt;logstore_name&gt;`.
     * 
     */
    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * Logstore name
     * 
     */
    @Import(name="logstoreName", required=true)
    private String logstoreName;

    /**
     * @return Logstore name
     * 
     */
    public String logstoreName() {
        return this.logstoreName;
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * Project name
     * 
     */
    @Import(name="projectName", required=true)
    private String projectName;

    /**
     * @return Project name
     * 
     */
    public String projectName() {
        return this.projectName;
    }

    private GetIndexsPlainArgs() {}

    private GetIndexsPlainArgs(GetIndexsPlainArgs $) {
        this.ids = $.ids;
        this.logstoreName = $.logstoreName;
        this.outputFile = $.outputFile;
        this.projectName = $.projectName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIndexsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIndexsPlainArgs $;

        public Builder() {
            $ = new GetIndexsPlainArgs();
        }

        public Builder(GetIndexsPlainArgs defaults) {
            $ = new GetIndexsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ids A list of Index IDs. The value is formulated as `&lt;project_name&gt;:&lt;logstore_name&gt;`.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Index IDs. The value is formulated as `&lt;project_name&gt;:&lt;logstore_name&gt;`.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param logstoreName Logstore name
         * 
         * @return builder
         * 
         */
        public Builder logstoreName(String logstoreName) {
            $.logstoreName = logstoreName;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param projectName Project name
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            $.projectName = projectName;
            return this;
        }

        public GetIndexsPlainArgs build() {
            if ($.logstoreName == null) {
                throw new MissingRequiredPropertyException("GetIndexsPlainArgs", "logstoreName");
            }
            if ($.projectName == null) {
                throw new MissingRequiredPropertyException("GetIndexsPlainArgs", "projectName");
            }
            return $;
        }
    }

}
