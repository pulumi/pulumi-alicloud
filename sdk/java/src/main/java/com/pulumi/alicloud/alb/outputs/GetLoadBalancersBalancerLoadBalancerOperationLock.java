// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLoadBalancersBalancerLoadBalancerOperationLock {
    /**
     * @return The Locking of the Reasons.
     * 
     */
    private String lockReason;
    /**
     * @return The Locking of the Type. Valid Values: `securitylocked`,`relatedresourcelocked`, `financiallocked`, and `residuallocked`.
     * 
     */
    private String lockType;

    private GetLoadBalancersBalancerLoadBalancerOperationLock() {}
    /**
     * @return The Locking of the Reasons.
     * 
     */
    public String lockReason() {
        return this.lockReason;
    }
    /**
     * @return The Locking of the Type. Valid Values: `securitylocked`,`relatedresourcelocked`, `financiallocked`, and `residuallocked`.
     * 
     */
    public String lockType() {
        return this.lockType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLoadBalancersBalancerLoadBalancerOperationLock defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String lockReason;
        private String lockType;
        public Builder() {}
        public Builder(GetLoadBalancersBalancerLoadBalancerOperationLock defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.lockReason = defaults.lockReason;
    	      this.lockType = defaults.lockType;
        }

        @CustomType.Setter
        public Builder lockReason(String lockReason) {
            if (lockReason == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancersBalancerLoadBalancerOperationLock", "lockReason");
            }
            this.lockReason = lockReason;
            return this;
        }
        @CustomType.Setter
        public Builder lockType(String lockType) {
            if (lockType == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancersBalancerLoadBalancerOperationLock", "lockType");
            }
            this.lockType = lockType;
            return this;
        }
        public GetLoadBalancersBalancerLoadBalancerOperationLock build() {
            final var _resultValue = new GetLoadBalancersBalancerLoadBalancerOperationLock();
            _resultValue.lockReason = lockReason;
            _resultValue.lockType = lockType;
            return _resultValue;
        }
    }
}
