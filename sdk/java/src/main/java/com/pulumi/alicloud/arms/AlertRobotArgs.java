// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.arms;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertRobotArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertRobotArgs Empty = new AlertRobotArgs();

    /**
     * The name of the resource.
     * 
     */
    @Import(name="alertRobotName", required=true)
    private Output<String> alertRobotName;

    /**
     * @return The name of the resource.
     * 
     */
    public Output<String> alertRobotName() {
        return this.alertRobotName;
    }

    /**
     * Specifies whether the alert robot receives daily notifications. Valid values: `true`: receives daily notifications. `false`: does not receive daily notifications, default to `false`.
     * 
     */
    @Import(name="dailyNoc")
    private @Nullable Output<Boolean> dailyNoc;

    /**
     * @return Specifies whether the alert robot receives daily notifications. Valid values: `true`: receives daily notifications. `false`: does not receive daily notifications, default to `false`.
     * 
     */
    public Optional<Output<Boolean>> dailyNoc() {
        return Optional.ofNullable(this.dailyNoc);
    }

    /**
     * The time of the daily notification.
     * 
     */
    @Import(name="dailyNocTime")
    private @Nullable Output<String> dailyNocTime;

    /**
     * @return The time of the daily notification.
     * 
     */
    public Optional<Output<String>> dailyNocTime() {
        return Optional.ofNullable(this.dailyNocTime);
    }

    /**
     * The webhook url of the robot.
     * 
     */
    @Import(name="robotAddr", required=true)
    private Output<String> robotAddr;

    /**
     * @return The webhook url of the robot.
     * 
     */
    public Output<String> robotAddr() {
        return this.robotAddr;
    }

    /**
     * The type of the robot, Valid values: `wechat`, `dingding`, `feishu`.
     * 
     */
    @Import(name="robotType", required=true)
    private Output<String> robotType;

    /**
     * @return The type of the robot, Valid values: `wechat`, `dingding`, `feishu`.
     * 
     */
    public Output<String> robotType() {
        return this.robotType;
    }

    private AlertRobotArgs() {}

    private AlertRobotArgs(AlertRobotArgs $) {
        this.alertRobotName = $.alertRobotName;
        this.dailyNoc = $.dailyNoc;
        this.dailyNocTime = $.dailyNocTime;
        this.robotAddr = $.robotAddr;
        this.robotType = $.robotType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertRobotArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertRobotArgs $;

        public Builder() {
            $ = new AlertRobotArgs();
        }

        public Builder(AlertRobotArgs defaults) {
            $ = new AlertRobotArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param alertRobotName The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder alertRobotName(Output<String> alertRobotName) {
            $.alertRobotName = alertRobotName;
            return this;
        }

        /**
         * @param alertRobotName The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder alertRobotName(String alertRobotName) {
            return alertRobotName(Output.of(alertRobotName));
        }

        /**
         * @param dailyNoc Specifies whether the alert robot receives daily notifications. Valid values: `true`: receives daily notifications. `false`: does not receive daily notifications, default to `false`.
         * 
         * @return builder
         * 
         */
        public Builder dailyNoc(@Nullable Output<Boolean> dailyNoc) {
            $.dailyNoc = dailyNoc;
            return this;
        }

        /**
         * @param dailyNoc Specifies whether the alert robot receives daily notifications. Valid values: `true`: receives daily notifications. `false`: does not receive daily notifications, default to `false`.
         * 
         * @return builder
         * 
         */
        public Builder dailyNoc(Boolean dailyNoc) {
            return dailyNoc(Output.of(dailyNoc));
        }

        /**
         * @param dailyNocTime The time of the daily notification.
         * 
         * @return builder
         * 
         */
        public Builder dailyNocTime(@Nullable Output<String> dailyNocTime) {
            $.dailyNocTime = dailyNocTime;
            return this;
        }

        /**
         * @param dailyNocTime The time of the daily notification.
         * 
         * @return builder
         * 
         */
        public Builder dailyNocTime(String dailyNocTime) {
            return dailyNocTime(Output.of(dailyNocTime));
        }

        /**
         * @param robotAddr The webhook url of the robot.
         * 
         * @return builder
         * 
         */
        public Builder robotAddr(Output<String> robotAddr) {
            $.robotAddr = robotAddr;
            return this;
        }

        /**
         * @param robotAddr The webhook url of the robot.
         * 
         * @return builder
         * 
         */
        public Builder robotAddr(String robotAddr) {
            return robotAddr(Output.of(robotAddr));
        }

        /**
         * @param robotType The type of the robot, Valid values: `wechat`, `dingding`, `feishu`.
         * 
         * @return builder
         * 
         */
        public Builder robotType(Output<String> robotType) {
            $.robotType = robotType;
            return this;
        }

        /**
         * @param robotType The type of the robot, Valid values: `wechat`, `dingding`, `feishu`.
         * 
         * @return builder
         * 
         */
        public Builder robotType(String robotType) {
            return robotType(Output.of(robotType));
        }

        public AlertRobotArgs build() {
            if ($.alertRobotName == null) {
                throw new MissingRequiredPropertyException("AlertRobotArgs", "alertRobotName");
            }
            if ($.robotAddr == null) {
                throw new MissingRequiredPropertyException("AlertRobotArgs", "robotAddr");
            }
            if ($.robotType == null) {
                throw new MissingRequiredPropertyException("AlertRobotArgs", "robotType");
            }
            return $;
        }
    }

}
