// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.videosurveillance.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SystemGroupState extends com.pulumi.resources.ResourceArgs {

    public static final SystemGroupState Empty = new SystemGroupState();

    /**
     * The space within the device status update of the callback, need to start with http:// or https:// at the beginning.
     * 
     */
    @Import(name="callback")
    private @Nullable Output<String> callback;

    /**
     * @return The space within the device status update of the callback, need to start with http:// or https:// at the beginning.
     * 
     */
    public Optional<Output<String>> callback() {
        return Optional.ofNullable(this.callback);
    }

    /**
     * The capture image.
     * 
     */
    @Import(name="captureImage")
    private @Nullable Output<Integer> captureImage;

    /**
     * @return The capture image.
     * 
     */
    public Optional<Output<Integer>> captureImage() {
        return Optional.ofNullable(this.captureImage);
    }

    /**
     * The capture interval.
     * 
     */
    @Import(name="captureInterval")
    private @Nullable Output<Integer> captureInterval;

    /**
     * @return The capture interval.
     * 
     */
    public Optional<Output<Integer>> captureInterval() {
        return Optional.ofNullable(this.captureInterval);
    }

    /**
     * The capture oss bucket.
     * 
     */
    @Import(name="captureOssBucket")
    private @Nullable Output<String> captureOssBucket;

    /**
     * @return The capture oss bucket.
     * 
     */
    public Optional<Output<String>> captureOssBucket() {
        return Optional.ofNullable(this.captureOssBucket);
    }

    /**
     * The capture oss path.
     * 
     */
    @Import(name="captureOssPath")
    private @Nullable Output<String> captureOssPath;

    /**
     * @return The capture oss path.
     * 
     */
    public Optional<Output<String>> captureOssPath() {
        return Optional.ofNullable(this.captureOssPath);
    }

    /**
     * The capture video.
     * 
     */
    @Import(name="captureVideo")
    private @Nullable Output<Integer> captureVideo;

    /**
     * @return The capture video.
     * 
     */
    public Optional<Output<Integer>> captureVideo() {
        return Optional.ofNullable(this.captureVideo);
    }

    /**
     * The description of Group.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of Group.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Whether to open Group.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether to open Group.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The Group Name.
     * 
     */
    @Import(name="groupName")
    private @Nullable Output<String> groupName;

    /**
     * @return The Group Name.
     * 
     */
    public Optional<Output<String>> groupName() {
        return Optional.ofNullable(this.groupName);
    }

    /**
     * The use of the access protocol support gb28181, Real Time Messaging Protocol (rtmp). Valid values: `gb28181`, `rtmp`.
     * 
     */
    @Import(name="inProtocol")
    private @Nullable Output<String> inProtocol;

    /**
     * @return The use of the access protocol support gb28181, Real Time Messaging Protocol (rtmp). Valid values: `gb28181`, `rtmp`.
     * 
     */
    public Optional<Output<String>> inProtocol() {
        return Optional.ofNullable(this.inProtocol);
    }

    /**
     * Whether to enable on-demand streaming. Default value:`false`.
     * 
     */
    @Import(name="lazyPull")
    private @Nullable Output<Boolean> lazyPull;

    /**
     * @return Whether to enable on-demand streaming. Default value:`false`.
     * 
     */
    public Optional<Output<Boolean>> lazyPull() {
        return Optional.ofNullable(this.lazyPull);
    }

    /**
     * The playback protocol used by the space, multiple values are separated by commas (,). Valid values: `flv`,`hls`, `rtmp`.
     * 
     */
    @Import(name="outProtocol")
    private @Nullable Output<String> outProtocol;

    /**
     * @return The playback protocol used by the space, multiple values are separated by commas (,). Valid values: `flv`,`hls`, `rtmp`.
     * 
     */
    public Optional<Output<String>> outProtocol() {
        return Optional.ofNullable(this.outProtocol);
    }

    /**
     * The domain name of plan streaming used by the group.
     * 
     */
    @Import(name="playDomain")
    private @Nullable Output<String> playDomain;

    /**
     * @return The domain name of plan streaming used by the group.
     * 
     */
    public Optional<Output<String>> playDomain() {
        return Optional.ofNullable(this.playDomain);
    }

    /**
     * The domain name of push streaming used by the group.
     * 
     */
    @Import(name="pushDomain")
    private @Nullable Output<String> pushDomain;

    /**
     * @return The domain name of push streaming used by the group.
     * 
     */
    public Optional<Output<String>> pushDomain() {
        return Optional.ofNullable(this.pushDomain);
    }

    /**
     * Whether to open Group. Valid values: `on`,`off`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<Boolean> status;

    /**
     * @return Whether to open Group. Valid values: `on`,`off`.
     * 
     */
    public Optional<Output<Boolean>> status() {
        return Optional.ofNullable(this.status);
    }

    private SystemGroupState() {}

    private SystemGroupState(SystemGroupState $) {
        this.callback = $.callback;
        this.captureImage = $.captureImage;
        this.captureInterval = $.captureInterval;
        this.captureOssBucket = $.captureOssBucket;
        this.captureOssPath = $.captureOssPath;
        this.captureVideo = $.captureVideo;
        this.description = $.description;
        this.enabled = $.enabled;
        this.groupName = $.groupName;
        this.inProtocol = $.inProtocol;
        this.lazyPull = $.lazyPull;
        this.outProtocol = $.outProtocol;
        this.playDomain = $.playDomain;
        this.pushDomain = $.pushDomain;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SystemGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SystemGroupState $;

        public Builder() {
            $ = new SystemGroupState();
        }

        public Builder(SystemGroupState defaults) {
            $ = new SystemGroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param callback The space within the device status update of the callback, need to start with http:// or https:// at the beginning.
         * 
         * @return builder
         * 
         */
        public Builder callback(@Nullable Output<String> callback) {
            $.callback = callback;
            return this;
        }

        /**
         * @param callback The space within the device status update of the callback, need to start with http:// or https:// at the beginning.
         * 
         * @return builder
         * 
         */
        public Builder callback(String callback) {
            return callback(Output.of(callback));
        }

        /**
         * @param captureImage The capture image.
         * 
         * @return builder
         * 
         */
        public Builder captureImage(@Nullable Output<Integer> captureImage) {
            $.captureImage = captureImage;
            return this;
        }

        /**
         * @param captureImage The capture image.
         * 
         * @return builder
         * 
         */
        public Builder captureImage(Integer captureImage) {
            return captureImage(Output.of(captureImage));
        }

        /**
         * @param captureInterval The capture interval.
         * 
         * @return builder
         * 
         */
        public Builder captureInterval(@Nullable Output<Integer> captureInterval) {
            $.captureInterval = captureInterval;
            return this;
        }

        /**
         * @param captureInterval The capture interval.
         * 
         * @return builder
         * 
         */
        public Builder captureInterval(Integer captureInterval) {
            return captureInterval(Output.of(captureInterval));
        }

        /**
         * @param captureOssBucket The capture oss bucket.
         * 
         * @return builder
         * 
         */
        public Builder captureOssBucket(@Nullable Output<String> captureOssBucket) {
            $.captureOssBucket = captureOssBucket;
            return this;
        }

        /**
         * @param captureOssBucket The capture oss bucket.
         * 
         * @return builder
         * 
         */
        public Builder captureOssBucket(String captureOssBucket) {
            return captureOssBucket(Output.of(captureOssBucket));
        }

        /**
         * @param captureOssPath The capture oss path.
         * 
         * @return builder
         * 
         */
        public Builder captureOssPath(@Nullable Output<String> captureOssPath) {
            $.captureOssPath = captureOssPath;
            return this;
        }

        /**
         * @param captureOssPath The capture oss path.
         * 
         * @return builder
         * 
         */
        public Builder captureOssPath(String captureOssPath) {
            return captureOssPath(Output.of(captureOssPath));
        }

        /**
         * @param captureVideo The capture video.
         * 
         * @return builder
         * 
         */
        public Builder captureVideo(@Nullable Output<Integer> captureVideo) {
            $.captureVideo = captureVideo;
            return this;
        }

        /**
         * @param captureVideo The capture video.
         * 
         * @return builder
         * 
         */
        public Builder captureVideo(Integer captureVideo) {
            return captureVideo(Output.of(captureVideo));
        }

        /**
         * @param description The description of Group.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of Group.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param enabled Whether to open Group.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether to open Group.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param groupName The Group Name.
         * 
         * @return builder
         * 
         */
        public Builder groupName(@Nullable Output<String> groupName) {
            $.groupName = groupName;
            return this;
        }

        /**
         * @param groupName The Group Name.
         * 
         * @return builder
         * 
         */
        public Builder groupName(String groupName) {
            return groupName(Output.of(groupName));
        }

        /**
         * @param inProtocol The use of the access protocol support gb28181, Real Time Messaging Protocol (rtmp). Valid values: `gb28181`, `rtmp`.
         * 
         * @return builder
         * 
         */
        public Builder inProtocol(@Nullable Output<String> inProtocol) {
            $.inProtocol = inProtocol;
            return this;
        }

        /**
         * @param inProtocol The use of the access protocol support gb28181, Real Time Messaging Protocol (rtmp). Valid values: `gb28181`, `rtmp`.
         * 
         * @return builder
         * 
         */
        public Builder inProtocol(String inProtocol) {
            return inProtocol(Output.of(inProtocol));
        }

        /**
         * @param lazyPull Whether to enable on-demand streaming. Default value:`false`.
         * 
         * @return builder
         * 
         */
        public Builder lazyPull(@Nullable Output<Boolean> lazyPull) {
            $.lazyPull = lazyPull;
            return this;
        }

        /**
         * @param lazyPull Whether to enable on-demand streaming. Default value:`false`.
         * 
         * @return builder
         * 
         */
        public Builder lazyPull(Boolean lazyPull) {
            return lazyPull(Output.of(lazyPull));
        }

        /**
         * @param outProtocol The playback protocol used by the space, multiple values are separated by commas (,). Valid values: `flv`,`hls`, `rtmp`.
         * 
         * @return builder
         * 
         */
        public Builder outProtocol(@Nullable Output<String> outProtocol) {
            $.outProtocol = outProtocol;
            return this;
        }

        /**
         * @param outProtocol The playback protocol used by the space, multiple values are separated by commas (,). Valid values: `flv`,`hls`, `rtmp`.
         * 
         * @return builder
         * 
         */
        public Builder outProtocol(String outProtocol) {
            return outProtocol(Output.of(outProtocol));
        }

        /**
         * @param playDomain The domain name of plan streaming used by the group.
         * 
         * @return builder
         * 
         */
        public Builder playDomain(@Nullable Output<String> playDomain) {
            $.playDomain = playDomain;
            return this;
        }

        /**
         * @param playDomain The domain name of plan streaming used by the group.
         * 
         * @return builder
         * 
         */
        public Builder playDomain(String playDomain) {
            return playDomain(Output.of(playDomain));
        }

        /**
         * @param pushDomain The domain name of push streaming used by the group.
         * 
         * @return builder
         * 
         */
        public Builder pushDomain(@Nullable Output<String> pushDomain) {
            $.pushDomain = pushDomain;
            return this;
        }

        /**
         * @param pushDomain The domain name of push streaming used by the group.
         * 
         * @return builder
         * 
         */
        public Builder pushDomain(String pushDomain) {
            return pushDomain(Output.of(pushDomain));
        }

        /**
         * @param status Whether to open Group. Valid values: `on`,`off`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<Boolean> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Whether to open Group. Valid values: `on`,`off`.
         * 
         * @return builder
         * 
         */
        public Builder status(Boolean status) {
            return status(Output.of(status));
        }

        public SystemGroupState build() {
            return $;
        }
    }

}
