// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alikafka;

import com.pulumi.alicloud.alikafka.inputs.InstanceConfluentConfigArgs;
import com.pulumi.alicloud.alikafka.inputs.InstanceServerlessConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceArgs Empty = new InstanceArgs();

    /**
     * The initial configurations of the ApsaraMQ for Kafka instance. The values must be valid JSON strings.
     * 
     */
    @Import(name="config")
    private @Nullable Output<String> config;

    /**
     * @return The initial configurations of the ApsaraMQ for Kafka instance. The values must be valid JSON strings.
     * 
     */
    public Optional<Output<String>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * The configurations of Confluent. See `confluent_config` below.
     * &gt; **NOTE:** If `instance_type` is set to `alikafka_confluent`, `confluent_config` is required.
     * 
     */
    @Import(name="confluentConfig")
    private @Nullable Output<InstanceConfluentConfigArgs> confluentConfig;

    /**
     * @return The configurations of Confluent. See `confluent_config` below.
     * &gt; **NOTE:** If `instance_type` is set to `alikafka_confluent`, `confluent_config` is required.
     * 
     */
    public Optional<Output<InstanceConfluentConfigArgs>> confluentConfig() {
        return Optional.ofNullable(this.confluentConfig);
    }

    /**
     * The number of partitions in a topic that is automatically created.
     * 
     */
    @Import(name="defaultTopicPartitionNum")
    private @Nullable Output<Integer> defaultTopicPartitionNum;

    /**
     * @return The number of partitions in a topic that is automatically created.
     * 
     */
    public Optional<Output<Integer>> defaultTopicPartitionNum() {
        return Optional.ofNullable(this.defaultTopicPartitionNum);
    }

    /**
     * The deployment type of the instance. **NOTE:** From version 1.161.0, this attribute supports to be updated. Valid values:
     * 
     */
    @Import(name="deployType", required=true)
    private Output<Integer> deployType;

    /**
     * @return The deployment type of the instance. **NOTE:** From version 1.161.0, this attribute supports to be updated. Valid values:
     * 
     */
    public Output<Integer> deployType() {
        return this.deployType;
    }

    /**
     * The disk size of the instance. When modify this value, it only supports adjust to a greater value.
     * &gt; **NOTE:** If `instance_type` is set to `alikafka`, `disk_size` is required.
     * 
     */
    @Import(name="diskSize")
    private @Nullable Output<Integer> diskSize;

    /**
     * @return The disk size of the instance. When modify this value, it only supports adjust to a greater value.
     * &gt; **NOTE:** If `instance_type` is set to `alikafka`, `disk_size` is required.
     * 
     */
    public Optional<Output<Integer>> diskSize() {
        return Optional.ofNullable(this.diskSize);
    }

    /**
     * The disk type of the instance. Valid values:
     * 
     */
    @Import(name="diskType")
    private @Nullable Output<Integer> diskType;

    /**
     * @return The disk type of the instance. Valid values:
     * 
     */
    public Optional<Output<Integer>> diskType() {
        return Optional.ofNullable(this.diskType);
    }

    /**
     * The max bandwidth of the instance. It will be ignored when `deploy_type = 5`. When modify this value, it only supports adjust to a greater value.
     * 
     */
    @Import(name="eipMax")
    private @Nullable Output<Integer> eipMax;

    /**
     * @return The max bandwidth of the instance. It will be ignored when `deploy_type = 5`. When modify this value, it only supports adjust to a greater value.
     * 
     */
    public Optional<Output<Integer>> eipMax() {
        return Optional.ofNullable(this.eipMax);
    }

    /**
     * Specify whether to enable the flexible group creation feature. Default value: `false`. Valid values:
     * 
     */
    @Import(name="enableAutoGroup")
    private @Nullable Output<Boolean> enableAutoGroup;

    /**
     * @return Specify whether to enable the flexible group creation feature. Default value: `false`. Valid values:
     * 
     */
    public Optional<Output<Boolean>> enableAutoGroup() {
        return Optional.ofNullable(this.enableAutoGroup);
    }

    /**
     * Specify whether to enable the automatic topic creation feature. Default value: `disable`. Valid values:
     * 
     */
    @Import(name="enableAutoTopic")
    private @Nullable Output<String> enableAutoTopic;

    /**
     * @return Specify whether to enable the automatic topic creation feature. Default value: `disable`. Valid values:
     * 
     */
    public Optional<Output<String>> enableAutoTopic() {
        return Optional.ofNullable(this.enableAutoTopic);
    }

    /**
     * The type of the Instance. Default value: `alikafka`. Valid values:
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    /**
     * @return The type of the Instance. Default value: `alikafka`. Valid values:
     * 
     */
    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * The max value of io of the instance. When modify this value, it only support adjust to a greater value.
     * 
     */
    @Import(name="ioMax")
    private @Nullable Output<Integer> ioMax;

    /**
     * @return The max value of io of the instance. When modify this value, it only support adjust to a greater value.
     * 
     */
    public Optional<Output<Integer>> ioMax() {
        return Optional.ofNullable(this.ioMax);
    }

    /**
     * The traffic specification of the instance. We recommend that you configure this parameter.
     * - You should specify one of the `io_max` and `io_max_spec` parameters, and `io_max_spec` is recommended.
     * - For more information about the valid values, see [Billing](https://www.alibabacloud.com/help/en/message-queue-for-apache-kafka/latest/billing-overview).
     * 
     */
    @Import(name="ioMaxSpec")
    private @Nullable Output<String> ioMaxSpec;

    /**
     * @return The traffic specification of the instance. We recommend that you configure this parameter.
     * - You should specify one of the `io_max` and `io_max_spec` parameters, and `io_max_spec` is recommended.
     * - For more information about the valid values, see [Billing](https://www.alibabacloud.com/help/en/message-queue-for-apache-kafka/latest/billing-overview).
     * 
     */
    public Optional<Output<String>> ioMaxSpec() {
        return Optional.ofNullable(this.ioMaxSpec);
    }

    /**
     * The ID of the key that is used to encrypt data on standard SSDs in the region of the instance. For more information, see [How to use it](https://www.alibabacloud.com/help/en/apsaramq-for-kafka/cloud-message-queue-for-kafka/developer-reference/api-alikafka-2019-09-16-updateinstanceconfig).
     * 
     */
    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    /**
     * @return The ID of the key that is used to encrypt data on standard SSDs in the region of the instance. For more information, see [How to use it](https://www.alibabacloud.com/help/en/apsaramq-for-kafka/cloud-message-queue-for-kafka/developer-reference/api-alikafka-2019-09-16-updateinstanceconfig).
     * 
     */
    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    /**
     * Name of your Kafka instance. The length should between 3 and 64 characters. If not set, will use instance id as instance name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of your Kafka instance. The length should between 3 and 64 characters. If not set, will use instance id as instance name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The billing method of the instance. Default value: `PostPaid`. Valid values: `PostPaid`, `PrePaid`. When modify this value, it only support adjust from `PostPaid` to `PrePaid`.
     * 
     */
    @Import(name="paidType")
    private @Nullable Output<String> paidType;

    /**
     * @return The billing method of the instance. Default value: `PostPaid`. Valid values: `PostPaid`, `PrePaid`. When modify this value, it only support adjust from `PostPaid` to `PrePaid`.
     * 
     */
    public Optional<Output<String>> paidType() {
        return Optional.ofNullable(this.paidType);
    }

    /**
     * The number of partitions.
     * 
     */
    @Import(name="partitionNum")
    private @Nullable Output<Integer> partitionNum;

    /**
     * @return The number of partitions.
     * 
     */
    public Optional<Output<Integer>> partitionNum() {
        return Optional.ofNullable(this.partitionNum);
    }

    /**
     * The instance password. **NOTE:** If `instance_type` is set to `alikafka_confluent`, `password` is required.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return The instance password. **NOTE:** If `instance_type` is set to `alikafka_confluent`, `password` is required.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * The ID of the resource group. **Note:** Once you set a value of this property, you cannot set it to an empty string anymore.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group. **Note:** Once you set a value of this property, you cannot set it to an empty string anymore.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The ID of security group for this instance. If the security group is empty, system will create a default one.
     * 
     */
    @Import(name="securityGroup")
    private @Nullable Output<String> securityGroup;

    /**
     * @return The ID of security group for this instance. If the security group is empty, system will create a default one.
     * 
     */
    public Optional<Output<String>> securityGroup() {
        return Optional.ofNullable(this.securityGroup);
    }

    /**
     * The zones among which you want to deploy the instance. For more information, see [How to use it](https://www.alibabacloud.com/help/en/apsaramq-for-kafka/cloud-message-queue-for-kafka/developer-reference/api-alikafka-2019-09-16-startinstance).
     * 
     */
    @Import(name="selectedZones")
    private @Nullable Output<List<String>> selectedZones;

    /**
     * @return The zones among which you want to deploy the instance. For more information, see [How to use it](https://www.alibabacloud.com/help/en/apsaramq-for-kafka/cloud-message-queue-for-kafka/developer-reference/api-alikafka-2019-09-16-startinstance).
     * 
     */
    public Optional<Output<List<String>>> selectedZones() {
        return Optional.ofNullable(this.selectedZones);
    }

    /**
     * The parameters configured for the serverless ApsaraMQ for Kafka instance. See `serverless_config` below.
     * &gt; **NOTE:** If `instance_type` is set to `alikafka_serverless`, `serverless_config` is required.
     * 
     */
    @Import(name="serverlessConfig")
    private @Nullable Output<InstanceServerlessConfigArgs> serverlessConfig;

    /**
     * @return The parameters configured for the serverless ApsaraMQ for Kafka instance. See `serverless_config` below.
     * &gt; **NOTE:** If `instance_type` is set to `alikafka_serverless`, `serverless_config` is required.
     * 
     */
    public Optional<Output<InstanceServerlessConfigArgs>> serverlessConfig() {
        return Optional.ofNullable(this.serverlessConfig);
    }

    /**
     * The version of the Instance. Valid values:
     * - If `instance_type` is set to `alikafka`. Default value: `2.2.0`. Valid values: `2.2.0`, `2.6.2`.
     * - If `instance_type` is set to `alikafka_serverless`. Default value: `3.3.1`. Valid values: `3.3.1`.
     * - If `instance_type` is set to `alikafka_confluent`. Default value: `7.4.0`. Valid values: `7.4.0`.
     * 
     */
    @Import(name="serviceVersion")
    private @Nullable Output<String> serviceVersion;

    /**
     * @return The version of the Instance. Valid values:
     * - If `instance_type` is set to `alikafka`. Default value: `2.2.0`. Valid values: `2.2.0`, `2.6.2`.
     * - If `instance_type` is set to `alikafka_serverless`. Default value: `3.3.1`. Valid values: `3.3.1`.
     * - If `instance_type` is set to `alikafka_confluent`. Default value: `7.4.0`. Valid values: `7.4.0`.
     * 
     */
    public Optional<Output<String>> serviceVersion() {
        return Optional.ofNullable(this.serviceVersion);
    }

    /**
     * The instance edition. Default value: `normal`. Valid values:
     * - If `instance_type` is set to `alikafka`. Valid values: `normal`, `professional`, `professionalForHighRead`.
     * - If `instance_type` is set to `alikafka_serverless`. Valid values: `normal`.
     * - If `instance_type` is set to `alikafka_confluent`. Valid values: `professional`, `enterprise`.
     * 
     */
    @Import(name="specType")
    private @Nullable Output<String> specType;

    /**
     * @return The instance edition. Default value: `normal`. Valid values:
     * - If `instance_type` is set to `alikafka`. Valid values: `normal`, `professional`, `professionalForHighRead`.
     * - If `instance_type` is set to `alikafka_serverless`. Valid values: `normal`.
     * - If `instance_type` is set to `alikafka_confluent`. Valid values: `professional`, `enterprise`.
     * 
     */
    public Optional<Output<String>> specType() {
        return Optional.ofNullable(this.specType);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The max num of topic can be creation of the instance.
     * It has been deprecated since version 1.194.0 and using `partition_num` instead.
     * Currently, its value only can be set to 50 when creating it, and finally depends on `partition_num` value: &lt;`topic_quota`&gt; = 1000 + &lt;`partition_num`&gt;.
     * Therefore, you can update it by updating the `partition_num`, and it is the only updating path.
     * 
     * @deprecated
     * Attribute `topic_quota` has been deprecated since 1.194.0 and it will be removed in the next future. Using new attribute `partition_num` instead.
     * 
     */
    @Deprecated /* Attribute `topic_quota` has been deprecated since 1.194.0 and it will be removed in the next future. Using new attribute `partition_num` instead. */
    @Import(name="topicQuota")
    private @Nullable Output<Integer> topicQuota;

    /**
     * @return The max num of topic can be creation of the instance.
     * It has been deprecated since version 1.194.0 and using `partition_num` instead.
     * Currently, its value only can be set to 50 when creating it, and finally depends on `partition_num` value: &lt;`topic_quota`&gt; = 1000 + &lt;`partition_num`&gt;.
     * Therefore, you can update it by updating the `partition_num`, and it is the only updating path.
     * 
     * @deprecated
     * Attribute `topic_quota` has been deprecated since 1.194.0 and it will be removed in the next future. Using new attribute `partition_num` instead.
     * 
     */
    @Deprecated /* Attribute `topic_quota` has been deprecated since 1.194.0 and it will be removed in the next future. Using new attribute `partition_num` instead. */
    public Optional<Output<Integer>> topicQuota() {
        return Optional.ofNullable(this.topicQuota);
    }

    /**
     * The VPC ID of the instance.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The VPC ID of the instance.
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    /**
     * The ID of attaching vswitch to instance.
     * 
     */
    @Import(name="vswitchId")
    private @Nullable Output<String> vswitchId;

    /**
     * @return The ID of attaching vswitch to instance.
     * 
     */
    public Optional<Output<String>> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    /**
     * The IDs of the vSwitches with which the instance is associated.
     * &gt; **NOTE:** If `instance_type` is set to `alikafka` or `alikafka_serverless`, `vswitch_ids` is required. When `instance_type` is set to `alikafka_confluent`, you must specify at least one of the `vswitch_id` and `vswitch_ids`, and if you specify both `vswitch_id` and `vswitch_ids`, only the `vswitch_ids` takes effect.
     * 
     */
    @Import(name="vswitchIds")
    private @Nullable Output<List<String>> vswitchIds;

    /**
     * @return The IDs of the vSwitches with which the instance is associated.
     * &gt; **NOTE:** If `instance_type` is set to `alikafka` or `alikafka_serverless`, `vswitch_ids` is required. When `instance_type` is set to `alikafka_confluent`, you must specify at least one of the `vswitch_id` and `vswitch_ids`, and if you specify both `vswitch_id` and `vswitch_ids`, only the `vswitch_ids` takes effect.
     * 
     */
    public Optional<Output<List<String>>> vswitchIds() {
        return Optional.ofNullable(this.vswitchIds);
    }

    /**
     * The zone ID of the instance. The value can be in zone x or region id-x format. **NOTE**: When the available zone is insufficient, another availability zone may be deployed.
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return The zone ID of the instance. The value can be in zone x or region id-x format. **NOTE**: When the available zone is insufficient, another availability zone may be deployed.
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private InstanceArgs() {}

    private InstanceArgs(InstanceArgs $) {
        this.config = $.config;
        this.confluentConfig = $.confluentConfig;
        this.defaultTopicPartitionNum = $.defaultTopicPartitionNum;
        this.deployType = $.deployType;
        this.diskSize = $.diskSize;
        this.diskType = $.diskType;
        this.eipMax = $.eipMax;
        this.enableAutoGroup = $.enableAutoGroup;
        this.enableAutoTopic = $.enableAutoTopic;
        this.instanceType = $.instanceType;
        this.ioMax = $.ioMax;
        this.ioMaxSpec = $.ioMaxSpec;
        this.kmsKeyId = $.kmsKeyId;
        this.name = $.name;
        this.paidType = $.paidType;
        this.partitionNum = $.partitionNum;
        this.password = $.password;
        this.resourceGroupId = $.resourceGroupId;
        this.securityGroup = $.securityGroup;
        this.selectedZones = $.selectedZones;
        this.serverlessConfig = $.serverlessConfig;
        this.serviceVersion = $.serviceVersion;
        this.specType = $.specType;
        this.tags = $.tags;
        this.topicQuota = $.topicQuota;
        this.vpcId = $.vpcId;
        this.vswitchId = $.vswitchId;
        this.vswitchIds = $.vswitchIds;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceArgs $;

        public Builder() {
            $ = new InstanceArgs();
        }

        public Builder(InstanceArgs defaults) {
            $ = new InstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param config The initial configurations of the ApsaraMQ for Kafka instance. The values must be valid JSON strings.
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<String> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config The initial configurations of the ApsaraMQ for Kafka instance. The values must be valid JSON strings.
         * 
         * @return builder
         * 
         */
        public Builder config(String config) {
            return config(Output.of(config));
        }

        /**
         * @param confluentConfig The configurations of Confluent. See `confluent_config` below.
         * &gt; **NOTE:** If `instance_type` is set to `alikafka_confluent`, `confluent_config` is required.
         * 
         * @return builder
         * 
         */
        public Builder confluentConfig(@Nullable Output<InstanceConfluentConfigArgs> confluentConfig) {
            $.confluentConfig = confluentConfig;
            return this;
        }

        /**
         * @param confluentConfig The configurations of Confluent. See `confluent_config` below.
         * &gt; **NOTE:** If `instance_type` is set to `alikafka_confluent`, `confluent_config` is required.
         * 
         * @return builder
         * 
         */
        public Builder confluentConfig(InstanceConfluentConfigArgs confluentConfig) {
            return confluentConfig(Output.of(confluentConfig));
        }

        /**
         * @param defaultTopicPartitionNum The number of partitions in a topic that is automatically created.
         * 
         * @return builder
         * 
         */
        public Builder defaultTopicPartitionNum(@Nullable Output<Integer> defaultTopicPartitionNum) {
            $.defaultTopicPartitionNum = defaultTopicPartitionNum;
            return this;
        }

        /**
         * @param defaultTopicPartitionNum The number of partitions in a topic that is automatically created.
         * 
         * @return builder
         * 
         */
        public Builder defaultTopicPartitionNum(Integer defaultTopicPartitionNum) {
            return defaultTopicPartitionNum(Output.of(defaultTopicPartitionNum));
        }

        /**
         * @param deployType The deployment type of the instance. **NOTE:** From version 1.161.0, this attribute supports to be updated. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder deployType(Output<Integer> deployType) {
            $.deployType = deployType;
            return this;
        }

        /**
         * @param deployType The deployment type of the instance. **NOTE:** From version 1.161.0, this attribute supports to be updated. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder deployType(Integer deployType) {
            return deployType(Output.of(deployType));
        }

        /**
         * @param diskSize The disk size of the instance. When modify this value, it only supports adjust to a greater value.
         * &gt; **NOTE:** If `instance_type` is set to `alikafka`, `disk_size` is required.
         * 
         * @return builder
         * 
         */
        public Builder diskSize(@Nullable Output<Integer> diskSize) {
            $.diskSize = diskSize;
            return this;
        }

        /**
         * @param diskSize The disk size of the instance. When modify this value, it only supports adjust to a greater value.
         * &gt; **NOTE:** If `instance_type` is set to `alikafka`, `disk_size` is required.
         * 
         * @return builder
         * 
         */
        public Builder diskSize(Integer diskSize) {
            return diskSize(Output.of(diskSize));
        }

        /**
         * @param diskType The disk type of the instance. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder diskType(@Nullable Output<Integer> diskType) {
            $.diskType = diskType;
            return this;
        }

        /**
         * @param diskType The disk type of the instance. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder diskType(Integer diskType) {
            return diskType(Output.of(diskType));
        }

        /**
         * @param eipMax The max bandwidth of the instance. It will be ignored when `deploy_type = 5`. When modify this value, it only supports adjust to a greater value.
         * 
         * @return builder
         * 
         */
        public Builder eipMax(@Nullable Output<Integer> eipMax) {
            $.eipMax = eipMax;
            return this;
        }

        /**
         * @param eipMax The max bandwidth of the instance. It will be ignored when `deploy_type = 5`. When modify this value, it only supports adjust to a greater value.
         * 
         * @return builder
         * 
         */
        public Builder eipMax(Integer eipMax) {
            return eipMax(Output.of(eipMax));
        }

        /**
         * @param enableAutoGroup Specify whether to enable the flexible group creation feature. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder enableAutoGroup(@Nullable Output<Boolean> enableAutoGroup) {
            $.enableAutoGroup = enableAutoGroup;
            return this;
        }

        /**
         * @param enableAutoGroup Specify whether to enable the flexible group creation feature. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder enableAutoGroup(Boolean enableAutoGroup) {
            return enableAutoGroup(Output.of(enableAutoGroup));
        }

        /**
         * @param enableAutoTopic Specify whether to enable the automatic topic creation feature. Default value: `disable`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder enableAutoTopic(@Nullable Output<String> enableAutoTopic) {
            $.enableAutoTopic = enableAutoTopic;
            return this;
        }

        /**
         * @param enableAutoTopic Specify whether to enable the automatic topic creation feature. Default value: `disable`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder enableAutoTopic(String enableAutoTopic) {
            return enableAutoTopic(Output.of(enableAutoTopic));
        }

        /**
         * @param instanceType The type of the Instance. Default value: `alikafka`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType The type of the Instance. Default value: `alikafka`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param ioMax The max value of io of the instance. When modify this value, it only support adjust to a greater value.
         * 
         * @return builder
         * 
         */
        public Builder ioMax(@Nullable Output<Integer> ioMax) {
            $.ioMax = ioMax;
            return this;
        }

        /**
         * @param ioMax The max value of io of the instance. When modify this value, it only support adjust to a greater value.
         * 
         * @return builder
         * 
         */
        public Builder ioMax(Integer ioMax) {
            return ioMax(Output.of(ioMax));
        }

        /**
         * @param ioMaxSpec The traffic specification of the instance. We recommend that you configure this parameter.
         * - You should specify one of the `io_max` and `io_max_spec` parameters, and `io_max_spec` is recommended.
         * - For more information about the valid values, see [Billing](https://www.alibabacloud.com/help/en/message-queue-for-apache-kafka/latest/billing-overview).
         * 
         * @return builder
         * 
         */
        public Builder ioMaxSpec(@Nullable Output<String> ioMaxSpec) {
            $.ioMaxSpec = ioMaxSpec;
            return this;
        }

        /**
         * @param ioMaxSpec The traffic specification of the instance. We recommend that you configure this parameter.
         * - You should specify one of the `io_max` and `io_max_spec` parameters, and `io_max_spec` is recommended.
         * - For more information about the valid values, see [Billing](https://www.alibabacloud.com/help/en/message-queue-for-apache-kafka/latest/billing-overview).
         * 
         * @return builder
         * 
         */
        public Builder ioMaxSpec(String ioMaxSpec) {
            return ioMaxSpec(Output.of(ioMaxSpec));
        }

        /**
         * @param kmsKeyId The ID of the key that is used to encrypt data on standard SSDs in the region of the instance. For more information, see [How to use it](https://www.alibabacloud.com/help/en/apsaramq-for-kafka/cloud-message-queue-for-kafka/developer-reference/api-alikafka-2019-09-16-updateinstanceconfig).
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        /**
         * @param kmsKeyId The ID of the key that is used to encrypt data on standard SSDs in the region of the instance. For more information, see [How to use it](https://www.alibabacloud.com/help/en/apsaramq-for-kafka/cloud-message-queue-for-kafka/developer-reference/api-alikafka-2019-09-16-updateinstanceconfig).
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        /**
         * @param name Name of your Kafka instance. The length should between 3 and 64 characters. If not set, will use instance id as instance name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of your Kafka instance. The length should between 3 and 64 characters. If not set, will use instance id as instance name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param paidType The billing method of the instance. Default value: `PostPaid`. Valid values: `PostPaid`, `PrePaid`. When modify this value, it only support adjust from `PostPaid` to `PrePaid`.
         * 
         * @return builder
         * 
         */
        public Builder paidType(@Nullable Output<String> paidType) {
            $.paidType = paidType;
            return this;
        }

        /**
         * @param paidType The billing method of the instance. Default value: `PostPaid`. Valid values: `PostPaid`, `PrePaid`. When modify this value, it only support adjust from `PostPaid` to `PrePaid`.
         * 
         * @return builder
         * 
         */
        public Builder paidType(String paidType) {
            return paidType(Output.of(paidType));
        }

        /**
         * @param partitionNum The number of partitions.
         * 
         * @return builder
         * 
         */
        public Builder partitionNum(@Nullable Output<Integer> partitionNum) {
            $.partitionNum = partitionNum;
            return this;
        }

        /**
         * @param partitionNum The number of partitions.
         * 
         * @return builder
         * 
         */
        public Builder partitionNum(Integer partitionNum) {
            return partitionNum(Output.of(partitionNum));
        }

        /**
         * @param password The instance password. **NOTE:** If `instance_type` is set to `alikafka_confluent`, `password` is required.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The instance password. **NOTE:** If `instance_type` is set to `alikafka_confluent`, `password` is required.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param resourceGroupId The ID of the resource group. **Note:** Once you set a value of this property, you cannot set it to an empty string anymore.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group. **Note:** Once you set a value of this property, you cannot set it to an empty string anymore.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param securityGroup The ID of security group for this instance. If the security group is empty, system will create a default one.
         * 
         * @return builder
         * 
         */
        public Builder securityGroup(@Nullable Output<String> securityGroup) {
            $.securityGroup = securityGroup;
            return this;
        }

        /**
         * @param securityGroup The ID of security group for this instance. If the security group is empty, system will create a default one.
         * 
         * @return builder
         * 
         */
        public Builder securityGroup(String securityGroup) {
            return securityGroup(Output.of(securityGroup));
        }

        /**
         * @param selectedZones The zones among which you want to deploy the instance. For more information, see [How to use it](https://www.alibabacloud.com/help/en/apsaramq-for-kafka/cloud-message-queue-for-kafka/developer-reference/api-alikafka-2019-09-16-startinstance).
         * 
         * @return builder
         * 
         */
        public Builder selectedZones(@Nullable Output<List<String>> selectedZones) {
            $.selectedZones = selectedZones;
            return this;
        }

        /**
         * @param selectedZones The zones among which you want to deploy the instance. For more information, see [How to use it](https://www.alibabacloud.com/help/en/apsaramq-for-kafka/cloud-message-queue-for-kafka/developer-reference/api-alikafka-2019-09-16-startinstance).
         * 
         * @return builder
         * 
         */
        public Builder selectedZones(List<String> selectedZones) {
            return selectedZones(Output.of(selectedZones));
        }

        /**
         * @param selectedZones The zones among which you want to deploy the instance. For more information, see [How to use it](https://www.alibabacloud.com/help/en/apsaramq-for-kafka/cloud-message-queue-for-kafka/developer-reference/api-alikafka-2019-09-16-startinstance).
         * 
         * @return builder
         * 
         */
        public Builder selectedZones(String... selectedZones) {
            return selectedZones(List.of(selectedZones));
        }

        /**
         * @param serverlessConfig The parameters configured for the serverless ApsaraMQ for Kafka instance. See `serverless_config` below.
         * &gt; **NOTE:** If `instance_type` is set to `alikafka_serverless`, `serverless_config` is required.
         * 
         * @return builder
         * 
         */
        public Builder serverlessConfig(@Nullable Output<InstanceServerlessConfigArgs> serverlessConfig) {
            $.serverlessConfig = serverlessConfig;
            return this;
        }

        /**
         * @param serverlessConfig The parameters configured for the serverless ApsaraMQ for Kafka instance. See `serverless_config` below.
         * &gt; **NOTE:** If `instance_type` is set to `alikafka_serverless`, `serverless_config` is required.
         * 
         * @return builder
         * 
         */
        public Builder serverlessConfig(InstanceServerlessConfigArgs serverlessConfig) {
            return serverlessConfig(Output.of(serverlessConfig));
        }

        /**
         * @param serviceVersion The version of the Instance. Valid values:
         * - If `instance_type` is set to `alikafka`. Default value: `2.2.0`. Valid values: `2.2.0`, `2.6.2`.
         * - If `instance_type` is set to `alikafka_serverless`. Default value: `3.3.1`. Valid values: `3.3.1`.
         * - If `instance_type` is set to `alikafka_confluent`. Default value: `7.4.0`. Valid values: `7.4.0`.
         * 
         * @return builder
         * 
         */
        public Builder serviceVersion(@Nullable Output<String> serviceVersion) {
            $.serviceVersion = serviceVersion;
            return this;
        }

        /**
         * @param serviceVersion The version of the Instance. Valid values:
         * - If `instance_type` is set to `alikafka`. Default value: `2.2.0`. Valid values: `2.2.0`, `2.6.2`.
         * - If `instance_type` is set to `alikafka_serverless`. Default value: `3.3.1`. Valid values: `3.3.1`.
         * - If `instance_type` is set to `alikafka_confluent`. Default value: `7.4.0`. Valid values: `7.4.0`.
         * 
         * @return builder
         * 
         */
        public Builder serviceVersion(String serviceVersion) {
            return serviceVersion(Output.of(serviceVersion));
        }

        /**
         * @param specType The instance edition. Default value: `normal`. Valid values:
         * - If `instance_type` is set to `alikafka`. Valid values: `normal`, `professional`, `professionalForHighRead`.
         * - If `instance_type` is set to `alikafka_serverless`. Valid values: `normal`.
         * - If `instance_type` is set to `alikafka_confluent`. Valid values: `professional`, `enterprise`.
         * 
         * @return builder
         * 
         */
        public Builder specType(@Nullable Output<String> specType) {
            $.specType = specType;
            return this;
        }

        /**
         * @param specType The instance edition. Default value: `normal`. Valid values:
         * - If `instance_type` is set to `alikafka`. Valid values: `normal`, `professional`, `professionalForHighRead`.
         * - If `instance_type` is set to `alikafka_serverless`. Valid values: `normal`.
         * - If `instance_type` is set to `alikafka_confluent`. Valid values: `professional`, `enterprise`.
         * 
         * @return builder
         * 
         */
        public Builder specType(String specType) {
            return specType(Output.of(specType));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param topicQuota The max num of topic can be creation of the instance.
         * It has been deprecated since version 1.194.0 and using `partition_num` instead.
         * Currently, its value only can be set to 50 when creating it, and finally depends on `partition_num` value: &lt;`topic_quota`&gt; = 1000 + &lt;`partition_num`&gt;.
         * Therefore, you can update it by updating the `partition_num`, and it is the only updating path.
         * 
         * @return builder
         * 
         * @deprecated
         * Attribute `topic_quota` has been deprecated since 1.194.0 and it will be removed in the next future. Using new attribute `partition_num` instead.
         * 
         */
        @Deprecated /* Attribute `topic_quota` has been deprecated since 1.194.0 and it will be removed in the next future. Using new attribute `partition_num` instead. */
        public Builder topicQuota(@Nullable Output<Integer> topicQuota) {
            $.topicQuota = topicQuota;
            return this;
        }

        /**
         * @param topicQuota The max num of topic can be creation of the instance.
         * It has been deprecated since version 1.194.0 and using `partition_num` instead.
         * Currently, its value only can be set to 50 when creating it, and finally depends on `partition_num` value: &lt;`topic_quota`&gt; = 1000 + &lt;`partition_num`&gt;.
         * Therefore, you can update it by updating the `partition_num`, and it is the only updating path.
         * 
         * @return builder
         * 
         * @deprecated
         * Attribute `topic_quota` has been deprecated since 1.194.0 and it will be removed in the next future. Using new attribute `partition_num` instead.
         * 
         */
        @Deprecated /* Attribute `topic_quota` has been deprecated since 1.194.0 and it will be removed in the next future. Using new attribute `partition_num` instead. */
        public Builder topicQuota(Integer topicQuota) {
            return topicQuota(Output.of(topicQuota));
        }

        /**
         * @param vpcId The VPC ID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The VPC ID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param vswitchId The ID of attaching vswitch to instance.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(@Nullable Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId The ID of attaching vswitch to instance.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        /**
         * @param vswitchIds The IDs of the vSwitches with which the instance is associated.
         * &gt; **NOTE:** If `instance_type` is set to `alikafka` or `alikafka_serverless`, `vswitch_ids` is required. When `instance_type` is set to `alikafka_confluent`, you must specify at least one of the `vswitch_id` and `vswitch_ids`, and if you specify both `vswitch_id` and `vswitch_ids`, only the `vswitch_ids` takes effect.
         * 
         * @return builder
         * 
         */
        public Builder vswitchIds(@Nullable Output<List<String>> vswitchIds) {
            $.vswitchIds = vswitchIds;
            return this;
        }

        /**
         * @param vswitchIds The IDs of the vSwitches with which the instance is associated.
         * &gt; **NOTE:** If `instance_type` is set to `alikafka` or `alikafka_serverless`, `vswitch_ids` is required. When `instance_type` is set to `alikafka_confluent`, you must specify at least one of the `vswitch_id` and `vswitch_ids`, and if you specify both `vswitch_id` and `vswitch_ids`, only the `vswitch_ids` takes effect.
         * 
         * @return builder
         * 
         */
        public Builder vswitchIds(List<String> vswitchIds) {
            return vswitchIds(Output.of(vswitchIds));
        }

        /**
         * @param vswitchIds The IDs of the vSwitches with which the instance is associated.
         * &gt; **NOTE:** If `instance_type` is set to `alikafka` or `alikafka_serverless`, `vswitch_ids` is required. When `instance_type` is set to `alikafka_confluent`, you must specify at least one of the `vswitch_id` and `vswitch_ids`, and if you specify both `vswitch_id` and `vswitch_ids`, only the `vswitch_ids` takes effect.
         * 
         * @return builder
         * 
         */
        public Builder vswitchIds(String... vswitchIds) {
            return vswitchIds(List.of(vswitchIds));
        }

        /**
         * @param zoneId The zone ID of the instance. The value can be in zone x or region id-x format. **NOTE**: When the available zone is insufficient, another availability zone may be deployed.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The zone ID of the instance. The value can be in zone x or region id-x format. **NOTE**: When the available zone is insufficient, another availability zone may be deployed.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public InstanceArgs build() {
            if ($.deployType == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "deployType");
            }
            return $;
        }
    }

}
