// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.gpdb;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.gpdb.JdbcDataSourceArgs;
import com.pulumi.alicloud.gpdb.inputs.JdbcDataSourceState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a GPDB Jdbc Data Source resource.
 * 
 * For information about GPDB Jdbc Data Source and how to use it, see [What is Jdbc Data Source](https://www.alibabacloud.com/help/en/).
 * 
 * &gt; **NOTE:** Available since v1.230.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.vpc.VpcFunctions;
 * import com.pulumi.alicloud.vpc.inputs.GetNetworksArgs;
 * import com.pulumi.alicloud.vpc.inputs.GetSwitchesArgs;
 * import com.pulumi.alicloud.gpdb.Instance;
 * import com.pulumi.alicloud.gpdb.InstanceArgs;
 * import com.pulumi.alicloud.gpdb.Account;
 * import com.pulumi.alicloud.gpdb.AccountArgs;
 * import com.pulumi.alicloud.gpdb.ExternalDataService;
 * import com.pulumi.alicloud.gpdb.ExternalDataServiceArgs;
 * import com.pulumi.alicloud.gpdb.JdbcDataSource;
 * import com.pulumi.alicloud.gpdb.JdbcDataSourceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
 *             .availableResourceCreation("VSwitch")
 *             .build());
 * 
 *         final var defaultGetNetworks = VpcFunctions.getNetworks(GetNetworksArgs.builder()
 *             .nameRegex("^default-NODELETING$")
 *             .build());
 * 
 *         final var defaultGetSwitches = VpcFunctions.getSwitches(GetSwitchesArgs.builder()
 *             .vpcId(defaultGetNetworks.ids()[0])
 *             .zoneId("cn-beijing-h")
 *             .build());
 * 
 *         var defaulttuqTmM = new Instance("defaulttuqTmM", InstanceArgs.builder()
 *             .instanceSpec("2C8G")
 *             .description(name)
 *             .segNodeNum(2)
 *             .segStorageType("cloud_essd")
 *             .instanceNetworkType("VPC")
 *             .paymentType("PayAsYouGo")
 *             .sslEnabled(0)
 *             .engineVersion("6.0")
 *             .zoneId("cn-beijing-h")
 *             .vswitchId(defaultGetSwitches.ids()[0])
 *             .storageSize(50)
 *             .masterCu(4)
 *             .vpcId(defaultGetNetworks.ids()[0])
 *             .dbInstanceMode("StorageElastic")
 *             .engine("gpdb")
 *             .dbInstanceCategory("Basic")
 *             .build());
 * 
 *         var defaultsk1eaS = new Account("defaultsk1eaS", AccountArgs.builder()
 *             .accountDescription("example_001")
 *             .dbInstanceId(defaulttuqTmM.id())
 *             .accountName("example_001")
 *             .accountPassword("example_001")
 *             .build());
 * 
 *         var defaultRXkfKL = new ExternalDataService("defaultRXkfKL", ExternalDataServiceArgs.builder()
 *             .serviceName(name)
 *             .dbInstanceId(defaulttuqTmM.id())
 *             .serviceDescription("myexample")
 *             .serviceSpec("8")
 *             .build());
 * 
 *         var defaultJdbcDataSource = new JdbcDataSource("defaultJdbcDataSource", JdbcDataSourceArgs.builder()
 *             .jdbcConnectionString("jdbc:mysql://rm-2ze327yr44c61183c.mysql.rds.aliyuncs.com:3306/example_001")
 *             .dataSourceDescription("myexample")
 *             .dbInstanceId(defaulttuqTmM.id())
 *             .jdbcPassword("example_001")
 *             .dataSourceName(defaultRXkfKL.serviceName())
 *             .dataSourceType("mysql")
 *             .jdbcUserName("example_001")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * GPDB Jdbc Data Source can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:gpdb/jdbcDataSource:JdbcDataSource example &lt;db_instance_id&gt;:&lt;data_source_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:gpdb/jdbcDataSource:JdbcDataSource")
public class JdbcDataSource extends com.pulumi.resources.CustomResource {
    /**
     * The creation time of the resource
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The creation time of the resource
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Data Source Description
     * 
     */
    @Export(name="dataSourceDescription", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dataSourceDescription;

    /**
     * @return Data Source Description
     * 
     */
    public Output<Optional<String>> dataSourceDescription() {
        return Codegen.optional(this.dataSourceDescription);
    }
    /**
     * The data source ID.
     * 
     */
    @Export(name="dataSourceId", refs={String.class}, tree="[0]")
    private Output<String> dataSourceId;

    /**
     * @return The data source ID.
     * 
     */
    public Output<String> dataSourceId() {
        return this.dataSourceId;
    }
    /**
     * Data Source Name
     * 
     */
    @Export(name="dataSourceName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dataSourceName;

    /**
     * @return Data Source Name
     * 
     */
    public Output<Optional<String>> dataSourceName() {
        return Codegen.optional(this.dataSourceName);
    }
    /**
     * Data Source Type
     * 
     */
    @Export(name="dataSourceType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dataSourceType;

    /**
     * @return Data Source Type
     * 
     */
    public Output<Optional<String>> dataSourceType() {
        return Codegen.optional(this.dataSourceType);
    }
    /**
     * The instance ID.
     * 
     */
    @Export(name="dbInstanceId", refs={String.class}, tree="[0]")
    private Output<String> dbInstanceId;

    /**
     * @return The instance ID.
     * 
     */
    public Output<String> dbInstanceId() {
        return this.dbInstanceId;
    }
    /**
     * The JDBC connection string.
     * 
     */
    @Export(name="jdbcConnectionString", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> jdbcConnectionString;

    /**
     * @return The JDBC connection string.
     * 
     */
    public Output<Optional<String>> jdbcConnectionString() {
        return Codegen.optional(this.jdbcConnectionString);
    }
    /**
     * The password of the database account.
     * 
     */
    @Export(name="jdbcPassword", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> jdbcPassword;

    /**
     * @return The password of the database account.
     * 
     */
    public Output<Optional<String>> jdbcPassword() {
        return Codegen.optional(this.jdbcPassword);
    }
    /**
     * The name of the database account.
     * 
     */
    @Export(name="jdbcUserName", refs={String.class}, tree="[0]")
    private Output<String> jdbcUserName;

    /**
     * @return The name of the database account.
     * 
     */
    public Output<String> jdbcUserName() {
        return this.jdbcUserName;
    }
    /**
     * Data Source Status
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return Data Source Status
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public JdbcDataSource(java.lang.String name) {
        this(name, JdbcDataSourceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public JdbcDataSource(java.lang.String name, JdbcDataSourceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public JdbcDataSource(java.lang.String name, JdbcDataSourceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:gpdb/jdbcDataSource:JdbcDataSource", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private JdbcDataSource(java.lang.String name, Output<java.lang.String> id, @Nullable JdbcDataSourceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:gpdb/jdbcDataSource:JdbcDataSource", name, state, makeResourceOptions(options, id), false);
    }

    private static JdbcDataSourceArgs makeArgs(JdbcDataSourceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? JdbcDataSourceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static JdbcDataSource get(java.lang.String name, Output<java.lang.String> id, @Nullable JdbcDataSourceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new JdbcDataSource(name, id, state, options);
    }
}
