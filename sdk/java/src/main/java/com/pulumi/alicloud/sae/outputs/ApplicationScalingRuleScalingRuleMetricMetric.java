// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sae.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationScalingRuleScalingRuleMetricMetric {
    /**
     * @return According to different `metric_type`, set the target value of the corresponding monitoring index.
     * 
     */
    private @Nullable Integer metricTargetAverageUtilization;
    /**
     * @return Monitoring indicator trigger condition. Valid values: `CPU`, `MEMORY`, `tcpActiveConn`, `SLB_QPS` and `SLB_RT`. The values are described as follows:
     * - CPU: CPU usage.
     * - MEMORY: MEMORY usage.
     * - tcpActiveConn: the average number of TCP active connections for a single instance in 30 seconds.
     * - SLB_QPS: the average public network SLB QPS of a single instance within 15 seconds.
     * - SLB_RT: the average response time of public network SLB within 15 seconds.
     * 
     */
    private @Nullable String metricType;

    private ApplicationScalingRuleScalingRuleMetricMetric() {}
    /**
     * @return According to different `metric_type`, set the target value of the corresponding monitoring index.
     * 
     */
    public Optional<Integer> metricTargetAverageUtilization() {
        return Optional.ofNullable(this.metricTargetAverageUtilization);
    }
    /**
     * @return Monitoring indicator trigger condition. Valid values: `CPU`, `MEMORY`, `tcpActiveConn`, `SLB_QPS` and `SLB_RT`. The values are described as follows:
     * - CPU: CPU usage.
     * - MEMORY: MEMORY usage.
     * - tcpActiveConn: the average number of TCP active connections for a single instance in 30 seconds.
     * - SLB_QPS: the average public network SLB QPS of a single instance within 15 seconds.
     * - SLB_RT: the average response time of public network SLB within 15 seconds.
     * 
     */
    public Optional<String> metricType() {
        return Optional.ofNullable(this.metricType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationScalingRuleScalingRuleMetricMetric defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer metricTargetAverageUtilization;
        private @Nullable String metricType;
        public Builder() {}
        public Builder(ApplicationScalingRuleScalingRuleMetricMetric defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.metricTargetAverageUtilization = defaults.metricTargetAverageUtilization;
    	      this.metricType = defaults.metricType;
        }

        @CustomType.Setter
        public Builder metricTargetAverageUtilization(@Nullable Integer metricTargetAverageUtilization) {
            this.metricTargetAverageUtilization = metricTargetAverageUtilization;
            return this;
        }
        @CustomType.Setter
        public Builder metricType(@Nullable String metricType) {
            this.metricType = metricType;
            return this;
        }
        public ApplicationScalingRuleScalingRuleMetricMetric build() {
            final var o = new ApplicationScalingRuleScalingRuleMetricMetric();
            o.metricTargetAverageUtilization = metricTargetAverageUtilization;
            o.metricType = metricType;
            return o;
        }
    }
}
