// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.cen.InterRegionTrafficQosQueueArgs;
import com.pulumi.alicloud.cen.inputs.InterRegionTrafficQosQueueState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Cloud Enterprise Network (CEN) Inter Region Traffic Qos Queue resource.
 * 
 * For information about Cloud Enterprise Network (CEN) Inter Region Traffic Qos Queue and how to use it, see [What is Inter Region Traffic Qos Queue](https://next.api.alibabacloud.com/document/Cbn/2017-09-12/CreateCenInterRegionTrafficQosQueue).
 * 
 * &gt; **NOTE:** Available since v1.195.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.cen.Instance;
 * import com.pulumi.alicloud.cen.InstanceArgs;
 * import com.pulumi.alicloud.cen.BandwidthPackage;
 * import com.pulumi.alicloud.cen.BandwidthPackageArgs;
 * import com.pulumi.alicloud.cen.BandwidthPackageAttachment;
 * import com.pulumi.alicloud.cen.BandwidthPackageAttachmentArgs;
 * import com.pulumi.alicloud.cen.TransitRouter;
 * import com.pulumi.alicloud.cen.TransitRouterArgs;
 * import com.pulumi.alicloud.cen.TransitRouterPeerAttachment;
 * import com.pulumi.alicloud.cen.TransitRouterPeerAttachmentArgs;
 * import com.pulumi.alicloud.cen.InterRegionTrafficQosPolicy;
 * import com.pulumi.alicloud.cen.InterRegionTrafficQosPolicyArgs;
 * import com.pulumi.alicloud.cen.InterRegionTrafficQosQueue;
 * import com.pulumi.alicloud.cen.InterRegionTrafficQosQueueArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("tf_example");
 *         final var defaultRegion = config.get("defaultRegion").orElse("cn-hangzhou");
 *         final var peerRegion = config.get("peerRegion").orElse("cn-beijing");
 *         var default_ = new Instance("default", InstanceArgs.builder()
 *             .cenInstanceName(name)
 *             .protectionLevel("REDUCED")
 *             .build());
 * 
 *         var defaultBandwidthPackage = new BandwidthPackage("defaultBandwidthPackage", BandwidthPackageArgs.builder()
 *             .bandwidth(5)
 *             .cenBandwidthPackageName("tf_example")
 *             .geographicRegionAId("China")
 *             .geographicRegionBId("China")
 *             .build());
 * 
 *         var defaultBandwidthPackageAttachment = new BandwidthPackageAttachment("defaultBandwidthPackageAttachment", BandwidthPackageAttachmentArgs.builder()
 *             .instanceId(default_.id())
 *             .bandwidthPackageId(defaultBandwidthPackage.id())
 *             .build());
 * 
 *         var defaultTransitRouter = new TransitRouter("defaultTransitRouter", TransitRouterArgs.builder()
 *             .cenId(default_.id())
 *             .supportMulticast(true)
 *             .build());
 * 
 *         var peer = new TransitRouter("peer", TransitRouterArgs.builder()
 *             .cenId(defaultTransitRouter.cenId())
 *             .supportMulticast(true)
 *             .build());
 * 
 *         var defaultTransitRouterPeerAttachment = new TransitRouterPeerAttachment("defaultTransitRouterPeerAttachment", TransitRouterPeerAttachmentArgs.builder()
 *             .cenId(default_.id())
 *             .transitRouterId(defaultTransitRouter.transitRouterId())
 *             .peerTransitRouterRegionId(peerRegion)
 *             .peerTransitRouterId(peer.transitRouterId())
 *             .cenBandwidthPackageId(defaultBandwidthPackageAttachment.bandwidthPackageId())
 *             .bandwidth(5)
 *             .transitRouterAttachmentDescription(name)
 *             .transitRouterAttachmentName(name)
 *             .build());
 * 
 *         var defaultInterRegionTrafficQosPolicy = new InterRegionTrafficQosPolicy("defaultInterRegionTrafficQosPolicy", InterRegionTrafficQosPolicyArgs.builder()
 *             .transitRouterId(defaultTransitRouter.transitRouterId())
 *             .transitRouterAttachmentId(defaultTransitRouterPeerAttachment.transitRouterAttachmentId())
 *             .interRegionTrafficQosPolicyName(name)
 *             .interRegionTrafficQosPolicyDescription(name)
 *             .build());
 * 
 *         var defaultInterRegionTrafficQosQueue = new InterRegionTrafficQosQueue("defaultInterRegionTrafficQosQueue", InterRegionTrafficQosQueueArgs.builder()
 *             .remainBandwidthPercent(20)
 *             .trafficQosPolicyId(defaultInterRegionTrafficQosPolicy.id())
 *             .dscps(            
 *                 1,
 *                 2)
 *             .interRegionTrafficQosQueueDescription(name)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Cloud Enterprise Network (CEN) Inter Region Traffic Qos Queue can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:cen/interRegionTrafficQosQueue:InterRegionTrafficQosQueue example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:cen/interRegionTrafficQosQueue:InterRegionTrafficQosQueue")
public class InterRegionTrafficQosQueue extends com.pulumi.resources.CustomResource {
    /**
     * The guaranteed bandwidth value. If guaranteed by bandwidth is selected for TrafficQosPolicy, this value is valid.
     * 
     */
    @Export(name="bandwidth", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> bandwidth;

    /**
     * @return The guaranteed bandwidth value. If guaranteed by bandwidth is selected for TrafficQosPolicy, this value is valid.
     * 
     */
    public Output<Optional<String>> bandwidth() {
        return Codegen.optional(this.bandwidth);
    }
    /**
     * The DSCP value of the traffic packet to be matched in the current queue, ranging from 0 to 63.
     * 
     */
    @Export(name="dscps", refs={List.class,Integer.class}, tree="[0,1]")
    private Output<List<Integer>> dscps;

    /**
     * @return The DSCP value of the traffic packet to be matched in the current queue, ranging from 0 to 63.
     * 
     */
    public Output<List<Integer>> dscps() {
        return this.dscps;
    }
    /**
     * The description information of the traffic scheduling policy.
     * 
     */
    @Export(name="interRegionTrafficQosQueueDescription", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interRegionTrafficQosQueueDescription;

    /**
     * @return The description information of the traffic scheduling policy.
     * 
     */
    public Output<Optional<String>> interRegionTrafficQosQueueDescription() {
        return Codegen.optional(this.interRegionTrafficQosQueueDescription);
    }
    /**
     * The name of the traffic scheduling policy.
     * 
     */
    @Export(name="interRegionTrafficQosQueueName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interRegionTrafficQosQueueName;

    /**
     * @return The name of the traffic scheduling policy.
     * 
     */
    public Output<Optional<String>> interRegionTrafficQosQueueName() {
        return Codegen.optional(this.interRegionTrafficQosQueueName);
    }
    /**
     * The percentage of cross-region bandwidth that the current queue can use.
     * 
     */
    @Export(name="remainBandwidthPercent", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> remainBandwidthPercent;

    /**
     * @return The percentage of cross-region bandwidth that the current queue can use.
     * 
     */
    public Output<Optional<Integer>> remainBandwidthPercent() {
        return Codegen.optional(this.remainBandwidthPercent);
    }
    /**
     * The status of the traffic scheduling policy.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the traffic scheduling policy.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The ID of the traffic scheduling policy.
     * 
     */
    @Export(name="trafficQosPolicyId", refs={String.class}, tree="[0]")
    private Output<String> trafficQosPolicyId;

    /**
     * @return The ID of the traffic scheduling policy.
     * 
     */
    public Output<String> trafficQosPolicyId() {
        return this.trafficQosPolicyId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InterRegionTrafficQosQueue(java.lang.String name) {
        this(name, InterRegionTrafficQosQueueArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InterRegionTrafficQosQueue(java.lang.String name, InterRegionTrafficQosQueueArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InterRegionTrafficQosQueue(java.lang.String name, InterRegionTrafficQosQueueArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:cen/interRegionTrafficQosQueue:InterRegionTrafficQosQueue", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private InterRegionTrafficQosQueue(java.lang.String name, Output<java.lang.String> id, @Nullable InterRegionTrafficQosQueueState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:cen/interRegionTrafficQosQueue:InterRegionTrafficQosQueue", name, state, makeResourceOptions(options, id), false);
    }

    private static InterRegionTrafficQosQueueArgs makeArgs(InterRegionTrafficQosQueueArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? InterRegionTrafficQosQueueArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InterRegionTrafficQosQueue get(java.lang.String name, Output<java.lang.String> id, @Nullable InterRegionTrafficQosQueueState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InterRegionTrafficQosQueue(name, id, state, options);
    }
}
