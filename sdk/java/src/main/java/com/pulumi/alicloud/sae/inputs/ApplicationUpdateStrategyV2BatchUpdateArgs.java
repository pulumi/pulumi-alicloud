// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sae.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationUpdateStrategyV2BatchUpdateArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationUpdateStrategyV2BatchUpdateArgs Empty = new ApplicationUpdateStrategyV2BatchUpdateArgs();

    /**
     * The number of batches in which you want to release the instances.
     * 
     */
    @Import(name="batch")
    private @Nullable Output<Integer> batch;

    /**
     * @return The number of batches in which you want to release the instances.
     * 
     */
    public Optional<Output<Integer>> batch() {
        return Optional.ofNullable(this.batch);
    }

    /**
     * The batch wait time.
     * 
     */
    @Import(name="batchWaitTime")
    private @Nullable Output<Integer> batchWaitTime;

    /**
     * @return The batch wait time.
     * 
     */
    public Optional<Output<Integer>> batchWaitTime() {
        return Optional.ofNullable(this.batchWaitTime);
    }

    /**
     * The processing method for the batches. Valid values: `auto` and `manual`.
     * 
     */
    @Import(name="releaseType")
    private @Nullable Output<String> releaseType;

    /**
     * @return The processing method for the batches. Valid values: `auto` and `manual`.
     * 
     */
    public Optional<Output<String>> releaseType() {
        return Optional.ofNullable(this.releaseType);
    }

    private ApplicationUpdateStrategyV2BatchUpdateArgs() {}

    private ApplicationUpdateStrategyV2BatchUpdateArgs(ApplicationUpdateStrategyV2BatchUpdateArgs $) {
        this.batch = $.batch;
        this.batchWaitTime = $.batchWaitTime;
        this.releaseType = $.releaseType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationUpdateStrategyV2BatchUpdateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationUpdateStrategyV2BatchUpdateArgs $;

        public Builder() {
            $ = new ApplicationUpdateStrategyV2BatchUpdateArgs();
        }

        public Builder(ApplicationUpdateStrategyV2BatchUpdateArgs defaults) {
            $ = new ApplicationUpdateStrategyV2BatchUpdateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param batch The number of batches in which you want to release the instances.
         * 
         * @return builder
         * 
         */
        public Builder batch(@Nullable Output<Integer> batch) {
            $.batch = batch;
            return this;
        }

        /**
         * @param batch The number of batches in which you want to release the instances.
         * 
         * @return builder
         * 
         */
        public Builder batch(Integer batch) {
            return batch(Output.of(batch));
        }

        /**
         * @param batchWaitTime The batch wait time.
         * 
         * @return builder
         * 
         */
        public Builder batchWaitTime(@Nullable Output<Integer> batchWaitTime) {
            $.batchWaitTime = batchWaitTime;
            return this;
        }

        /**
         * @param batchWaitTime The batch wait time.
         * 
         * @return builder
         * 
         */
        public Builder batchWaitTime(Integer batchWaitTime) {
            return batchWaitTime(Output.of(batchWaitTime));
        }

        /**
         * @param releaseType The processing method for the batches. Valid values: `auto` and `manual`.
         * 
         * @return builder
         * 
         */
        public Builder releaseType(@Nullable Output<String> releaseType) {
            $.releaseType = releaseType;
            return this;
        }

        /**
         * @param releaseType The processing method for the batches. Valid values: `auto` and `manual`.
         * 
         * @return builder
         * 
         */
        public Builder releaseType(String releaseType) {
            return releaseType(Output.of(releaseType));
        }

        public ApplicationUpdateStrategyV2BatchUpdateArgs build() {
            return $;
        }
    }

}
