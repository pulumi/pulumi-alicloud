// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NodePoolTeeConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final NodePoolTeeConfigArgs Empty = new NodePoolTeeConfigArgs();

    /**
     * Specifies whether to enable confidential computing for the cluster.
     * 
     */
    @Import(name="teeEnable")
    private @Nullable Output<Boolean> teeEnable;

    /**
     * @return Specifies whether to enable confidential computing for the cluster.
     * 
     */
    public Optional<Output<Boolean>> teeEnable() {
        return Optional.ofNullable(this.teeEnable);
    }

    private NodePoolTeeConfigArgs() {}

    private NodePoolTeeConfigArgs(NodePoolTeeConfigArgs $) {
        this.teeEnable = $.teeEnable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NodePoolTeeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NodePoolTeeConfigArgs $;

        public Builder() {
            $ = new NodePoolTeeConfigArgs();
        }

        public Builder(NodePoolTeeConfigArgs defaults) {
            $ = new NodePoolTeeConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param teeEnable Specifies whether to enable confidential computing for the cluster.
         * 
         * @return builder
         * 
         */
        public Builder teeEnable(@Nullable Output<Boolean> teeEnable) {
            $.teeEnable = teeEnable;
            return this;
        }

        /**
         * @param teeEnable Specifies whether to enable confidential computing for the cluster.
         * 
         * @return builder
         * 
         */
        public Builder teeEnable(Boolean teeEnable) {
            return teeEnable(Output.of(teeEnable));
        }

        public NodePoolTeeConfigArgs build() {
            return $;
        }
    }

}
