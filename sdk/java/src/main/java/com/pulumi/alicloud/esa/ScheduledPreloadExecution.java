// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.esa.ScheduledPreloadExecutionArgs;
import com.pulumi.alicloud.esa.inputs.ScheduledPreloadExecutionState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a ESA Scheduled Preload Execution resource.
 * 
 * For information about ESA Scheduled Preload Execution and how to use it, see [What is Scheduled Preload Execution](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateScheduledPreloadExecutions).
 * 
 * &gt; **NOTE:** Available since v1.248.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.esa.EsaFunctions;
 * import com.pulumi.alicloud.esa.inputs.GetSitesArgs;
 * import com.pulumi.alicloud.esa.Site;
 * import com.pulumi.alicloud.esa.SiteArgs;
 * import com.pulumi.alicloud.esa.ScheduledPreloadJob;
 * import com.pulumi.alicloud.esa.ScheduledPreloadJobArgs;
 * import com.pulumi.alicloud.esa.ScheduledPreloadExecution;
 * import com.pulumi.alicloud.esa.ScheduledPreloadExecutionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var default = EsaFunctions.getSites(GetSitesArgs.builder()
 *             .planSubscribeType("enterpriseplan")
 *             .build());
 * 
 *         var defaultSite = new Site("defaultSite", SiteArgs.builder()
 *             .siteName("terraform.cn")
 *             .instanceId(default_.sites()[0].instanceId())
 *             .coverage("overseas")
 *             .accessType("NS")
 *             .build());
 * 
 *         var defaultScheduledPreloadJob = new ScheduledPreloadJob("defaultScheduledPreloadJob", ScheduledPreloadJobArgs.builder()
 *             .insertWay("textBox")
 *             .siteId(defaultSite.id())
 *             .scheduledPreloadJobName("example_scheduledpreloadexecution_job")
 *             .urlList("http://example.gositecdn.cn/example/example.txt")
 *             .build());
 * 
 *         var defaultScheduledPreloadExecution = new ScheduledPreloadExecution("defaultScheduledPreloadExecution", ScheduledPreloadExecutionArgs.builder()
 *             .sliceLen(5)
 *             .endTime("2024-06-04T10:02:09.000+08:00")
 *             .startTime("2024-06-04T00:00:00.000+08:00")
 *             .scheduledPreloadJobId(defaultScheduledPreloadJob.scheduledPreloadJobId())
 *             .interval(30)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ESA Scheduled Preload Execution can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:esa/scheduledPreloadExecution:ScheduledPreloadExecution example &lt;scheduled_preload_job_id&gt;:&lt;scheduled_preload_execution_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:esa/scheduledPreloadExecution:ScheduledPreloadExecution")
public class ScheduledPreloadExecution extends com.pulumi.resources.CustomResource {
    /**
     * The end time of the prefetch plan.
     * 
     */
    @Export(name="endTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> endTime;

    /**
     * @return The end time of the prefetch plan.
     * 
     */
    public Output<Optional<String>> endTime() {
        return Codegen.optional(this.endTime);
    }
    /**
     * The time interval between each batch execution. Unit: seconds.
     * 
     */
    @Export(name="interval", refs={Integer.class}, tree="[0]")
    private Output<Integer> interval;

    /**
     * @return The time interval between each batch execution. Unit: seconds.
     * 
     */
    public Output<Integer> interval() {
        return this.interval;
    }
    /**
     * The ID of the prefetch plan.
     * 
     */
    @Export(name="scheduledPreloadExecutionId", refs={String.class}, tree="[0]")
    private Output<String> scheduledPreloadExecutionId;

    /**
     * @return The ID of the prefetch plan.
     * 
     */
    public Output<String> scheduledPreloadExecutionId() {
        return this.scheduledPreloadExecutionId;
    }
    /**
     * The ID of the prefetch task.
     * 
     */
    @Export(name="scheduledPreloadJobId", refs={String.class}, tree="[0]")
    private Output<String> scheduledPreloadJobId;

    /**
     * @return The ID of the prefetch task.
     * 
     */
    public Output<String> scheduledPreloadJobId() {
        return this.scheduledPreloadJobId;
    }
    /**
     * The number of URLs prefetched in each batch.
     * 
     */
    @Export(name="sliceLen", refs={Integer.class}, tree="[0]")
    private Output<Integer> sliceLen;

    /**
     * @return The number of URLs prefetched in each batch.
     * 
     */
    public Output<Integer> sliceLen() {
        return this.sliceLen;
    }
    /**
     * The start time of the prefetch plan.
     * 
     */
    @Export(name="startTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> startTime;

    /**
     * @return The start time of the prefetch plan.
     * 
     */
    public Output<Optional<String>> startTime() {
        return Codegen.optional(this.startTime);
    }
    /**
     * The status of the prefetch plan, including the following statuses.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the prefetch plan, including the following statuses.
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ScheduledPreloadExecution(java.lang.String name) {
        this(name, ScheduledPreloadExecutionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ScheduledPreloadExecution(java.lang.String name, ScheduledPreloadExecutionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ScheduledPreloadExecution(java.lang.String name, ScheduledPreloadExecutionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:esa/scheduledPreloadExecution:ScheduledPreloadExecution", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ScheduledPreloadExecution(java.lang.String name, Output<java.lang.String> id, @Nullable ScheduledPreloadExecutionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:esa/scheduledPreloadExecution:ScheduledPreloadExecution", name, state, makeResourceOptions(options, id), false);
    }

    private static ScheduledPreloadExecutionArgs makeArgs(ScheduledPreloadExecutionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ScheduledPreloadExecutionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ScheduledPreloadExecution get(java.lang.String name, Output<java.lang.String> id, @Nullable ScheduledPreloadExecutionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ScheduledPreloadExecution(name, id, state, options);
    }
}
