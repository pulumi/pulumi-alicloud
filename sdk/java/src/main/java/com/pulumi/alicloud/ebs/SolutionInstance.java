// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ebs;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.ebs.SolutionInstanceArgs;
import com.pulumi.alicloud.ebs.inputs.SolutionInstanceState;
import com.pulumi.alicloud.ebs.outputs.SolutionInstanceParameter;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a EBS Solution Instance resource.
 * 
 * For information about EBS Solution Instance and how to use it, see [What is Solution Instance](https://www.alibabacloud.com/help/en/).
 * 
 * &gt; **NOTE:** Available since v1.216.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
 * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
 * import com.pulumi.alicloud.ebs.SolutionInstance;
 * import com.pulumi.alicloud.ebs.SolutionInstanceArgs;
 * import com.pulumi.alicloud.ebs.inputs.SolutionInstanceParameterArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         final var zoneId = config.get("zoneId").orElse("cn-shanghai-l");
 *         final var regionId = config.get("regionId").orElse("cn-shanghai");
 *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
 *             .build());
 * 
 *         var defaultSolutionInstance = new SolutionInstance("defaultSolutionInstance", SolutionInstanceArgs.builder()
 *             .solutionInstanceName(name)
 *             .resourceGroupId(default_.ids()[0])
 *             .description("description")
 *             .solutionId("mysql")
 *             .parameters(            
 *                 SolutionInstanceParameterArgs.builder()
 *                     .parameterKey("zoneId")
 *                     .parameterValue(zoneId)
 *                     .build(),
 *                 SolutionInstanceParameterArgs.builder()
 *                     .parameterKey("ecsType")
 *                     .parameterValue("ecs.c6.large")
 *                     .build(),
 *                 SolutionInstanceParameterArgs.builder()
 *                     .parameterKey("ecsImageId")
 *                     .parameterValue("CentOS_7")
 *                     .build(),
 *                 SolutionInstanceParameterArgs.builder()
 *                     .parameterKey("internetMaxBandwidthOut")
 *                     .parameterValue("100")
 *                     .build(),
 *                 SolutionInstanceParameterArgs.builder()
 *                     .parameterKey("internetChargeType")
 *                     .parameterValue("PayByTraffic")
 *                     .build(),
 *                 SolutionInstanceParameterArgs.builder()
 *                     .parameterKey("ecsPassword")
 *                     .parameterValue("Ebs12345")
 *                     .build(),
 *                 SolutionInstanceParameterArgs.builder()
 *                     .parameterKey("sysDiskType")
 *                     .parameterValue("cloud_essd")
 *                     .build(),
 *                 SolutionInstanceParameterArgs.builder()
 *                     .parameterKey("sysDiskPerformance")
 *                     .parameterValue("PL0")
 *                     .build(),
 *                 SolutionInstanceParameterArgs.builder()
 *                     .parameterKey("sysDiskSize")
 *                     .parameterValue("40")
 *                     .build(),
 *                 SolutionInstanceParameterArgs.builder()
 *                     .parameterKey("dataDiskType")
 *                     .parameterValue("cloud_essd")
 *                     .build(),
 *                 SolutionInstanceParameterArgs.builder()
 *                     .parameterKey("dataDiskPerformance")
 *                     .parameterValue("PL0")
 *                     .build(),
 *                 SolutionInstanceParameterArgs.builder()
 *                     .parameterKey("dataDiskSize")
 *                     .parameterValue("40")
 *                     .build(),
 *                 SolutionInstanceParameterArgs.builder()
 *                     .parameterKey("mysqlVersion")
 *                     .parameterValue("MySQL80")
 *                     .build(),
 *                 SolutionInstanceParameterArgs.builder()
 *                     .parameterKey("mysqlUser")
 *                     .parameterValue("root")
 *                     .build(),
 *                 SolutionInstanceParameterArgs.builder()
 *                     .parameterKey("mysqlPassword")
 *                     .parameterValue("Ebs12345")
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * EBS Solution Instance can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:ebs/solutionInstance:SolutionInstance example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:ebs/solutionInstance:SolutionInstance")
public class SolutionInstance extends com.pulumi.resources.CustomResource {
    /**
     * Solution Instance Creation Time.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return Solution Instance Creation Time.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Solution Instance Description.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Solution Instance Description.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Solution Instance Creation Parameters. See `parameters` below.
     * 
     */
    @Export(name="parameters", refs={List.class,SolutionInstanceParameter.class}, tree="[0,1]")
    private Output</* @Nullable */ List<SolutionInstanceParameter>> parameters;

    /**
     * @return Solution Instance Creation Parameters. See `parameters` below.
     * 
     */
    public Output<Optional<List<SolutionInstanceParameter>>> parameters() {
        return Codegen.optional(this.parameters);
    }
    /**
     * The ID of the resource group.
     * 
     */
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group.
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * Solution ID.
     * 
     */
    @Export(name="solutionId", refs={String.class}, tree="[0]")
    private Output<String> solutionId;

    /**
     * @return Solution ID.
     * 
     */
    public Output<String> solutionId() {
        return this.solutionId;
    }
    /**
     * Solution Instance Name.
     * 
     */
    @Export(name="solutionInstanceName", refs={String.class}, tree="[0]")
    private Output<String> solutionInstanceName;

    /**
     * @return Solution Instance Name.
     * 
     */
    public Output<String> solutionInstanceName() {
        return this.solutionInstanceName;
    }
    /**
     * The status of the resource.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the resource.
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SolutionInstance(java.lang.String name) {
        this(name, SolutionInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SolutionInstance(java.lang.String name, SolutionInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SolutionInstance(java.lang.String name, SolutionInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ebs/solutionInstance:SolutionInstance", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SolutionInstance(java.lang.String name, Output<java.lang.String> id, @Nullable SolutionInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ebs/solutionInstance:SolutionInstance", name, state, makeResourceOptions(options, id), false);
    }

    private static SolutionInstanceArgs makeArgs(SolutionInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SolutionInstanceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SolutionInstance get(java.lang.String name, Output<java.lang.String> id, @Nullable SolutionInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SolutionInstance(name, id, state, options);
    }
}
