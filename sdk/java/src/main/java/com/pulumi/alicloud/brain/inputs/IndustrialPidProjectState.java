// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.brain.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IndustrialPidProjectState extends com.pulumi.resources.ResourceArgs {

    public static final IndustrialPidProjectState Empty = new IndustrialPidProjectState();

    /**
     * The ID of Pid Organization.
     * 
     */
    @Import(name="pidOrganizationId")
    private @Nullable Output<String> pidOrganizationId;

    /**
     * @return The ID of Pid Organization.
     * 
     */
    public Optional<Output<String>> pidOrganizationId() {
        return Optional.ofNullable(this.pidOrganizationId);
    }

    /**
     * The description of Pid Project.
     * 
     */
    @Import(name="pidProjectDesc")
    private @Nullable Output<String> pidProjectDesc;

    /**
     * @return The description of Pid Project.
     * 
     */
    public Optional<Output<String>> pidProjectDesc() {
        return Optional.ofNullable(this.pidProjectDesc);
    }

    /**
     * The name of Pid Project.
     * 
     */
    @Import(name="pidProjectName")
    private @Nullable Output<String> pidProjectName;

    /**
     * @return The name of Pid Project.
     * 
     */
    public Optional<Output<String>> pidProjectName() {
        return Optional.ofNullable(this.pidProjectName);
    }

    private IndustrialPidProjectState() {}

    private IndustrialPidProjectState(IndustrialPidProjectState $) {
        this.pidOrganizationId = $.pidOrganizationId;
        this.pidProjectDesc = $.pidProjectDesc;
        this.pidProjectName = $.pidProjectName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IndustrialPidProjectState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IndustrialPidProjectState $;

        public Builder() {
            $ = new IndustrialPidProjectState();
        }

        public Builder(IndustrialPidProjectState defaults) {
            $ = new IndustrialPidProjectState(Objects.requireNonNull(defaults));
        }

        /**
         * @param pidOrganizationId The ID of Pid Organization.
         * 
         * @return builder
         * 
         */
        public Builder pidOrganizationId(@Nullable Output<String> pidOrganizationId) {
            $.pidOrganizationId = pidOrganizationId;
            return this;
        }

        /**
         * @param pidOrganizationId The ID of Pid Organization.
         * 
         * @return builder
         * 
         */
        public Builder pidOrganizationId(String pidOrganizationId) {
            return pidOrganizationId(Output.of(pidOrganizationId));
        }

        /**
         * @param pidProjectDesc The description of Pid Project.
         * 
         * @return builder
         * 
         */
        public Builder pidProjectDesc(@Nullable Output<String> pidProjectDesc) {
            $.pidProjectDesc = pidProjectDesc;
            return this;
        }

        /**
         * @param pidProjectDesc The description of Pid Project.
         * 
         * @return builder
         * 
         */
        public Builder pidProjectDesc(String pidProjectDesc) {
            return pidProjectDesc(Output.of(pidProjectDesc));
        }

        /**
         * @param pidProjectName The name of Pid Project.
         * 
         * @return builder
         * 
         */
        public Builder pidProjectName(@Nullable Output<String> pidProjectName) {
            $.pidProjectName = pidProjectName;
            return this;
        }

        /**
         * @param pidProjectName The name of Pid Project.
         * 
         * @return builder
         * 
         */
        public Builder pidProjectName(String pidProjectName) {
            return pidProjectName(Output.of(pidProjectName));
        }

        public IndustrialPidProjectState build() {
            return $;
        }
    }

}
