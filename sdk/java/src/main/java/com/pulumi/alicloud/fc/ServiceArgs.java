// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc;

import com.pulumi.alicloud.fc.inputs.ServiceLogConfigArgs;
import com.pulumi.alicloud.fc.inputs.ServiceNasConfigArgs;
import com.pulumi.alicloud.fc.inputs.ServiceTracingConfigArgs;
import com.pulumi.alicloud.fc.inputs.ServiceVpcConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceArgs Empty = new ServiceArgs();

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="internetAccess")
    private @Nullable Output<Boolean> internetAccess;

    public Optional<Output<Boolean>> internetAccess() {
        return Optional.ofNullable(this.internetAccess);
    }

    @Import(name="logConfig")
    private @Nullable Output<ServiceLogConfigArgs> logConfig;

    public Optional<Output<ServiceLogConfigArgs>> logConfig() {
        return Optional.ofNullable(this.logConfig);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="namePrefix")
    private @Nullable Output<String> namePrefix;

    public Optional<Output<String>> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    @Import(name="nasConfig")
    private @Nullable Output<ServiceNasConfigArgs> nasConfig;

    public Optional<Output<ServiceNasConfigArgs>> nasConfig() {
        return Optional.ofNullable(this.nasConfig);
    }

    @Import(name="publish")
    private @Nullable Output<Boolean> publish;

    public Optional<Output<Boolean>> publish() {
        return Optional.ofNullable(this.publish);
    }

    @Import(name="role")
    private @Nullable Output<String> role;

    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tracingConfig")
    private @Nullable Output<ServiceTracingConfigArgs> tracingConfig;

    public Optional<Output<ServiceTracingConfigArgs>> tracingConfig() {
        return Optional.ofNullable(this.tracingConfig);
    }

    @Import(name="vpcConfig")
    private @Nullable Output<ServiceVpcConfigArgs> vpcConfig;

    public Optional<Output<ServiceVpcConfigArgs>> vpcConfig() {
        return Optional.ofNullable(this.vpcConfig);
    }

    private ServiceArgs() {}

    private ServiceArgs(ServiceArgs $) {
        this.description = $.description;
        this.internetAccess = $.internetAccess;
        this.logConfig = $.logConfig;
        this.name = $.name;
        this.namePrefix = $.namePrefix;
        this.nasConfig = $.nasConfig;
        this.publish = $.publish;
        this.role = $.role;
        this.tags = $.tags;
        this.tracingConfig = $.tracingConfig;
        this.vpcConfig = $.vpcConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceArgs $;

        public Builder() {
            $ = new ServiceArgs();
        }

        public Builder(ServiceArgs defaults) {
            $ = new ServiceArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder internetAccess(@Nullable Output<Boolean> internetAccess) {
            $.internetAccess = internetAccess;
            return this;
        }

        public Builder internetAccess(Boolean internetAccess) {
            return internetAccess(Output.of(internetAccess));
        }

        public Builder logConfig(@Nullable Output<ServiceLogConfigArgs> logConfig) {
            $.logConfig = logConfig;
            return this;
        }

        public Builder logConfig(ServiceLogConfigArgs logConfig) {
            return logConfig(Output.of(logConfig));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        public Builder namePrefix(String namePrefix) {
            return namePrefix(Output.of(namePrefix));
        }

        public Builder nasConfig(@Nullable Output<ServiceNasConfigArgs> nasConfig) {
            $.nasConfig = nasConfig;
            return this;
        }

        public Builder nasConfig(ServiceNasConfigArgs nasConfig) {
            return nasConfig(Output.of(nasConfig));
        }

        public Builder publish(@Nullable Output<Boolean> publish) {
            $.publish = publish;
            return this;
        }

        public Builder publish(Boolean publish) {
            return publish(Output.of(publish));
        }

        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        public Builder role(String role) {
            return role(Output.of(role));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tracingConfig(@Nullable Output<ServiceTracingConfigArgs> tracingConfig) {
            $.tracingConfig = tracingConfig;
            return this;
        }

        public Builder tracingConfig(ServiceTracingConfigArgs tracingConfig) {
            return tracingConfig(Output.of(tracingConfig));
        }

        public Builder vpcConfig(@Nullable Output<ServiceVpcConfigArgs> vpcConfig) {
            $.vpcConfig = vpcConfig;
            return this;
        }

        public Builder vpcConfig(ServiceVpcConfigArgs vpcConfig) {
            return vpcConfig(Output.of(vpcConfig));
        }

        public ServiceArgs build() {
            return $;
        }
    }

}
