// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dns.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAddressPoolsPoolAddress {
    private String address;
    private String attributeInfo;
    private Integer lbaWeight;
    private String mode;
    private String remark;

    private GetAddressPoolsPoolAddress() {}
    public String address() {
        return this.address;
    }
    public String attributeInfo() {
        return this.attributeInfo;
    }
    public Integer lbaWeight() {
        return this.lbaWeight;
    }
    public String mode() {
        return this.mode;
    }
    public String remark() {
        return this.remark;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAddressPoolsPoolAddress defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String address;
        private String attributeInfo;
        private Integer lbaWeight;
        private String mode;
        private String remark;
        public Builder() {}
        public Builder(GetAddressPoolsPoolAddress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.attributeInfo = defaults.attributeInfo;
    	      this.lbaWeight = defaults.lbaWeight;
    	      this.mode = defaults.mode;
    	      this.remark = defaults.remark;
        }

        @CustomType.Setter
        public Builder address(String address) {
            if (address == null) {
              throw new MissingRequiredPropertyException("GetAddressPoolsPoolAddress", "address");
            }
            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder attributeInfo(String attributeInfo) {
            if (attributeInfo == null) {
              throw new MissingRequiredPropertyException("GetAddressPoolsPoolAddress", "attributeInfo");
            }
            this.attributeInfo = attributeInfo;
            return this;
        }
        @CustomType.Setter
        public Builder lbaWeight(Integer lbaWeight) {
            if (lbaWeight == null) {
              throw new MissingRequiredPropertyException("GetAddressPoolsPoolAddress", "lbaWeight");
            }
            this.lbaWeight = lbaWeight;
            return this;
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("GetAddressPoolsPoolAddress", "mode");
            }
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder remark(String remark) {
            if (remark == null) {
              throw new MissingRequiredPropertyException("GetAddressPoolsPoolAddress", "remark");
            }
            this.remark = remark;
            return this;
        }
        public GetAddressPoolsPoolAddress build() {
            final var _resultValue = new GetAddressPoolsPoolAddress();
            _resultValue.address = address;
            _resultValue.attributeInfo = attributeInfo;
            _resultValue.lbaWeight = lbaWeight;
            _resultValue.mode = mode;
            _resultValue.remark = remark;
            return _resultValue;
        }
    }
}
