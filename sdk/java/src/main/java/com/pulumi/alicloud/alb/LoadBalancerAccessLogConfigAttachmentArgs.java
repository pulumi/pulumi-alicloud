// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alb;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class LoadBalancerAccessLogConfigAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadBalancerAccessLogConfigAttachmentArgs Empty = new LoadBalancerAccessLogConfigAttachmentArgs();

    /**
     * The ID of the load balancing instance.
     * 
     */
    @Import(name="loadBalancerId", required=true)
    private Output<String> loadBalancerId;

    /**
     * @return The ID of the load balancing instance.
     * 
     */
    public Output<String> loadBalancerId() {
        return this.loadBalancerId;
    }

    /**
     * The log items shipped by the access log.
     * 
     */
    @Import(name="logProject", required=true)
    private Output<String> logProject;

    /**
     * @return The log items shipped by the access log.
     * 
     */
    public Output<String> logProject() {
        return this.logProject;
    }

    /**
     * Logstore for log delivery.
     * 
     */
    @Import(name="logStore", required=true)
    private Output<String> logStore;

    /**
     * @return Logstore for log delivery.
     * 
     */
    public Output<String> logStore() {
        return this.logStore;
    }

    private LoadBalancerAccessLogConfigAttachmentArgs() {}

    private LoadBalancerAccessLogConfigAttachmentArgs(LoadBalancerAccessLogConfigAttachmentArgs $) {
        this.loadBalancerId = $.loadBalancerId;
        this.logProject = $.logProject;
        this.logStore = $.logStore;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerAccessLogConfigAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerAccessLogConfigAttachmentArgs $;

        public Builder() {
            $ = new LoadBalancerAccessLogConfigAttachmentArgs();
        }

        public Builder(LoadBalancerAccessLogConfigAttachmentArgs defaults) {
            $ = new LoadBalancerAccessLogConfigAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param loadBalancerId The ID of the load balancing instance.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerId(Output<String> loadBalancerId) {
            $.loadBalancerId = loadBalancerId;
            return this;
        }

        /**
         * @param loadBalancerId The ID of the load balancing instance.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerId(String loadBalancerId) {
            return loadBalancerId(Output.of(loadBalancerId));
        }

        /**
         * @param logProject The log items shipped by the access log.
         * 
         * @return builder
         * 
         */
        public Builder logProject(Output<String> logProject) {
            $.logProject = logProject;
            return this;
        }

        /**
         * @param logProject The log items shipped by the access log.
         * 
         * @return builder
         * 
         */
        public Builder logProject(String logProject) {
            return logProject(Output.of(logProject));
        }

        /**
         * @param logStore Logstore for log delivery.
         * 
         * @return builder
         * 
         */
        public Builder logStore(Output<String> logStore) {
            $.logStore = logStore;
            return this;
        }

        /**
         * @param logStore Logstore for log delivery.
         * 
         * @return builder
         * 
         */
        public Builder logStore(String logStore) {
            return logStore(Output.of(logStore));
        }

        public LoadBalancerAccessLogConfigAttachmentArgs build() {
            if ($.loadBalancerId == null) {
                throw new MissingRequiredPropertyException("LoadBalancerAccessLogConfigAttachmentArgs", "loadBalancerId");
            }
            if ($.logProject == null) {
                throw new MissingRequiredPropertyException("LoadBalancerAccessLogConfigAttachmentArgs", "logProject");
            }
            if ($.logStore == null) {
                throw new MissingRequiredPropertyException("LoadBalancerAccessLogConfigAttachmentArgs", "logStore");
            }
            return $;
        }
    }

}
