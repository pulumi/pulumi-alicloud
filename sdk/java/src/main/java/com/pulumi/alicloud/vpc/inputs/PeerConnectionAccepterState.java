// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PeerConnectionAccepterState extends com.pulumi.resources.ResourceArgs {

    public static final PeerConnectionAccepterState Empty = new PeerConnectionAccepterState();

    /**
     * The ID of the Alibaba Cloud account (primary account) of the receiving end of the VPC peering connection to be created.-to-peer connection to the VPC account.-account VPC peer-to-peer connection.
     * 
     */
    @Import(name="acceptingOwnerUid")
    private @Nullable Output<Integer> acceptingOwnerUid;

    /**
     * @return The ID of the Alibaba Cloud account (primary account) of the receiving end of the VPC peering connection to be created.-to-peer connection to the VPC account.-account VPC peer-to-peer connection.
     * 
     */
    public Optional<Output<Integer>> acceptingOwnerUid() {
        return Optional.ofNullable(this.acceptingOwnerUid);
    }

    /**
     * The region ID of the recipient of the VPC peering connection to be created.-to-peer connection in the same region, enter the same region ID as the region ID of the initiator.-region VPC peer-to-peer connection, enter a region ID that is different from the region ID of the initiator.
     * 
     */
    @Import(name="acceptingRegionId")
    private @Nullable Output<String> acceptingRegionId;

    /**
     * @return The region ID of the recipient of the VPC peering connection to be created.-to-peer connection in the same region, enter the same region ID as the region ID of the initiator.-region VPC peer-to-peer connection, enter a region ID that is different from the region ID of the initiator.
     * 
     */
    public Optional<Output<String>> acceptingRegionId() {
        return Optional.ofNullable(this.acceptingRegionId);
    }

    /**
     * The VPC ID of the receiving end of the VPC peer connection.
     * 
     */
    @Import(name="acceptingVpcId")
    private @Nullable Output<String> acceptingVpcId;

    /**
     * @return The VPC ID of the receiving end of the VPC peer connection.
     * 
     */
    public Optional<Output<String>> acceptingVpcId() {
        return Optional.ofNullable(this.acceptingVpcId);
    }

    /**
     * The new bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0.
     * 
     */
    @Import(name="bandwidth")
    private @Nullable Output<Integer> bandwidth;

    /**
     * @return The new bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0.
     * 
     */
    public Optional<Output<Integer>> bandwidth() {
        return Optional.ofNullable(this.bandwidth);
    }

    /**
     * The creation time of the VPC peer connection. Use UTC time in the format&#39; YYYY-MM-DDThh:mm:ssZ &#39;.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time of the VPC peer connection. Use UTC time in the format&#39; YYYY-MM-DDThh:mm:ssZ &#39;.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The new description of the VPC peering connection.
     * 
     * The description must be 1 to 256 characters in length, and cannot start with `http://` or `https://`.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The new description of the VPC peering connection.
     * 
     * The description must be 1 to 256 characters in length, and cannot start with `http://` or `https://`.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Specifies whether to perform only a dry run, without performing the actual request. Valid values:
     * 
     */
    @Import(name="dryRun")
    private @Nullable Output<Boolean> dryRun;

    /**
     * @return Specifies whether to perform only a dry run, without performing the actual request. Valid values:
     * 
     */
    public Optional<Output<Boolean>> dryRun() {
        return Optional.ofNullable(this.dryRun);
    }

    /**
     * Specifies whether to forcefully delete the VPC peering connection. Valid values:
     * 
     */
    @Import(name="forceDelete")
    private @Nullable Output<Boolean> forceDelete;

    /**
     * @return Specifies whether to forcefully delete the VPC peering connection. Valid values:
     * 
     */
    public Optional<Output<Boolean>> forceDelete() {
        return Optional.ofNullable(this.forceDelete);
    }

    /**
     * The ID of the VPC peering connection whose name or description you want to modify.
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return The ID of the VPC peering connection whose name or description you want to modify.
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * Link Type. Valid values: `Platinum`, `Gold`, `Silver`.
     * 
     */
    @Import(name="linkType")
    private @Nullable Output<String> linkType;

    /**
     * @return Link Type. Valid values: `Platinum`, `Gold`, `Silver`.
     * 
     */
    public Optional<Output<String>> linkType() {
        return Optional.ofNullable(this.linkType);
    }

    /**
     * The new name of the VPC peering connection.
     * 
     * The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
     * 
     */
    @Import(name="peerConnectionAccepterName")
    private @Nullable Output<String> peerConnectionAccepterName;

    /**
     * @return The new name of the VPC peering connection.
     * 
     * The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
     * 
     */
    public Optional<Output<String>> peerConnectionAccepterName() {
        return Optional.ofNullable(this.peerConnectionAccepterName);
    }

    /**
     * The ID of the region where you want to query VPC peering connections.
     * 
     */
    @Import(name="regionId")
    private @Nullable Output<String> regionId;

    /**
     * @return The ID of the region where you want to query VPC peering connections.
     * 
     */
    public Optional<Output<String>> regionId() {
        return Optional.ofNullable(this.regionId);
    }

    /**
     * The ID of the new resource group.
     * 
     * &gt; **NOTE:**   You can use resource groups to manage resources within your Alibaba Cloud account by group. This helps you resolve issues such as resource grouping and permission management for your Alibaba Cloud account. For more information, see [What is resource management?](https://www.alibabacloud.com/help/en/doc-detail/94475.html)
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the new resource group.
     * 
     * &gt; **NOTE:**   You can use resource groups to manage resources within your Alibaba Cloud account by group. This helps you resolve issues such as resource grouping and permission management for your Alibaba Cloud account. For more information, see [What is resource management?](https://www.alibabacloud.com/help/en/doc-detail/94475.html)
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The status of the resource
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The VPC ID of the initiator of the VPC peering connection.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The VPC ID of the initiator of the VPC peering connection.
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private PeerConnectionAccepterState() {}

    private PeerConnectionAccepterState(PeerConnectionAccepterState $) {
        this.acceptingOwnerUid = $.acceptingOwnerUid;
        this.acceptingRegionId = $.acceptingRegionId;
        this.acceptingVpcId = $.acceptingVpcId;
        this.bandwidth = $.bandwidth;
        this.createTime = $.createTime;
        this.description = $.description;
        this.dryRun = $.dryRun;
        this.forceDelete = $.forceDelete;
        this.instanceId = $.instanceId;
        this.linkType = $.linkType;
        this.peerConnectionAccepterName = $.peerConnectionAccepterName;
        this.regionId = $.regionId;
        this.resourceGroupId = $.resourceGroupId;
        this.status = $.status;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PeerConnectionAccepterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PeerConnectionAccepterState $;

        public Builder() {
            $ = new PeerConnectionAccepterState();
        }

        public Builder(PeerConnectionAccepterState defaults) {
            $ = new PeerConnectionAccepterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param acceptingOwnerUid The ID of the Alibaba Cloud account (primary account) of the receiving end of the VPC peering connection to be created.-to-peer connection to the VPC account.-account VPC peer-to-peer connection.
         * 
         * @return builder
         * 
         */
        public Builder acceptingOwnerUid(@Nullable Output<Integer> acceptingOwnerUid) {
            $.acceptingOwnerUid = acceptingOwnerUid;
            return this;
        }

        /**
         * @param acceptingOwnerUid The ID of the Alibaba Cloud account (primary account) of the receiving end of the VPC peering connection to be created.-to-peer connection to the VPC account.-account VPC peer-to-peer connection.
         * 
         * @return builder
         * 
         */
        public Builder acceptingOwnerUid(Integer acceptingOwnerUid) {
            return acceptingOwnerUid(Output.of(acceptingOwnerUid));
        }

        /**
         * @param acceptingRegionId The region ID of the recipient of the VPC peering connection to be created.-to-peer connection in the same region, enter the same region ID as the region ID of the initiator.-region VPC peer-to-peer connection, enter a region ID that is different from the region ID of the initiator.
         * 
         * @return builder
         * 
         */
        public Builder acceptingRegionId(@Nullable Output<String> acceptingRegionId) {
            $.acceptingRegionId = acceptingRegionId;
            return this;
        }

        /**
         * @param acceptingRegionId The region ID of the recipient of the VPC peering connection to be created.-to-peer connection in the same region, enter the same region ID as the region ID of the initiator.-region VPC peer-to-peer connection, enter a region ID that is different from the region ID of the initiator.
         * 
         * @return builder
         * 
         */
        public Builder acceptingRegionId(String acceptingRegionId) {
            return acceptingRegionId(Output.of(acceptingRegionId));
        }

        /**
         * @param acceptingVpcId The VPC ID of the receiving end of the VPC peer connection.
         * 
         * @return builder
         * 
         */
        public Builder acceptingVpcId(@Nullable Output<String> acceptingVpcId) {
            $.acceptingVpcId = acceptingVpcId;
            return this;
        }

        /**
         * @param acceptingVpcId The VPC ID of the receiving end of the VPC peer connection.
         * 
         * @return builder
         * 
         */
        public Builder acceptingVpcId(String acceptingVpcId) {
            return acceptingVpcId(Output.of(acceptingVpcId));
        }

        /**
         * @param bandwidth The new bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(@Nullable Output<Integer> bandwidth) {
            $.bandwidth = bandwidth;
            return this;
        }

        /**
         * @param bandwidth The new bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(Integer bandwidth) {
            return bandwidth(Output.of(bandwidth));
        }

        /**
         * @param createTime The creation time of the VPC peer connection. Use UTC time in the format&#39; YYYY-MM-DDThh:mm:ssZ &#39;.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the VPC peer connection. Use UTC time in the format&#39; YYYY-MM-DDThh:mm:ssZ &#39;.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param description The new description of the VPC peering connection.
         * 
         * The description must be 1 to 256 characters in length, and cannot start with `http://` or `https://`.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The new description of the VPC peering connection.
         * 
         * The description must be 1 to 256 characters in length, and cannot start with `http://` or `https://`.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param dryRun Specifies whether to perform only a dry run, without performing the actual request. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder dryRun(@Nullable Output<Boolean> dryRun) {
            $.dryRun = dryRun;
            return this;
        }

        /**
         * @param dryRun Specifies whether to perform only a dry run, without performing the actual request. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder dryRun(Boolean dryRun) {
            return dryRun(Output.of(dryRun));
        }

        /**
         * @param forceDelete Specifies whether to forcefully delete the VPC peering connection. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder forceDelete(@Nullable Output<Boolean> forceDelete) {
            $.forceDelete = forceDelete;
            return this;
        }

        /**
         * @param forceDelete Specifies whether to forcefully delete the VPC peering connection. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder forceDelete(Boolean forceDelete) {
            return forceDelete(Output.of(forceDelete));
        }

        /**
         * @param instanceId The ID of the VPC peering connection whose name or description you want to modify.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The ID of the VPC peering connection whose name or description you want to modify.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param linkType Link Type. Valid values: `Platinum`, `Gold`, `Silver`.
         * 
         * @return builder
         * 
         */
        public Builder linkType(@Nullable Output<String> linkType) {
            $.linkType = linkType;
            return this;
        }

        /**
         * @param linkType Link Type. Valid values: `Platinum`, `Gold`, `Silver`.
         * 
         * @return builder
         * 
         */
        public Builder linkType(String linkType) {
            return linkType(Output.of(linkType));
        }

        /**
         * @param peerConnectionAccepterName The new name of the VPC peering connection.
         * 
         * The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
         * 
         * @return builder
         * 
         */
        public Builder peerConnectionAccepterName(@Nullable Output<String> peerConnectionAccepterName) {
            $.peerConnectionAccepterName = peerConnectionAccepterName;
            return this;
        }

        /**
         * @param peerConnectionAccepterName The new name of the VPC peering connection.
         * 
         * The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
         * 
         * @return builder
         * 
         */
        public Builder peerConnectionAccepterName(String peerConnectionAccepterName) {
            return peerConnectionAccepterName(Output.of(peerConnectionAccepterName));
        }

        /**
         * @param regionId The ID of the region where you want to query VPC peering connections.
         * 
         * @return builder
         * 
         */
        public Builder regionId(@Nullable Output<String> regionId) {
            $.regionId = regionId;
            return this;
        }

        /**
         * @param regionId The ID of the region where you want to query VPC peering connections.
         * 
         * @return builder
         * 
         */
        public Builder regionId(String regionId) {
            return regionId(Output.of(regionId));
        }

        /**
         * @param resourceGroupId The ID of the new resource group.
         * 
         * &gt; **NOTE:**   You can use resource groups to manage resources within your Alibaba Cloud account by group. This helps you resolve issues such as resource grouping and permission management for your Alibaba Cloud account. For more information, see [What is resource management?](https://www.alibabacloud.com/help/en/doc-detail/94475.html)
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the new resource group.
         * 
         * &gt; **NOTE:**   You can use resource groups to manage resources within your Alibaba Cloud account by group. This helps you resolve issues such as resource grouping and permission management for your Alibaba Cloud account. For more information, see [What is resource management?](https://www.alibabacloud.com/help/en/doc-detail/94475.html)
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param vpcId The VPC ID of the initiator of the VPC peering connection.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The VPC ID of the initiator of the VPC peering connection.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public PeerConnectionAccepterState build() {
            return $;
        }
    }

}
