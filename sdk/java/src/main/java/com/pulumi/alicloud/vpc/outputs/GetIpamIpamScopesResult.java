// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.outputs;

import com.pulumi.alicloud.vpc.outputs.GetIpamIpamScopesScope;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetIpamIpamScopesResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of Ipam Scope IDs.
     * 
     */
    private List<String> ids;
    /**
     * @return The id of the Ipam instance.
     * 
     */
    private @Nullable String ipamId;
    /**
     * @return The first ID of the resource.
     * 
     */
    private @Nullable String ipamScopeId;
    /**
     * @return The name of the resource.
     * 
     */
    private @Nullable String ipamScopeName;
    /**
     * @return IPAM scope of action type:**private**.&gt; Currently, only the role scope of the private network is supported.
     * 
     */
    private @Nullable String ipamScopeType;
    private @Nullable String nameRegex;
    /**
     * @return A list of name of Ipam Scopes.
     * 
     */
    private List<String> names;
    private @Nullable String outputFile;
    /**
     * @return The ID of the resource group.
     * 
     */
    private @Nullable String resourceGroupId;
    /**
     * @return A list of Ipam Scope Entries. Each element contains the following attributes:
     * 
     */
    private List<GetIpamIpamScopesScope> scopes;
    /**
     * @return The tag of the resource.
     * 
     */
    private @Nullable Map<String,String> tags;

    private GetIpamIpamScopesResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of Ipam Scope IDs.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    /**
     * @return The id of the Ipam instance.
     * 
     */
    public Optional<String> ipamId() {
        return Optional.ofNullable(this.ipamId);
    }
    /**
     * @return The first ID of the resource.
     * 
     */
    public Optional<String> ipamScopeId() {
        return Optional.ofNullable(this.ipamScopeId);
    }
    /**
     * @return The name of the resource.
     * 
     */
    public Optional<String> ipamScopeName() {
        return Optional.ofNullable(this.ipamScopeName);
    }
    /**
     * @return IPAM scope of action type:**private**.&gt; Currently, only the role scope of the private network is supported.
     * 
     */
    public Optional<String> ipamScopeType() {
        return Optional.ofNullable(this.ipamScopeType);
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    /**
     * @return A list of name of Ipam Scopes.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return The ID of the resource group.
     * 
     */
    public Optional<String> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }
    /**
     * @return A list of Ipam Scope Entries. Each element contains the following attributes:
     * 
     */
    public List<GetIpamIpamScopesScope> scopes() {
        return this.scopes;
    }
    /**
     * @return The tag of the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIpamIpamScopesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<String> ids;
        private @Nullable String ipamId;
        private @Nullable String ipamScopeId;
        private @Nullable String ipamScopeName;
        private @Nullable String ipamScopeType;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String outputFile;
        private @Nullable String resourceGroupId;
        private List<GetIpamIpamScopesScope> scopes;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetIpamIpamScopesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.ipamId = defaults.ipamId;
    	      this.ipamScopeId = defaults.ipamScopeId;
    	      this.ipamScopeName = defaults.ipamScopeName;
    	      this.ipamScopeType = defaults.ipamScopeType;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.outputFile = defaults.outputFile;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.scopes = defaults.scopes;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamScopesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            if (ids == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamScopesResult", "ids");
            }
            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder ipamId(@Nullable String ipamId) {

            this.ipamId = ipamId;
            return this;
        }
        @CustomType.Setter
        public Builder ipamScopeId(@Nullable String ipamScopeId) {

            this.ipamScopeId = ipamScopeId;
            return this;
        }
        @CustomType.Setter
        public Builder ipamScopeName(@Nullable String ipamScopeName) {

            this.ipamScopeName = ipamScopeName;
            return this;
        }
        @CustomType.Setter
        public Builder ipamScopeType(@Nullable String ipamScopeType) {

            this.ipamScopeType = ipamScopeType;
            return this;
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {

            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder names(List<String> names) {
            if (names == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamScopesResult", "names");
            }
            this.names = names;
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupId(@Nullable String resourceGroupId) {

            this.resourceGroupId = resourceGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder scopes(List<GetIpamIpamScopesScope> scopes) {
            if (scopes == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamScopesResult", "scopes");
            }
            this.scopes = scopes;
            return this;
        }
        public Builder scopes(GetIpamIpamScopesScope... scopes) {
            return scopes(List.of(scopes));
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {

            this.tags = tags;
            return this;
        }
        public GetIpamIpamScopesResult build() {
            final var _resultValue = new GetIpamIpamScopesResult();
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.ipamId = ipamId;
            _resultValue.ipamScopeId = ipamScopeId;
            _resultValue.ipamScopeName = ipamScopeName;
            _resultValue.ipamScopeType = ipamScopeType;
            _resultValue.nameRegex = nameRegex;
            _resultValue.names = names;
            _resultValue.outputFile = outputFile;
            _resultValue.resourceGroupId = resourceGroupId;
            _resultValue.scopes = scopes;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
