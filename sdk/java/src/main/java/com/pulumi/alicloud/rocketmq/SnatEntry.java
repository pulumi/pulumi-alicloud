// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rocketmq;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.rocketmq.SnatEntryArgs;
import com.pulumi.alicloud.rocketmq.inputs.SnatEntryState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a Sag SnatEntry resource. This topic describes how to add a SNAT entry to enable the SNAT function. The SNAT function can hide internal IP addresses and resolve private IP address conflicts. With this function, on-premises sites can access internal IP addresses, but cannot be accessed by internal IP addresses. If you do not add a SNAT entry, on-premises sites can access each other only when all related IP addresses do not conflict.
 * 
 * For information about Sag SnatEntry and how to use it, see [What is Sag SnatEntry](https://www.alibabacloud.com/help/en/smart-access-gateway/latest/addsnatentry).
 * 
 * &gt; **NOTE:** Available since v1.61.0.
 * 
 * &gt; **NOTE:** Only the following regions support. [`cn-shanghai`, `cn-shanghai-finance-1`, `cn-hongkong`, `ap-southeast-1`, `ap-southeast-2`, `ap-southeast-3`, `ap-southeast-5`, `ap-northeast-1`, `eu-central-1`]
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.rocketmq.SnatEntry;
 * import com.pulumi.alicloud.rocketmq.SnatEntryArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var sagId = config.get(&#34;sagId&#34;).orElse(&#34;sag-9bifk***&#34;);
 *         var default_ = new SnatEntry(&#34;default&#34;, SnatEntryArgs.builder()        
 *             .sagId(sagId)
 *             .cidrBlock(&#34;192.168.7.0/24&#34;)
 *             .snatIp(&#34;192.0.0.2&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * The Sag SnatEntry can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:rocketmq/snatEntry:SnatEntry example sag-abc123456:snat-abc123456
 * ```
 * 
 */
@ResourceType(type="alicloud:rocketmq/snatEntry:SnatEntry")
public class SnatEntry extends com.pulumi.resources.CustomResource {
    /**
     * The destination CIDR block.
     * 
     */
    @Export(name="cidrBlock", refs={String.class}, tree="[0]")
    private Output<String> cidrBlock;

    /**
     * @return The destination CIDR block.
     * 
     */
    public Output<String> cidrBlock() {
        return this.cidrBlock;
    }
    /**
     * The ID of the SAG instance.
     * 
     */
    @Export(name="sagId", refs={String.class}, tree="[0]")
    private Output<String> sagId;

    /**
     * @return The ID of the SAG instance.
     * 
     */
    public Output<String> sagId() {
        return this.sagId;
    }
    /**
     * The public IP address.
     * 
     */
    @Export(name="snatIp", refs={String.class}, tree="[0]")
    private Output<String> snatIp;

    /**
     * @return The public IP address.
     * 
     */
    public Output<String> snatIp() {
        return this.snatIp;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SnatEntry(String name) {
        this(name, SnatEntryArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SnatEntry(String name, SnatEntryArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SnatEntry(String name, SnatEntryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:rocketmq/snatEntry:SnatEntry", name, args == null ? SnatEntryArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SnatEntry(String name, Output<String> id, @Nullable SnatEntryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:rocketmq/snatEntry:SnatEntry", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SnatEntry get(String name, Output<String> id, @Nullable SnatEntryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SnatEntry(name, id, state, options);
    }
}
