// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceLogConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceLogConfigArgs Empty = new ServiceLogConfigArgs();

    /**
     * Enable instance level metrics.
     * 
     */
    @Import(name="enableInstanceMetrics")
    private @Nullable Output<Boolean> enableInstanceMetrics;

    /**
     * @return Enable instance level metrics.
     * 
     */
    public Optional<Output<Boolean>> enableInstanceMetrics() {
        return Optional.ofNullable(this.enableInstanceMetrics);
    }

    /**
     * Enable request level metrics.
     * 
     */
    @Import(name="enableRequestMetrics")
    private @Nullable Output<Boolean> enableRequestMetrics;

    /**
     * @return Enable request level metrics.
     * 
     */
    public Optional<Output<Boolean>> enableRequestMetrics() {
        return Optional.ofNullable(this.enableRequestMetrics);
    }

    /**
     * The log store name of Alicloud Simple Log Service.
     * 
     */
    @Import(name="logstore", required=true)
    private Output<String> logstore;

    /**
     * @return The log store name of Alicloud Simple Log Service.
     * 
     */
    public Output<String> logstore() {
        return this.logstore;
    }

    /**
     * The project name of the Alicloud Simple Log Service.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return The project name of the Alicloud Simple Log Service.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    private ServiceLogConfigArgs() {}

    private ServiceLogConfigArgs(ServiceLogConfigArgs $) {
        this.enableInstanceMetrics = $.enableInstanceMetrics;
        this.enableRequestMetrics = $.enableRequestMetrics;
        this.logstore = $.logstore;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceLogConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceLogConfigArgs $;

        public Builder() {
            $ = new ServiceLogConfigArgs();
        }

        public Builder(ServiceLogConfigArgs defaults) {
            $ = new ServiceLogConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableInstanceMetrics Enable instance level metrics.
         * 
         * @return builder
         * 
         */
        public Builder enableInstanceMetrics(@Nullable Output<Boolean> enableInstanceMetrics) {
            $.enableInstanceMetrics = enableInstanceMetrics;
            return this;
        }

        /**
         * @param enableInstanceMetrics Enable instance level metrics.
         * 
         * @return builder
         * 
         */
        public Builder enableInstanceMetrics(Boolean enableInstanceMetrics) {
            return enableInstanceMetrics(Output.of(enableInstanceMetrics));
        }

        /**
         * @param enableRequestMetrics Enable request level metrics.
         * 
         * @return builder
         * 
         */
        public Builder enableRequestMetrics(@Nullable Output<Boolean> enableRequestMetrics) {
            $.enableRequestMetrics = enableRequestMetrics;
            return this;
        }

        /**
         * @param enableRequestMetrics Enable request level metrics.
         * 
         * @return builder
         * 
         */
        public Builder enableRequestMetrics(Boolean enableRequestMetrics) {
            return enableRequestMetrics(Output.of(enableRequestMetrics));
        }

        /**
         * @param logstore The log store name of Alicloud Simple Log Service.
         * 
         * @return builder
         * 
         */
        public Builder logstore(Output<String> logstore) {
            $.logstore = logstore;
            return this;
        }

        /**
         * @param logstore The log store name of Alicloud Simple Log Service.
         * 
         * @return builder
         * 
         */
        public Builder logstore(String logstore) {
            return logstore(Output.of(logstore));
        }

        /**
         * @param project The project name of the Alicloud Simple Log Service.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The project name of the Alicloud Simple Log Service.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public ServiceLogConfigArgs build() {
            if ($.logstore == null) {
                throw new MissingRequiredPropertyException("ServiceLogConfigArgs", "logstore");
            }
            if ($.project == null) {
                throw new MissingRequiredPropertyException("ServiceLogConfigArgs", "project");
            }
            return $;
        }
    }

}
