// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NodePoolScalingConfig {
    /**
     * @return Peak EIP bandwidth. Its valid value range [1~500] in Mbps. It works if `is_bond_eip=true`. Default to `5`.
     * 
     */
    private @Nullable Integer eipBandwidth;
    /**
     * @return EIP billing type. It works if `is_bond_eip=true`. `PayByBandwidth`: Charged at fixed bandwidth. `PayByTraffic`: Billed as used traffic. Default: `PayByBandwidth`. Conflict with `internet_charge_type`, EIP and public network IP can only choose one.
     * 
     */
    private @Nullable String eipInternetChargeType;
    /**
     * @return Whether to enable automatic scaling. Value:
     * 
     */
    private @Nullable Boolean enable;
    /**
     * @return Whether to bind EIP for an instance. Default: `false`.
     * 
     */
    private @Nullable Boolean isBondEip;
    /**
     * @return Max number of instances in a auto scaling group, its valid value range [0~1000]. `max_size` has to be greater than `min_size`.
     * 
     */
    private @Nullable Integer maxSize;
    /**
     * @return Min number of instances in a auto scaling group, its valid value range [0~1000].
     * 
     */
    private @Nullable Integer minSize;
    /**
     * @return Instance classification, not required. Vaild value: `cpu`, `gpu`, `gpushare` and `spot`. Default: `cpu`. The actual instance type is determined by `instance_types`.
     * 
     */
    private @Nullable String type;

    private NodePoolScalingConfig() {}
    /**
     * @return Peak EIP bandwidth. Its valid value range [1~500] in Mbps. It works if `is_bond_eip=true`. Default to `5`.
     * 
     */
    public Optional<Integer> eipBandwidth() {
        return Optional.ofNullable(this.eipBandwidth);
    }
    /**
     * @return EIP billing type. It works if `is_bond_eip=true`. `PayByBandwidth`: Charged at fixed bandwidth. `PayByTraffic`: Billed as used traffic. Default: `PayByBandwidth`. Conflict with `internet_charge_type`, EIP and public network IP can only choose one.
     * 
     */
    public Optional<String> eipInternetChargeType() {
        return Optional.ofNullable(this.eipInternetChargeType);
    }
    /**
     * @return Whether to enable automatic scaling. Value:
     * 
     */
    public Optional<Boolean> enable() {
        return Optional.ofNullable(this.enable);
    }
    /**
     * @return Whether to bind EIP for an instance. Default: `false`.
     * 
     */
    public Optional<Boolean> isBondEip() {
        return Optional.ofNullable(this.isBondEip);
    }
    /**
     * @return Max number of instances in a auto scaling group, its valid value range [0~1000]. `max_size` has to be greater than `min_size`.
     * 
     */
    public Optional<Integer> maxSize() {
        return Optional.ofNullable(this.maxSize);
    }
    /**
     * @return Min number of instances in a auto scaling group, its valid value range [0~1000].
     * 
     */
    public Optional<Integer> minSize() {
        return Optional.ofNullable(this.minSize);
    }
    /**
     * @return Instance classification, not required. Vaild value: `cpu`, `gpu`, `gpushare` and `spot`. Default: `cpu`. The actual instance type is determined by `instance_types`.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodePoolScalingConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer eipBandwidth;
        private @Nullable String eipInternetChargeType;
        private @Nullable Boolean enable;
        private @Nullable Boolean isBondEip;
        private @Nullable Integer maxSize;
        private @Nullable Integer minSize;
        private @Nullable String type;
        public Builder() {}
        public Builder(NodePoolScalingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eipBandwidth = defaults.eipBandwidth;
    	      this.eipInternetChargeType = defaults.eipInternetChargeType;
    	      this.enable = defaults.enable;
    	      this.isBondEip = defaults.isBondEip;
    	      this.maxSize = defaults.maxSize;
    	      this.minSize = defaults.minSize;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder eipBandwidth(@Nullable Integer eipBandwidth) {

            this.eipBandwidth = eipBandwidth;
            return this;
        }
        @CustomType.Setter
        public Builder eipInternetChargeType(@Nullable String eipInternetChargeType) {

            this.eipInternetChargeType = eipInternetChargeType;
            return this;
        }
        @CustomType.Setter
        public Builder enable(@Nullable Boolean enable) {

            this.enable = enable;
            return this;
        }
        @CustomType.Setter
        public Builder isBondEip(@Nullable Boolean isBondEip) {

            this.isBondEip = isBondEip;
            return this;
        }
        @CustomType.Setter
        public Builder maxSize(@Nullable Integer maxSize) {

            this.maxSize = maxSize;
            return this;
        }
        @CustomType.Setter
        public Builder minSize(@Nullable Integer minSize) {

            this.minSize = minSize;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        public NodePoolScalingConfig build() {
            final var _resultValue = new NodePoolScalingConfig();
            _resultValue.eipBandwidth = eipBandwidth;
            _resultValue.eipInternetChargeType = eipInternetChargeType;
            _resultValue.enable = enable;
            _resultValue.isBondEip = isBondEip;
            _resultValue.maxSize = maxSize;
            _resultValue.minSize = minSize;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
