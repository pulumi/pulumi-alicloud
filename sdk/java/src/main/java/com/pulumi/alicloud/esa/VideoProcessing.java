// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.esa.VideoProcessingArgs;
import com.pulumi.alicloud.esa.inputs.VideoProcessingState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a ESA Video Processing resource.
 * 
 * For information about ESA Video Processing and how to use it, see [What is Video Processing](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateVideoProcessing).
 * 
 * &gt; **NOTE:** Available since v1.251.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.esa.EsaFunctions;
 * import com.pulumi.alicloud.esa.inputs.GetSitesArgs;
 * import com.pulumi.alicloud.esa.Site;
 * import com.pulumi.alicloud.esa.SiteArgs;
 * import com.pulumi.alicloud.esa.VideoProcessing;
 * import com.pulumi.alicloud.esa.VideoProcessingArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         final var default = EsaFunctions.getSites(GetSitesArgs.builder()
 *             .planSubscribeType("enterpriseplan")
 *             .build());
 * 
 *         var defaultSite = new Site("defaultSite", SiteArgs.builder()
 *             .siteName("chenxin0116.site")
 *             .instanceId(default_.sites()[0].instanceId())
 *             .coverage("overseas")
 *             .accessType("NS")
 *             .build());
 * 
 *         var defaultVideoProcessing = new VideoProcessing("defaultVideoProcessing", VideoProcessingArgs.builder()
 *             .videoSeekEnable("on")
 *             .ruleEnable("on")
 *             .mp4SeekEnd("end")
 *             .flvSeekStart("start")
 *             .rule("(http.host eq \"video.example.com\")")
 *             .flvVideoSeekMode("by_byte")
 *             .mp4SeekStart("start")
 *             .flvSeekEnd("end")
 *             .siteId(defaultSite.id())
 *             .sequence(1)
 *             .siteVersion(0)
 *             .ruleName("example")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ESA Video Processing can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:esa/videoProcessing:VideoProcessing example &lt;site_id&gt;:&lt;config_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:esa/videoProcessing:VideoProcessing")
public class VideoProcessing extends com.pulumi.resources.CustomResource {
    /**
     * Config Id
     * 
     */
    @Export(name="configId", refs={Integer.class}, tree="[0]")
    private Output<Integer> configId;

    /**
     * @return Config Id
     * 
     */
    public Output<Integer> configId() {
        return this.configId;
    }
    /**
     * Custom FLV end parameters.
     * 
     */
    @Export(name="flvSeekEnd", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> flvSeekEnd;

    /**
     * @return Custom FLV end parameters.
     * 
     */
    public Output<Optional<String>> flvSeekEnd() {
        return Codegen.optional(this.flvSeekEnd);
    }
    /**
     * Custom FLV start parameters.
     * 
     */
    @Export(name="flvSeekStart", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> flvSeekStart;

    /**
     * @return Custom FLV start parameters.
     * 
     */
    public Output<Optional<String>> flvSeekStart() {
        return Codegen.optional(this.flvSeekStart);
    }
    /**
     * FLV drag mode. Value range:
     * 
     */
    @Export(name="flvVideoSeekMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> flvVideoSeekMode;

    /**
     * @return FLV drag mode. Value range:
     * 
     */
    public Output<Optional<String>> flvVideoSeekMode() {
        return Codegen.optional(this.flvVideoSeekMode);
    }
    /**
     * Custom mp4 end parameters.
     * 
     */
    @Export(name="mp4SeekEnd", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> mp4SeekEnd;

    /**
     * @return Custom mp4 end parameters.
     * 
     */
    public Output<Optional<String>> mp4SeekEnd() {
        return Codegen.optional(this.mp4SeekEnd);
    }
    /**
     * Custom mp4 start parameters.
     * 
     */
    @Export(name="mp4SeekStart", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> mp4SeekStart;

    /**
     * @return Custom mp4 start parameters.
     * 
     */
    public Output<Optional<String>> mp4SeekStart() {
        return Codegen.optional(this.mp4SeekStart);
    }
    /**
     * Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
     * - Match all incoming requests: value set to true
     * - Match specified request: Set the value to a custom expression, for example: (http.host eq \&#34;video.example.com\&#34;)
     * 
     */
    @Export(name="rule", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> rule;

    /**
     * @return Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
     * - Match all incoming requests: value set to true
     * - Match specified request: Set the value to a custom expression, for example: (http.host eq \&#34;video.example.com\&#34;)
     * 
     */
    public Output<Optional<String>> rule() {
        return Codegen.optional(this.rule);
    }
    /**
     * Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
     * 
     */
    @Export(name="ruleEnable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ruleEnable;

    /**
     * @return Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
     * 
     */
    public Output<Optional<String>> ruleEnable() {
        return Codegen.optional(this.ruleEnable);
    }
    /**
     * Rule name. When adding global configuration, this parameter does not need to be set.
     * 
     */
    @Export(name="ruleName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ruleName;

    /**
     * @return Rule name. When adding global configuration, this parameter does not need to be set.
     * 
     */
    public Output<Optional<String>> ruleName() {
        return Codegen.optional(this.ruleName);
    }
    /**
     * Order of rule execution. The smaller the value, the higher the priority for execution.
     * 
     */
    @Export(name="sequence", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> sequence;

    /**
     * @return Order of rule execution. The smaller the value, the higher the priority for execution.
     * 
     */
    public Output<Optional<Integer>> sequence() {
        return Codegen.optional(this.sequence);
    }
    /**
     * The site ID, which can be obtained by calling the ListSites API.
     * 
     */
    @Export(name="siteId", refs={Integer.class}, tree="[0]")
    private Output<Integer> siteId;

    /**
     * @return The site ID, which can be obtained by calling the ListSites API.
     * 
     */
    public Output<Integer> siteId() {
        return this.siteId;
    }
    /**
     * The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
     * 
     */
    @Export(name="siteVersion", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> siteVersion;

    /**
     * @return The version number of the site configuration. For sites that have enabled configuration version management, this parameter can be used to specify the effective version of the configuration site, which defaults to version 0.
     * 
     */
    public Output<Optional<Integer>> siteVersion() {
        return Codegen.optional(this.siteVersion);
    }
    /**
     * Drag and drop the play function switch. Value range:
     * 
     */
    @Export(name="videoSeekEnable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> videoSeekEnable;

    /**
     * @return Drag and drop the play function switch. Value range:
     * 
     */
    public Output<Optional<String>> videoSeekEnable() {
        return Codegen.optional(this.videoSeekEnable);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VideoProcessing(java.lang.String name) {
        this(name, VideoProcessingArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VideoProcessing(java.lang.String name, VideoProcessingArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VideoProcessing(java.lang.String name, VideoProcessingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:esa/videoProcessing:VideoProcessing", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private VideoProcessing(java.lang.String name, Output<java.lang.String> id, @Nullable VideoProcessingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:esa/videoProcessing:VideoProcessing", name, state, makeResourceOptions(options, id), false);
    }

    private static VideoProcessingArgs makeArgs(VideoProcessingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? VideoProcessingArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VideoProcessing get(java.lang.String name, Output<java.lang.String> id, @Nullable VideoProcessingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VideoProcessing(name, id, state, options);
    }
}
