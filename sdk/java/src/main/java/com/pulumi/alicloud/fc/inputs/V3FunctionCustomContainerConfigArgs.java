// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc.inputs;

import com.pulumi.alicloud.fc.inputs.V3FunctionCustomContainerConfigAccelerationInfoArgs;
import com.pulumi.alicloud.fc.inputs.V3FunctionCustomContainerConfigHealthCheckConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V3FunctionCustomContainerConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final V3FunctionCustomContainerConfigArgs Empty = new V3FunctionCustomContainerConfigArgs();

    /**
     * (Deprecated) Image Acceleration Information (Obsolete).
     * 
     * @deprecated
     * Field &#39;acceleration_info&#39; has been deprecated from provider version 1.228.0. Image Acceleration Information (Obsolete)
     * 
     */
    @Deprecated /* Field 'acceleration_info' has been deprecated from provider version 1.228.0. Image Acceleration Information (Obsolete) */
    @Import(name="accelerationInfo")
    private @Nullable Output<V3FunctionCustomContainerConfigAccelerationInfoArgs> accelerationInfo;

    /**
     * @return (Deprecated) Image Acceleration Information (Obsolete).
     * 
     * @deprecated
     * Field &#39;acceleration_info&#39; has been deprecated from provider version 1.228.0. Image Acceleration Information (Obsolete)
     * 
     */
    @Deprecated /* Field 'acceleration_info' has been deprecated from provider version 1.228.0. Image Acceleration Information (Obsolete) */
    public Optional<Output<V3FunctionCustomContainerConfigAccelerationInfoArgs>> accelerationInfo() {
        return Optional.ofNullable(this.accelerationInfo);
    }

    /**
     * Whether to enable Image acceleration. Default: The Default value, indicating that image acceleration is enabled. None: indicates that image acceleration is disabled. (Obsolete).
     * 
     * @deprecated
     * Field &#39;acceleration_type&#39; has been deprecated from provider version 1.228.0. Whether to enable Image acceleration. Default: The Default value, indicating that image acceleration is enabled. None: indicates that image acceleration is disabled. (Obsolete)
     * 
     */
    @Deprecated /* Field 'acceleration_type' has been deprecated from provider version 1.228.0. Whether to enable Image acceleration. Default: The Default value, indicating that image acceleration is enabled. None: indicates that image acceleration is disabled. (Obsolete) */
    @Import(name="accelerationType")
    private @Nullable Output<String> accelerationType;

    /**
     * @return Whether to enable Image acceleration. Default: The Default value, indicating that image acceleration is enabled. None: indicates that image acceleration is disabled. (Obsolete).
     * 
     * @deprecated
     * Field &#39;acceleration_type&#39; has been deprecated from provider version 1.228.0. Whether to enable Image acceleration. Default: The Default value, indicating that image acceleration is enabled. None: indicates that image acceleration is disabled. (Obsolete)
     * 
     */
    @Deprecated /* Field 'acceleration_type' has been deprecated from provider version 1.228.0. Whether to enable Image acceleration. Default: The Default value, indicating that image acceleration is enabled. None: indicates that image acceleration is disabled. (Obsolete) */
    public Optional<Output<String>> accelerationType() {
        return Optional.ofNullable(this.accelerationType);
    }

    /**
     * ACR Enterprise version Image Repository ID, which must be entered when using ACR Enterprise version image. (Obsolete).
     * 
     * @deprecated
     * Field &#39;acr_instance_id&#39; has been deprecated from provider version 1.228.0. ACR Enterprise version Image Repository ID, which must be entered when using ACR Enterprise version image. (Obsolete)
     * 
     */
    @Deprecated /* Field 'acr_instance_id' has been deprecated from provider version 1.228.0. ACR Enterprise version Image Repository ID, which must be entered when using ACR Enterprise version image. (Obsolete) */
    @Import(name="acrInstanceId")
    private @Nullable Output<String> acrInstanceId;

    /**
     * @return ACR Enterprise version Image Repository ID, which must be entered when using ACR Enterprise version image. (Obsolete).
     * 
     * @deprecated
     * Field &#39;acr_instance_id&#39; has been deprecated from provider version 1.228.0. ACR Enterprise version Image Repository ID, which must be entered when using ACR Enterprise version image. (Obsolete)
     * 
     */
    @Deprecated /* Field 'acr_instance_id' has been deprecated from provider version 1.228.0. ACR Enterprise version Image Repository ID, which must be entered when using ACR Enterprise version image. (Obsolete) */
    public Optional<Output<String>> acrInstanceId() {
        return Optional.ofNullable(this.acrInstanceId);
    }

    /**
     * Container startup parameters.
     * 
     */
    @Import(name="commands")
    private @Nullable Output<List<String>> commands;

    /**
     * @return Container startup parameters.
     * 
     */
    public Optional<Output<List<String>>> commands() {
        return Optional.ofNullable(this.commands);
    }

    /**
     * Container start command.
     * 
     */
    @Import(name="entrypoints")
    private @Nullable Output<List<String>> entrypoints;

    /**
     * @return Container start command.
     * 
     */
    public Optional<Output<List<String>>> entrypoints() {
        return Optional.ofNullable(this.entrypoints);
    }

    /**
     * Function custom health check configuration. See `health_check_config` below.
     * 
     */
    @Import(name="healthCheckConfig")
    private @Nullable Output<V3FunctionCustomContainerConfigHealthCheckConfigArgs> healthCheckConfig;

    /**
     * @return Function custom health check configuration. See `health_check_config` below.
     * 
     */
    public Optional<Output<V3FunctionCustomContainerConfigHealthCheckConfigArgs>> healthCheckConfig() {
        return Optional.ofNullable(this.healthCheckConfig);
    }

    /**
     * The container Image address.
     * 
     */
    @Import(name="image")
    private @Nullable Output<String> image;

    /**
     * @return The container Image address.
     * 
     */
    public Optional<Output<String>> image() {
        return Optional.ofNullable(this.image);
    }

    /**
     * The listening port of the HTTP Server when the custom container runs.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return The listening port of the HTTP Server when the custom container runs.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * The actual digest version of the deployed Image. The code version specified by this digest is used when the function starts.
     * 
     */
    @Import(name="resolvedImageUri")
    private @Nullable Output<String> resolvedImageUri;

    /**
     * @return The actual digest version of the deployed Image. The code version specified by this digest is used when the function starts.
     * 
     */
    public Optional<Output<String>> resolvedImageUri() {
        return Optional.ofNullable(this.resolvedImageUri);
    }

    private V3FunctionCustomContainerConfigArgs() {}

    private V3FunctionCustomContainerConfigArgs(V3FunctionCustomContainerConfigArgs $) {
        this.accelerationInfo = $.accelerationInfo;
        this.accelerationType = $.accelerationType;
        this.acrInstanceId = $.acrInstanceId;
        this.commands = $.commands;
        this.entrypoints = $.entrypoints;
        this.healthCheckConfig = $.healthCheckConfig;
        this.image = $.image;
        this.port = $.port;
        this.resolvedImageUri = $.resolvedImageUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V3FunctionCustomContainerConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V3FunctionCustomContainerConfigArgs $;

        public Builder() {
            $ = new V3FunctionCustomContainerConfigArgs();
        }

        public Builder(V3FunctionCustomContainerConfigArgs defaults) {
            $ = new V3FunctionCustomContainerConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accelerationInfo (Deprecated) Image Acceleration Information (Obsolete).
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;acceleration_info&#39; has been deprecated from provider version 1.228.0. Image Acceleration Information (Obsolete)
         * 
         */
        @Deprecated /* Field 'acceleration_info' has been deprecated from provider version 1.228.0. Image Acceleration Information (Obsolete) */
        public Builder accelerationInfo(@Nullable Output<V3FunctionCustomContainerConfigAccelerationInfoArgs> accelerationInfo) {
            $.accelerationInfo = accelerationInfo;
            return this;
        }

        /**
         * @param accelerationInfo (Deprecated) Image Acceleration Information (Obsolete).
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;acceleration_info&#39; has been deprecated from provider version 1.228.0. Image Acceleration Information (Obsolete)
         * 
         */
        @Deprecated /* Field 'acceleration_info' has been deprecated from provider version 1.228.0. Image Acceleration Information (Obsolete) */
        public Builder accelerationInfo(V3FunctionCustomContainerConfigAccelerationInfoArgs accelerationInfo) {
            return accelerationInfo(Output.of(accelerationInfo));
        }

        /**
         * @param accelerationType Whether to enable Image acceleration. Default: The Default value, indicating that image acceleration is enabled. None: indicates that image acceleration is disabled. (Obsolete).
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;acceleration_type&#39; has been deprecated from provider version 1.228.0. Whether to enable Image acceleration. Default: The Default value, indicating that image acceleration is enabled. None: indicates that image acceleration is disabled. (Obsolete)
         * 
         */
        @Deprecated /* Field 'acceleration_type' has been deprecated from provider version 1.228.0. Whether to enable Image acceleration. Default: The Default value, indicating that image acceleration is enabled. None: indicates that image acceleration is disabled. (Obsolete) */
        public Builder accelerationType(@Nullable Output<String> accelerationType) {
            $.accelerationType = accelerationType;
            return this;
        }

        /**
         * @param accelerationType Whether to enable Image acceleration. Default: The Default value, indicating that image acceleration is enabled. None: indicates that image acceleration is disabled. (Obsolete).
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;acceleration_type&#39; has been deprecated from provider version 1.228.0. Whether to enable Image acceleration. Default: The Default value, indicating that image acceleration is enabled. None: indicates that image acceleration is disabled. (Obsolete)
         * 
         */
        @Deprecated /* Field 'acceleration_type' has been deprecated from provider version 1.228.0. Whether to enable Image acceleration. Default: The Default value, indicating that image acceleration is enabled. None: indicates that image acceleration is disabled. (Obsolete) */
        public Builder accelerationType(String accelerationType) {
            return accelerationType(Output.of(accelerationType));
        }

        /**
         * @param acrInstanceId ACR Enterprise version Image Repository ID, which must be entered when using ACR Enterprise version image. (Obsolete).
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;acr_instance_id&#39; has been deprecated from provider version 1.228.0. ACR Enterprise version Image Repository ID, which must be entered when using ACR Enterprise version image. (Obsolete)
         * 
         */
        @Deprecated /* Field 'acr_instance_id' has been deprecated from provider version 1.228.0. ACR Enterprise version Image Repository ID, which must be entered when using ACR Enterprise version image. (Obsolete) */
        public Builder acrInstanceId(@Nullable Output<String> acrInstanceId) {
            $.acrInstanceId = acrInstanceId;
            return this;
        }

        /**
         * @param acrInstanceId ACR Enterprise version Image Repository ID, which must be entered when using ACR Enterprise version image. (Obsolete).
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;acr_instance_id&#39; has been deprecated from provider version 1.228.0. ACR Enterprise version Image Repository ID, which must be entered when using ACR Enterprise version image. (Obsolete)
         * 
         */
        @Deprecated /* Field 'acr_instance_id' has been deprecated from provider version 1.228.0. ACR Enterprise version Image Repository ID, which must be entered when using ACR Enterprise version image. (Obsolete) */
        public Builder acrInstanceId(String acrInstanceId) {
            return acrInstanceId(Output.of(acrInstanceId));
        }

        /**
         * @param commands Container startup parameters.
         * 
         * @return builder
         * 
         */
        public Builder commands(@Nullable Output<List<String>> commands) {
            $.commands = commands;
            return this;
        }

        /**
         * @param commands Container startup parameters.
         * 
         * @return builder
         * 
         */
        public Builder commands(List<String> commands) {
            return commands(Output.of(commands));
        }

        /**
         * @param commands Container startup parameters.
         * 
         * @return builder
         * 
         */
        public Builder commands(String... commands) {
            return commands(List.of(commands));
        }

        /**
         * @param entrypoints Container start command.
         * 
         * @return builder
         * 
         */
        public Builder entrypoints(@Nullable Output<List<String>> entrypoints) {
            $.entrypoints = entrypoints;
            return this;
        }

        /**
         * @param entrypoints Container start command.
         * 
         * @return builder
         * 
         */
        public Builder entrypoints(List<String> entrypoints) {
            return entrypoints(Output.of(entrypoints));
        }

        /**
         * @param entrypoints Container start command.
         * 
         * @return builder
         * 
         */
        public Builder entrypoints(String... entrypoints) {
            return entrypoints(List.of(entrypoints));
        }

        /**
         * @param healthCheckConfig Function custom health check configuration. See `health_check_config` below.
         * 
         * @return builder
         * 
         */
        public Builder healthCheckConfig(@Nullable Output<V3FunctionCustomContainerConfigHealthCheckConfigArgs> healthCheckConfig) {
            $.healthCheckConfig = healthCheckConfig;
            return this;
        }

        /**
         * @param healthCheckConfig Function custom health check configuration. See `health_check_config` below.
         * 
         * @return builder
         * 
         */
        public Builder healthCheckConfig(V3FunctionCustomContainerConfigHealthCheckConfigArgs healthCheckConfig) {
            return healthCheckConfig(Output.of(healthCheckConfig));
        }

        /**
         * @param image The container Image address.
         * 
         * @return builder
         * 
         */
        public Builder image(@Nullable Output<String> image) {
            $.image = image;
            return this;
        }

        /**
         * @param image The container Image address.
         * 
         * @return builder
         * 
         */
        public Builder image(String image) {
            return image(Output.of(image));
        }

        /**
         * @param port The listening port of the HTTP Server when the custom container runs.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port The listening port of the HTTP Server when the custom container runs.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param resolvedImageUri The actual digest version of the deployed Image. The code version specified by this digest is used when the function starts.
         * 
         * @return builder
         * 
         */
        public Builder resolvedImageUri(@Nullable Output<String> resolvedImageUri) {
            $.resolvedImageUri = resolvedImageUri;
            return this;
        }

        /**
         * @param resolvedImageUri The actual digest version of the deployed Image. The code version specified by this digest is used when the function starts.
         * 
         * @return builder
         * 
         */
        public Builder resolvedImageUri(String resolvedImageUri) {
            return resolvedImageUri(Output.of(resolvedImageUri));
        }

        public V3FunctionCustomContainerConfigArgs build() {
            return $;
        }
    }

}
