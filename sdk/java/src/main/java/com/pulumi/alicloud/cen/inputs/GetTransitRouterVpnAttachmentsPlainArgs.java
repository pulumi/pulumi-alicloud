// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTransitRouterVpnAttachmentsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTransitRouterVpnAttachmentsPlainArgs Empty = new GetTransitRouterVpnAttachmentsPlainArgs();

    /**
     * The ID of the Cloud Enterprise Network (CEN) instance.
     * 
     */
    @Import(name="cenId")
    private @Nullable String cenId;

    /**
     * @return The ID of the Cloud Enterprise Network (CEN) instance.
     * 
     */
    public Optional<String> cenId() {
        return Optional.ofNullable(this.cenId);
    }

    /**
     * A list of Transit Router Vpn Attachment IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable List<String> ids;

    /**
     * @return A list of Transit Router Vpn Attachment IDs.
     * 
     */
    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * A regex string to filter results by Group Metric Rule name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable String nameRegex;

    /**
     * @return A regex string to filter results by Group Metric Rule name.
     * 
     */
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The Status of Transit Router Vpn Attachment. Valid Value: `Attached`, `Attaching`, `Detaching`.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return The Status of Transit Router Vpn Attachment. Valid Value: `Attached`, `Attaching`, `Detaching`.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The tag of the resource
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return The tag of the resource
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The ID of the VPN attachment.
     * 
     */
    @Import(name="transitRouterAttachmentId")
    private @Nullable String transitRouterAttachmentId;

    /**
     * @return The ID of the VPN attachment.
     * 
     */
    public Optional<String> transitRouterAttachmentId() {
        return Optional.ofNullable(this.transitRouterAttachmentId);
    }

    /**
     * The ID of the transit router.
     * 
     */
    @Import(name="transitRouterId")
    private @Nullable String transitRouterId;

    /**
     * @return The ID of the transit router.
     * 
     */
    public Optional<String> transitRouterId() {
        return Optional.ofNullable(this.transitRouterId);
    }

    private GetTransitRouterVpnAttachmentsPlainArgs() {}

    private GetTransitRouterVpnAttachmentsPlainArgs(GetTransitRouterVpnAttachmentsPlainArgs $) {
        this.cenId = $.cenId;
        this.ids = $.ids;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.status = $.status;
        this.tags = $.tags;
        this.transitRouterAttachmentId = $.transitRouterAttachmentId;
        this.transitRouterId = $.transitRouterId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTransitRouterVpnAttachmentsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTransitRouterVpnAttachmentsPlainArgs $;

        public Builder() {
            $ = new GetTransitRouterVpnAttachmentsPlainArgs();
        }

        public Builder(GetTransitRouterVpnAttachmentsPlainArgs defaults) {
            $ = new GetTransitRouterVpnAttachmentsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cenId The ID of the Cloud Enterprise Network (CEN) instance.
         * 
         * @return builder
         * 
         */
        public Builder cenId(@Nullable String cenId) {
            $.cenId = cenId;
            return this;
        }

        /**
         * @param ids A list of Transit Router Vpn Attachment IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Transit Router Vpn Attachment IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param nameRegex A regex string to filter results by Group Metric Rule name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable String nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param status The Status of Transit Router Vpn Attachment. Valid Value: `Attached`, `Attaching`, `Detaching`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        /**
         * @param tags The tag of the resource
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param transitRouterAttachmentId The ID of the VPN attachment.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentId(@Nullable String transitRouterAttachmentId) {
            $.transitRouterAttachmentId = transitRouterAttachmentId;
            return this;
        }

        /**
         * @param transitRouterId The ID of the transit router.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterId(@Nullable String transitRouterId) {
            $.transitRouterId = transitRouterId;
            return this;
        }

        public GetTransitRouterVpnAttachmentsPlainArgs build() {
            return $;
        }
    }

}
