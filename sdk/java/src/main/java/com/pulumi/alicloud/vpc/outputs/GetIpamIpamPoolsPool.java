// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetIpamIpamPoolsPool {
    /**
     * @return The default network mask assigned by the IPAM address pool.IPv4 network mask value range: **0 to 32** bits.
     * 
     */
    private Integer allocationDefaultCidrMask;
    /**
     * @return The maximum network mask assigned by the IPAM address pool.IPv4 network mask value range: **0 to 32** bits.
     * 
     */
    private Integer allocationMaxCidrMask;
    /**
     * @return The minimum Network mask assigned by the IPAM address pool.IPv4 network mask value range: **0 to 32** bits.
     * 
     */
    private Integer allocationMinCidrMask;
    /**
     * @return Whether the automatic import function is enabled for the address pool.
     * 
     */
    private Boolean autoImport;
    /**
     * @return The creation time of the resource.
     * 
     */
    private String createTime;
    /**
     * @return Whether it is a child address pool. Value:-**true**: Yes.-**false**: No.
     * 
     */
    private Boolean hasSubPool;
    /**
     * @return The ID of the resource supplied above.
     * 
     */
    private String id;
    /**
     * @return The IP protocol version. Currently, only **IPv4** is supported * *.
     * 
     */
    private String ipVersion;
    /**
     * @return Ipam id.
     * 
     */
    private String ipamId;
    /**
     * @return The description of the IPAM address pool.It must be 2 to 256 characters in length and must start with an English letter or a Chinese character, but cannot start with &#39;http:// &#39;or &#39;https. If it is not filled in, it is empty. The default value is empty.
     * 
     */
    private String ipamPoolDescription;
    /**
     * @return The first ID of the resource.
     * 
     */
    private String ipamPoolId;
    /**
     * @return The name of the resource.
     * 
     */
    private String ipamPoolName;
    /**
     * @return Ipam scope id.
     * 
     */
    private String ipamScopeId;
    /**
     * @return The depth of the IPAM address pool. Value range: **0 to 10 * *.
     * 
     */
    private Integer poolDepth;
    /**
     * @return The effective region of the IPAM address pool.
     * 
     */
    private String poolRegionId;
    /**
     * @return The region ID of the resource.
     * 
     */
    private String regionId;
    /**
     * @return The ID of the resource group.
     * 
     */
    private String resourceGroupId;
    /**
     * @return The instance ID of the source IPAM address pool.&gt; If this parameter is not entered, the created address pool is the parent address pool.
     * 
     */
    private String sourceIpamPoolId;
    /**
     * @return The status of the resource.
     * 
     */
    private String status;
    /**
     * @return The tag of the resource.
     * 
     */
    private Map<String,String> tags;

    private GetIpamIpamPoolsPool() {}
    /**
     * @return The default network mask assigned by the IPAM address pool.IPv4 network mask value range: **0 to 32** bits.
     * 
     */
    public Integer allocationDefaultCidrMask() {
        return this.allocationDefaultCidrMask;
    }
    /**
     * @return The maximum network mask assigned by the IPAM address pool.IPv4 network mask value range: **0 to 32** bits.
     * 
     */
    public Integer allocationMaxCidrMask() {
        return this.allocationMaxCidrMask;
    }
    /**
     * @return The minimum Network mask assigned by the IPAM address pool.IPv4 network mask value range: **0 to 32** bits.
     * 
     */
    public Integer allocationMinCidrMask() {
        return this.allocationMinCidrMask;
    }
    /**
     * @return Whether the automatic import function is enabled for the address pool.
     * 
     */
    public Boolean autoImport() {
        return this.autoImport;
    }
    /**
     * @return The creation time of the resource.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Whether it is a child address pool. Value:-**true**: Yes.-**false**: No.
     * 
     */
    public Boolean hasSubPool() {
        return this.hasSubPool;
    }
    /**
     * @return The ID of the resource supplied above.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The IP protocol version. Currently, only **IPv4** is supported * *.
     * 
     */
    public String ipVersion() {
        return this.ipVersion;
    }
    /**
     * @return Ipam id.
     * 
     */
    public String ipamId() {
        return this.ipamId;
    }
    /**
     * @return The description of the IPAM address pool.It must be 2 to 256 characters in length and must start with an English letter or a Chinese character, but cannot start with &#39;http:// &#39;or &#39;https. If it is not filled in, it is empty. The default value is empty.
     * 
     */
    public String ipamPoolDescription() {
        return this.ipamPoolDescription;
    }
    /**
     * @return The first ID of the resource.
     * 
     */
    public String ipamPoolId() {
        return this.ipamPoolId;
    }
    /**
     * @return The name of the resource.
     * 
     */
    public String ipamPoolName() {
        return this.ipamPoolName;
    }
    /**
     * @return Ipam scope id.
     * 
     */
    public String ipamScopeId() {
        return this.ipamScopeId;
    }
    /**
     * @return The depth of the IPAM address pool. Value range: **0 to 10 * *.
     * 
     */
    public Integer poolDepth() {
        return this.poolDepth;
    }
    /**
     * @return The effective region of the IPAM address pool.
     * 
     */
    public String poolRegionId() {
        return this.poolRegionId;
    }
    /**
     * @return The region ID of the resource.
     * 
     */
    public String regionId() {
        return this.regionId;
    }
    /**
     * @return The ID of the resource group.
     * 
     */
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * @return The instance ID of the source IPAM address pool.&gt; If this parameter is not entered, the created address pool is the parent address pool.
     * 
     */
    public String sourceIpamPoolId() {
        return this.sourceIpamPoolId;
    }
    /**
     * @return The status of the resource.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The tag of the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIpamIpamPoolsPool defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer allocationDefaultCidrMask;
        private Integer allocationMaxCidrMask;
        private Integer allocationMinCidrMask;
        private Boolean autoImport;
        private String createTime;
        private Boolean hasSubPool;
        private String id;
        private String ipVersion;
        private String ipamId;
        private String ipamPoolDescription;
        private String ipamPoolId;
        private String ipamPoolName;
        private String ipamScopeId;
        private Integer poolDepth;
        private String poolRegionId;
        private String regionId;
        private String resourceGroupId;
        private String sourceIpamPoolId;
        private String status;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetIpamIpamPoolsPool defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocationDefaultCidrMask = defaults.allocationDefaultCidrMask;
    	      this.allocationMaxCidrMask = defaults.allocationMaxCidrMask;
    	      this.allocationMinCidrMask = defaults.allocationMinCidrMask;
    	      this.autoImport = defaults.autoImport;
    	      this.createTime = defaults.createTime;
    	      this.hasSubPool = defaults.hasSubPool;
    	      this.id = defaults.id;
    	      this.ipVersion = defaults.ipVersion;
    	      this.ipamId = defaults.ipamId;
    	      this.ipamPoolDescription = defaults.ipamPoolDescription;
    	      this.ipamPoolId = defaults.ipamPoolId;
    	      this.ipamPoolName = defaults.ipamPoolName;
    	      this.ipamScopeId = defaults.ipamScopeId;
    	      this.poolDepth = defaults.poolDepth;
    	      this.poolRegionId = defaults.poolRegionId;
    	      this.regionId = defaults.regionId;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.sourceIpamPoolId = defaults.sourceIpamPoolId;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder allocationDefaultCidrMask(Integer allocationDefaultCidrMask) {
            if (allocationDefaultCidrMask == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolsPool", "allocationDefaultCidrMask");
            }
            this.allocationDefaultCidrMask = allocationDefaultCidrMask;
            return this;
        }
        @CustomType.Setter
        public Builder allocationMaxCidrMask(Integer allocationMaxCidrMask) {
            if (allocationMaxCidrMask == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolsPool", "allocationMaxCidrMask");
            }
            this.allocationMaxCidrMask = allocationMaxCidrMask;
            return this;
        }
        @CustomType.Setter
        public Builder allocationMinCidrMask(Integer allocationMinCidrMask) {
            if (allocationMinCidrMask == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolsPool", "allocationMinCidrMask");
            }
            this.allocationMinCidrMask = allocationMinCidrMask;
            return this;
        }
        @CustomType.Setter
        public Builder autoImport(Boolean autoImport) {
            if (autoImport == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolsPool", "autoImport");
            }
            this.autoImport = autoImport;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolsPool", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder hasSubPool(Boolean hasSubPool) {
            if (hasSubPool == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolsPool", "hasSubPool");
            }
            this.hasSubPool = hasSubPool;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolsPool", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipVersion(String ipVersion) {
            if (ipVersion == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolsPool", "ipVersion");
            }
            this.ipVersion = ipVersion;
            return this;
        }
        @CustomType.Setter
        public Builder ipamId(String ipamId) {
            if (ipamId == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolsPool", "ipamId");
            }
            this.ipamId = ipamId;
            return this;
        }
        @CustomType.Setter
        public Builder ipamPoolDescription(String ipamPoolDescription) {
            if (ipamPoolDescription == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolsPool", "ipamPoolDescription");
            }
            this.ipamPoolDescription = ipamPoolDescription;
            return this;
        }
        @CustomType.Setter
        public Builder ipamPoolId(String ipamPoolId) {
            if (ipamPoolId == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolsPool", "ipamPoolId");
            }
            this.ipamPoolId = ipamPoolId;
            return this;
        }
        @CustomType.Setter
        public Builder ipamPoolName(String ipamPoolName) {
            if (ipamPoolName == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolsPool", "ipamPoolName");
            }
            this.ipamPoolName = ipamPoolName;
            return this;
        }
        @CustomType.Setter
        public Builder ipamScopeId(String ipamScopeId) {
            if (ipamScopeId == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolsPool", "ipamScopeId");
            }
            this.ipamScopeId = ipamScopeId;
            return this;
        }
        @CustomType.Setter
        public Builder poolDepth(Integer poolDepth) {
            if (poolDepth == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolsPool", "poolDepth");
            }
            this.poolDepth = poolDepth;
            return this;
        }
        @CustomType.Setter
        public Builder poolRegionId(String poolRegionId) {
            if (poolRegionId == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolsPool", "poolRegionId");
            }
            this.poolRegionId = poolRegionId;
            return this;
        }
        @CustomType.Setter
        public Builder regionId(String regionId) {
            if (regionId == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolsPool", "regionId");
            }
            this.regionId = regionId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupId(String resourceGroupId) {
            if (resourceGroupId == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolsPool", "resourceGroupId");
            }
            this.resourceGroupId = resourceGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceIpamPoolId(String sourceIpamPoolId) {
            if (sourceIpamPoolId == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolsPool", "sourceIpamPoolId");
            }
            this.sourceIpamPoolId = sourceIpamPoolId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolsPool", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolsPool", "tags");
            }
            this.tags = tags;
            return this;
        }
        public GetIpamIpamPoolsPool build() {
            final var _resultValue = new GetIpamIpamPoolsPool();
            _resultValue.allocationDefaultCidrMask = allocationDefaultCidrMask;
            _resultValue.allocationMaxCidrMask = allocationMaxCidrMask;
            _resultValue.allocationMinCidrMask = allocationMinCidrMask;
            _resultValue.autoImport = autoImport;
            _resultValue.createTime = createTime;
            _resultValue.hasSubPool = hasSubPool;
            _resultValue.id = id;
            _resultValue.ipVersion = ipVersion;
            _resultValue.ipamId = ipamId;
            _resultValue.ipamPoolDescription = ipamPoolDescription;
            _resultValue.ipamPoolId = ipamPoolId;
            _resultValue.ipamPoolName = ipamPoolName;
            _resultValue.ipamScopeId = ipamScopeId;
            _resultValue.poolDepth = poolDepth;
            _resultValue.poolRegionId = poolRegionId;
            _resultValue.regionId = regionId;
            _resultValue.resourceGroupId = resourceGroupId;
            _resultValue.sourceIpamPoolId = sourceIpamPoolId;
            _resultValue.status = status;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
