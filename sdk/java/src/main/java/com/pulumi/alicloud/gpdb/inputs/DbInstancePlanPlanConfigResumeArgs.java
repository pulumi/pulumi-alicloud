// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.gpdb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DbInstancePlanPlanConfigResumeArgs extends com.pulumi.resources.ResourceArgs {

    public static final DbInstancePlanPlanConfigResumeArgs Empty = new DbInstancePlanPlanConfigResumeArgs();

    /**
     * The executed time of the Plan.
     * 
     */
    @Import(name="executeTime")
    private @Nullable Output<String> executeTime;

    /**
     * @return The executed time of the Plan.
     * 
     */
    public Optional<Output<String>> executeTime() {
        return Optional.ofNullable(this.executeTime);
    }

    /**
     * The Cron Time of the plan.
     * 
     */
    @Import(name="planCronTime")
    private @Nullable Output<String> planCronTime;

    /**
     * @return The Cron Time of the plan.
     * 
     */
    public Optional<Output<String>> planCronTime() {
        return Optional.ofNullable(this.planCronTime);
    }

    /**
     * (Available since v1.231.0) The status of the plan task.
     * 
     */
    @Import(name="planTaskStatus")
    private @Nullable Output<String> planTaskStatus;

    /**
     * @return (Available since v1.231.0) The status of the plan task.
     * 
     */
    public Optional<Output<String>> planTaskStatus() {
        return Optional.ofNullable(this.planTaskStatus);
    }

    private DbInstancePlanPlanConfigResumeArgs() {}

    private DbInstancePlanPlanConfigResumeArgs(DbInstancePlanPlanConfigResumeArgs $) {
        this.executeTime = $.executeTime;
        this.planCronTime = $.planCronTime;
        this.planTaskStatus = $.planTaskStatus;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DbInstancePlanPlanConfigResumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DbInstancePlanPlanConfigResumeArgs $;

        public Builder() {
            $ = new DbInstancePlanPlanConfigResumeArgs();
        }

        public Builder(DbInstancePlanPlanConfigResumeArgs defaults) {
            $ = new DbInstancePlanPlanConfigResumeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param executeTime The executed time of the Plan.
         * 
         * @return builder
         * 
         */
        public Builder executeTime(@Nullable Output<String> executeTime) {
            $.executeTime = executeTime;
            return this;
        }

        /**
         * @param executeTime The executed time of the Plan.
         * 
         * @return builder
         * 
         */
        public Builder executeTime(String executeTime) {
            return executeTime(Output.of(executeTime));
        }

        /**
         * @param planCronTime The Cron Time of the plan.
         * 
         * @return builder
         * 
         */
        public Builder planCronTime(@Nullable Output<String> planCronTime) {
            $.planCronTime = planCronTime;
            return this;
        }

        /**
         * @param planCronTime The Cron Time of the plan.
         * 
         * @return builder
         * 
         */
        public Builder planCronTime(String planCronTime) {
            return planCronTime(Output.of(planCronTime));
        }

        /**
         * @param planTaskStatus (Available since v1.231.0) The status of the plan task.
         * 
         * @return builder
         * 
         */
        public Builder planTaskStatus(@Nullable Output<String> planTaskStatus) {
            $.planTaskStatus = planTaskStatus;
            return this;
        }

        /**
         * @param planTaskStatus (Available since v1.231.0) The status of the plan task.
         * 
         * @return builder
         * 
         */
        public Builder planTaskStatus(String planTaskStatus) {
            return planTaskStatus(Output.of(planTaskStatus));
        }

        public DbInstancePlanPlanConfigResumeArgs build() {
            return $;
        }
    }

}
