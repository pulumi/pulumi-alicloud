// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rocketmq;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClientUserArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClientUserArgs Empty = new ClientUserArgs();

    /**
     * The SAG APP bandwidth that the user can use. Unit: Kbit/s. Maximum value: 2000 Kbit/s.
     * 
     */
    @Import(name="bandwidth", required=true)
    private Output<Integer> bandwidth;

    /**
     * @return The SAG APP bandwidth that the user can use. Unit: Kbit/s. Maximum value: 2000 Kbit/s.
     * 
     */
    public Output<Integer> bandwidth() {
        return this.bandwidth;
    }

    /**
     * The IP address of the SAG APP. If you specify this parameter, the current account always uses the specified IP address.Note The IP address must be in the private CIDR block of the SAG client.If you do not specify this parameter, the system automatically allocates an IP address from the private CIDR block of the SAG client. In this case, each re-connection uses a different IP address.
     * 
     */
    @Import(name="clientIp")
    private @Nullable Output<String> clientIp;

    /**
     * @return The IP address of the SAG APP. If you specify this parameter, the current account always uses the specified IP address.Note The IP address must be in the private CIDR block of the SAG client.If you do not specify this parameter, the system automatically allocates an IP address from the private CIDR block of the SAG client. In this case, each re-connection uses a different IP address.
     * 
     */
    public Optional<Output<String>> clientIp() {
        return Optional.ofNullable(this.clientIp);
    }

    /**
     * The password of the KMS Encryption.
     * 
     */
    @Import(name="kmsEncryptedPassword")
    private @Nullable Output<String> kmsEncryptedPassword;

    /**
     * @return The password of the KMS Encryption.
     * 
     */
    public Optional<Output<String>> kmsEncryptedPassword() {
        return Optional.ofNullable(this.kmsEncryptedPassword);
    }

    /**
     * The context of the KMS Encryption.
     * 
     */
    @Import(name="kmsEncryptionContext")
    private @Nullable Output<Map<String,Object>> kmsEncryptionContext;

    /**
     * @return The context of the KMS Encryption.
     * 
     */
    public Optional<Output<Map<String,Object>>> kmsEncryptionContext() {
        return Optional.ofNullable(this.kmsEncryptionContext);
    }

    /**
     * The password used to log on to the SAG APP.Both the user name and the password must be specified. If you specify the user name, the password must be specified, too.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return The password used to log on to the SAG APP.Both the user name and the password must be specified. If you specify the user name, the password must be specified, too.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * The ID of the SAG instance created for the SAG APP.
     * 
     */
    @Import(name="sagId", required=true)
    private Output<String> sagId;

    /**
     * @return The ID of the SAG instance created for the SAG APP.
     * 
     */
    public Output<String> sagId() {
        return this.sagId;
    }

    /**
     * The email address of the user. The administrator uses this address to send the account information for logging on to the APP to the user.
     * 
     */
    @Import(name="userMail", required=true)
    private Output<String> userMail;

    /**
     * @return The email address of the user. The administrator uses this address to send the account information for logging on to the APP to the user.
     * 
     */
    public Output<String> userMail() {
        return this.userMail;
    }

    /**
     * The user name. User names in the same SAG APP must be unique.Both the user name and the password must be specified. If you specify the user name, the password must be specified, too.
     * 
     */
    @Import(name="userName")
    private @Nullable Output<String> userName;

    /**
     * @return The user name. User names in the same SAG APP must be unique.Both the user name and the password must be specified. If you specify the user name, the password must be specified, too.
     * 
     */
    public Optional<Output<String>> userName() {
        return Optional.ofNullable(this.userName);
    }

    private ClientUserArgs() {}

    private ClientUserArgs(ClientUserArgs $) {
        this.bandwidth = $.bandwidth;
        this.clientIp = $.clientIp;
        this.kmsEncryptedPassword = $.kmsEncryptedPassword;
        this.kmsEncryptionContext = $.kmsEncryptionContext;
        this.password = $.password;
        this.sagId = $.sagId;
        this.userMail = $.userMail;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClientUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClientUserArgs $;

        public Builder() {
            $ = new ClientUserArgs();
        }

        public Builder(ClientUserArgs defaults) {
            $ = new ClientUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bandwidth The SAG APP bandwidth that the user can use. Unit: Kbit/s. Maximum value: 2000 Kbit/s.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(Output<Integer> bandwidth) {
            $.bandwidth = bandwidth;
            return this;
        }

        /**
         * @param bandwidth The SAG APP bandwidth that the user can use. Unit: Kbit/s. Maximum value: 2000 Kbit/s.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(Integer bandwidth) {
            return bandwidth(Output.of(bandwidth));
        }

        /**
         * @param clientIp The IP address of the SAG APP. If you specify this parameter, the current account always uses the specified IP address.Note The IP address must be in the private CIDR block of the SAG client.If you do not specify this parameter, the system automatically allocates an IP address from the private CIDR block of the SAG client. In this case, each re-connection uses a different IP address.
         * 
         * @return builder
         * 
         */
        public Builder clientIp(@Nullable Output<String> clientIp) {
            $.clientIp = clientIp;
            return this;
        }

        /**
         * @param clientIp The IP address of the SAG APP. If you specify this parameter, the current account always uses the specified IP address.Note The IP address must be in the private CIDR block of the SAG client.If you do not specify this parameter, the system automatically allocates an IP address from the private CIDR block of the SAG client. In this case, each re-connection uses a different IP address.
         * 
         * @return builder
         * 
         */
        public Builder clientIp(String clientIp) {
            return clientIp(Output.of(clientIp));
        }

        /**
         * @param kmsEncryptedPassword The password of the KMS Encryption.
         * 
         * @return builder
         * 
         */
        public Builder kmsEncryptedPassword(@Nullable Output<String> kmsEncryptedPassword) {
            $.kmsEncryptedPassword = kmsEncryptedPassword;
            return this;
        }

        /**
         * @param kmsEncryptedPassword The password of the KMS Encryption.
         * 
         * @return builder
         * 
         */
        public Builder kmsEncryptedPassword(String kmsEncryptedPassword) {
            return kmsEncryptedPassword(Output.of(kmsEncryptedPassword));
        }

        /**
         * @param kmsEncryptionContext The context of the KMS Encryption.
         * 
         * @return builder
         * 
         */
        public Builder kmsEncryptionContext(@Nullable Output<Map<String,Object>> kmsEncryptionContext) {
            $.kmsEncryptionContext = kmsEncryptionContext;
            return this;
        }

        /**
         * @param kmsEncryptionContext The context of the KMS Encryption.
         * 
         * @return builder
         * 
         */
        public Builder kmsEncryptionContext(Map<String,Object> kmsEncryptionContext) {
            return kmsEncryptionContext(Output.of(kmsEncryptionContext));
        }

        /**
         * @param password The password used to log on to the SAG APP.Both the user name and the password must be specified. If you specify the user name, the password must be specified, too.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The password used to log on to the SAG APP.Both the user name and the password must be specified. If you specify the user name, the password must be specified, too.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param sagId The ID of the SAG instance created for the SAG APP.
         * 
         * @return builder
         * 
         */
        public Builder sagId(Output<String> sagId) {
            $.sagId = sagId;
            return this;
        }

        /**
         * @param sagId The ID of the SAG instance created for the SAG APP.
         * 
         * @return builder
         * 
         */
        public Builder sagId(String sagId) {
            return sagId(Output.of(sagId));
        }

        /**
         * @param userMail The email address of the user. The administrator uses this address to send the account information for logging on to the APP to the user.
         * 
         * @return builder
         * 
         */
        public Builder userMail(Output<String> userMail) {
            $.userMail = userMail;
            return this;
        }

        /**
         * @param userMail The email address of the user. The administrator uses this address to send the account information for logging on to the APP to the user.
         * 
         * @return builder
         * 
         */
        public Builder userMail(String userMail) {
            return userMail(Output.of(userMail));
        }

        /**
         * @param userName The user name. User names in the same SAG APP must be unique.Both the user name and the password must be specified. If you specify the user name, the password must be specified, too.
         * 
         * @return builder
         * 
         */
        public Builder userName(@Nullable Output<String> userName) {
            $.userName = userName;
            return this;
        }

        /**
         * @param userName The user name. User names in the same SAG APP must be unique.Both the user name and the password must be specified. If you specify the user name, the password must be specified, too.
         * 
         * @return builder
         * 
         */
        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public ClientUserArgs build() {
            if ($.bandwidth == null) {
                throw new MissingRequiredPropertyException("ClientUserArgs", "bandwidth");
            }
            if ($.sagId == null) {
                throw new MissingRequiredPropertyException("ClientUserArgs", "sagId");
            }
            if ($.userMail == null) {
                throw new MissingRequiredPropertyException("ClientUserArgs", "userMail");
            }
            return $;
        }
    }

}
