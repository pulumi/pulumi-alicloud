// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRouteEntriesEntry {
    /**
     * @return The destination CIDR block of the route entry.
     * 
     */
    private String cidrBlock;
    /**
     * @return The instance ID of the next hop.
     * 
     */
    private String instanceId;
    /**
     * @return The type of the next hop.
     * 
     */
    private String nextHopType;
    /**
     * @return The ID of the router table to which the route entry belongs.
     * 
     */
    private String routeTableId;
    /**
     * @return The status of the route entry.
     * 
     */
    private String status;
    /**
     * @return The type of the route entry.
     * 
     */
    private String type;

    private GetRouteEntriesEntry() {}
    /**
     * @return The destination CIDR block of the route entry.
     * 
     */
    public String cidrBlock() {
        return this.cidrBlock;
    }
    /**
     * @return The instance ID of the next hop.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return The type of the next hop.
     * 
     */
    public String nextHopType() {
        return this.nextHopType;
    }
    /**
     * @return The ID of the router table to which the route entry belongs.
     * 
     */
    public String routeTableId() {
        return this.routeTableId;
    }
    /**
     * @return The status of the route entry.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The type of the route entry.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRouteEntriesEntry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cidrBlock;
        private String instanceId;
        private String nextHopType;
        private String routeTableId;
        private String status;
        private String type;
        public Builder() {}
        public Builder(GetRouteEntriesEntry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidrBlock = defaults.cidrBlock;
    	      this.instanceId = defaults.instanceId;
    	      this.nextHopType = defaults.nextHopType;
    	      this.routeTableId = defaults.routeTableId;
    	      this.status = defaults.status;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder cidrBlock(String cidrBlock) {
            if (cidrBlock == null) {
              throw new MissingRequiredPropertyException("GetRouteEntriesEntry", "cidrBlock");
            }
            this.cidrBlock = cidrBlock;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetRouteEntriesEntry", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder nextHopType(String nextHopType) {
            if (nextHopType == null) {
              throw new MissingRequiredPropertyException("GetRouteEntriesEntry", "nextHopType");
            }
            this.nextHopType = nextHopType;
            return this;
        }
        @CustomType.Setter
        public Builder routeTableId(String routeTableId) {
            if (routeTableId == null) {
              throw new MissingRequiredPropertyException("GetRouteEntriesEntry", "routeTableId");
            }
            this.routeTableId = routeTableId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetRouteEntriesEntry", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetRouteEntriesEntry", "type");
            }
            this.type = type;
            return this;
        }
        public GetRouteEntriesEntry build() {
            final var _resultValue = new GetRouteEntriesEntry();
            _resultValue.cidrBlock = cidrBlock;
            _resultValue.instanceId = instanceId;
            _resultValue.nextHopType = nextHopType;
            _resultValue.routeTableId = routeTableId;
            _resultValue.status = status;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
