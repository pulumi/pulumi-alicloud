// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.hbr.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CrossAccountState extends com.pulumi.resources.ResourceArgs {

    public static final CrossAccountState Empty = new CrossAccountState();

    /**
     * Backup account alias
     * 
     */
    @Import(name="alias")
    private @Nullable Output<String> alias;

    /**
     * @return Backup account alias
     * 
     */
    public Optional<Output<String>> alias() {
        return Optional.ofNullable(this.alias);
    }

    /**
     * Timestamp of the creation time
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<Integer> createTime;

    /**
     * @return Timestamp of the creation time
     * 
     */
    public Optional<Output<Integer>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The name of RAM role that the backup account authorizes the management account to manage its resources
     * 
     */
    @Import(name="crossAccountRoleName")
    private @Nullable Output<String> crossAccountRoleName;

    /**
     * @return The name of RAM role that the backup account authorizes the management account to manage its resources
     * 
     */
    public Optional<Output<String>> crossAccountRoleName() {
        return Optional.ofNullable(this.crossAccountRoleName);
    }

    /**
     * The uid of the backup account.
     * 
     */
    @Import(name="crossAccountUserId")
    private @Nullable Output<Integer> crossAccountUserId;

    /**
     * @return The uid of the backup account.
     * 
     */
    public Optional<Output<Integer>> crossAccountUserId() {
        return Optional.ofNullable(this.crossAccountUserId);
    }

    private CrossAccountState() {}

    private CrossAccountState(CrossAccountState $) {
        this.alias = $.alias;
        this.createTime = $.createTime;
        this.crossAccountRoleName = $.crossAccountRoleName;
        this.crossAccountUserId = $.crossAccountUserId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CrossAccountState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CrossAccountState $;

        public Builder() {
            $ = new CrossAccountState();
        }

        public Builder(CrossAccountState defaults) {
            $ = new CrossAccountState(Objects.requireNonNull(defaults));
        }

        /**
         * @param alias Backup account alias
         * 
         * @return builder
         * 
         */
        public Builder alias(@Nullable Output<String> alias) {
            $.alias = alias;
            return this;
        }

        /**
         * @param alias Backup account alias
         * 
         * @return builder
         * 
         */
        public Builder alias(String alias) {
            return alias(Output.of(alias));
        }

        /**
         * @param createTime Timestamp of the creation time
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<Integer> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Timestamp of the creation time
         * 
         * @return builder
         * 
         */
        public Builder createTime(Integer createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param crossAccountRoleName The name of RAM role that the backup account authorizes the management account to manage its resources
         * 
         * @return builder
         * 
         */
        public Builder crossAccountRoleName(@Nullable Output<String> crossAccountRoleName) {
            $.crossAccountRoleName = crossAccountRoleName;
            return this;
        }

        /**
         * @param crossAccountRoleName The name of RAM role that the backup account authorizes the management account to manage its resources
         * 
         * @return builder
         * 
         */
        public Builder crossAccountRoleName(String crossAccountRoleName) {
            return crossAccountRoleName(Output.of(crossAccountRoleName));
        }

        /**
         * @param crossAccountUserId The uid of the backup account.
         * 
         * @return builder
         * 
         */
        public Builder crossAccountUserId(@Nullable Output<Integer> crossAccountUserId) {
            $.crossAccountUserId = crossAccountUserId;
            return this;
        }

        /**
         * @param crossAccountUserId The uid of the backup account.
         * 
         * @return builder
         * 
         */
        public Builder crossAccountUserId(Integer crossAccountUserId) {
            return crossAccountUserId(Output.of(crossAccountUserId));
        }

        public CrossAccountState build() {
            return $;
        }
    }

}
