// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudstoragegateway;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.cloudstoragegateway.ExpressSyncArgs;
import com.pulumi.alicloud.cloudstoragegateway.inputs.ExpressSyncState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Cloud Storage Gateway Express Sync resource.
 * 
 * For information about Cloud Storage Gateway Express Sync and how to use it, see [What is Express Sync](https://www.alibabacloud.com/help/en/cloud-storage-gateway/latest/xzpxo3).
 * 
 * &gt; **NOTE:** Available since v1.144.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetRegionsArgs;
 * import com.pulumi.random.Uuid;
 * import com.pulumi.alicloud.cloudstoragegateway.StorageBundle;
 * import com.pulumi.alicloud.cloudstoragegateway.StorageBundleArgs;
 * import com.pulumi.std.StdFunctions;
 * import com.pulumi.std.inputs.ReplaceArgs;
 * import com.pulumi.std.inputs.SubstrArgs;
 * import com.pulumi.alicloud.oss.Bucket;
 * import com.pulumi.alicloud.oss.BucketArgs;
 * import com.pulumi.alicloud.oss.BucketAcl;
 * import com.pulumi.alicloud.oss.BucketAclArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.cloudstoragegateway.CloudstoragegatewayFunctions;
 * import com.pulumi.alicloud.cloudstoragegateway.inputs.GetStocksArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.cloudstoragegateway.Gateway;
 * import com.pulumi.alicloud.cloudstoragegateway.GatewayArgs;
 * import com.pulumi.alicloud.cloudstoragegateway.GatewayCacheDisk;
 * import com.pulumi.alicloud.cloudstoragegateway.GatewayCacheDiskArgs;
 * import com.pulumi.alicloud.cloudstoragegateway.GatewayFileShare;
 * import com.pulumi.alicloud.cloudstoragegateway.GatewayFileShareArgs;
 * import com.pulumi.alicloud.cloudstoragegateway.ExpressSync;
 * import com.pulumi.alicloud.cloudstoragegateway.ExpressSyncArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("tf-example");
 *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
 *             .min(10000)
 *             .max(99999)
 *             .build());
 * 
 *         final var default = AlicloudFunctions.getRegions(GetRegionsArgs.builder()
 *             .current(true)
 *             .build());
 * 
 *         var defaultUuid = new Uuid("defaultUuid");
 * 
 *         var defaultStorageBundle = new StorageBundle("defaultStorageBundle", StorageBundleArgs.builder()
 *             .storageBundleName(StdFunctions.substr(SubstrArgs.builder()
 *                 .input(String.format("tf-example-%s", StdFunctions.replace(ReplaceArgs.builder()
 *                     .text(defaultUuid.result())
 *                     .search("-")
 *                     .replace("")
 *                     .build()).result()))
 *                 .offset(0)
 *                 .length(16)
 *                 .build()).result())
 *             .build());
 * 
 *         var defaultBucket = new Bucket("defaultBucket", BucketArgs.builder()
 *             .bucket(StdFunctions.substr(SubstrArgs.builder()
 *                 .input(String.format("tf-example-%s", StdFunctions.replace(ReplaceArgs.builder()
 *                     .text(defaultUuid.result())
 *                     .search("-")
 *                     .replace("")
 *                     .build()).result()))
 *                 .offset(0)
 *                 .length(16)
 *                 .build()).result())
 *             .build());
 * 
 *         var defaultBucketAcl = new BucketAcl("defaultBucketAcl", BucketAclArgs.builder()
 *             .bucket(defaultBucket.bucket())
 *             .acl("public-read-write")
 *             .build());
 * 
 *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
 *             .vpcName(name)
 *             .cidrBlock("172.16.0.0/12")
 *             .build());
 * 
 *         final var defaultGetStocks = CloudstoragegatewayFunctions.getStocks(GetStocksArgs.builder()
 *             .gatewayClass("Standard")
 *             .build());
 * 
 *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
 *             .vpcId(defaultNetwork.id())
 *             .cidrBlock("172.16.0.0/21")
 *             .zoneId(defaultGetStocks.stocks()[0].zoneId())
 *             .vswitchName(name)
 *             .build());
 * 
 *         var defaultGateway = new Gateway("defaultGateway", GatewayArgs.builder()
 *             .gatewayName(name)
 *             .description(name)
 *             .gatewayClass("Standard")
 *             .type("File")
 *             .paymentType("PayAsYouGo")
 *             .vswitchId(defaultSwitch.id())
 *             .releaseAfterExpiration(true)
 *             .publicNetworkBandwidth(40)
 *             .storageBundleId(defaultStorageBundle.id())
 *             .location("Cloud")
 *             .build());
 * 
 *         var defaultGatewayCacheDisk = new GatewayCacheDisk("defaultGatewayCacheDisk", GatewayCacheDiskArgs.builder()
 *             .cacheDiskCategory("cloud_efficiency")
 *             .gatewayId(defaultGateway.id())
 *             .cacheDiskSizeInGb(50)
 *             .build());
 * 
 *         var defaultGatewayFileShare = new GatewayFileShare("defaultGatewayFileShare", GatewayFileShareArgs.builder()
 *             .gatewayFileShareName(name)
 *             .gatewayId(defaultGateway.id())
 *             .localPath(defaultGatewayCacheDisk.localFilePath())
 *             .ossBucketName(defaultBucket.bucket())
 *             .ossEndpoint(defaultBucket.extranetEndpoint())
 *             .protocol("NFS")
 *             .remoteSync(true)
 *             .pollingInterval(4500)
 *             .feLimit(0)
 *             .backendLimit(0)
 *             .cacheMode("Cache")
 *             .squash("none")
 *             .lagPeriod(5)
 *             .build());
 * 
 *         var defaultExpressSync = new ExpressSync("defaultExpressSync", ExpressSyncArgs.builder()
 *             .bucketName(defaultGatewayFileShare.ossBucketName())
 *             .bucketRegion(default_.regions()[0].id())
 *             .description(name)
 *             .expressSyncName(String.format("%s-%s", name,defaultInteger.result()))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Cloud Storage Gateway Express Sync can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:cloudstoragegateway/expressSync:ExpressSync example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:cloudstoragegateway/expressSync:ExpressSync")
public class ExpressSync extends com.pulumi.resources.CustomResource {
    /**
     * The name of the OSS Bucket.
     * 
     */
    @Export(name="bucketName", refs={String.class}, tree="[0]")
    private Output<String> bucketName;

    /**
     * @return The name of the OSS Bucket.
     * 
     */
    public Output<String> bucketName() {
        return this.bucketName;
    }
    /**
     * The prefix of the OSS Bucket.
     * 
     */
    @Export(name="bucketPrefix", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> bucketPrefix;

    /**
     * @return The prefix of the OSS Bucket.
     * 
     */
    public Output<Optional<String>> bucketPrefix() {
        return Codegen.optional(this.bucketPrefix);
    }
    /**
     * The region of the OSS Bucket.
     * 
     */
    @Export(name="bucketRegion", refs={String.class}, tree="[0]")
    private Output<String> bucketRegion;

    /**
     * @return The region of the OSS Bucket.
     * 
     */
    public Output<String> bucketRegion() {
        return this.bucketRegion;
    }
    /**
     * The description of the Express Sync. The length of the name is limited to `1` to `255` characters.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the Express Sync. The length of the name is limited to `1` to `255` characters.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The name of the ExpressSync. The length of the name is limited to `1` to `128` characters. It can contain uppercase and lowercase letters, Chinese characters, numbers, English periods (.), underscores (_), or hyphens (-), and must start with  letters.
     * 
     */
    @Export(name="expressSyncName", refs={String.class}, tree="[0]")
    private Output<String> expressSyncName;

    /**
     * @return The name of the ExpressSync. The length of the name is limited to `1` to `128` characters. It can contain uppercase and lowercase letters, Chinese characters, numbers, English periods (.), underscores (_), or hyphens (-), and must start with  letters.
     * 
     */
    public Output<String> expressSyncName() {
        return this.expressSyncName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExpressSync(java.lang.String name) {
        this(name, ExpressSyncArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExpressSync(java.lang.String name, ExpressSyncArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExpressSync(java.lang.String name, ExpressSyncArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:cloudstoragegateway/expressSync:ExpressSync", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ExpressSync(java.lang.String name, Output<java.lang.String> id, @Nullable ExpressSyncState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:cloudstoragegateway/expressSync:ExpressSync", name, state, makeResourceOptions(options, id), false);
    }

    private static ExpressSyncArgs makeArgs(ExpressSyncArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ExpressSyncArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExpressSync get(java.lang.String name, Output<java.lang.String> id, @Nullable ExpressSyncState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExpressSync(name, id, state, options);
    }
}
