// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KubernetesAddonState extends com.pulumi.resources.ResourceArgs {

    public static final KubernetesAddonState Empty = new KubernetesAddonState();

    /**
     * Is the addon ready for upgrade.
     * 
     */
    @Import(name="canUpgrade")
    private @Nullable Output<Boolean> canUpgrade;

    /**
     * @return Is the addon ready for upgrade.
     * 
     */
    public Optional<Output<Boolean>> canUpgrade() {
        return Optional.ofNullable(this.canUpgrade);
    }

    /**
     * Whether to clean up cloud resources when deleting. Currently only works for addon `ack-virtual-node` and you must specify it when uninstall addon `ack-virtual-node`. Valid values: `true`: clean up, `false`: do not clean up.
     * 
     */
    @Import(name="cleanupCloudResources")
    private @Nullable Output<Boolean> cleanupCloudResources;

    /**
     * @return Whether to clean up cloud resources when deleting. Currently only works for addon `ack-virtual-node` and you must specify it when uninstall addon `ack-virtual-node`. Valid values: `true`: clean up, `false`: do not clean up.
     * 
     */
    public Optional<Output<Boolean>> cleanupCloudResources() {
        return Optional.ofNullable(this.cleanupCloudResources);
    }

    /**
     * The id of kubernetes cluster.
     * 
     */
    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    /**
     * @return The id of kubernetes cluster.
     * 
     */
    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * The customized configuration of addon. Your customized configuration will be merged to existed configuration stored in server. If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. You can checkout the customized configuration of the addon through datasource `alicloud.cs.getKubernetesAddonMetadata`, the returned format is the standard json schema. If return empty, it means that the addon does not support custom configuration yet. You can also checkout the current custom configuration through the data source `alicloud.cs.getKubernetesAddons`.
     * 
     */
    @Import(name="config")
    private @Nullable Output<String> config;

    /**
     * @return The customized configuration of addon. Your customized configuration will be merged to existed configuration stored in server. If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. You can checkout the customized configuration of the addon through datasource `alicloud.cs.getKubernetesAddonMetadata`, the returned format is the standard json schema. If return empty, it means that the addon does not support custom configuration yet. You can also checkout the current custom configuration through the data source `alicloud.cs.getKubernetesAddons`.
     * 
     */
    public Optional<Output<String>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * The name of addon.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of addon.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The version which addon can be upgraded to.
     * 
     */
    @Import(name="nextVersion")
    private @Nullable Output<String> nextVersion;

    /**
     * @return The version which addon can be upgraded to.
     * 
     */
    public Optional<Output<String>> nextVersion() {
        return Optional.ofNullable(this.nextVersion);
    }

    /**
     * Is it a mandatory addon to be installed.
     * 
     */
    @Import(name="required")
    private @Nullable Output<Boolean> required;

    /**
     * @return Is it a mandatory addon to be installed.
     * 
     */
    public Optional<Output<Boolean>> required() {
        return Optional.ofNullable(this.required);
    }

    /**
     * The current version of addon.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return The current version of addon.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private KubernetesAddonState() {}

    private KubernetesAddonState(KubernetesAddonState $) {
        this.canUpgrade = $.canUpgrade;
        this.cleanupCloudResources = $.cleanupCloudResources;
        this.clusterId = $.clusterId;
        this.config = $.config;
        this.name = $.name;
        this.nextVersion = $.nextVersion;
        this.required = $.required;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubernetesAddonState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubernetesAddonState $;

        public Builder() {
            $ = new KubernetesAddonState();
        }

        public Builder(KubernetesAddonState defaults) {
            $ = new KubernetesAddonState(Objects.requireNonNull(defaults));
        }

        /**
         * @param canUpgrade Is the addon ready for upgrade.
         * 
         * @return builder
         * 
         */
        public Builder canUpgrade(@Nullable Output<Boolean> canUpgrade) {
            $.canUpgrade = canUpgrade;
            return this;
        }

        /**
         * @param canUpgrade Is the addon ready for upgrade.
         * 
         * @return builder
         * 
         */
        public Builder canUpgrade(Boolean canUpgrade) {
            return canUpgrade(Output.of(canUpgrade));
        }

        /**
         * @param cleanupCloudResources Whether to clean up cloud resources when deleting. Currently only works for addon `ack-virtual-node` and you must specify it when uninstall addon `ack-virtual-node`. Valid values: `true`: clean up, `false`: do not clean up.
         * 
         * @return builder
         * 
         */
        public Builder cleanupCloudResources(@Nullable Output<Boolean> cleanupCloudResources) {
            $.cleanupCloudResources = cleanupCloudResources;
            return this;
        }

        /**
         * @param cleanupCloudResources Whether to clean up cloud resources when deleting. Currently only works for addon `ack-virtual-node` and you must specify it when uninstall addon `ack-virtual-node`. Valid values: `true`: clean up, `false`: do not clean up.
         * 
         * @return builder
         * 
         */
        public Builder cleanupCloudResources(Boolean cleanupCloudResources) {
            return cleanupCloudResources(Output.of(cleanupCloudResources));
        }

        /**
         * @param clusterId The id of kubernetes cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The id of kubernetes cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param config The customized configuration of addon. Your customized configuration will be merged to existed configuration stored in server. If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. You can checkout the customized configuration of the addon through datasource `alicloud.cs.getKubernetesAddonMetadata`, the returned format is the standard json schema. If return empty, it means that the addon does not support custom configuration yet. You can also checkout the current custom configuration through the data source `alicloud.cs.getKubernetesAddons`.
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<String> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config The customized configuration of addon. Your customized configuration will be merged to existed configuration stored in server. If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. You can checkout the customized configuration of the addon through datasource `alicloud.cs.getKubernetesAddonMetadata`, the returned format is the standard json schema. If return empty, it means that the addon does not support custom configuration yet. You can also checkout the current custom configuration through the data source `alicloud.cs.getKubernetesAddons`.
         * 
         * @return builder
         * 
         */
        public Builder config(String config) {
            return config(Output.of(config));
        }

        /**
         * @param name The name of addon.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of addon.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nextVersion The version which addon can be upgraded to.
         * 
         * @return builder
         * 
         */
        public Builder nextVersion(@Nullable Output<String> nextVersion) {
            $.nextVersion = nextVersion;
            return this;
        }

        /**
         * @param nextVersion The version which addon can be upgraded to.
         * 
         * @return builder
         * 
         */
        public Builder nextVersion(String nextVersion) {
            return nextVersion(Output.of(nextVersion));
        }

        /**
         * @param required Is it a mandatory addon to be installed.
         * 
         * @return builder
         * 
         */
        public Builder required(@Nullable Output<Boolean> required) {
            $.required = required;
            return this;
        }

        /**
         * @param required Is it a mandatory addon to be installed.
         * 
         * @return builder
         * 
         */
        public Builder required(Boolean required) {
            return required(Output.of(required));
        }

        /**
         * @param version The current version of addon.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The current version of addon.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public KubernetesAddonState build() {
            return $;
        }
    }

}
