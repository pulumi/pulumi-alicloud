// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.quotas.outputs;

import com.pulumi.alicloud.quotas.outputs.GetApplicationInfosApplicationDimension;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApplicationInfosApplication {
    private String applicationId;
    private String approveValue;
    private String auditReason;
    private Double desireValue;
    private List<GetApplicationInfosApplicationDimension> dimensions;
    private String effectiveTime;
    private String expireTime;
    private String id;
    private Integer noticeType;
    private String productCode;
    private String quotaActionCode;
    private String quotaDescription;
    private String quotaName;
    private String quotaUnit;
    private String reason;
    private String status;

    private GetApplicationInfosApplication() {}
    public String applicationId() {
        return this.applicationId;
    }
    public String approveValue() {
        return this.approveValue;
    }
    public String auditReason() {
        return this.auditReason;
    }
    public Double desireValue() {
        return this.desireValue;
    }
    public List<GetApplicationInfosApplicationDimension> dimensions() {
        return this.dimensions;
    }
    public String effectiveTime() {
        return this.effectiveTime;
    }
    public String expireTime() {
        return this.expireTime;
    }
    public String id() {
        return this.id;
    }
    public Integer noticeType() {
        return this.noticeType;
    }
    public String productCode() {
        return this.productCode;
    }
    public String quotaActionCode() {
        return this.quotaActionCode;
    }
    public String quotaDescription() {
        return this.quotaDescription;
    }
    public String quotaName() {
        return this.quotaName;
    }
    public String quotaUnit() {
        return this.quotaUnit;
    }
    public String reason() {
        return this.reason;
    }
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationInfosApplication defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationId;
        private String approveValue;
        private String auditReason;
        private Double desireValue;
        private List<GetApplicationInfosApplicationDimension> dimensions;
        private String effectiveTime;
        private String expireTime;
        private String id;
        private Integer noticeType;
        private String productCode;
        private String quotaActionCode;
        private String quotaDescription;
        private String quotaName;
        private String quotaUnit;
        private String reason;
        private String status;
        public Builder() {}
        public Builder(GetApplicationInfosApplication defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.approveValue = defaults.approveValue;
    	      this.auditReason = defaults.auditReason;
    	      this.desireValue = defaults.desireValue;
    	      this.dimensions = defaults.dimensions;
    	      this.effectiveTime = defaults.effectiveTime;
    	      this.expireTime = defaults.expireTime;
    	      this.id = defaults.id;
    	      this.noticeType = defaults.noticeType;
    	      this.productCode = defaults.productCode;
    	      this.quotaActionCode = defaults.quotaActionCode;
    	      this.quotaDescription = defaults.quotaDescription;
    	      this.quotaName = defaults.quotaName;
    	      this.quotaUnit = defaults.quotaUnit;
    	      this.reason = defaults.reason;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder applicationId(String applicationId) {
            if (applicationId == null) {
              throw new MissingRequiredPropertyException("GetApplicationInfosApplication", "applicationId");
            }
            this.applicationId = applicationId;
            return this;
        }
        @CustomType.Setter
        public Builder approveValue(String approveValue) {
            if (approveValue == null) {
              throw new MissingRequiredPropertyException("GetApplicationInfosApplication", "approveValue");
            }
            this.approveValue = approveValue;
            return this;
        }
        @CustomType.Setter
        public Builder auditReason(String auditReason) {
            if (auditReason == null) {
              throw new MissingRequiredPropertyException("GetApplicationInfosApplication", "auditReason");
            }
            this.auditReason = auditReason;
            return this;
        }
        @CustomType.Setter
        public Builder desireValue(Double desireValue) {
            if (desireValue == null) {
              throw new MissingRequiredPropertyException("GetApplicationInfosApplication", "desireValue");
            }
            this.desireValue = desireValue;
            return this;
        }
        @CustomType.Setter
        public Builder dimensions(List<GetApplicationInfosApplicationDimension> dimensions) {
            if (dimensions == null) {
              throw new MissingRequiredPropertyException("GetApplicationInfosApplication", "dimensions");
            }
            this.dimensions = dimensions;
            return this;
        }
        public Builder dimensions(GetApplicationInfosApplicationDimension... dimensions) {
            return dimensions(List.of(dimensions));
        }
        @CustomType.Setter
        public Builder effectiveTime(String effectiveTime) {
            if (effectiveTime == null) {
              throw new MissingRequiredPropertyException("GetApplicationInfosApplication", "effectiveTime");
            }
            this.effectiveTime = effectiveTime;
            return this;
        }
        @CustomType.Setter
        public Builder expireTime(String expireTime) {
            if (expireTime == null) {
              throw new MissingRequiredPropertyException("GetApplicationInfosApplication", "expireTime");
            }
            this.expireTime = expireTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetApplicationInfosApplication", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder noticeType(Integer noticeType) {
            if (noticeType == null) {
              throw new MissingRequiredPropertyException("GetApplicationInfosApplication", "noticeType");
            }
            this.noticeType = noticeType;
            return this;
        }
        @CustomType.Setter
        public Builder productCode(String productCode) {
            if (productCode == null) {
              throw new MissingRequiredPropertyException("GetApplicationInfosApplication", "productCode");
            }
            this.productCode = productCode;
            return this;
        }
        @CustomType.Setter
        public Builder quotaActionCode(String quotaActionCode) {
            if (quotaActionCode == null) {
              throw new MissingRequiredPropertyException("GetApplicationInfosApplication", "quotaActionCode");
            }
            this.quotaActionCode = quotaActionCode;
            return this;
        }
        @CustomType.Setter
        public Builder quotaDescription(String quotaDescription) {
            if (quotaDescription == null) {
              throw new MissingRequiredPropertyException("GetApplicationInfosApplication", "quotaDescription");
            }
            this.quotaDescription = quotaDescription;
            return this;
        }
        @CustomType.Setter
        public Builder quotaName(String quotaName) {
            if (quotaName == null) {
              throw new MissingRequiredPropertyException("GetApplicationInfosApplication", "quotaName");
            }
            this.quotaName = quotaName;
            return this;
        }
        @CustomType.Setter
        public Builder quotaUnit(String quotaUnit) {
            if (quotaUnit == null) {
              throw new MissingRequiredPropertyException("GetApplicationInfosApplication", "quotaUnit");
            }
            this.quotaUnit = quotaUnit;
            return this;
        }
        @CustomType.Setter
        public Builder reason(String reason) {
            if (reason == null) {
              throw new MissingRequiredPropertyException("GetApplicationInfosApplication", "reason");
            }
            this.reason = reason;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetApplicationInfosApplication", "status");
            }
            this.status = status;
            return this;
        }
        public GetApplicationInfosApplication build() {
            final var _resultValue = new GetApplicationInfosApplication();
            _resultValue.applicationId = applicationId;
            _resultValue.approveValue = approveValue;
            _resultValue.auditReason = auditReason;
            _resultValue.desireValue = desireValue;
            _resultValue.dimensions = dimensions;
            _resultValue.effectiveTime = effectiveTime;
            _resultValue.expireTime = expireTime;
            _resultValue.id = id;
            _resultValue.noticeType = noticeType;
            _resultValue.productCode = productCode;
            _resultValue.quotaActionCode = quotaActionCode;
            _resultValue.quotaDescription = quotaDescription;
            _resultValue.quotaName = quotaName;
            _resultValue.quotaUnit = quotaUnit;
            _resultValue.reason = reason;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
