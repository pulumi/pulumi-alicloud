// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.actiontrail;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TrailDeprecatedArgs extends com.pulumi.resources.ResourceArgs {

    public static final TrailDeprecatedArgs Empty = new TrailDeprecatedArgs();

    /**
     * Indicates whether the event is a read or a write event. Valid values: Read, Write, and All. Default value: Write.
     * 
     */
    @Import(name="eventRw")
    private @Nullable Output<String> eventRw;

    /**
     * @return Indicates whether the event is a read or a write event. Valid values: Read, Write, and All. Default value: Write.
     * 
     */
    public Optional<Output<String>> eventRw() {
        return Optional.ofNullable(this.eventRw);
    }

    @Import(name="isOrganizationTrail")
    private @Nullable Output<Boolean> isOrganizationTrail;

    public Optional<Output<Boolean>> isOrganizationTrail() {
        return Optional.ofNullable(this.isOrganizationTrail);
    }

    @Import(name="maxComputeProjectArn")
    private @Nullable Output<String> maxComputeProjectArn;

    public Optional<Output<String>> maxComputeProjectArn() {
        return Optional.ofNullable(this.maxComputeProjectArn);
    }

    @Import(name="maxComputeWriteRoleArn")
    private @Nullable Output<String> maxComputeWriteRoleArn;

    public Optional<Output<String>> maxComputeWriteRoleArn() {
        return Optional.ofNullable(this.maxComputeWriteRoleArn);
    }

    /**
     * @deprecated
     * Field `mnsTopicArn` has been deprecated from version 1.118.0
     * 
     */
    @Deprecated /* Field `mnsTopicArn` has been deprecated from version 1.118.0 */
    @Import(name="mnsTopicArn")
    private @Nullable Output<String> mnsTopicArn;

    /**
     * @deprecated
     * Field `mnsTopicArn` has been deprecated from version 1.118.0
     * 
     */
    @Deprecated /* Field `mnsTopicArn` has been deprecated from version 1.118.0 */
    public Optional<Output<String>> mnsTopicArn() {
        return Optional.ofNullable(this.mnsTopicArn);
    }

    /**
     * The name of the trail to be created, which must be unique for an account.
     * 
     * @deprecated
     * Field `name` has been deprecated from provider version 1.95.0. New field `trailName` instead.
     * 
     */
    @Deprecated /* Field `name` has been deprecated from provider version 1.95.0. New field `trailName` instead. */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the trail to be created, which must be unique for an account.
     * 
     * @deprecated
     * Field `name` has been deprecated from provider version 1.95.0. New field `trailName` instead.
     * 
     */
    @Deprecated /* Field `name` has been deprecated from provider version 1.95.0. New field `trailName` instead. */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The OSS bucket to which the trail delivers logs. Ensure that this is an existing OSS bucket.
     * 
     */
    @Import(name="ossBucketName")
    private @Nullable Output<String> ossBucketName;

    /**
     * @return The OSS bucket to which the trail delivers logs. Ensure that this is an existing OSS bucket.
     * 
     */
    public Optional<Output<String>> ossBucketName() {
        return Optional.ofNullable(this.ossBucketName);
    }

    /**
     * The prefix of the specified OSS bucket name. This parameter can be left empty.
     * 
     */
    @Import(name="ossKeyPrefix")
    private @Nullable Output<String> ossKeyPrefix;

    /**
     * @return The prefix of the specified OSS bucket name. This parameter can be left empty.
     * 
     */
    public Optional<Output<String>> ossKeyPrefix() {
        return Optional.ofNullable(this.ossKeyPrefix);
    }

    @Import(name="ossWriteRoleArn")
    private @Nullable Output<String> ossWriteRoleArn;

    public Optional<Output<String>> ossWriteRoleArn() {
        return Optional.ofNullable(this.ossWriteRoleArn);
    }

    /**
     * The RAM role in ActionTrail permitted by the user.
     * 
     * @deprecated
     * Field `roleName` has been deprecated from version 1.118.0
     * 
     */
    @Deprecated /* Field `roleName` has been deprecated from version 1.118.0 */
    @Import(name="roleName")
    private @Nullable Output<String> roleName;

    /**
     * @return The RAM role in ActionTrail permitted by the user.
     * 
     * @deprecated
     * Field `roleName` has been deprecated from version 1.118.0
     * 
     */
    @Deprecated /* Field `roleName` has been deprecated from version 1.118.0 */
    public Optional<Output<String>> roleName() {
        return Optional.ofNullable(this.roleName);
    }

    /**
     * The unique ARN of the Log Service project.
     * 
     */
    @Import(name="slsProjectArn")
    private @Nullable Output<String> slsProjectArn;

    /**
     * @return The unique ARN of the Log Service project.
     * 
     */
    public Optional<Output<String>> slsProjectArn() {
        return Optional.ofNullable(this.slsProjectArn);
    }

    /**
     * The unique ARN of the Log Service role.
     * 
     * &gt; **NOTE:** `slsProjectArn` and `slsWriteRoleArn` should be set or not set at the same time when actiontrail delivers logs.
     * 
     */
    @Import(name="slsWriteRoleArn")
    private @Nullable Output<String> slsWriteRoleArn;

    /**
     * @return The unique ARN of the Log Service role.
     * 
     * &gt; **NOTE:** `slsProjectArn` and `slsWriteRoleArn` should be set or not set at the same time when actiontrail delivers logs.
     * 
     */
    public Optional<Output<String>> slsWriteRoleArn() {
        return Optional.ofNullable(this.slsWriteRoleArn);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="trailName")
    private @Nullable Output<String> trailName;

    public Optional<Output<String>> trailName() {
        return Optional.ofNullable(this.trailName);
    }

    @Import(name="trailRegion")
    private @Nullable Output<String> trailRegion;

    public Optional<Output<String>> trailRegion() {
        return Optional.ofNullable(this.trailRegion);
    }

    private TrailDeprecatedArgs() {}

    private TrailDeprecatedArgs(TrailDeprecatedArgs $) {
        this.eventRw = $.eventRw;
        this.isOrganizationTrail = $.isOrganizationTrail;
        this.maxComputeProjectArn = $.maxComputeProjectArn;
        this.maxComputeWriteRoleArn = $.maxComputeWriteRoleArn;
        this.mnsTopicArn = $.mnsTopicArn;
        this.name = $.name;
        this.ossBucketName = $.ossBucketName;
        this.ossKeyPrefix = $.ossKeyPrefix;
        this.ossWriteRoleArn = $.ossWriteRoleArn;
        this.roleName = $.roleName;
        this.slsProjectArn = $.slsProjectArn;
        this.slsWriteRoleArn = $.slsWriteRoleArn;
        this.status = $.status;
        this.trailName = $.trailName;
        this.trailRegion = $.trailRegion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TrailDeprecatedArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TrailDeprecatedArgs $;

        public Builder() {
            $ = new TrailDeprecatedArgs();
        }

        public Builder(TrailDeprecatedArgs defaults) {
            $ = new TrailDeprecatedArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param eventRw Indicates whether the event is a read or a write event. Valid values: Read, Write, and All. Default value: Write.
         * 
         * @return builder
         * 
         */
        public Builder eventRw(@Nullable Output<String> eventRw) {
            $.eventRw = eventRw;
            return this;
        }

        /**
         * @param eventRw Indicates whether the event is a read or a write event. Valid values: Read, Write, and All. Default value: Write.
         * 
         * @return builder
         * 
         */
        public Builder eventRw(String eventRw) {
            return eventRw(Output.of(eventRw));
        }

        public Builder isOrganizationTrail(@Nullable Output<Boolean> isOrganizationTrail) {
            $.isOrganizationTrail = isOrganizationTrail;
            return this;
        }

        public Builder isOrganizationTrail(Boolean isOrganizationTrail) {
            return isOrganizationTrail(Output.of(isOrganizationTrail));
        }

        public Builder maxComputeProjectArn(@Nullable Output<String> maxComputeProjectArn) {
            $.maxComputeProjectArn = maxComputeProjectArn;
            return this;
        }

        public Builder maxComputeProjectArn(String maxComputeProjectArn) {
            return maxComputeProjectArn(Output.of(maxComputeProjectArn));
        }

        public Builder maxComputeWriteRoleArn(@Nullable Output<String> maxComputeWriteRoleArn) {
            $.maxComputeWriteRoleArn = maxComputeWriteRoleArn;
            return this;
        }

        public Builder maxComputeWriteRoleArn(String maxComputeWriteRoleArn) {
            return maxComputeWriteRoleArn(Output.of(maxComputeWriteRoleArn));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Field `mnsTopicArn` has been deprecated from version 1.118.0
         * 
         */
        @Deprecated /* Field `mnsTopicArn` has been deprecated from version 1.118.0 */
        public Builder mnsTopicArn(@Nullable Output<String> mnsTopicArn) {
            $.mnsTopicArn = mnsTopicArn;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Field `mnsTopicArn` has been deprecated from version 1.118.0
         * 
         */
        @Deprecated /* Field `mnsTopicArn` has been deprecated from version 1.118.0 */
        public Builder mnsTopicArn(String mnsTopicArn) {
            return mnsTopicArn(Output.of(mnsTopicArn));
        }

        /**
         * @param name The name of the trail to be created, which must be unique for an account.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `name` has been deprecated from provider version 1.95.0. New field `trailName` instead.
         * 
         */
        @Deprecated /* Field `name` has been deprecated from provider version 1.95.0. New field `trailName` instead. */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the trail to be created, which must be unique for an account.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `name` has been deprecated from provider version 1.95.0. New field `trailName` instead.
         * 
         */
        @Deprecated /* Field `name` has been deprecated from provider version 1.95.0. New field `trailName` instead. */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param ossBucketName The OSS bucket to which the trail delivers logs. Ensure that this is an existing OSS bucket.
         * 
         * @return builder
         * 
         */
        public Builder ossBucketName(@Nullable Output<String> ossBucketName) {
            $.ossBucketName = ossBucketName;
            return this;
        }

        /**
         * @param ossBucketName The OSS bucket to which the trail delivers logs. Ensure that this is an existing OSS bucket.
         * 
         * @return builder
         * 
         */
        public Builder ossBucketName(String ossBucketName) {
            return ossBucketName(Output.of(ossBucketName));
        }

        /**
         * @param ossKeyPrefix The prefix of the specified OSS bucket name. This parameter can be left empty.
         * 
         * @return builder
         * 
         */
        public Builder ossKeyPrefix(@Nullable Output<String> ossKeyPrefix) {
            $.ossKeyPrefix = ossKeyPrefix;
            return this;
        }

        /**
         * @param ossKeyPrefix The prefix of the specified OSS bucket name. This parameter can be left empty.
         * 
         * @return builder
         * 
         */
        public Builder ossKeyPrefix(String ossKeyPrefix) {
            return ossKeyPrefix(Output.of(ossKeyPrefix));
        }

        public Builder ossWriteRoleArn(@Nullable Output<String> ossWriteRoleArn) {
            $.ossWriteRoleArn = ossWriteRoleArn;
            return this;
        }

        public Builder ossWriteRoleArn(String ossWriteRoleArn) {
            return ossWriteRoleArn(Output.of(ossWriteRoleArn));
        }

        /**
         * @param roleName The RAM role in ActionTrail permitted by the user.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `roleName` has been deprecated from version 1.118.0
         * 
         */
        @Deprecated /* Field `roleName` has been deprecated from version 1.118.0 */
        public Builder roleName(@Nullable Output<String> roleName) {
            $.roleName = roleName;
            return this;
        }

        /**
         * @param roleName The RAM role in ActionTrail permitted by the user.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `roleName` has been deprecated from version 1.118.0
         * 
         */
        @Deprecated /* Field `roleName` has been deprecated from version 1.118.0 */
        public Builder roleName(String roleName) {
            return roleName(Output.of(roleName));
        }

        /**
         * @param slsProjectArn The unique ARN of the Log Service project.
         * 
         * @return builder
         * 
         */
        public Builder slsProjectArn(@Nullable Output<String> slsProjectArn) {
            $.slsProjectArn = slsProjectArn;
            return this;
        }

        /**
         * @param slsProjectArn The unique ARN of the Log Service project.
         * 
         * @return builder
         * 
         */
        public Builder slsProjectArn(String slsProjectArn) {
            return slsProjectArn(Output.of(slsProjectArn));
        }

        /**
         * @param slsWriteRoleArn The unique ARN of the Log Service role.
         * 
         * &gt; **NOTE:** `slsProjectArn` and `slsWriteRoleArn` should be set or not set at the same time when actiontrail delivers logs.
         * 
         * @return builder
         * 
         */
        public Builder slsWriteRoleArn(@Nullable Output<String> slsWriteRoleArn) {
            $.slsWriteRoleArn = slsWriteRoleArn;
            return this;
        }

        /**
         * @param slsWriteRoleArn The unique ARN of the Log Service role.
         * 
         * &gt; **NOTE:** `slsProjectArn` and `slsWriteRoleArn` should be set or not set at the same time when actiontrail delivers logs.
         * 
         * @return builder
         * 
         */
        public Builder slsWriteRoleArn(String slsWriteRoleArn) {
            return slsWriteRoleArn(Output.of(slsWriteRoleArn));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder trailName(@Nullable Output<String> trailName) {
            $.trailName = trailName;
            return this;
        }

        public Builder trailName(String trailName) {
            return trailName(Output.of(trailName));
        }

        public Builder trailRegion(@Nullable Output<String> trailRegion) {
            $.trailRegion = trailRegion;
            return this;
        }

        public Builder trailRegion(String trailRegion) {
            return trailRegion(Output.of(trailRegion));
        }

        public TrailDeprecatedArgs build() {
            return $;
        }
    }

}
