// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sae.inputs;

import com.pulumi.alicloud.sae.inputs.ApplicationScalingRuleScalingRuleTimerScheduleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationScalingRuleScalingRuleTimerArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationScalingRuleScalingRuleTimerArgs Empty = new ApplicationScalingRuleScalingRuleTimerArgs();

    /**
     * The Start date. When the `beginDate` and `endDate` values are empty. it indicates long-term execution and is the default value.
     * 
     */
    @Import(name="beginDate")
    private @Nullable Output<String> beginDate;

    /**
     * @return The Start date. When the `beginDate` and `endDate` values are empty. it indicates long-term execution and is the default value.
     * 
     */
    public Optional<Output<String>> beginDate() {
        return Optional.ofNullable(this.beginDate);
    }

    /**
     * The End Date. When the `beginDate` and `endDate` values are empty. it indicates long-term execution and is the default value.
     * 
     */
    @Import(name="endDate")
    private @Nullable Output<String> endDate;

    /**
     * @return The End Date. When the `beginDate` and `endDate` values are empty. it indicates long-term execution and is the default value.
     * 
     */
    public Optional<Output<String>> endDate() {
        return Optional.ofNullable(this.endDate);
    }

    /**
     * The period in which a timed elastic scaling strategy is executed.
     * 
     */
    @Import(name="period")
    private @Nullable Output<String> period;

    /**
     * @return The period in which a timed elastic scaling strategy is executed.
     * 
     */
    public Optional<Output<String>> period() {
        return Optional.ofNullable(this.period);
    }

    /**
     * Resilient Scaling Strategy Trigger Timing. See `schedules` below.
     * 
     */
    @Import(name="schedules")
    private @Nullable Output<List<ApplicationScalingRuleScalingRuleTimerScheduleArgs>> schedules;

    /**
     * @return Resilient Scaling Strategy Trigger Timing. See `schedules` below.
     * 
     */
    public Optional<Output<List<ApplicationScalingRuleScalingRuleTimerScheduleArgs>>> schedules() {
        return Optional.ofNullable(this.schedules);
    }

    private ApplicationScalingRuleScalingRuleTimerArgs() {}

    private ApplicationScalingRuleScalingRuleTimerArgs(ApplicationScalingRuleScalingRuleTimerArgs $) {
        this.beginDate = $.beginDate;
        this.endDate = $.endDate;
        this.period = $.period;
        this.schedules = $.schedules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationScalingRuleScalingRuleTimerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationScalingRuleScalingRuleTimerArgs $;

        public Builder() {
            $ = new ApplicationScalingRuleScalingRuleTimerArgs();
        }

        public Builder(ApplicationScalingRuleScalingRuleTimerArgs defaults) {
            $ = new ApplicationScalingRuleScalingRuleTimerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param beginDate The Start date. When the `beginDate` and `endDate` values are empty. it indicates long-term execution and is the default value.
         * 
         * @return builder
         * 
         */
        public Builder beginDate(@Nullable Output<String> beginDate) {
            $.beginDate = beginDate;
            return this;
        }

        /**
         * @param beginDate The Start date. When the `beginDate` and `endDate` values are empty. it indicates long-term execution and is the default value.
         * 
         * @return builder
         * 
         */
        public Builder beginDate(String beginDate) {
            return beginDate(Output.of(beginDate));
        }

        /**
         * @param endDate The End Date. When the `beginDate` and `endDate` values are empty. it indicates long-term execution and is the default value.
         * 
         * @return builder
         * 
         */
        public Builder endDate(@Nullable Output<String> endDate) {
            $.endDate = endDate;
            return this;
        }

        /**
         * @param endDate The End Date. When the `beginDate` and `endDate` values are empty. it indicates long-term execution and is the default value.
         * 
         * @return builder
         * 
         */
        public Builder endDate(String endDate) {
            return endDate(Output.of(endDate));
        }

        /**
         * @param period The period in which a timed elastic scaling strategy is executed.
         * 
         * @return builder
         * 
         */
        public Builder period(@Nullable Output<String> period) {
            $.period = period;
            return this;
        }

        /**
         * @param period The period in which a timed elastic scaling strategy is executed.
         * 
         * @return builder
         * 
         */
        public Builder period(String period) {
            return period(Output.of(period));
        }

        /**
         * @param schedules Resilient Scaling Strategy Trigger Timing. See `schedules` below.
         * 
         * @return builder
         * 
         */
        public Builder schedules(@Nullable Output<List<ApplicationScalingRuleScalingRuleTimerScheduleArgs>> schedules) {
            $.schedules = schedules;
            return this;
        }

        /**
         * @param schedules Resilient Scaling Strategy Trigger Timing. See `schedules` below.
         * 
         * @return builder
         * 
         */
        public Builder schedules(List<ApplicationScalingRuleScalingRuleTimerScheduleArgs> schedules) {
            return schedules(Output.of(schedules));
        }

        /**
         * @param schedules Resilient Scaling Strategy Trigger Timing. See `schedules` below.
         * 
         * @return builder
         * 
         */
        public Builder schedules(ApplicationScalingRuleScalingRuleTimerScheduleArgs... schedules) {
            return schedules(List.of(schedules));
        }

        public ApplicationScalingRuleScalingRuleTimerArgs build() {
            return $;
        }
    }

}
