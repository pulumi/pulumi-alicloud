// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.log.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardState extends com.pulumi.resources.ResourceArgs {

    public static final DashboardState Empty = new DashboardState();

    /**
     * Dashboard attribute.
     * 
     */
    @Import(name="attribute")
    private @Nullable Output<String> attribute;

    /**
     * @return Dashboard attribute.
     * 
     */
    public Optional<Output<String>> attribute() {
        return Optional.ofNullable(this.attribute);
    }

    /**
     * Configuration of charts in the dashboard.
     * **Note:** From version 1.164.0, `char_list` can set parameter &#34;action&#34;.
     * 
     */
    @Import(name="charList")
    private @Nullable Output<String> charList;

    /**
     * @return Configuration of charts in the dashboard.
     * **Note:** From version 1.164.0, `char_list` can set parameter &#34;action&#34;.
     * 
     */
    public Optional<Output<String>> charList() {
        return Optional.ofNullable(this.charList);
    }

    /**
     * The name of the Log Dashboard.
     * 
     */
    @Import(name="dashboardName")
    private @Nullable Output<String> dashboardName;

    /**
     * @return The name of the Log Dashboard.
     * 
     */
    public Optional<Output<String>> dashboardName() {
        return Optional.ofNullable(this.dashboardName);
    }

    /**
     * Dashboard alias.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Dashboard alias.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The name of the log project. It is the only in one Alicloud account.
     * 
     */
    @Import(name="projectName")
    private @Nullable Output<String> projectName;

    /**
     * @return The name of the log project. It is the only in one Alicloud account.
     * 
     */
    public Optional<Output<String>> projectName() {
        return Optional.ofNullable(this.projectName);
    }

    private DashboardState() {}

    private DashboardState(DashboardState $) {
        this.attribute = $.attribute;
        this.charList = $.charList;
        this.dashboardName = $.dashboardName;
        this.displayName = $.displayName;
        this.projectName = $.projectName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardState $;

        public Builder() {
            $ = new DashboardState();
        }

        public Builder(DashboardState defaults) {
            $ = new DashboardState(Objects.requireNonNull(defaults));
        }

        /**
         * @param attribute Dashboard attribute.
         * 
         * @return builder
         * 
         */
        public Builder attribute(@Nullable Output<String> attribute) {
            $.attribute = attribute;
            return this;
        }

        /**
         * @param attribute Dashboard attribute.
         * 
         * @return builder
         * 
         */
        public Builder attribute(String attribute) {
            return attribute(Output.of(attribute));
        }

        /**
         * @param charList Configuration of charts in the dashboard.
         * **Note:** From version 1.164.0, `char_list` can set parameter &#34;action&#34;.
         * 
         * @return builder
         * 
         */
        public Builder charList(@Nullable Output<String> charList) {
            $.charList = charList;
            return this;
        }

        /**
         * @param charList Configuration of charts in the dashboard.
         * **Note:** From version 1.164.0, `char_list` can set parameter &#34;action&#34;.
         * 
         * @return builder
         * 
         */
        public Builder charList(String charList) {
            return charList(Output.of(charList));
        }

        /**
         * @param dashboardName The name of the Log Dashboard.
         * 
         * @return builder
         * 
         */
        public Builder dashboardName(@Nullable Output<String> dashboardName) {
            $.dashboardName = dashboardName;
            return this;
        }

        /**
         * @param dashboardName The name of the Log Dashboard.
         * 
         * @return builder
         * 
         */
        public Builder dashboardName(String dashboardName) {
            return dashboardName(Output.of(dashboardName));
        }

        /**
         * @param displayName Dashboard alias.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Dashboard alias.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param projectName The name of the log project. It is the only in one Alicloud account.
         * 
         * @return builder
         * 
         */
        public Builder projectName(@Nullable Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param projectName The name of the log project. It is the only in one Alicloud account.
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        public DashboardState build() {
            return $;
        }
    }

}
