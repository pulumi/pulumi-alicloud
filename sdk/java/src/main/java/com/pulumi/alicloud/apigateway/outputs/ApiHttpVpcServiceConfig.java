// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.apigateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApiHttpVpcServiceConfig {
    /**
     * @return The name of aone.
     * 
     */
    private @Nullable String aoneName;
    /**
     * @return The content type category of backend service which supports values of &#39;DEFAULT&#39;,&#39;CUSTOM&#39; and &#39;CLIENT&#39;.
     * 
     */
    private @Nullable String contentTypeCategory;
    /**
     * @return The content type value of backend service.
     * 
     */
    private @Nullable String contentTypeValue;
    /**
     * @return The http method of backend service.
     * 
     */
    private String method;
    /**
     * @return The name of vpc instance.
     * 
     */
    private String name;
    /**
     * @return The path of backend service.
     * 
     */
    private String path;
    /**
     * @return Backend service time-out time. Unit: millisecond.
     * 
     */
    private Integer timeout;
    /**
     * @return The vpc scheme of backend service which supports values of `HTTP` and `HTTPS`.
     * 
     */
    private @Nullable String vpcScheme;

    private ApiHttpVpcServiceConfig() {}
    /**
     * @return The name of aone.
     * 
     */
    public Optional<String> aoneName() {
        return Optional.ofNullable(this.aoneName);
    }
    /**
     * @return The content type category of backend service which supports values of &#39;DEFAULT&#39;,&#39;CUSTOM&#39; and &#39;CLIENT&#39;.
     * 
     */
    public Optional<String> contentTypeCategory() {
        return Optional.ofNullable(this.contentTypeCategory);
    }
    /**
     * @return The content type value of backend service.
     * 
     */
    public Optional<String> contentTypeValue() {
        return Optional.ofNullable(this.contentTypeValue);
    }
    /**
     * @return The http method of backend service.
     * 
     */
    public String method() {
        return this.method;
    }
    /**
     * @return The name of vpc instance.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The path of backend service.
     * 
     */
    public String path() {
        return this.path;
    }
    /**
     * @return Backend service time-out time. Unit: millisecond.
     * 
     */
    public Integer timeout() {
        return this.timeout;
    }
    /**
     * @return The vpc scheme of backend service which supports values of `HTTP` and `HTTPS`.
     * 
     */
    public Optional<String> vpcScheme() {
        return Optional.ofNullable(this.vpcScheme);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApiHttpVpcServiceConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String aoneName;
        private @Nullable String contentTypeCategory;
        private @Nullable String contentTypeValue;
        private String method;
        private String name;
        private String path;
        private Integer timeout;
        private @Nullable String vpcScheme;
        public Builder() {}
        public Builder(ApiHttpVpcServiceConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aoneName = defaults.aoneName;
    	      this.contentTypeCategory = defaults.contentTypeCategory;
    	      this.contentTypeValue = defaults.contentTypeValue;
    	      this.method = defaults.method;
    	      this.name = defaults.name;
    	      this.path = defaults.path;
    	      this.timeout = defaults.timeout;
    	      this.vpcScheme = defaults.vpcScheme;
        }

        @CustomType.Setter
        public Builder aoneName(@Nullable String aoneName) {

            this.aoneName = aoneName;
            return this;
        }
        @CustomType.Setter
        public Builder contentTypeCategory(@Nullable String contentTypeCategory) {

            this.contentTypeCategory = contentTypeCategory;
            return this;
        }
        @CustomType.Setter
        public Builder contentTypeValue(@Nullable String contentTypeValue) {

            this.contentTypeValue = contentTypeValue;
            return this;
        }
        @CustomType.Setter
        public Builder method(String method) {
            if (method == null) {
              throw new MissingRequiredPropertyException("ApiHttpVpcServiceConfig", "method");
            }
            this.method = method;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ApiHttpVpcServiceConfig", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("ApiHttpVpcServiceConfig", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder timeout(Integer timeout) {
            if (timeout == null) {
              throw new MissingRequiredPropertyException("ApiHttpVpcServiceConfig", "timeout");
            }
            this.timeout = timeout;
            return this;
        }
        @CustomType.Setter
        public Builder vpcScheme(@Nullable String vpcScheme) {

            this.vpcScheme = vpcScheme;
            return this;
        }
        public ApiHttpVpcServiceConfig build() {
            final var _resultValue = new ApiHttpVpcServiceConfig();
            _resultValue.aoneName = aoneName;
            _resultValue.contentTypeCategory = contentTypeCategory;
            _resultValue.contentTypeValue = contentTypeValue;
            _resultValue.method = method;
            _resultValue.name = name;
            _resultValue.path = path;
            _resultValue.timeout = timeout;
            _resultValue.vpcScheme = vpcScheme;
            return _resultValue;
        }
    }
}
