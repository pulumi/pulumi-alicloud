// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpn;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.vpn.SslVpnServerArgs;
import com.pulumi.alicloud.vpn.inputs.SslVpnServerState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * SSL-VPN server can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:vpn/sslVpnServer:SslVpnServer example vss-abc123456
 * ```
 * 
 */
@ResourceType(type="alicloud:vpn/sslVpnServer:SslVpnServer")
public class SslVpnServer extends com.pulumi.resources.CustomResource {
    /**
     * The encryption algorithm that is used in the SSL-VPN connection. Valid values: `AES-128-CBC`,`AES-192-CBC`,`AES-256-CBC`,`none`. Default value: `AES-128-CBC`.
     * * `AES-128-CBC` - the AES-128-CBC algorithm.
     * * `AES-192-CBC` - the AES-192-CBC algorithm.
     * * `AES-256-CBC` - the AES-256-CBC algorithm.
     * 
     */
    @Export(name="cipher", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> cipher;

    /**
     * @return The encryption algorithm that is used in the SSL-VPN connection. Valid values: `AES-128-CBC`,`AES-192-CBC`,`AES-256-CBC`,`none`. Default value: `AES-128-CBC`.
     * * `AES-128-CBC` - the AES-128-CBC algorithm.
     * * `AES-192-CBC` - the AES-192-CBC algorithm.
     * * `AES-256-CBC` - the AES-256-CBC algorithm.
     * 
     */
    public Output<Optional<String>> cipher() {
        return Codegen.optional(this.cipher);
    }
    /**
     * The CIDR block from which access addresses are allocated to the virtual network interface card of the client.
     * 
     */
    @Export(name="clientIpPool", refs={String.class}, tree="[0]")
    private Output<String> clientIpPool;

    /**
     * @return The CIDR block from which access addresses are allocated to the virtual network interface card of the client.
     * 
     */
    public Output<String> clientIpPool() {
        return this.clientIpPool;
    }
    /**
     * Specifies whether to enable data compression. Valid values: `true`,`false`. Default value: `false`
     * 
     */
    @Export(name="compress", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> compress;

    /**
     * @return Specifies whether to enable data compression. Valid values: `true`,`false`. Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> compress() {
        return Codegen.optional(this.compress);
    }
    /**
     * The number of current connections.
     * 
     */
    @Export(name="connections", refs={Integer.class}, tree="[0]")
    private Output<Integer> connections;

    /**
     * @return The number of current connections.
     * 
     */
    public Output<Integer> connections() {
        return this.connections;
    }
    /**
     * The internet IP of the SSL-VPN server.
     * 
     */
    @Export(name="internetIp", refs={String.class}, tree="[0]")
    private Output<String> internetIp;

    /**
     * @return The internet IP of the SSL-VPN server.
     * 
     */
    public Output<String> internetIp() {
        return this.internetIp;
    }
    /**
     * The CIDR block to be accessed by the client through the SSL-VPN connection. It supports to set multi CIDRs by comma join ways, like `10.0.1.0/24,10.0.2.0/24,10.0.3.0/24`.
     * 
     */
    @Export(name="localSubnet", refs={String.class}, tree="[0]")
    private Output<String> localSubnet;

    /**
     * @return The CIDR block to be accessed by the client through the SSL-VPN connection. It supports to set multi CIDRs by comma join ways, like `10.0.1.0/24,10.0.2.0/24,10.0.3.0/24`.
     * 
     */
    public Output<String> localSubnet() {
        return this.localSubnet;
    }
    /**
     * The maximum number of connections.
     * 
     */
    @Export(name="maxConnections", refs={Integer.class}, tree="[0]")
    private Output<Integer> maxConnections;

    /**
     * @return The maximum number of connections.
     * 
     */
    public Output<Integer> maxConnections() {
        return this.maxConnections;
    }
    /**
     * The name of the SSL-VPN server.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the SSL-VPN server.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The port used by the SSL-VPN server. The default value is `1194`.The following ports cannot be used: [22, 2222, 22222, 9000, 9001, 9002, 7505, 80, 443, 53, 68, 123, 4510, 4560, 500, 4500].
     * 
     */
    @Export(name="port", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> port;

    /**
     * @return The port used by the SSL-VPN server. The default value is `1194`.The following ports cannot be used: [22, 2222, 22222, 9000, 9001, 9002, 7505, 80, 443, 53, 68, 123, 4510, 4560, 500, 4500].
     * 
     */
    public Output<Optional<Integer>> port() {
        return Codegen.optional(this.port);
    }
    /**
     * The protocol used by the SSL-VPN server. Valid value: UDP(default) |TCP
     * 
     */
    @Export(name="protocol", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> protocol;

    /**
     * @return The protocol used by the SSL-VPN server. Valid value: UDP(default) |TCP
     * 
     */
    public Output<Optional<String>> protocol() {
        return Codegen.optional(this.protocol);
    }
    /**
     * The ID of the VPN gateway.
     * 
     */
    @Export(name="vpnGatewayId", refs={String.class}, tree="[0]")
    private Output<String> vpnGatewayId;

    /**
     * @return The ID of the VPN gateway.
     * 
     */
    public Output<String> vpnGatewayId() {
        return this.vpnGatewayId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SslVpnServer(String name) {
        this(name, SslVpnServerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SslVpnServer(String name, SslVpnServerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SslVpnServer(String name, SslVpnServerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:vpn/sslVpnServer:SslVpnServer", name, args == null ? SslVpnServerArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SslVpnServer(String name, Output<String> id, @Nullable SslVpnServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:vpn/sslVpnServer:SslVpnServer", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SslVpnServer get(String name, Output<String> id, @Nullable SslVpnServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SslVpnServer(name, id, state, options);
    }
}
