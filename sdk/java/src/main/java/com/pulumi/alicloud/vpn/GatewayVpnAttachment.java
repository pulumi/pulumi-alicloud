// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpn;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.vpn.GatewayVpnAttachmentArgs;
import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentState;
import com.pulumi.alicloud.vpn.outputs.GatewayVpnAttachmentBgpConfig;
import com.pulumi.alicloud.vpn.outputs.GatewayVpnAttachmentHealthCheckConfig;
import com.pulumi.alicloud.vpn.outputs.GatewayVpnAttachmentIkeConfig;
import com.pulumi.alicloud.vpn.outputs.GatewayVpnAttachmentIpsecConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a VPN Gateway Vpn Attachment resource.
 * 
 * For information about VPN Gateway Vpn Attachment and how to use it, see [What is Vpn Attachment](https://www.alibabacloud.com/help/zh/virtual-private-cloud/latest/createvpnattachment).
 * 
 * &gt; **NOTE:** Available since v1.181.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.vpn.CustomerGateway;
 * import com.pulumi.alicloud.vpn.CustomerGatewayArgs;
 * import com.pulumi.alicloud.vpn.GatewayVpnAttachment;
 * import com.pulumi.alicloud.vpn.GatewayVpnAttachmentArgs;
 * import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentIkeConfigArgs;
 * import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentIpsecConfigArgs;
 * import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentBgpConfigArgs;
 * import com.pulumi.alicloud.vpn.inputs.GatewayVpnAttachmentHealthCheckConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get(&#34;name&#34;).orElse(&#34;tf-example&#34;);
 *         var defaultCustomerGateway = new CustomerGateway(&#34;defaultCustomerGateway&#34;, CustomerGatewayArgs.builder()        
 *             .ipAddress(&#34;42.104.22.210&#34;)
 *             .asn(&#34;45014&#34;)
 *             .description(name)
 *             .build());
 * 
 *         var defaultGatewayVpnAttachment = new GatewayVpnAttachment(&#34;defaultGatewayVpnAttachment&#34;, GatewayVpnAttachmentArgs.builder()        
 *             .customerGatewayId(defaultCustomerGateway.id())
 *             .networkType(&#34;public&#34;)
 *             .localSubnet(&#34;0.0.0.0/0&#34;)
 *             .remoteSubnet(&#34;0.0.0.0/0&#34;)
 *             .effectImmediately(false)
 *             .ikeConfig(GatewayVpnAttachmentIkeConfigArgs.builder()
 *                 .ikeAuthAlg(&#34;md5&#34;)
 *                 .ikeEncAlg(&#34;des&#34;)
 *                 .ikeVersion(&#34;ikev2&#34;)
 *                 .ikeMode(&#34;main&#34;)
 *                 .ikeLifetime(86400)
 *                 .psk(&#34;tf-testvpn2&#34;)
 *                 .ikePfs(&#34;group1&#34;)
 *                 .remoteId(&#34;testbob2&#34;)
 *                 .localId(&#34;testalice2&#34;)
 *                 .build())
 *             .ipsecConfig(GatewayVpnAttachmentIpsecConfigArgs.builder()
 *                 .ipsecPfs(&#34;group5&#34;)
 *                 .ipsecEncAlg(&#34;des&#34;)
 *                 .ipsecAuthAlg(&#34;md5&#34;)
 *                 .ipsecLifetime(86400)
 *                 .build())
 *             .bgpConfig(GatewayVpnAttachmentBgpConfigArgs.builder()
 *                 .enable(true)
 *                 .localAsn(45014)
 *                 .tunnelCidr(&#34;169.254.11.0/30&#34;)
 *                 .localBgpIp(&#34;169.254.11.1&#34;)
 *                 .build())
 *             .healthCheckConfig(GatewayVpnAttachmentHealthCheckConfigArgs.builder()
 *                 .enable(true)
 *                 .sip(&#34;192.168.1.1&#34;)
 *                 .dip(&#34;10.0.0.1&#34;)
 *                 .interval(10)
 *                 .retry(10)
 *                 .policy(&#34;revoke_route&#34;)
 *                 .build())
 *             .enableDpd(true)
 *             .enableNatTraversal(true)
 *             .vpnAttachmentName(name)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * VPN Gateway Vpn Attachment can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:vpn/gatewayVpnAttachment:GatewayVpnAttachment example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:vpn/gatewayVpnAttachment:GatewayVpnAttachment")
public class GatewayVpnAttachment extends com.pulumi.resources.CustomResource {
    /**
     * Bgp configuration information. See `bgp_config` below.
     * 
     */
    @Export(name="bgpConfig", refs={GatewayVpnAttachmentBgpConfig.class}, tree="[0]")
    private Output<GatewayVpnAttachmentBgpConfig> bgpConfig;

    /**
     * @return Bgp configuration information. See `bgp_config` below.
     * 
     */
    public Output<GatewayVpnAttachmentBgpConfig> bgpConfig() {
        return this.bgpConfig;
    }
    /**
     * The ID of the customer gateway. From version 1.196.0, `customer_gateway_id` can be modified.
     * 
     */
    @Export(name="customerGatewayId", refs={String.class}, tree="[0]")
    private Output<String> customerGatewayId;

    /**
     * @return The ID of the customer gateway. From version 1.196.0, `customer_gateway_id` can be modified.
     * 
     */
    public Output<String> customerGatewayId() {
        return this.customerGatewayId;
    }
    /**
     * Indicates whether IPsec-VPN negotiations are initiated immediately. Valid values.
     * 
     */
    @Export(name="effectImmediately", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> effectImmediately;

    /**
     * @return Indicates whether IPsec-VPN negotiations are initiated immediately. Valid values.
     * 
     */
    public Output<Optional<Boolean>> effectImmediately() {
        return Codegen.optional(this.effectImmediately);
    }
    /**
     * Whether to enable the DPD (peer survival detection) function.
     * 
     */
    @Export(name="enableDpd", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enableDpd;

    /**
     * @return Whether to enable the DPD (peer survival detection) function.
     * 
     */
    public Output<Boolean> enableDpd() {
        return this.enableDpd;
    }
    /**
     * Allow NAT penetration.
     * 
     */
    @Export(name="enableNatTraversal", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enableNatTraversal;

    /**
     * @return Allow NAT penetration.
     * 
     */
    public Output<Boolean> enableNatTraversal() {
        return this.enableNatTraversal;
    }
    /**
     * Health check configuration information. See `health_check_config` below.
     * 
     */
    @Export(name="healthCheckConfig", refs={GatewayVpnAttachmentHealthCheckConfig.class}, tree="[0]")
    private Output<GatewayVpnAttachmentHealthCheckConfig> healthCheckConfig;

    /**
     * @return Health check configuration information. See `health_check_config` below.
     * 
     */
    public Output<GatewayVpnAttachmentHealthCheckConfig> healthCheckConfig() {
        return this.healthCheckConfig;
    }
    /**
     * Configuration negotiated in the second stage. See `ike_config` below.
     * 
     */
    @Export(name="ikeConfig", refs={GatewayVpnAttachmentIkeConfig.class}, tree="[0]")
    private Output<GatewayVpnAttachmentIkeConfig> ikeConfig;

    /**
     * @return Configuration negotiated in the second stage. See `ike_config` below.
     * 
     */
    public Output<GatewayVpnAttachmentIkeConfig> ikeConfig() {
        return this.ikeConfig;
    }
    /**
     * The VPN gateway IP.
     * 
     */
    @Export(name="internetIp", refs={String.class}, tree="[0]")
    private Output<String> internetIp;

    /**
     * @return The VPN gateway IP.
     * 
     */
    public Output<String> internetIp() {
        return this.internetIp;
    }
    /**
     * Configuration negotiated in the second stage. See `ipsec_config` below.
     * 
     */
    @Export(name="ipsecConfig", refs={GatewayVpnAttachmentIpsecConfig.class}, tree="[0]")
    private Output<GatewayVpnAttachmentIpsecConfig> ipsecConfig;

    /**
     * @return Configuration negotiated in the second stage. See `ipsec_config` below.
     * 
     */
    public Output<GatewayVpnAttachmentIpsecConfig> ipsecConfig() {
        return this.ipsecConfig;
    }
    /**
     * The CIDR block of the virtual private cloud (VPC).
     * 
     */
    @Export(name="localSubnet", refs={String.class}, tree="[0]")
    private Output<String> localSubnet;

    /**
     * @return The CIDR block of the virtual private cloud (VPC).
     * 
     */
    public Output<String> localSubnet() {
        return this.localSubnet;
    }
    /**
     * The network type of the IPsec connection. Valid values: `public`, `private`.
     * 
     */
    @Export(name="networkType", refs={String.class}, tree="[0]")
    private Output<String> networkType;

    /**
     * @return The network type of the IPsec connection. Valid values: `public`, `private`.
     * 
     */
    public Output<String> networkType() {
        return this.networkType;
    }
    /**
     * The CIDR block of the on-premises data center.
     * 
     */
    @Export(name="remoteSubnet", refs={String.class}, tree="[0]")
    private Output<String> remoteSubnet;

    /**
     * @return The CIDR block of the on-premises data center.
     * 
     */
    public Output<String> remoteSubnet() {
        return this.remoteSubnet;
    }
    /**
     * The status of the resource.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the resource.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The name of the vpn attachment.
     * 
     */
    @Export(name="vpnAttachmentName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpnAttachmentName;

    /**
     * @return The name of the vpn attachment.
     * 
     */
    public Output<Optional<String>> vpnAttachmentName() {
        return Codegen.optional(this.vpnAttachmentName);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GatewayVpnAttachment(String name) {
        this(name, GatewayVpnAttachmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GatewayVpnAttachment(String name, GatewayVpnAttachmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GatewayVpnAttachment(String name, GatewayVpnAttachmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:vpn/gatewayVpnAttachment:GatewayVpnAttachment", name, args == null ? GatewayVpnAttachmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private GatewayVpnAttachment(String name, Output<String> id, @Nullable GatewayVpnAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:vpn/gatewayVpnAttachment:GatewayVpnAttachment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GatewayVpnAttachment get(String name, Output<String> id, @Nullable GatewayVpnAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new GatewayVpnAttachment(name, id, state, options);
    }
}
