// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.emrv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterNodeGroupSubscriptionConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterNodeGroupSubscriptionConfigArgs Empty = new ClusterNodeGroupSubscriptionConfigArgs();

    /**
     * Auto renew for prepaid, ’true’ or ‘false’ . Default value: false.
     * 
     */
    @Import(name="autoRenew")
    private @Nullable Output<Boolean> autoRenew;

    /**
     * @return Auto renew for prepaid, ’true’ or ‘false’ . Default value: false.
     * 
     */
    public Optional<Output<Boolean>> autoRenew() {
        return Optional.ofNullable(this.autoRenew);
    }

    /**
     * If paymentType is Subscription, this should be specified. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36、48.
     * 
     */
    @Import(name="autoRenewDuration")
    private @Nullable Output<Integer> autoRenewDuration;

    /**
     * @return If paymentType is Subscription, this should be specified. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36、48.
     * 
     */
    public Optional<Output<Integer>> autoRenewDuration() {
        return Optional.ofNullable(this.autoRenewDuration);
    }

    /**
     * If paymentType is Subscription, this should be specified. Supported value: Month or Year.
     * 
     */
    @Import(name="autoRenewDurationUnit")
    private @Nullable Output<String> autoRenewDurationUnit;

    /**
     * @return If paymentType is Subscription, this should be specified. Supported value: Month or Year.
     * 
     */
    public Optional<Output<String>> autoRenewDurationUnit() {
        return Optional.ofNullable(this.autoRenewDurationUnit);
    }

    /**
     * If paymentType is Subscription, this should be specified. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36、48.
     * 
     */
    @Import(name="paymentDuration", required=true)
    private Output<Integer> paymentDuration;

    /**
     * @return If paymentType is Subscription, this should be specified. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36、48.
     * 
     */
    public Output<Integer> paymentDuration() {
        return this.paymentDuration;
    }

    /**
     * If paymentType is Subscription, this should be specified. Supported value: Month or Year.
     * 
     */
    @Import(name="paymentDurationUnit", required=true)
    private Output<String> paymentDurationUnit;

    /**
     * @return If paymentType is Subscription, this should be specified. Supported value: Month or Year.
     * 
     */
    public Output<String> paymentDurationUnit() {
        return this.paymentDurationUnit;
    }

    private ClusterNodeGroupSubscriptionConfigArgs() {}

    private ClusterNodeGroupSubscriptionConfigArgs(ClusterNodeGroupSubscriptionConfigArgs $) {
        this.autoRenew = $.autoRenew;
        this.autoRenewDuration = $.autoRenewDuration;
        this.autoRenewDurationUnit = $.autoRenewDurationUnit;
        this.paymentDuration = $.paymentDuration;
        this.paymentDurationUnit = $.paymentDurationUnit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterNodeGroupSubscriptionConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterNodeGroupSubscriptionConfigArgs $;

        public Builder() {
            $ = new ClusterNodeGroupSubscriptionConfigArgs();
        }

        public Builder(ClusterNodeGroupSubscriptionConfigArgs defaults) {
            $ = new ClusterNodeGroupSubscriptionConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoRenew Auto renew for prepaid, ’true’ or ‘false’ . Default value: false.
         * 
         * @return builder
         * 
         */
        public Builder autoRenew(@Nullable Output<Boolean> autoRenew) {
            $.autoRenew = autoRenew;
            return this;
        }

        /**
         * @param autoRenew Auto renew for prepaid, ’true’ or ‘false’ . Default value: false.
         * 
         * @return builder
         * 
         */
        public Builder autoRenew(Boolean autoRenew) {
            return autoRenew(Output.of(autoRenew));
        }

        /**
         * @param autoRenewDuration If paymentType is Subscription, this should be specified. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36、48.
         * 
         * @return builder
         * 
         */
        public Builder autoRenewDuration(@Nullable Output<Integer> autoRenewDuration) {
            $.autoRenewDuration = autoRenewDuration;
            return this;
        }

        /**
         * @param autoRenewDuration If paymentType is Subscription, this should be specified. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36、48.
         * 
         * @return builder
         * 
         */
        public Builder autoRenewDuration(Integer autoRenewDuration) {
            return autoRenewDuration(Output.of(autoRenewDuration));
        }

        /**
         * @param autoRenewDurationUnit If paymentType is Subscription, this should be specified. Supported value: Month or Year.
         * 
         * @return builder
         * 
         */
        public Builder autoRenewDurationUnit(@Nullable Output<String> autoRenewDurationUnit) {
            $.autoRenewDurationUnit = autoRenewDurationUnit;
            return this;
        }

        /**
         * @param autoRenewDurationUnit If paymentType is Subscription, this should be specified. Supported value: Month or Year.
         * 
         * @return builder
         * 
         */
        public Builder autoRenewDurationUnit(String autoRenewDurationUnit) {
            return autoRenewDurationUnit(Output.of(autoRenewDurationUnit));
        }

        /**
         * @param paymentDuration If paymentType is Subscription, this should be specified. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36、48.
         * 
         * @return builder
         * 
         */
        public Builder paymentDuration(Output<Integer> paymentDuration) {
            $.paymentDuration = paymentDuration;
            return this;
        }

        /**
         * @param paymentDuration If paymentType is Subscription, this should be specified. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36、48.
         * 
         * @return builder
         * 
         */
        public Builder paymentDuration(Integer paymentDuration) {
            return paymentDuration(Output.of(paymentDuration));
        }

        /**
         * @param paymentDurationUnit If paymentType is Subscription, this should be specified. Supported value: Month or Year.
         * 
         * @return builder
         * 
         */
        public Builder paymentDurationUnit(Output<String> paymentDurationUnit) {
            $.paymentDurationUnit = paymentDurationUnit;
            return this;
        }

        /**
         * @param paymentDurationUnit If paymentType is Subscription, this should be specified. Supported value: Month or Year.
         * 
         * @return builder
         * 
         */
        public Builder paymentDurationUnit(String paymentDurationUnit) {
            return paymentDurationUnit(Output.of(paymentDurationUnit));
        }

        public ClusterNodeGroupSubscriptionConfigArgs build() {
            if ($.paymentDuration == null) {
                throw new MissingRequiredPropertyException("ClusterNodeGroupSubscriptionConfigArgs", "paymentDuration");
            }
            if ($.paymentDurationUnit == null) {
                throw new MissingRequiredPropertyException("ClusterNodeGroupSubscriptionConfigArgs", "paymentDurationUnit");
            }
            return $;
        }
    }

}
