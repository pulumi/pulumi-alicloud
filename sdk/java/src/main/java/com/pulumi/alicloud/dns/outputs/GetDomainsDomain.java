// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dns.outputs;

import com.pulumi.alicloud.dns.outputs.GetDomainsDomainRecordLine;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDomainsDomain {
    /**
     * @return Specifies whether the domain is from Alibaba Cloud or not.
     * 
     */
    private Boolean aliDomain;
    private List<Integer> availableTtls;
    /**
     * @return DNS list of domain names in the resolution system.
     * 
     */
    private List<String> dnsServers;
    /**
     * @return ID of the domain.
     * 
     */
    private String domainId;
    /**
     * @return Name of the domain.
     * 
     */
    private String domainName;
    /**
     * @return Domain group ID, if not filled, the default is all groups.
     * 
     */
    private String groupId;
    /**
     * @return Name of group that contains the domain.
     * 
     */
    private String groupName;
    /**
     * @return The Id of resource.
     * 
     */
    private String id;
    /**
     * @return Whether it is in black hole.
     * 
     */
    private Boolean inBlackHole;
    /**
     * @return Whether it is cleaning.
     * 
     */
    private Boolean inClean;
    /**
     * @return Cloud analysis product ID.
     * 
     */
    private String instanceId;
    private String lineType;
    /**
     * @return Minimum TTL.
     * 
     */
    private Integer minTtl;
    /**
     * @return Punycode of the Chinese domain.
     * 
     */
    private String punyCode;
    /**
     * @return Tree-like analytical line list.
     * 
     */
    private String recordLineTreeJson;
    private List<GetDomainsDomainRecordLine> recordLines;
    /**
     * @return Whether it is a regional route.
     * 
     */
    private Boolean regionLines;
    /**
     * @return The Id of resource group which the dns belongs.
     * 
     */
    private String remark;
    /**
     * @return The Id of resource group which the dns belongs.
     * 
     */
    private String resourceGroupId;
    /**
     * @return Whether to allow auxiliary dns.
     * 
     */
    private Boolean slaveDns;
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    private Map<String,Object> tags;
    /**
     * @return Cloud analysis version code.
     * 
     */
    private String versionCode;
    private String versionName;

    private GetDomainsDomain() {}
    /**
     * @return Specifies whether the domain is from Alibaba Cloud or not.
     * 
     */
    public Boolean aliDomain() {
        return this.aliDomain;
    }
    public List<Integer> availableTtls() {
        return this.availableTtls;
    }
    /**
     * @return DNS list of domain names in the resolution system.
     * 
     */
    public List<String> dnsServers() {
        return this.dnsServers;
    }
    /**
     * @return ID of the domain.
     * 
     */
    public String domainId() {
        return this.domainId;
    }
    /**
     * @return Name of the domain.
     * 
     */
    public String domainName() {
        return this.domainName;
    }
    /**
     * @return Domain group ID, if not filled, the default is all groups.
     * 
     */
    public String groupId() {
        return this.groupId;
    }
    /**
     * @return Name of group that contains the domain.
     * 
     */
    public String groupName() {
        return this.groupName;
    }
    /**
     * @return The Id of resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Whether it is in black hole.
     * 
     */
    public Boolean inBlackHole() {
        return this.inBlackHole;
    }
    /**
     * @return Whether it is cleaning.
     * 
     */
    public Boolean inClean() {
        return this.inClean;
    }
    /**
     * @return Cloud analysis product ID.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    public String lineType() {
        return this.lineType;
    }
    /**
     * @return Minimum TTL.
     * 
     */
    public Integer minTtl() {
        return this.minTtl;
    }
    /**
     * @return Punycode of the Chinese domain.
     * 
     */
    public String punyCode() {
        return this.punyCode;
    }
    /**
     * @return Tree-like analytical line list.
     * 
     */
    public String recordLineTreeJson() {
        return this.recordLineTreeJson;
    }
    public List<GetDomainsDomainRecordLine> recordLines() {
        return this.recordLines;
    }
    /**
     * @return Whether it is a regional route.
     * 
     */
    public Boolean regionLines() {
        return this.regionLines;
    }
    /**
     * @return The Id of resource group which the dns belongs.
     * 
     */
    public String remark() {
        return this.remark;
    }
    /**
     * @return The Id of resource group which the dns belongs.
     * 
     */
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * @return Whether to allow auxiliary dns.
     * 
     */
    public Boolean slaveDns() {
        return this.slaveDns;
    }
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Map<String,Object> tags() {
        return this.tags;
    }
    /**
     * @return Cloud analysis version code.
     * 
     */
    public String versionCode() {
        return this.versionCode;
    }
    public String versionName() {
        return this.versionName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsDomain defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean aliDomain;
        private List<Integer> availableTtls;
        private List<String> dnsServers;
        private String domainId;
        private String domainName;
        private String groupId;
        private String groupName;
        private String id;
        private Boolean inBlackHole;
        private Boolean inClean;
        private String instanceId;
        private String lineType;
        private Integer minTtl;
        private String punyCode;
        private String recordLineTreeJson;
        private List<GetDomainsDomainRecordLine> recordLines;
        private Boolean regionLines;
        private String remark;
        private String resourceGroupId;
        private Boolean slaveDns;
        private Map<String,Object> tags;
        private String versionCode;
        private String versionName;
        public Builder() {}
        public Builder(GetDomainsDomain defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aliDomain = defaults.aliDomain;
    	      this.availableTtls = defaults.availableTtls;
    	      this.dnsServers = defaults.dnsServers;
    	      this.domainId = defaults.domainId;
    	      this.domainName = defaults.domainName;
    	      this.groupId = defaults.groupId;
    	      this.groupName = defaults.groupName;
    	      this.id = defaults.id;
    	      this.inBlackHole = defaults.inBlackHole;
    	      this.inClean = defaults.inClean;
    	      this.instanceId = defaults.instanceId;
    	      this.lineType = defaults.lineType;
    	      this.minTtl = defaults.minTtl;
    	      this.punyCode = defaults.punyCode;
    	      this.recordLineTreeJson = defaults.recordLineTreeJson;
    	      this.recordLines = defaults.recordLines;
    	      this.regionLines = defaults.regionLines;
    	      this.remark = defaults.remark;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.slaveDns = defaults.slaveDns;
    	      this.tags = defaults.tags;
    	      this.versionCode = defaults.versionCode;
    	      this.versionName = defaults.versionName;
        }

        @CustomType.Setter
        public Builder aliDomain(Boolean aliDomain) {
            if (aliDomain == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "aliDomain");
            }
            this.aliDomain = aliDomain;
            return this;
        }
        @CustomType.Setter
        public Builder availableTtls(List<Integer> availableTtls) {
            if (availableTtls == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "availableTtls");
            }
            this.availableTtls = availableTtls;
            return this;
        }
        public Builder availableTtls(Integer... availableTtls) {
            return availableTtls(List.of(availableTtls));
        }
        @CustomType.Setter
        public Builder dnsServers(List<String> dnsServers) {
            if (dnsServers == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "dnsServers");
            }
            this.dnsServers = dnsServers;
            return this;
        }
        public Builder dnsServers(String... dnsServers) {
            return dnsServers(List.of(dnsServers));
        }
        @CustomType.Setter
        public Builder domainId(String domainId) {
            if (domainId == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "domainId");
            }
            this.domainId = domainId;
            return this;
        }
        @CustomType.Setter
        public Builder domainName(String domainName) {
            if (domainName == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "domainName");
            }
            this.domainName = domainName;
            return this;
        }
        @CustomType.Setter
        public Builder groupId(String groupId) {
            if (groupId == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "groupId");
            }
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder groupName(String groupName) {
            if (groupName == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "groupName");
            }
            this.groupName = groupName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inBlackHole(Boolean inBlackHole) {
            if (inBlackHole == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "inBlackHole");
            }
            this.inBlackHole = inBlackHole;
            return this;
        }
        @CustomType.Setter
        public Builder inClean(Boolean inClean) {
            if (inClean == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "inClean");
            }
            this.inClean = inClean;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder lineType(String lineType) {
            if (lineType == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "lineType");
            }
            this.lineType = lineType;
            return this;
        }
        @CustomType.Setter
        public Builder minTtl(Integer minTtl) {
            if (minTtl == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "minTtl");
            }
            this.minTtl = minTtl;
            return this;
        }
        @CustomType.Setter
        public Builder punyCode(String punyCode) {
            if (punyCode == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "punyCode");
            }
            this.punyCode = punyCode;
            return this;
        }
        @CustomType.Setter
        public Builder recordLineTreeJson(String recordLineTreeJson) {
            if (recordLineTreeJson == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "recordLineTreeJson");
            }
            this.recordLineTreeJson = recordLineTreeJson;
            return this;
        }
        @CustomType.Setter
        public Builder recordLines(List<GetDomainsDomainRecordLine> recordLines) {
            if (recordLines == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "recordLines");
            }
            this.recordLines = recordLines;
            return this;
        }
        public Builder recordLines(GetDomainsDomainRecordLine... recordLines) {
            return recordLines(List.of(recordLines));
        }
        @CustomType.Setter
        public Builder regionLines(Boolean regionLines) {
            if (regionLines == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "regionLines");
            }
            this.regionLines = regionLines;
            return this;
        }
        @CustomType.Setter
        public Builder remark(String remark) {
            if (remark == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "remark");
            }
            this.remark = remark;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupId(String resourceGroupId) {
            if (resourceGroupId == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "resourceGroupId");
            }
            this.resourceGroupId = resourceGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder slaveDns(Boolean slaveDns) {
            if (slaveDns == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "slaveDns");
            }
            this.slaveDns = slaveDns;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,Object> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder versionCode(String versionCode) {
            if (versionCode == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "versionCode");
            }
            this.versionCode = versionCode;
            return this;
        }
        @CustomType.Setter
        public Builder versionName(String versionName) {
            if (versionName == null) {
              throw new MissingRequiredPropertyException("GetDomainsDomain", "versionName");
            }
            this.versionName = versionName;
            return this;
        }
        public GetDomainsDomain build() {
            final var _resultValue = new GetDomainsDomain();
            _resultValue.aliDomain = aliDomain;
            _resultValue.availableTtls = availableTtls;
            _resultValue.dnsServers = dnsServers;
            _resultValue.domainId = domainId;
            _resultValue.domainName = domainName;
            _resultValue.groupId = groupId;
            _resultValue.groupName = groupName;
            _resultValue.id = id;
            _resultValue.inBlackHole = inBlackHole;
            _resultValue.inClean = inClean;
            _resultValue.instanceId = instanceId;
            _resultValue.lineType = lineType;
            _resultValue.minTtl = minTtl;
            _resultValue.punyCode = punyCode;
            _resultValue.recordLineTreeJson = recordLineTreeJson;
            _resultValue.recordLines = recordLines;
            _resultValue.regionLines = regionLines;
            _resultValue.remark = remark;
            _resultValue.resourceGroupId = resourceGroupId;
            _resultValue.slaveDns = slaveDns;
            _resultValue.tags = tags;
            _resultValue.versionCode = versionCode;
            _resultValue.versionName = versionName;
            return _resultValue;
        }
    }
}
