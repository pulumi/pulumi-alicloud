// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.outputs;

import com.pulumi.alicloud.vpc.outputs.GetIpamIpamPoolAllocationsAllocation;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetIpamIpamPoolAllocationsResult {
    /**
     * @return A list of Ipam Pool Allocation Entries. Each element contains the following attributes:
     * 
     */
    private List<GetIpamIpamPoolAllocationsAllocation> allocations;
    /**
     * @return The allocated address segment.
     * 
     */
    private @Nullable String cidr;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of Ipam Pool Allocation IDs.
     * 
     */
    private List<String> ids;
    /**
     * @return The instance ID of the ipam pool allocation.
     * 
     */
    private @Nullable String ipamPoolAllocationId;
    /**
     * @return The name of the ipam pool allocation.It must be 1 to 128 characters in length and cannot start with &#39;http:// &#39;or &#39;https.
     * 
     */
    private @Nullable String ipamPoolAllocationName;
    /**
     * @return The ID of the IPAM Pool.
     * 
     */
    private String ipamPoolId;
    private @Nullable String nameRegex;
    /**
     * @return A list of name of Ipam Pool Allocations.
     * 
     */
    private List<String> names;
    private @Nullable String outputFile;

    private GetIpamIpamPoolAllocationsResult() {}
    /**
     * @return A list of Ipam Pool Allocation Entries. Each element contains the following attributes:
     * 
     */
    public List<GetIpamIpamPoolAllocationsAllocation> allocations() {
        return this.allocations;
    }
    /**
     * @return The allocated address segment.
     * 
     */
    public Optional<String> cidr() {
        return Optional.ofNullable(this.cidr);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of Ipam Pool Allocation IDs.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    /**
     * @return The instance ID of the ipam pool allocation.
     * 
     */
    public Optional<String> ipamPoolAllocationId() {
        return Optional.ofNullable(this.ipamPoolAllocationId);
    }
    /**
     * @return The name of the ipam pool allocation.It must be 1 to 128 characters in length and cannot start with &#39;http:// &#39;or &#39;https.
     * 
     */
    public Optional<String> ipamPoolAllocationName() {
        return Optional.ofNullable(this.ipamPoolAllocationName);
    }
    /**
     * @return The ID of the IPAM Pool.
     * 
     */
    public String ipamPoolId() {
        return this.ipamPoolId;
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    /**
     * @return A list of name of Ipam Pool Allocations.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIpamIpamPoolAllocationsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetIpamIpamPoolAllocationsAllocation> allocations;
        private @Nullable String cidr;
        private String id;
        private List<String> ids;
        private @Nullable String ipamPoolAllocationId;
        private @Nullable String ipamPoolAllocationName;
        private String ipamPoolId;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String outputFile;
        public Builder() {}
        public Builder(GetIpamIpamPoolAllocationsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocations = defaults.allocations;
    	      this.cidr = defaults.cidr;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.ipamPoolAllocationId = defaults.ipamPoolAllocationId;
    	      this.ipamPoolAllocationName = defaults.ipamPoolAllocationName;
    	      this.ipamPoolId = defaults.ipamPoolId;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.outputFile = defaults.outputFile;
        }

        @CustomType.Setter
        public Builder allocations(List<GetIpamIpamPoolAllocationsAllocation> allocations) {
            if (allocations == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsResult", "allocations");
            }
            this.allocations = allocations;
            return this;
        }
        public Builder allocations(GetIpamIpamPoolAllocationsAllocation... allocations) {
            return allocations(List.of(allocations));
        }
        @CustomType.Setter
        public Builder cidr(@Nullable String cidr) {

            this.cidr = cidr;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            if (ids == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsResult", "ids");
            }
            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder ipamPoolAllocationId(@Nullable String ipamPoolAllocationId) {

            this.ipamPoolAllocationId = ipamPoolAllocationId;
            return this;
        }
        @CustomType.Setter
        public Builder ipamPoolAllocationName(@Nullable String ipamPoolAllocationName) {

            this.ipamPoolAllocationName = ipamPoolAllocationName;
            return this;
        }
        @CustomType.Setter
        public Builder ipamPoolId(String ipamPoolId) {
            if (ipamPoolId == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsResult", "ipamPoolId");
            }
            this.ipamPoolId = ipamPoolId;
            return this;
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {

            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder names(List<String> names) {
            if (names == null) {
              throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsResult", "names");
            }
            this.names = names;
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        public GetIpamIpamPoolAllocationsResult build() {
            final var _resultValue = new GetIpamIpamPoolAllocationsResult();
            _resultValue.allocations = allocations;
            _resultValue.cidr = cidr;
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.ipamPoolAllocationId = ipamPoolAllocationId;
            _resultValue.ipamPoolAllocationName = ipamPoolAllocationName;
            _resultValue.ipamPoolId = ipamPoolId;
            _resultValue.nameRegex = nameRegex;
            _resultValue.names = names;
            _resultValue.outputFile = outputFile;
            return _resultValue;
        }
    }
}
