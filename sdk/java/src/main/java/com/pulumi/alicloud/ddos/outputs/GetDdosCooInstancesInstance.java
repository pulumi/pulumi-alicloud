// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ddos.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDdosCooInstancesInstance {
    /**
     * @return The instance&#39;s elastic defend bandwidth.
     * 
     */
    private Integer bandwidth;
    /**
     * @return The instance&#39;s base defend bandwidth.
     * 
     */
    private Integer baseBandwidth;
    /**
     * @return The creation time of the instance.
     * 
     */
    private Integer createTime;
    /**
     * @return The debt status of the instance.
     * 
     */
    private Integer debtStatus;
    /**
     * @return The instance&#39;s count of domain retransmission config.
     * 
     */
    private Integer domainCount;
    /**
     * @return The edition of the instance. The Valid Values : `0`, `1`, `2`, `9`.
     * 
     */
    private Integer edition;
    /**
     * @return The enabled of the instance. The Valid Values : `0`, `1`.
     * 
     */
    private Integer enabled;
    /**
     * @return The expiry time of the instance.
     * 
     */
    private Integer expireTime;
    /**
     * @return The instance&#39;s id.
     * 
     */
    private String id;
    /**
     * @return The ip mode of the instance. The Valid Values : `fnat`, `v6tov4`.
     * 
     */
    private String ipMode;
    /**
     * @return The ip version of the instance. The Valid Values : `Ipv4`, `Ipv6`.
     * 
     */
    private String ipVersion;
    /**
     * @return The instance&#39;s remark.
     * 
     */
    private String name;
    /**
     * @return The instance&#39;s count of port retransmission config.
     * 
     */
    private Integer portCount;
    /**
     * @return The remark of the instance.
     * 
     */
    private String remark;
    /**
     * @return The instance&#39;s business bandwidth.
     * 
     */
    private Integer serviceBandwidth;
    /**
     * @return The status of the instance. The Valid Values : `1`, `2`.
     * 
     */
    private Integer status;

    private GetDdosCooInstancesInstance() {}
    /**
     * @return The instance&#39;s elastic defend bandwidth.
     * 
     */
    public Integer bandwidth() {
        return this.bandwidth;
    }
    /**
     * @return The instance&#39;s base defend bandwidth.
     * 
     */
    public Integer baseBandwidth() {
        return this.baseBandwidth;
    }
    /**
     * @return The creation time of the instance.
     * 
     */
    public Integer createTime() {
        return this.createTime;
    }
    /**
     * @return The debt status of the instance.
     * 
     */
    public Integer debtStatus() {
        return this.debtStatus;
    }
    /**
     * @return The instance&#39;s count of domain retransmission config.
     * 
     */
    public Integer domainCount() {
        return this.domainCount;
    }
    /**
     * @return The edition of the instance. The Valid Values : `0`, `1`, `2`, `9`.
     * 
     */
    public Integer edition() {
        return this.edition;
    }
    /**
     * @return The enabled of the instance. The Valid Values : `0`, `1`.
     * 
     */
    public Integer enabled() {
        return this.enabled;
    }
    /**
     * @return The expiry time of the instance.
     * 
     */
    public Integer expireTime() {
        return this.expireTime;
    }
    /**
     * @return The instance&#39;s id.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ip mode of the instance. The Valid Values : `fnat`, `v6tov4`.
     * 
     */
    public String ipMode() {
        return this.ipMode;
    }
    /**
     * @return The ip version of the instance. The Valid Values : `Ipv4`, `Ipv6`.
     * 
     */
    public String ipVersion() {
        return this.ipVersion;
    }
    /**
     * @return The instance&#39;s remark.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The instance&#39;s count of port retransmission config.
     * 
     */
    public Integer portCount() {
        return this.portCount;
    }
    /**
     * @return The remark of the instance.
     * 
     */
    public String remark() {
        return this.remark;
    }
    /**
     * @return The instance&#39;s business bandwidth.
     * 
     */
    public Integer serviceBandwidth() {
        return this.serviceBandwidth;
    }
    /**
     * @return The status of the instance. The Valid Values : `1`, `2`.
     * 
     */
    public Integer status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDdosCooInstancesInstance defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer bandwidth;
        private Integer baseBandwidth;
        private Integer createTime;
        private Integer debtStatus;
        private Integer domainCount;
        private Integer edition;
        private Integer enabled;
        private Integer expireTime;
        private String id;
        private String ipMode;
        private String ipVersion;
        private String name;
        private Integer portCount;
        private String remark;
        private Integer serviceBandwidth;
        private Integer status;
        public Builder() {}
        public Builder(GetDdosCooInstancesInstance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandwidth = defaults.bandwidth;
    	      this.baseBandwidth = defaults.baseBandwidth;
    	      this.createTime = defaults.createTime;
    	      this.debtStatus = defaults.debtStatus;
    	      this.domainCount = defaults.domainCount;
    	      this.edition = defaults.edition;
    	      this.enabled = defaults.enabled;
    	      this.expireTime = defaults.expireTime;
    	      this.id = defaults.id;
    	      this.ipMode = defaults.ipMode;
    	      this.ipVersion = defaults.ipVersion;
    	      this.name = defaults.name;
    	      this.portCount = defaults.portCount;
    	      this.remark = defaults.remark;
    	      this.serviceBandwidth = defaults.serviceBandwidth;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder bandwidth(Integer bandwidth) {
            this.bandwidth = Objects.requireNonNull(bandwidth);
            return this;
        }
        @CustomType.Setter
        public Builder baseBandwidth(Integer baseBandwidth) {
            this.baseBandwidth = Objects.requireNonNull(baseBandwidth);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(Integer createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder debtStatus(Integer debtStatus) {
            this.debtStatus = Objects.requireNonNull(debtStatus);
            return this;
        }
        @CustomType.Setter
        public Builder domainCount(Integer domainCount) {
            this.domainCount = Objects.requireNonNull(domainCount);
            return this;
        }
        @CustomType.Setter
        public Builder edition(Integer edition) {
            this.edition = Objects.requireNonNull(edition);
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Integer enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }
        @CustomType.Setter
        public Builder expireTime(Integer expireTime) {
            this.expireTime = Objects.requireNonNull(expireTime);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ipMode(String ipMode) {
            this.ipMode = Objects.requireNonNull(ipMode);
            return this;
        }
        @CustomType.Setter
        public Builder ipVersion(String ipVersion) {
            this.ipVersion = Objects.requireNonNull(ipVersion);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder portCount(Integer portCount) {
            this.portCount = Objects.requireNonNull(portCount);
            return this;
        }
        @CustomType.Setter
        public Builder remark(String remark) {
            this.remark = Objects.requireNonNull(remark);
            return this;
        }
        @CustomType.Setter
        public Builder serviceBandwidth(Integer serviceBandwidth) {
            this.serviceBandwidth = Objects.requireNonNull(serviceBandwidth);
            return this;
        }
        @CustomType.Setter
        public Builder status(Integer status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public GetDdosCooInstancesInstance build() {
            final var o = new GetDdosCooInstancesInstance();
            o.bandwidth = bandwidth;
            o.baseBandwidth = baseBandwidth;
            o.createTime = createTime;
            o.debtStatus = debtStatus;
            o.domainCount = domainCount;
            o.edition = edition;
            o.enabled = enabled;
            o.expireTime = expireTime;
            o.id = id;
            o.ipMode = ipMode;
            o.ipVersion = ipVersion;
            o.name = name;
            o.portCount = portCount;
            o.remark = remark;
            o.serviceBandwidth = serviceBandwidth;
            o.status = status;
            return o;
        }
    }
}
