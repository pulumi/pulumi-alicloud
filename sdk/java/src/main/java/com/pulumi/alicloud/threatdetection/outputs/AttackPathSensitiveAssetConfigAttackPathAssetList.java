// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class AttackPathSensitiveAssetConfigAttackPathAssetList {
    /**
     * @return Cloud product asset subtype.
     * 
     */
    private Integer assetSubType;
    /**
     * @return The asset type of the cloud product asset.
     * 
     */
    private Integer assetType;
    /**
     * @return The ID of the cloud product instance.
     * 
     */
    private String instanceId;
    /**
     * @return The region ID of the cloud product.
     * 
     */
    private String regionId;
    /**
     * @return Cloud product asset vendor. Valid values: `0`.
     * 
     */
    private Integer vendor;

    private AttackPathSensitiveAssetConfigAttackPathAssetList() {}
    /**
     * @return Cloud product asset subtype.
     * 
     */
    public Integer assetSubType() {
        return this.assetSubType;
    }
    /**
     * @return The asset type of the cloud product asset.
     * 
     */
    public Integer assetType() {
        return this.assetType;
    }
    /**
     * @return The ID of the cloud product instance.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return The region ID of the cloud product.
     * 
     */
    public String regionId() {
        return this.regionId;
    }
    /**
     * @return Cloud product asset vendor. Valid values: `0`.
     * 
     */
    public Integer vendor() {
        return this.vendor;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AttackPathSensitiveAssetConfigAttackPathAssetList defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer assetSubType;
        private Integer assetType;
        private String instanceId;
        private String regionId;
        private Integer vendor;
        public Builder() {}
        public Builder(AttackPathSensitiveAssetConfigAttackPathAssetList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assetSubType = defaults.assetSubType;
    	      this.assetType = defaults.assetType;
    	      this.instanceId = defaults.instanceId;
    	      this.regionId = defaults.regionId;
    	      this.vendor = defaults.vendor;
        }

        @CustomType.Setter
        public Builder assetSubType(Integer assetSubType) {
            if (assetSubType == null) {
              throw new MissingRequiredPropertyException("AttackPathSensitiveAssetConfigAttackPathAssetList", "assetSubType");
            }
            this.assetSubType = assetSubType;
            return this;
        }
        @CustomType.Setter
        public Builder assetType(Integer assetType) {
            if (assetType == null) {
              throw new MissingRequiredPropertyException("AttackPathSensitiveAssetConfigAttackPathAssetList", "assetType");
            }
            this.assetType = assetType;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("AttackPathSensitiveAssetConfigAttackPathAssetList", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder regionId(String regionId) {
            if (regionId == null) {
              throw new MissingRequiredPropertyException("AttackPathSensitiveAssetConfigAttackPathAssetList", "regionId");
            }
            this.regionId = regionId;
            return this;
        }
        @CustomType.Setter
        public Builder vendor(Integer vendor) {
            if (vendor == null) {
              throw new MissingRequiredPropertyException("AttackPathSensitiveAssetConfigAttackPathAssetList", "vendor");
            }
            this.vendor = vendor;
            return this;
        }
        public AttackPathSensitiveAssetConfigAttackPathAssetList build() {
            final var _resultValue = new AttackPathSensitiveAssetConfigAttackPathAssetList();
            _resultValue.assetSubType = assetSubType;
            _resultValue.assetType = assetType;
            _resultValue.instanceId = instanceId;
            _resultValue.regionId = regionId;
            _resultValue.vendor = vendor;
            return _resultValue;
        }
    }
}
