// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dms.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEnterpriseInstancesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEnterpriseInstancesPlainArgs Empty = new GetEnterpriseInstancesPlainArgs();

    /**
     * The type of the environment to which the database instance belongs.
     * 
     */
    @Import(name="envType")
    private @Nullable String envType;

    /**
     * @return The type of the environment to which the database instance belongs.
     * 
     */
    public Optional<String> envType() {
        return Optional.ofNullable(this.envType);
    }

    /**
     * A regex string to filter the results by the DMS Enterprise Instance instance_alias.
     * 
     */
    @Import(name="instanceAliasRegex")
    private @Nullable String instanceAliasRegex;

    /**
     * @return A regex string to filter the results by the DMS Enterprise Instance instance_alias.
     * 
     */
    public Optional<String> instanceAliasRegex() {
        return Optional.ofNullable(this.instanceAliasRegex);
    }

    /**
     * The source of the database instance.
     * 
     */
    @Import(name="instanceSource")
    private @Nullable String instanceSource;

    /**
     * @return The source of the database instance.
     * 
     */
    public Optional<String> instanceSource() {
        return Optional.ofNullable(this.instanceSource);
    }

    /**
     * The ID of the database instance.
     * 
     */
    @Import(name="instanceType")
    private @Nullable String instanceType;

    /**
     * @return The ID of the database instance.
     * 
     */
    public Optional<String> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * A regex string to filter the results by the DMS Enterprise Instance instance_alias.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable String nameRegex;

    /**
     * @return A regex string to filter the results by the DMS Enterprise Instance instance_alias.
     * 
     */
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * The network type of the database instance. Valid values: CLASSIC and VPC. For more information about the valid values, see the description of the RegisterInstance operation.
     * 
     */
    @Import(name="netType")
    private @Nullable String netType;

    /**
     * @return The network type of the database instance. Valid values: CLASSIC and VPC. For more information about the valid values, see the description of the RegisterInstance operation.
     * 
     */
    public Optional<String> netType() {
        return Optional.ofNullable(this.netType);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The keyword used to query database instances.
     * 
     */
    @Import(name="searchKey")
    private @Nullable String searchKey;

    /**
     * @return The keyword used to query database instances.
     * 
     */
    public Optional<String> searchKey() {
        return Optional.ofNullable(this.searchKey);
    }

    /**
     * Filter the results by status of the DMS Enterprise Instances. Valid values: `NORMAL`, `UNAVAILABLE`, `UNKNOWN`, `DELETED`, `DISABLE`.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return Filter the results by status of the DMS Enterprise Instances. Valid values: `NORMAL`, `UNAVAILABLE`, `UNKNOWN`, `DELETED`, `DISABLE`.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The ID of the tenant in Data Management (DMS) Enterprise.
     * 
     */
    @Import(name="tid")
    private @Nullable Integer tid;

    /**
     * @return The ID of the tenant in Data Management (DMS) Enterprise.
     * 
     */
    public Optional<Integer> tid() {
        return Optional.ofNullable(this.tid);
    }

    private GetEnterpriseInstancesPlainArgs() {}

    private GetEnterpriseInstancesPlainArgs(GetEnterpriseInstancesPlainArgs $) {
        this.envType = $.envType;
        this.instanceAliasRegex = $.instanceAliasRegex;
        this.instanceSource = $.instanceSource;
        this.instanceType = $.instanceType;
        this.nameRegex = $.nameRegex;
        this.netType = $.netType;
        this.outputFile = $.outputFile;
        this.searchKey = $.searchKey;
        this.status = $.status;
        this.tid = $.tid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEnterpriseInstancesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEnterpriseInstancesPlainArgs $;

        public Builder() {
            $ = new GetEnterpriseInstancesPlainArgs();
        }

        public Builder(GetEnterpriseInstancesPlainArgs defaults) {
            $ = new GetEnterpriseInstancesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param envType The type of the environment to which the database instance belongs.
         * 
         * @return builder
         * 
         */
        public Builder envType(@Nullable String envType) {
            $.envType = envType;
            return this;
        }

        /**
         * @param instanceAliasRegex A regex string to filter the results by the DMS Enterprise Instance instance_alias.
         * 
         * @return builder
         * 
         */
        public Builder instanceAliasRegex(@Nullable String instanceAliasRegex) {
            $.instanceAliasRegex = instanceAliasRegex;
            return this;
        }

        /**
         * @param instanceSource The source of the database instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceSource(@Nullable String instanceSource) {
            $.instanceSource = instanceSource;
            return this;
        }

        /**
         * @param instanceType The ID of the database instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable String instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param nameRegex A regex string to filter the results by the DMS Enterprise Instance instance_alias.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable String nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param netType The network type of the database instance. Valid values: CLASSIC and VPC. For more information about the valid values, see the description of the RegisterInstance operation.
         * 
         * @return builder
         * 
         */
        public Builder netType(@Nullable String netType) {
            $.netType = netType;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param searchKey The keyword used to query database instances.
         * 
         * @return builder
         * 
         */
        public Builder searchKey(@Nullable String searchKey) {
            $.searchKey = searchKey;
            return this;
        }

        /**
         * @param status Filter the results by status of the DMS Enterprise Instances. Valid values: `NORMAL`, `UNAVAILABLE`, `UNKNOWN`, `DELETED`, `DISABLE`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        /**
         * @param tid The ID of the tenant in Data Management (DMS) Enterprise.
         * 
         * @return builder
         * 
         */
        public Builder tid(@Nullable Integer tid) {
            $.tid = tid;
            return this;
        }

        public GetEnterpriseInstancesPlainArgs build() {
            return $;
        }
    }

}
