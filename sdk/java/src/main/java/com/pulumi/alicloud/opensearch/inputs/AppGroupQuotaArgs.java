// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.opensearch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppGroupQuotaArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppGroupQuotaArgs Empty = new AppGroupQuotaArgs();

    /**
     * Computing resources. Unit: LCU.
     * 
     */
    @Import(name="computeResource", required=true)
    private Output<Integer> computeResource;

    /**
     * @return Computing resources. Unit: LCU.
     * 
     */
    public Output<Integer> computeResource() {
        return this.computeResource;
    }

    /**
     * Storage Size. Unit: GB.
     * 
     */
    @Import(name="docSize", required=true)
    private Output<Integer> docSize;

    /**
     * @return Storage Size. Unit: GB.
     * 
     */
    public Output<Integer> docSize() {
        return this.docSize;
    }

    /**
     * Search request. Unit: times/second.
     * 
     */
    @Import(name="qps")
    private @Nullable Output<Integer> qps;

    /**
     * @return Search request. Unit: times/second.
     * 
     */
    public Optional<Output<Integer>> qps() {
        return Optional.ofNullable(this.qps);
    }

    /**
     * Specification. Valid values:
     * * `opensearch.share.junior`: Entry-level.
     * * `opensearch.share.common`: Shared universal.
     * * `opensearch.share.compute`: Shared computing.
     * * `opensearch.share.storage`: Shared storage type.
     * * `opensearch.private.common`: Exclusive universal type.
     * * `opensearch.private.compute`: Exclusive computing type.
     * * `opensearch.private.storage`: Exclusive storage type
     * 
     */
    @Import(name="spec", required=true)
    private Output<String> spec;

    /**
     * @return Specification. Valid values:
     * * `opensearch.share.junior`: Entry-level.
     * * `opensearch.share.common`: Shared universal.
     * * `opensearch.share.compute`: Shared computing.
     * * `opensearch.share.storage`: Shared storage type.
     * * `opensearch.private.common`: Exclusive universal type.
     * * `opensearch.private.compute`: Exclusive computing type.
     * * `opensearch.private.storage`: Exclusive storage type
     * 
     */
    public Output<String> spec() {
        return this.spec;
    }

    private AppGroupQuotaArgs() {}

    private AppGroupQuotaArgs(AppGroupQuotaArgs $) {
        this.computeResource = $.computeResource;
        this.docSize = $.docSize;
        this.qps = $.qps;
        this.spec = $.spec;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppGroupQuotaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppGroupQuotaArgs $;

        public Builder() {
            $ = new AppGroupQuotaArgs();
        }

        public Builder(AppGroupQuotaArgs defaults) {
            $ = new AppGroupQuotaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param computeResource Computing resources. Unit: LCU.
         * 
         * @return builder
         * 
         */
        public Builder computeResource(Output<Integer> computeResource) {
            $.computeResource = computeResource;
            return this;
        }

        /**
         * @param computeResource Computing resources. Unit: LCU.
         * 
         * @return builder
         * 
         */
        public Builder computeResource(Integer computeResource) {
            return computeResource(Output.of(computeResource));
        }

        /**
         * @param docSize Storage Size. Unit: GB.
         * 
         * @return builder
         * 
         */
        public Builder docSize(Output<Integer> docSize) {
            $.docSize = docSize;
            return this;
        }

        /**
         * @param docSize Storage Size. Unit: GB.
         * 
         * @return builder
         * 
         */
        public Builder docSize(Integer docSize) {
            return docSize(Output.of(docSize));
        }

        /**
         * @param qps Search request. Unit: times/second.
         * 
         * @return builder
         * 
         */
        public Builder qps(@Nullable Output<Integer> qps) {
            $.qps = qps;
            return this;
        }

        /**
         * @param qps Search request. Unit: times/second.
         * 
         * @return builder
         * 
         */
        public Builder qps(Integer qps) {
            return qps(Output.of(qps));
        }

        /**
         * @param spec Specification. Valid values:
         * * `opensearch.share.junior`: Entry-level.
         * * `opensearch.share.common`: Shared universal.
         * * `opensearch.share.compute`: Shared computing.
         * * `opensearch.share.storage`: Shared storage type.
         * * `opensearch.private.common`: Exclusive universal type.
         * * `opensearch.private.compute`: Exclusive computing type.
         * * `opensearch.private.storage`: Exclusive storage type
         * 
         * @return builder
         * 
         */
        public Builder spec(Output<String> spec) {
            $.spec = spec;
            return this;
        }

        /**
         * @param spec Specification. Valid values:
         * * `opensearch.share.junior`: Entry-level.
         * * `opensearch.share.common`: Shared universal.
         * * `opensearch.share.compute`: Shared computing.
         * * `opensearch.share.storage`: Shared storage type.
         * * `opensearch.private.common`: Exclusive universal type.
         * * `opensearch.private.compute`: Exclusive computing type.
         * * `opensearch.private.storage`: Exclusive storage type
         * 
         * @return builder
         * 
         */
        public Builder spec(String spec) {
            return spec(Output.of(spec));
        }

        public AppGroupQuotaArgs build() {
            if ($.computeResource == null) {
                throw new MissingRequiredPropertyException("AppGroupQuotaArgs", "computeResource");
            }
            if ($.docSize == null) {
                throw new MissingRequiredPropertyException("AppGroupQuotaArgs", "docSize");
            }
            if ($.spec == null) {
                throw new MissingRequiredPropertyException("AppGroupQuotaArgs", "spec");
            }
            return $;
        }
    }

}
