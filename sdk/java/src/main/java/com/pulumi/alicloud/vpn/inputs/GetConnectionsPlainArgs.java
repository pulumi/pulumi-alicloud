// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpn.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetConnectionsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConnectionsPlainArgs Empty = new GetConnectionsPlainArgs();

    /**
     * Use the VPN customer gateway ID as the search key.
     * 
     */
    @Import(name="customerGatewayId")
    private @Nullable String customerGatewayId;

    /**
     * @return Use the VPN customer gateway ID as the search key.
     * 
     */
    public Optional<String> customerGatewayId() {
        return Optional.ofNullable(this.customerGatewayId);
    }

    /**
     * IDs of the VPN connections.
     * 
     */
    @Import(name="ids")
    private @Nullable List<String> ids;

    /**
     * @return IDs of the VPN connections.
     * 
     */
    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * A regex string of VPN connection name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable String nameRegex;

    /**
     * @return A regex string of VPN connection name.
     * 
     */
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * Save the result to the file.
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return Save the result to the file.
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * Use the VPN gateway ID as the search key.
     * 
     */
    @Import(name="vpnGatewayId")
    private @Nullable String vpnGatewayId;

    /**
     * @return Use the VPN gateway ID as the search key.
     * 
     */
    public Optional<String> vpnGatewayId() {
        return Optional.ofNullable(this.vpnGatewayId);
    }

    private GetConnectionsPlainArgs() {}

    private GetConnectionsPlainArgs(GetConnectionsPlainArgs $) {
        this.customerGatewayId = $.customerGatewayId;
        this.ids = $.ids;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.vpnGatewayId = $.vpnGatewayId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConnectionsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConnectionsPlainArgs $;

        public Builder() {
            $ = new GetConnectionsPlainArgs();
        }

        public Builder(GetConnectionsPlainArgs defaults) {
            $ = new GetConnectionsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customerGatewayId Use the VPN customer gateway ID as the search key.
         * 
         * @return builder
         * 
         */
        public Builder customerGatewayId(@Nullable String customerGatewayId) {
            $.customerGatewayId = customerGatewayId;
            return this;
        }

        /**
         * @param ids IDs of the VPN connections.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids IDs of the VPN connections.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param nameRegex A regex string of VPN connection name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable String nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param outputFile Save the result to the file.
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param vpnGatewayId Use the VPN gateway ID as the search key.
         * 
         * @return builder
         * 
         */
        public Builder vpnGatewayId(@Nullable String vpnGatewayId) {
            $.vpnGatewayId = vpnGatewayId;
            return this;
        }

        public GetConnectionsPlainArgs build() {
            return $;
        }
    }

}
