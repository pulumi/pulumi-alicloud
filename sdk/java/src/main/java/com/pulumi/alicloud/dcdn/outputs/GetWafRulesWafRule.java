// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dcdn.outputs;

import com.pulumi.alicloud.dcdn.outputs.GetWafRulesWafRuleCondition;
import com.pulumi.alicloud.dcdn.outputs.GetWafRulesWafRuleRateLimit;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWafRulesWafRule {
    /**
     * @return Specifies the action of the rule.
     * 
     */
    private String action;
    /**
     * @return Whether to turn on Frequency Control, on/off
     * 
     */
    private String ccStatus;
    /**
     * @return The blocked regions in the Chinese mainland, separated by commas (,).
     * 
     */
    private String cnRegionList;
    /**
     * @return The trigger condition of the rule.
     * 
     */
    private List<GetWafRulesWafRuleCondition> conditions;
    /**
     * @return The type of protection policy. The following scenarios are supported:-waf_group:Web basic protection-custom_acl: Custom protection policy-whitelist: whitelist
     * 
     */
    private String defenseScene;
    /**
     * @return The effective range of the frequency control blacklist.
     * 
     */
    private String effect;
    /**
     * @return Revised the time. The date format is based on ISO8601 notation and uses UTC +0 time in the format of yyyy-MM-ddTHH:mm:ssZ.
     * 
     */
    private String gmtModified;
    /**
     * @return The ID of the Waf Rule.
     * 
     */
    private String id;
    /**
     * @return The effective range of the frequency control blacklist.
     * 
     */
    private String otherRegionList;
    /**
     * @return The protection policy ID.
     * 
     */
    private String policyId;
    /**
     * @return The rules of rate limiting.
     * 
     */
    private List<GetWafRulesWafRuleRateLimit> rateLimits;
    /**
     * @return The regular expression.
     * 
     */
    private List<String> regularRules;
    /**
     * @return The type of the regular expression. If the value of the tags field contains waf_group, you can specify this field.
     * 
     */
    private List<String> regularTypes;
    /**
     * @return Filter by IP address.
     * 
     */
    private List<String> remoteAddrs;
    /**
     * @return The name of the protection rule.
     * 
     */
    private String ruleName;
    /**
     * @return List of protection scenarios
     * 
     */
    private List<String> scenes;
    /**
     * @return The information about the HTTP status code.
     * 
     */
    private String status;
    /**
     * @return The id of the waf rule group.
     * 
     */
    private String wafGroupIds;
    /**
     * @return The first ID of the resource
     * 
     */
    private String wafRuleId;

    private GetWafRulesWafRule() {}
    /**
     * @return Specifies the action of the rule.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return Whether to turn on Frequency Control, on/off
     * 
     */
    public String ccStatus() {
        return this.ccStatus;
    }
    /**
     * @return The blocked regions in the Chinese mainland, separated by commas (,).
     * 
     */
    public String cnRegionList() {
        return this.cnRegionList;
    }
    /**
     * @return The trigger condition of the rule.
     * 
     */
    public List<GetWafRulesWafRuleCondition> conditions() {
        return this.conditions;
    }
    /**
     * @return The type of protection policy. The following scenarios are supported:-waf_group:Web basic protection-custom_acl: Custom protection policy-whitelist: whitelist
     * 
     */
    public String defenseScene() {
        return this.defenseScene;
    }
    /**
     * @return The effective range of the frequency control blacklist.
     * 
     */
    public String effect() {
        return this.effect;
    }
    /**
     * @return Revised the time. The date format is based on ISO8601 notation and uses UTC +0 time in the format of yyyy-MM-ddTHH:mm:ssZ.
     * 
     */
    public String gmtModified() {
        return this.gmtModified;
    }
    /**
     * @return The ID of the Waf Rule.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The effective range of the frequency control blacklist.
     * 
     */
    public String otherRegionList() {
        return this.otherRegionList;
    }
    /**
     * @return The protection policy ID.
     * 
     */
    public String policyId() {
        return this.policyId;
    }
    /**
     * @return The rules of rate limiting.
     * 
     */
    public List<GetWafRulesWafRuleRateLimit> rateLimits() {
        return this.rateLimits;
    }
    /**
     * @return The regular expression.
     * 
     */
    public List<String> regularRules() {
        return this.regularRules;
    }
    /**
     * @return The type of the regular expression. If the value of the tags field contains waf_group, you can specify this field.
     * 
     */
    public List<String> regularTypes() {
        return this.regularTypes;
    }
    /**
     * @return Filter by IP address.
     * 
     */
    public List<String> remoteAddrs() {
        return this.remoteAddrs;
    }
    /**
     * @return The name of the protection rule.
     * 
     */
    public String ruleName() {
        return this.ruleName;
    }
    /**
     * @return List of protection scenarios
     * 
     */
    public List<String> scenes() {
        return this.scenes;
    }
    /**
     * @return The information about the HTTP status code.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The id of the waf rule group.
     * 
     */
    public String wafGroupIds() {
        return this.wafGroupIds;
    }
    /**
     * @return The first ID of the resource
     * 
     */
    public String wafRuleId() {
        return this.wafRuleId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWafRulesWafRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private String ccStatus;
        private String cnRegionList;
        private List<GetWafRulesWafRuleCondition> conditions;
        private String defenseScene;
        private String effect;
        private String gmtModified;
        private String id;
        private String otherRegionList;
        private String policyId;
        private List<GetWafRulesWafRuleRateLimit> rateLimits;
        private List<String> regularRules;
        private List<String> regularTypes;
        private List<String> remoteAddrs;
        private String ruleName;
        private List<String> scenes;
        private String status;
        private String wafGroupIds;
        private String wafRuleId;
        public Builder() {}
        public Builder(GetWafRulesWafRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.ccStatus = defaults.ccStatus;
    	      this.cnRegionList = defaults.cnRegionList;
    	      this.conditions = defaults.conditions;
    	      this.defenseScene = defaults.defenseScene;
    	      this.effect = defaults.effect;
    	      this.gmtModified = defaults.gmtModified;
    	      this.id = defaults.id;
    	      this.otherRegionList = defaults.otherRegionList;
    	      this.policyId = defaults.policyId;
    	      this.rateLimits = defaults.rateLimits;
    	      this.regularRules = defaults.regularRules;
    	      this.regularTypes = defaults.regularTypes;
    	      this.remoteAddrs = defaults.remoteAddrs;
    	      this.ruleName = defaults.ruleName;
    	      this.scenes = defaults.scenes;
    	      this.status = defaults.status;
    	      this.wafGroupIds = defaults.wafGroupIds;
    	      this.wafRuleId = defaults.wafRuleId;
        }

        @CustomType.Setter
        public Builder action(String action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }
        @CustomType.Setter
        public Builder ccStatus(String ccStatus) {
            this.ccStatus = Objects.requireNonNull(ccStatus);
            return this;
        }
        @CustomType.Setter
        public Builder cnRegionList(String cnRegionList) {
            this.cnRegionList = Objects.requireNonNull(cnRegionList);
            return this;
        }
        @CustomType.Setter
        public Builder conditions(List<GetWafRulesWafRuleCondition> conditions) {
            this.conditions = Objects.requireNonNull(conditions);
            return this;
        }
        public Builder conditions(GetWafRulesWafRuleCondition... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder defenseScene(String defenseScene) {
            this.defenseScene = Objects.requireNonNull(defenseScene);
            return this;
        }
        @CustomType.Setter
        public Builder effect(String effect) {
            this.effect = Objects.requireNonNull(effect);
            return this;
        }
        @CustomType.Setter
        public Builder gmtModified(String gmtModified) {
            this.gmtModified = Objects.requireNonNull(gmtModified);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder otherRegionList(String otherRegionList) {
            this.otherRegionList = Objects.requireNonNull(otherRegionList);
            return this;
        }
        @CustomType.Setter
        public Builder policyId(String policyId) {
            this.policyId = Objects.requireNonNull(policyId);
            return this;
        }
        @CustomType.Setter
        public Builder rateLimits(List<GetWafRulesWafRuleRateLimit> rateLimits) {
            this.rateLimits = Objects.requireNonNull(rateLimits);
            return this;
        }
        public Builder rateLimits(GetWafRulesWafRuleRateLimit... rateLimits) {
            return rateLimits(List.of(rateLimits));
        }
        @CustomType.Setter
        public Builder regularRules(List<String> regularRules) {
            this.regularRules = Objects.requireNonNull(regularRules);
            return this;
        }
        public Builder regularRules(String... regularRules) {
            return regularRules(List.of(regularRules));
        }
        @CustomType.Setter
        public Builder regularTypes(List<String> regularTypes) {
            this.regularTypes = Objects.requireNonNull(regularTypes);
            return this;
        }
        public Builder regularTypes(String... regularTypes) {
            return regularTypes(List.of(regularTypes));
        }
        @CustomType.Setter
        public Builder remoteAddrs(List<String> remoteAddrs) {
            this.remoteAddrs = Objects.requireNonNull(remoteAddrs);
            return this;
        }
        public Builder remoteAddrs(String... remoteAddrs) {
            return remoteAddrs(List.of(remoteAddrs));
        }
        @CustomType.Setter
        public Builder ruleName(String ruleName) {
            this.ruleName = Objects.requireNonNull(ruleName);
            return this;
        }
        @CustomType.Setter
        public Builder scenes(List<String> scenes) {
            this.scenes = Objects.requireNonNull(scenes);
            return this;
        }
        public Builder scenes(String... scenes) {
            return scenes(List.of(scenes));
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder wafGroupIds(String wafGroupIds) {
            this.wafGroupIds = Objects.requireNonNull(wafGroupIds);
            return this;
        }
        @CustomType.Setter
        public Builder wafRuleId(String wafRuleId) {
            this.wafRuleId = Objects.requireNonNull(wafRuleId);
            return this;
        }
        public GetWafRulesWafRule build() {
            final var o = new GetWafRulesWafRule();
            o.action = action;
            o.ccStatus = ccStatus;
            o.cnRegionList = cnRegionList;
            o.conditions = conditions;
            o.defenseScene = defenseScene;
            o.effect = effect;
            o.gmtModified = gmtModified;
            o.id = id;
            o.otherRegionList = otherRegionList;
            o.policyId = policyId;
            o.rateLimits = rateLimits;
            o.regularRules = regularRules;
            o.regularTypes = regularTypes;
            o.remoteAddrs = remoteAddrs;
            o.ruleName = ruleName;
            o.scenes = scenes;
            o.status = status;
            o.wafGroupIds = wafGroupIds;
            o.wafRuleId = wafRuleId;
            return o;
        }
    }
}
