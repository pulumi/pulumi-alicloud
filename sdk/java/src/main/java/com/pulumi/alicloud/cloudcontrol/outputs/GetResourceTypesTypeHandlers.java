// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudcontrol.outputs;

import com.pulumi.alicloud.cloudcontrol.outputs.GetResourceTypesTypeHandlersCreate;
import com.pulumi.alicloud.cloudcontrol.outputs.GetResourceTypesTypeHandlersDelete;
import com.pulumi.alicloud.cloudcontrol.outputs.GetResourceTypesTypeHandlersGet;
import com.pulumi.alicloud.cloudcontrol.outputs.GetResourceTypesTypeHandlersList;
import com.pulumi.alicloud.cloudcontrol.outputs.GetResourceTypesTypeHandlersUpdate;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetResourceTypesTypeHandlers {
    /**
     * @return Create operation association information.
     * 
     */
    private List<GetResourceTypesTypeHandlersCreate> creates;
    /**
     * @return Delete operation association information.
     * 
     */
    private List<GetResourceTypesTypeHandlersDelete> deletes;
    /**
     * @return Query operation association information.
     * 
     */
    private List<GetResourceTypesTypeHandlersGet> gets;
    /**
     * @return List operation association information.
     * 
     */
    private List<GetResourceTypesTypeHandlersList> lists;
    /**
     * @return Update operation association information.
     * 
     */
    private List<GetResourceTypesTypeHandlersUpdate> updates;

    private GetResourceTypesTypeHandlers() {}
    /**
     * @return Create operation association information.
     * 
     */
    public List<GetResourceTypesTypeHandlersCreate> creates() {
        return this.creates;
    }
    /**
     * @return Delete operation association information.
     * 
     */
    public List<GetResourceTypesTypeHandlersDelete> deletes() {
        return this.deletes;
    }
    /**
     * @return Query operation association information.
     * 
     */
    public List<GetResourceTypesTypeHandlersGet> gets() {
        return this.gets;
    }
    /**
     * @return List operation association information.
     * 
     */
    public List<GetResourceTypesTypeHandlersList> lists() {
        return this.lists;
    }
    /**
     * @return Update operation association information.
     * 
     */
    public List<GetResourceTypesTypeHandlersUpdate> updates() {
        return this.updates;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourceTypesTypeHandlers defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetResourceTypesTypeHandlersCreate> creates;
        private List<GetResourceTypesTypeHandlersDelete> deletes;
        private List<GetResourceTypesTypeHandlersGet> gets;
        private List<GetResourceTypesTypeHandlersList> lists;
        private List<GetResourceTypesTypeHandlersUpdate> updates;
        public Builder() {}
        public Builder(GetResourceTypesTypeHandlers defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creates = defaults.creates;
    	      this.deletes = defaults.deletes;
    	      this.gets = defaults.gets;
    	      this.lists = defaults.lists;
    	      this.updates = defaults.updates;
        }

        @CustomType.Setter
        public Builder creates(List<GetResourceTypesTypeHandlersCreate> creates) {
            if (creates == null) {
              throw new MissingRequiredPropertyException("GetResourceTypesTypeHandlers", "creates");
            }
            this.creates = creates;
            return this;
        }
        public Builder creates(GetResourceTypesTypeHandlersCreate... creates) {
            return creates(List.of(creates));
        }
        @CustomType.Setter
        public Builder deletes(List<GetResourceTypesTypeHandlersDelete> deletes) {
            if (deletes == null) {
              throw new MissingRequiredPropertyException("GetResourceTypesTypeHandlers", "deletes");
            }
            this.deletes = deletes;
            return this;
        }
        public Builder deletes(GetResourceTypesTypeHandlersDelete... deletes) {
            return deletes(List.of(deletes));
        }
        @CustomType.Setter
        public Builder gets(List<GetResourceTypesTypeHandlersGet> gets) {
            if (gets == null) {
              throw new MissingRequiredPropertyException("GetResourceTypesTypeHandlers", "gets");
            }
            this.gets = gets;
            return this;
        }
        public Builder gets(GetResourceTypesTypeHandlersGet... gets) {
            return gets(List.of(gets));
        }
        @CustomType.Setter
        public Builder lists(List<GetResourceTypesTypeHandlersList> lists) {
            if (lists == null) {
              throw new MissingRequiredPropertyException("GetResourceTypesTypeHandlers", "lists");
            }
            this.lists = lists;
            return this;
        }
        public Builder lists(GetResourceTypesTypeHandlersList... lists) {
            return lists(List.of(lists));
        }
        @CustomType.Setter
        public Builder updates(List<GetResourceTypesTypeHandlersUpdate> updates) {
            if (updates == null) {
              throw new MissingRequiredPropertyException("GetResourceTypesTypeHandlers", "updates");
            }
            this.updates = updates;
            return this;
        }
        public Builder updates(GetResourceTypesTypeHandlersUpdate... updates) {
            return updates(List.of(updates));
        }
        public GetResourceTypesTypeHandlers build() {
            final var _resultValue = new GetResourceTypesTypeHandlers();
            _resultValue.creates = creates;
            _resultValue.deletes = deletes;
            _resultValue.gets = gets;
            _resultValue.lists = lists;
            _resultValue.updates = updates;
            return _resultValue;
        }
    }
}
