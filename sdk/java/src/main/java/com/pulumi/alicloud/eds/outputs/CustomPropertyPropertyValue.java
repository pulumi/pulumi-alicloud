// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eds.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CustomPropertyPropertyValue {
    /**
     * @return The value of an attribute.
     * 
     */
    private @Nullable String propertyValue;
    /**
     * @return The value of an attribute id.
     * 
     */
    private @Nullable String propertyValueId;

    private CustomPropertyPropertyValue() {}
    /**
     * @return The value of an attribute.
     * 
     */
    public Optional<String> propertyValue() {
        return Optional.ofNullable(this.propertyValue);
    }
    /**
     * @return The value of an attribute id.
     * 
     */
    public Optional<String> propertyValueId() {
        return Optional.ofNullable(this.propertyValueId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomPropertyPropertyValue defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String propertyValue;
        private @Nullable String propertyValueId;
        public Builder() {}
        public Builder(CustomPropertyPropertyValue defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.propertyValue = defaults.propertyValue;
    	      this.propertyValueId = defaults.propertyValueId;
        }

        @CustomType.Setter
        public Builder propertyValue(@Nullable String propertyValue) {
            this.propertyValue = propertyValue;
            return this;
        }
        @CustomType.Setter
        public Builder propertyValueId(@Nullable String propertyValueId) {
            this.propertyValueId = propertyValueId;
            return this;
        }
        public CustomPropertyPropertyValue build() {
            final var o = new CustomPropertyPropertyValue();
            o.propertyValue = propertyValue;
            o.propertyValueId = propertyValueId;
            return o;
        }
    }
}
