// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NodePoolManagementAutoVulFixPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final NodePoolManagementAutoVulFixPolicyArgs Empty = new NodePoolManagementAutoVulFixPolicyArgs();

    /**
     * Specifies whether to automatically restart nodes after patching CVE vulnerabilities. Valid values: `true`, `false`.
     * 
     */
    @Import(name="restartNode")
    private @Nullable Output<Boolean> restartNode;

    /**
     * @return Specifies whether to automatically restart nodes after patching CVE vulnerabilities. Valid values: `true`, `false`.
     * 
     */
    public Optional<Output<Boolean>> restartNode() {
        return Optional.ofNullable(this.restartNode);
    }

    /**
     * The severity levels of vulnerabilities that is allowed to automatically patch. Multiple severity levels are separated by commas (,).
     * 
     */
    @Import(name="vulLevel")
    private @Nullable Output<String> vulLevel;

    /**
     * @return The severity levels of vulnerabilities that is allowed to automatically patch. Multiple severity levels are separated by commas (,).
     * 
     */
    public Optional<Output<String>> vulLevel() {
        return Optional.ofNullable(this.vulLevel);
    }

    private NodePoolManagementAutoVulFixPolicyArgs() {}

    private NodePoolManagementAutoVulFixPolicyArgs(NodePoolManagementAutoVulFixPolicyArgs $) {
        this.restartNode = $.restartNode;
        this.vulLevel = $.vulLevel;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NodePoolManagementAutoVulFixPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NodePoolManagementAutoVulFixPolicyArgs $;

        public Builder() {
            $ = new NodePoolManagementAutoVulFixPolicyArgs();
        }

        public Builder(NodePoolManagementAutoVulFixPolicyArgs defaults) {
            $ = new NodePoolManagementAutoVulFixPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param restartNode Specifies whether to automatically restart nodes after patching CVE vulnerabilities. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder restartNode(@Nullable Output<Boolean> restartNode) {
            $.restartNode = restartNode;
            return this;
        }

        /**
         * @param restartNode Specifies whether to automatically restart nodes after patching CVE vulnerabilities. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder restartNode(Boolean restartNode) {
            return restartNode(Output.of(restartNode));
        }

        /**
         * @param vulLevel The severity levels of vulnerabilities that is allowed to automatically patch. Multiple severity levels are separated by commas (,).
         * 
         * @return builder
         * 
         */
        public Builder vulLevel(@Nullable Output<String> vulLevel) {
            $.vulLevel = vulLevel;
            return this;
        }

        /**
         * @param vulLevel The severity levels of vulnerabilities that is allowed to automatically patch. Multiple severity levels are separated by commas (,).
         * 
         * @return builder
         * 
         */
        public Builder vulLevel(String vulLevel) {
            return vulLevel(Output.of(vulLevel));
        }

        public NodePoolManagementAutoVulFixPolicyArgs build() {
            return $;
        }
    }

}
