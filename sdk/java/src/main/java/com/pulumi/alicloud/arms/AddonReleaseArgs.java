// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.arms;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AddonReleaseArgs extends com.pulumi.resources.ResourceArgs {

    public static final AddonReleaseArgs Empty = new AddonReleaseArgs();

    /**
     * Addon Name.
     * 
     */
    @Import(name="addonName", required=true)
    private Output<String> addonName;

    /**
     * @return Addon Name.
     * 
     */
    public Output<String> addonName() {
        return this.addonName;
    }

    /**
     * The name of the resource.
     * 
     */
    @Import(name="addonReleaseName")
    private @Nullable Output<String> addonReleaseName;

    /**
     * @return The name of the resource.
     * 
     */
    public Optional<Output<String>> addonReleaseName() {
        return Optional.ofNullable(this.addonReleaseName);
    }

    /**
     * Version number of Addon. Addon information can be obtained through ListAddons.
     * 
     */
    @Import(name="addonVersion", required=true)
    private Output<String> addonVersion;

    /**
     * @return Version number of Addon. Addon information can be obtained through ListAddons.
     * 
     */
    public Output<String> addonVersion() {
        return this.addonVersion;
    }

    /**
     * The installed locale.
     * 
     */
    @Import(name="aliyunLang")
    private @Nullable Output<String> aliyunLang;

    /**
     * @return The installed locale.
     * 
     */
    public Optional<Output<String>> aliyunLang() {
        return Optional.ofNullable(this.aliyunLang);
    }

    /**
     * Environment id.
     * 
     */
    @Import(name="environmentId", required=true)
    private Output<String> environmentId;

    /**
     * @return Environment id.
     * 
     */
    public Output<String> environmentId() {
        return this.environmentId;
    }

    /**
     * Configuration information for installing Addon. Obtain the configuration template from ListAddonSchema, for example, {&#34;host&#34;:&#34;mysql-service.default&#34;,&#34;port&#34;:3306,&#34;username&#34;:&#34;root&#34;,&#34;password&#34;:&#34;roots&#34;}.
     * 
     */
    @Import(name="values")
    private @Nullable Output<String> values;

    /**
     * @return Configuration information for installing Addon. Obtain the configuration template from ListAddonSchema, for example, {&#34;host&#34;:&#34;mysql-service.default&#34;,&#34;port&#34;:3306,&#34;username&#34;:&#34;root&#34;,&#34;password&#34;:&#34;roots&#34;}.
     * 
     */
    public Optional<Output<String>> values() {
        return Optional.ofNullable(this.values);
    }

    private AddonReleaseArgs() {}

    private AddonReleaseArgs(AddonReleaseArgs $) {
        this.addonName = $.addonName;
        this.addonReleaseName = $.addonReleaseName;
        this.addonVersion = $.addonVersion;
        this.aliyunLang = $.aliyunLang;
        this.environmentId = $.environmentId;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AddonReleaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AddonReleaseArgs $;

        public Builder() {
            $ = new AddonReleaseArgs();
        }

        public Builder(AddonReleaseArgs defaults) {
            $ = new AddonReleaseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addonName Addon Name.
         * 
         * @return builder
         * 
         */
        public Builder addonName(Output<String> addonName) {
            $.addonName = addonName;
            return this;
        }

        /**
         * @param addonName Addon Name.
         * 
         * @return builder
         * 
         */
        public Builder addonName(String addonName) {
            return addonName(Output.of(addonName));
        }

        /**
         * @param addonReleaseName The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder addonReleaseName(@Nullable Output<String> addonReleaseName) {
            $.addonReleaseName = addonReleaseName;
            return this;
        }

        /**
         * @param addonReleaseName The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder addonReleaseName(String addonReleaseName) {
            return addonReleaseName(Output.of(addonReleaseName));
        }

        /**
         * @param addonVersion Version number of Addon. Addon information can be obtained through ListAddons.
         * 
         * @return builder
         * 
         */
        public Builder addonVersion(Output<String> addonVersion) {
            $.addonVersion = addonVersion;
            return this;
        }

        /**
         * @param addonVersion Version number of Addon. Addon information can be obtained through ListAddons.
         * 
         * @return builder
         * 
         */
        public Builder addonVersion(String addonVersion) {
            return addonVersion(Output.of(addonVersion));
        }

        /**
         * @param aliyunLang The installed locale.
         * 
         * @return builder
         * 
         */
        public Builder aliyunLang(@Nullable Output<String> aliyunLang) {
            $.aliyunLang = aliyunLang;
            return this;
        }

        /**
         * @param aliyunLang The installed locale.
         * 
         * @return builder
         * 
         */
        public Builder aliyunLang(String aliyunLang) {
            return aliyunLang(Output.of(aliyunLang));
        }

        /**
         * @param environmentId Environment id.
         * 
         * @return builder
         * 
         */
        public Builder environmentId(Output<String> environmentId) {
            $.environmentId = environmentId;
            return this;
        }

        /**
         * @param environmentId Environment id.
         * 
         * @return builder
         * 
         */
        public Builder environmentId(String environmentId) {
            return environmentId(Output.of(environmentId));
        }

        /**
         * @param values Configuration information for installing Addon. Obtain the configuration template from ListAddonSchema, for example, {&#34;host&#34;:&#34;mysql-service.default&#34;,&#34;port&#34;:3306,&#34;username&#34;:&#34;root&#34;,&#34;password&#34;:&#34;roots&#34;}.
         * 
         * @return builder
         * 
         */
        public Builder values(@Nullable Output<String> values) {
            $.values = values;
            return this;
        }

        /**
         * @param values Configuration information for installing Addon. Obtain the configuration template from ListAddonSchema, for example, {&#34;host&#34;:&#34;mysql-service.default&#34;,&#34;port&#34;:3306,&#34;username&#34;:&#34;root&#34;,&#34;password&#34;:&#34;roots&#34;}.
         * 
         * @return builder
         * 
         */
        public Builder values(String values) {
            return values(Output.of(values));
        }

        public AddonReleaseArgs build() {
            $.addonName = Objects.requireNonNull($.addonName, "expected parameter 'addonName' to be non-null");
            $.addonVersion = Objects.requireNonNull($.addonVersion, "expected parameter 'addonVersion' to be non-null");
            $.environmentId = Objects.requireNonNull($.environmentId, "expected parameter 'environmentId' to be non-null");
            return $;
        }
    }

}
