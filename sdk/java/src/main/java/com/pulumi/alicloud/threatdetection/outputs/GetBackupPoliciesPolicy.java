// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBackupPoliciesPolicy {
    /**
     * @return The ID of the anti-ransomware policy.
     * 
     */
    private Integer backupPolicyId;
    /**
     * @return The name of the anti-ransomware policy.
     * 
     */
    private String backupPolicyName;
    /**
     * @return The ID of the anti-ransomware policy.
     * 
     */
    private Integer id;
    /**
     * @return The configurations of the anti-ransomware policy.
     * 
     */
    private String policy;
    /**
     * @return The ID of the region that you specified for data backup when you installed the anti-ransomware agent for the server not deployed on Alibaba Cloud.
     * 
     */
    private String policyRegionId;
    /**
     * @return The version of the anti-ransomware policy.
     * 
     */
    private String policyVersion;
    /**
     * @return The status of the anti-ransomware policy. Valid Value: `enabled`, `disabled`, `closed`.
     * 
     */
    private String status;
    /**
     * @return The UUIDs of the servers to which the anti-ransomware policy is applied.
     * 
     */
    private List<String> uuidLists;

    private GetBackupPoliciesPolicy() {}
    /**
     * @return The ID of the anti-ransomware policy.
     * 
     */
    public Integer backupPolicyId() {
        return this.backupPolicyId;
    }
    /**
     * @return The name of the anti-ransomware policy.
     * 
     */
    public String backupPolicyName() {
        return this.backupPolicyName;
    }
    /**
     * @return The ID of the anti-ransomware policy.
     * 
     */
    public Integer id() {
        return this.id;
    }
    /**
     * @return The configurations of the anti-ransomware policy.
     * 
     */
    public String policy() {
        return this.policy;
    }
    /**
     * @return The ID of the region that you specified for data backup when you installed the anti-ransomware agent for the server not deployed on Alibaba Cloud.
     * 
     */
    public String policyRegionId() {
        return this.policyRegionId;
    }
    /**
     * @return The version of the anti-ransomware policy.
     * 
     */
    public String policyVersion() {
        return this.policyVersion;
    }
    /**
     * @return The status of the anti-ransomware policy. Valid Value: `enabled`, `disabled`, `closed`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The UUIDs of the servers to which the anti-ransomware policy is applied.
     * 
     */
    public List<String> uuidLists() {
        return this.uuidLists;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackupPoliciesPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer backupPolicyId;
        private String backupPolicyName;
        private Integer id;
        private String policy;
        private String policyRegionId;
        private String policyVersion;
        private String status;
        private List<String> uuidLists;
        public Builder() {}
        public Builder(GetBackupPoliciesPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupPolicyId = defaults.backupPolicyId;
    	      this.backupPolicyName = defaults.backupPolicyName;
    	      this.id = defaults.id;
    	      this.policy = defaults.policy;
    	      this.policyRegionId = defaults.policyRegionId;
    	      this.policyVersion = defaults.policyVersion;
    	      this.status = defaults.status;
    	      this.uuidLists = defaults.uuidLists;
        }

        @CustomType.Setter
        public Builder backupPolicyId(Integer backupPolicyId) {
            if (backupPolicyId == null) {
              throw new MissingRequiredPropertyException("GetBackupPoliciesPolicy", "backupPolicyId");
            }
            this.backupPolicyId = backupPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder backupPolicyName(String backupPolicyName) {
            if (backupPolicyName == null) {
              throw new MissingRequiredPropertyException("GetBackupPoliciesPolicy", "backupPolicyName");
            }
            this.backupPolicyName = backupPolicyName;
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetBackupPoliciesPolicy", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder policy(String policy) {
            if (policy == null) {
              throw new MissingRequiredPropertyException("GetBackupPoliciesPolicy", "policy");
            }
            this.policy = policy;
            return this;
        }
        @CustomType.Setter
        public Builder policyRegionId(String policyRegionId) {
            if (policyRegionId == null) {
              throw new MissingRequiredPropertyException("GetBackupPoliciesPolicy", "policyRegionId");
            }
            this.policyRegionId = policyRegionId;
            return this;
        }
        @CustomType.Setter
        public Builder policyVersion(String policyVersion) {
            if (policyVersion == null) {
              throw new MissingRequiredPropertyException("GetBackupPoliciesPolicy", "policyVersion");
            }
            this.policyVersion = policyVersion;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetBackupPoliciesPolicy", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder uuidLists(List<String> uuidLists) {
            if (uuidLists == null) {
              throw new MissingRequiredPropertyException("GetBackupPoliciesPolicy", "uuidLists");
            }
            this.uuidLists = uuidLists;
            return this;
        }
        public Builder uuidLists(String... uuidLists) {
            return uuidLists(List.of(uuidLists));
        }
        public GetBackupPoliciesPolicy build() {
            final var _resultValue = new GetBackupPoliciesPolicy();
            _resultValue.backupPolicyId = backupPolicyId;
            _resultValue.backupPolicyName = backupPolicyName;
            _resultValue.id = id;
            _resultValue.policy = policy;
            _resultValue.policyRegionId = policyRegionId;
            _resultValue.policyVersion = policyVersion;
            _resultValue.status = status;
            _resultValue.uuidLists = uuidLists;
            return _resultValue;
        }
    }
}
