// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sae.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationScalingRuleScalingRuleMetricMetricArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationScalingRuleScalingRuleMetricMetricArgs Empty = new ApplicationScalingRuleScalingRuleMetricMetricArgs();

    @Import(name="metricTargetAverageUtilization")
    private @Nullable Output<Integer> metricTargetAverageUtilization;

    public Optional<Output<Integer>> metricTargetAverageUtilization() {
        return Optional.ofNullable(this.metricTargetAverageUtilization);
    }

    @Import(name="metricType")
    private @Nullable Output<String> metricType;

    public Optional<Output<String>> metricType() {
        return Optional.ofNullable(this.metricType);
    }

    @Import(name="slbId")
    private @Nullable Output<String> slbId;

    public Optional<Output<String>> slbId() {
        return Optional.ofNullable(this.slbId);
    }

    @Import(name="slbLogStore")
    private @Nullable Output<String> slbLogStore;

    public Optional<Output<String>> slbLogStore() {
        return Optional.ofNullable(this.slbLogStore);
    }

    @Import(name="slbProject")
    private @Nullable Output<String> slbProject;

    public Optional<Output<String>> slbProject() {
        return Optional.ofNullable(this.slbProject);
    }

    @Import(name="vport")
    private @Nullable Output<String> vport;

    public Optional<Output<String>> vport() {
        return Optional.ofNullable(this.vport);
    }

    private ApplicationScalingRuleScalingRuleMetricMetricArgs() {}

    private ApplicationScalingRuleScalingRuleMetricMetricArgs(ApplicationScalingRuleScalingRuleMetricMetricArgs $) {
        this.metricTargetAverageUtilization = $.metricTargetAverageUtilization;
        this.metricType = $.metricType;
        this.slbId = $.slbId;
        this.slbLogStore = $.slbLogStore;
        this.slbProject = $.slbProject;
        this.vport = $.vport;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationScalingRuleScalingRuleMetricMetricArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationScalingRuleScalingRuleMetricMetricArgs $;

        public Builder() {
            $ = new ApplicationScalingRuleScalingRuleMetricMetricArgs();
        }

        public Builder(ApplicationScalingRuleScalingRuleMetricMetricArgs defaults) {
            $ = new ApplicationScalingRuleScalingRuleMetricMetricArgs(Objects.requireNonNull(defaults));
        }

        public Builder metricTargetAverageUtilization(@Nullable Output<Integer> metricTargetAverageUtilization) {
            $.metricTargetAverageUtilization = metricTargetAverageUtilization;
            return this;
        }

        public Builder metricTargetAverageUtilization(Integer metricTargetAverageUtilization) {
            return metricTargetAverageUtilization(Output.of(metricTargetAverageUtilization));
        }

        public Builder metricType(@Nullable Output<String> metricType) {
            $.metricType = metricType;
            return this;
        }

        public Builder metricType(String metricType) {
            return metricType(Output.of(metricType));
        }

        public Builder slbId(@Nullable Output<String> slbId) {
            $.slbId = slbId;
            return this;
        }

        public Builder slbId(String slbId) {
            return slbId(Output.of(slbId));
        }

        public Builder slbLogStore(@Nullable Output<String> slbLogStore) {
            $.slbLogStore = slbLogStore;
            return this;
        }

        public Builder slbLogStore(String slbLogStore) {
            return slbLogStore(Output.of(slbLogStore));
        }

        public Builder slbProject(@Nullable Output<String> slbProject) {
            $.slbProject = slbProject;
            return this;
        }

        public Builder slbProject(String slbProject) {
            return slbProject(Output.of(slbProject));
        }

        public Builder vport(@Nullable Output<String> vport) {
            $.vport = vport;
            return this;
        }

        public Builder vport(String vport) {
            return vport(Output.of(vport));
        }

        public ApplicationScalingRuleScalingRuleMetricMetricArgs build() {
            return $;
        }
    }

}
