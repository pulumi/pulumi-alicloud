// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.waf.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstancesInstance {
    /**
     * @return The timestamp (in seconds) indicating when the WAF instance expires.
     * 
     */
    private Integer endDate;
    /**
     * @return The ID of the WAF instance.
     * 
     */
    private String id;
    /**
     * @return Indicates whether the WAF instance has overdue payments.
     * 
     */
    private Integer inDebt;
    /**
     * @return The ID of WAF the instance.
     * 
     */
    private String instanceId;
    /**
     * @return The number of days before the trial period of the WAF instance expires.
     * 
     */
    private Integer remainDay;
    /**
     * @return The status of WAF instance to filter results. Optional value: `0`: The instance has expired, `1` : The instance has not expired and is working properly.
     * 
     */
    private Integer status;
    private String subscriptionType;
    /**
     * @return Indicates whether this is a trial instance.
     * 
     */
    private Integer trial;

    private GetInstancesInstance() {}
    /**
     * @return The timestamp (in seconds) indicating when the WAF instance expires.
     * 
     */
    public Integer endDate() {
        return this.endDate;
    }
    /**
     * @return The ID of the WAF instance.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates whether the WAF instance has overdue payments.
     * 
     */
    public Integer inDebt() {
        return this.inDebt;
    }
    /**
     * @return The ID of WAF the instance.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return The number of days before the trial period of the WAF instance expires.
     * 
     */
    public Integer remainDay() {
        return this.remainDay;
    }
    /**
     * @return The status of WAF instance to filter results. Optional value: `0`: The instance has expired, `1` : The instance has not expired and is working properly.
     * 
     */
    public Integer status() {
        return this.status;
    }
    public String subscriptionType() {
        return this.subscriptionType;
    }
    /**
     * @return Indicates whether this is a trial instance.
     * 
     */
    public Integer trial() {
        return this.trial;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesInstance defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer endDate;
        private String id;
        private Integer inDebt;
        private String instanceId;
        private Integer remainDay;
        private Integer status;
        private String subscriptionType;
        private Integer trial;
        public Builder() {}
        public Builder(GetInstancesInstance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endDate = defaults.endDate;
    	      this.id = defaults.id;
    	      this.inDebt = defaults.inDebt;
    	      this.instanceId = defaults.instanceId;
    	      this.remainDay = defaults.remainDay;
    	      this.status = defaults.status;
    	      this.subscriptionType = defaults.subscriptionType;
    	      this.trial = defaults.trial;
        }

        @CustomType.Setter
        public Builder endDate(Integer endDate) {
            this.endDate = Objects.requireNonNull(endDate);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder inDebt(Integer inDebt) {
            this.inDebt = Objects.requireNonNull(inDebt);
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        @CustomType.Setter
        public Builder remainDay(Integer remainDay) {
            this.remainDay = Objects.requireNonNull(remainDay);
            return this;
        }
        @CustomType.Setter
        public Builder status(Integer status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionType(String subscriptionType) {
            this.subscriptionType = Objects.requireNonNull(subscriptionType);
            return this;
        }
        @CustomType.Setter
        public Builder trial(Integer trial) {
            this.trial = Objects.requireNonNull(trial);
            return this;
        }
        public GetInstancesInstance build() {
            final var o = new GetInstancesInstance();
            o.endDate = endDate;
            o.id = id;
            o.inDebt = inDebt;
            o.instanceId = instanceId;
            o.remainDay = remainDay;
            o.status = status;
            o.subscriptionType = subscriptionType;
            o.trial = trial;
            return o;
        }
    }
}
