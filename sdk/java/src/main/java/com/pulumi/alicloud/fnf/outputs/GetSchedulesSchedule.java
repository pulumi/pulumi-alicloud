// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fnf.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSchedulesSchedule {
    /**
     * @return The CRON expression of the time-based schedule to be created.
     * 
     */
    private String cronExpression;
    /**
     * @return The description of the time-based schedule to be created.
     * 
     */
    private String description;
    /**
     * @return Specifies whether to enable the time-based schedule you want to create.
     * 
     */
    private Boolean enable;
    /**
     * @return The ID of the Schedule.
     * 
     */
    private String id;
    /**
     * @return The time when the time-based schedule was last updated.
     * 
     */
    private String lastModifiedTime;
    /**
     * @return The trigger message of the time-based schedule to be created. It must be in JSON object format.
     * 
     */
    private String payload;
    /**
     * @return The ID of the time-based schedule.
     * 
     */
    private String scheduleId;
    /**
     * @return The name of the time-based schedule to be created.
     * 
     */
    private String scheduleName;

    private GetSchedulesSchedule() {}
    /**
     * @return The CRON expression of the time-based schedule to be created.
     * 
     */
    public String cronExpression() {
        return this.cronExpression;
    }
    /**
     * @return The description of the time-based schedule to be created.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Specifies whether to enable the time-based schedule you want to create.
     * 
     */
    public Boolean enable() {
        return this.enable;
    }
    /**
     * @return The ID of the Schedule.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The time when the time-based schedule was last updated.
     * 
     */
    public String lastModifiedTime() {
        return this.lastModifiedTime;
    }
    /**
     * @return The trigger message of the time-based schedule to be created. It must be in JSON object format.
     * 
     */
    public String payload() {
        return this.payload;
    }
    /**
     * @return The ID of the time-based schedule.
     * 
     */
    public String scheduleId() {
        return this.scheduleId;
    }
    /**
     * @return The name of the time-based schedule to be created.
     * 
     */
    public String scheduleName() {
        return this.scheduleName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSchedulesSchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cronExpression;
        private String description;
        private Boolean enable;
        private String id;
        private String lastModifiedTime;
        private String payload;
        private String scheduleId;
        private String scheduleName;
        public Builder() {}
        public Builder(GetSchedulesSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cronExpression = defaults.cronExpression;
    	      this.description = defaults.description;
    	      this.enable = defaults.enable;
    	      this.id = defaults.id;
    	      this.lastModifiedTime = defaults.lastModifiedTime;
    	      this.payload = defaults.payload;
    	      this.scheduleId = defaults.scheduleId;
    	      this.scheduleName = defaults.scheduleName;
        }

        @CustomType.Setter
        public Builder cronExpression(String cronExpression) {
            this.cronExpression = Objects.requireNonNull(cronExpression);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder enable(Boolean enable) {
            this.enable = Objects.requireNonNull(enable);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lastModifiedTime(String lastModifiedTime) {
            this.lastModifiedTime = Objects.requireNonNull(lastModifiedTime);
            return this;
        }
        @CustomType.Setter
        public Builder payload(String payload) {
            this.payload = Objects.requireNonNull(payload);
            return this;
        }
        @CustomType.Setter
        public Builder scheduleId(String scheduleId) {
            this.scheduleId = Objects.requireNonNull(scheduleId);
            return this;
        }
        @CustomType.Setter
        public Builder scheduleName(String scheduleName) {
            this.scheduleName = Objects.requireNonNull(scheduleName);
            return this;
        }
        public GetSchedulesSchedule build() {
            final var o = new GetSchedulesSchedule();
            o.cronExpression = cronExpression;
            o.description = description;
            o.enable = enable;
            o.id = id;
            o.lastModifiedTime = lastModifiedTime;
            o.payload = payload;
            o.scheduleId = scheduleId;
            o.scheduleName = scheduleName;
            return o;
        }
    }
}
