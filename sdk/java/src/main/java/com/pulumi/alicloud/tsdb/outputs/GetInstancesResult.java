// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.tsdb.outputs;

import com.pulumi.alicloud.tsdb.outputs.GetInstancesInstance;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInstancesResult {
    private @Nullable String appKey;
    private @Nullable Boolean enableDetails;
    private @Nullable String engineType;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<String> ids;
    private List<GetInstancesInstance> instances;
    private @Nullable String outputFile;
    private @Nullable String queryStr;
    private @Nullable String status;
    private @Nullable String statusList;

    private GetInstancesResult() {}
    public Optional<String> appKey() {
        return Optional.ofNullable(this.appKey);
    }
    public Optional<Boolean> enableDetails() {
        return Optional.ofNullable(this.enableDetails);
    }
    public Optional<String> engineType() {
        return Optional.ofNullable(this.engineType);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    public List<GetInstancesInstance> instances() {
        return this.instances;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public Optional<String> queryStr() {
        return Optional.ofNullable(this.queryStr);
    }
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    public Optional<String> statusList() {
        return Optional.ofNullable(this.statusList);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String appKey;
        private @Nullable Boolean enableDetails;
        private @Nullable String engineType;
        private String id;
        private List<String> ids;
        private List<GetInstancesInstance> instances;
        private @Nullable String outputFile;
        private @Nullable String queryStr;
        private @Nullable String status;
        private @Nullable String statusList;
        public Builder() {}
        public Builder(GetInstancesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appKey = defaults.appKey;
    	      this.enableDetails = defaults.enableDetails;
    	      this.engineType = defaults.engineType;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.instances = defaults.instances;
    	      this.outputFile = defaults.outputFile;
    	      this.queryStr = defaults.queryStr;
    	      this.status = defaults.status;
    	      this.statusList = defaults.statusList;
        }

        @CustomType.Setter
        public Builder appKey(@Nullable String appKey) {

            this.appKey = appKey;
            return this;
        }
        @CustomType.Setter
        public Builder enableDetails(@Nullable Boolean enableDetails) {

            this.enableDetails = enableDetails;
            return this;
        }
        @CustomType.Setter
        public Builder engineType(@Nullable String engineType) {

            this.engineType = engineType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetInstancesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            if (ids == null) {
              throw new MissingRequiredPropertyException("GetInstancesResult", "ids");
            }
            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder instances(List<GetInstancesInstance> instances) {
            if (instances == null) {
              throw new MissingRequiredPropertyException("GetInstancesResult", "instances");
            }
            this.instances = instances;
            return this;
        }
        public Builder instances(GetInstancesInstance... instances) {
            return instances(List.of(instances));
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder queryStr(@Nullable String queryStr) {

            this.queryStr = queryStr;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder statusList(@Nullable String statusList) {

            this.statusList = statusList;
            return this;
        }
        public GetInstancesResult build() {
            final var _resultValue = new GetInstancesResult();
            _resultValue.appKey = appKey;
            _resultValue.enableDetails = enableDetails;
            _resultValue.engineType = engineType;
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.instances = instances;
            _resultValue.outputFile = outputFile;
            _resultValue.queryStr = queryStr;
            _resultValue.status = status;
            _resultValue.statusList = statusList;
            return _resultValue;
        }
    }
}
