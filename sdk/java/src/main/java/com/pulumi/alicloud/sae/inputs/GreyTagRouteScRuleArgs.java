// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sae.inputs;

import com.pulumi.alicloud.sae.inputs.GreyTagRouteScRuleItemArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GreyTagRouteScRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final GreyTagRouteScRuleArgs Empty = new GreyTagRouteScRuleArgs();

    /**
     * The conditional Patterns for Grayscale Rules. Valid values: `AND`, `OR`.
     * 
     */
    @Import(name="condition")
    private @Nullable Output<String> condition;

    /**
     * @return The conditional Patterns for Grayscale Rules. Valid values: `AND`, `OR`.
     * 
     */
    public Optional<Output<String>> condition() {
        return Optional.ofNullable(this.condition);
    }

    /**
     * A list of conditions items. See `items` below.
     * 
     */
    @Import(name="items")
    private @Nullable Output<List<GreyTagRouteScRuleItemArgs>> items;

    /**
     * @return A list of conditions items. See `items` below.
     * 
     */
    public Optional<Output<List<GreyTagRouteScRuleItemArgs>>> items() {
        return Optional.ofNullable(this.items);
    }

    /**
     * The path corresponding to the grayscale rule.
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return The path corresponding to the grayscale rule.
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    private GreyTagRouteScRuleArgs() {}

    private GreyTagRouteScRuleArgs(GreyTagRouteScRuleArgs $) {
        this.condition = $.condition;
        this.items = $.items;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GreyTagRouteScRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GreyTagRouteScRuleArgs $;

        public Builder() {
            $ = new GreyTagRouteScRuleArgs();
        }

        public Builder(GreyTagRouteScRuleArgs defaults) {
            $ = new GreyTagRouteScRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param condition The conditional Patterns for Grayscale Rules. Valid values: `AND`, `OR`.
         * 
         * @return builder
         * 
         */
        public Builder condition(@Nullable Output<String> condition) {
            $.condition = condition;
            return this;
        }

        /**
         * @param condition The conditional Patterns for Grayscale Rules. Valid values: `AND`, `OR`.
         * 
         * @return builder
         * 
         */
        public Builder condition(String condition) {
            return condition(Output.of(condition));
        }

        /**
         * @param items A list of conditions items. See `items` below.
         * 
         * @return builder
         * 
         */
        public Builder items(@Nullable Output<List<GreyTagRouteScRuleItemArgs>> items) {
            $.items = items;
            return this;
        }

        /**
         * @param items A list of conditions items. See `items` below.
         * 
         * @return builder
         * 
         */
        public Builder items(List<GreyTagRouteScRuleItemArgs> items) {
            return items(Output.of(items));
        }

        /**
         * @param items A list of conditions items. See `items` below.
         * 
         * @return builder
         * 
         */
        public Builder items(GreyTagRouteScRuleItemArgs... items) {
            return items(List.of(items));
        }

        /**
         * @param path The path corresponding to the grayscale rule.
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path The path corresponding to the grayscale rule.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        public GreyTagRouteScRuleArgs build() {
            return $;
        }
    }

}
