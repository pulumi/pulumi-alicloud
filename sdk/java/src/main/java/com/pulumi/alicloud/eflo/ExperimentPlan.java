// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eflo;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.eflo.ExperimentPlanArgs;
import com.pulumi.alicloud.eflo.inputs.ExperimentPlanState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Eflo Experiment Plan resource.
 * 
 * For information about Eflo Experiment Plan and how to use it, see [What is Experiment Plan](https://www.alibabacloud.com/help/en/pai/developer-reference/api-eflo-cnp-2023-08-28-createexperimentplan).
 * 
 * &gt; **NOTE:** Available since v1.248.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.eflo.ExperimentPlanTemplate;
 * import com.pulumi.alicloud.eflo.ExperimentPlanTemplateArgs;
 * import com.pulumi.alicloud.eflo.inputs.ExperimentPlanTemplateTemplatePipelineArgs;
 * import com.pulumi.alicloud.eflo.inputs.ExperimentPlanTemplateTemplatePipelineEnvParamsArgs;
 * import com.pulumi.alicloud.eflo.Resource;
 * import com.pulumi.alicloud.eflo.ResourceArgs;
 * import com.pulumi.alicloud.eflo.inputs.ResourceUserAccessParamArgs;
 * import com.pulumi.alicloud.eflo.inputs.ResourceMachineTypesArgs;
 * import com.pulumi.alicloud.eflo.ExperimentPlan;
 * import com.pulumi.alicloud.eflo.ExperimentPlanArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         var default_ = new Integer("default", IntegerArgs.builder()
 *             .min(10000)
 *             .max(99999)
 *             .build());
 * 
 *         var defaultpSZN7t = new ExperimentPlanTemplate("defaultpSZN7t", ExperimentPlanTemplateArgs.builder()
 *             .templatePipelines(ExperimentPlanTemplateTemplatePipelineArgs.builder()
 *                 .workloadId(2)
 *                 .workloadName("MatMul")
 *                 .envParams(ExperimentPlanTemplateTemplatePipelineEnvParamsArgs.builder()
 *                     .cpuPerWorker(90)
 *                     .gpuPerWorker(8)
 *                     .memoryPerWorker(500)
 *                     .shareMemory(500)
 *                     .workerNum(1)
 *                     .pyTorchVersion("1")
 *                     .gpuDriverVersion("1")
 *                     .cudaVersion("1")
 *                     .ncclVersion("1")
 *                     .build())
 *                 .pipelineOrder(1)
 *                 .scene("baseline")
 *                 .build())
 *             .privacyLevel("private")
 *             .templateName(name)
 *             .templateDescription(name)
 *             .build());
 * 
 *         var defaultResource = new Resource("defaultResource", ResourceArgs.builder()
 *             .userAccessParam(ResourceUserAccessParamArgs.builder()
 *                 .accessId("your_access_id")
 *                 .accessKey("your_access_key")
 *                 .workspaceId("your_workspace_id")
 *                 .endpoint("your_endpoint")
 *                 .build())
 *             .clusterId(String.format("terraform-%s", default_.result()))
 *             .machineTypes(ResourceMachineTypesArgs.builder()
 *                 .memoryInfo("32x 64GB DDR4 4800 Memory")
 *                 .type("Private")
 *                 .bondNum(5)
 *                 .nodeCount(1)
 *                 .cpuInfo("2x Intel Saphhire Rapid 8469C 48C CPU")
 *                 .networkInfo("1x 200Gbps Dual Port BF3 DPU for VPC 4x 200Gbps Dual Port EIC")
 *                 .gpuInfo("8x OAM 810 GPU")
 *                 .diskInfo("2x 480GB SATA SSD 4x 3.84TB NVMe SSD")
 *                 .networkMode("net")
 *                 .name("lingjun")
 *                 .build())
 *             .clusterName(name)
 *             .clusterDesc(name)
 *             .build());
 * 
 *         var defaultExperimentPlan = new ExperimentPlan("defaultExperimentPlan", ExperimentPlanArgs.builder()
 *             .resourceId(defaultResource.resourceId())
 *             .planName(name)
 *             .templateId(defaultpSZN7t.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Eflo Experiment Plan can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:eflo/experimentPlan:ExperimentPlan example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:eflo/experimentPlan:ExperimentPlan")
public class ExperimentPlan extends com.pulumi.resources.CustomResource {
    /**
     * The creation time of the resource.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The creation time of the resource.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Additional operating parameters. You can include information about the specified node.
     * 
     */
    @Export(name="externalParams", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> externalParams;

    /**
     * @return Additional operating parameters. You can include information about the specified node.
     * 
     */
    public Output<Optional<Map<String,String>>> externalParams() {
        return Codegen.optional(this.externalParams);
    }
    /**
     * Indicates the name of the experiment plan, which is used to distinguish different experiment plans.
     * 
     */
    @Export(name="planName", refs={String.class}, tree="[0]")
    private Output<String> planName;

    /**
     * @return Indicates the name of the experiment plan, which is used to distinguish different experiment plans.
     * 
     */
    public Output<String> planName() {
        return this.planName;
    }
    /**
     * The ID of the resource group.
     * 
     */
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group.
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * The ID of the resource.
     * 
     */
    @Export(name="resourceId", refs={Integer.class}, tree="[0]")
    private Output<Integer> resourceId;

    /**
     * @return The ID of the resource.
     * 
     */
    public Output<Integer> resourceId() {
        return this.resourceId;
    }
    /**
     * The tag of the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return The tag of the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The ID of the template.
     * 
     */
    @Export(name="templateId", refs={Integer.class}, tree="[0]")
    private Output<Integer> templateId;

    /**
     * @return The ID of the template.
     * 
     */
    public Output<Integer> templateId() {
        return this.templateId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExperimentPlan(java.lang.String name) {
        this(name, ExperimentPlanArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExperimentPlan(java.lang.String name, ExperimentPlanArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExperimentPlan(java.lang.String name, ExperimentPlanArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:eflo/experimentPlan:ExperimentPlan", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ExperimentPlan(java.lang.String name, Output<java.lang.String> id, @Nullable ExperimentPlanState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:eflo/experimentPlan:ExperimentPlan", name, state, makeResourceOptions(options, id), false);
    }

    private static ExperimentPlanArgs makeArgs(ExperimentPlanArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ExperimentPlanArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExperimentPlan get(java.lang.String name, Output<java.lang.String> id, @Nullable ExperimentPlanState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExperimentPlan(name, id, state, options);
    }
}
