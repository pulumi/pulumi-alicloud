// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.message.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceQueueDlqPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceQueueDlqPolicyArgs Empty = new ServiceQueueDlqPolicyArgs();

    /**
     * The queue to which dead-letter messages are delivered.
     * 
     */
    @Import(name="deadLetterTargetQueue")
    private @Nullable Output<String> deadLetterTargetQueue;

    /**
     * @return The queue to which dead-letter messages are delivered.
     * 
     */
    public Optional<Output<String>> deadLetterTargetQueue() {
        return Optional.ofNullable(this.deadLetterTargetQueue);
    }

    /**
     * Specifies whether to enable the dead-letter message delivery. Valid values: `true`, `false`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Specifies whether to enable the dead-letter message delivery. Valid values: `true`, `false`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The maximum number of retries.
     * 
     */
    @Import(name="maxReceiveCount")
    private @Nullable Output<Integer> maxReceiveCount;

    /**
     * @return The maximum number of retries.
     * 
     */
    public Optional<Output<Integer>> maxReceiveCount() {
        return Optional.ofNullable(this.maxReceiveCount);
    }

    private ServiceQueueDlqPolicyArgs() {}

    private ServiceQueueDlqPolicyArgs(ServiceQueueDlqPolicyArgs $) {
        this.deadLetterTargetQueue = $.deadLetterTargetQueue;
        this.enabled = $.enabled;
        this.maxReceiveCount = $.maxReceiveCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceQueueDlqPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceQueueDlqPolicyArgs $;

        public Builder() {
            $ = new ServiceQueueDlqPolicyArgs();
        }

        public Builder(ServiceQueueDlqPolicyArgs defaults) {
            $ = new ServiceQueueDlqPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deadLetterTargetQueue The queue to which dead-letter messages are delivered.
         * 
         * @return builder
         * 
         */
        public Builder deadLetterTargetQueue(@Nullable Output<String> deadLetterTargetQueue) {
            $.deadLetterTargetQueue = deadLetterTargetQueue;
            return this;
        }

        /**
         * @param deadLetterTargetQueue The queue to which dead-letter messages are delivered.
         * 
         * @return builder
         * 
         */
        public Builder deadLetterTargetQueue(String deadLetterTargetQueue) {
            return deadLetterTargetQueue(Output.of(deadLetterTargetQueue));
        }

        /**
         * @param enabled Specifies whether to enable the dead-letter message delivery. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Specifies whether to enable the dead-letter message delivery. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param maxReceiveCount The maximum number of retries.
         * 
         * @return builder
         * 
         */
        public Builder maxReceiveCount(@Nullable Output<Integer> maxReceiveCount) {
            $.maxReceiveCount = maxReceiveCount;
            return this;
        }

        /**
         * @param maxReceiveCount The maximum number of retries.
         * 
         * @return builder
         * 
         */
        public Builder maxReceiveCount(Integer maxReceiveCount) {
            return maxReceiveCount(Output.of(maxReceiveCount));
        }

        public ServiceQueueDlqPolicyArgs build() {
            return $;
        }
    }

}
