// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpn.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGatewaysArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGatewaysArgs Empty = new GetGatewaysArgs();

    /**
     * Limit search to specific business status - valid value is &#34;Normal&#34;, &#34;FinancialLocked&#34;.
     * 
     */
    @Import(name="businessStatus")
    private @Nullable Output<String> businessStatus;

    /**
     * @return Limit search to specific business status - valid value is &#34;Normal&#34;, &#34;FinancialLocked&#34;.
     * 
     */
    public Optional<Output<String>> businessStatus() {
        return Optional.ofNullable(this.businessStatus);
    }

    /**
     * Indicates whether the IPsec-VPN feature is enabled.
     * 
     * @deprecated
     * Field &#39;enable_ipsec&#39; has been deprecated from provider version 1.193.0 and it will be removed in the future version.
     * 
     */
    @Deprecated /* Field 'enable_ipsec' has been deprecated from provider version 1.193.0 and it will be removed in the future version. */
    @Import(name="enableIpsec")
    private @Nullable Output<Boolean> enableIpsec;

    /**
     * @return Indicates whether the IPsec-VPN feature is enabled.
     * 
     * @deprecated
     * Field &#39;enable_ipsec&#39; has been deprecated from provider version 1.193.0 and it will be removed in the future version.
     * 
     */
    @Deprecated /* Field 'enable_ipsec' has been deprecated from provider version 1.193.0 and it will be removed in the future version. */
    public Optional<Output<Boolean>> enableIpsec() {
        return Optional.ofNullable(this.enableIpsec);
    }

    /**
     * IDs of the VPN.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return IDs of the VPN.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * Include ineffective ordering data.
     * 
     */
    @Import(name="includeReservationData")
    private @Nullable Output<Boolean> includeReservationData;

    /**
     * @return Include ineffective ordering data.
     * 
     */
    public Optional<Output<Boolean>> includeReservationData() {
        return Optional.ofNullable(this.includeReservationData);
    }

    /**
     * A regex string of VPN name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    /**
     * @return A regex string of VPN name.
     * 
     */
    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * Save the result to the file.
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return Save the result to the file.
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * Indicates whether the SSL-VPN feature is enabled. Valid value is `enable`, `disable`.
     * 
     */
    @Import(name="sslVpn")
    private @Nullable Output<String> sslVpn;

    /**
     * @return Indicates whether the SSL-VPN feature is enabled. Valid value is `enable`, `disable`.
     * 
     */
    public Optional<Output<String>> sslVpn() {
        return Optional.ofNullable(this.sslVpn);
    }

    /**
     * Limit search to specific status - valid value is &#34;Init&#34;, &#34;Provisioning&#34;, &#34;Active&#34;, &#34;Updating&#34;, &#34;Deleting&#34;.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Limit search to specific status - valid value is &#34;Init&#34;, &#34;Provisioning&#34;, &#34;Active&#34;, &#34;Updating&#34;, &#34;Deleting&#34;.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Use the VPC ID as the search key.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return Use the VPC ID as the search key.
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private GetGatewaysArgs() {}

    private GetGatewaysArgs(GetGatewaysArgs $) {
        this.businessStatus = $.businessStatus;
        this.enableIpsec = $.enableIpsec;
        this.ids = $.ids;
        this.includeReservationData = $.includeReservationData;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.sslVpn = $.sslVpn;
        this.status = $.status;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGatewaysArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGatewaysArgs $;

        public Builder() {
            $ = new GetGatewaysArgs();
        }

        public Builder(GetGatewaysArgs defaults) {
            $ = new GetGatewaysArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param businessStatus Limit search to specific business status - valid value is &#34;Normal&#34;, &#34;FinancialLocked&#34;.
         * 
         * @return builder
         * 
         */
        public Builder businessStatus(@Nullable Output<String> businessStatus) {
            $.businessStatus = businessStatus;
            return this;
        }

        /**
         * @param businessStatus Limit search to specific business status - valid value is &#34;Normal&#34;, &#34;FinancialLocked&#34;.
         * 
         * @return builder
         * 
         */
        public Builder businessStatus(String businessStatus) {
            return businessStatus(Output.of(businessStatus));
        }

        /**
         * @param enableIpsec Indicates whether the IPsec-VPN feature is enabled.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;enable_ipsec&#39; has been deprecated from provider version 1.193.0 and it will be removed in the future version.
         * 
         */
        @Deprecated /* Field 'enable_ipsec' has been deprecated from provider version 1.193.0 and it will be removed in the future version. */
        public Builder enableIpsec(@Nullable Output<Boolean> enableIpsec) {
            $.enableIpsec = enableIpsec;
            return this;
        }

        /**
         * @param enableIpsec Indicates whether the IPsec-VPN feature is enabled.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;enable_ipsec&#39; has been deprecated from provider version 1.193.0 and it will be removed in the future version.
         * 
         */
        @Deprecated /* Field 'enable_ipsec' has been deprecated from provider version 1.193.0 and it will be removed in the future version. */
        public Builder enableIpsec(Boolean enableIpsec) {
            return enableIpsec(Output.of(enableIpsec));
        }

        /**
         * @param ids IDs of the VPN.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids IDs of the VPN.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids IDs of the VPN.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param includeReservationData Include ineffective ordering data.
         * 
         * @return builder
         * 
         */
        public Builder includeReservationData(@Nullable Output<Boolean> includeReservationData) {
            $.includeReservationData = includeReservationData;
            return this;
        }

        /**
         * @param includeReservationData Include ineffective ordering data.
         * 
         * @return builder
         * 
         */
        public Builder includeReservationData(Boolean includeReservationData) {
            return includeReservationData(Output.of(includeReservationData));
        }

        /**
         * @param nameRegex A regex string of VPN name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param nameRegex A regex string of VPN name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        /**
         * @param outputFile Save the result to the file.
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile Save the result to the file.
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        /**
         * @param sslVpn Indicates whether the SSL-VPN feature is enabled. Valid value is `enable`, `disable`.
         * 
         * @return builder
         * 
         */
        public Builder sslVpn(@Nullable Output<String> sslVpn) {
            $.sslVpn = sslVpn;
            return this;
        }

        /**
         * @param sslVpn Indicates whether the SSL-VPN feature is enabled. Valid value is `enable`, `disable`.
         * 
         * @return builder
         * 
         */
        public Builder sslVpn(String sslVpn) {
            return sslVpn(Output.of(sslVpn));
        }

        /**
         * @param status Limit search to specific status - valid value is &#34;Init&#34;, &#34;Provisioning&#34;, &#34;Active&#34;, &#34;Updating&#34;, &#34;Deleting&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Limit search to specific status - valid value is &#34;Init&#34;, &#34;Provisioning&#34;, &#34;Active&#34;, &#34;Updating&#34;, &#34;Deleting&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param vpcId Use the VPC ID as the search key.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId Use the VPC ID as the search key.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public GetGatewaysArgs build() {
            return $;
        }
    }

}
