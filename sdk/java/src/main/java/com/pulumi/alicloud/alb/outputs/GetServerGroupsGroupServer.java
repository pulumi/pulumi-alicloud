// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServerGroupsGroupServer {
    /**
     * @return The description of the server.
     * 
     */
    private String description;
    /**
     * @return The port that is used by the server. Valid values: `1` to `65535`.
     * 
     */
    private Integer port;
    /**
     * @return The ID of the ECS instance, ENI instance or ECI instance.
     * 
     */
    private String serverId;
    /**
     * @return The IP address of the ENI instance when it is in the inclusive ENI mode.
     * 
     */
    private String serverIp;
    /**
     * @return The type of the server. The type of the server. Valid values: `Ecs`, `Eni` and `Eci`.
     * 
     */
    private String serverType;
    /**
     * @return The status of the resource. Valid values: `Provisioning`, `Available` and `Configuring`.
     * 
     */
    private String status;
    /**
     * @return The weight of the server.  Valid values: `0` to `100`. Default value: `100`. If the value is set to `0`, no requests are forwarded to the server.
     * 
     */
    private Integer weight;

    private GetServerGroupsGroupServer() {}
    /**
     * @return The description of the server.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The port that is used by the server. Valid values: `1` to `65535`.
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return The ID of the ECS instance, ENI instance or ECI instance.
     * 
     */
    public String serverId() {
        return this.serverId;
    }
    /**
     * @return The IP address of the ENI instance when it is in the inclusive ENI mode.
     * 
     */
    public String serverIp() {
        return this.serverIp;
    }
    /**
     * @return The type of the server. The type of the server. Valid values: `Ecs`, `Eni` and `Eci`.
     * 
     */
    public String serverType() {
        return this.serverType;
    }
    /**
     * @return The status of the resource. Valid values: `Provisioning`, `Available` and `Configuring`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The weight of the server.  Valid values: `0` to `100`. Default value: `100`. If the value is set to `0`, no requests are forwarded to the server.
     * 
     */
    public Integer weight() {
        return this.weight;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServerGroupsGroupServer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private Integer port;
        private String serverId;
        private String serverIp;
        private String serverType;
        private String status;
        private Integer weight;
        public Builder() {}
        public Builder(GetServerGroupsGroupServer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.port = defaults.port;
    	      this.serverId = defaults.serverId;
    	      this.serverIp = defaults.serverIp;
    	      this.serverType = defaults.serverType;
    	      this.status = defaults.status;
    	      this.weight = defaults.weight;
        }

        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }
        @CustomType.Setter
        public Builder serverId(String serverId) {
            this.serverId = Objects.requireNonNull(serverId);
            return this;
        }
        @CustomType.Setter
        public Builder serverIp(String serverIp) {
            this.serverIp = Objects.requireNonNull(serverIp);
            return this;
        }
        @CustomType.Setter
        public Builder serverType(String serverType) {
            this.serverType = Objects.requireNonNull(serverType);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder weight(Integer weight) {
            this.weight = Objects.requireNonNull(weight);
            return this;
        }
        public GetServerGroupsGroupServer build() {
            final var o = new GetServerGroupsGroupServer();
            o.description = description;
            o.port = port;
            o.serverId = serverId;
            o.serverIp = serverIp;
            o.serverType = serverType;
            o.status = status;
            o.weight = weight;
            return o;
        }
    }
}
