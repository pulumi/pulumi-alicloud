// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.mns.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTopicsTopic {
    /**
     * @return The id of the topic. The value is set to `name`.
     * 
     */
    private String id;
    /**
     * @return Whether to enable logging.
     * 
     */
    private Boolean loggingEnabled;
    /**
     * @return This indicates the maximum length, in bytes, of any message body sent to the topic.
     * 
     */
    private Integer maximumMessageSize;
    /**
     * @return The name of the topic.
     * 
     */
    private String name;

    private GetTopicsTopic() {}
    /**
     * @return The id of the topic. The value is set to `name`.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Whether to enable logging.
     * 
     */
    public Boolean loggingEnabled() {
        return this.loggingEnabled;
    }
    /**
     * @return This indicates the maximum length, in bytes, of any message body sent to the topic.
     * 
     */
    public Integer maximumMessageSize() {
        return this.maximumMessageSize;
    }
    /**
     * @return The name of the topic.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTopicsTopic defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private Boolean loggingEnabled;
        private Integer maximumMessageSize;
        private String name;
        public Builder() {}
        public Builder(GetTopicsTopic defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.loggingEnabled = defaults.loggingEnabled;
    	      this.maximumMessageSize = defaults.maximumMessageSize;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder loggingEnabled(Boolean loggingEnabled) {
            this.loggingEnabled = Objects.requireNonNull(loggingEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder maximumMessageSize(Integer maximumMessageSize) {
            this.maximumMessageSize = Objects.requireNonNull(maximumMessageSize);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public GetTopicsTopic build() {
            final var o = new GetTopicsTopic();
            o.id = id;
            o.loggingEnabled = loggingEnabled;
            o.maximumMessageSize = maximumMessageSize;
            o.name = name;
            return o;
        }
    }
}
