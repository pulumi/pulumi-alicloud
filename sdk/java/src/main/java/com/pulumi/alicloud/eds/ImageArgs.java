// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eds;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ImageArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImageArgs Empty = new ImageArgs();

    /**
     * The description of the image.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the image.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The desktop id of the desktop.
     * 
     */
    @Import(name="desktopId", required=true)
    private Output<String> desktopId;

    /**
     * @return The desktop id of the desktop.
     * 
     */
    public Output<String> desktopId() {
        return this.desktopId;
    }

    /**
     * The name of the image.
     * 
     */
    @Import(name="imageName")
    private @Nullable Output<String> imageName;

    /**
     * @return The name of the image.
     * 
     */
    public Optional<Output<String>> imageName() {
        return Optional.ofNullable(this.imageName);
    }

    private ImageArgs() {}

    private ImageArgs(ImageArgs $) {
        this.description = $.description;
        this.desktopId = $.desktopId;
        this.imageName = $.imageName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageArgs $;

        public Builder() {
            $ = new ImageArgs();
        }

        public Builder(ImageArgs defaults) {
            $ = new ImageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the image.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the image.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param desktopId The desktop id of the desktop.
         * 
         * @return builder
         * 
         */
        public Builder desktopId(Output<String> desktopId) {
            $.desktopId = desktopId;
            return this;
        }

        /**
         * @param desktopId The desktop id of the desktop.
         * 
         * @return builder
         * 
         */
        public Builder desktopId(String desktopId) {
            return desktopId(Output.of(desktopId));
        }

        /**
         * @param imageName The name of the image.
         * 
         * @return builder
         * 
         */
        public Builder imageName(@Nullable Output<String> imageName) {
            $.imageName = imageName;
            return this;
        }

        /**
         * @param imageName The name of the image.
         * 
         * @return builder
         * 
         */
        public Builder imageName(String imageName) {
            return imageName(Output.of(imageName));
        }

        public ImageArgs build() {
            if ($.desktopId == null) {
                throw new MissingRequiredPropertyException("ImageArgs", "desktopId");
            }
            return $;
        }
    }

}
