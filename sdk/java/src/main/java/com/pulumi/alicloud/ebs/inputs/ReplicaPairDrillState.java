// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ebs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReplicaPairDrillState extends com.pulumi.resources.ResourceArgs {

    public static final ReplicaPairDrillState Empty = new ReplicaPairDrillState();

    /**
     * Copy the ID of the pair. You can call DescribeDiskReplicaPairs to query the list of asynchronous replication pairs to obtain the replication pair ID.
     * 
     */
    @Import(name="pairId")
    private @Nullable Output<String> pairId;

    /**
     * @return Copy the ID of the pair. You can call DescribeDiskReplicaPairs to query the list of asynchronous replication pairs to obtain the replication pair ID.
     * 
     */
    public Optional<Output<String>> pairId() {
        return Optional.ofNullable(this.pairId);
    }

    /**
     * The first ID of the resource.
     * 
     */
    @Import(name="replicaPairDrillId")
    private @Nullable Output<String> replicaPairDrillId;

    /**
     * @return The first ID of the resource.
     * 
     */
    public Optional<Output<String>> replicaPairDrillId() {
        return Optional.ofNullable(this.replicaPairDrillId);
    }

    /**
     * Walkthrough status. _failed: Execution failed._failed: Cleanup failed.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Walkthrough status. _failed: Execution failed._failed: Cleanup failed.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private ReplicaPairDrillState() {}

    private ReplicaPairDrillState(ReplicaPairDrillState $) {
        this.pairId = $.pairId;
        this.replicaPairDrillId = $.replicaPairDrillId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicaPairDrillState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicaPairDrillState $;

        public Builder() {
            $ = new ReplicaPairDrillState();
        }

        public Builder(ReplicaPairDrillState defaults) {
            $ = new ReplicaPairDrillState(Objects.requireNonNull(defaults));
        }

        /**
         * @param pairId Copy the ID of the pair. You can call DescribeDiskReplicaPairs to query the list of asynchronous replication pairs to obtain the replication pair ID.
         * 
         * @return builder
         * 
         */
        public Builder pairId(@Nullable Output<String> pairId) {
            $.pairId = pairId;
            return this;
        }

        /**
         * @param pairId Copy the ID of the pair. You can call DescribeDiskReplicaPairs to query the list of asynchronous replication pairs to obtain the replication pair ID.
         * 
         * @return builder
         * 
         */
        public Builder pairId(String pairId) {
            return pairId(Output.of(pairId));
        }

        /**
         * @param replicaPairDrillId The first ID of the resource.
         * 
         * @return builder
         * 
         */
        public Builder replicaPairDrillId(@Nullable Output<String> replicaPairDrillId) {
            $.replicaPairDrillId = replicaPairDrillId;
            return this;
        }

        /**
         * @param replicaPairDrillId The first ID of the resource.
         * 
         * @return builder
         * 
         */
        public Builder replicaPairDrillId(String replicaPairDrillId) {
            return replicaPairDrillId(Output.of(replicaPairDrillId));
        }

        /**
         * @param status Walkthrough status. _failed: Execution failed._failed: Cleanup failed.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Walkthrough status. _failed: Execution failed._failed: Cleanup failed.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public ReplicaPairDrillState build() {
            return $;
        }
    }

}
