// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketReplicationRtcArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketReplicationRtcArgs Empty = new BucketReplicationRtcArgs();

    /**
     * Specifies whether to enable the RTC feature. Set to `true` to enable or `false` to disable. This argument is required when the rtc block is defined.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Specifies whether to enable the RTC feature. Set to `true` to enable or `false` to disable. This argument is required when the rtc block is defined.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * The current status of the RTC feature. This attribute is read-only and is only populated when `enabled` is set to `true`. Possible values are:
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The current status of the RTC feature. This attribute is read-only and is only populated when `enabled` is set to `true`. Possible values are:
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private BucketReplicationRtcArgs() {}

    private BucketReplicationRtcArgs(BucketReplicationRtcArgs $) {
        this.enabled = $.enabled;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketReplicationRtcArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketReplicationRtcArgs $;

        public Builder() {
            $ = new BucketReplicationRtcArgs();
        }

        public Builder(BucketReplicationRtcArgs defaults) {
            $ = new BucketReplicationRtcArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Specifies whether to enable the RTC feature. Set to `true` to enable or `false` to disable. This argument is required when the rtc block is defined.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Specifies whether to enable the RTC feature. Set to `true` to enable or `false` to disable. This argument is required when the rtc block is defined.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param status The current status of the RTC feature. This attribute is read-only and is only populated when `enabled` is set to `true`. Possible values are:
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The current status of the RTC feature. This attribute is read-only and is only populated when `enabled` is set to `true`. Possible values are:
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public BucketReplicationRtcArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("BucketReplicationRtcArgs", "enabled");
            }
            return $;
        }
    }

}
