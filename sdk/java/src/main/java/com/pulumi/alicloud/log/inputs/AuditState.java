// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.log.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuditState extends com.pulumi.resources.ResourceArgs {

    public static final AuditState Empty = new AuditState();

    /**
     * Aliuid value of your account.
     * 
     */
    @Import(name="aliuid")
    private @Nullable Output<String> aliuid;

    /**
     * @return Aliuid value of your account.
     * 
     */
    public Optional<Output<String>> aliuid() {
        return Optional.ofNullable(this.aliuid);
    }

    /**
     * Name of SLS log audit.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Name of SLS log audit.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Multi-account configuration, please fill in multiple aliuid.
     * 
     */
    @Import(name="multiAccounts")
    private @Nullable Output<List<String>> multiAccounts;

    /**
     * @return Multi-account configuration, please fill in multiple aliuid.
     * 
     */
    public Optional<Output<List<String>>> multiAccounts() {
        return Optional.ofNullable(this.multiAccounts);
    }

    /**
     * Resource Directory type. Optional values are all or custom. If the value is custom, argument multi_account should be provided.
     * 
     */
    @Import(name="resourceDirectoryType")
    private @Nullable Output<String> resourceDirectoryType;

    /**
     * @return Resource Directory type. Optional values are all or custom. If the value is custom, argument multi_account should be provided.
     * 
     */
    public Optional<Output<String>> resourceDirectoryType() {
        return Optional.ofNullable(this.resourceDirectoryType);
    }

    /**
     * Log audit detailed configuration.
     * 
     */
    @Import(name="variableMap")
    private @Nullable Output<Map<String,String>> variableMap;

    /**
     * @return Log audit detailed configuration.
     * 
     */
    public Optional<Output<Map<String,String>>> variableMap() {
        return Optional.ofNullable(this.variableMap);
    }

    private AuditState() {}

    private AuditState(AuditState $) {
        this.aliuid = $.aliuid;
        this.displayName = $.displayName;
        this.multiAccounts = $.multiAccounts;
        this.resourceDirectoryType = $.resourceDirectoryType;
        this.variableMap = $.variableMap;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuditState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuditState $;

        public Builder() {
            $ = new AuditState();
        }

        public Builder(AuditState defaults) {
            $ = new AuditState(Objects.requireNonNull(defaults));
        }

        /**
         * @param aliuid Aliuid value of your account.
         * 
         * @return builder
         * 
         */
        public Builder aliuid(@Nullable Output<String> aliuid) {
            $.aliuid = aliuid;
            return this;
        }

        /**
         * @param aliuid Aliuid value of your account.
         * 
         * @return builder
         * 
         */
        public Builder aliuid(String aliuid) {
            return aliuid(Output.of(aliuid));
        }

        /**
         * @param displayName Name of SLS log audit.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Name of SLS log audit.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param multiAccounts Multi-account configuration, please fill in multiple aliuid.
         * 
         * @return builder
         * 
         */
        public Builder multiAccounts(@Nullable Output<List<String>> multiAccounts) {
            $.multiAccounts = multiAccounts;
            return this;
        }

        /**
         * @param multiAccounts Multi-account configuration, please fill in multiple aliuid.
         * 
         * @return builder
         * 
         */
        public Builder multiAccounts(List<String> multiAccounts) {
            return multiAccounts(Output.of(multiAccounts));
        }

        /**
         * @param multiAccounts Multi-account configuration, please fill in multiple aliuid.
         * 
         * @return builder
         * 
         */
        public Builder multiAccounts(String... multiAccounts) {
            return multiAccounts(List.of(multiAccounts));
        }

        /**
         * @param resourceDirectoryType Resource Directory type. Optional values are all or custom. If the value is custom, argument multi_account should be provided.
         * 
         * @return builder
         * 
         */
        public Builder resourceDirectoryType(@Nullable Output<String> resourceDirectoryType) {
            $.resourceDirectoryType = resourceDirectoryType;
            return this;
        }

        /**
         * @param resourceDirectoryType Resource Directory type. Optional values are all or custom. If the value is custom, argument multi_account should be provided.
         * 
         * @return builder
         * 
         */
        public Builder resourceDirectoryType(String resourceDirectoryType) {
            return resourceDirectoryType(Output.of(resourceDirectoryType));
        }

        /**
         * @param variableMap Log audit detailed configuration.
         * 
         * @return builder
         * 
         */
        public Builder variableMap(@Nullable Output<Map<String,String>> variableMap) {
            $.variableMap = variableMap;
            return this;
        }

        /**
         * @param variableMap Log audit detailed configuration.
         * 
         * @return builder
         * 
         */
        public Builder variableMap(Map<String,String> variableMap) {
            return variableMap(Output.of(variableMap));
        }

        public AuditState build() {
            return $;
        }
    }

}
