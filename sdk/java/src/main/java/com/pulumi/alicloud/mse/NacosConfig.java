// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.mse;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.mse.NacosConfigArgs;
import com.pulumi.alicloud.mse.inputs.NacosConfigState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Microservice Engine (MSE) Nacos Config resource.
 * 
 * For information about Microservice Engine (MSE) Nacos Config and how to use it, see [What is Nacos configuration](https://www.alibabacloud.com/help/en/mse/developer-reference/api-mse-2019-05-31-createnacosconfig)
 * &gt; **NOTE:** Available since v1.233.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.mse.Cluster;
 * import com.pulumi.alicloud.mse.ClusterArgs;
 * import com.pulumi.alicloud.mse.EngineNamespace;
 * import com.pulumi.alicloud.mse.EngineNamespaceArgs;
 * import com.pulumi.alicloud.mse.NacosConfig;
 * import com.pulumi.alicloud.mse.NacosConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var example = AlicloudFunctions.getZones(GetZonesArgs.builder()
 *             .availableResourceCreation("VSwitch")
 *             .build());
 * 
 *         var exampleNetwork = new Network("exampleNetwork", NetworkArgs.builder()
 *             .vpcName("terraform-example")
 *             .cidrBlock("172.17.3.0/24")
 *             .build());
 * 
 *         var exampleSwitch = new Switch("exampleSwitch", SwitchArgs.builder()
 *             .vswitchName("terraform-example")
 *             .cidrBlock("172.17.3.0/24")
 *             .vpcId(exampleNetwork.id())
 *             .zoneId(example.applyValue(getZonesResult -> getZonesResult.zones()[0].id()))
 *             .build());
 * 
 *         var exampleCluster = new Cluster("exampleCluster", ClusterArgs.builder()
 *             .connectionType("slb")
 *             .netType("privatenet")
 *             .vswitchId(exampleSwitch.id())
 *             .clusterSpecification("MSE_SC_1_2_60_c")
 *             .clusterVersion("NACOS_2_0_0")
 *             .instanceCount("3")
 *             .pubNetworkFlow("1")
 *             .clusterAliasName("example")
 *             .mseVersion("mse_pro")
 *             .clusterType("Nacos-Ans")
 *             .build());
 * 
 *         var exampleEngineNamespace = new EngineNamespace("exampleEngineNamespace", EngineNamespaceArgs.builder()
 *             .instanceId(exampleCluster.id())
 *             .namespaceShowName("example")
 *             .namespaceId("example")
 *             .build());
 * 
 *         var exampleNacosConfig = new NacosConfig("exampleNacosConfig", NacosConfigArgs.builder()
 *             .instanceId(exampleCluster.id())
 *             .dataId("example")
 *             .group("example")
 *             .namespaceId(exampleEngineNamespace.namespaceId())
 *             .content("example")
 *             .type("text")
 *             .tags("example")
 *             .appName("example")
 *             .desc("example")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Microservice Engine (MSE) Nacos Config can be imported using the id, e.g.
 * 
 * **Note**: If instance_id, namespace_id, data_id, and group contain &#34;:&#34;, please replace it with &#34;\\\\:&#34;, available since v1.243.0
 * 
 * ```sh
 * $ pulumi import alicloud:mse/nacosConfig:NacosConfig example &lt;instance_id&gt;:&lt;namespace_id&gt;:&lt;data_id&gt;:&lt;group&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:mse/nacosConfig:NacosConfig")
public class NacosConfig extends com.pulumi.resources.CustomResource {
    /**
     * The language type of the returned information. Valid values: `zh`, `en`.
     * 
     */
    @Export(name="acceptLanguage", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> acceptLanguage;

    /**
     * @return The language type of the returned information. Valid values: `zh`, `en`.
     * 
     */
    public Output<Optional<String>> acceptLanguage() {
        return Codegen.optional(this.acceptLanguage);
    }
    /**
     * The name of the application.
     * 
     */
    @Export(name="appName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> appName;

    /**
     * @return The name of the application.
     * 
     */
    public Output<Optional<String>> appName() {
        return Codegen.optional(this.appName);
    }
    /**
     * The list of IP addresses where the beta release of the configuration is performed.
     * 
     */
    @Export(name="betaIps", refs={String.class}, tree="[0]")
    private Output<String> betaIps;

    /**
     * @return The list of IP addresses where the beta release of the configuration is performed.
     * 
     */
    public Output<String> betaIps() {
        return this.betaIps;
    }
    /**
     * The content of the configuration.
     * 
     */
    @Export(name="content", refs={String.class}, tree="[0]")
    private Output<String> content;

    /**
     * @return The content of the configuration.
     * 
     */
    public Output<String> content() {
        return this.content;
    }
    /**
     * The ID of the data.
     * 
     */
    @Export(name="dataId", refs={String.class}, tree="[0]")
    private Output<String> dataId;

    /**
     * @return The ID of the data.
     * 
     */
    public Output<String> dataId() {
        return this.dataId;
    }
    /**
     * The description of the configuration.
     * 
     */
    @Export(name="desc", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> desc;

    /**
     * @return The description of the configuration.
     * 
     */
    public Output<Optional<String>> desc() {
        return Codegen.optional(this.desc);
    }
    /**
     * The encryption key.
     * 
     */
    @Export(name="encryptedDataKey", refs={String.class}, tree="[0]")
    private Output<String> encryptedDataKey;

    /**
     * @return The encryption key.
     * 
     */
    public Output<String> encryptedDataKey() {
        return this.encryptedDataKey;
    }
    /**
     * The ID of the group.
     * 
     */
    @Export(name="group", refs={String.class}, tree="[0]")
    private Output<String> group;

    /**
     * @return The ID of the group.
     * 
     */
    public Output<String> group() {
        return this.group;
    }
    /**
     * The ID of the instance.
     * 
     */
    @Export(name="instanceId", refs={String.class}, tree="[0]")
    private Output<String> instanceId;

    /**
     * @return The ID of the instance.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }
    /**
     * The id of Namespace. If you want to create a config under the `public` namespace, this parameter can be set to an empty string  *`&#34;&#34;`* or just not set this parameter.
     * 
     */
    @Export(name="namespaceId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namespaceId;

    /**
     * @return The id of Namespace. If you want to create a config under the `public` namespace, this parameter can be set to an empty string  *`&#34;&#34;`* or just not set this parameter.
     * 
     */
    public Output<Optional<String>> namespaceId() {
        return Codegen.optional(this.namespaceId);
    }
    /**
     * The tags of the configuration.
     * 
     */
    @Export(name="tags", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tags;

    /**
     * @return The tags of the configuration.
     * 
     */
    public Output<Optional<String>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The format of the configuration. Supported formats include TEXT, JSON, and XML.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The format of the configuration. Supported formats include TEXT, JSON, and XML.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NacosConfig(java.lang.String name) {
        this(name, NacosConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NacosConfig(java.lang.String name, NacosConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NacosConfig(java.lang.String name, NacosConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:mse/nacosConfig:NacosConfig", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private NacosConfig(java.lang.String name, Output<java.lang.String> id, @Nullable NacosConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:mse/nacosConfig:NacosConfig", name, state, makeResourceOptions(options, id), false);
    }

    private static NacosConfigArgs makeArgs(NacosConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NacosConfigArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NacosConfig get(java.lang.String name, Output<java.lang.String> id, @Nullable NacosConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NacosConfig(name, id, state, options);
    }
}
