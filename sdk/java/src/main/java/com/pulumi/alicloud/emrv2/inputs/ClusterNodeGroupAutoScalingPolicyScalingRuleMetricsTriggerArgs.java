// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.emrv2.inputs;

import com.pulumi.alicloud.emrv2.inputs.ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerConditionArgs;
import com.pulumi.alicloud.emrv2.inputs.ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerTimeConstraintArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerArgs Empty = new ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerArgs();

    @Import(name="conditionLogicOperator")
    private @Nullable Output<String> conditionLogicOperator;

    public Optional<Output<String>> conditionLogicOperator() {
        return Optional.ofNullable(this.conditionLogicOperator);
    }

    @Import(name="conditions")
    private @Nullable Output<List<ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerConditionArgs>> conditions;

    public Optional<Output<List<ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerConditionArgs>>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    @Import(name="coolDownInterval")
    private @Nullable Output<Integer> coolDownInterval;

    public Optional<Output<Integer>> coolDownInterval() {
        return Optional.ofNullable(this.coolDownInterval);
    }

    @Import(name="evaluationCount", required=true)
    private Output<Integer> evaluationCount;

    public Output<Integer> evaluationCount() {
        return this.evaluationCount;
    }

    @Import(name="timeConstraints")
    private @Nullable Output<List<ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerTimeConstraintArgs>> timeConstraints;

    public Optional<Output<List<ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerTimeConstraintArgs>>> timeConstraints() {
        return Optional.ofNullable(this.timeConstraints);
    }

    @Import(name="timeWindow", required=true)
    private Output<Integer> timeWindow;

    public Output<Integer> timeWindow() {
        return this.timeWindow;
    }

    private ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerArgs() {}

    private ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerArgs(ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerArgs $) {
        this.conditionLogicOperator = $.conditionLogicOperator;
        this.conditions = $.conditions;
        this.coolDownInterval = $.coolDownInterval;
        this.evaluationCount = $.evaluationCount;
        this.timeConstraints = $.timeConstraints;
        this.timeWindow = $.timeWindow;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerArgs $;

        public Builder() {
            $ = new ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerArgs();
        }

        public Builder(ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerArgs defaults) {
            $ = new ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerArgs(Objects.requireNonNull(defaults));
        }

        public Builder conditionLogicOperator(@Nullable Output<String> conditionLogicOperator) {
            $.conditionLogicOperator = conditionLogicOperator;
            return this;
        }

        public Builder conditionLogicOperator(String conditionLogicOperator) {
            return conditionLogicOperator(Output.of(conditionLogicOperator));
        }

        public Builder conditions(@Nullable Output<List<ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder conditions(List<ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        public Builder conditions(ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        public Builder coolDownInterval(@Nullable Output<Integer> coolDownInterval) {
            $.coolDownInterval = coolDownInterval;
            return this;
        }

        public Builder coolDownInterval(Integer coolDownInterval) {
            return coolDownInterval(Output.of(coolDownInterval));
        }

        public Builder evaluationCount(Output<Integer> evaluationCount) {
            $.evaluationCount = evaluationCount;
            return this;
        }

        public Builder evaluationCount(Integer evaluationCount) {
            return evaluationCount(Output.of(evaluationCount));
        }

        public Builder timeConstraints(@Nullable Output<List<ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerTimeConstraintArgs>> timeConstraints) {
            $.timeConstraints = timeConstraints;
            return this;
        }

        public Builder timeConstraints(List<ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerTimeConstraintArgs> timeConstraints) {
            return timeConstraints(Output.of(timeConstraints));
        }

        public Builder timeConstraints(ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerTimeConstraintArgs... timeConstraints) {
            return timeConstraints(List.of(timeConstraints));
        }

        public Builder timeWindow(Output<Integer> timeWindow) {
            $.timeWindow = timeWindow;
            return this;
        }

        public Builder timeWindow(Integer timeWindow) {
            return timeWindow(Output.of(timeWindow));
        }

        public ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerArgs build() {
            if ($.evaluationCount == null) {
                throw new MissingRequiredPropertyException("ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerArgs", "evaluationCount");
            }
            if ($.timeWindow == null) {
                throw new MissingRequiredPropertyException("ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerArgs", "timeWindow");
            }
            return $;
        }
    }

}
