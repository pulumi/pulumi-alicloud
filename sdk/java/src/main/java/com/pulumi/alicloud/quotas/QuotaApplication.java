// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.quotas;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.quotas.QuotaApplicationArgs;
import com.pulumi.alicloud.quotas.inputs.QuotaApplicationState;
import com.pulumi.alicloud.quotas.outputs.QuotaApplicationDimension;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * Quotas Quota Application can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:quotas/quotaApplication:QuotaApplication example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:quotas/quotaApplication:QuotaApplication")
public class QuotaApplication extends com.pulumi.resources.CustomResource {
    /**
     * The approve value of the quota application.
     * 
     */
    @Export(name="approveValue", type=String.class, parameters={})
    private Output<String> approveValue;

    /**
     * @return The approve value of the quota application.
     * 
     */
    public Output<String> approveValue() {
        return this.approveValue;
    }
    /**
     * Quota audit mode. Value:
     * - Sync: Synchronize auditing. The quota center automatically approves, and the approval result is returned immediately, but the probability of application passing is lower than that of asynchronous approval, and the validity period of the increase quota is 1 hour.
     * - Async: Asynchronous auditing. Manual review, the probability of application passing is relatively high, and the validity period of the increase quota is 1 month.
     * &gt; **NOTE:**  This parameter takes effect only for the ECS specification quota of the cloud server.
     * 
     */
    @Export(name="auditMode", type=String.class, parameters={})
    private Output<String> auditMode;

    /**
     * @return Quota audit mode. Value:
     * - Sync: Synchronize auditing. The quota center automatically approves, and the approval result is returned immediately, but the probability of application passing is lower than that of asynchronous approval, and the validity period of the increase quota is 1 hour.
     * - Async: Asynchronous auditing. Manual review, the probability of application passing is relatively high, and the validity period of the increase quota is 1 month.
     * &gt; **NOTE:**  This parameter takes effect only for the ECS specification quota of the cloud server.
     * 
     */
    public Output<String> auditMode() {
        return this.auditMode;
    }
    /**
     * The audit reason.
     * 
     */
    @Export(name="auditReason", type=String.class, parameters={})
    private Output<String> auditReason;

    /**
     * @return The audit reason.
     * 
     */
    public Output<String> auditReason() {
        return this.auditReason;
    }
    /**
     * Resource attribute field representing creation time.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return Resource attribute field representing creation time.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The desire value of the quota application.
     * 
     */
    @Export(name="desireValue", type=Double.class, parameters={})
    private Output<Double> desireValue;

    /**
     * @return The desire value of the quota application.
     * 
     */
    public Output<Double> desireValue() {
        return this.desireValue;
    }
    /**
     * QuotaDimensions. See `dimensions` below.
     * 
     */
    @Export(name="dimensions", type=List.class, parameters={QuotaApplicationDimension.class})
    private Output</* @Nullable */ List<QuotaApplicationDimension>> dimensions;

    /**
     * @return QuotaDimensions. See `dimensions` below.
     * 
     */
    public Output<Optional<List<QuotaApplicationDimension>>> dimensions() {
        return Codegen.optional(this.dimensions);
    }
    /**
     * The effective time of the quota application.
     * 
     */
    @Export(name="effectiveTime", type=String.class, parameters={})
    private Output</* @Nullable */ String> effectiveTime;

    /**
     * @return The effective time of the quota application.
     * 
     */
    public Output<Optional<String>> effectiveTime() {
        return Codegen.optional(this.effectiveTime);
    }
    /**
     * The language of the quota alert notification. Value:
     * - zh (default): Chinese.
     * - en: English.
     * 
     */
    @Export(name="envLanguage", type=String.class, parameters={})
    private Output</* @Nullable */ String> envLanguage;

    /**
     * @return The language of the quota alert notification. Value:
     * - zh (default): Chinese.
     * - en: English.
     * 
     */
    public Output<Optional<String>> envLanguage() {
        return Codegen.optional(this.envLanguage);
    }
    /**
     * The expired time of the quota application.
     * 
     */
    @Export(name="expireTime", type=String.class, parameters={})
    private Output</* @Nullable */ String> expireTime;

    /**
     * @return The expired time of the quota application.
     * 
     */
    public Output<Optional<String>> expireTime() {
        return Codegen.optional(this.expireTime);
    }
    /**
     * Specifies whether to send a notification about the application result. Valid values:0: sends a notification about the application result.3: A notification about the application result is sent.
     * 
     */
    @Export(name="noticeType", type=Integer.class, parameters={})
    private Output<Integer> noticeType;

    /**
     * @return Specifies whether to send a notification about the application result. Valid values:0: sends a notification about the application result.3: A notification about the application result is sent.
     * 
     */
    public Output<Integer> noticeType() {
        return this.noticeType;
    }
    /**
     * The product code.
     * 
     */
    @Export(name="productCode", type=String.class, parameters={})
    private Output<String> productCode;

    /**
     * @return The product code.
     * 
     */
    public Output<String> productCode() {
        return this.productCode;
    }
    /**
     * The ID of quota action.
     * 
     */
    @Export(name="quotaActionCode", type=String.class, parameters={})
    private Output<String> quotaActionCode;

    /**
     * @return The ID of quota action.
     * 
     */
    public Output<String> quotaActionCode() {
        return this.quotaActionCode;
    }
    /**
     * The quota type.
     * - CommonQuota (default): Generic quota.
     * - FlowControl:API rate quota.
     * - WhiteListLabel: Equity quota.
     * 
     */
    @Export(name="quotaCategory", type=String.class, parameters={})
    private Output</* @Nullable */ String> quotaCategory;

    /**
     * @return The quota type.
     * - CommonQuota (default): Generic quota.
     * - FlowControl:API rate quota.
     * - WhiteListLabel: Equity quota.
     * 
     */
    public Output<Optional<String>> quotaCategory() {
        return Codegen.optional(this.quotaCategory);
    }
    /**
     * The description of the quota application.
     * 
     */
    @Export(name="quotaDescription", type=String.class, parameters={})
    private Output<String> quotaDescription;

    /**
     * @return The description of the quota application.
     * 
     */
    public Output<String> quotaDescription() {
        return this.quotaDescription;
    }
    /**
     * The name of the quota application.
     * 
     */
    @Export(name="quotaName", type=String.class, parameters={})
    private Output<String> quotaName;

    /**
     * @return The name of the quota application.
     * 
     */
    public Output<String> quotaName() {
        return this.quotaName;
    }
    /**
     * The unit of the quota application.
     * 
     */
    @Export(name="quotaUnit", type=String.class, parameters={})
    private Output<String> quotaUnit;

    /**
     * @return The unit of the quota application.
     * 
     */
    public Output<String> quotaUnit() {
        return this.quotaUnit;
    }
    /**
     * The reason of the quota application.
     * 
     */
    @Export(name="reason", type=String.class, parameters={})
    private Output<String> reason;

    /**
     * @return The reason of the quota application.
     * 
     */
    public Output<String> reason() {
        return this.reason;
    }
    /**
     * Application Status:
     * - Disagree: reject.
     * - Agree: Approved.
     * - Process: under review.
     * - Cancel: Closed.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return Application Status:
     * - Disagree: reject.
     * - Agree: Approved.
     * - Process: under review.
     * - Cancel: Closed.
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public QuotaApplication(String name) {
        this(name, QuotaApplicationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public QuotaApplication(String name, QuotaApplicationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public QuotaApplication(String name, QuotaApplicationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:quotas/quotaApplication:QuotaApplication", name, args == null ? QuotaApplicationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private QuotaApplication(String name, Output<String> id, @Nullable QuotaApplicationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:quotas/quotaApplication:QuotaApplication", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static QuotaApplication get(String name, Output<String> id, @Nullable QuotaApplicationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new QuotaApplication(name, id, state, options);
    }
}
