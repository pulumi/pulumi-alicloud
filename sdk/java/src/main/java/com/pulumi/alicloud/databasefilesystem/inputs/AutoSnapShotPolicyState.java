// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.databasefilesystem.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutoSnapShotPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final AutoSnapShotPolicyState Empty = new AutoSnapShotPolicyState();

    /**
     * The number of database file systems set by the automatic snapshot policy.
     * 
     */
    @Import(name="appliedDbfsNumber")
    private @Nullable Output<Integer> appliedDbfsNumber;

    /**
     * @return The number of database file systems set by the automatic snapshot policy.
     * 
     */
    public Optional<Output<Integer>> appliedDbfsNumber() {
        return Optional.ofNullable(this.appliedDbfsNumber);
    }

    /**
     * The creation time of the resource
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time of the resource
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Last modification time of automatic snapshot policy
     * 
     */
    @Import(name="lastModified")
    private @Nullable Output<String> lastModified;

    /**
     * @return Last modification time of automatic snapshot policy
     * 
     */
    public Optional<Output<String>> lastModified() {
        return Optional.ofNullable(this.lastModified);
    }

    /**
     * Automatic snapshot policy ID
     * 
     */
    @Import(name="policyId")
    private @Nullable Output<String> policyId;

    /**
     * @return Automatic snapshot policy ID
     * 
     */
    public Optional<Output<String>> policyId() {
        return Optional.ofNullable(this.policyId);
    }

    /**
     * Automatic snapshot policy name
     * 
     */
    @Import(name="policyName")
    private @Nullable Output<String> policyName;

    /**
     * @return Automatic snapshot policy name
     * 
     */
    public Optional<Output<String>> policyName() {
        return Optional.ofNullable(this.policyName);
    }

    /**
     * A collection of automatic snapshots performed on several days of the week. Value range: 1~7, for example, `1` means Monday.
     * 
     */
    @Import(name="repeatWeekdays")
    private @Nullable Output<List<String>> repeatWeekdays;

    /**
     * @return A collection of automatic snapshots performed on several days of the week. Value range: 1~7, for example, `1` means Monday.
     * 
     */
    public Optional<Output<List<String>>> repeatWeekdays() {
        return Optional.ofNullable(this.repeatWeekdays);
    }

    /**
     * Automatic snapshot retention days.
     * 
     */
    @Import(name="retentionDays")
    private @Nullable Output<Integer> retentionDays;

    /**
     * @return Automatic snapshot retention days.
     * 
     */
    public Optional<Output<Integer>> retentionDays() {
        return Optional.ofNullable(this.retentionDays);
    }

    /**
     * Automatic snapshot policy status
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Automatic snapshot policy status
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Automatic snapshot policy status details
     * 
     */
    @Import(name="statusDetail")
    private @Nullable Output<String> statusDetail;

    /**
     * @return Automatic snapshot policy status details
     * 
     */
    public Optional<Output<String>> statusDetail() {
        return Optional.ofNullable(this.statusDetail);
    }

    /**
     * The set of times at which the snapshot is taken on the day the automatic snapshot is executed. Value range: `00` to `23`, representing 24 time points from 00:00 to 23:00, for example, `01` indicates 01:00.
     * 
     */
    @Import(name="timePoints")
    private @Nullable Output<List<String>> timePoints;

    /**
     * @return The set of times at which the snapshot is taken on the day the automatic snapshot is executed. Value range: `00` to `23`, representing 24 time points from 00:00 to 23:00, for example, `01` indicates 01:00.
     * 
     */
    public Optional<Output<List<String>>> timePoints() {
        return Optional.ofNullable(this.timePoints);
    }

    private AutoSnapShotPolicyState() {}

    private AutoSnapShotPolicyState(AutoSnapShotPolicyState $) {
        this.appliedDbfsNumber = $.appliedDbfsNumber;
        this.createTime = $.createTime;
        this.lastModified = $.lastModified;
        this.policyId = $.policyId;
        this.policyName = $.policyName;
        this.repeatWeekdays = $.repeatWeekdays;
        this.retentionDays = $.retentionDays;
        this.status = $.status;
        this.statusDetail = $.statusDetail;
        this.timePoints = $.timePoints;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutoSnapShotPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutoSnapShotPolicyState $;

        public Builder() {
            $ = new AutoSnapShotPolicyState();
        }

        public Builder(AutoSnapShotPolicyState defaults) {
            $ = new AutoSnapShotPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param appliedDbfsNumber The number of database file systems set by the automatic snapshot policy.
         * 
         * @return builder
         * 
         */
        public Builder appliedDbfsNumber(@Nullable Output<Integer> appliedDbfsNumber) {
            $.appliedDbfsNumber = appliedDbfsNumber;
            return this;
        }

        /**
         * @param appliedDbfsNumber The number of database file systems set by the automatic snapshot policy.
         * 
         * @return builder
         * 
         */
        public Builder appliedDbfsNumber(Integer appliedDbfsNumber) {
            return appliedDbfsNumber(Output.of(appliedDbfsNumber));
        }

        /**
         * @param createTime The creation time of the resource
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the resource
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param lastModified Last modification time of automatic snapshot policy
         * 
         * @return builder
         * 
         */
        public Builder lastModified(@Nullable Output<String> lastModified) {
            $.lastModified = lastModified;
            return this;
        }

        /**
         * @param lastModified Last modification time of automatic snapshot policy
         * 
         * @return builder
         * 
         */
        public Builder lastModified(String lastModified) {
            return lastModified(Output.of(lastModified));
        }

        /**
         * @param policyId Automatic snapshot policy ID
         * 
         * @return builder
         * 
         */
        public Builder policyId(@Nullable Output<String> policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param policyId Automatic snapshot policy ID
         * 
         * @return builder
         * 
         */
        public Builder policyId(String policyId) {
            return policyId(Output.of(policyId));
        }

        /**
         * @param policyName Automatic snapshot policy name
         * 
         * @return builder
         * 
         */
        public Builder policyName(@Nullable Output<String> policyName) {
            $.policyName = policyName;
            return this;
        }

        /**
         * @param policyName Automatic snapshot policy name
         * 
         * @return builder
         * 
         */
        public Builder policyName(String policyName) {
            return policyName(Output.of(policyName));
        }

        /**
         * @param repeatWeekdays A collection of automatic snapshots performed on several days of the week. Value range: 1~7, for example, `1` means Monday.
         * 
         * @return builder
         * 
         */
        public Builder repeatWeekdays(@Nullable Output<List<String>> repeatWeekdays) {
            $.repeatWeekdays = repeatWeekdays;
            return this;
        }

        /**
         * @param repeatWeekdays A collection of automatic snapshots performed on several days of the week. Value range: 1~7, for example, `1` means Monday.
         * 
         * @return builder
         * 
         */
        public Builder repeatWeekdays(List<String> repeatWeekdays) {
            return repeatWeekdays(Output.of(repeatWeekdays));
        }

        /**
         * @param repeatWeekdays A collection of automatic snapshots performed on several days of the week. Value range: 1~7, for example, `1` means Monday.
         * 
         * @return builder
         * 
         */
        public Builder repeatWeekdays(String... repeatWeekdays) {
            return repeatWeekdays(List.of(repeatWeekdays));
        }

        /**
         * @param retentionDays Automatic snapshot retention days.
         * 
         * @return builder
         * 
         */
        public Builder retentionDays(@Nullable Output<Integer> retentionDays) {
            $.retentionDays = retentionDays;
            return this;
        }

        /**
         * @param retentionDays Automatic snapshot retention days.
         * 
         * @return builder
         * 
         */
        public Builder retentionDays(Integer retentionDays) {
            return retentionDays(Output.of(retentionDays));
        }

        /**
         * @param status Automatic snapshot policy status
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Automatic snapshot policy status
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param statusDetail Automatic snapshot policy status details
         * 
         * @return builder
         * 
         */
        public Builder statusDetail(@Nullable Output<String> statusDetail) {
            $.statusDetail = statusDetail;
            return this;
        }

        /**
         * @param statusDetail Automatic snapshot policy status details
         * 
         * @return builder
         * 
         */
        public Builder statusDetail(String statusDetail) {
            return statusDetail(Output.of(statusDetail));
        }

        /**
         * @param timePoints The set of times at which the snapshot is taken on the day the automatic snapshot is executed. Value range: `00` to `23`, representing 24 time points from 00:00 to 23:00, for example, `01` indicates 01:00.
         * 
         * @return builder
         * 
         */
        public Builder timePoints(@Nullable Output<List<String>> timePoints) {
            $.timePoints = timePoints;
            return this;
        }

        /**
         * @param timePoints The set of times at which the snapshot is taken on the day the automatic snapshot is executed. Value range: `00` to `23`, representing 24 time points from 00:00 to 23:00, for example, `01` indicates 01:00.
         * 
         * @return builder
         * 
         */
        public Builder timePoints(List<String> timePoints) {
            return timePoints(Output.of(timePoints));
        }

        /**
         * @param timePoints The set of times at which the snapshot is taken on the day the automatic snapshot is executed. Value range: `00` to `23`, representing 24 time points from 00:00 to 23:00, for example, `01` indicates 01:00.
         * 
         * @return builder
         * 
         */
        public Builder timePoints(String... timePoints) {
            return timePoints(List.of(timePoints));
        }

        public AutoSnapShotPolicyState build() {
            return $;
        }
    }

}
