// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rds;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReadWriteSplittingConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReadWriteSplittingConnectionArgs Empty = new ReadWriteSplittingConnectionArgs();

    /**
     * Prefix of an Internet connection string. It must be checked for uniqueness. It may consist of lowercase letters, numbers, and underlines, and must start with a letter and have no more than 30 characters. Default to &lt;instance_id&gt; + &#39;rw&#39;.
     * 
     */
    @Import(name="connectionPrefix")
    private @Nullable Output<String> connectionPrefix;

    /**
     * @return Prefix of an Internet connection string. It must be checked for uniqueness. It may consist of lowercase letters, numbers, and underlines, and must start with a letter and have no more than 30 characters. Default to &lt;instance_id&gt; + &#39;rw&#39;.
     * 
     */
    public Optional<Output<String>> connectionPrefix() {
        return Optional.ofNullable(this.connectionPrefix);
    }

    /**
     * Read weight distribution mode. Values are as follows: `Standard` indicates automatic weight distribution based on types, `Custom` indicates custom weight distribution.
     * 
     */
    @Import(name="distributionType", required=true)
    private Output<String> distributionType;

    /**
     * @return Read weight distribution mode. Values are as follows: `Standard` indicates automatic weight distribution based on types, `Custom` indicates custom weight distribution.
     * 
     */
    public Output<String> distributionType() {
        return this.distributionType;
    }

    /**
     * The Id of instance that can run database.
     * 
     */
    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    /**
     * @return The Id of instance that can run database.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }

    /**
     * Delay threshold, in seconds. The value range is 0 to 7200. Default to 30. Read requests are not routed to the read-only instances with a delay greater than the threshold.
     * 
     */
    @Import(name="maxDelayTime")
    private @Nullable Output<Integer> maxDelayTime;

    /**
     * @return Delay threshold, in seconds. The value range is 0 to 7200. Default to 30. Read requests are not routed to the read-only instances with a delay greater than the threshold.
     * 
     */
    public Optional<Output<Integer>> maxDelayTime() {
        return Optional.ofNullable(this.maxDelayTime);
    }

    /**
     * Intranet connection port. Valid value: [3001-3999]. Default to 3306.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return Intranet connection port. Valid value: [3001-3999]. Default to 3306.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * Read weight distribution. Read weights increase at a step of 100 up to 10,000. Enter weights in the following format: {&#34;Instanceid&#34;:&#34;Weight&#34;,&#34;Instanceid&#34;:&#34;Weight&#34;}. This parameter must be set when distribution_type is set to Custom.
     * 
     */
    @Import(name="weight")
    private @Nullable Output<Map<String,Object>> weight;

    /**
     * @return Read weight distribution. Read weights increase at a step of 100 up to 10,000. Enter weights in the following format: {&#34;Instanceid&#34;:&#34;Weight&#34;,&#34;Instanceid&#34;:&#34;Weight&#34;}. This parameter must be set when distribution_type is set to Custom.
     * 
     */
    public Optional<Output<Map<String,Object>>> weight() {
        return Optional.ofNullable(this.weight);
    }

    private ReadWriteSplittingConnectionArgs() {}

    private ReadWriteSplittingConnectionArgs(ReadWriteSplittingConnectionArgs $) {
        this.connectionPrefix = $.connectionPrefix;
        this.distributionType = $.distributionType;
        this.instanceId = $.instanceId;
        this.maxDelayTime = $.maxDelayTime;
        this.port = $.port;
        this.weight = $.weight;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReadWriteSplittingConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReadWriteSplittingConnectionArgs $;

        public Builder() {
            $ = new ReadWriteSplittingConnectionArgs();
        }

        public Builder(ReadWriteSplittingConnectionArgs defaults) {
            $ = new ReadWriteSplittingConnectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionPrefix Prefix of an Internet connection string. It must be checked for uniqueness. It may consist of lowercase letters, numbers, and underlines, and must start with a letter and have no more than 30 characters. Default to &lt;instance_id&gt; + &#39;rw&#39;.
         * 
         * @return builder
         * 
         */
        public Builder connectionPrefix(@Nullable Output<String> connectionPrefix) {
            $.connectionPrefix = connectionPrefix;
            return this;
        }

        /**
         * @param connectionPrefix Prefix of an Internet connection string. It must be checked for uniqueness. It may consist of lowercase letters, numbers, and underlines, and must start with a letter and have no more than 30 characters. Default to &lt;instance_id&gt; + &#39;rw&#39;.
         * 
         * @return builder
         * 
         */
        public Builder connectionPrefix(String connectionPrefix) {
            return connectionPrefix(Output.of(connectionPrefix));
        }

        /**
         * @param distributionType Read weight distribution mode. Values are as follows: `Standard` indicates automatic weight distribution based on types, `Custom` indicates custom weight distribution.
         * 
         * @return builder
         * 
         */
        public Builder distributionType(Output<String> distributionType) {
            $.distributionType = distributionType;
            return this;
        }

        /**
         * @param distributionType Read weight distribution mode. Values are as follows: `Standard` indicates automatic weight distribution based on types, `Custom` indicates custom weight distribution.
         * 
         * @return builder
         * 
         */
        public Builder distributionType(String distributionType) {
            return distributionType(Output.of(distributionType));
        }

        /**
         * @param instanceId The Id of instance that can run database.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The Id of instance that can run database.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param maxDelayTime Delay threshold, in seconds. The value range is 0 to 7200. Default to 30. Read requests are not routed to the read-only instances with a delay greater than the threshold.
         * 
         * @return builder
         * 
         */
        public Builder maxDelayTime(@Nullable Output<Integer> maxDelayTime) {
            $.maxDelayTime = maxDelayTime;
            return this;
        }

        /**
         * @param maxDelayTime Delay threshold, in seconds. The value range is 0 to 7200. Default to 30. Read requests are not routed to the read-only instances with a delay greater than the threshold.
         * 
         * @return builder
         * 
         */
        public Builder maxDelayTime(Integer maxDelayTime) {
            return maxDelayTime(Output.of(maxDelayTime));
        }

        /**
         * @param port Intranet connection port. Valid value: [3001-3999]. Default to 3306.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port Intranet connection port. Valid value: [3001-3999]. Default to 3306.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param weight Read weight distribution. Read weights increase at a step of 100 up to 10,000. Enter weights in the following format: {&#34;Instanceid&#34;:&#34;Weight&#34;,&#34;Instanceid&#34;:&#34;Weight&#34;}. This parameter must be set when distribution_type is set to Custom.
         * 
         * @return builder
         * 
         */
        public Builder weight(@Nullable Output<Map<String,Object>> weight) {
            $.weight = weight;
            return this;
        }

        /**
         * @param weight Read weight distribution. Read weights increase at a step of 100 up to 10,000. Enter weights in the following format: {&#34;Instanceid&#34;:&#34;Weight&#34;,&#34;Instanceid&#34;:&#34;Weight&#34;}. This parameter must be set when distribution_type is set to Custom.
         * 
         * @return builder
         * 
         */
        public Builder weight(Map<String,Object> weight) {
            return weight(Output.of(weight));
        }

        public ReadWriteSplittingConnectionArgs build() {
            if ($.distributionType == null) {
                throw new MissingRequiredPropertyException("ReadWriteSplittingConnectionArgs", "distributionType");
            }
            if ($.instanceId == null) {
                throw new MissingRequiredPropertyException("ReadWriteSplittingConnectionArgs", "instanceId");
            }
            return $;
        }
    }

}
