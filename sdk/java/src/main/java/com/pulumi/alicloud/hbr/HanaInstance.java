// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.hbr;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.hbr.HanaInstanceArgs;
import com.pulumi.alicloud.hbr.inputs.HanaInstanceState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Hybrid Backup Recovery (HBR) Hana Instance resource.
 * 
 * For information about Hybrid Backup Recovery (HBR) Hana Instance and how to use it, see [What is Hana Instance](https://www.alibabacloud.com/help/en/hybrid-backup-recovery/latest/api-doc-hbr-2017-09-08-api-doc-createhanainstance).
 * 
 * &gt; **NOTE:** Available in v1.178.0+.
 * 
 * &gt; **NOTE:** The `sid` attribute is required when destroying resources.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
 * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
 * import com.pulumi.alicloud.hbr.Vault;
 * import com.pulumi.alicloud.hbr.VaultArgs;
 * import com.pulumi.alicloud.hbr.HanaInstance;
 * import com.pulumi.alicloud.hbr.HanaInstanceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var exampleResourceGroups = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
 *             .status(&#34;OK&#34;)
 *             .build());
 * 
 *         var exampleVault = new Vault(&#34;exampleVault&#34;, VaultArgs.builder()        
 *             .vaultName(&#34;terraform-example&#34;)
 *             .build());
 * 
 *         var exampleHanaInstance = new HanaInstance(&#34;exampleHanaInstance&#34;, HanaInstanceArgs.builder()        
 *             .alertSetting(&#34;INHERITED&#34;)
 *             .hanaName(&#34;terraform-example&#34;)
 *             .host(&#34;1.1.1.1&#34;)
 *             .instanceNumber(1)
 *             .password(&#34;YouPassword123&#34;)
 *             .resourceGroupId(exampleResourceGroups.applyValue(getResourceGroupsResult -&gt; getResourceGroupsResult.groups()[0].id()))
 *             .sid(&#34;HXE&#34;)
 *             .useSsl(false)
 *             .userName(&#34;admin&#34;)
 *             .validateCertificate(false)
 *             .vaultId(exampleVault.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Hybrid Backup Recovery (HBR) Hana Instance can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:hbr/hanaInstance:HanaInstance example &lt;vault_id&gt;:&lt;hana_instance_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:hbr/hanaInstance:HanaInstance")
public class HanaInstance extends com.pulumi.resources.CustomResource {
    /**
     * The alert settings. Valid value: `INHERITED`, which indicates that the backup client sends alert notifications in the same way as the backup vault.
     * 
     */
    @Export(name="alertSetting", type=String.class, parameters={})
    private Output<String> alertSetting;

    /**
     * @return The alert settings. Valid value: `INHERITED`, which indicates that the backup client sends alert notifications in the same way as the backup vault.
     * 
     */
    public Output<String> alertSetting() {
        return this.alertSetting;
    }
    /**
     * The IDs of ECS instances that host the SAP HANA instance to be registered. HBR installs backup clients on the specified ECS instances.
     * 
     */
    @Export(name="ecsInstanceIds", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> ecsInstanceIds;

    /**
     * @return The IDs of ECS instances that host the SAP HANA instance to be registered. HBR installs backup clients on the specified ECS instances.
     * 
     */
    public Output<Optional<List<String>>> ecsInstanceIds() {
        return Codegen.optional(this.ecsInstanceIds);
    }
    /**
     * The id of the Hana Instance.
     * 
     */
    @Export(name="hanaInstanceId", type=String.class, parameters={})
    private Output<String> hanaInstanceId;

    /**
     * @return The id of the Hana Instance.
     * 
     */
    public Output<String> hanaInstanceId() {
        return this.hanaInstanceId;
    }
    /**
     * The name of the SAP HANA instance.
     * 
     */
    @Export(name="hanaName", type=String.class, parameters={})
    private Output</* @Nullable */ String> hanaName;

    /**
     * @return The name of the SAP HANA instance.
     * 
     */
    public Output<Optional<String>> hanaName() {
        return Codegen.optional(this.hanaName);
    }
    /**
     * The private or internal IP address of the host where the primary node of the SAP HANA instance resides.
     * 
     */
    @Export(name="host", type=String.class, parameters={})
    private Output</* @Nullable */ String> host;

    /**
     * @return The private or internal IP address of the host where the primary node of the SAP HANA instance resides.
     * 
     */
    public Output<Optional<String>> host() {
        return Codegen.optional(this.host);
    }
    /**
     * The instance number of the SAP HANA system.
     * 
     */
    @Export(name="instanceNumber", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> instanceNumber;

    /**
     * @return The instance number of the SAP HANA system.
     * 
     */
    public Output<Optional<Integer>> instanceNumber() {
        return Codegen.optional(this.instanceNumber);
    }
    /**
     * The password that is used to connect with the SAP HANA database.
     * 
     */
    @Export(name="password", type=String.class, parameters={})
    private Output</* @Nullable */ String> password;

    /**
     * @return The password that is used to connect with the SAP HANA database.
     * 
     */
    public Output<Optional<String>> password() {
        return Codegen.optional(this.password);
    }
    /**
     * The ID of the resource group.
     * 
     */
    @Export(name="resourceGroupId", type=String.class, parameters={})
    private Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group.
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * The security identifier (SID) of the SAP HANA database.
     * 
     */
    @Export(name="sid", type=String.class, parameters={})
    private Output</* @Nullable */ String> sid;

    /**
     * @return The security identifier (SID) of the SAP HANA database.
     * 
     */
    public Output<Optional<String>> sid() {
        return Codegen.optional(this.sid);
    }
    /**
     * The status of the resource.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return The status of the resource.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Specifies whether to connect with the SAP HANA database over Secure Sockets Layer (SSL).
     * 
     */
    @Export(name="useSsl", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> useSsl;

    /**
     * @return Specifies whether to connect with the SAP HANA database over Secure Sockets Layer (SSL).
     * 
     */
    public Output<Optional<Boolean>> useSsl() {
        return Codegen.optional(this.useSsl);
    }
    /**
     * The username of the SYSTEMDB database.
     * 
     */
    @Export(name="userName", type=String.class, parameters={})
    private Output</* @Nullable */ String> userName;

    /**
     * @return The username of the SYSTEMDB database.
     * 
     */
    public Output<Optional<String>> userName() {
        return Codegen.optional(this.userName);
    }
    /**
     * Specifies whether to verify the SSL certificate of the SAP HANA database.
     * 
     */
    @Export(name="validateCertificate", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> validateCertificate;

    /**
     * @return Specifies whether to verify the SSL certificate of the SAP HANA database.
     * 
     */
    public Output<Optional<Boolean>> validateCertificate() {
        return Codegen.optional(this.validateCertificate);
    }
    /**
     * The ID of the backup vault.
     * 
     */
    @Export(name="vaultId", type=String.class, parameters={})
    private Output<String> vaultId;

    /**
     * @return The ID of the backup vault.
     * 
     */
    public Output<String> vaultId() {
        return this.vaultId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public HanaInstance(String name) {
        this(name, HanaInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public HanaInstance(String name, HanaInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public HanaInstance(String name, HanaInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:hbr/hanaInstance:HanaInstance", name, args == null ? HanaInstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private HanaInstance(String name, Output<String> id, @Nullable HanaInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:hbr/hanaInstance:HanaInstance", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "password"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static HanaInstance get(String name, Output<String> id, @Nullable HanaInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new HanaInstance(name, id, state, options);
    }
}
