// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.kms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkRuleState extends com.pulumi.resources.ResourceArgs {

    public static final NetworkRuleState Empty = new NetworkRuleState();

    /**
     * Description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Network Rule Name.
     * 
     */
    @Import(name="networkRuleName")
    private @Nullable Output<String> networkRuleName;

    /**
     * @return Network Rule Name.
     * 
     */
    public Optional<Output<String>> networkRuleName() {
        return Optional.ofNullable(this.networkRuleName);
    }

    /**
     * Allowed private network addresses.
     * 
     */
    @Import(name="sourcePrivateIps")
    private @Nullable Output<List<String>> sourcePrivateIps;

    /**
     * @return Allowed private network addresses.
     * 
     */
    public Optional<Output<List<String>>> sourcePrivateIps() {
        return Optional.ofNullable(this.sourcePrivateIps);
    }

    private NetworkRuleState() {}

    private NetworkRuleState(NetworkRuleState $) {
        this.description = $.description;
        this.networkRuleName = $.networkRuleName;
        this.sourcePrivateIps = $.sourcePrivateIps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkRuleState $;

        public Builder() {
            $ = new NetworkRuleState();
        }

        public Builder(NetworkRuleState defaults) {
            $ = new NetworkRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param networkRuleName Network Rule Name.
         * 
         * @return builder
         * 
         */
        public Builder networkRuleName(@Nullable Output<String> networkRuleName) {
            $.networkRuleName = networkRuleName;
            return this;
        }

        /**
         * @param networkRuleName Network Rule Name.
         * 
         * @return builder
         * 
         */
        public Builder networkRuleName(String networkRuleName) {
            return networkRuleName(Output.of(networkRuleName));
        }

        /**
         * @param sourcePrivateIps Allowed private network addresses.
         * 
         * @return builder
         * 
         */
        public Builder sourcePrivateIps(@Nullable Output<List<String>> sourcePrivateIps) {
            $.sourcePrivateIps = sourcePrivateIps;
            return this;
        }

        /**
         * @param sourcePrivateIps Allowed private network addresses.
         * 
         * @return builder
         * 
         */
        public Builder sourcePrivateIps(List<String> sourcePrivateIps) {
            return sourcePrivateIps(Output.of(sourcePrivateIps));
        }

        /**
         * @param sourcePrivateIps Allowed private network addresses.
         * 
         * @return builder
         * 
         */
        public Builder sourcePrivateIps(String... sourcePrivateIps) {
            return sourcePrivateIps(List.of(sourcePrivateIps));
        }

        public NetworkRuleState build() {
            return $;
        }
    }

}
