// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cdn.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainReferConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainReferConfigArgs Empty = new DomainReferConfigArgs();

    @Import(name="allowEmpty")
    private @Nullable Output<String> allowEmpty;

    public Optional<Output<String>> allowEmpty() {
        return Optional.ofNullable(this.allowEmpty);
    }

    @Import(name="referLists", required=true)
    private Output<List<String>> referLists;

    public Output<List<String>> referLists() {
        return this.referLists;
    }

    @Import(name="referType")
    private @Nullable Output<String> referType;

    public Optional<Output<String>> referType() {
        return Optional.ofNullable(this.referType);
    }

    private DomainReferConfigArgs() {}

    private DomainReferConfigArgs(DomainReferConfigArgs $) {
        this.allowEmpty = $.allowEmpty;
        this.referLists = $.referLists;
        this.referType = $.referType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainReferConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainReferConfigArgs $;

        public Builder() {
            $ = new DomainReferConfigArgs();
        }

        public Builder(DomainReferConfigArgs defaults) {
            $ = new DomainReferConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowEmpty(@Nullable Output<String> allowEmpty) {
            $.allowEmpty = allowEmpty;
            return this;
        }

        public Builder allowEmpty(String allowEmpty) {
            return allowEmpty(Output.of(allowEmpty));
        }

        public Builder referLists(Output<List<String>> referLists) {
            $.referLists = referLists;
            return this;
        }

        public Builder referLists(List<String> referLists) {
            return referLists(Output.of(referLists));
        }

        public Builder referLists(String... referLists) {
            return referLists(List.of(referLists));
        }

        public Builder referType(@Nullable Output<String> referType) {
            $.referType = referType;
            return this;
        }

        public Builder referType(String referType) {
            return referType(Output.of(referType));
        }

        public DomainReferConfigArgs build() {
            if ($.referLists == null) {
                throw new MissingRequiredPropertyException("DomainReferConfigArgs", "referLists");
            }
            return $;
        }
    }

}
