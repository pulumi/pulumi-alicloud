// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLoadBalancersBalancerZoneMappingLoadBalancerAddress {
    /**
     * @return IPv4 address.
     * 
     */
    private String address;
    /**
     * @return The elastic IP address (EIP).
     * 
     */
    private String allocationId;
    /**
     * @return The type of EIP.
     * 
     */
    private String eipType;
    /**
     * @return The private IPv4 address.
     * 
     */
    private String intranetAddress;
    /**
     * @return The health status of the private IPv4 address of the ALB instance.
     * 
     */
    private String intranetAddressHcStatus;
    /**
     * @return The IPv4 link-local addresses.
     * 
     */
    private List<String> ipv4LocalAddresses;
    /**
     * @return IPv6 address.
     * 
     */
    private String ipv6Address;
    /**
     * @return The health status of the private IPv6 address of the ALB instance.
     * 
     */
    private String ipv6AddressHcStatus;
    /**
     * @return The IPv6 link-local addresses.
     * 
     */
    private List<String> ipv6LocalAddresses;

    private GetLoadBalancersBalancerZoneMappingLoadBalancerAddress() {}
    /**
     * @return IPv4 address.
     * 
     */
    public String address() {
        return this.address;
    }
    /**
     * @return The elastic IP address (EIP).
     * 
     */
    public String allocationId() {
        return this.allocationId;
    }
    /**
     * @return The type of EIP.
     * 
     */
    public String eipType() {
        return this.eipType;
    }
    /**
     * @return The private IPv4 address.
     * 
     */
    public String intranetAddress() {
        return this.intranetAddress;
    }
    /**
     * @return The health status of the private IPv4 address of the ALB instance.
     * 
     */
    public String intranetAddressHcStatus() {
        return this.intranetAddressHcStatus;
    }
    /**
     * @return The IPv4 link-local addresses.
     * 
     */
    public List<String> ipv4LocalAddresses() {
        return this.ipv4LocalAddresses;
    }
    /**
     * @return IPv6 address.
     * 
     */
    public String ipv6Address() {
        return this.ipv6Address;
    }
    /**
     * @return The health status of the private IPv6 address of the ALB instance.
     * 
     */
    public String ipv6AddressHcStatus() {
        return this.ipv6AddressHcStatus;
    }
    /**
     * @return The IPv6 link-local addresses.
     * 
     */
    public List<String> ipv6LocalAddresses() {
        return this.ipv6LocalAddresses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLoadBalancersBalancerZoneMappingLoadBalancerAddress defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String address;
        private String allocationId;
        private String eipType;
        private String intranetAddress;
        private String intranetAddressHcStatus;
        private List<String> ipv4LocalAddresses;
        private String ipv6Address;
        private String ipv6AddressHcStatus;
        private List<String> ipv6LocalAddresses;
        public Builder() {}
        public Builder(GetLoadBalancersBalancerZoneMappingLoadBalancerAddress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.allocationId = defaults.allocationId;
    	      this.eipType = defaults.eipType;
    	      this.intranetAddress = defaults.intranetAddress;
    	      this.intranetAddressHcStatus = defaults.intranetAddressHcStatus;
    	      this.ipv4LocalAddresses = defaults.ipv4LocalAddresses;
    	      this.ipv6Address = defaults.ipv6Address;
    	      this.ipv6AddressHcStatus = defaults.ipv6AddressHcStatus;
    	      this.ipv6LocalAddresses = defaults.ipv6LocalAddresses;
        }

        @CustomType.Setter
        public Builder address(String address) {
            if (address == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancersBalancerZoneMappingLoadBalancerAddress", "address");
            }
            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder allocationId(String allocationId) {
            if (allocationId == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancersBalancerZoneMappingLoadBalancerAddress", "allocationId");
            }
            this.allocationId = allocationId;
            return this;
        }
        @CustomType.Setter
        public Builder eipType(String eipType) {
            if (eipType == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancersBalancerZoneMappingLoadBalancerAddress", "eipType");
            }
            this.eipType = eipType;
            return this;
        }
        @CustomType.Setter
        public Builder intranetAddress(String intranetAddress) {
            if (intranetAddress == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancersBalancerZoneMappingLoadBalancerAddress", "intranetAddress");
            }
            this.intranetAddress = intranetAddress;
            return this;
        }
        @CustomType.Setter
        public Builder intranetAddressHcStatus(String intranetAddressHcStatus) {
            if (intranetAddressHcStatus == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancersBalancerZoneMappingLoadBalancerAddress", "intranetAddressHcStatus");
            }
            this.intranetAddressHcStatus = intranetAddressHcStatus;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4LocalAddresses(List<String> ipv4LocalAddresses) {
            if (ipv4LocalAddresses == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancersBalancerZoneMappingLoadBalancerAddress", "ipv4LocalAddresses");
            }
            this.ipv4LocalAddresses = ipv4LocalAddresses;
            return this;
        }
        public Builder ipv4LocalAddresses(String... ipv4LocalAddresses) {
            return ipv4LocalAddresses(List.of(ipv4LocalAddresses));
        }
        @CustomType.Setter
        public Builder ipv6Address(String ipv6Address) {
            if (ipv6Address == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancersBalancerZoneMappingLoadBalancerAddress", "ipv6Address");
            }
            this.ipv6Address = ipv6Address;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6AddressHcStatus(String ipv6AddressHcStatus) {
            if (ipv6AddressHcStatus == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancersBalancerZoneMappingLoadBalancerAddress", "ipv6AddressHcStatus");
            }
            this.ipv6AddressHcStatus = ipv6AddressHcStatus;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6LocalAddresses(List<String> ipv6LocalAddresses) {
            if (ipv6LocalAddresses == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancersBalancerZoneMappingLoadBalancerAddress", "ipv6LocalAddresses");
            }
            this.ipv6LocalAddresses = ipv6LocalAddresses;
            return this;
        }
        public Builder ipv6LocalAddresses(String... ipv6LocalAddresses) {
            return ipv6LocalAddresses(List.of(ipv6LocalAddresses));
        }
        public GetLoadBalancersBalancerZoneMappingLoadBalancerAddress build() {
            final var _resultValue = new GetLoadBalancersBalancerZoneMappingLoadBalancerAddress();
            _resultValue.address = address;
            _resultValue.allocationId = allocationId;
            _resultValue.eipType = eipType;
            _resultValue.intranetAddress = intranetAddress;
            _resultValue.intranetAddressHcStatus = intranetAddressHcStatus;
            _resultValue.ipv4LocalAddresses = ipv4LocalAddresses;
            _resultValue.ipv6Address = ipv6Address;
            _resultValue.ipv6AddressHcStatus = ipv6AddressHcStatus;
            _resultValue.ipv6LocalAddresses = ipv6LocalAddresses;
            return _resultValue;
        }
    }
}
