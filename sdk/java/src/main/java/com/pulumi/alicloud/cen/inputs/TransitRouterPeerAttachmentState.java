// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransitRouterPeerAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final TransitRouterPeerAttachmentState Empty = new TransitRouterPeerAttachmentState();

    /**
     * Auto publish route enabled. The system default value is `false`.
     * 
     */
    @Import(name="autoPublishRouteEnabled")
    private @Nullable Output<Boolean> autoPublishRouteEnabled;

    /**
     * @return Auto publish route enabled. The system default value is `false`.
     * 
     */
    public Optional<Output<Boolean>> autoPublishRouteEnabled() {
        return Optional.ofNullable(this.autoPublishRouteEnabled);
    }

    /**
     * The bandwidth of the bandwidth package.
     * 
     */
    @Import(name="bandwidth")
    private @Nullable Output<Integer> bandwidth;

    /**
     * @return The bandwidth of the bandwidth package.
     * 
     */
    public Optional<Output<Integer>> bandwidth() {
        return Optional.ofNullable(this.bandwidth);
    }

    /**
     * The method that is used to allocate bandwidth to the cross-region connection. Valid values: `BandwidthPackage` and `DataTransfer`.
     * * `DataTransfer` - uses pay-by-data-transfer bandwidth.
     * * `BandwidthPackage` - allocates bandwidth from a bandwidth plan.
     * 
     */
    @Import(name="bandwidthType")
    private @Nullable Output<String> bandwidthType;

    /**
     * @return The method that is used to allocate bandwidth to the cross-region connection. Valid values: `BandwidthPackage` and `DataTransfer`.
     * * `DataTransfer` - uses pay-by-data-transfer bandwidth.
     * * `BandwidthPackage` - allocates bandwidth from a bandwidth plan.
     * 
     */
    public Optional<Output<String>> bandwidthType() {
        return Optional.ofNullable(this.bandwidthType);
    }

    /**
     * The ID of the bandwidth package. If you do not enter the ID of the package, it means you are using the test. The system default test is 1bps, demonstrating that you test network connectivity
     * 
     */
    @Import(name="cenBandwidthPackageId")
    private @Nullable Output<String> cenBandwidthPackageId;

    /**
     * @return The ID of the bandwidth package. If you do not enter the ID of the package, it means you are using the test. The system default test is 1bps, demonstrating that you test network connectivity
     * 
     */
    public Optional<Output<String>> cenBandwidthPackageId() {
        return Optional.ofNullable(this.cenBandwidthPackageId);
    }

    /**
     * The ID of the CEN.
     * 
     */
    @Import(name="cenId")
    private @Nullable Output<String> cenId;

    /**
     * @return The ID of the CEN.
     * 
     */
    public Optional<Output<String>> cenId() {
        return Optional.ofNullable(this.cenId);
    }

    /**
     * The creation time of the resource.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time of the resource.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * DefaultLinkType. Valid values: `Platinum` and `Gold`.
     * 
     */
    @Import(name="defaultLinkType")
    private @Nullable Output<String> defaultLinkType;

    /**
     * @return DefaultLinkType. Valid values: `Platinum` and `Gold`.
     * 
     */
    public Optional<Output<String>> defaultLinkType() {
        return Optional.ofNullable(this.defaultLinkType);
    }

    /**
     * Whether to perform pre-check for this request, including permission, instance status verification, etc.
     * 
     */
    @Import(name="dryRun")
    private @Nullable Output<Boolean> dryRun;

    /**
     * @return Whether to perform pre-check for this request, including permission, instance status verification, etc.
     * 
     */
    public Optional<Output<Boolean>> dryRun() {
        return Optional.ofNullable(this.dryRun);
    }

    /**
     * The ID of the peer transit router.
     * 
     */
    @Import(name="peerTransitRouterId")
    private @Nullable Output<String> peerTransitRouterId;

    /**
     * @return The ID of the peer transit router.
     * 
     */
    public Optional<Output<String>> peerTransitRouterId() {
        return Optional.ofNullable(this.peerTransitRouterId);
    }

    /**
     * The region ID of peer transit router.
     * 
     */
    @Import(name="peerTransitRouterRegionId")
    private @Nullable Output<String> peerTransitRouterRegionId;

    /**
     * @return The region ID of peer transit router.
     * 
     */
    public Optional<Output<String>> peerTransitRouterRegionId() {
        return Optional.ofNullable(this.peerTransitRouterRegionId);
    }

    /**
     * The resource type to attachment. Only support `VR` and default value is `VR`.
     * 
     */
    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    /**
     * @return The resource type to attachment. Only support `VR` and default value is `VR`.
     * 
     */
    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    /**
     * Field `route_table_association_enabled` has been deprecated from provider version 1.230.0.
     * 
     * @deprecated
     * Field `route_table_association_enabled` has been deprecated from provider version 1.230.0.
     * 
     */
    @Deprecated /* Field `route_table_association_enabled` has been deprecated from provider version 1.230.0. */
    @Import(name="routeTableAssociationEnabled")
    private @Nullable Output<Boolean> routeTableAssociationEnabled;

    /**
     * @return Field `route_table_association_enabled` has been deprecated from provider version 1.230.0.
     * 
     * @deprecated
     * Field `route_table_association_enabled` has been deprecated from provider version 1.230.0.
     * 
     */
    @Deprecated /* Field `route_table_association_enabled` has been deprecated from provider version 1.230.0. */
    public Optional<Output<Boolean>> routeTableAssociationEnabled() {
        return Optional.ofNullable(this.routeTableAssociationEnabled);
    }

    /**
     * Field `route_table_propagation_enabled` has been deprecated from provider version 1.230.0.
     * 
     * @deprecated
     * Field `route_table_propagation_enabled` has been deprecated from provider version 1.230.0.
     * 
     */
    @Deprecated /* Field `route_table_propagation_enabled` has been deprecated from provider version 1.230.0. */
    @Import(name="routeTablePropagationEnabled")
    private @Nullable Output<Boolean> routeTablePropagationEnabled;

    /**
     * @return Field `route_table_propagation_enabled` has been deprecated from provider version 1.230.0.
     * 
     * @deprecated
     * Field `route_table_propagation_enabled` has been deprecated from provider version 1.230.0.
     * 
     */
    @Deprecated /* Field `route_table_propagation_enabled` has been deprecated from provider version 1.230.0. */
    public Optional<Output<Boolean>> routeTablePropagationEnabled() {
        return Optional.ofNullable(this.routeTablePropagationEnabled);
    }

    /**
     * The status of the resource.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The description of transit router attachment. The description is 2~256 characters long and must start with a letter or Chinese, but cannot start with `http://` or `https://`.
     * 
     */
    @Import(name="transitRouterAttachmentDescription")
    private @Nullable Output<String> transitRouterAttachmentDescription;

    /**
     * @return The description of transit router attachment. The description is 2~256 characters long and must start with a letter or Chinese, but cannot start with `http://` or `https://`.
     * 
     */
    public Optional<Output<String>> transitRouterAttachmentDescription() {
        return Optional.ofNullable(this.transitRouterAttachmentDescription);
    }

    /**
     * The ID of transit router attachment.
     * 
     */
    @Import(name="transitRouterAttachmentId")
    private @Nullable Output<String> transitRouterAttachmentId;

    /**
     * @return The ID of transit router attachment.
     * 
     */
    public Optional<Output<String>> transitRouterAttachmentId() {
        return Optional.ofNullable(this.transitRouterAttachmentId);
    }

    /**
     * The name of transit router attachment. The name is 2~128 characters in length, starts with uppercase and lowercase letters or Chinese, and can contain numbers, underscores (_) and dashes (-)
     * 
     */
    @Import(name="transitRouterAttachmentName")
    private @Nullable Output<String> transitRouterAttachmentName;

    /**
     * @return The name of transit router attachment. The name is 2~128 characters in length, starts with uppercase and lowercase letters or Chinese, and can contain numbers, underscores (_) and dashes (-)
     * 
     */
    public Optional<Output<String>> transitRouterAttachmentName() {
        return Optional.ofNullable(this.transitRouterAttachmentName);
    }

    /**
     * The ID of the transit router to attach.
     * 
     */
    @Import(name="transitRouterId")
    private @Nullable Output<String> transitRouterId;

    /**
     * @return The ID of the transit router to attach.
     * 
     */
    public Optional<Output<String>> transitRouterId() {
        return Optional.ofNullable(this.transitRouterId);
    }

    private TransitRouterPeerAttachmentState() {}

    private TransitRouterPeerAttachmentState(TransitRouterPeerAttachmentState $) {
        this.autoPublishRouteEnabled = $.autoPublishRouteEnabled;
        this.bandwidth = $.bandwidth;
        this.bandwidthType = $.bandwidthType;
        this.cenBandwidthPackageId = $.cenBandwidthPackageId;
        this.cenId = $.cenId;
        this.createTime = $.createTime;
        this.defaultLinkType = $.defaultLinkType;
        this.dryRun = $.dryRun;
        this.peerTransitRouterId = $.peerTransitRouterId;
        this.peerTransitRouterRegionId = $.peerTransitRouterRegionId;
        this.resourceType = $.resourceType;
        this.routeTableAssociationEnabled = $.routeTableAssociationEnabled;
        this.routeTablePropagationEnabled = $.routeTablePropagationEnabled;
        this.status = $.status;
        this.transitRouterAttachmentDescription = $.transitRouterAttachmentDescription;
        this.transitRouterAttachmentId = $.transitRouterAttachmentId;
        this.transitRouterAttachmentName = $.transitRouterAttachmentName;
        this.transitRouterId = $.transitRouterId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransitRouterPeerAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransitRouterPeerAttachmentState $;

        public Builder() {
            $ = new TransitRouterPeerAttachmentState();
        }

        public Builder(TransitRouterPeerAttachmentState defaults) {
            $ = new TransitRouterPeerAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoPublishRouteEnabled Auto publish route enabled. The system default value is `false`.
         * 
         * @return builder
         * 
         */
        public Builder autoPublishRouteEnabled(@Nullable Output<Boolean> autoPublishRouteEnabled) {
            $.autoPublishRouteEnabled = autoPublishRouteEnabled;
            return this;
        }

        /**
         * @param autoPublishRouteEnabled Auto publish route enabled. The system default value is `false`.
         * 
         * @return builder
         * 
         */
        public Builder autoPublishRouteEnabled(Boolean autoPublishRouteEnabled) {
            return autoPublishRouteEnabled(Output.of(autoPublishRouteEnabled));
        }

        /**
         * @param bandwidth The bandwidth of the bandwidth package.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(@Nullable Output<Integer> bandwidth) {
            $.bandwidth = bandwidth;
            return this;
        }

        /**
         * @param bandwidth The bandwidth of the bandwidth package.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(Integer bandwidth) {
            return bandwidth(Output.of(bandwidth));
        }

        /**
         * @param bandwidthType The method that is used to allocate bandwidth to the cross-region connection. Valid values: `BandwidthPackage` and `DataTransfer`.
         * * `DataTransfer` - uses pay-by-data-transfer bandwidth.
         * * `BandwidthPackage` - allocates bandwidth from a bandwidth plan.
         * 
         * @return builder
         * 
         */
        public Builder bandwidthType(@Nullable Output<String> bandwidthType) {
            $.bandwidthType = bandwidthType;
            return this;
        }

        /**
         * @param bandwidthType The method that is used to allocate bandwidth to the cross-region connection. Valid values: `BandwidthPackage` and `DataTransfer`.
         * * `DataTransfer` - uses pay-by-data-transfer bandwidth.
         * * `BandwidthPackage` - allocates bandwidth from a bandwidth plan.
         * 
         * @return builder
         * 
         */
        public Builder bandwidthType(String bandwidthType) {
            return bandwidthType(Output.of(bandwidthType));
        }

        /**
         * @param cenBandwidthPackageId The ID of the bandwidth package. If you do not enter the ID of the package, it means you are using the test. The system default test is 1bps, demonstrating that you test network connectivity
         * 
         * @return builder
         * 
         */
        public Builder cenBandwidthPackageId(@Nullable Output<String> cenBandwidthPackageId) {
            $.cenBandwidthPackageId = cenBandwidthPackageId;
            return this;
        }

        /**
         * @param cenBandwidthPackageId The ID of the bandwidth package. If you do not enter the ID of the package, it means you are using the test. The system default test is 1bps, demonstrating that you test network connectivity
         * 
         * @return builder
         * 
         */
        public Builder cenBandwidthPackageId(String cenBandwidthPackageId) {
            return cenBandwidthPackageId(Output.of(cenBandwidthPackageId));
        }

        /**
         * @param cenId The ID of the CEN.
         * 
         * @return builder
         * 
         */
        public Builder cenId(@Nullable Output<String> cenId) {
            $.cenId = cenId;
            return this;
        }

        /**
         * @param cenId The ID of the CEN.
         * 
         * @return builder
         * 
         */
        public Builder cenId(String cenId) {
            return cenId(Output.of(cenId));
        }

        /**
         * @param createTime The creation time of the resource.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the resource.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param defaultLinkType DefaultLinkType. Valid values: `Platinum` and `Gold`.
         * 
         * @return builder
         * 
         */
        public Builder defaultLinkType(@Nullable Output<String> defaultLinkType) {
            $.defaultLinkType = defaultLinkType;
            return this;
        }

        /**
         * @param defaultLinkType DefaultLinkType. Valid values: `Platinum` and `Gold`.
         * 
         * @return builder
         * 
         */
        public Builder defaultLinkType(String defaultLinkType) {
            return defaultLinkType(Output.of(defaultLinkType));
        }

        /**
         * @param dryRun Whether to perform pre-check for this request, including permission, instance status verification, etc.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(@Nullable Output<Boolean> dryRun) {
            $.dryRun = dryRun;
            return this;
        }

        /**
         * @param dryRun Whether to perform pre-check for this request, including permission, instance status verification, etc.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(Boolean dryRun) {
            return dryRun(Output.of(dryRun));
        }

        /**
         * @param peerTransitRouterId The ID of the peer transit router.
         * 
         * @return builder
         * 
         */
        public Builder peerTransitRouterId(@Nullable Output<String> peerTransitRouterId) {
            $.peerTransitRouterId = peerTransitRouterId;
            return this;
        }

        /**
         * @param peerTransitRouterId The ID of the peer transit router.
         * 
         * @return builder
         * 
         */
        public Builder peerTransitRouterId(String peerTransitRouterId) {
            return peerTransitRouterId(Output.of(peerTransitRouterId));
        }

        /**
         * @param peerTransitRouterRegionId The region ID of peer transit router.
         * 
         * @return builder
         * 
         */
        public Builder peerTransitRouterRegionId(@Nullable Output<String> peerTransitRouterRegionId) {
            $.peerTransitRouterRegionId = peerTransitRouterRegionId;
            return this;
        }

        /**
         * @param peerTransitRouterRegionId The region ID of peer transit router.
         * 
         * @return builder
         * 
         */
        public Builder peerTransitRouterRegionId(String peerTransitRouterRegionId) {
            return peerTransitRouterRegionId(Output.of(peerTransitRouterRegionId));
        }

        /**
         * @param resourceType The resource type to attachment. Only support `VR` and default value is `VR`.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The resource type to attachment. Only support `VR` and default value is `VR`.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param routeTableAssociationEnabled Field `route_table_association_enabled` has been deprecated from provider version 1.230.0.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `route_table_association_enabled` has been deprecated from provider version 1.230.0.
         * 
         */
        @Deprecated /* Field `route_table_association_enabled` has been deprecated from provider version 1.230.0. */
        public Builder routeTableAssociationEnabled(@Nullable Output<Boolean> routeTableAssociationEnabled) {
            $.routeTableAssociationEnabled = routeTableAssociationEnabled;
            return this;
        }

        /**
         * @param routeTableAssociationEnabled Field `route_table_association_enabled` has been deprecated from provider version 1.230.0.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `route_table_association_enabled` has been deprecated from provider version 1.230.0.
         * 
         */
        @Deprecated /* Field `route_table_association_enabled` has been deprecated from provider version 1.230.0. */
        public Builder routeTableAssociationEnabled(Boolean routeTableAssociationEnabled) {
            return routeTableAssociationEnabled(Output.of(routeTableAssociationEnabled));
        }

        /**
         * @param routeTablePropagationEnabled Field `route_table_propagation_enabled` has been deprecated from provider version 1.230.0.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `route_table_propagation_enabled` has been deprecated from provider version 1.230.0.
         * 
         */
        @Deprecated /* Field `route_table_propagation_enabled` has been deprecated from provider version 1.230.0. */
        public Builder routeTablePropagationEnabled(@Nullable Output<Boolean> routeTablePropagationEnabled) {
            $.routeTablePropagationEnabled = routeTablePropagationEnabled;
            return this;
        }

        /**
         * @param routeTablePropagationEnabled Field `route_table_propagation_enabled` has been deprecated from provider version 1.230.0.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `route_table_propagation_enabled` has been deprecated from provider version 1.230.0.
         * 
         */
        @Deprecated /* Field `route_table_propagation_enabled` has been deprecated from provider version 1.230.0. */
        public Builder routeTablePropagationEnabled(Boolean routeTablePropagationEnabled) {
            return routeTablePropagationEnabled(Output.of(routeTablePropagationEnabled));
        }

        /**
         * @param status The status of the resource.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param transitRouterAttachmentDescription The description of transit router attachment. The description is 2~256 characters long and must start with a letter or Chinese, but cannot start with `http://` or `https://`.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentDescription(@Nullable Output<String> transitRouterAttachmentDescription) {
            $.transitRouterAttachmentDescription = transitRouterAttachmentDescription;
            return this;
        }

        /**
         * @param transitRouterAttachmentDescription The description of transit router attachment. The description is 2~256 characters long and must start with a letter or Chinese, but cannot start with `http://` or `https://`.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentDescription(String transitRouterAttachmentDescription) {
            return transitRouterAttachmentDescription(Output.of(transitRouterAttachmentDescription));
        }

        /**
         * @param transitRouterAttachmentId The ID of transit router attachment.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentId(@Nullable Output<String> transitRouterAttachmentId) {
            $.transitRouterAttachmentId = transitRouterAttachmentId;
            return this;
        }

        /**
         * @param transitRouterAttachmentId The ID of transit router attachment.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentId(String transitRouterAttachmentId) {
            return transitRouterAttachmentId(Output.of(transitRouterAttachmentId));
        }

        /**
         * @param transitRouterAttachmentName The name of transit router attachment. The name is 2~128 characters in length, starts with uppercase and lowercase letters or Chinese, and can contain numbers, underscores (_) and dashes (-)
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentName(@Nullable Output<String> transitRouterAttachmentName) {
            $.transitRouterAttachmentName = transitRouterAttachmentName;
            return this;
        }

        /**
         * @param transitRouterAttachmentName The name of transit router attachment. The name is 2~128 characters in length, starts with uppercase and lowercase letters or Chinese, and can contain numbers, underscores (_) and dashes (-)
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentName(String transitRouterAttachmentName) {
            return transitRouterAttachmentName(Output.of(transitRouterAttachmentName));
        }

        /**
         * @param transitRouterId The ID of the transit router to attach.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterId(@Nullable Output<String> transitRouterId) {
            $.transitRouterId = transitRouterId;
            return this;
        }

        /**
         * @param transitRouterId The ID of the transit router to attach.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterId(String transitRouterId) {
            return transitRouterId(Output.of(transitRouterId));
        }

        public TransitRouterPeerAttachmentState build() {
            return $;
        }
    }

}
