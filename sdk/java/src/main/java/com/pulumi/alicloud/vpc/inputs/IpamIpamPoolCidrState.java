// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IpamIpamPoolCidrState extends com.pulumi.resources.ResourceArgs {

    public static final IpamIpamPoolCidrState Empty = new IpamIpamPoolCidrState();

    /**
     * The CIDR address segment to be preset.
     * 
     * &gt; **NOTE:**  currently, only IPv4 address segments are supported.
     * 
     */
    @Import(name="cidr")
    private @Nullable Output<String> cidr;

    /**
     * @return The CIDR address segment to be preset.
     * 
     * &gt; **NOTE:**  currently, only IPv4 address segments are supported.
     * 
     */
    public Optional<Output<String>> cidr() {
        return Optional.ofNullable(this.cidr);
    }

    /**
     * The ID of the IPAM pool instance.
     * 
     */
    @Import(name="ipamPoolId")
    private @Nullable Output<String> ipamPoolId;

    /**
     * @return The ID of the IPAM pool instance.
     * 
     */
    public Optional<Output<String>> ipamPoolId() {
        return Optional.ofNullable(this.ipamPoolId);
    }

    /**
     * The status of the resource
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private IpamIpamPoolCidrState() {}

    private IpamIpamPoolCidrState(IpamIpamPoolCidrState $) {
        this.cidr = $.cidr;
        this.ipamPoolId = $.ipamPoolId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IpamIpamPoolCidrState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IpamIpamPoolCidrState $;

        public Builder() {
            $ = new IpamIpamPoolCidrState();
        }

        public Builder(IpamIpamPoolCidrState defaults) {
            $ = new IpamIpamPoolCidrState(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidr The CIDR address segment to be preset.
         * 
         * &gt; **NOTE:**  currently, only IPv4 address segments are supported.
         * 
         * @return builder
         * 
         */
        public Builder cidr(@Nullable Output<String> cidr) {
            $.cidr = cidr;
            return this;
        }

        /**
         * @param cidr The CIDR address segment to be preset.
         * 
         * &gt; **NOTE:**  currently, only IPv4 address segments are supported.
         * 
         * @return builder
         * 
         */
        public Builder cidr(String cidr) {
            return cidr(Output.of(cidr));
        }

        /**
         * @param ipamPoolId The ID of the IPAM pool instance.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolId(@Nullable Output<String> ipamPoolId) {
            $.ipamPoolId = ipamPoolId;
            return this;
        }

        /**
         * @param ipamPoolId The ID of the IPAM pool instance.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolId(String ipamPoolId) {
            return ipamPoolId(Output.of(ipamPoolId));
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public IpamIpamPoolCidrState build() {
            return $;
        }
    }

}
