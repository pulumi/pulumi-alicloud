// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.hbr;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.hbr.HanaBackupClientArgs;
import com.pulumi.alicloud.hbr.inputs.HanaBackupClientState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Hybrid Backup Recovery (HBR) Hana Backup Client resource.
 * 
 * For information about Hybrid Backup Recovery (HBR) Hana Backup Client and how to use it, see [What is Hana Backup Client](https://www.alibabacloud.com/help/en/hybrid-backup-recovery/latest/api-hbr-2017-09-08-createclients).
 * 
 * &gt; **NOTE:** Available in v1.198.0+.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.ecs.EcsFunctions;
 * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
 * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.ecs.SecurityGroup;
 * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
 * import com.pulumi.alicloud.ecs.Instance;
 * import com.pulumi.alicloud.ecs.InstanceArgs;
 * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
 * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
 * import com.pulumi.alicloud.hbr.Vault;
 * import com.pulumi.alicloud.hbr.VaultArgs;
 * import com.pulumi.alicloud.hbr.HanaInstance;
 * import com.pulumi.alicloud.hbr.HanaInstanceArgs;
 * import com.pulumi.alicloud.hbr.HanaBackupClient;
 * import com.pulumi.alicloud.hbr.HanaBackupClientArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var exampleZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
 *             .availableResourceCreation(&#34;Instance&#34;)
 *             .build());
 * 
 *         final var exampleInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
 *             .availabilityZone(exampleZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
 *             .cpuCoreCount(1)
 *             .memorySize(2)
 *             .build());
 * 
 *         final var exampleImages = EcsFunctions.getImages(GetImagesArgs.builder()
 *             .nameRegex(&#34;^ubuntu_[0-9]+_[0-9]+_x64*&#34;)
 *             .owners(&#34;system&#34;)
 *             .build());
 * 
 *         var exampleNetwork = new Network(&#34;exampleNetwork&#34;, NetworkArgs.builder()        
 *             .vpcName(&#34;terraform-example&#34;)
 *             .cidrBlock(&#34;172.17.3.0/24&#34;)
 *             .build());
 * 
 *         var exampleSwitch = new Switch(&#34;exampleSwitch&#34;, SwitchArgs.builder()        
 *             .vswitchName(&#34;terraform-example&#34;)
 *             .cidrBlock(&#34;172.17.3.0/24&#34;)
 *             .vpcId(exampleNetwork.id())
 *             .zoneId(exampleZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
 *             .build());
 * 
 *         var exampleSecurityGroup = new SecurityGroup(&#34;exampleSecurityGroup&#34;, SecurityGroupArgs.builder()        
 *             .vpcId(exampleNetwork.id())
 *             .build());
 * 
 *         var exampleInstance = new Instance(&#34;exampleInstance&#34;, InstanceArgs.builder()        
 *             .imageId(exampleImages.applyValue(getImagesResult -&gt; getImagesResult.images()[0].id()))
 *             .instanceType(exampleInstanceTypes.applyValue(getInstanceTypesResult -&gt; getInstanceTypesResult.instanceTypes()[0].id()))
 *             .availabilityZone(exampleZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
 *             .securityGroups(exampleSecurityGroup.id())
 *             .instanceName(&#34;terraform-example&#34;)
 *             .internetChargeType(&#34;PayByBandwidth&#34;)
 *             .vswitchId(exampleSwitch.id())
 *             .build());
 * 
 *         final var exampleResourceGroups = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
 *             .status(&#34;OK&#34;)
 *             .build());
 * 
 *         var exampleVault = new Vault(&#34;exampleVault&#34;, VaultArgs.builder()        
 *             .vaultName(&#34;terraform-example&#34;)
 *             .build());
 * 
 *         var exampleHanaInstance = new HanaInstance(&#34;exampleHanaInstance&#34;, HanaInstanceArgs.builder()        
 *             .alertSetting(&#34;INHERITED&#34;)
 *             .hanaName(&#34;terraform-example&#34;)
 *             .host(&#34;1.1.1.1&#34;)
 *             .instanceNumber(1)
 *             .password(&#34;YouPassword123&#34;)
 *             .resourceGroupId(exampleResourceGroups.applyValue(getResourceGroupsResult -&gt; getResourceGroupsResult.groups()[0].id()))
 *             .sid(&#34;HXE&#34;)
 *             .useSsl(false)
 *             .userName(&#34;admin&#34;)
 *             .validateCertificate(false)
 *             .vaultId(exampleVault.id())
 *             .build());
 * 
 *         var default_ = new HanaBackupClient(&#34;default&#34;, HanaBackupClientArgs.builder()        
 *             .vaultId(exampleVault.id())
 *             .clientInfo(Output.tuple(exampleInstance.id(), exampleHanaInstance.hanaInstanceId()).applyValue(values -&gt; {
 *                 var id = values.t1;
 *                 var hanaInstanceId = values.t2;
 *                 return String.format(&#34;[ {{ \&#34;instanceId\&#34;: \&#34;%s\&#34;, \&#34;clusterId\&#34;: \&#34;%s\&#34;, \&#34;sourceTypes\&#34;: [ \&#34;HANA\&#34; ]  }}]&#34;, id,hanaInstanceId);
 *             }))
 *             .alertSetting(&#34;INHERITED&#34;)
 *             .useHttps(true)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Hybrid Backup Recovery (HBR) Hana Backup Client can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:hbr/hanaBackupClient:HanaBackupClient example &lt;vault_id&gt;:&lt;client_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:hbr/hanaBackupClient:HanaBackupClient")
public class HanaBackupClient extends com.pulumi.resources.CustomResource {
    /**
     * The alert settings. Valid value: `INHERITED`.
     * 
     */
    @Export(name="alertSetting", refs={String.class}, tree="[0]")
    private Output<String> alertSetting;

    /**
     * @return The alert settings. Valid value: `INHERITED`.
     * 
     */
    public Output<String> alertSetting() {
        return this.alertSetting;
    }
    /**
     * The ID of the backup client.
     * 
     */
    @Export(name="clientId", refs={String.class}, tree="[0]")
    private Output<String> clientId;

    /**
     * @return The ID of the backup client.
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }
    /**
     * The installation information of the HBR clients.
     * 
     */
    @Export(name="clientInfo", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clientInfo;

    /**
     * @return The installation information of the HBR clients.
     * 
     */
    public Output<Optional<String>> clientInfo() {
        return Codegen.optional(this.clientInfo);
    }
    /**
     * The ID of the SAP HANA instance.
     * 
     */
    @Export(name="clusterId", refs={String.class}, tree="[0]")
    private Output<String> clusterId;

    /**
     * @return The ID of the SAP HANA instance.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }
    /**
     * The ID of the instance.
     * 
     */
    @Export(name="instanceId", refs={String.class}, tree="[0]")
    private Output<String> instanceId;

    /**
     * @return The ID of the instance.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }
    /**
     * The status of the Hana Backup Client.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the Hana Backup Client.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Specifies whether to transmit data over HTTPS. Valid values: `true`, `false`.
     * 
     */
    @Export(name="useHttps", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> useHttps;

    /**
     * @return Specifies whether to transmit data over HTTPS. Valid values: `true`, `false`.
     * 
     */
    public Output<Optional<Boolean>> useHttps() {
        return Codegen.optional(this.useHttps);
    }
    /**
     * The ID of the backup vault.
     * 
     */
    @Export(name="vaultId", refs={String.class}, tree="[0]")
    private Output<String> vaultId;

    /**
     * @return The ID of the backup vault.
     * 
     */
    public Output<String> vaultId() {
        return this.vaultId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public HanaBackupClient(String name) {
        this(name, HanaBackupClientArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public HanaBackupClient(String name, HanaBackupClientArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public HanaBackupClient(String name, HanaBackupClientArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:hbr/hanaBackupClient:HanaBackupClient", name, args == null ? HanaBackupClientArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private HanaBackupClient(String name, Output<String> id, @Nullable HanaBackupClientState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:hbr/hanaBackupClient:HanaBackupClient", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static HanaBackupClient get(String name, Output<String> id, @Nullable HanaBackupClientState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new HanaBackupClient(name, id, state, options);
    }
}
