// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cdn.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRealTimeLogDeliveriesDelivery {
    /**
     * @return Real-Time Log Service Domain.
     * 
     */
    private String domain;
    /**
     * @return The ID of the Real Time Log Delivery.
     * 
     */
    private String id;
    /**
     * @return The name of the Logstore that collects log data from Alibaba Cloud Content Delivery Network (CDN) in real time.
     * 
     */
    private String logstore;
    /**
     * @return The name of the Log Service project that is used for real-time log delivery.
     * 
     */
    private String project;
    /**
     * @return The region where the Log Service project is deployed.
     * 
     */
    private String slsRegion;
    /**
     * @return The status of the real-time log delivery feature. Valid Values: `online` and `offline`.
     * 
     */
    private String status;

    private GetRealTimeLogDeliveriesDelivery() {}
    /**
     * @return Real-Time Log Service Domain.
     * 
     */
    public String domain() {
        return this.domain;
    }
    /**
     * @return The ID of the Real Time Log Delivery.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the Logstore that collects log data from Alibaba Cloud Content Delivery Network (CDN) in real time.
     * 
     */
    public String logstore() {
        return this.logstore;
    }
    /**
     * @return The name of the Log Service project that is used for real-time log delivery.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return The region where the Log Service project is deployed.
     * 
     */
    public String slsRegion() {
        return this.slsRegion;
    }
    /**
     * @return The status of the real-time log delivery feature. Valid Values: `online` and `offline`.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRealTimeLogDeliveriesDelivery defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String domain;
        private String id;
        private String logstore;
        private String project;
        private String slsRegion;
        private String status;
        public Builder() {}
        public Builder(GetRealTimeLogDeliveriesDelivery defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domain = defaults.domain;
    	      this.id = defaults.id;
    	      this.logstore = defaults.logstore;
    	      this.project = defaults.project;
    	      this.slsRegion = defaults.slsRegion;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder domain(String domain) {
            if (domain == null) {
              throw new MissingRequiredPropertyException("GetRealTimeLogDeliveriesDelivery", "domain");
            }
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRealTimeLogDeliveriesDelivery", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder logstore(String logstore) {
            if (logstore == null) {
              throw new MissingRequiredPropertyException("GetRealTimeLogDeliveriesDelivery", "logstore");
            }
            this.logstore = logstore;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetRealTimeLogDeliveriesDelivery", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder slsRegion(String slsRegion) {
            if (slsRegion == null) {
              throw new MissingRequiredPropertyException("GetRealTimeLogDeliveriesDelivery", "slsRegion");
            }
            this.slsRegion = slsRegion;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetRealTimeLogDeliveriesDelivery", "status");
            }
            this.status = status;
            return this;
        }
        public GetRealTimeLogDeliveriesDelivery build() {
            final var _resultValue = new GetRealTimeLogDeliveriesDelivery();
            _resultValue.domain = domain;
            _resultValue.id = id;
            _resultValue.logstore = logstore;
            _resultValue.project = project;
            _resultValue.slsRegion = slsRegion;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
