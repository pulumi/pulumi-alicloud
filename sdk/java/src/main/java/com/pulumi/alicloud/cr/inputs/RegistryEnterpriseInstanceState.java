// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cr.inputs;

import com.pulumi.alicloud.cr.inputs.RegistryEnterpriseInstanceInstanceEndpointArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegistryEnterpriseInstanceState extends com.pulumi.resources.ResourceArgs {

    public static final RegistryEnterpriseInstanceState Empty = new RegistryEnterpriseInstanceState();

    /**
     * The creation time of the resource
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time of the resource
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * . Field &#39;created_time&#39; has been deprecated from provider version 1.235.0. New field &#39;create_time&#39; instead.
     * 
     * @deprecated
     * Field &#39;created_time&#39; has been deprecated since provider version 1.235.0. New field &#39;create_time&#39; instead.
     * 
     */
    @Deprecated /* Field 'created_time' has been deprecated since provider version 1.235.0. New field 'create_time' instead. */
    @Import(name="createdTime")
    private @Nullable Output<String> createdTime;

    /**
     * @return . Field &#39;created_time&#39; has been deprecated from provider version 1.235.0. New field &#39;create_time&#39; instead.
     * 
     * @deprecated
     * Field &#39;created_time&#39; has been deprecated since provider version 1.235.0. New field &#39;create_time&#39; instead.
     * 
     */
    @Deprecated /* Field 'created_time' has been deprecated since provider version 1.235.0. New field 'create_time' instead. */
    public Optional<Output<String>> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }

    /**
     * Custom OSS Bucket name
     * 
     * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
     * 
     */
    @Import(name="customOssBucket")
    private @Nullable Output<String> customOssBucket;

    /**
     * @return Custom OSS Bucket name
     * 
     * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
     * 
     */
    public Optional<Output<String>> customOssBucket() {
        return Optional.ofNullable(this.customOssBucket);
    }

    /**
     * Whether to use the default OSS Bucket. Value:
     * 
     */
    @Import(name="defaultOssBucket")
    private @Nullable Output<String> defaultOssBucket;

    /**
     * @return Whether to use the default OSS Bucket. Value:
     * 
     */
    public Optional<Output<String>> defaultOssBucket() {
        return Optional.ofNullable(this.defaultOssBucket);
    }

    /**
     * Expiration Time
     * 
     */
    @Import(name="endTime")
    private @Nullable Output<String> endTime;

    /**
     * @return Expiration Time
     * 
     */
    public Optional<Output<String>> endTime() {
        return Optional.ofNullable(this.endTime);
    }

    /**
     * The security scan engine used by the Enterprise Edition of Container Image Service. Value:
     * - `ACR`: Uses the Trivy scan engine provided by default.
     * - `SAS`: uses the enhanced cloud security scan engine.
     * 
     * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
     * 
     */
    @Import(name="imageScanner")
    private @Nullable Output<String> imageScanner;

    /**
     * @return The security scan engine used by the Enterprise Edition of Container Image Service. Value:
     * - `ACR`: Uses the Trivy scan engine provided by default.
     * - `SAS`: uses the enhanced cloud security scan engine.
     * 
     * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
     * 
     */
    public Optional<Output<String>> imageScanner() {
        return Optional.ofNullable(this.imageScanner);
    }

    /**
     * (Available since v1.240.0) Instance Network Access Endpoint List
     * 
     */
    @Import(name="instanceEndpoints")
    private @Nullable Output<List<RegistryEnterpriseInstanceInstanceEndpointArgs>> instanceEndpoints;

    /**
     * @return (Available since v1.240.0) Instance Network Access Endpoint List
     * 
     */
    public Optional<Output<List<RegistryEnterpriseInstanceInstanceEndpointArgs>>> instanceEndpoints() {
        return Optional.ofNullable(this.instanceEndpoints);
    }

    /**
     * InstanceName
     * 
     */
    @Import(name="instanceName")
    private @Nullable Output<String> instanceName;

    /**
     * @return InstanceName
     * 
     */
    public Optional<Output<String>> instanceName() {
        return Optional.ofNullable(this.instanceName);
    }

    /**
     * The Value configuration of the Group 1 attribute of Container Mirror Service Enterprise Edition. Valid values:
     * - `Basic`: Basic instance
     * - `Standard`: Standard instance
     * - `Advanced`: Advanced Edition Instance
     * 
     * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    /**
     * @return The Value configuration of the Group 1 attribute of Container Mirror Service Enterprise Edition. Valid values:
     * - `Basic`: Basic instance
     * - `Standard`: Standard instance
     * - `Advanced`: Advanced Edition Instance
     * 
     * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
     * 
     */
    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * An KMS encrypts password used to an instance. If the `password` is filled in, this field will be ignored.
     * 
     */
    @Import(name="kmsEncryptedPassword")
    private @Nullable Output<String> kmsEncryptedPassword;

    /**
     * @return An KMS encrypts password used to an instance. If the `password` is filled in, this field will be ignored.
     * 
     */
    public Optional<Output<String>> kmsEncryptedPassword() {
        return Optional.ofNullable(this.kmsEncryptedPassword);
    }

    /**
     * An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating instance with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
     * 
     */
    @Import(name="kmsEncryptionContext")
    private @Nullable Output<Map<String,String>> kmsEncryptionContext;

    /**
     * @return An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating instance with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
     * 
     */
    public Optional<Output<Map<String,String>>> kmsEncryptionContext() {
        return Optional.ofNullable(this.kmsEncryptionContext);
    }

    /**
     * Login password, 8-32 digits, must contain at least two letters, symbols, or numbers
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return Login password, 8-32 digits, must contain at least two letters, symbols, or numbers
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Payment type, value:
     * - Subscription: Prepaid.
     * 
     */
    @Import(name="paymentType")
    private @Nullable Output<String> paymentType;

    /**
     * @return Payment type, value:
     * - Subscription: Prepaid.
     * 
     */
    public Optional<Output<String>> paymentType() {
        return Optional.ofNullable(this.paymentType);
    }

    /**
     * Prepaid cycle. The unit is Monthly, please enter an integer multiple of 12 for annual paid products.
     * 
     * &gt; **NOTE:**  must be set when creating a prepaid instance.
     * 
     * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
     * 
     */
    @Import(name="period")
    private @Nullable Output<Integer> period;

    /**
     * @return Prepaid cycle. The unit is Monthly, please enter an integer multiple of 12 for annual paid products.
     * 
     * &gt; **NOTE:**  must be set when creating a prepaid instance.
     * 
     * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
     * 
     */
    public Optional<Output<Integer>> period() {
        return Optional.ofNullable(this.period);
    }

    /**
     * RegionId
     * 
     */
    @Import(name="regionId")
    private @Nullable Output<String> regionId;

    /**
     * @return RegionId
     * 
     */
    public Optional<Output<String>> regionId() {
        return Optional.ofNullable(this.regionId);
    }

    /**
     * Automatic renewal cycle, in months.
     * 
     * &gt; **NOTE:**  When `RenewalStatus` is set to `AutoRenewal`, it must be set.
     * 
     */
    @Import(name="renewPeriod")
    private @Nullable Output<Integer> renewPeriod;

    /**
     * @return Automatic renewal cycle, in months.
     * 
     * &gt; **NOTE:**  When `RenewalStatus` is set to `AutoRenewal`, it must be set.
     * 
     */
    public Optional<Output<Integer>> renewPeriod() {
        return Optional.ofNullable(this.renewPeriod);
    }

    /**
     * Automatic renewal status, value:
     * - AutoRenewal: automatic renewal.
     * - ManualRenewal: manual renewal.
     * 
     * Default ManualRenewal.
     * 
     */
    @Import(name="renewalStatus")
    private @Nullable Output<String> renewalStatus;

    /**
     * @return Automatic renewal status, value:
     * - AutoRenewal: automatic renewal.
     * - ManualRenewal: manual renewal.
     * 
     * Default ManualRenewal.
     * 
     */
    public Optional<Output<String>> renewalStatus() {
        return Optional.ofNullable(this.renewalStatus);
    }

    /**
     * The ID of the resource group
     * 
     * The following arguments will be discarded. Please use new fields as soon as possible:
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group
     * 
     * The following arguments will be discarded. Please use new fields as soon as possible:
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * Instance Status
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Instance Status
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private RegistryEnterpriseInstanceState() {}

    private RegistryEnterpriseInstanceState(RegistryEnterpriseInstanceState $) {
        this.createTime = $.createTime;
        this.createdTime = $.createdTime;
        this.customOssBucket = $.customOssBucket;
        this.defaultOssBucket = $.defaultOssBucket;
        this.endTime = $.endTime;
        this.imageScanner = $.imageScanner;
        this.instanceEndpoints = $.instanceEndpoints;
        this.instanceName = $.instanceName;
        this.instanceType = $.instanceType;
        this.kmsEncryptedPassword = $.kmsEncryptedPassword;
        this.kmsEncryptionContext = $.kmsEncryptionContext;
        this.password = $.password;
        this.paymentType = $.paymentType;
        this.period = $.period;
        this.regionId = $.regionId;
        this.renewPeriod = $.renewPeriod;
        this.renewalStatus = $.renewalStatus;
        this.resourceGroupId = $.resourceGroupId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegistryEnterpriseInstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegistryEnterpriseInstanceState $;

        public Builder() {
            $ = new RegistryEnterpriseInstanceState();
        }

        public Builder(RegistryEnterpriseInstanceState defaults) {
            $ = new RegistryEnterpriseInstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime The creation time of the resource
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the resource
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param createdTime . Field &#39;created_time&#39; has been deprecated from provider version 1.235.0. New field &#39;create_time&#39; instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;created_time&#39; has been deprecated since provider version 1.235.0. New field &#39;create_time&#39; instead.
         * 
         */
        @Deprecated /* Field 'created_time' has been deprecated since provider version 1.235.0. New field 'create_time' instead. */
        public Builder createdTime(@Nullable Output<String> createdTime) {
            $.createdTime = createdTime;
            return this;
        }

        /**
         * @param createdTime . Field &#39;created_time&#39; has been deprecated from provider version 1.235.0. New field &#39;create_time&#39; instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;created_time&#39; has been deprecated since provider version 1.235.0. New field &#39;create_time&#39; instead.
         * 
         */
        @Deprecated /* Field 'created_time' has been deprecated since provider version 1.235.0. New field 'create_time' instead. */
        public Builder createdTime(String createdTime) {
            return createdTime(Output.of(createdTime));
        }

        /**
         * @param customOssBucket Custom OSS Bucket name
         * 
         * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
         * 
         * @return builder
         * 
         */
        public Builder customOssBucket(@Nullable Output<String> customOssBucket) {
            $.customOssBucket = customOssBucket;
            return this;
        }

        /**
         * @param customOssBucket Custom OSS Bucket name
         * 
         * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
         * 
         * @return builder
         * 
         */
        public Builder customOssBucket(String customOssBucket) {
            return customOssBucket(Output.of(customOssBucket));
        }

        /**
         * @param defaultOssBucket Whether to use the default OSS Bucket. Value:
         * 
         * @return builder
         * 
         */
        public Builder defaultOssBucket(@Nullable Output<String> defaultOssBucket) {
            $.defaultOssBucket = defaultOssBucket;
            return this;
        }

        /**
         * @param defaultOssBucket Whether to use the default OSS Bucket. Value:
         * 
         * @return builder
         * 
         */
        public Builder defaultOssBucket(String defaultOssBucket) {
            return defaultOssBucket(Output.of(defaultOssBucket));
        }

        /**
         * @param endTime Expiration Time
         * 
         * @return builder
         * 
         */
        public Builder endTime(@Nullable Output<String> endTime) {
            $.endTime = endTime;
            return this;
        }

        /**
         * @param endTime Expiration Time
         * 
         * @return builder
         * 
         */
        public Builder endTime(String endTime) {
            return endTime(Output.of(endTime));
        }

        /**
         * @param imageScanner The security scan engine used by the Enterprise Edition of Container Image Service. Value:
         * - `ACR`: Uses the Trivy scan engine provided by default.
         * - `SAS`: uses the enhanced cloud security scan engine.
         * 
         * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
         * 
         * @return builder
         * 
         */
        public Builder imageScanner(@Nullable Output<String> imageScanner) {
            $.imageScanner = imageScanner;
            return this;
        }

        /**
         * @param imageScanner The security scan engine used by the Enterprise Edition of Container Image Service. Value:
         * - `ACR`: Uses the Trivy scan engine provided by default.
         * - `SAS`: uses the enhanced cloud security scan engine.
         * 
         * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
         * 
         * @return builder
         * 
         */
        public Builder imageScanner(String imageScanner) {
            return imageScanner(Output.of(imageScanner));
        }

        /**
         * @param instanceEndpoints (Available since v1.240.0) Instance Network Access Endpoint List
         * 
         * @return builder
         * 
         */
        public Builder instanceEndpoints(@Nullable Output<List<RegistryEnterpriseInstanceInstanceEndpointArgs>> instanceEndpoints) {
            $.instanceEndpoints = instanceEndpoints;
            return this;
        }

        /**
         * @param instanceEndpoints (Available since v1.240.0) Instance Network Access Endpoint List
         * 
         * @return builder
         * 
         */
        public Builder instanceEndpoints(List<RegistryEnterpriseInstanceInstanceEndpointArgs> instanceEndpoints) {
            return instanceEndpoints(Output.of(instanceEndpoints));
        }

        /**
         * @param instanceEndpoints (Available since v1.240.0) Instance Network Access Endpoint List
         * 
         * @return builder
         * 
         */
        public Builder instanceEndpoints(RegistryEnterpriseInstanceInstanceEndpointArgs... instanceEndpoints) {
            return instanceEndpoints(List.of(instanceEndpoints));
        }

        /**
         * @param instanceName InstanceName
         * 
         * @return builder
         * 
         */
        public Builder instanceName(@Nullable Output<String> instanceName) {
            $.instanceName = instanceName;
            return this;
        }

        /**
         * @param instanceName InstanceName
         * 
         * @return builder
         * 
         */
        public Builder instanceName(String instanceName) {
            return instanceName(Output.of(instanceName));
        }

        /**
         * @param instanceType The Value configuration of the Group 1 attribute of Container Mirror Service Enterprise Edition. Valid values:
         * - `Basic`: Basic instance
         * - `Standard`: Standard instance
         * - `Advanced`: Advanced Edition Instance
         * 
         * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType The Value configuration of the Group 1 attribute of Container Mirror Service Enterprise Edition. Valid values:
         * - `Basic`: Basic instance
         * - `Standard`: Standard instance
         * - `Advanced`: Advanced Edition Instance
         * 
         * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param kmsEncryptedPassword An KMS encrypts password used to an instance. If the `password` is filled in, this field will be ignored.
         * 
         * @return builder
         * 
         */
        public Builder kmsEncryptedPassword(@Nullable Output<String> kmsEncryptedPassword) {
            $.kmsEncryptedPassword = kmsEncryptedPassword;
            return this;
        }

        /**
         * @param kmsEncryptedPassword An KMS encrypts password used to an instance. If the `password` is filled in, this field will be ignored.
         * 
         * @return builder
         * 
         */
        public Builder kmsEncryptedPassword(String kmsEncryptedPassword) {
            return kmsEncryptedPassword(Output.of(kmsEncryptedPassword));
        }

        /**
         * @param kmsEncryptionContext An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating instance with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
         * 
         * @return builder
         * 
         */
        public Builder kmsEncryptionContext(@Nullable Output<Map<String,String>> kmsEncryptionContext) {
            $.kmsEncryptionContext = kmsEncryptionContext;
            return this;
        }

        /**
         * @param kmsEncryptionContext An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating instance with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
         * 
         * @return builder
         * 
         */
        public Builder kmsEncryptionContext(Map<String,String> kmsEncryptionContext) {
            return kmsEncryptionContext(Output.of(kmsEncryptionContext));
        }

        /**
         * @param password Login password, 8-32 digits, must contain at least two letters, symbols, or numbers
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Login password, 8-32 digits, must contain at least two letters, symbols, or numbers
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param paymentType Payment type, value:
         * - Subscription: Prepaid.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(@Nullable Output<String> paymentType) {
            $.paymentType = paymentType;
            return this;
        }

        /**
         * @param paymentType Payment type, value:
         * - Subscription: Prepaid.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(String paymentType) {
            return paymentType(Output.of(paymentType));
        }

        /**
         * @param period Prepaid cycle. The unit is Monthly, please enter an integer multiple of 12 for annual paid products.
         * 
         * &gt; **NOTE:**  must be set when creating a prepaid instance.
         * 
         * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
         * 
         * @return builder
         * 
         */
        public Builder period(@Nullable Output<Integer> period) {
            $.period = period;
            return this;
        }

        /**
         * @param period Prepaid cycle. The unit is Monthly, please enter an integer multiple of 12 for annual paid products.
         * 
         * &gt; **NOTE:**  must be set when creating a prepaid instance.
         * 
         * &gt; **NOTE:** The parameter is immutable after resource creation. It only applies during resource creation and has no effect when modified post-creation.
         * 
         * @return builder
         * 
         */
        public Builder period(Integer period) {
            return period(Output.of(period));
        }

        /**
         * @param regionId RegionId
         * 
         * @return builder
         * 
         */
        public Builder regionId(@Nullable Output<String> regionId) {
            $.regionId = regionId;
            return this;
        }

        /**
         * @param regionId RegionId
         * 
         * @return builder
         * 
         */
        public Builder regionId(String regionId) {
            return regionId(Output.of(regionId));
        }

        /**
         * @param renewPeriod Automatic renewal cycle, in months.
         * 
         * &gt; **NOTE:**  When `RenewalStatus` is set to `AutoRenewal`, it must be set.
         * 
         * @return builder
         * 
         */
        public Builder renewPeriod(@Nullable Output<Integer> renewPeriod) {
            $.renewPeriod = renewPeriod;
            return this;
        }

        /**
         * @param renewPeriod Automatic renewal cycle, in months.
         * 
         * &gt; **NOTE:**  When `RenewalStatus` is set to `AutoRenewal`, it must be set.
         * 
         * @return builder
         * 
         */
        public Builder renewPeriod(Integer renewPeriod) {
            return renewPeriod(Output.of(renewPeriod));
        }

        /**
         * @param renewalStatus Automatic renewal status, value:
         * - AutoRenewal: automatic renewal.
         * - ManualRenewal: manual renewal.
         * 
         * Default ManualRenewal.
         * 
         * @return builder
         * 
         */
        public Builder renewalStatus(@Nullable Output<String> renewalStatus) {
            $.renewalStatus = renewalStatus;
            return this;
        }

        /**
         * @param renewalStatus Automatic renewal status, value:
         * - AutoRenewal: automatic renewal.
         * - ManualRenewal: manual renewal.
         * 
         * Default ManualRenewal.
         * 
         * @return builder
         * 
         */
        public Builder renewalStatus(String renewalStatus) {
            return renewalStatus(Output.of(renewalStatus));
        }

        /**
         * @param resourceGroupId The ID of the resource group
         * 
         * The following arguments will be discarded. Please use new fields as soon as possible:
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group
         * 
         * The following arguments will be discarded. Please use new fields as soon as possible:
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param status Instance Status
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Instance Status
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public RegistryEnterpriseInstanceState build() {
            return $;
        }
    }

}
