// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.slb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDomainExtensionsExtension {
    /**
     * @return The domain name.
     * 
     */
    private String domain;
    /**
     * @return The ID of the domain extension.
     * 
     */
    private String id;
    /**
     * @return The ID of the certificate used by the domain name.
     * 
     */
    private String serverCertificateId;

    private GetDomainExtensionsExtension() {}
    /**
     * @return The domain name.
     * 
     */
    public String domain() {
        return this.domain;
    }
    /**
     * @return The ID of the domain extension.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the certificate used by the domain name.
     * 
     */
    public String serverCertificateId() {
        return this.serverCertificateId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainExtensionsExtension defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String domain;
        private String id;
        private String serverCertificateId;
        public Builder() {}
        public Builder(GetDomainExtensionsExtension defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domain = defaults.domain;
    	      this.id = defaults.id;
    	      this.serverCertificateId = defaults.serverCertificateId;
        }

        @CustomType.Setter
        public Builder domain(String domain) {
            this.domain = Objects.requireNonNull(domain);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder serverCertificateId(String serverCertificateId) {
            this.serverCertificateId = Objects.requireNonNull(serverCertificateId);
            return this;
        }
        public GetDomainExtensionsExtension build() {
            final var o = new GetDomainExtensionsExtension();
            o.domain = domain;
            o.id = id;
            o.serverCertificateId = serverCertificateId;
            return o;
        }
    }
}
