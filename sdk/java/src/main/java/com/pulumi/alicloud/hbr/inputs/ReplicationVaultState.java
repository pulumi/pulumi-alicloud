// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.hbr.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReplicationVaultState extends com.pulumi.resources.ResourceArgs {

    public static final ReplicationVaultState Empty = new ReplicationVaultState();

    /**
     * The description of the backup vault.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the backup vault.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The encryption type of the backup vault.
     * 
     */
    @Import(name="encryptType")
    private @Nullable Output<String> encryptType;

    /**
     * @return The encryption type of the backup vault.
     * 
     */
    public Optional<Output<String>> encryptType() {
        return Optional.ofNullable(this.encryptType);
    }

    /**
     * Alibaba Cloud KMS custom Key or Alias. This parameter is required only when EncryptType = KMS.
     * 
     */
    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    /**
     * @return Alibaba Cloud KMS custom Key or Alias. This parameter is required only when EncryptType = KMS.
     * 
     */
    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    /**
     * RegionId
     * 
     */
    @Import(name="regionId")
    private @Nullable Output<String> regionId;

    /**
     * @return RegionId
     * 
     */
    public Optional<Output<String>> regionId() {
        return Optional.ofNullable(this.regionId);
    }

    /**
     * The region ID of the source backup vault.
     * 
     */
    @Import(name="replicationSourceRegionId")
    private @Nullable Output<String> replicationSourceRegionId;

    /**
     * @return The region ID of the source backup vault.
     * 
     */
    public Optional<Output<String>> replicationSourceRegionId() {
        return Optional.ofNullable(this.replicationSourceRegionId);
    }

    /**
     * The vault ID of the source backup vault.
     * 
     */
    @Import(name="replicationSourceVaultId")
    private @Nullable Output<String> replicationSourceVaultId;

    /**
     * @return The vault ID of the source backup vault.
     * 
     */
    public Optional<Output<String>> replicationSourceVaultId() {
        return Optional.ofNullable(this.replicationSourceVaultId);
    }

    /**
     * The status of the mirror backup vault.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the mirror backup vault.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The name of the backup vault.
     * 
     */
    @Import(name="vaultName")
    private @Nullable Output<String> vaultName;

    /**
     * @return The name of the backup vault.
     * 
     */
    public Optional<Output<String>> vaultName() {
        return Optional.ofNullable(this.vaultName);
    }

    /**
     * Backup Vault Storage Class
     * 
     */
    @Import(name="vaultStorageClass")
    private @Nullable Output<String> vaultStorageClass;

    /**
     * @return Backup Vault Storage Class
     * 
     */
    public Optional<Output<String>> vaultStorageClass() {
        return Optional.ofNullable(this.vaultStorageClass);
    }

    private ReplicationVaultState() {}

    private ReplicationVaultState(ReplicationVaultState $) {
        this.description = $.description;
        this.encryptType = $.encryptType;
        this.kmsKeyId = $.kmsKeyId;
        this.regionId = $.regionId;
        this.replicationSourceRegionId = $.replicationSourceRegionId;
        this.replicationSourceVaultId = $.replicationSourceVaultId;
        this.status = $.status;
        this.vaultName = $.vaultName;
        this.vaultStorageClass = $.vaultStorageClass;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicationVaultState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicationVaultState $;

        public Builder() {
            $ = new ReplicationVaultState();
        }

        public Builder(ReplicationVaultState defaults) {
            $ = new ReplicationVaultState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the backup vault.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the backup vault.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param encryptType The encryption type of the backup vault.
         * 
         * @return builder
         * 
         */
        public Builder encryptType(@Nullable Output<String> encryptType) {
            $.encryptType = encryptType;
            return this;
        }

        /**
         * @param encryptType The encryption type of the backup vault.
         * 
         * @return builder
         * 
         */
        public Builder encryptType(String encryptType) {
            return encryptType(Output.of(encryptType));
        }

        /**
         * @param kmsKeyId Alibaba Cloud KMS custom Key or Alias. This parameter is required only when EncryptType = KMS.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        /**
         * @param kmsKeyId Alibaba Cloud KMS custom Key or Alias. This parameter is required only when EncryptType = KMS.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        /**
         * @param regionId RegionId
         * 
         * @return builder
         * 
         */
        public Builder regionId(@Nullable Output<String> regionId) {
            $.regionId = regionId;
            return this;
        }

        /**
         * @param regionId RegionId
         * 
         * @return builder
         * 
         */
        public Builder regionId(String regionId) {
            return regionId(Output.of(regionId));
        }

        /**
         * @param replicationSourceRegionId The region ID of the source backup vault.
         * 
         * @return builder
         * 
         */
        public Builder replicationSourceRegionId(@Nullable Output<String> replicationSourceRegionId) {
            $.replicationSourceRegionId = replicationSourceRegionId;
            return this;
        }

        /**
         * @param replicationSourceRegionId The region ID of the source backup vault.
         * 
         * @return builder
         * 
         */
        public Builder replicationSourceRegionId(String replicationSourceRegionId) {
            return replicationSourceRegionId(Output.of(replicationSourceRegionId));
        }

        /**
         * @param replicationSourceVaultId The vault ID of the source backup vault.
         * 
         * @return builder
         * 
         */
        public Builder replicationSourceVaultId(@Nullable Output<String> replicationSourceVaultId) {
            $.replicationSourceVaultId = replicationSourceVaultId;
            return this;
        }

        /**
         * @param replicationSourceVaultId The vault ID of the source backup vault.
         * 
         * @return builder
         * 
         */
        public Builder replicationSourceVaultId(String replicationSourceVaultId) {
            return replicationSourceVaultId(Output.of(replicationSourceVaultId));
        }

        /**
         * @param status The status of the mirror backup vault.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the mirror backup vault.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param vaultName The name of the backup vault.
         * 
         * @return builder
         * 
         */
        public Builder vaultName(@Nullable Output<String> vaultName) {
            $.vaultName = vaultName;
            return this;
        }

        /**
         * @param vaultName The name of the backup vault.
         * 
         * @return builder
         * 
         */
        public Builder vaultName(String vaultName) {
            return vaultName(Output.of(vaultName));
        }

        /**
         * @param vaultStorageClass Backup Vault Storage Class
         * 
         * @return builder
         * 
         */
        public Builder vaultStorageClass(@Nullable Output<String> vaultStorageClass) {
            $.vaultStorageClass = vaultStorageClass;
            return this;
        }

        /**
         * @param vaultStorageClass Backup Vault Storage Class
         * 
         * @return builder
         * 
         */
        public Builder vaultStorageClass(String vaultStorageClass) {
            return vaultStorageClass(Output.of(vaultStorageClass));
        }

        public ReplicationVaultState build() {
            return $;
        }
    }

}
