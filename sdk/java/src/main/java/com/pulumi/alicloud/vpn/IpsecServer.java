// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpn;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.vpn.IpsecServerArgs;
import com.pulumi.alicloud.vpn.inputs.IpsecServerState;
import com.pulumi.alicloud.vpn.outputs.IpsecServerIkeConfig;
import com.pulumi.alicloud.vpn.outputs.IpsecServerIpsecConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a VPN Ipsec Server resource.
 * 
 * For information about VPN Ipsec Server and how to use it, see [What is Ipsec Server](https://www.alibabacloud.com/help/en/doc-detail/205454.html).
 * 
 * &gt; **NOTE:** Available in v1.161.0+.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.vpn.Gateway;
 * import com.pulumi.alicloud.vpn.GatewayArgs;
 * import com.pulumi.alicloud.vpn.IpsecServer;
 * import com.pulumi.alicloud.vpn.IpsecServerArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var fooZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
 *             .availableResourceCreation(&#34;VSwitch&#34;)
 *             .build());
 * 
 *         var fooNetwork = new Network(&#34;fooNetwork&#34;, NetworkArgs.builder()        
 *             .vpcName(&#34;terraform-example&#34;)
 *             .cidrBlock(&#34;172.16.0.0/12&#34;)
 *             .build());
 * 
 *         var fooSwitch = new Switch(&#34;fooSwitch&#34;, SwitchArgs.builder()        
 *             .vswitchName(&#34;terraform-example&#34;)
 *             .cidrBlock(&#34;172.16.0.0/21&#34;)
 *             .vpcId(fooNetwork.id())
 *             .zoneId(fooZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
 *             .build());
 * 
 *         var fooGateway = new Gateway(&#34;fooGateway&#34;, GatewayArgs.builder()        
 *             .vpcId(fooNetwork.id())
 *             .bandwidth(&#34;10&#34;)
 *             .enableSsl(true)
 *             .instanceChargeType(&#34;PrePaid&#34;)
 *             .description(&#34;terraform-example&#34;)
 *             .vswitchId(fooSwitch.id())
 *             .build());
 * 
 *         var fooIpsecServer = new IpsecServer(&#34;fooIpsecServer&#34;, IpsecServerArgs.builder()        
 *             .clientIpPool(&#34;10.0.0.0/24&#34;)
 *             .ipsecServerName(&#34;terraform-example&#34;)
 *             .localSubnet(&#34;192.168.0.0/24&#34;)
 *             .vpnGatewayId(fooGateway.id())
 *             .pskEnabled(true)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * VPN Ipsec Server can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:vpn/ipsecServer:IpsecServer example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:vpn/ipsecServer:IpsecServer")
public class IpsecServer extends com.pulumi.resources.CustomResource {
    /**
     * The client CIDR block. It refers to the CIDR block that is allocated to the virtual interface of the client.
     * 
     */
    @Export(name="clientIpPool", refs={String.class}, tree="[0]")
    private Output<String> clientIpPool;

    /**
     * @return The client CIDR block. It refers to the CIDR block that is allocated to the virtual interface of the client.
     * 
     */
    public Output<String> clientIpPool() {
        return this.clientIpPool;
    }
    /**
     * The dry run.
     * 
     */
    @Export(name="dryRun", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dryRun;

    /**
     * @return The dry run.
     * 
     */
    public Output<Optional<Boolean>> dryRun() {
        return Codegen.optional(this.dryRun);
    }
    /**
     * Specifies whether you want the configuration to immediately take effect.
     * 
     */
    @Export(name="effectImmediately", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> effectImmediately;

    /**
     * @return Specifies whether you want the configuration to immediately take effect.
     * 
     */
    public Output<Optional<Boolean>> effectImmediately() {
        return Codegen.optional(this.effectImmediately);
    }
    /**
     * The configuration of Phase 1 negotiations. See the following `Block ike_config`.
     * 
     */
    @Export(name="ikeConfigs", refs={List.class,IpsecServerIkeConfig.class}, tree="[0,1]")
    private Output<List<IpsecServerIkeConfig>> ikeConfigs;

    /**
     * @return The configuration of Phase 1 negotiations. See the following `Block ike_config`.
     * 
     */
    public Output<List<IpsecServerIkeConfig>> ikeConfigs() {
        return this.ikeConfigs;
    }
    /**
     * The configuration of Phase 2 negotiations. See the following `Block ipsec_config`.
     * 
     */
    @Export(name="ipsecConfigs", refs={List.class,IpsecServerIpsecConfig.class}, tree="[0,1]")
    private Output<List<IpsecServerIpsecConfig>> ipsecConfigs;

    /**
     * @return The configuration of Phase 2 negotiations. See the following `Block ipsec_config`.
     * 
     */
    public Output<List<IpsecServerIpsecConfig>> ipsecConfigs() {
        return this.ipsecConfigs;
    }
    /**
     * The name of the IPsec server. The name must be `2` to `128` characters in length, and can contain digits, hyphens (-), and underscores (_). It must start with a letter.
     * 
     */
    @Export(name="ipsecServerName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipsecServerName;

    /**
     * @return The name of the IPsec server. The name must be `2` to `128` characters in length, and can contain digits, hyphens (-), and underscores (_). It must start with a letter.
     * 
     */
    public Output<Optional<String>> ipsecServerName() {
        return Codegen.optional(this.ipsecServerName);
    }
    /**
     * The local CIDR block. It refers to the CIDR block of the virtual private cloud (VPC) that is used to connect with the client. Separate multiple CIDR blocks with commas (,). Example: `192.168.1.0/24,192.168.2.0/24`.
     * 
     */
    @Export(name="localSubnet", refs={String.class}, tree="[0]")
    private Output<String> localSubnet;

    /**
     * @return The local CIDR block. It refers to the CIDR block of the virtual private cloud (VPC) that is used to connect with the client. Separate multiple CIDR blocks with commas (,). Example: `192.168.1.0/24,192.168.2.0/24`.
     * 
     */
    public Output<String> localSubnet() {
        return this.localSubnet;
    }
    /**
     * The pre-shared key. The pre-shared key is used to authenticate the VPN gateway and the client. By default, the system generates a random string that is 16 bits in length. You can also specify the pre-shared key. It can contain at most 100 characters.
     * 
     */
    @Export(name="psk", refs={String.class}, tree="[0]")
    private Output<String> psk;

    /**
     * @return The pre-shared key. The pre-shared key is used to authenticate the VPN gateway and the client. By default, the system generates a random string that is 16 bits in length. You can also specify the pre-shared key. It can contain at most 100 characters.
     * 
     */
    public Output<String> psk() {
        return this.psk;
    }
    /**
     * Whether to enable the pre-shared key authentication method. The value is only `true`, which indicates that the pre-shared key authentication method is enabled.
     * 
     */
    @Export(name="pskEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> pskEnabled;

    /**
     * @return Whether to enable the pre-shared key authentication method. The value is only `true`, which indicates that the pre-shared key authentication method is enabled.
     * 
     */
    public Output<Optional<Boolean>> pskEnabled() {
        return Codegen.optional(this.pskEnabled);
    }
    /**
     * The ID of the VPN gateway.
     * 
     */
    @Export(name="vpnGatewayId", refs={String.class}, tree="[0]")
    private Output<String> vpnGatewayId;

    /**
     * @return The ID of the VPN gateway.
     * 
     */
    public Output<String> vpnGatewayId() {
        return this.vpnGatewayId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IpsecServer(String name) {
        this(name, IpsecServerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IpsecServer(String name, IpsecServerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IpsecServer(String name, IpsecServerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:vpn/ipsecServer:IpsecServer", name, args == null ? IpsecServerArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private IpsecServer(String name, Output<String> id, @Nullable IpsecServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:vpn/ipsecServer:IpsecServer", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IpsecServer get(String name, Output<String> id, @Nullable IpsecServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IpsecServer(name, id, state, options);
    }
}
