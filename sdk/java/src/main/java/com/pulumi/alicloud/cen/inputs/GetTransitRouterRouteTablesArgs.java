// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTransitRouterRouteTablesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTransitRouterRouteTablesArgs Empty = new GetTransitRouterRouteTablesArgs();

    /**
     * A list of Transit Router Route Table IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of Transit Router Route Table IDs.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * A regex string to filter results by Transit Router Route Table name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    /**
     * @return A regex string to filter results by Transit Router Route Table name.
     * 
     */
    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The status of the route table. Valid values: `Creating`, `Active`, `Deleting`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the route table. Valid values: `Creating`, `Active`, `Deleting`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The ID of the Enterprise Edition transit router.
     * 
     */
    @Import(name="transitRouterId", required=true)
    private Output<String> transitRouterId;

    /**
     * @return The ID of the Enterprise Edition transit router.
     * 
     */
    public Output<String> transitRouterId() {
        return this.transitRouterId;
    }

    /**
     * A list of ID of the CEN Transit Router Route Table.
     * 
     */
    @Import(name="transitRouterRouteTableIds")
    private @Nullable Output<List<String>> transitRouterRouteTableIds;

    /**
     * @return A list of ID of the CEN Transit Router Route Table.
     * 
     */
    public Optional<Output<List<String>>> transitRouterRouteTableIds() {
        return Optional.ofNullable(this.transitRouterRouteTableIds);
    }

    /**
     * A list of name of the CEN Transit Router Route Table.
     * 
     */
    @Import(name="transitRouterRouteTableNames")
    private @Nullable Output<List<String>> transitRouterRouteTableNames;

    /**
     * @return A list of name of the CEN Transit Router Route Table.
     * 
     */
    public Optional<Output<List<String>>> transitRouterRouteTableNames() {
        return Optional.ofNullable(this.transitRouterRouteTableNames);
    }

    /**
     * The status of the route table. Valid values: `Creating`, `Active`, `Deleting`.
     * 
     */
    @Import(name="transitRouterRouteTableStatus")
    private @Nullable Output<String> transitRouterRouteTableStatus;

    /**
     * @return The status of the route table. Valid values: `Creating`, `Active`, `Deleting`.
     * 
     */
    public Optional<Output<String>> transitRouterRouteTableStatus() {
        return Optional.ofNullable(this.transitRouterRouteTableStatus);
    }

    /**
     * The type of the route table. Valid values: `System`, `Custom`.
     * 
     */
    @Import(name="transitRouterRouteTableType")
    private @Nullable Output<String> transitRouterRouteTableType;

    /**
     * @return The type of the route table. Valid values: `System`, `Custom`.
     * 
     */
    public Optional<Output<String>> transitRouterRouteTableType() {
        return Optional.ofNullable(this.transitRouterRouteTableType);
    }

    private GetTransitRouterRouteTablesArgs() {}

    private GetTransitRouterRouteTablesArgs(GetTransitRouterRouteTablesArgs $) {
        this.ids = $.ids;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.status = $.status;
        this.transitRouterId = $.transitRouterId;
        this.transitRouterRouteTableIds = $.transitRouterRouteTableIds;
        this.transitRouterRouteTableNames = $.transitRouterRouteTableNames;
        this.transitRouterRouteTableStatus = $.transitRouterRouteTableStatus;
        this.transitRouterRouteTableType = $.transitRouterRouteTableType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTransitRouterRouteTablesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTransitRouterRouteTablesArgs $;

        public Builder() {
            $ = new GetTransitRouterRouteTablesArgs();
        }

        public Builder(GetTransitRouterRouteTablesArgs defaults) {
            $ = new GetTransitRouterRouteTablesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ids A list of Transit Router Route Table IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Transit Router Route Table IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of Transit Router Route Table IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param nameRegex A regex string to filter results by Transit Router Route Table name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param nameRegex A regex string to filter results by Transit Router Route Table name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        /**
         * @param status The status of the route table. Valid values: `Creating`, `Active`, `Deleting`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the route table. Valid values: `Creating`, `Active`, `Deleting`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param transitRouterId The ID of the Enterprise Edition transit router.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterId(Output<String> transitRouterId) {
            $.transitRouterId = transitRouterId;
            return this;
        }

        /**
         * @param transitRouterId The ID of the Enterprise Edition transit router.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterId(String transitRouterId) {
            return transitRouterId(Output.of(transitRouterId));
        }

        /**
         * @param transitRouterRouteTableIds A list of ID of the CEN Transit Router Route Table.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterRouteTableIds(@Nullable Output<List<String>> transitRouterRouteTableIds) {
            $.transitRouterRouteTableIds = transitRouterRouteTableIds;
            return this;
        }

        /**
         * @param transitRouterRouteTableIds A list of ID of the CEN Transit Router Route Table.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterRouteTableIds(List<String> transitRouterRouteTableIds) {
            return transitRouterRouteTableIds(Output.of(transitRouterRouteTableIds));
        }

        /**
         * @param transitRouterRouteTableIds A list of ID of the CEN Transit Router Route Table.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterRouteTableIds(String... transitRouterRouteTableIds) {
            return transitRouterRouteTableIds(List.of(transitRouterRouteTableIds));
        }

        /**
         * @param transitRouterRouteTableNames A list of name of the CEN Transit Router Route Table.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterRouteTableNames(@Nullable Output<List<String>> transitRouterRouteTableNames) {
            $.transitRouterRouteTableNames = transitRouterRouteTableNames;
            return this;
        }

        /**
         * @param transitRouterRouteTableNames A list of name of the CEN Transit Router Route Table.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterRouteTableNames(List<String> transitRouterRouteTableNames) {
            return transitRouterRouteTableNames(Output.of(transitRouterRouteTableNames));
        }

        /**
         * @param transitRouterRouteTableNames A list of name of the CEN Transit Router Route Table.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterRouteTableNames(String... transitRouterRouteTableNames) {
            return transitRouterRouteTableNames(List.of(transitRouterRouteTableNames));
        }

        /**
         * @param transitRouterRouteTableStatus The status of the route table. Valid values: `Creating`, `Active`, `Deleting`.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterRouteTableStatus(@Nullable Output<String> transitRouterRouteTableStatus) {
            $.transitRouterRouteTableStatus = transitRouterRouteTableStatus;
            return this;
        }

        /**
         * @param transitRouterRouteTableStatus The status of the route table. Valid values: `Creating`, `Active`, `Deleting`.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterRouteTableStatus(String transitRouterRouteTableStatus) {
            return transitRouterRouteTableStatus(Output.of(transitRouterRouteTableStatus));
        }

        /**
         * @param transitRouterRouteTableType The type of the route table. Valid values: `System`, `Custom`.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterRouteTableType(@Nullable Output<String> transitRouterRouteTableType) {
            $.transitRouterRouteTableType = transitRouterRouteTableType;
            return this;
        }

        /**
         * @param transitRouterRouteTableType The type of the route table. Valid values: `System`, `Custom`.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterRouteTableType(String transitRouterRouteTableType) {
            return transitRouterRouteTableType(Output.of(transitRouterRouteTableType));
        }

        public GetTransitRouterRouteTablesArgs build() {
            if ($.transitRouterId == null) {
                throw new MissingRequiredPropertyException("GetTransitRouterRouteTablesArgs", "transitRouterId");
            }
            return $;
        }
    }

}
