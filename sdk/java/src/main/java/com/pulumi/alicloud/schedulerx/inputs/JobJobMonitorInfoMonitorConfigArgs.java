// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.schedulerx.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobJobMonitorInfoMonitorConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobJobMonitorInfoMonitorConfigArgs Empty = new JobJobMonitorInfoMonitorConfigArgs();

    /**
     * Enable failure alarm
     * 
     */
    @Import(name="failEnable")
    private @Nullable Output<Boolean> failEnable;

    /**
     * @return Enable failure alarm
     * 
     */
    public Optional<Output<Boolean>> failEnable() {
        return Optional.ofNullable(this.failEnable);
    }

    /**
     * Whether no available Machine alarm is on
     * 
     */
    @Import(name="missWorkerEnable")
    private @Nullable Output<Boolean> missWorkerEnable;

    /**
     * @return Whether no available Machine alarm is on
     * 
     */
    public Optional<Output<Boolean>> missWorkerEnable() {
        return Optional.ofNullable(this.missWorkerEnable);
    }

    /**
     * Alarm sending form
     * - sms: sms alarm
     * - phone: phone alarm
     * - mail: mail alarm
     * - webhook:webhook alarm
     * 
     */
    @Import(name="sendChannel")
    private @Nullable Output<String> sendChannel;

    /**
     * @return Alarm sending form
     * - sms: sms alarm
     * - phone: phone alarm
     * - mail: mail alarm
     * - webhook:webhook alarm
     * 
     */
    public Optional<Output<String>> sendChannel() {
        return Optional.ofNullable(this.sendChannel);
    }

    /**
     * Timeout threshold, unit s, default 7200.
     * 
     */
    @Import(name="timeout")
    private @Nullable Output<Integer> timeout;

    /**
     * @return Timeout threshold, unit s, default 7200.
     * 
     */
    public Optional<Output<Integer>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    /**
     * Time-out alarm switch. The values are as follows:
     * 
     */
    @Import(name="timeoutEnable")
    private @Nullable Output<Boolean> timeoutEnable;

    /**
     * @return Time-out alarm switch. The values are as follows:
     * 
     */
    public Optional<Output<Boolean>> timeoutEnable() {
        return Optional.ofNullable(this.timeoutEnable);
    }

    /**
     * The trigger switch is terminated by timeout and is turned off by default.
     * 
     */
    @Import(name="timeoutKillEnable")
    private @Nullable Output<Boolean> timeoutKillEnable;

    /**
     * @return The trigger switch is terminated by timeout and is turned off by default.
     * 
     */
    public Optional<Output<Boolean>> timeoutKillEnable() {
        return Optional.ofNullable(this.timeoutKillEnable);
    }

    private JobJobMonitorInfoMonitorConfigArgs() {}

    private JobJobMonitorInfoMonitorConfigArgs(JobJobMonitorInfoMonitorConfigArgs $) {
        this.failEnable = $.failEnable;
        this.missWorkerEnable = $.missWorkerEnable;
        this.sendChannel = $.sendChannel;
        this.timeout = $.timeout;
        this.timeoutEnable = $.timeoutEnable;
        this.timeoutKillEnable = $.timeoutKillEnable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobJobMonitorInfoMonitorConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobJobMonitorInfoMonitorConfigArgs $;

        public Builder() {
            $ = new JobJobMonitorInfoMonitorConfigArgs();
        }

        public Builder(JobJobMonitorInfoMonitorConfigArgs defaults) {
            $ = new JobJobMonitorInfoMonitorConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param failEnable Enable failure alarm
         * 
         * @return builder
         * 
         */
        public Builder failEnable(@Nullable Output<Boolean> failEnable) {
            $.failEnable = failEnable;
            return this;
        }

        /**
         * @param failEnable Enable failure alarm
         * 
         * @return builder
         * 
         */
        public Builder failEnable(Boolean failEnable) {
            return failEnable(Output.of(failEnable));
        }

        /**
         * @param missWorkerEnable Whether no available Machine alarm is on
         * 
         * @return builder
         * 
         */
        public Builder missWorkerEnable(@Nullable Output<Boolean> missWorkerEnable) {
            $.missWorkerEnable = missWorkerEnable;
            return this;
        }

        /**
         * @param missWorkerEnable Whether no available Machine alarm is on
         * 
         * @return builder
         * 
         */
        public Builder missWorkerEnable(Boolean missWorkerEnable) {
            return missWorkerEnable(Output.of(missWorkerEnable));
        }

        /**
         * @param sendChannel Alarm sending form
         * - sms: sms alarm
         * - phone: phone alarm
         * - mail: mail alarm
         * - webhook:webhook alarm
         * 
         * @return builder
         * 
         */
        public Builder sendChannel(@Nullable Output<String> sendChannel) {
            $.sendChannel = sendChannel;
            return this;
        }

        /**
         * @param sendChannel Alarm sending form
         * - sms: sms alarm
         * - phone: phone alarm
         * - mail: mail alarm
         * - webhook:webhook alarm
         * 
         * @return builder
         * 
         */
        public Builder sendChannel(String sendChannel) {
            return sendChannel(Output.of(sendChannel));
        }

        /**
         * @param timeout Timeout threshold, unit s, default 7200.
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable Output<Integer> timeout) {
            $.timeout = timeout;
            return this;
        }

        /**
         * @param timeout Timeout threshold, unit s, default 7200.
         * 
         * @return builder
         * 
         */
        public Builder timeout(Integer timeout) {
            return timeout(Output.of(timeout));
        }

        /**
         * @param timeoutEnable Time-out alarm switch. The values are as follows:
         * 
         * @return builder
         * 
         */
        public Builder timeoutEnable(@Nullable Output<Boolean> timeoutEnable) {
            $.timeoutEnable = timeoutEnable;
            return this;
        }

        /**
         * @param timeoutEnable Time-out alarm switch. The values are as follows:
         * 
         * @return builder
         * 
         */
        public Builder timeoutEnable(Boolean timeoutEnable) {
            return timeoutEnable(Output.of(timeoutEnable));
        }

        /**
         * @param timeoutKillEnable The trigger switch is terminated by timeout and is turned off by default.
         * 
         * @return builder
         * 
         */
        public Builder timeoutKillEnable(@Nullable Output<Boolean> timeoutKillEnable) {
            $.timeoutKillEnable = timeoutKillEnable;
            return this;
        }

        /**
         * @param timeoutKillEnable The trigger switch is terminated by timeout and is turned off by default.
         * 
         * @return builder
         * 
         */
        public Builder timeoutKillEnable(Boolean timeoutKillEnable) {
            return timeoutKillEnable(Output.of(timeoutKillEnable));
        }

        public JobJobMonitorInfoMonitorConfigArgs build() {
            return $;
        }
    }

}
