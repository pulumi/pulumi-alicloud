// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AntiBruteForceRuleProtocolTypeArgs extends com.pulumi.resources.ResourceArgs {

    public static final AntiBruteForceRuleProtocolTypeArgs Empty = new AntiBruteForceRuleProtocolTypeArgs();

    /**
     * Whether to enable RDP interception. Default value: `on`. Valid values: `on`, `off`.
     * 
     */
    @Import(name="rdp")
    private @Nullable Output<String> rdp;

    /**
     * @return Whether to enable RDP interception. Default value: `on`. Valid values: `on`, `off`.
     * 
     */
    public Optional<Output<String>> rdp() {
        return Optional.ofNullable(this.rdp);
    }

    /**
     * Whether to enable the SqlServer interception method. Default value: `off`. Valid values: `on`, `off`.
     * 
     */
    @Import(name="sqlServer")
    private @Nullable Output<String> sqlServer;

    /**
     * @return Whether to enable the SqlServer interception method. Default value: `off`. Valid values: `on`, `off`.
     * 
     */
    public Optional<Output<String>> sqlServer() {
        return Optional.ofNullable(this.sqlServer);
    }

    /**
     * Whether to enable SSH interception. Default value: `on`. Valid values: `on`, `off`.
     * 
     */
    @Import(name="ssh")
    private @Nullable Output<String> ssh;

    /**
     * @return Whether to enable SSH interception. Default value: `on`. Valid values: `on`, `off`.
     * 
     */
    public Optional<Output<String>> ssh() {
        return Optional.ofNullable(this.ssh);
    }

    private AntiBruteForceRuleProtocolTypeArgs() {}

    private AntiBruteForceRuleProtocolTypeArgs(AntiBruteForceRuleProtocolTypeArgs $) {
        this.rdp = $.rdp;
        this.sqlServer = $.sqlServer;
        this.ssh = $.ssh;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AntiBruteForceRuleProtocolTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AntiBruteForceRuleProtocolTypeArgs $;

        public Builder() {
            $ = new AntiBruteForceRuleProtocolTypeArgs();
        }

        public Builder(AntiBruteForceRuleProtocolTypeArgs defaults) {
            $ = new AntiBruteForceRuleProtocolTypeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param rdp Whether to enable RDP interception. Default value: `on`. Valid values: `on`, `off`.
         * 
         * @return builder
         * 
         */
        public Builder rdp(@Nullable Output<String> rdp) {
            $.rdp = rdp;
            return this;
        }

        /**
         * @param rdp Whether to enable RDP interception. Default value: `on`. Valid values: `on`, `off`.
         * 
         * @return builder
         * 
         */
        public Builder rdp(String rdp) {
            return rdp(Output.of(rdp));
        }

        /**
         * @param sqlServer Whether to enable the SqlServer interception method. Default value: `off`. Valid values: `on`, `off`.
         * 
         * @return builder
         * 
         */
        public Builder sqlServer(@Nullable Output<String> sqlServer) {
            $.sqlServer = sqlServer;
            return this;
        }

        /**
         * @param sqlServer Whether to enable the SqlServer interception method. Default value: `off`. Valid values: `on`, `off`.
         * 
         * @return builder
         * 
         */
        public Builder sqlServer(String sqlServer) {
            return sqlServer(Output.of(sqlServer));
        }

        /**
         * @param ssh Whether to enable SSH interception. Default value: `on`. Valid values: `on`, `off`.
         * 
         * @return builder
         * 
         */
        public Builder ssh(@Nullable Output<String> ssh) {
            $.ssh = ssh;
            return this;
        }

        /**
         * @param ssh Whether to enable SSH interception. Default value: `on`. Valid values: `on`, `off`.
         * 
         * @return builder
         * 
         */
        public Builder ssh(String ssh) {
            return ssh(Output.of(ssh));
        }

        public AntiBruteForceRuleProtocolTypeArgs build() {
            return $;
        }
    }

}
