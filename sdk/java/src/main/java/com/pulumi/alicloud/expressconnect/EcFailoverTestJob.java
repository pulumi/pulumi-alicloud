// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.expressconnect;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.expressconnect.EcFailoverTestJobArgs;
import com.pulumi.alicloud.expressconnect.inputs.EcFailoverTestJobState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Express Connect Ec Failover Test Job resource. Express Connect Failover Test Job.
 * 
 * For information about Express Connect Ec Failover Test Job and how to use it, see [What is Ec Failover Test Job](https://www.alibabacloud.com/help/zh/express-connect/developer-reference/api-vpc-2016-04-28-createfailovertestjob-efficiency-channels).
 * 
 * &gt; **NOTE:** Available since v1.215.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.expressconnect.ExpressconnectFunctions;
 * import com.pulumi.alicloud.expressconnect.inputs.GetPhysicalConnectionsArgs;
 * import com.pulumi.alicloud.expressconnect.EcFailoverTestJob;
 * import com.pulumi.alicloud.expressconnect.EcFailoverTestJobArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get(&#34;name&#34;).orElse(&#34;terraform-example&#34;);
 *         final var defaultPhysicalConnections = ExpressconnectFunctions.getPhysicalConnections(GetPhysicalConnectionsArgs.builder()
 *             .nameRegex(&#34;preserved-NODELETING&#34;)
 *             .build());
 * 
 *         var defaultEcFailoverTestJob = new EcFailoverTestJob(&#34;defaultEcFailoverTestJob&#34;, EcFailoverTestJobArgs.builder()        
 *             .description(name)
 *             .jobType(&#34;StartNow&#34;)
 *             .resourceIds(            
 *                 defaultPhysicalConnections.applyValue(getPhysicalConnectionsResult -&gt; getPhysicalConnectionsResult.ids()[0]),
 *                 defaultPhysicalConnections.applyValue(getPhysicalConnectionsResult -&gt; getPhysicalConnectionsResult.ids()[1]),
 *                 defaultPhysicalConnections.applyValue(getPhysicalConnectionsResult -&gt; getPhysicalConnectionsResult.ids()[2]))
 *             .jobDuration(&#34;1&#34;)
 *             .resourceType(&#34;PHYSICALCONNECTION&#34;)
 *             .ecFailoverTestJobName(name)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Express Connect Ec Failover Test Job can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:expressconnect/ecFailoverTestJob:EcFailoverTestJob example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:expressconnect/ecFailoverTestJob:EcFailoverTestJob")
public class EcFailoverTestJob extends com.pulumi.resources.CustomResource {
    /**
     * Job description.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Job description.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Job name.
     * 
     */
    @Export(name="ecFailoverTestJobName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ecFailoverTestJobName;

    /**
     * @return Job name.
     * 
     */
    public Output<Optional<String>> ecFailoverTestJobName() {
        return Codegen.optional(this.ecFailoverTestJobName);
    }
    /**
     * Job duration.
     * 
     */
    @Export(name="jobDuration", refs={Integer.class}, tree="[0]")
    private Output<Integer> jobDuration;

    /**
     * @return Job duration.
     * 
     */
    public Output<Integer> jobDuration() {
        return this.jobDuration;
    }
    /**
     * Job type.
     * 
     */
    @Export(name="jobType", refs={String.class}, tree="[0]")
    private Output<String> jobType;

    /**
     * @return Job type.
     * 
     */
    public Output<String> jobType() {
        return this.jobType;
    }
    /**
     * Resource id list.
     * 
     */
    @Export(name="resourceIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> resourceIds;

    /**
     * @return Resource id list.
     * 
     */
    public Output<List<String>> resourceIds() {
        return this.resourceIds;
    }
    /**
     * Resource type.
     * 
     */
    @Export(name="resourceType", refs={String.class}, tree="[0]")
    private Output<String> resourceType;

    /**
     * @return Resource type.
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }
    /**
     * The status of the resource.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the resource.
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EcFailoverTestJob(String name) {
        this(name, EcFailoverTestJobArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EcFailoverTestJob(String name, EcFailoverTestJobArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EcFailoverTestJob(String name, EcFailoverTestJobArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:expressconnect/ecFailoverTestJob:EcFailoverTestJob", name, args == null ? EcFailoverTestJobArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private EcFailoverTestJob(String name, Output<String> id, @Nullable EcFailoverTestJobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:expressconnect/ecFailoverTestJob:EcFailoverTestJob", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EcFailoverTestJob get(String name, Output<String> id, @Nullable EcFailoverTestJobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EcFailoverTestJob(name, id, state, options);
    }
}
