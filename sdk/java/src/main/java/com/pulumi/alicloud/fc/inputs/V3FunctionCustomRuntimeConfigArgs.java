// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc.inputs;

import com.pulumi.alicloud.fc.inputs.V3FunctionCustomRuntimeConfigHealthCheckConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V3FunctionCustomRuntimeConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final V3FunctionCustomRuntimeConfigArgs Empty = new V3FunctionCustomRuntimeConfigArgs();

    /**
     * Instance startup parameters.
     * 
     */
    @Import(name="args")
    private @Nullable Output<List<String>> args;

    /**
     * @return Instance startup parameters.
     * 
     */
    public Optional<Output<List<String>>> args() {
        return Optional.ofNullable(this.args);
    }

    /**
     * Instance start command.
     * 
     */
    @Import(name="commands")
    private @Nullable Output<List<String>> commands;

    /**
     * @return Instance start command.
     * 
     */
    public Optional<Output<List<String>>> commands() {
        return Optional.ofNullable(this.commands);
    }

    /**
     * Function custom health check configuration. See `healthCheckConfig` below.
     * 
     */
    @Import(name="healthCheckConfig")
    private @Nullable Output<V3FunctionCustomRuntimeConfigHealthCheckConfigArgs> healthCheckConfig;

    /**
     * @return Function custom health check configuration. See `healthCheckConfig` below.
     * 
     */
    public Optional<Output<V3FunctionCustomRuntimeConfigHealthCheckConfigArgs>> healthCheckConfig() {
        return Optional.ofNullable(this.healthCheckConfig);
    }

    /**
     * The listening port of the HTTP Server.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return The listening port of the HTTP Server.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    private V3FunctionCustomRuntimeConfigArgs() {}

    private V3FunctionCustomRuntimeConfigArgs(V3FunctionCustomRuntimeConfigArgs $) {
        this.args = $.args;
        this.commands = $.commands;
        this.healthCheckConfig = $.healthCheckConfig;
        this.port = $.port;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V3FunctionCustomRuntimeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V3FunctionCustomRuntimeConfigArgs $;

        public Builder() {
            $ = new V3FunctionCustomRuntimeConfigArgs();
        }

        public Builder(V3FunctionCustomRuntimeConfigArgs defaults) {
            $ = new V3FunctionCustomRuntimeConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param args Instance startup parameters.
         * 
         * @return builder
         * 
         */
        public Builder args(@Nullable Output<List<String>> args) {
            $.args = args;
            return this;
        }

        /**
         * @param args Instance startup parameters.
         * 
         * @return builder
         * 
         */
        public Builder args(List<String> args) {
            return args(Output.of(args));
        }

        /**
         * @param args Instance startup parameters.
         * 
         * @return builder
         * 
         */
        public Builder args(String... args) {
            return args(List.of(args));
        }

        /**
         * @param commands Instance start command.
         * 
         * @return builder
         * 
         */
        public Builder commands(@Nullable Output<List<String>> commands) {
            $.commands = commands;
            return this;
        }

        /**
         * @param commands Instance start command.
         * 
         * @return builder
         * 
         */
        public Builder commands(List<String> commands) {
            return commands(Output.of(commands));
        }

        /**
         * @param commands Instance start command.
         * 
         * @return builder
         * 
         */
        public Builder commands(String... commands) {
            return commands(List.of(commands));
        }

        /**
         * @param healthCheckConfig Function custom health check configuration. See `healthCheckConfig` below.
         * 
         * @return builder
         * 
         */
        public Builder healthCheckConfig(@Nullable Output<V3FunctionCustomRuntimeConfigHealthCheckConfigArgs> healthCheckConfig) {
            $.healthCheckConfig = healthCheckConfig;
            return this;
        }

        /**
         * @param healthCheckConfig Function custom health check configuration. See `healthCheckConfig` below.
         * 
         * @return builder
         * 
         */
        public Builder healthCheckConfig(V3FunctionCustomRuntimeConfigHealthCheckConfigArgs healthCheckConfig) {
            return healthCheckConfig(Output.of(healthCheckConfig));
        }

        /**
         * @param port The listening port of the HTTP Server.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port The listening port of the HTTP Server.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        public V3FunctionCustomRuntimeConfigArgs build() {
            return $;
        }
    }

}
