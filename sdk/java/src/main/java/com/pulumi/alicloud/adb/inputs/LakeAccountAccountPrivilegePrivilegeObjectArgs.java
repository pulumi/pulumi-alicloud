// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.adb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LakeAccountAccountPrivilegePrivilegeObjectArgs extends com.pulumi.resources.ResourceArgs {

    public static final LakeAccountAccountPrivilegePrivilegeObjectArgs Empty = new LakeAccountAccountPrivilegePrivilegeObjectArgs();

    /**
     * The name of column.
     * 
     */
    @Import(name="column")
    private @Nullable Output<String> column;

    /**
     * @return The name of column.
     * 
     */
    public Optional<Output<String>> column() {
        return Optional.ofNullable(this.column);
    }

    /**
     * The name of database.
     * 
     */
    @Import(name="database")
    private @Nullable Output<String> database;

    /**
     * @return The name of database.
     * 
     */
    public Optional<Output<String>> database() {
        return Optional.ofNullable(this.database);
    }

    /**
     * The name of table.
     * 
     */
    @Import(name="table")
    private @Nullable Output<String> table;

    /**
     * @return The name of table.
     * 
     */
    public Optional<Output<String>> table() {
        return Optional.ofNullable(this.table);
    }

    private LakeAccountAccountPrivilegePrivilegeObjectArgs() {}

    private LakeAccountAccountPrivilegePrivilegeObjectArgs(LakeAccountAccountPrivilegePrivilegeObjectArgs $) {
        this.column = $.column;
        this.database = $.database;
        this.table = $.table;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LakeAccountAccountPrivilegePrivilegeObjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LakeAccountAccountPrivilegePrivilegeObjectArgs $;

        public Builder() {
            $ = new LakeAccountAccountPrivilegePrivilegeObjectArgs();
        }

        public Builder(LakeAccountAccountPrivilegePrivilegeObjectArgs defaults) {
            $ = new LakeAccountAccountPrivilegePrivilegeObjectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param column The name of column.
         * 
         * @return builder
         * 
         */
        public Builder column(@Nullable Output<String> column) {
            $.column = column;
            return this;
        }

        /**
         * @param column The name of column.
         * 
         * @return builder
         * 
         */
        public Builder column(String column) {
            return column(Output.of(column));
        }

        /**
         * @param database The name of database.
         * 
         * @return builder
         * 
         */
        public Builder database(@Nullable Output<String> database) {
            $.database = database;
            return this;
        }

        /**
         * @param database The name of database.
         * 
         * @return builder
         * 
         */
        public Builder database(String database) {
            return database(Output.of(database));
        }

        /**
         * @param table The name of table.
         * 
         * @return builder
         * 
         */
        public Builder table(@Nullable Output<String> table) {
            $.table = table;
            return this;
        }

        /**
         * @param table The name of table.
         * 
         * @return builder
         * 
         */
        public Builder table(String table) {
            return table(Output.of(table));
        }

        public LakeAccountAccountPrivilegePrivilegeObjectArgs build() {
            return $;
        }
    }

}
