// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nlb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LoadBalancerModificationProtectionConfig {
    /**
     * @return Opening time of the configuration read-only mode.
     * 
     */
    private @Nullable String enabledTime;
    /**
     * @return The reason why the configuration read-only mode is enabled. The value must be 2 to 128 characters in length, and can contain letters, digits, periods (.), underscores (\_), and hyphens (-). The value must start with a letter.
     * 
     * &gt; **NOTE:**   This parameter takes effect only if the `status` parameter is set to `ConsoleProtection`.
     * 
     */
    private @Nullable String reason;
    /**
     * @return Specifies whether to enable the configuration read-only mode. Valid values:
     * - `NonProtection`: disables the configuration read-only mode. In this case, you cannot set the `ModificationProtectionReason` parameter. If you specify `ModificationProtectionReason`, the value is cleared.
     * - `ConsoleProtection`: enables the configuration read-only mode. In this case, you can specify `ModificationProtectionReason`.
     * 
     * &gt; **NOTE:**  If you set this parameter to `ConsoleProtection`, you cannot use the NLB console to modify instance configurations. However, you can call API operations to modify instance configurations.
     * 
     */
    private @Nullable String status;

    private LoadBalancerModificationProtectionConfig() {}
    /**
     * @return Opening time of the configuration read-only mode.
     * 
     */
    public Optional<String> enabledTime() {
        return Optional.ofNullable(this.enabledTime);
    }
    /**
     * @return The reason why the configuration read-only mode is enabled. The value must be 2 to 128 characters in length, and can contain letters, digits, periods (.), underscores (\_), and hyphens (-). The value must start with a letter.
     * 
     * &gt; **NOTE:**   This parameter takes effect only if the `status` parameter is set to `ConsoleProtection`.
     * 
     */
    public Optional<String> reason() {
        return Optional.ofNullable(this.reason);
    }
    /**
     * @return Specifies whether to enable the configuration read-only mode. Valid values:
     * - `NonProtection`: disables the configuration read-only mode. In this case, you cannot set the `ModificationProtectionReason` parameter. If you specify `ModificationProtectionReason`, the value is cleared.
     * - `ConsoleProtection`: enables the configuration read-only mode. In this case, you can specify `ModificationProtectionReason`.
     * 
     * &gt; **NOTE:**  If you set this parameter to `ConsoleProtection`, you cannot use the NLB console to modify instance configurations. However, you can call API operations to modify instance configurations.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoadBalancerModificationProtectionConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String enabledTime;
        private @Nullable String reason;
        private @Nullable String status;
        public Builder() {}
        public Builder(LoadBalancerModificationProtectionConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabledTime = defaults.enabledTime;
    	      this.reason = defaults.reason;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder enabledTime(@Nullable String enabledTime) {

            this.enabledTime = enabledTime;
            return this;
        }
        @CustomType.Setter
        public Builder reason(@Nullable String reason) {

            this.reason = reason;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        public LoadBalancerModificationProtectionConfig build() {
            final var _resultValue = new LoadBalancerModificationProtectionConfig();
            _resultValue.enabledTime = enabledTime;
            _resultValue.reason = reason;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
