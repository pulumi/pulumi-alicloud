// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ocean;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.ocean.BaseInstanceArgs;
import com.pulumi.alicloud.ocean.inputs.BaseInstanceState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Ocean Base Instance resource.
 * 
 * For information about Ocean Base Instance and how to use it, see [What is Instance](https://www.alibabacloud.com/help/en/apsaradb-for-oceanbase/latest/what-is-oceanbase-database).
 * 
 * &gt; **NOTE:** Available since v1.203.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
 * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
 * import com.pulumi.alicloud.ocean.BaseInstance;
 * import com.pulumi.alicloud.ocean.BaseInstanceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get(&#34;name&#34;).orElse(&#34;terraform-example&#34;);
 *         final var defaultZones = AlicloudFunctions.getZones();
 * 
 *         final var defaultResourceGroups = ResourcemanagerFunctions.getResourceGroups();
 * 
 *         var defaultBaseInstance = new BaseInstance(&#34;defaultBaseInstance&#34;, BaseInstanceArgs.builder()        
 *             .resourceGroupId(defaultResourceGroups.applyValue(getResourceGroupsResult -&gt; getResourceGroupsResult.ids()[0]))
 *             .zones(            
 *                 defaultZones.applyValue(getZonesResult -&gt; getZonesResult.ids())[defaultZones.applyValue(getZonesResult -&gt; getZonesResult.ids()).length() - 2],
 *                 defaultZones.applyValue(getZonesResult -&gt; getZonesResult.ids())[defaultZones.applyValue(getZonesResult -&gt; getZonesResult.ids()).length() - 3],
 *                 defaultZones.applyValue(getZonesResult -&gt; getZonesResult.ids())[defaultZones.applyValue(getZonesResult -&gt; getZonesResult.ids()).length() - 4])
 *             .autoRenew(&#34;false&#34;)
 *             .diskSize(&#34;100&#34;)
 *             .paymentType(&#34;PayAsYouGo&#34;)
 *             .instanceClass(&#34;8C32GB&#34;)
 *             .backupRetainMode(&#34;delete_all&#34;)
 *             .series(&#34;normal&#34;)
 *             .instanceName(name)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Ocean Base Instance can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:ocean/baseInstance:BaseInstance example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:ocean/baseInstance:BaseInstance")
public class BaseInstance extends com.pulumi.resources.CustomResource {
    /**
     * Whether to automatically renew.
     * It takes effect when the parameter ChargeType is PrePaid. Value range:
     * - true: automatic renewal.
     * - false (default): no automatic renewal.
     * 
     */
    @Export(name="autoRenew", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autoRenew;

    /**
     * @return Whether to automatically renew.
     * It takes effect when the parameter ChargeType is PrePaid. Value range:
     * - true: automatic renewal.
     * - false (default): no automatic renewal.
     * 
     */
    public Output<Optional<Boolean>> autoRenew() {
        return Codegen.optional(this.autoRenew);
    }
    /**
     * The duration of each auto-renewal. When the value of the AutoRenew parameter is True, this parameter is required.
     * - PeriodUnit is Week, AutoRenewPeriod is {&#34;1&#34;, &#34;2&#34;, &#34;3&#34;}.
     * - PeriodUnit is Month, AutoRenewPeriod is {&#34;1&#34;, &#34;2&#34;, &#34;3&#34;, &#34;6&#34;, &#34;12&#34;}.
     * 
     */
    @Export(name="autoRenewPeriod", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> autoRenewPeriod;

    /**
     * @return The duration of each auto-renewal. When the value of the AutoRenew parameter is True, this parameter is required.
     * - PeriodUnit is Week, AutoRenewPeriod is {&#34;1&#34;, &#34;2&#34;, &#34;3&#34;}.
     * - PeriodUnit is Month, AutoRenewPeriod is {&#34;1&#34;, &#34;2&#34;, &#34;3&#34;, &#34;6&#34;, &#34;12&#34;}.
     * 
     */
    public Output<Optional<Integer>> autoRenewPeriod() {
        return Codegen.optional(this.autoRenewPeriod);
    }
    /**
     * The backup retention policy after the cluster is deleted. The values are as follows:
     * - receive_all: Keep all backup sets;
     * - delete_all: delete all backup sets;
     * - receive_last: Keep the last backup set.
     * &gt; **NOTE:**   The default value is delete_all.
     * 
     */
    @Export(name="backupRetainMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> backupRetainMode;

    /**
     * @return The backup retention policy after the cluster is deleted. The values are as follows:
     * - receive_all: Keep all backup sets;
     * - delete_all: delete all backup sets;
     * - receive_last: Keep the last backup set.
     * &gt; **NOTE:**   The default value is delete_all.
     * 
     */
    public Output<Optional<String>> backupRetainMode() {
        return Codegen.optional(this.backupRetainMode);
    }
    /**
     * The product code of the OceanBase cluster._oceanbasepre_public_cn: Domestic station cloud database package Year-to-month package._oceanbasepost_public_cn: The domestic station cloud database is paid by the hour._obpre_public_intl: International Station Cloud Database Package Monthly Package.
     * 
     */
    @Export(name="commodityCode", refs={String.class}, tree="[0]")
    private Output<String> commodityCode;

    /**
     * @return The product code of the OceanBase cluster._oceanbasepre_public_cn: Domestic station cloud database package Year-to-month package._oceanbasepost_public_cn: The domestic station cloud database is paid by the hour._obpre_public_intl: International Station Cloud Database Package Monthly Package.
     * 
     */
    public Output<String> commodityCode() {
        return this.commodityCode;
    }
    /**
     * The number of CPU cores of the cluster.
     * 
     */
    @Export(name="cpu", refs={Integer.class}, tree="[0]")
    private Output<Integer> cpu;

    /**
     * @return The number of CPU cores of the cluster.
     * 
     */
    public Output<Integer> cpu() {
        return this.cpu;
    }
    /**
     * The creation time of the resource.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The creation time of the resource.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The size of the storage space, in GB.
     * The limits of storage space vary according to the cluster specifications, as follows:
     * - 8C32GB:100GB ~ 10000GB
     * - 14C70GB:200GB ~ 10000GB
     * - 30C180GB:400GB ~ 10000GB
     * - 62C400G:800GB ~ 10000GB.
     *   The default value of each package is its minimum value.
     * 
     */
    @Export(name="diskSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> diskSize;

    /**
     * @return The size of the storage space, in GB.
     * The limits of storage space vary according to the cluster specifications, as follows:
     * - 8C32GB:100GB ~ 10000GB
     * - 14C70GB:200GB ~ 10000GB
     * - 30C180GB:400GB ~ 10000GB
     * - 62C400G:800GB ~ 10000GB.
     *   The default value of each package is its minimum value.
     * 
     */
    public Output<Integer> diskSize() {
        return this.diskSize;
    }
    /**
     * The storage type of the cluster. Effective only in the standard cluster version (cloud disk).
     * Two types are currently supported:
     * - cloud_essd_pl1: cloud disk ESSD pl1.
     * - cloud_essd_pl0: cloud disk ESSD pl0. The default value is cloud_essd_pl1.
     * 
     */
    @Export(name="diskType", refs={String.class}, tree="[0]")
    private Output<String> diskType;

    /**
     * @return The storage type of the cluster. Effective only in the standard cluster version (cloud disk).
     * Two types are currently supported:
     * - cloud_essd_pl1: cloud disk ESSD pl1.
     * - cloud_essd_pl0: cloud disk ESSD pl0. The default value is cloud_essd_pl1.
     * 
     */
    public Output<String> diskType() {
        return this.diskType;
    }
    /**
     * Cluster specification information.
     * Four packages are currently supported:
     * - 4C16GB：4cores 16GB
     * - 8C32GB：8cores 32GB
     * - 14C70GB：14cores 70GB
     * - 24C120GB：24cores 120GB
     * - 30C180GB：30cores 180GB
     * - 62C400GB：62cores 400GB
     * - 104C600GB：104cores 600GB
     * - 16C70GB：16cores 70GB
     * - 32C160GB：32cores 160GB
     * - 64C380GB：64cores 380GB
     * - 20C32GB：20cores 32GB
     * - 40C64GB：40cores 64GB
     * - 16C32GB：16cores 32GB
     * - 32C70GB：32cores 70GB
     * - 64C180GB：64cores 180GB
     * - 32C180GB：32cores 180GB
     * - 64C400GB：64cores 400GB.
     * 
     */
    @Export(name="instanceClass", refs={String.class}, tree="[0]")
    private Output<String> instanceClass;

    /**
     * @return Cluster specification information.
     * Four packages are currently supported:
     * - 4C16GB：4cores 16GB
     * - 8C32GB：8cores 32GB
     * - 14C70GB：14cores 70GB
     * - 24C120GB：24cores 120GB
     * - 30C180GB：30cores 180GB
     * - 62C400GB：62cores 400GB
     * - 104C600GB：104cores 600GB
     * - 16C70GB：16cores 70GB
     * - 32C160GB：32cores 160GB
     * - 64C380GB：64cores 380GB
     * - 20C32GB：20cores 32GB
     * - 40C64GB：40cores 64GB
     * - 16C32GB：16cores 32GB
     * - 32C70GB：32cores 70GB
     * - 64C180GB：64cores 180GB
     * - 32C180GB：32cores 180GB
     * - 64C400GB：64cores 400GB.
     * 
     */
    public Output<String> instanceClass() {
        return this.instanceClass;
    }
    /**
     * OceanBase cluster name.The length is 1 to 20 English or Chinese characters.If this parameter is not specified, the default value is the InstanceId of the cluster.
     * 
     */
    @Export(name="instanceName", refs={String.class}, tree="[0]")
    private Output<String> instanceName;

    /**
     * @return OceanBase cluster name.The length is 1 to 20 English or Chinese characters.If this parameter is not specified, the default value is the InstanceId of the cluster.
     * 
     */
    public Output<String> instanceName() {
        return this.instanceName;
    }
    /**
     * The number of nodes in the cluster. If the deployment mode is n-n-n, the number of nodes is n * 3.
     * 
     */
    @Export(name="nodeNum", refs={String.class}, tree="[0]")
    private Output<String> nodeNum;

    /**
     * @return The number of nodes in the cluster. If the deployment mode is n-n-n, the number of nodes is n * 3.
     * 
     */
    public Output<String> nodeNum() {
        return this.nodeNum;
    }
    /**
     * The OceanBase Server version number.
     * 
     */
    @Export(name="obVersion", refs={String.class}, tree="[0]")
    private Output<String> obVersion;

    /**
     * @return The OceanBase Server version number.
     * 
     */
    public Output<String> obVersion() {
        return this.obVersion;
    }
    /**
     * The payment method of the instance. Value range:
     * - Subscription: Package year and month. When you select this type of payment method, you must make sure that your account supports balance payment or credit payment. Otherwise, an InvalidPayMethod error message will be returned.
     * - PayAsYouGo (default): Pay-as-you-go (default hourly billing).
     * 
     */
    @Export(name="paymentType", refs={String.class}, tree="[0]")
    private Output<String> paymentType;

    /**
     * @return The payment method of the instance. Value range:
     * - Subscription: Package year and month. When you select this type of payment method, you must make sure that your account supports balance payment or credit payment. Otherwise, an InvalidPayMethod error message will be returned.
     * - PayAsYouGo (default): Pay-as-you-go (default hourly billing).
     * 
     */
    public Output<String> paymentType() {
        return this.paymentType;
    }
    /**
     * The duration of the resource purchase. The unit is specified by the PeriodUnit. The parameter InstanceChargeType takes effect only when the value is PrePaid and is required. Once the DedicatedHostId is specified, the value cannot exceed the subscription duration of the dedicated host. When PeriodUnit = Week, Period values: {&#34;1&#34;, &#34;2&#34;, &#34;3&#34;, &#34;4&#34;}. When PeriodUnit = Month, Period values: {&#34;1&#34;, &#34;2&#34;, &#34;3&#34;, &#34;4&#34;, &#34;5&#34;, &#34;6&#34;, &#34;7&#34;, &#34;8&#34;, &#34;9&#34;, &#34;12&#34;, &#34;24&#34;, &#34;36&#34;, &#34;48&#34;, &#34;60&#34;}.
     * 
     */
    @Export(name="period", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> period;

    /**
     * @return The duration of the resource purchase. The unit is specified by the PeriodUnit. The parameter InstanceChargeType takes effect only when the value is PrePaid and is required. Once the DedicatedHostId is specified, the value cannot exceed the subscription duration of the dedicated host. When PeriodUnit = Week, Period values: {&#34;1&#34;, &#34;2&#34;, &#34;3&#34;, &#34;4&#34;}. When PeriodUnit = Month, Period values: {&#34;1&#34;, &#34;2&#34;, &#34;3&#34;, &#34;4&#34;, &#34;5&#34;, &#34;6&#34;, &#34;7&#34;, &#34;8&#34;, &#34;9&#34;, &#34;12&#34;, &#34;24&#34;, &#34;36&#34;, &#34;48&#34;, &#34;60&#34;}.
     * 
     */
    public Output<Optional<Integer>> period() {
        return Codegen.optional(this.period);
    }
    /**
     * The duration of the purchase of resources.Package year and Month value range: Month.Default value: Month of the package, which is billed by volume. The default period is Hour.
     * 
     */
    @Export(name="periodUnit", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> periodUnit;

    /**
     * @return The duration of the purchase of resources.Package year and Month value range: Month.Default value: Month of the package, which is billed by volume. The default period is Hour.
     * 
     */
    public Output<Optional<String>> periodUnit() {
        return Codegen.optional(this.periodUnit);
    }
    /**
     * The ID of the enterprise resource group to which the instance resides.
     * 
     */
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupId;

    /**
     * @return The ID of the enterprise resource group to which the instance resides.
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * Series of OceanBase cluster instances-normal (default): Standard cluster version (cloud disk)-normal_SSD: Standard cluster version (local disk)-history: history Library cluster version.
     * 
     */
    @Export(name="series", refs={String.class}, tree="[0]")
    private Output<String> series;

    /**
     * @return Series of OceanBase cluster instances-normal (default): Standard cluster version (cloud disk)-normal_SSD: Standard cluster version (local disk)-history: history Library cluster version.
     * 
     */
    public Output<String> series() {
        return this.series;
    }
    /**
     * The status of the resource.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the resource.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Information about the zone where the cluster is deployed.
     * 
     */
    @Export(name="zones", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> zones;

    /**
     * @return Information about the zone where the cluster is deployed.
     * 
     */
    public Output<List<String>> zones() {
        return this.zones;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BaseInstance(String name) {
        this(name, BaseInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BaseInstance(String name, BaseInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BaseInstance(String name, BaseInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ocean/baseInstance:BaseInstance", name, args == null ? BaseInstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private BaseInstance(String name, Output<String> id, @Nullable BaseInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ocean/baseInstance:BaseInstance", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BaseInstance get(String name, Output<String> id, @Nullable BaseInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BaseInstance(name, id, state, options);
    }
}
