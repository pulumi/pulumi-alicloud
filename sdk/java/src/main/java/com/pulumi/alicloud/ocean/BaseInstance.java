// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ocean;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.ocean.BaseInstanceArgs;
import com.pulumi.alicloud.ocean.inputs.BaseInstanceState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Ocean Base Instance resource.
 * 
 * For information about Ocean Base Instance and how to use it, see [What is Instance](https://www.alibabacloud.com/help/en/apsaradb-for-oceanbase/latest/what-is-oceanbase-database).
 * 
 * &gt; **NOTE:** Available in v1.203.0+.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.ocean.BaseInstance;
 * import com.pulumi.alicloud.ocean.BaseInstanceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new BaseInstance(&#34;default&#34;, BaseInstanceArgs.builder()        
 *             .instanceName(var_.name())
 *             .series(&#34;normal&#34;)
 *             .diskSize(200)
 *             .instanceClass(&#34;14C70GB&#34;)
 *             .zones(            
 *                 &#34;ap-southeast-1a&#34;,
 *                 &#34;ap-southeast-1b&#34;,
 *                 &#34;ap-southeast-1c&#34;)
 *             .paymentType(&#34;PayAsYouGo&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Ocean Base Instance can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:ocean/baseInstance:BaseInstance example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:ocean/baseInstance:BaseInstance")
public class BaseInstance extends com.pulumi.resources.CustomResource {
    /**
     * Whether to automatically renew.It takes effect when the parameter ChargeType is PrePaid. Value range:
     * - true: automatic renewal.
     * - false (default): no automatic renewal.
     * 
     */
    @Export(name="autoRenew", type=Boolean.class, parameters={})
    private Output<Boolean> autoRenew;

    /**
     * @return Whether to automatically renew.It takes effect when the parameter ChargeType is PrePaid. Value range:
     * - true: automatic renewal.
     * - false (default): no automatic renewal.
     * 
     */
    public Output<Boolean> autoRenew() {
        return this.autoRenew;
    }
    /**
     * The duration of each auto-renewal. When the value of the AutoRenew parameter is True, this parameter is required.-PeriodUnit is Week, AutoRenewPeriod is {&#34;1&#34;, &#34;2&#34;, &#34;3&#34;}.-PeriodUnit is Month, AutoRenewPeriod is {&#34;1&#34;, &#34;2&#34;, &#34;3&#34;, &#34;6&#34;, &#34;12&#34;}.
     * 
     */
    @Export(name="autoRenewPeriod", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> autoRenewPeriod;

    /**
     * @return The duration of each auto-renewal. When the value of the AutoRenew parameter is True, this parameter is required.-PeriodUnit is Week, AutoRenewPeriod is {&#34;1&#34;, &#34;2&#34;, &#34;3&#34;}.-PeriodUnit is Month, AutoRenewPeriod is {&#34;1&#34;, &#34;2&#34;, &#34;3&#34;, &#34;6&#34;, &#34;12&#34;}.
     * 
     */
    public Output<Optional<Integer>> autoRenewPeriod() {
        return Codegen.optional(this.autoRenewPeriod);
    }
    /**
     * The backup retain mode.
     * 
     */
    @Export(name="backupRetainMode", type=String.class, parameters={})
    private Output</* @Nullable */ String> backupRetainMode;

    /**
     * @return The backup retain mode.
     * 
     */
    public Output<Optional<String>> backupRetainMode() {
        return Codegen.optional(this.backupRetainMode);
    }
    /**
     * The product code of the OceanBase cluster.
     * - oceanbase_oceanbasepre_public_cn: Domestic station cloud database package Year-to-month package.
     * - oceanbase_oceanbasepost_public_cn: The domestic station cloud database is paid by the hour.
     * - oceanbase_obpre_public_intl: International Station Cloud Database Package Monthly Package.
     * 
     */
    @Export(name="commodityCode", type=String.class, parameters={})
    private Output<String> commodityCode;

    /**
     * @return The product code of the OceanBase cluster.
     * - oceanbase_oceanbasepre_public_cn: Domestic station cloud database package Year-to-month package.
     * - oceanbase_oceanbasepost_public_cn: The domestic station cloud database is paid by the hour.
     * - oceanbase_obpre_public_intl: International Station Cloud Database Package Monthly Package.
     * 
     */
    public Output<String> commodityCode() {
        return this.commodityCode;
    }
    /**
     * The number of CPU cores of the cluster.
     * 
     */
    @Export(name="cpu", type=Integer.class, parameters={})
    private Output<Integer> cpu;

    /**
     * @return The number of CPU cores of the cluster.
     * 
     */
    public Output<Integer> cpu() {
        return this.cpu;
    }
    /**
     * The creation time of the resource
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return The creation time of the resource
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The size of the storage space, in GB.The limits of storage space vary according to the cluster specifications, as follows:
     * - 8C32GB:100GB ~ 10000GB
     * - 14C70GB:200GB ~ 10000GB
     * - 30C180GB:400GB ~ 10000GB
     * - 62C400G:800GB-10000GB.
     * - The default value of each package is its minimum value.
     * 
     */
    @Export(name="diskSize", type=Integer.class, parameters={})
    private Output<Integer> diskSize;

    /**
     * @return The size of the storage space, in GB.The limits of storage space vary according to the cluster specifications, as follows:
     * - 8C32GB:100GB ~ 10000GB
     * - 14C70GB:200GB ~ 10000GB
     * - 30C180GB:400GB ~ 10000GB
     * - 62C400G:800GB-10000GB.
     * - The default value of each package is its minimum value.
     * 
     */
    public Output<Integer> diskSize() {
        return this.diskSize;
    }
    /**
     * Cluster specification information. Valid values: `14C70GB` (default), `30C180GB`, `62C400GB`, `8C32GB`.
     * 
     */
    @Export(name="instanceClass", type=String.class, parameters={})
    private Output<String> instanceClass;

    /**
     * @return Cluster specification information. Valid values: `14C70GB` (default), `30C180GB`, `62C400GB`, `8C32GB`.
     * 
     */
    public Output<String> instanceClass() {
        return this.instanceClass;
    }
    /**
     * OceanBase cluster name. The length is 1 to 20 English or Chinese characters. If this parameter is not specified, the default value is the InstanceId of the cluster.
     * 
     */
    @Export(name="instanceName", type=String.class, parameters={})
    private Output<String> instanceName;

    /**
     * @return OceanBase cluster name. The length is 1 to 20 English or Chinese characters. If this parameter is not specified, the default value is the InstanceId of the cluster.
     * 
     */
    public Output<String> instanceName() {
        return this.instanceName;
    }
    /**
     * The number of nodes in the cluster.
     * 
     */
    @Export(name="nodeNum", type=String.class, parameters={})
    private Output<String> nodeNum;

    /**
     * @return The number of nodes in the cluster.
     * 
     */
    public Output<String> nodeNum() {
        return this.nodeNum;
    }
    /**
     * The payment method of the instance. Valid values: `PayAsYouGo`, `Subscription`.
     * 
     */
    @Export(name="paymentType", type=String.class, parameters={})
    private Output<String> paymentType;

    /**
     * @return The payment method of the instance. Valid values: `PayAsYouGo`, `Subscription`.
     * 
     */
    public Output<String> paymentType() {
        return this.paymentType;
    }
    /**
     * The duration of the resource purchase. The unit is specified by the PeriodUnit. The parameter `payment_type` takes effect only when the value is `Subscription` and is required. Once the DedicatedHostId is specified, the value cannot exceed the subscription duration of the dedicated host. When `period_unit` = Year, Period values: {&#34;1&#34;, &#34;2&#34;, &#34;3&#34;}. When `period_unit` = Month, Period values: {&#34;1&#34;, &#34;2&#34;, &#34;3&#34;, &#34;4&#34;, &#34;5&#34;, &#34;6&#34;, &#34;7&#34;, &#34;8&#34;, &#34;9&#34;}.
     * 
     */
    @Export(name="period", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> period;

    /**
     * @return The duration of the resource purchase. The unit is specified by the PeriodUnit. The parameter `payment_type` takes effect only when the value is `Subscription` and is required. Once the DedicatedHostId is specified, the value cannot exceed the subscription duration of the dedicated host. When `period_unit` = Year, Period values: {&#34;1&#34;, &#34;2&#34;, &#34;3&#34;}. When `period_unit` = Month, Period values: {&#34;1&#34;, &#34;2&#34;, &#34;3&#34;, &#34;4&#34;, &#34;5&#34;, &#34;6&#34;, &#34;7&#34;, &#34;8&#34;, &#34;9&#34;}.
     * 
     */
    public Output<Optional<Integer>> period() {
        return Codegen.optional(this.period);
    }
    /**
     * The period unit. Valid values: `Month`,`Year`.
     * 
     */
    @Export(name="periodUnit", type=String.class, parameters={})
    private Output</* @Nullable */ String> periodUnit;

    /**
     * @return The period unit. Valid values: `Month`,`Year`.
     * 
     */
    public Output<Optional<String>> periodUnit() {
        return Codegen.optional(this.periodUnit);
    }
    /**
     * The ID of the enterprise resource group to which the instance resides.
     * 
     */
    @Export(name="resourceGroupId", type=String.class, parameters={})
    private Output<String> resourceGroupId;

    /**
     * @return The ID of the enterprise resource group to which the instance resides.
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * Series of OceanBase clusters. Valid values: `normal`(default), `history`, `normal_ssd`.
     * 
     */
    @Export(name="series", type=String.class, parameters={})
    private Output<String> series;

    /**
     * @return Series of OceanBase clusters. Valid values: `normal`(default), `history`, `normal_ssd`.
     * 
     */
    public Output<String> series() {
        return this.series;
    }
    /**
     * The status of the resource.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return The status of the resource.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Information about the zone where the cluster is deployed.
     * 
     */
    @Export(name="zones", type=List.class, parameters={String.class})
    private Output<List<String>> zones;

    /**
     * @return Information about the zone where the cluster is deployed.
     * 
     */
    public Output<List<String>> zones() {
        return this.zones;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BaseInstance(String name) {
        this(name, BaseInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BaseInstance(String name, BaseInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BaseInstance(String name, BaseInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ocean/baseInstance:BaseInstance", name, args == null ? BaseInstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private BaseInstance(String name, Output<String> id, @Nullable BaseInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ocean/baseInstance:BaseInstance", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BaseInstance get(String name, Output<String> id, @Nullable BaseInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BaseInstance(name, id, state, options);
    }
}
