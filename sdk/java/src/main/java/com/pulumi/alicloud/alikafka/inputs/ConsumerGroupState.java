// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alikafka.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConsumerGroupState extends com.pulumi.resources.ResourceArgs {

    public static final ConsumerGroupState Empty = new ConsumerGroupState();

    /**
     * ID of the consumer group. The length cannot exceed 64 characters.
     * 
     */
    @Import(name="consumerId")
    private @Nullable Output<String> consumerId;

    /**
     * @return ID of the consumer group. The length cannot exceed 64 characters.
     * 
     */
    public Optional<Output<String>> consumerId() {
        return Optional.ofNullable(this.consumerId);
    }

    /**
     * The description of the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * ID of the ALIKAFKA Instance that owns the groups.
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return ID of the ALIKAFKA Instance that owns the groups.
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ConsumerGroupState() {}

    private ConsumerGroupState(ConsumerGroupState $) {
        this.consumerId = $.consumerId;
        this.description = $.description;
        this.instanceId = $.instanceId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConsumerGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConsumerGroupState $;

        public Builder() {
            $ = new ConsumerGroupState();
        }

        public Builder(ConsumerGroupState defaults) {
            $ = new ConsumerGroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param consumerId ID of the consumer group. The length cannot exceed 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder consumerId(@Nullable Output<String> consumerId) {
            $.consumerId = consumerId;
            return this;
        }

        /**
         * @param consumerId ID of the consumer group. The length cannot exceed 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder consumerId(String consumerId) {
            return consumerId(Output.of(consumerId));
        }

        /**
         * @param description The description of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param instanceId ID of the ALIKAFKA Instance that owns the groups.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId ID of the ALIKAFKA Instance that owns the groups.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ConsumerGroupState build() {
            return $;
        }
    }

}
