// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSitesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSitesPlainArgs Empty = new GetSitesPlainArgs();

    /**
     * Access type. Value:-**NS**: Managed access via NS.-**CNAME**: access through CNAME.
     * 
     */
    @Import(name="accessType")
    private @Nullable String accessType;

    /**
     * @return Access type. Value:-**NS**: Managed access via NS.-**CNAME**: access through CNAME.
     * 
     */
    public Optional<String> accessType() {
        return Optional.ofNullable(this.accessType);
    }

    /**
     * Acceleration area
     * 
     */
    @Import(name="coverage")
    private @Nullable String coverage;

    /**
     * @return Acceleration area
     * 
     */
    public Optional<String> coverage() {
        return Optional.ofNullable(this.coverage);
    }

    /**
     * A list of Site IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable List<String> ids;

    /**
     * @return A list of Site IDs.
     * 
     */
    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * A regex string to filter results by Group Metric Rule name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable String nameRegex;

    /**
     * @return A regex string to filter results by Group Metric Rule name.
     * 
     */
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * Only the Enterprise version, pass **true** when the table only queries the enterprise version of the site.
     * 
     */
    @Import(name="onlyEnterprise")
    private @Nullable Boolean onlyEnterprise;

    /**
     * @return Only the Enterprise version, pass **true** when the table only queries the enterprise version of the site.
     * 
     */
    public Optional<Boolean> onlyEnterprise() {
        return Optional.ofNullable(this.onlyEnterprise);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * Current page number.
     * 
     */
    @Import(name="pageNumber")
    private @Nullable Integer pageNumber;

    /**
     * @return Current page number.
     * 
     */
    public Optional<Integer> pageNumber() {
        return Optional.ofNullable(this.pageNumber);
    }

    /**
     * Number of records per page.
     * 
     */
    @Import(name="pageSize")
    private @Nullable Integer pageSize;

    /**
     * @return Number of records per page.
     * 
     */
    public Optional<Integer> pageSize() {
        return Optional.ofNullable(this.pageSize);
    }

    /**
     * Package subscription type. Value:-**basicplan**: Basic version.-**standardplan**: Standard version.-**advancedplan**: Advanced version.-**enterpriseplan**: Enterprise Edition.
     * 
     */
    @Import(name="planSubscribeType")
    private @Nullable String planSubscribeType;

    /**
     * @return Package subscription type. Value:-**basicplan**: Basic version.-**standardplan**: Standard version.-**advancedplan**: Advanced version.-**enterpriseplan**: Enterprise Edition.
     * 
     */
    public Optional<String> planSubscribeType() {
        return Optional.ofNullable(this.planSubscribeType);
    }

    /**
     * The ID of the resource group
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable String resourceGroupId;

    /**
     * @return The ID of the resource group
     * 
     */
    public Optional<String> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * Site Name
     * 
     */
    @Import(name="siteName")
    private @Nullable String siteName;

    /**
     * @return Site Name
     * 
     */
    public Optional<String> siteName() {
        return Optional.ofNullable(this.siteName);
    }

    /**
     * The search match pattern for the site name. The default value is exact match. Valid values:-**prefix**: matches the prefix.-**suffix**: The suffix matches.-**exact**: exact match.-**fuzzy**: fuzzy match.
     * 
     */
    @Import(name="siteSearchType")
    private @Nullable String siteSearchType;

    /**
     * @return The search match pattern for the site name. The default value is exact match. Valid values:-**prefix**: matches the prefix.-**suffix**: The suffix matches.-**exact**: exact match.-**fuzzy**: fuzzy match.
     * 
     */
    public Optional<String> siteSearchType() {
        return Optional.ofNullable(this.siteSearchType);
    }

    /**
     * The status of the resource
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return The status of the resource
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return Resource tags
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetSitesPlainArgs() {}

    private GetSitesPlainArgs(GetSitesPlainArgs $) {
        this.accessType = $.accessType;
        this.coverage = $.coverage;
        this.ids = $.ids;
        this.nameRegex = $.nameRegex;
        this.onlyEnterprise = $.onlyEnterprise;
        this.outputFile = $.outputFile;
        this.pageNumber = $.pageNumber;
        this.pageSize = $.pageSize;
        this.planSubscribeType = $.planSubscribeType;
        this.resourceGroupId = $.resourceGroupId;
        this.siteName = $.siteName;
        this.siteSearchType = $.siteSearchType;
        this.status = $.status;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSitesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSitesPlainArgs $;

        public Builder() {
            $ = new GetSitesPlainArgs();
        }

        public Builder(GetSitesPlainArgs defaults) {
            $ = new GetSitesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessType Access type. Value:-**NS**: Managed access via NS.-**CNAME**: access through CNAME.
         * 
         * @return builder
         * 
         */
        public Builder accessType(@Nullable String accessType) {
            $.accessType = accessType;
            return this;
        }

        /**
         * @param coverage Acceleration area
         * 
         * @return builder
         * 
         */
        public Builder coverage(@Nullable String coverage) {
            $.coverage = coverage;
            return this;
        }

        /**
         * @param ids A list of Site IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Site IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param nameRegex A regex string to filter results by Group Metric Rule name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable String nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param onlyEnterprise Only the Enterprise version, pass **true** when the table only queries the enterprise version of the site.
         * 
         * @return builder
         * 
         */
        public Builder onlyEnterprise(@Nullable Boolean onlyEnterprise) {
            $.onlyEnterprise = onlyEnterprise;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param pageNumber Current page number.
         * 
         * @return builder
         * 
         */
        public Builder pageNumber(@Nullable Integer pageNumber) {
            $.pageNumber = pageNumber;
            return this;
        }

        /**
         * @param pageSize Number of records per page.
         * 
         * @return builder
         * 
         */
        public Builder pageSize(@Nullable Integer pageSize) {
            $.pageSize = pageSize;
            return this;
        }

        /**
         * @param planSubscribeType Package subscription type. Value:-**basicplan**: Basic version.-**standardplan**: Standard version.-**advancedplan**: Advanced version.-**enterpriseplan**: Enterprise Edition.
         * 
         * @return builder
         * 
         */
        public Builder planSubscribeType(@Nullable String planSubscribeType) {
            $.planSubscribeType = planSubscribeType;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable String resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param siteName Site Name
         * 
         * @return builder
         * 
         */
        public Builder siteName(@Nullable String siteName) {
            $.siteName = siteName;
            return this;
        }

        /**
         * @param siteSearchType The search match pattern for the site name. The default value is exact match. Valid values:-**prefix**: matches the prefix.-**suffix**: The suffix matches.-**exact**: exact match.-**fuzzy**: fuzzy match.
         * 
         * @return builder
         * 
         */
        public Builder siteSearchType(@Nullable String siteSearchType) {
            $.siteSearchType = siteSearchType;
            return this;
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        /**
         * @param tags Resource tags
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public GetSitesPlainArgs build() {
            return $;
        }
    }

}
