// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.inputs;

import com.pulumi.alicloud.esa.inputs.OriginPoolOriginAuthConfArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OriginPoolOriginArgs extends com.pulumi.resources.ResourceArgs {

    public static final OriginPoolOriginArgs Empty = new OriginPoolOriginArgs();

    /**
     * Origin Address.
     * 
     */
    @Import(name="address")
    private @Nullable Output<String> address;

    /**
     * @return Origin Address.
     * 
     */
    public Optional<Output<String>> address() {
        return Optional.ofNullable(this.address);
    }

    /**
     * The authentication information. When the source Station is an OSS or S3 and other source stations need to be authenticated, the authentication-related configuration information needs to be transmitted. See `auth_conf` below.
     * 
     */
    @Import(name="authConf")
    private @Nullable Output<OriginPoolOriginAuthConfArgs> authConf;

    /**
     * @return The authentication information. When the source Station is an OSS or S3 and other source stations need to be authenticated, the authentication-related configuration information needs to be transmitted. See `auth_conf` below.
     * 
     */
    public Optional<Output<OriginPoolOriginAuthConfArgs>> authConf() {
        return Optional.ofNullable(this.authConf);
    }

    /**
     * Whether the source station is enabled:
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether the source station is enabled:
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The request header that is sent when returning to the source. Only Host is supported.
     * 
     */
    @Import(name="header")
    private @Nullable Output<String> header;

    /**
     * @return The request header that is sent when returning to the source. Only Host is supported.
     * 
     */
    public Optional<Output<String>> header() {
        return Optional.ofNullable(this.header);
    }

    /**
     * Origin Name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Origin Name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Origin ID.
     * 
     */
    @Import(name="originId")
    private @Nullable Output<Integer> originId;

    /**
     * @return Origin ID.
     * 
     */
    public Optional<Output<Integer>> originId() {
        return Optional.ofNullable(this.originId);
    }

    /**
     * Source station type:
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Source station type:
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Weight, 0-100.
     * 
     */
    @Import(name="weight")
    private @Nullable Output<Integer> weight;

    /**
     * @return Weight, 0-100.
     * 
     */
    public Optional<Output<Integer>> weight() {
        return Optional.ofNullable(this.weight);
    }

    private OriginPoolOriginArgs() {}

    private OriginPoolOriginArgs(OriginPoolOriginArgs $) {
        this.address = $.address;
        this.authConf = $.authConf;
        this.enabled = $.enabled;
        this.header = $.header;
        this.name = $.name;
        this.originId = $.originId;
        this.type = $.type;
        this.weight = $.weight;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OriginPoolOriginArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OriginPoolOriginArgs $;

        public Builder() {
            $ = new OriginPoolOriginArgs();
        }

        public Builder(OriginPoolOriginArgs defaults) {
            $ = new OriginPoolOriginArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param address Origin Address.
         * 
         * @return builder
         * 
         */
        public Builder address(@Nullable Output<String> address) {
            $.address = address;
            return this;
        }

        /**
         * @param address Origin Address.
         * 
         * @return builder
         * 
         */
        public Builder address(String address) {
            return address(Output.of(address));
        }

        /**
         * @param authConf The authentication information. When the source Station is an OSS or S3 and other source stations need to be authenticated, the authentication-related configuration information needs to be transmitted. See `auth_conf` below.
         * 
         * @return builder
         * 
         */
        public Builder authConf(@Nullable Output<OriginPoolOriginAuthConfArgs> authConf) {
            $.authConf = authConf;
            return this;
        }

        /**
         * @param authConf The authentication information. When the source Station is an OSS or S3 and other source stations need to be authenticated, the authentication-related configuration information needs to be transmitted. See `auth_conf` below.
         * 
         * @return builder
         * 
         */
        public Builder authConf(OriginPoolOriginAuthConfArgs authConf) {
            return authConf(Output.of(authConf));
        }

        /**
         * @param enabled Whether the source station is enabled:
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether the source station is enabled:
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param header The request header that is sent when returning to the source. Only Host is supported.
         * 
         * @return builder
         * 
         */
        public Builder header(@Nullable Output<String> header) {
            $.header = header;
            return this;
        }

        /**
         * @param header The request header that is sent when returning to the source. Only Host is supported.
         * 
         * @return builder
         * 
         */
        public Builder header(String header) {
            return header(Output.of(header));
        }

        /**
         * @param name Origin Name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Origin Name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param originId Origin ID.
         * 
         * @return builder
         * 
         */
        public Builder originId(@Nullable Output<Integer> originId) {
            $.originId = originId;
            return this;
        }

        /**
         * @param originId Origin ID.
         * 
         * @return builder
         * 
         */
        public Builder originId(Integer originId) {
            return originId(Output.of(originId));
        }

        /**
         * @param type Source station type:
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Source station type:
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param weight Weight, 0-100.
         * 
         * @return builder
         * 
         */
        public Builder weight(@Nullable Output<Integer> weight) {
            $.weight = weight;
            return this;
        }

        /**
         * @param weight Weight, 0-100.
         * 
         * @return builder
         * 
         */
        public Builder weight(Integer weight) {
            return weight(Output.of(weight));
        }

        public OriginPoolOriginArgs build() {
            return $;
        }
    }

}
