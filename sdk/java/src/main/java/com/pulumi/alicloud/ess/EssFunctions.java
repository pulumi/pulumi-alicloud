// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ess;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.ess.inputs.GetAlarmsArgs;
import com.pulumi.alicloud.ess.inputs.GetAlarmsPlainArgs;
import com.pulumi.alicloud.ess.inputs.GetLifecycleHooksArgs;
import com.pulumi.alicloud.ess.inputs.GetLifecycleHooksPlainArgs;
import com.pulumi.alicloud.ess.inputs.GetNotificationsArgs;
import com.pulumi.alicloud.ess.inputs.GetNotificationsPlainArgs;
import com.pulumi.alicloud.ess.inputs.GetScalingConfigurationsArgs;
import com.pulumi.alicloud.ess.inputs.GetScalingConfigurationsPlainArgs;
import com.pulumi.alicloud.ess.inputs.GetScalingGroupsArgs;
import com.pulumi.alicloud.ess.inputs.GetScalingGroupsPlainArgs;
import com.pulumi.alicloud.ess.inputs.GetScalingRulesArgs;
import com.pulumi.alicloud.ess.inputs.GetScalingRulesPlainArgs;
import com.pulumi.alicloud.ess.inputs.GetScheduledTasksArgs;
import com.pulumi.alicloud.ess.inputs.GetScheduledTasksPlainArgs;
import com.pulumi.alicloud.ess.outputs.GetAlarmsResult;
import com.pulumi.alicloud.ess.outputs.GetLifecycleHooksResult;
import com.pulumi.alicloud.ess.outputs.GetNotificationsResult;
import com.pulumi.alicloud.ess.outputs.GetScalingConfigurationsResult;
import com.pulumi.alicloud.ess.outputs.GetScalingGroupsResult;
import com.pulumi.alicloud.ess.outputs.GetScalingRulesResult;
import com.pulumi.alicloud.ess.outputs.GetScheduledTasksResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import java.util.concurrent.CompletableFuture;

public final class EssFunctions {
    /**
     * This data source provides available alarm resources.
     * 
     * &gt; **NOTE** Available in 1.72.0+
     * 
     */
    public static Output<GetAlarmsResult> getAlarms() {
        return getAlarms(GetAlarmsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides available alarm resources.
     * 
     * &gt; **NOTE** Available in 1.72.0+
     * 
     */
    public static CompletableFuture<GetAlarmsResult> getAlarmsPlain() {
        return getAlarmsPlain(GetAlarmsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides available alarm resources.
     * 
     * &gt; **NOTE** Available in 1.72.0+
     * 
     */
    public static Output<GetAlarmsResult> getAlarms(GetAlarmsArgs args) {
        return getAlarms(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides available alarm resources.
     * 
     * &gt; **NOTE** Available in 1.72.0+
     * 
     */
    public static CompletableFuture<GetAlarmsResult> getAlarmsPlain(GetAlarmsPlainArgs args) {
        return getAlarmsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides available alarm resources.
     * 
     * &gt; **NOTE** Available in 1.72.0+
     * 
     */
    public static Output<GetAlarmsResult> getAlarms(GetAlarmsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ess/getAlarms:getAlarms", TypeShape.of(GetAlarmsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available alarm resources.
     * 
     * &gt; **NOTE** Available in 1.72.0+
     * 
     */
    public static Output<GetAlarmsResult> getAlarms(GetAlarmsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ess/getAlarms:getAlarms", TypeShape.of(GetAlarmsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available alarm resources.
     * 
     * &gt; **NOTE** Available in 1.72.0+
     * 
     */
    public static CompletableFuture<GetAlarmsResult> getAlarmsPlain(GetAlarmsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ess/getAlarms:getAlarms", TypeShape.of(GetAlarmsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available lifecycle hook resources.
     * 
     * &gt; **NOTE:** Available in 1.72.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetLifecycleHooksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ds = EssFunctions.getLifecycleHooks(GetLifecycleHooksArgs.builder()
     *             .scalingGroupId("scaling_group_id")
     *             .nameRegex("lifecyclehook_name")
     *             .build());
     * 
     *         ctx.export("firstLifecycleHook", ds.hooks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLifecycleHooksResult> getLifecycleHooks() {
        return getLifecycleHooks(GetLifecycleHooksArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides available lifecycle hook resources.
     * 
     * &gt; **NOTE:** Available in 1.72.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetLifecycleHooksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ds = EssFunctions.getLifecycleHooks(GetLifecycleHooksArgs.builder()
     *             .scalingGroupId("scaling_group_id")
     *             .nameRegex("lifecyclehook_name")
     *             .build());
     * 
     *         ctx.export("firstLifecycleHook", ds.hooks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLifecycleHooksResult> getLifecycleHooksPlain() {
        return getLifecycleHooksPlain(GetLifecycleHooksPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides available lifecycle hook resources.
     * 
     * &gt; **NOTE:** Available in 1.72.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetLifecycleHooksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ds = EssFunctions.getLifecycleHooks(GetLifecycleHooksArgs.builder()
     *             .scalingGroupId("scaling_group_id")
     *             .nameRegex("lifecyclehook_name")
     *             .build());
     * 
     *         ctx.export("firstLifecycleHook", ds.hooks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLifecycleHooksResult> getLifecycleHooks(GetLifecycleHooksArgs args) {
        return getLifecycleHooks(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides available lifecycle hook resources.
     * 
     * &gt; **NOTE:** Available in 1.72.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetLifecycleHooksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ds = EssFunctions.getLifecycleHooks(GetLifecycleHooksArgs.builder()
     *             .scalingGroupId("scaling_group_id")
     *             .nameRegex("lifecyclehook_name")
     *             .build());
     * 
     *         ctx.export("firstLifecycleHook", ds.hooks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLifecycleHooksResult> getLifecycleHooksPlain(GetLifecycleHooksPlainArgs args) {
        return getLifecycleHooksPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides available lifecycle hook resources.
     * 
     * &gt; **NOTE:** Available in 1.72.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetLifecycleHooksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ds = EssFunctions.getLifecycleHooks(GetLifecycleHooksArgs.builder()
     *             .scalingGroupId("scaling_group_id")
     *             .nameRegex("lifecyclehook_name")
     *             .build());
     * 
     *         ctx.export("firstLifecycleHook", ds.hooks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLifecycleHooksResult> getLifecycleHooks(GetLifecycleHooksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ess/getLifecycleHooks:getLifecycleHooks", TypeShape.of(GetLifecycleHooksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available lifecycle hook resources.
     * 
     * &gt; **NOTE:** Available in 1.72.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetLifecycleHooksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ds = EssFunctions.getLifecycleHooks(GetLifecycleHooksArgs.builder()
     *             .scalingGroupId("scaling_group_id")
     *             .nameRegex("lifecyclehook_name")
     *             .build());
     * 
     *         ctx.export("firstLifecycleHook", ds.hooks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLifecycleHooksResult> getLifecycleHooks(GetLifecycleHooksArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ess/getLifecycleHooks:getLifecycleHooks", TypeShape.of(GetLifecycleHooksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available lifecycle hook resources.
     * 
     * &gt; **NOTE:** Available in 1.72.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetLifecycleHooksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ds = EssFunctions.getLifecycleHooks(GetLifecycleHooksArgs.builder()
     *             .scalingGroupId("scaling_group_id")
     *             .nameRegex("lifecyclehook_name")
     *             .build());
     * 
     *         ctx.export("firstLifecycleHook", ds.hooks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLifecycleHooksResult> getLifecycleHooksPlain(GetLifecycleHooksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ess/getLifecycleHooks:getLifecycleHooks", TypeShape.of(GetLifecycleHooksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available notification resources.
     * 
     * &gt; **NOTE:** Available in 1.72.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetNotificationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ds = EssFunctions.getNotifications(GetNotificationsArgs.builder()
     *             .scalingGroupId("scaling_group_id")
     *             .build());
     * 
     *         ctx.export("firstNotification", ds.notifications()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNotificationsResult> getNotifications(GetNotificationsArgs args) {
        return getNotifications(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides available notification resources.
     * 
     * &gt; **NOTE:** Available in 1.72.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetNotificationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ds = EssFunctions.getNotifications(GetNotificationsArgs.builder()
     *             .scalingGroupId("scaling_group_id")
     *             .build());
     * 
     *         ctx.export("firstNotification", ds.notifications()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNotificationsResult> getNotificationsPlain(GetNotificationsPlainArgs args) {
        return getNotificationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides available notification resources.
     * 
     * &gt; **NOTE:** Available in 1.72.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetNotificationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ds = EssFunctions.getNotifications(GetNotificationsArgs.builder()
     *             .scalingGroupId("scaling_group_id")
     *             .build());
     * 
     *         ctx.export("firstNotification", ds.notifications()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNotificationsResult> getNotifications(GetNotificationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ess/getNotifications:getNotifications", TypeShape.of(GetNotificationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available notification resources.
     * 
     * &gt; **NOTE:** Available in 1.72.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetNotificationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ds = EssFunctions.getNotifications(GetNotificationsArgs.builder()
     *             .scalingGroupId("scaling_group_id")
     *             .build());
     * 
     *         ctx.export("firstNotification", ds.notifications()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNotificationsResult> getNotifications(GetNotificationsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ess/getNotifications:getNotifications", TypeShape.of(GetNotificationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available notification resources.
     * 
     * &gt; **NOTE:** Available in 1.72.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetNotificationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ds = EssFunctions.getNotifications(GetNotificationsArgs.builder()
     *             .scalingGroupId("scaling_group_id")
     *             .build());
     * 
     *         ctx.export("firstNotification", ds.notifications()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNotificationsResult> getNotificationsPlain(GetNotificationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ess/getNotifications:getNotifications", TypeShape.of(GetNotificationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available scaling configuration resources.
     * 
     * &gt; **NOTE:** Available since v1.240.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroupRule;
     * import com.pulumi.alicloud.ecs.SecurityGroupRuleArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.ScalingConfiguration;
     * import com.pulumi.alicloud.ess.ScalingConfigurationArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingConfigurationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_18.*64")
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .securityGroupName(myName)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultSecurityGroupRule = new SecurityGroupRule("defaultSecurityGroupRule", SecurityGroupRuleArgs.builder()
     *             .type("ingress")
     *             .ipProtocol("tcp")
     *             .nicType("intranet")
     *             .policy("accept")
     *             .portRange("22/22")
     *             .priority(1)
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .cidrIp("172.16.0.0/24")
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         var defaultScalingConfiguration = new ScalingConfiguration("defaultScalingConfiguration", ScalingConfigurationArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .imageId(defaultGetImages.images()[0].id())
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .forceDelete(true)
     *             .active(true)
     *             .scalingConfigurationName("scaling_configuration_name")
     *             .build());
     * 
     *         final var scalingconfigurationsDs = EssFunctions.getScalingConfigurations(GetScalingConfigurationsArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .ids(defaultScalingConfiguration.id())
     *             .nameRegex("scaling_configuration_name")
     *             .build());
     * 
     *         ctx.export("firstScalingConfiguration", scalingconfigurationsDs.applyValue(_scalingconfigurationsDs -> _scalingconfigurationsDs.configurations()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScalingConfigurationsResult> getScalingConfigurations() {
        return getScalingConfigurations(GetScalingConfigurationsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides available scaling configuration resources.
     * 
     * &gt; **NOTE:** Available since v1.240.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroupRule;
     * import com.pulumi.alicloud.ecs.SecurityGroupRuleArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.ScalingConfiguration;
     * import com.pulumi.alicloud.ess.ScalingConfigurationArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingConfigurationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_18.*64")
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .securityGroupName(myName)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultSecurityGroupRule = new SecurityGroupRule("defaultSecurityGroupRule", SecurityGroupRuleArgs.builder()
     *             .type("ingress")
     *             .ipProtocol("tcp")
     *             .nicType("intranet")
     *             .policy("accept")
     *             .portRange("22/22")
     *             .priority(1)
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .cidrIp("172.16.0.0/24")
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         var defaultScalingConfiguration = new ScalingConfiguration("defaultScalingConfiguration", ScalingConfigurationArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .imageId(defaultGetImages.images()[0].id())
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .forceDelete(true)
     *             .active(true)
     *             .scalingConfigurationName("scaling_configuration_name")
     *             .build());
     * 
     *         final var scalingconfigurationsDs = EssFunctions.getScalingConfigurations(GetScalingConfigurationsArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .ids(defaultScalingConfiguration.id())
     *             .nameRegex("scaling_configuration_name")
     *             .build());
     * 
     *         ctx.export("firstScalingConfiguration", scalingconfigurationsDs.applyValue(_scalingconfigurationsDs -> _scalingconfigurationsDs.configurations()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScalingConfigurationsResult> getScalingConfigurationsPlain() {
        return getScalingConfigurationsPlain(GetScalingConfigurationsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides available scaling configuration resources.
     * 
     * &gt; **NOTE:** Available since v1.240.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroupRule;
     * import com.pulumi.alicloud.ecs.SecurityGroupRuleArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.ScalingConfiguration;
     * import com.pulumi.alicloud.ess.ScalingConfigurationArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingConfigurationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_18.*64")
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .securityGroupName(myName)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultSecurityGroupRule = new SecurityGroupRule("defaultSecurityGroupRule", SecurityGroupRuleArgs.builder()
     *             .type("ingress")
     *             .ipProtocol("tcp")
     *             .nicType("intranet")
     *             .policy("accept")
     *             .portRange("22/22")
     *             .priority(1)
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .cidrIp("172.16.0.0/24")
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         var defaultScalingConfiguration = new ScalingConfiguration("defaultScalingConfiguration", ScalingConfigurationArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .imageId(defaultGetImages.images()[0].id())
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .forceDelete(true)
     *             .active(true)
     *             .scalingConfigurationName("scaling_configuration_name")
     *             .build());
     * 
     *         final var scalingconfigurationsDs = EssFunctions.getScalingConfigurations(GetScalingConfigurationsArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .ids(defaultScalingConfiguration.id())
     *             .nameRegex("scaling_configuration_name")
     *             .build());
     * 
     *         ctx.export("firstScalingConfiguration", scalingconfigurationsDs.applyValue(_scalingconfigurationsDs -> _scalingconfigurationsDs.configurations()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScalingConfigurationsResult> getScalingConfigurations(GetScalingConfigurationsArgs args) {
        return getScalingConfigurations(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides available scaling configuration resources.
     * 
     * &gt; **NOTE:** Available since v1.240.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroupRule;
     * import com.pulumi.alicloud.ecs.SecurityGroupRuleArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.ScalingConfiguration;
     * import com.pulumi.alicloud.ess.ScalingConfigurationArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingConfigurationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_18.*64")
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .securityGroupName(myName)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultSecurityGroupRule = new SecurityGroupRule("defaultSecurityGroupRule", SecurityGroupRuleArgs.builder()
     *             .type("ingress")
     *             .ipProtocol("tcp")
     *             .nicType("intranet")
     *             .policy("accept")
     *             .portRange("22/22")
     *             .priority(1)
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .cidrIp("172.16.0.0/24")
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         var defaultScalingConfiguration = new ScalingConfiguration("defaultScalingConfiguration", ScalingConfigurationArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .imageId(defaultGetImages.images()[0].id())
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .forceDelete(true)
     *             .active(true)
     *             .scalingConfigurationName("scaling_configuration_name")
     *             .build());
     * 
     *         final var scalingconfigurationsDs = EssFunctions.getScalingConfigurations(GetScalingConfigurationsArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .ids(defaultScalingConfiguration.id())
     *             .nameRegex("scaling_configuration_name")
     *             .build());
     * 
     *         ctx.export("firstScalingConfiguration", scalingconfigurationsDs.applyValue(_scalingconfigurationsDs -> _scalingconfigurationsDs.configurations()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScalingConfigurationsResult> getScalingConfigurationsPlain(GetScalingConfigurationsPlainArgs args) {
        return getScalingConfigurationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides available scaling configuration resources.
     * 
     * &gt; **NOTE:** Available since v1.240.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroupRule;
     * import com.pulumi.alicloud.ecs.SecurityGroupRuleArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.ScalingConfiguration;
     * import com.pulumi.alicloud.ess.ScalingConfigurationArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingConfigurationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_18.*64")
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .securityGroupName(myName)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultSecurityGroupRule = new SecurityGroupRule("defaultSecurityGroupRule", SecurityGroupRuleArgs.builder()
     *             .type("ingress")
     *             .ipProtocol("tcp")
     *             .nicType("intranet")
     *             .policy("accept")
     *             .portRange("22/22")
     *             .priority(1)
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .cidrIp("172.16.0.0/24")
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         var defaultScalingConfiguration = new ScalingConfiguration("defaultScalingConfiguration", ScalingConfigurationArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .imageId(defaultGetImages.images()[0].id())
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .forceDelete(true)
     *             .active(true)
     *             .scalingConfigurationName("scaling_configuration_name")
     *             .build());
     * 
     *         final var scalingconfigurationsDs = EssFunctions.getScalingConfigurations(GetScalingConfigurationsArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .ids(defaultScalingConfiguration.id())
     *             .nameRegex("scaling_configuration_name")
     *             .build());
     * 
     *         ctx.export("firstScalingConfiguration", scalingconfigurationsDs.applyValue(_scalingconfigurationsDs -> _scalingconfigurationsDs.configurations()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScalingConfigurationsResult> getScalingConfigurations(GetScalingConfigurationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ess/getScalingConfigurations:getScalingConfigurations", TypeShape.of(GetScalingConfigurationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available scaling configuration resources.
     * 
     * &gt; **NOTE:** Available since v1.240.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroupRule;
     * import com.pulumi.alicloud.ecs.SecurityGroupRuleArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.ScalingConfiguration;
     * import com.pulumi.alicloud.ess.ScalingConfigurationArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingConfigurationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_18.*64")
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .securityGroupName(myName)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultSecurityGroupRule = new SecurityGroupRule("defaultSecurityGroupRule", SecurityGroupRuleArgs.builder()
     *             .type("ingress")
     *             .ipProtocol("tcp")
     *             .nicType("intranet")
     *             .policy("accept")
     *             .portRange("22/22")
     *             .priority(1)
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .cidrIp("172.16.0.0/24")
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         var defaultScalingConfiguration = new ScalingConfiguration("defaultScalingConfiguration", ScalingConfigurationArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .imageId(defaultGetImages.images()[0].id())
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .forceDelete(true)
     *             .active(true)
     *             .scalingConfigurationName("scaling_configuration_name")
     *             .build());
     * 
     *         final var scalingconfigurationsDs = EssFunctions.getScalingConfigurations(GetScalingConfigurationsArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .ids(defaultScalingConfiguration.id())
     *             .nameRegex("scaling_configuration_name")
     *             .build());
     * 
     *         ctx.export("firstScalingConfiguration", scalingconfigurationsDs.applyValue(_scalingconfigurationsDs -> _scalingconfigurationsDs.configurations()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScalingConfigurationsResult> getScalingConfigurations(GetScalingConfigurationsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ess/getScalingConfigurations:getScalingConfigurations", TypeShape.of(GetScalingConfigurationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available scaling configuration resources.
     * 
     * &gt; **NOTE:** Available since v1.240.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroupRule;
     * import com.pulumi.alicloud.ecs.SecurityGroupRuleArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.ScalingConfiguration;
     * import com.pulumi.alicloud.ess.ScalingConfigurationArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingConfigurationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .cpuCoreCount(2)
     *             .memorySize(4)
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_18.*64")
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .securityGroupName(myName)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultSecurityGroupRule = new SecurityGroupRule("defaultSecurityGroupRule", SecurityGroupRuleArgs.builder()
     *             .type("ingress")
     *             .ipProtocol("tcp")
     *             .nicType("intranet")
     *             .policy("accept")
     *             .portRange("22/22")
     *             .priority(1)
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .cidrIp("172.16.0.0/24")
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         var defaultScalingConfiguration = new ScalingConfiguration("defaultScalingConfiguration", ScalingConfigurationArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .imageId(defaultGetImages.images()[0].id())
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .securityGroupId(defaultSecurityGroup.id())
     *             .forceDelete(true)
     *             .active(true)
     *             .scalingConfigurationName("scaling_configuration_name")
     *             .build());
     * 
     *         final var scalingconfigurationsDs = EssFunctions.getScalingConfigurations(GetScalingConfigurationsArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .ids(defaultScalingConfiguration.id())
     *             .nameRegex("scaling_configuration_name")
     *             .build());
     * 
     *         ctx.export("firstScalingConfiguration", scalingconfigurationsDs.applyValue(_scalingconfigurationsDs -> _scalingconfigurationsDs.configurations()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScalingConfigurationsResult> getScalingConfigurationsPlain(GetScalingConfigurationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ess/getScalingConfigurations:getScalingConfigurations", TypeShape.of(GetScalingConfigurationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available scaling group resources.
     * 
     * &gt; **NOTE:** Available since v1.39.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         final var scalinggroupsDs = EssFunctions.getScalingGroups(GetScalingGroupsArgs.builder()
     *             .ids(defaultScalingGroup.id())
     *             .nameRegex(myName)
     *             .build());
     * 
     *         ctx.export("firstScalingGroup", scalinggroupsDs.applyValue(_scalinggroupsDs -> _scalinggroupsDs.groups()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScalingGroupsResult> getScalingGroups() {
        return getScalingGroups(GetScalingGroupsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides available scaling group resources.
     * 
     * &gt; **NOTE:** Available since v1.39.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         final var scalinggroupsDs = EssFunctions.getScalingGroups(GetScalingGroupsArgs.builder()
     *             .ids(defaultScalingGroup.id())
     *             .nameRegex(myName)
     *             .build());
     * 
     *         ctx.export("firstScalingGroup", scalinggroupsDs.applyValue(_scalinggroupsDs -> _scalinggroupsDs.groups()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScalingGroupsResult> getScalingGroupsPlain() {
        return getScalingGroupsPlain(GetScalingGroupsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides available scaling group resources.
     * 
     * &gt; **NOTE:** Available since v1.39.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         final var scalinggroupsDs = EssFunctions.getScalingGroups(GetScalingGroupsArgs.builder()
     *             .ids(defaultScalingGroup.id())
     *             .nameRegex(myName)
     *             .build());
     * 
     *         ctx.export("firstScalingGroup", scalinggroupsDs.applyValue(_scalinggroupsDs -> _scalinggroupsDs.groups()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScalingGroupsResult> getScalingGroups(GetScalingGroupsArgs args) {
        return getScalingGroups(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides available scaling group resources.
     * 
     * &gt; **NOTE:** Available since v1.39.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         final var scalinggroupsDs = EssFunctions.getScalingGroups(GetScalingGroupsArgs.builder()
     *             .ids(defaultScalingGroup.id())
     *             .nameRegex(myName)
     *             .build());
     * 
     *         ctx.export("firstScalingGroup", scalinggroupsDs.applyValue(_scalinggroupsDs -> _scalinggroupsDs.groups()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScalingGroupsResult> getScalingGroupsPlain(GetScalingGroupsPlainArgs args) {
        return getScalingGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides available scaling group resources.
     * 
     * &gt; **NOTE:** Available since v1.39.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         final var scalinggroupsDs = EssFunctions.getScalingGroups(GetScalingGroupsArgs.builder()
     *             .ids(defaultScalingGroup.id())
     *             .nameRegex(myName)
     *             .build());
     * 
     *         ctx.export("firstScalingGroup", scalinggroupsDs.applyValue(_scalinggroupsDs -> _scalinggroupsDs.groups()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScalingGroupsResult> getScalingGroups(GetScalingGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ess/getScalingGroups:getScalingGroups", TypeShape.of(GetScalingGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available scaling group resources.
     * 
     * &gt; **NOTE:** Available since v1.39.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         final var scalinggroupsDs = EssFunctions.getScalingGroups(GetScalingGroupsArgs.builder()
     *             .ids(defaultScalingGroup.id())
     *             .nameRegex(myName)
     *             .build());
     * 
     *         ctx.export("firstScalingGroup", scalinggroupsDs.applyValue(_scalinggroupsDs -> _scalinggroupsDs.groups()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScalingGroupsResult> getScalingGroups(GetScalingGroupsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ess/getScalingGroups:getScalingGroups", TypeShape.of(GetScalingGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available scaling group resources.
     * 
     * &gt; **NOTE:** Available since v1.39.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         final var scalinggroupsDs = EssFunctions.getScalingGroups(GetScalingGroupsArgs.builder()
     *             .ids(defaultScalingGroup.id())
     *             .nameRegex(myName)
     *             .build());
     * 
     *         ctx.export("firstScalingGroup", scalinggroupsDs.applyValue(_scalinggroupsDs -> _scalinggroupsDs.groups()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScalingGroupsResult> getScalingGroupsPlain(GetScalingGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ess/getScalingGroups:getScalingGroups", TypeShape.of(GetScalingGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available scaling rule resources.
     * 
     * &gt; **NOTE:** Available since v1.39.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.ScalingRule;
     * import com.pulumi.alicloud.ess.ScalingRuleArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-ex");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         var defaultScalingRule = new ScalingRule("defaultScalingRule", ScalingRuleArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .scalingRuleName(myName)
     *             .adjustmentType("PercentChangeInCapacity")
     *             .adjustmentValue(1)
     *             .build());
     * 
     *         final var scalingrulesDs = EssFunctions.getScalingRules(GetScalingRulesArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .ids(defaultScalingRule.id())
     *             .nameRegex(myName)
     *             .build());
     * 
     *         ctx.export("firstScalingRule", scalingrulesDs.applyValue(_scalingrulesDs -> _scalingrulesDs.rules()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScalingRulesResult> getScalingRules() {
        return getScalingRules(GetScalingRulesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides available scaling rule resources.
     * 
     * &gt; **NOTE:** Available since v1.39.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.ScalingRule;
     * import com.pulumi.alicloud.ess.ScalingRuleArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-ex");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         var defaultScalingRule = new ScalingRule("defaultScalingRule", ScalingRuleArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .scalingRuleName(myName)
     *             .adjustmentType("PercentChangeInCapacity")
     *             .adjustmentValue(1)
     *             .build());
     * 
     *         final var scalingrulesDs = EssFunctions.getScalingRules(GetScalingRulesArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .ids(defaultScalingRule.id())
     *             .nameRegex(myName)
     *             .build());
     * 
     *         ctx.export("firstScalingRule", scalingrulesDs.applyValue(_scalingrulesDs -> _scalingrulesDs.rules()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScalingRulesResult> getScalingRulesPlain() {
        return getScalingRulesPlain(GetScalingRulesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides available scaling rule resources.
     * 
     * &gt; **NOTE:** Available since v1.39.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.ScalingRule;
     * import com.pulumi.alicloud.ess.ScalingRuleArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-ex");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         var defaultScalingRule = new ScalingRule("defaultScalingRule", ScalingRuleArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .scalingRuleName(myName)
     *             .adjustmentType("PercentChangeInCapacity")
     *             .adjustmentValue(1)
     *             .build());
     * 
     *         final var scalingrulesDs = EssFunctions.getScalingRules(GetScalingRulesArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .ids(defaultScalingRule.id())
     *             .nameRegex(myName)
     *             .build());
     * 
     *         ctx.export("firstScalingRule", scalingrulesDs.applyValue(_scalingrulesDs -> _scalingrulesDs.rules()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScalingRulesResult> getScalingRules(GetScalingRulesArgs args) {
        return getScalingRules(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides available scaling rule resources.
     * 
     * &gt; **NOTE:** Available since v1.39.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.ScalingRule;
     * import com.pulumi.alicloud.ess.ScalingRuleArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-ex");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         var defaultScalingRule = new ScalingRule("defaultScalingRule", ScalingRuleArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .scalingRuleName(myName)
     *             .adjustmentType("PercentChangeInCapacity")
     *             .adjustmentValue(1)
     *             .build());
     * 
     *         final var scalingrulesDs = EssFunctions.getScalingRules(GetScalingRulesArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .ids(defaultScalingRule.id())
     *             .nameRegex(myName)
     *             .build());
     * 
     *         ctx.export("firstScalingRule", scalingrulesDs.applyValue(_scalingrulesDs -> _scalingrulesDs.rules()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScalingRulesResult> getScalingRulesPlain(GetScalingRulesPlainArgs args) {
        return getScalingRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides available scaling rule resources.
     * 
     * &gt; **NOTE:** Available since v1.39.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.ScalingRule;
     * import com.pulumi.alicloud.ess.ScalingRuleArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-ex");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         var defaultScalingRule = new ScalingRule("defaultScalingRule", ScalingRuleArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .scalingRuleName(myName)
     *             .adjustmentType("PercentChangeInCapacity")
     *             .adjustmentValue(1)
     *             .build());
     * 
     *         final var scalingrulesDs = EssFunctions.getScalingRules(GetScalingRulesArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .ids(defaultScalingRule.id())
     *             .nameRegex(myName)
     *             .build());
     * 
     *         ctx.export("firstScalingRule", scalingrulesDs.applyValue(_scalingrulesDs -> _scalingrulesDs.rules()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScalingRulesResult> getScalingRules(GetScalingRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ess/getScalingRules:getScalingRules", TypeShape.of(GetScalingRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available scaling rule resources.
     * 
     * &gt; **NOTE:** Available since v1.39.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.ScalingRule;
     * import com.pulumi.alicloud.ess.ScalingRuleArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-ex");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         var defaultScalingRule = new ScalingRule("defaultScalingRule", ScalingRuleArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .scalingRuleName(myName)
     *             .adjustmentType("PercentChangeInCapacity")
     *             .adjustmentValue(1)
     *             .build());
     * 
     *         final var scalingrulesDs = EssFunctions.getScalingRules(GetScalingRulesArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .ids(defaultScalingRule.id())
     *             .nameRegex(myName)
     *             .build());
     * 
     *         ctx.export("firstScalingRule", scalingrulesDs.applyValue(_scalingrulesDs -> _scalingrulesDs.rules()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScalingRulesResult> getScalingRules(GetScalingRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ess/getScalingRules:getScalingRules", TypeShape.of(GetScalingRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available scaling rule resources.
     * 
     * &gt; **NOTE:** Available since v1.39.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.random.Integer;
     * import com.pulumi.random.IntegerArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ess.ScalingGroup;
     * import com.pulumi.alicloud.ess.ScalingGroupArgs;
     * import com.pulumi.alicloud.ess.ScalingRule;
     * import com.pulumi.alicloud.ess.ScalingRuleArgs;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScalingRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-ex");
     *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
     *             .min(10000)
     *             .max(99999)
     *             .build());
     * 
     *         final var myName = String.format("%s-%s", name,defaultInteger.result());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(myName)
     *             .cidrBlock("172.16.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("172.16.0.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .vswitchName(myName)
     *             .build());
     * 
     *         var defaultScalingGroup = new ScalingGroup("defaultScalingGroup", ScalingGroupArgs.builder()
     *             .minSize(1)
     *             .maxSize(1)
     *             .scalingGroupName(myName)
     *             .removalPolicies(            
     *                 "OldestInstance",
     *                 "NewestInstance")
     *             .vswitchIds(defaultSwitch.id())
     *             .build());
     * 
     *         var defaultScalingRule = new ScalingRule("defaultScalingRule", ScalingRuleArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .scalingRuleName(myName)
     *             .adjustmentType("PercentChangeInCapacity")
     *             .adjustmentValue(1)
     *             .build());
     * 
     *         final var scalingrulesDs = EssFunctions.getScalingRules(GetScalingRulesArgs.builder()
     *             .scalingGroupId(defaultScalingGroup.id())
     *             .ids(defaultScalingRule.id())
     *             .nameRegex(myName)
     *             .build());
     * 
     *         ctx.export("firstScalingRule", scalingrulesDs.applyValue(_scalingrulesDs -> _scalingrulesDs.rules()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScalingRulesResult> getScalingRulesPlain(GetScalingRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ess/getScalingRules:getScalingRules", TypeShape.of(GetScalingRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available scheduled task resources.
     * 
     * &gt; **NOTE:** Available in 1.72.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScheduledTasksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ds = EssFunctions.getScheduledTasks(GetScheduledTasksArgs.builder()
     *             .scheduledTaskId("scheduled_task_id")
     *             .nameRegex("scheduled_task_name")
     *             .build());
     * 
     *         ctx.export("firstScheduledTask", ds.tasks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScheduledTasksResult> getScheduledTasks() {
        return getScheduledTasks(GetScheduledTasksArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides available scheduled task resources.
     * 
     * &gt; **NOTE:** Available in 1.72.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScheduledTasksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ds = EssFunctions.getScheduledTasks(GetScheduledTasksArgs.builder()
     *             .scheduledTaskId("scheduled_task_id")
     *             .nameRegex("scheduled_task_name")
     *             .build());
     * 
     *         ctx.export("firstScheduledTask", ds.tasks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScheduledTasksResult> getScheduledTasksPlain() {
        return getScheduledTasksPlain(GetScheduledTasksPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides available scheduled task resources.
     * 
     * &gt; **NOTE:** Available in 1.72.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScheduledTasksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ds = EssFunctions.getScheduledTasks(GetScheduledTasksArgs.builder()
     *             .scheduledTaskId("scheduled_task_id")
     *             .nameRegex("scheduled_task_name")
     *             .build());
     * 
     *         ctx.export("firstScheduledTask", ds.tasks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScheduledTasksResult> getScheduledTasks(GetScheduledTasksArgs args) {
        return getScheduledTasks(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides available scheduled task resources.
     * 
     * &gt; **NOTE:** Available in 1.72.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScheduledTasksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ds = EssFunctions.getScheduledTasks(GetScheduledTasksArgs.builder()
     *             .scheduledTaskId("scheduled_task_id")
     *             .nameRegex("scheduled_task_name")
     *             .build());
     * 
     *         ctx.export("firstScheduledTask", ds.tasks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScheduledTasksResult> getScheduledTasksPlain(GetScheduledTasksPlainArgs args) {
        return getScheduledTasksPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides available scheduled task resources.
     * 
     * &gt; **NOTE:** Available in 1.72.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScheduledTasksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ds = EssFunctions.getScheduledTasks(GetScheduledTasksArgs.builder()
     *             .scheduledTaskId("scheduled_task_id")
     *             .nameRegex("scheduled_task_name")
     *             .build());
     * 
     *         ctx.export("firstScheduledTask", ds.tasks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScheduledTasksResult> getScheduledTasks(GetScheduledTasksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ess/getScheduledTasks:getScheduledTasks", TypeShape.of(GetScheduledTasksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available scheduled task resources.
     * 
     * &gt; **NOTE:** Available in 1.72.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScheduledTasksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ds = EssFunctions.getScheduledTasks(GetScheduledTasksArgs.builder()
     *             .scheduledTaskId("scheduled_task_id")
     *             .nameRegex("scheduled_task_name")
     *             .build());
     * 
     *         ctx.export("firstScheduledTask", ds.tasks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScheduledTasksResult> getScheduledTasks(GetScheduledTasksArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ess/getScheduledTasks:getScheduledTasks", TypeShape.of(GetScheduledTasksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available scheduled task resources.
     * 
     * &gt; **NOTE:** Available in 1.72.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ess.EssFunctions;
     * import com.pulumi.alicloud.ess.inputs.GetScheduledTasksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ds = EssFunctions.getScheduledTasks(GetScheduledTasksArgs.builder()
     *             .scheduledTaskId("scheduled_task_id")
     *             .nameRegex("scheduled_task_name")
     *             .build());
     * 
     *         ctx.export("firstScheduledTask", ds.tasks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScheduledTasksResult> getScheduledTasksPlain(GetScheduledTasksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ess/getScheduledTasks:getScheduledTasks", TypeShape.of(GetScheduledTasksResult.class), args, Utilities.withVersion(options));
    }
}
