// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEipsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEipsArgs Empty = new GetEipsArgs();

    @Import(name="addressName")
    private @Nullable Output<String> addressName;

    public Optional<Output<String>> addressName() {
        return Optional.ofNullable(this.addressName);
    }

    @Import(name="associatedInstanceId")
    private @Nullable Output<String> associatedInstanceId;

    public Optional<Output<String>> associatedInstanceId() {
        return Optional.ofNullable(this.associatedInstanceId);
    }

    @Import(name="associatedInstanceType")
    private @Nullable Output<String> associatedInstanceType;

    public Optional<Output<String>> associatedInstanceType() {
        return Optional.ofNullable(this.associatedInstanceType);
    }

    @Import(name="dryRun")
    private @Nullable Output<Boolean> dryRun;

    public Optional<Output<Boolean>> dryRun() {
        return Optional.ofNullable(this.dryRun);
    }

    @Import(name="enableDetails")
    private @Nullable Output<Boolean> enableDetails;

    public Optional<Output<Boolean>> enableDetails() {
        return Optional.ofNullable(this.enableDetails);
    }

    /**
     * A list of EIP IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of EIP IDs.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    @Import(name="includeReservationData")
    private @Nullable Output<Boolean> includeReservationData;

    public Optional<Output<Boolean>> includeReservationData() {
        return Optional.ofNullable(this.includeReservationData);
    }

    /**
     * Public IP Address of the the EIP.
     * 
     */
    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    /**
     * @return Public IP Address of the the EIP.
     * 
     */
    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * A list of EIP public IP addresses.
     * 
     * @deprecated
     * Field &#39;ip_addresses&#39; has been deprecated from provider version 1.126.0 and it will be removed in the future version. Please use the new attribute &#39;ip_address&#39; instead.
     * 
     */
    @Deprecated /* Field 'ip_addresses' has been deprecated from provider version 1.126.0 and it will be removed in the future version. Please use the new attribute 'ip_address' instead. */
    @Import(name="ipAddresses")
    private @Nullable Output<List<String>> ipAddresses;

    /**
     * @return A list of EIP public IP addresses.
     * 
     * @deprecated
     * Field &#39;ip_addresses&#39; has been deprecated from provider version 1.126.0 and it will be removed in the future version. Please use the new attribute &#39;ip_address&#39; instead.
     * 
     */
    @Deprecated /* Field 'ip_addresses' has been deprecated from provider version 1.126.0 and it will be removed in the future version. Please use the new attribute 'ip_address' instead. */
    public Optional<Output<List<String>>> ipAddresses() {
        return Optional.ofNullable(this.ipAddresses);
    }

    @Import(name="isp")
    private @Nullable Output<String> isp;

    public Optional<Output<String>> isp() {
        return Optional.ofNullable(this.isp);
    }

    @Import(name="lockReason")
    private @Nullable Output<String> lockReason;

    public Optional<Output<String>> lockReason() {
        return Optional.ofNullable(this.lockReason);
    }

    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    @Import(name="paymentType")
    private @Nullable Output<String> paymentType;

    public Optional<Output<String>> paymentType() {
        return Optional.ofNullable(this.paymentType);
    }

    /**
     * The Id of resource group which the eips belongs.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The Id of resource group which the eips belongs.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    @Import(name="segmentInstanceId")
    private @Nullable Output<String> segmentInstanceId;

    public Optional<Output<String>> segmentInstanceId() {
        return Optional.ofNullable(this.segmentInstanceId);
    }

    /**
     * EIP status. Possible values are: `Associating`, `Unassociating`, `InUse` and `Available`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return EIP status. Possible values are: `Associating`, `Unassociating`, `InUse` and `Available`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetEipsArgs() {}

    private GetEipsArgs(GetEipsArgs $) {
        this.addressName = $.addressName;
        this.associatedInstanceId = $.associatedInstanceId;
        this.associatedInstanceType = $.associatedInstanceType;
        this.dryRun = $.dryRun;
        this.enableDetails = $.enableDetails;
        this.ids = $.ids;
        this.includeReservationData = $.includeReservationData;
        this.ipAddress = $.ipAddress;
        this.ipAddresses = $.ipAddresses;
        this.isp = $.isp;
        this.lockReason = $.lockReason;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.paymentType = $.paymentType;
        this.resourceGroupId = $.resourceGroupId;
        this.segmentInstanceId = $.segmentInstanceId;
        this.status = $.status;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEipsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEipsArgs $;

        public Builder() {
            $ = new GetEipsArgs();
        }

        public Builder(GetEipsArgs defaults) {
            $ = new GetEipsArgs(Objects.requireNonNull(defaults));
        }

        public Builder addressName(@Nullable Output<String> addressName) {
            $.addressName = addressName;
            return this;
        }

        public Builder addressName(String addressName) {
            return addressName(Output.of(addressName));
        }

        public Builder associatedInstanceId(@Nullable Output<String> associatedInstanceId) {
            $.associatedInstanceId = associatedInstanceId;
            return this;
        }

        public Builder associatedInstanceId(String associatedInstanceId) {
            return associatedInstanceId(Output.of(associatedInstanceId));
        }

        public Builder associatedInstanceType(@Nullable Output<String> associatedInstanceType) {
            $.associatedInstanceType = associatedInstanceType;
            return this;
        }

        public Builder associatedInstanceType(String associatedInstanceType) {
            return associatedInstanceType(Output.of(associatedInstanceType));
        }

        public Builder dryRun(@Nullable Output<Boolean> dryRun) {
            $.dryRun = dryRun;
            return this;
        }

        public Builder dryRun(Boolean dryRun) {
            return dryRun(Output.of(dryRun));
        }

        public Builder enableDetails(@Nullable Output<Boolean> enableDetails) {
            $.enableDetails = enableDetails;
            return this;
        }

        public Builder enableDetails(Boolean enableDetails) {
            return enableDetails(Output.of(enableDetails));
        }

        /**
         * @param ids A list of EIP IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of EIP IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of EIP IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        public Builder includeReservationData(@Nullable Output<Boolean> includeReservationData) {
            $.includeReservationData = includeReservationData;
            return this;
        }

        public Builder includeReservationData(Boolean includeReservationData) {
            return includeReservationData(Output.of(includeReservationData));
        }

        /**
         * @param ipAddress Public IP Address of the the EIP.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param ipAddress Public IP Address of the the EIP.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        /**
         * @param ipAddresses A list of EIP public IP addresses.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;ip_addresses&#39; has been deprecated from provider version 1.126.0 and it will be removed in the future version. Please use the new attribute &#39;ip_address&#39; instead.
         * 
         */
        @Deprecated /* Field 'ip_addresses' has been deprecated from provider version 1.126.0 and it will be removed in the future version. Please use the new attribute 'ip_address' instead. */
        public Builder ipAddresses(@Nullable Output<List<String>> ipAddresses) {
            $.ipAddresses = ipAddresses;
            return this;
        }

        /**
         * @param ipAddresses A list of EIP public IP addresses.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;ip_addresses&#39; has been deprecated from provider version 1.126.0 and it will be removed in the future version. Please use the new attribute &#39;ip_address&#39; instead.
         * 
         */
        @Deprecated /* Field 'ip_addresses' has been deprecated from provider version 1.126.0 and it will be removed in the future version. Please use the new attribute 'ip_address' instead. */
        public Builder ipAddresses(List<String> ipAddresses) {
            return ipAddresses(Output.of(ipAddresses));
        }

        /**
         * @param ipAddresses A list of EIP public IP addresses.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;ip_addresses&#39; has been deprecated from provider version 1.126.0 and it will be removed in the future version. Please use the new attribute &#39;ip_address&#39; instead.
         * 
         */
        @Deprecated /* Field 'ip_addresses' has been deprecated from provider version 1.126.0 and it will be removed in the future version. Please use the new attribute 'ip_address' instead. */
        public Builder ipAddresses(String... ipAddresses) {
            return ipAddresses(List.of(ipAddresses));
        }

        public Builder isp(@Nullable Output<String> isp) {
            $.isp = isp;
            return this;
        }

        public Builder isp(String isp) {
            return isp(Output.of(isp));
        }

        public Builder lockReason(@Nullable Output<String> lockReason) {
            $.lockReason = lockReason;
            return this;
        }

        public Builder lockReason(String lockReason) {
            return lockReason(Output.of(lockReason));
        }

        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        public Builder paymentType(@Nullable Output<String> paymentType) {
            $.paymentType = paymentType;
            return this;
        }

        public Builder paymentType(String paymentType) {
            return paymentType(Output.of(paymentType));
        }

        /**
         * @param resourceGroupId The Id of resource group which the eips belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The Id of resource group which the eips belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        public Builder segmentInstanceId(@Nullable Output<String> segmentInstanceId) {
            $.segmentInstanceId = segmentInstanceId;
            return this;
        }

        public Builder segmentInstanceId(String segmentInstanceId) {
            return segmentInstanceId(Output.of(segmentInstanceId));
        }

        /**
         * @param status EIP status. Possible values are: `Associating`, `Unassociating`, `InUse` and `Available`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status EIP status. Possible values are: `Associating`, `Unassociating`, `InUse` and `Available`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GetEipsArgs build() {
            return $;
        }
    }

}
