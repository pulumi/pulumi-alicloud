// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eflo.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ErState extends com.pulumi.resources.ResourceArgs {

    public static final ErState Empty = new ErState();

    /**
     * The creation time of the resource
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time of the resource
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Lingjun HUB name
     * 
     */
    @Import(name="erName")
    private @Nullable Output<String> erName;

    /**
     * @return Lingjun HUB name
     * 
     */
    public Optional<Output<String>> erName() {
        return Optional.ofNullable(this.erName);
    }

    /**
     * Primary zone
     * 
     */
    @Import(name="masterZoneId")
    private @Nullable Output<String> masterZoneId;

    /**
     * @return Primary zone
     * 
     */
    public Optional<Output<String>> masterZoneId() {
        return Optional.ofNullable(this.masterZoneId);
    }

    /**
     * region information
     * 
     */
    @Import(name="regionId")
    private @Nullable Output<String> regionId;

    /**
     * @return region information
     * 
     */
    public Optional<Output<String>> regionId() {
        return Optional.ofNullable(this.regionId);
    }

    /**
     * The ID of the resource group instance.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group instance.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * Status
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Status
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Label List
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Label List
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ErState() {}

    private ErState(ErState $) {
        this.createTime = $.createTime;
        this.description = $.description;
        this.erName = $.erName;
        this.masterZoneId = $.masterZoneId;
        this.regionId = $.regionId;
        this.resourceGroupId = $.resourceGroupId;
        this.status = $.status;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ErState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ErState $;

        public Builder() {
            $ = new ErState();
        }

        public Builder(ErState defaults) {
            $ = new ErState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime The creation time of the resource
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the resource
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param description Description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param erName Lingjun HUB name
         * 
         * @return builder
         * 
         */
        public Builder erName(@Nullable Output<String> erName) {
            $.erName = erName;
            return this;
        }

        /**
         * @param erName Lingjun HUB name
         * 
         * @return builder
         * 
         */
        public Builder erName(String erName) {
            return erName(Output.of(erName));
        }

        /**
         * @param masterZoneId Primary zone
         * 
         * @return builder
         * 
         */
        public Builder masterZoneId(@Nullable Output<String> masterZoneId) {
            $.masterZoneId = masterZoneId;
            return this;
        }

        /**
         * @param masterZoneId Primary zone
         * 
         * @return builder
         * 
         */
        public Builder masterZoneId(String masterZoneId) {
            return masterZoneId(Output.of(masterZoneId));
        }

        /**
         * @param regionId region information
         * 
         * @return builder
         * 
         */
        public Builder regionId(@Nullable Output<String> regionId) {
            $.regionId = regionId;
            return this;
        }

        /**
         * @param regionId region information
         * 
         * @return builder
         * 
         */
        public Builder regionId(String regionId) {
            return regionId(Output.of(regionId));
        }

        /**
         * @param resourceGroupId The ID of the resource group instance.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group instance.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param status Status
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Status
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags Label List
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Label List
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ErState build() {
            return $;
        }
    }

}
