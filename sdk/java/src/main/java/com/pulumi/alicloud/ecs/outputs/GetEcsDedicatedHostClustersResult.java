// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.outputs;

import com.pulumi.alicloud.ecs.outputs.GetEcsDedicatedHostClustersCluster;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEcsDedicatedHostClustersResult {
    private List<GetEcsDedicatedHostClustersCluster> clusters;
    private @Nullable List<String> dedicatedHostClusterIds;
    private @Nullable String dedicatedHostClusterName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<String> ids;
    private @Nullable String nameRegex;
    private List<String> names;
    private @Nullable String outputFile;
    private @Nullable Map<String,Object> tags;
    private @Nullable String zoneId;

    private GetEcsDedicatedHostClustersResult() {}
    public List<GetEcsDedicatedHostClustersCluster> clusters() {
        return this.clusters;
    }
    public List<String> dedicatedHostClusterIds() {
        return this.dedicatedHostClusterIds == null ? List.of() : this.dedicatedHostClusterIds;
    }
    public Optional<String> dedicatedHostClusterName() {
        return Optional.ofNullable(this.dedicatedHostClusterName);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    public List<String> names() {
        return this.names;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public Map<String,Object> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Optional<String> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEcsDedicatedHostClustersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetEcsDedicatedHostClustersCluster> clusters;
        private @Nullable List<String> dedicatedHostClusterIds;
        private @Nullable String dedicatedHostClusterName;
        private String id;
        private List<String> ids;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String outputFile;
        private @Nullable Map<String,Object> tags;
        private @Nullable String zoneId;
        public Builder() {}
        public Builder(GetEcsDedicatedHostClustersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusters = defaults.clusters;
    	      this.dedicatedHostClusterIds = defaults.dedicatedHostClusterIds;
    	      this.dedicatedHostClusterName = defaults.dedicatedHostClusterName;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.outputFile = defaults.outputFile;
    	      this.tags = defaults.tags;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder clusters(List<GetEcsDedicatedHostClustersCluster> clusters) {
            this.clusters = Objects.requireNonNull(clusters);
            return this;
        }
        public Builder clusters(GetEcsDedicatedHostClustersCluster... clusters) {
            return clusters(List.of(clusters));
        }
        @CustomType.Setter
        public Builder dedicatedHostClusterIds(@Nullable List<String> dedicatedHostClusterIds) {
            this.dedicatedHostClusterIds = dedicatedHostClusterIds;
            return this;
        }
        public Builder dedicatedHostClusterIds(String... dedicatedHostClusterIds) {
            return dedicatedHostClusterIds(List.of(dedicatedHostClusterIds));
        }
        @CustomType.Setter
        public Builder dedicatedHostClusterName(@Nullable String dedicatedHostClusterName) {
            this.dedicatedHostClusterName = dedicatedHostClusterName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder names(List<String> names) {
            this.names = Objects.requireNonNull(names);
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,Object> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(@Nullable String zoneId) {
            this.zoneId = zoneId;
            return this;
        }
        public GetEcsDedicatedHostClustersResult build() {
            final var o = new GetEcsDedicatedHostClustersResult();
            o.clusters = clusters;
            o.dedicatedHostClusterIds = dedicatedHostClusterIds;
            o.dedicatedHostClusterName = dedicatedHostClusterName;
            o.id = id;
            o.ids = ids;
            o.nameRegex = nameRegex;
            o.names = names;
            o.outputFile = outputFile;
            o.tags = tags;
            o.zoneId = zoneId;
            return o;
        }
    }
}
