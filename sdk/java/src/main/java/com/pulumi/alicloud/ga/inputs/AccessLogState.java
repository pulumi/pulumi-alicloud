// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ga.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessLogState extends com.pulumi.resources.ResourceArgs {

    public static final AccessLogState Empty = new AccessLogState();

    /**
     * The ID of the global acceleration instance.
     * 
     */
    @Import(name="acceleratorId")
    private @Nullable Output<String> acceleratorId;

    /**
     * @return The ID of the global acceleration instance.
     * 
     */
    public Optional<Output<String>> acceleratorId() {
        return Optional.ofNullable(this.acceleratorId);
    }

    /**
     * The ID of the endpoint group instance.
     * 
     */
    @Import(name="endpointGroupId")
    private @Nullable Output<String> endpointGroupId;

    /**
     * @return The ID of the endpoint group instance.
     * 
     */
    public Optional<Output<String>> endpointGroupId() {
        return Optional.ofNullable(this.endpointGroupId);
    }

    /**
     * The ID of the listener.
     * 
     */
    @Import(name="listenerId")
    private @Nullable Output<String> listenerId;

    /**
     * @return The ID of the listener.
     * 
     */
    public Optional<Output<String>> listenerId() {
        return Optional.ofNullable(this.listenerId);
    }

    /**
     * The name of the Log Store.
     * 
     */
    @Import(name="slsLogStoreName")
    private @Nullable Output<String> slsLogStoreName;

    /**
     * @return The name of the Log Store.
     * 
     */
    public Optional<Output<String>> slsLogStoreName() {
        return Optional.ofNullable(this.slsLogStoreName);
    }

    /**
     * The name of the Log Service project.
     * 
     */
    @Import(name="slsProjectName")
    private @Nullable Output<String> slsProjectName;

    /**
     * @return The name of the Log Service project.
     * 
     */
    public Optional<Output<String>> slsProjectName() {
        return Optional.ofNullable(this.slsProjectName);
    }

    /**
     * The region ID of the Log Service project.
     * 
     */
    @Import(name="slsRegionId")
    private @Nullable Output<String> slsRegionId;

    /**
     * @return The region ID of the Log Service project.
     * 
     */
    public Optional<Output<String>> slsRegionId() {
        return Optional.ofNullable(this.slsRegionId);
    }

    /**
     * Whether access log is enabled.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Whether access log is enabled.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private AccessLogState() {}

    private AccessLogState(AccessLogState $) {
        this.acceleratorId = $.acceleratorId;
        this.endpointGroupId = $.endpointGroupId;
        this.listenerId = $.listenerId;
        this.slsLogStoreName = $.slsLogStoreName;
        this.slsProjectName = $.slsProjectName;
        this.slsRegionId = $.slsRegionId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessLogState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessLogState $;

        public Builder() {
            $ = new AccessLogState();
        }

        public Builder(AccessLogState defaults) {
            $ = new AccessLogState(Objects.requireNonNull(defaults));
        }

        /**
         * @param acceleratorId The ID of the global acceleration instance.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorId(@Nullable Output<String> acceleratorId) {
            $.acceleratorId = acceleratorId;
            return this;
        }

        /**
         * @param acceleratorId The ID of the global acceleration instance.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorId(String acceleratorId) {
            return acceleratorId(Output.of(acceleratorId));
        }

        /**
         * @param endpointGroupId The ID of the endpoint group instance.
         * 
         * @return builder
         * 
         */
        public Builder endpointGroupId(@Nullable Output<String> endpointGroupId) {
            $.endpointGroupId = endpointGroupId;
            return this;
        }

        /**
         * @param endpointGroupId The ID of the endpoint group instance.
         * 
         * @return builder
         * 
         */
        public Builder endpointGroupId(String endpointGroupId) {
            return endpointGroupId(Output.of(endpointGroupId));
        }

        /**
         * @param listenerId The ID of the listener.
         * 
         * @return builder
         * 
         */
        public Builder listenerId(@Nullable Output<String> listenerId) {
            $.listenerId = listenerId;
            return this;
        }

        /**
         * @param listenerId The ID of the listener.
         * 
         * @return builder
         * 
         */
        public Builder listenerId(String listenerId) {
            return listenerId(Output.of(listenerId));
        }

        /**
         * @param slsLogStoreName The name of the Log Store.
         * 
         * @return builder
         * 
         */
        public Builder slsLogStoreName(@Nullable Output<String> slsLogStoreName) {
            $.slsLogStoreName = slsLogStoreName;
            return this;
        }

        /**
         * @param slsLogStoreName The name of the Log Store.
         * 
         * @return builder
         * 
         */
        public Builder slsLogStoreName(String slsLogStoreName) {
            return slsLogStoreName(Output.of(slsLogStoreName));
        }

        /**
         * @param slsProjectName The name of the Log Service project.
         * 
         * @return builder
         * 
         */
        public Builder slsProjectName(@Nullable Output<String> slsProjectName) {
            $.slsProjectName = slsProjectName;
            return this;
        }

        /**
         * @param slsProjectName The name of the Log Service project.
         * 
         * @return builder
         * 
         */
        public Builder slsProjectName(String slsProjectName) {
            return slsProjectName(Output.of(slsProjectName));
        }

        /**
         * @param slsRegionId The region ID of the Log Service project.
         * 
         * @return builder
         * 
         */
        public Builder slsRegionId(@Nullable Output<String> slsRegionId) {
            $.slsRegionId = slsRegionId;
            return this;
        }

        /**
         * @param slsRegionId The region ID of the Log Service project.
         * 
         * @return builder
         * 
         */
        public Builder slsRegionId(String slsRegionId) {
            return slsRegionId(Output.of(slsRegionId));
        }

        /**
         * @param status Whether access log is enabled.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Whether access log is enabled.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public AccessLogState build() {
            return $;
        }
    }

}
