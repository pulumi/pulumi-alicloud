// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.amqp;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.amqp.BindingArgs;
import com.pulumi.alicloud.amqp.inputs.BindingState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a RabbitMQ (AMQP) Binding resource.
 * 
 * For information about RabbitMQ (AMQP) Binding and how to use it, see [What is Binding](https://www.alibabacloud.com/help/en/message-queue-for-rabbitmq/latest/createbinding).
 * 
 * &gt; **NOTE:** Available since v1.135.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.amqp.Instance;
 * import com.pulumi.alicloud.amqp.InstanceArgs;
 * import com.pulumi.alicloud.amqp.VirtualHost;
 * import com.pulumi.alicloud.amqp.VirtualHostArgs;
 * import com.pulumi.alicloud.amqp.Exchange;
 * import com.pulumi.alicloud.amqp.ExchangeArgs;
 * import com.pulumi.alicloud.amqp.Queue;
 * import com.pulumi.alicloud.amqp.QueueArgs;
 * import com.pulumi.alicloud.amqp.Binding;
 * import com.pulumi.alicloud.amqp.BindingArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Instance("default", InstanceArgs.builder()
 *             .instanceType("enterprise")
 *             .maxTps("3000")
 *             .queueCapacity("200")
 *             .storageSize("700")
 *             .supportEip(false)
 *             .maxEipTps("128")
 *             .paymentType("Subscription")
 *             .period(1)
 *             .build());
 * 
 *         var defaultVirtualHost = new VirtualHost("defaultVirtualHost", VirtualHostArgs.builder()
 *             .instanceId(default_.id())
 *             .virtualHostName("tf-example")
 *             .build());
 * 
 *         var defaultExchange = new Exchange("defaultExchange", ExchangeArgs.builder()
 *             .autoDeleteState(false)
 *             .exchangeName("tf-example")
 *             .exchangeType("HEADERS")
 *             .instanceId(default_.id())
 *             .internal(false)
 *             .virtualHostName(defaultVirtualHost.virtualHostName())
 *             .build());
 * 
 *         var defaultQueue = new Queue("defaultQueue", QueueArgs.builder()
 *             .instanceId(default_.id())
 *             .queueName("tf-example")
 *             .virtualHostName(defaultVirtualHost.virtualHostName())
 *             .build());
 * 
 *         var defaultBinding = new Binding("defaultBinding", BindingArgs.builder()
 *             .argument("x-match:all")
 *             .bindingKey(defaultQueue.queueName())
 *             .bindingType("QUEUE")
 *             .destinationName("tf-example")
 *             .instanceId(default_.id())
 *             .sourceExchange(defaultExchange.exchangeName())
 *             .virtualHostName(defaultVirtualHost.virtualHostName())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * RabbitMQ (AMQP) Binding can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:amqp/binding:Binding example &lt;instance_id&gt;:&lt;virtual_host_name&gt;:&lt;source_exchange&gt;:&lt;destination_name&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:amqp/binding:Binding")
public class Binding extends com.pulumi.resources.CustomResource {
    /**
     * The key-value pairs that are configured for the headers attributes of a message. Default value: `x-match:all`. Valid values:
     * - `x-match:all`: A headers exchange routes a message to a queue only if all binding attributes of the queue except for x-match match the headers attributes of the message.
     * - `x-match:any`: A headers exchange routes a message to a queue if one or more binding attributes of the queue except for x-match match the headers attributes of the message.
     * - &gt; **NOTE:** If the exchange type is not &#39;HEADERS&#39;, the `argument` should not been set, otherwise, there are always &#34;forces replacement&#34; changes.
     * 
     */
    @Export(name="argument", refs={String.class}, tree="[0]")
    private Output<String> argument;

    /**
     * @return The key-value pairs that are configured for the headers attributes of a message. Default value: `x-match:all`. Valid values:
     * - `x-match:all`: A headers exchange routes a message to a queue only if all binding attributes of the queue except for x-match match the headers attributes of the message.
     * - `x-match:any`: A headers exchange routes a message to a queue if one or more binding attributes of the queue except for x-match match the headers attributes of the message.
     * - &gt; **NOTE:** If the exchange type is not &#39;HEADERS&#39;, the `argument` should not been set, otherwise, there are always &#34;forces replacement&#34; changes.
     * 
     */
    public Output<String> argument() {
        return this.argument;
    }
    /**
     * The Binding Key.
     * * For a non-topic source exchange: The binding key can contain only letters, digits, hyphens (-), underscores (_), periods (.), and at signs ({@literal @}).
     *   The binding key must be 1 to 255 characters in length.
     * * For a topic source exchange: The binding key can contain letters, digits, hyphens (-), underscores (_), periods (.), and at signs ({@literal @}).
     *   If the binding key contains a number sign (#), the binding key must start with a number sign (#) followed by a period (.) or end with a number sign (#) that follows a period (.).
     *   The binding key must be 1 to 255 characters in length.
     * 
     */
    @Export(name="bindingKey", refs={String.class}, tree="[0]")
    private Output<String> bindingKey;

    /**
     * @return The Binding Key.
     * * For a non-topic source exchange: The binding key can contain only letters, digits, hyphens (-), underscores (_), periods (.), and at signs ({@literal @}).
     *   The binding key must be 1 to 255 characters in length.
     * * For a topic source exchange: The binding key can contain letters, digits, hyphens (-), underscores (_), periods (.), and at signs ({@literal @}).
     *   If the binding key contains a number sign (#), the binding key must start with a number sign (#) followed by a period (.) or end with a number sign (#) that follows a period (.).
     *   The binding key must be 1 to 255 characters in length.
     * 
     */
    public Output<String> bindingKey() {
        return this.bindingKey;
    }
    /**
     * The type of the object that you want to bind to the source exchange. Valid values: `EXCHANGE`, `QUEUE`.
     * 
     */
    @Export(name="bindingType", refs={String.class}, tree="[0]")
    private Output<String> bindingType;

    /**
     * @return The type of the object that you want to bind to the source exchange. Valid values: `EXCHANGE`, `QUEUE`.
     * 
     */
    public Output<String> bindingType() {
        return this.bindingType;
    }
    /**
     * The name of the object that you want to bind to the source exchange.
     * 
     */
    @Export(name="destinationName", refs={String.class}, tree="[0]")
    private Output<String> destinationName;

    /**
     * @return The name of the object that you want to bind to the source exchange.
     * 
     */
    public Output<String> destinationName() {
        return this.destinationName;
    }
    /**
     * The ID of the instance.
     * 
     */
    @Export(name="instanceId", refs={String.class}, tree="[0]")
    private Output<String> instanceId;

    /**
     * @return The ID of the instance.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }
    /**
     * The name of the source exchange.
     * 
     */
    @Export(name="sourceExchange", refs={String.class}, tree="[0]")
    private Output<String> sourceExchange;

    /**
     * @return The name of the source exchange.
     * 
     */
    public Output<String> sourceExchange() {
        return this.sourceExchange;
    }
    /**
     * The name of the vhost.
     * 
     */
    @Export(name="virtualHostName", refs={String.class}, tree="[0]")
    private Output<String> virtualHostName;

    /**
     * @return The name of the vhost.
     * 
     */
    public Output<String> virtualHostName() {
        return this.virtualHostName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Binding(java.lang.String name) {
        this(name, BindingArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Binding(java.lang.String name, BindingArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Binding(java.lang.String name, BindingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:amqp/binding:Binding", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Binding(java.lang.String name, Output<java.lang.String> id, @Nullable BindingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:amqp/binding:Binding", name, state, makeResourceOptions(options, id), false);
    }

    private static BindingArgs makeArgs(BindingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? BindingArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Binding get(java.lang.String name, Output<java.lang.String> id, @Nullable BindingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Binding(name, id, state, options);
    }
}
