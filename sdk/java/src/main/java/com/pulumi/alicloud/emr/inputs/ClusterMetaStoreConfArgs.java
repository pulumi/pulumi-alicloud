// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.emr.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ClusterMetaStoreConfArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterMetaStoreConfArgs Empty = new ClusterMetaStoreConfArgs();

    /**
     * Custom rds database password.
     * 
     */
    @Import(name="dbPassword", required=true)
    private Output<String> dbPassword;

    /**
     * @return Custom rds database password.
     * 
     */
    public Output<String> dbPassword() {
        return this.dbPassword;
    }

    /**
     * Custom rds database connection url.
     * 
     */
    @Import(name="dbUrl", required=true)
    private Output<String> dbUrl;

    /**
     * @return Custom rds database connection url.
     * 
     */
    public Output<String> dbUrl() {
        return this.dbUrl;
    }

    /**
     * Custom rds database user name.
     * 
     */
    @Import(name="dbUserName", required=true)
    private Output<String> dbUserName;

    /**
     * @return Custom rds database user name.
     * 
     */
    public Output<String> dbUserName() {
        return this.dbUserName;
    }

    private ClusterMetaStoreConfArgs() {}

    private ClusterMetaStoreConfArgs(ClusterMetaStoreConfArgs $) {
        this.dbPassword = $.dbPassword;
        this.dbUrl = $.dbUrl;
        this.dbUserName = $.dbUserName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterMetaStoreConfArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterMetaStoreConfArgs $;

        public Builder() {
            $ = new ClusterMetaStoreConfArgs();
        }

        public Builder(ClusterMetaStoreConfArgs defaults) {
            $ = new ClusterMetaStoreConfArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dbPassword Custom rds database password.
         * 
         * @return builder
         * 
         */
        public Builder dbPassword(Output<String> dbPassword) {
            $.dbPassword = dbPassword;
            return this;
        }

        /**
         * @param dbPassword Custom rds database password.
         * 
         * @return builder
         * 
         */
        public Builder dbPassword(String dbPassword) {
            return dbPassword(Output.of(dbPassword));
        }

        /**
         * @param dbUrl Custom rds database connection url.
         * 
         * @return builder
         * 
         */
        public Builder dbUrl(Output<String> dbUrl) {
            $.dbUrl = dbUrl;
            return this;
        }

        /**
         * @param dbUrl Custom rds database connection url.
         * 
         * @return builder
         * 
         */
        public Builder dbUrl(String dbUrl) {
            return dbUrl(Output.of(dbUrl));
        }

        /**
         * @param dbUserName Custom rds database user name.
         * 
         * @return builder
         * 
         */
        public Builder dbUserName(Output<String> dbUserName) {
            $.dbUserName = dbUserName;
            return this;
        }

        /**
         * @param dbUserName Custom rds database user name.
         * 
         * @return builder
         * 
         */
        public Builder dbUserName(String dbUserName) {
            return dbUserName(Output.of(dbUserName));
        }

        public ClusterMetaStoreConfArgs build() {
            if ($.dbPassword == null) {
                throw new MissingRequiredPropertyException("ClusterMetaStoreConfArgs", "dbPassword");
            }
            if ($.dbUrl == null) {
                throw new MissingRequiredPropertyException("ClusterMetaStoreConfArgs", "dbUrl");
            }
            if ($.dbUserName == null) {
                throw new MissingRequiredPropertyException("ClusterMetaStoreConfArgs", "dbUserName");
            }
            return $;
        }
    }

}
