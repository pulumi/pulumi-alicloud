// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sls.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAlertsAlertConfigurationPolicyConfiguration {
    /**
     * @return The ID of the action policy used.If the alert policy is in advanced mode and the selected alert policy is not configured with a dynamic action policy, set the actionPolicyId to an empty string.
     * 
     */
    private String actionPolicyId;
    /**
     * @return Alarm policy ID.If it is in simple mode or normal mode, set it to sls.builtin.dynamic (dynamic alarm policy built into the system).For advanced mode, set it to the specified alarm policy ID.
     * 
     */
    private String alertPolicyId;
    /**
     * @return Repeat the waiting time. For example, 5m, 1H, etc.
     * 
     */
    private String repeatInterval;

    private GetAlertsAlertConfigurationPolicyConfiguration() {}
    /**
     * @return The ID of the action policy used.If the alert policy is in advanced mode and the selected alert policy is not configured with a dynamic action policy, set the actionPolicyId to an empty string.
     * 
     */
    public String actionPolicyId() {
        return this.actionPolicyId;
    }
    /**
     * @return Alarm policy ID.If it is in simple mode or normal mode, set it to sls.builtin.dynamic (dynamic alarm policy built into the system).For advanced mode, set it to the specified alarm policy ID.
     * 
     */
    public String alertPolicyId() {
        return this.alertPolicyId;
    }
    /**
     * @return Repeat the waiting time. For example, 5m, 1H, etc.
     * 
     */
    public String repeatInterval() {
        return this.repeatInterval;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAlertsAlertConfigurationPolicyConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String actionPolicyId;
        private String alertPolicyId;
        private String repeatInterval;
        public Builder() {}
        public Builder(GetAlertsAlertConfigurationPolicyConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionPolicyId = defaults.actionPolicyId;
    	      this.alertPolicyId = defaults.alertPolicyId;
    	      this.repeatInterval = defaults.repeatInterval;
        }

        @CustomType.Setter
        public Builder actionPolicyId(String actionPolicyId) {
            if (actionPolicyId == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertConfigurationPolicyConfiguration", "actionPolicyId");
            }
            this.actionPolicyId = actionPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder alertPolicyId(String alertPolicyId) {
            if (alertPolicyId == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertConfigurationPolicyConfiguration", "alertPolicyId");
            }
            this.alertPolicyId = alertPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder repeatInterval(String repeatInterval) {
            if (repeatInterval == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlertConfigurationPolicyConfiguration", "repeatInterval");
            }
            this.repeatInterval = repeatInterval;
            return this;
        }
        public GetAlertsAlertConfigurationPolicyConfiguration build() {
            final var _resultValue = new GetAlertsAlertConfigurationPolicyConfiguration();
            _resultValue.actionPolicyId = actionPolicyId;
            _resultValue.alertPolicyId = alertPolicyId;
            _resultValue.repeatInterval = repeatInterval;
            return _resultValue;
        }
    }
}
