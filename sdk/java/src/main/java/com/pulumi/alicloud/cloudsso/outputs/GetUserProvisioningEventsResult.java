// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudsso.outputs;

import com.pulumi.alicloud.cloudsso.outputs.GetUserProvisioningEventsEvent;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetUserProvisioningEventsResult {
    /**
     * @return Directory ID
     * 
     */
    private String directoryId;
    /**
     * @return A list of User Provisioning Event Entries. Each element contains the following attributes:
     * 
     */
    private List<GetUserProvisioningEventsEvent> events;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of User Provisioning Event IDs.
     * 
     */
    private List<String> ids;
    private @Nullable String outputFile;
    /**
     * @return The ID of the User Provisioning.
     * 
     */
    private @Nullable String userProvisioningId;

    private GetUserProvisioningEventsResult() {}
    /**
     * @return Directory ID
     * 
     */
    public String directoryId() {
        return this.directoryId;
    }
    /**
     * @return A list of User Provisioning Event Entries. Each element contains the following attributes:
     * 
     */
    public List<GetUserProvisioningEventsEvent> events() {
        return this.events;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of User Provisioning Event IDs.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return The ID of the User Provisioning.
     * 
     */
    public Optional<String> userProvisioningId() {
        return Optional.ofNullable(this.userProvisioningId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserProvisioningEventsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String directoryId;
        private List<GetUserProvisioningEventsEvent> events;
        private String id;
        private List<String> ids;
        private @Nullable String outputFile;
        private @Nullable String userProvisioningId;
        public Builder() {}
        public Builder(GetUserProvisioningEventsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.directoryId = defaults.directoryId;
    	      this.events = defaults.events;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.outputFile = defaults.outputFile;
    	      this.userProvisioningId = defaults.userProvisioningId;
        }

        @CustomType.Setter
        public Builder directoryId(String directoryId) {
            if (directoryId == null) {
              throw new MissingRequiredPropertyException("GetUserProvisioningEventsResult", "directoryId");
            }
            this.directoryId = directoryId;
            return this;
        }
        @CustomType.Setter
        public Builder events(List<GetUserProvisioningEventsEvent> events) {
            if (events == null) {
              throw new MissingRequiredPropertyException("GetUserProvisioningEventsResult", "events");
            }
            this.events = events;
            return this;
        }
        public Builder events(GetUserProvisioningEventsEvent... events) {
            return events(List.of(events));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUserProvisioningEventsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            if (ids == null) {
              throw new MissingRequiredPropertyException("GetUserProvisioningEventsResult", "ids");
            }
            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder userProvisioningId(@Nullable String userProvisioningId) {

            this.userProvisioningId = userProvisioningId;
            return this;
        }
        public GetUserProvisioningEventsResult build() {
            final var _resultValue = new GetUserProvisioningEventsResult();
            _resultValue.directoryId = directoryId;
            _resultValue.events = events;
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.outputFile = outputFile;
            _resultValue.userProvisioningId = userProvisioningId;
            return _resultValue;
        }
    }
}
