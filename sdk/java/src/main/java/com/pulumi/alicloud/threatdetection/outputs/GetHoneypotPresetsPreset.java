// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection.outputs;

import com.pulumi.alicloud.threatdetection.outputs.GetHoneypotPresetsPresetMeta;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetHoneypotPresetsPreset {
    /**
     * @return Honeypot mirror name
     * 
     */
    private String honeypotImageName;
    /**
     * @return Unique ID of honeypot Template.
     * 
     */
    private String honeypotPresetId;
    /**
     * @return The id of the Honeypot template.
     * 
     */
    private String id;
    /**
     * @return Honeypot template custom parameters.
     * 
     */
    private List<GetHoneypotPresetsPresetMeta> metas;
    /**
     * @return Unique id of management node
     * 
     */
    private String nodeId;
    /**
     * @return Honeypot template custom name
     * 
     */
    private String presetName;

    private GetHoneypotPresetsPreset() {}
    /**
     * @return Honeypot mirror name
     * 
     */
    public String honeypotImageName() {
        return this.honeypotImageName;
    }
    /**
     * @return Unique ID of honeypot Template.
     * 
     */
    public String honeypotPresetId() {
        return this.honeypotPresetId;
    }
    /**
     * @return The id of the Honeypot template.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Honeypot template custom parameters.
     * 
     */
    public List<GetHoneypotPresetsPresetMeta> metas() {
        return this.metas;
    }
    /**
     * @return Unique id of management node
     * 
     */
    public String nodeId() {
        return this.nodeId;
    }
    /**
     * @return Honeypot template custom name
     * 
     */
    public String presetName() {
        return this.presetName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHoneypotPresetsPreset defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String honeypotImageName;
        private String honeypotPresetId;
        private String id;
        private List<GetHoneypotPresetsPresetMeta> metas;
        private String nodeId;
        private String presetName;
        public Builder() {}
        public Builder(GetHoneypotPresetsPreset defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.honeypotImageName = defaults.honeypotImageName;
    	      this.honeypotPresetId = defaults.honeypotPresetId;
    	      this.id = defaults.id;
    	      this.metas = defaults.metas;
    	      this.nodeId = defaults.nodeId;
    	      this.presetName = defaults.presetName;
        }

        @CustomType.Setter
        public Builder honeypotImageName(String honeypotImageName) {
            if (honeypotImageName == null) {
              throw new MissingRequiredPropertyException("GetHoneypotPresetsPreset", "honeypotImageName");
            }
            this.honeypotImageName = honeypotImageName;
            return this;
        }
        @CustomType.Setter
        public Builder honeypotPresetId(String honeypotPresetId) {
            if (honeypotPresetId == null) {
              throw new MissingRequiredPropertyException("GetHoneypotPresetsPreset", "honeypotPresetId");
            }
            this.honeypotPresetId = honeypotPresetId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetHoneypotPresetsPreset", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder metas(List<GetHoneypotPresetsPresetMeta> metas) {
            if (metas == null) {
              throw new MissingRequiredPropertyException("GetHoneypotPresetsPreset", "metas");
            }
            this.metas = metas;
            return this;
        }
        public Builder metas(GetHoneypotPresetsPresetMeta... metas) {
            return metas(List.of(metas));
        }
        @CustomType.Setter
        public Builder nodeId(String nodeId) {
            if (nodeId == null) {
              throw new MissingRequiredPropertyException("GetHoneypotPresetsPreset", "nodeId");
            }
            this.nodeId = nodeId;
            return this;
        }
        @CustomType.Setter
        public Builder presetName(String presetName) {
            if (presetName == null) {
              throw new MissingRequiredPropertyException("GetHoneypotPresetsPreset", "presetName");
            }
            this.presetName = presetName;
            return this;
        }
        public GetHoneypotPresetsPreset build() {
            final var _resultValue = new GetHoneypotPresetsPreset();
            _resultValue.honeypotImageName = honeypotImageName;
            _resultValue.honeypotPresetId = honeypotPresetId;
            _resultValue.id = id;
            _resultValue.metas = metas;
            _resultValue.nodeId = nodeId;
            _resultValue.presetName = presetName;
            return _resultValue;
        }
    }
}
