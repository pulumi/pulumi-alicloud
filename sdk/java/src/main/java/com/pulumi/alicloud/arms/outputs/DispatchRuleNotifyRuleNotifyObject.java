// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.arms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DispatchRuleNotifyRuleNotifyObject {
    /**
     * @return The name of the contact or contact group.
     * 
     */
    private String name;
    /**
     * @return The ID of the contact or contact group.
     * 
     */
    private String notifyObjectId;
    /**
     * @return The type of the alert contact. Valid values: ARMS_CONTACT: contact. ARMS_CONTACT_GROUP: contact group.
     * 
     */
    private String notifyType;

    private DispatchRuleNotifyRuleNotifyObject() {}
    /**
     * @return The name of the contact or contact group.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The ID of the contact or contact group.
     * 
     */
    public String notifyObjectId() {
        return this.notifyObjectId;
    }
    /**
     * @return The type of the alert contact. Valid values: ARMS_CONTACT: contact. ARMS_CONTACT_GROUP: contact group.
     * 
     */
    public String notifyType() {
        return this.notifyType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DispatchRuleNotifyRuleNotifyObject defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private String notifyObjectId;
        private String notifyType;
        public Builder() {}
        public Builder(DispatchRuleNotifyRuleNotifyObject defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.notifyObjectId = defaults.notifyObjectId;
    	      this.notifyType = defaults.notifyType;
        }

        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("DispatchRuleNotifyRuleNotifyObject", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder notifyObjectId(String notifyObjectId) {
            if (notifyObjectId == null) {
              throw new MissingRequiredPropertyException("DispatchRuleNotifyRuleNotifyObject", "notifyObjectId");
            }
            this.notifyObjectId = notifyObjectId;
            return this;
        }
        @CustomType.Setter
        public Builder notifyType(String notifyType) {
            if (notifyType == null) {
              throw new MissingRequiredPropertyException("DispatchRuleNotifyRuleNotifyObject", "notifyType");
            }
            this.notifyType = notifyType;
            return this;
        }
        public DispatchRuleNotifyRuleNotifyObject build() {
            final var _resultValue = new DispatchRuleNotifyRuleNotifyObject();
            _resultValue.name = name;
            _resultValue.notifyObjectId = notifyObjectId;
            _resultValue.notifyType = notifyType;
            return _resultValue;
        }
    }
}
