// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.log.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MachineGroupState extends com.pulumi.resources.ResourceArgs {

    public static final MachineGroupState Empty = new MachineGroupState();

    /**
     * The specific machine identification, which can be an IP address or user-defined identity.
     * 
     */
    @Import(name="identifyLists")
    private @Nullable Output<List<String>> identifyLists;

    /**
     * @return The specific machine identification, which can be an IP address or user-defined identity.
     * 
     */
    public Optional<Output<List<String>>> identifyLists() {
        return Optional.ofNullable(this.identifyLists);
    }

    /**
     * The machine identification type, including IP and user-defined identity. Valid values are &#34;ip&#34; and &#34;userdefined&#34;. Default to &#34;ip&#34;.
     * 
     */
    @Import(name="identifyType")
    private @Nullable Output<String> identifyType;

    /**
     * @return The machine identification type, including IP and user-defined identity. Valid values are &#34;ip&#34; and &#34;userdefined&#34;. Default to &#34;ip&#34;.
     * 
     */
    public Optional<Output<String>> identifyType() {
        return Optional.ofNullable(this.identifyType);
    }

    /**
     * The machine group name, which is unique in the same project.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The machine group name, which is unique in the same project.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The project name to the machine group belongs.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The project name to the machine group belongs.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The topic of a machine group.
     * 
     */
    @Import(name="topic")
    private @Nullable Output<String> topic;

    /**
     * @return The topic of a machine group.
     * 
     */
    public Optional<Output<String>> topic() {
        return Optional.ofNullable(this.topic);
    }

    private MachineGroupState() {}

    private MachineGroupState(MachineGroupState $) {
        this.identifyLists = $.identifyLists;
        this.identifyType = $.identifyType;
        this.name = $.name;
        this.project = $.project;
        this.topic = $.topic;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MachineGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MachineGroupState $;

        public Builder() {
            $ = new MachineGroupState();
        }

        public Builder(MachineGroupState defaults) {
            $ = new MachineGroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param identifyLists The specific machine identification, which can be an IP address or user-defined identity.
         * 
         * @return builder
         * 
         */
        public Builder identifyLists(@Nullable Output<List<String>> identifyLists) {
            $.identifyLists = identifyLists;
            return this;
        }

        /**
         * @param identifyLists The specific machine identification, which can be an IP address or user-defined identity.
         * 
         * @return builder
         * 
         */
        public Builder identifyLists(List<String> identifyLists) {
            return identifyLists(Output.of(identifyLists));
        }

        /**
         * @param identifyLists The specific machine identification, which can be an IP address or user-defined identity.
         * 
         * @return builder
         * 
         */
        public Builder identifyLists(String... identifyLists) {
            return identifyLists(List.of(identifyLists));
        }

        /**
         * @param identifyType The machine identification type, including IP and user-defined identity. Valid values are &#34;ip&#34; and &#34;userdefined&#34;. Default to &#34;ip&#34;.
         * 
         * @return builder
         * 
         */
        public Builder identifyType(@Nullable Output<String> identifyType) {
            $.identifyType = identifyType;
            return this;
        }

        /**
         * @param identifyType The machine identification type, including IP and user-defined identity. Valid values are &#34;ip&#34; and &#34;userdefined&#34;. Default to &#34;ip&#34;.
         * 
         * @return builder
         * 
         */
        public Builder identifyType(String identifyType) {
            return identifyType(Output.of(identifyType));
        }

        /**
         * @param name The machine group name, which is unique in the same project.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The machine group name, which is unique in the same project.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The project name to the machine group belongs.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The project name to the machine group belongs.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param topic The topic of a machine group.
         * 
         * @return builder
         * 
         */
        public Builder topic(@Nullable Output<String> topic) {
            $.topic = topic;
            return this;
        }

        /**
         * @param topic The topic of a machine group.
         * 
         * @return builder
         * 
         */
        public Builder topic(String topic) {
            return topic(Output.of(topic));
        }

        public MachineGroupState build() {
            return $;
        }
    }

}
