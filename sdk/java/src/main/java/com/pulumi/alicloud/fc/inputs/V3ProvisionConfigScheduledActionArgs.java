// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V3ProvisionConfigScheduledActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final V3ProvisionConfigScheduledActionArgs Empty = new V3ProvisionConfigScheduledActionArgs();

    /**
     * Policy expiration time
     * 
     */
    @Import(name="endTime")
    private @Nullable Output<String> endTime;

    /**
     * @return Policy expiration time
     * 
     */
    public Optional<Output<String>> endTime() {
        return Optional.ofNullable(this.endTime);
    }

    /**
     * Policy Name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Policy Name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Timing Configuration
     * 
     */
    @Import(name="scheduleExpression")
    private @Nullable Output<String> scheduleExpression;

    /**
     * @return Timing Configuration
     * 
     */
    public Optional<Output<String>> scheduleExpression() {
        return Optional.ofNullable(this.scheduleExpression);
    }

    /**
     * Policy effective time
     * 
     */
    @Import(name="startTime")
    private @Nullable Output<String> startTime;

    /**
     * @return Policy effective time
     * 
     */
    public Optional<Output<String>> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    /**
     * Number of reserved target resources
     * 
     */
    @Import(name="target")
    private @Nullable Output<Integer> target;

    /**
     * @return Number of reserved target resources
     * 
     */
    public Optional<Output<Integer>> target() {
        return Optional.ofNullable(this.target);
    }

    /**
     * Time zone.
     * 
     */
    @Import(name="timeZone")
    private @Nullable Output<String> timeZone;

    /**
     * @return Time zone.
     * 
     */
    public Optional<Output<String>> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    private V3ProvisionConfigScheduledActionArgs() {}

    private V3ProvisionConfigScheduledActionArgs(V3ProvisionConfigScheduledActionArgs $) {
        this.endTime = $.endTime;
        this.name = $.name;
        this.scheduleExpression = $.scheduleExpression;
        this.startTime = $.startTime;
        this.target = $.target;
        this.timeZone = $.timeZone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V3ProvisionConfigScheduledActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V3ProvisionConfigScheduledActionArgs $;

        public Builder() {
            $ = new V3ProvisionConfigScheduledActionArgs();
        }

        public Builder(V3ProvisionConfigScheduledActionArgs defaults) {
            $ = new V3ProvisionConfigScheduledActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endTime Policy expiration time
         * 
         * @return builder
         * 
         */
        public Builder endTime(@Nullable Output<String> endTime) {
            $.endTime = endTime;
            return this;
        }

        /**
         * @param endTime Policy expiration time
         * 
         * @return builder
         * 
         */
        public Builder endTime(String endTime) {
            return endTime(Output.of(endTime));
        }

        /**
         * @param name Policy Name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Policy Name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param scheduleExpression Timing Configuration
         * 
         * @return builder
         * 
         */
        public Builder scheduleExpression(@Nullable Output<String> scheduleExpression) {
            $.scheduleExpression = scheduleExpression;
            return this;
        }

        /**
         * @param scheduleExpression Timing Configuration
         * 
         * @return builder
         * 
         */
        public Builder scheduleExpression(String scheduleExpression) {
            return scheduleExpression(Output.of(scheduleExpression));
        }

        /**
         * @param startTime Policy effective time
         * 
         * @return builder
         * 
         */
        public Builder startTime(@Nullable Output<String> startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param startTime Policy effective time
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            return startTime(Output.of(startTime));
        }

        /**
         * @param target Number of reserved target resources
         * 
         * @return builder
         * 
         */
        public Builder target(@Nullable Output<Integer> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target Number of reserved target resources
         * 
         * @return builder
         * 
         */
        public Builder target(Integer target) {
            return target(Output.of(target));
        }

        /**
         * @param timeZone Time zone.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(@Nullable Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        /**
         * @param timeZone Time zone.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        public V3ProvisionConfigScheduledActionArgs build() {
            return $;
        }
    }

}
