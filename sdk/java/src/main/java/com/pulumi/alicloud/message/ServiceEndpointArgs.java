// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.message;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class ServiceEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceEndpointArgs Empty = new ServiceEndpointArgs();

    /**
     * Specifies whether the endpoint is enabled. Valid values:
     * 
     */
    @Import(name="endpointEnabled", required=true)
    private Output<Boolean> endpointEnabled;

    /**
     * @return Specifies whether the endpoint is enabled. Valid values:
     * 
     */
    public Output<Boolean> endpointEnabled() {
        return this.endpointEnabled;
    }

    /**
     * Access point type. Value:
     * - public: indicates a public access point. (Currently only public is supported)
     * 
     */
    @Import(name="endpointType", required=true)
    private Output<String> endpointType;

    /**
     * @return Access point type. Value:
     * - public: indicates a public access point. (Currently only public is supported)
     * 
     */
    public Output<String> endpointType() {
        return this.endpointType;
    }

    private ServiceEndpointArgs() {}

    private ServiceEndpointArgs(ServiceEndpointArgs $) {
        this.endpointEnabled = $.endpointEnabled;
        this.endpointType = $.endpointType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceEndpointArgs $;

        public Builder() {
            $ = new ServiceEndpointArgs();
        }

        public Builder(ServiceEndpointArgs defaults) {
            $ = new ServiceEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endpointEnabled Specifies whether the endpoint is enabled. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder endpointEnabled(Output<Boolean> endpointEnabled) {
            $.endpointEnabled = endpointEnabled;
            return this;
        }

        /**
         * @param endpointEnabled Specifies whether the endpoint is enabled. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder endpointEnabled(Boolean endpointEnabled) {
            return endpointEnabled(Output.of(endpointEnabled));
        }

        /**
         * @param endpointType Access point type. Value:
         * - public: indicates a public access point. (Currently only public is supported)
         * 
         * @return builder
         * 
         */
        public Builder endpointType(Output<String> endpointType) {
            $.endpointType = endpointType;
            return this;
        }

        /**
         * @param endpointType Access point type. Value:
         * - public: indicates a public access point. (Currently only public is supported)
         * 
         * @return builder
         * 
         */
        public Builder endpointType(String endpointType) {
            return endpointType(Output.of(endpointType));
        }

        public ServiceEndpointArgs build() {
            if ($.endpointEnabled == null) {
                throw new MissingRequiredPropertyException("ServiceEndpointArgs", "endpointEnabled");
            }
            if ($.endpointType == null) {
                throw new MissingRequiredPropertyException("ServiceEndpointArgs", "endpointType");
            }
            return $;
        }
    }

}
