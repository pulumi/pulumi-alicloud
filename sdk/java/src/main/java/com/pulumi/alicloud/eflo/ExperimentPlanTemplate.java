// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eflo;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.eflo.ExperimentPlanTemplateArgs;
import com.pulumi.alicloud.eflo.inputs.ExperimentPlanTemplateState;
import com.pulumi.alicloud.eflo.outputs.ExperimentPlanTemplateTemplatePipeline;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Eflo Experiment Plan Template resource.
 * 
 * For information about Eflo Experiment Plan Template and how to use it, see [What is Experiment Plan Template](https://www.alibabacloud.com/help/en/pai/developer-reference/api-eflo-cnp-2023-08-28-createexperimentplantemplate).
 * 
 * &gt; **NOTE:** Available since v1.248.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.eflo.ExperimentPlanTemplate;
 * import com.pulumi.alicloud.eflo.ExperimentPlanTemplateArgs;
 * import com.pulumi.alicloud.eflo.inputs.ExperimentPlanTemplateTemplatePipelineArgs;
 * import com.pulumi.alicloud.eflo.inputs.ExperimentPlanTemplateTemplatePipelineEnvParamsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         var default_ = new ExperimentPlanTemplate("default", ExperimentPlanTemplateArgs.builder()
 *             .templatePipelines(ExperimentPlanTemplateTemplatePipelineArgs.builder()
 *                 .workloadId(2)
 *                 .workloadName("MatMul")
 *                 .envParams(ExperimentPlanTemplateTemplatePipelineEnvParamsArgs.builder()
 *                     .cpuPerWorker(90)
 *                     .gpuPerWorker(8)
 *                     .memoryPerWorker(500)
 *                     .shareMemory(500)
 *                     .workerNum(1)
 *                     .pyTorchVersion("1")
 *                     .gpuDriverVersion("1")
 *                     .cudaVersion("1")
 *                     .ncclVersion("1")
 *                     .build())
 *                 .pipelineOrder(1)
 *                 .scene("baseline")
 *                 .build())
 *             .privacyLevel("private")
 *             .templateName(name)
 *             .templateDescription(name)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Eflo Experiment Plan Template can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:eflo/experimentPlanTemplate:ExperimentPlanTemplate example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:eflo/experimentPlanTemplate:ExperimentPlanTemplate")
public class ExperimentPlanTemplate extends com.pulumi.resources.CustomResource {
    /**
     * The creation time of the resource.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The creation time of the resource.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Used to indicate the privacy level of the content or information. It can have the following optional parameters:
     * - private: Indicates that the content is private and restricted to specific users or permission groups. Private content is usually not publicly displayed, and only authorized users can view or edit it.
     * - public: Indicates that the content is public and can be accessed by anyone. Public content is usually viewable by all users and is suitable for sharing information or resources
     * 
     */
    @Export(name="privacyLevel", refs={String.class}, tree="[0]")
    private Output<String> privacyLevel;

    /**
     * @return Used to indicate the privacy level of the content or information. It can have the following optional parameters:
     * - private: Indicates that the content is private and restricted to specific users or permission groups. Private content is usually not publicly displayed, and only authorized users can view or edit it.
     * - public: Indicates that the content is public and can be accessed by anyone. Public content is usually viewable by all users and is suitable for sharing information or resources
     * 
     */
    public Output<String> privacyLevel() {
        return this.privacyLevel;
    }
    /**
     * Describe the purpose of this template.
     * 
     */
    @Export(name="templateDescription", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> templateDescription;

    /**
     * @return Describe the purpose of this template.
     * 
     */
    public Output<Optional<String>> templateDescription() {
        return Codegen.optional(this.templateDescription);
    }
    /**
     * The ID of the template.
     * 
     */
    @Export(name="templateId", refs={String.class}, tree="[0]")
    private Output<String> templateId;

    /**
     * @return The ID of the template.
     * 
     */
    public Output<String> templateId() {
        return this.templateId;
    }
    /**
     * Help users identify and select specific templates.
     * 
     */
    @Export(name="templateName", refs={String.class}, tree="[0]")
    private Output<String> templateName;

    /**
     * @return Help users identify and select specific templates.
     * 
     */
    public Output<String> templateName() {
        return this.templateName;
    }
    /**
     * Representative Template Pipeline. See `templatePipeline` below.
     * 
     */
    @Export(name="templatePipelines", refs={List.class,ExperimentPlanTemplateTemplatePipeline.class}, tree="[0,1]")
    private Output<List<ExperimentPlanTemplateTemplatePipeline>> templatePipelines;

    /**
     * @return Representative Template Pipeline. See `templatePipeline` below.
     * 
     */
    public Output<List<ExperimentPlanTemplateTemplatePipeline>> templatePipelines() {
        return this.templatePipelines;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExperimentPlanTemplate(java.lang.String name) {
        this(name, ExperimentPlanTemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExperimentPlanTemplate(java.lang.String name, ExperimentPlanTemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExperimentPlanTemplate(java.lang.String name, ExperimentPlanTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:eflo/experimentPlanTemplate:ExperimentPlanTemplate", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ExperimentPlanTemplate(java.lang.String name, Output<java.lang.String> id, @Nullable ExperimentPlanTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:eflo/experimentPlanTemplate:ExperimentPlanTemplate", name, state, makeResourceOptions(options, id), false);
    }

    private static ExperimentPlanTemplateArgs makeArgs(ExperimentPlanTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ExperimentPlanTemplateArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExperimentPlanTemplate get(java.lang.String name, Output<java.lang.String> id, @Nullable ExperimentPlanTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExperimentPlanTemplate(name, id, state, options);
    }
}
