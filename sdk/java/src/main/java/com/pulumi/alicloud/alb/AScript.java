// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alb;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.alb.AScriptArgs;
import com.pulumi.alicloud.alb.inputs.AScriptState;
import com.pulumi.alicloud.alb.outputs.AScriptExtAttribute;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Application Load Balancer (ALB) A Script resource.
 * 
 * For information about Application Load Balancer (ALB) A Script and how to use it, see [What is A Script](https://www.alibabacloud.com/help/en/slb/application-load-balancer/developer-reference/api-alb-2020-06-16-createascripts).
 * 
 * &gt; **NOTE:** Available since v1.195.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.alb.AlbFunctions;
 * import com.pulumi.alicloud.alb.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
 * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.std.StdFunctions;
 * import com.pulumi.std.inputs.FormatArgs;
 * import com.pulumi.alicloud.alb.LoadBalancer;
 * import com.pulumi.alicloud.alb.LoadBalancerArgs;
 * import com.pulumi.alicloud.alb.inputs.LoadBalancerLoadBalancerBillingConfigArgs;
 * import com.pulumi.alicloud.alb.inputs.LoadBalancerZoneMappingArgs;
 * import com.pulumi.alicloud.alb.ServerGroup;
 * import com.pulumi.alicloud.alb.ServerGroupArgs;
 * import com.pulumi.alicloud.alb.inputs.ServerGroupHealthCheckConfigArgs;
 * import com.pulumi.alicloud.alb.inputs.ServerGroupStickySessionConfigArgs;
 * import com.pulumi.alicloud.alb.Listener;
 * import com.pulumi.alicloud.alb.ListenerArgs;
 * import com.pulumi.alicloud.alb.inputs.ListenerDefaultActionArgs;
 * import com.pulumi.alicloud.alb.inputs.ListenerDefaultActionForwardGroupConfigArgs;
 * import com.pulumi.alicloud.alb.AScript;
 * import com.pulumi.alicloud.alb.AScriptArgs;
 * import com.pulumi.codegen.internal.KeyedValue;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("tf_example");
 *         final var default = AlbFunctions.getZones(GetZonesArgs.builder()
 *             .build());
 * 
 *         final var defaultGetResourceGroups = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
 *             .build());
 * 
 *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
 *             .vpcName(name)
 *             .cidrBlock("10.4.0.0/16")
 *             .build());
 * 
 *         for (var i = 0; i < 2; i++) {
 *             new Switch("defaultSwitch-" + i, SwitchArgs.builder()
 *                 .vpcId(defaultNetwork.id())
 *                 .cidrBlock(StdFunctions.format(FormatArgs.builder()
 *                     .input("10.4.%d.0/24")
 *                     .args(range.value() + 1)
 *                     .build()).result())
 *                 .zoneId(default_.zones()[range.value()].id())
 *                 .vswitchName(StdFunctions.format(FormatArgs.builder()
 *                     .input(String.format("%s_%d", name))
 *                     .args(range.value() + 1)
 *                     .build()).result())
 *                 .build());
 * 
 *         
 * }
 *         var defaultLoadBalancer = new LoadBalancer("defaultLoadBalancer", LoadBalancerArgs.builder()
 *             .vpcId(defaultNetwork.id())
 *             .addressType("Internet")
 *             .addressAllocatedMode("Fixed")
 *             .loadBalancerName(name)
 *             .loadBalancerEdition("Standard")
 *             .resourceGroupId(defaultGetResourceGroups.groups()[0].id())
 *             .loadBalancerBillingConfig(LoadBalancerLoadBalancerBillingConfigArgs.builder()
 *                 .payType("PayAsYouGo")
 *                 .build())
 *             .tags(Map.of("Created", "TF"))
 *             .zoneMappings(            
 *                 LoadBalancerZoneMappingArgs.builder()
 *                     .vswitchId(defaultSwitch[0].id())
 *                     .zoneId(default_.zones()[0].id())
 *                     .build(),
 *                 LoadBalancerZoneMappingArgs.builder()
 *                     .vswitchId(defaultSwitch[1].id())
 *                     .zoneId(default_.zones()[1].id())
 *                     .build())
 *             .build());
 * 
 *         var defaultServerGroup = new ServerGroup("defaultServerGroup", ServerGroupArgs.builder()
 *             .protocol("HTTP")
 *             .vpcId(defaultNetwork.id())
 *             .serverGroupName(name)
 *             .resourceGroupId(defaultGetResourceGroups.groups()[0].id())
 *             .healthCheckConfig(ServerGroupHealthCheckConfigArgs.builder()
 *                 .healthCheckEnabled(false)
 *                 .build())
 *             .stickySessionConfig(ServerGroupStickySessionConfigArgs.builder()
 *                 .stickySessionEnabled(false)
 *                 .build())
 *             .tags(Map.of("Created", "TF"))
 *             .build());
 * 
 *         var defaultListener = new Listener("defaultListener", ListenerArgs.builder()
 *             .loadBalancerId(defaultLoadBalancer.id())
 *             .listenerProtocol("HTTP")
 *             .listenerPort(8081)
 *             .listenerDescription(name)
 *             .defaultActions(ListenerDefaultActionArgs.builder()
 *                 .type("ForwardGroup")
 *                 .forwardGroupConfig(ListenerDefaultActionForwardGroupConfigArgs.builder()
 *                     .serverGroupTuples(ListenerDefaultActionForwardGroupConfigServerGroupTupleArgs.builder()
 *                         .serverGroupId(defaultServerGroup.id())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var defaultAScript = new AScript("defaultAScript", AScriptArgs.builder()
 *             .scriptContent("time()")
 *             .position("RequestHead")
 *             .ascriptName(name)
 *             .enabled(true)
 *             .listenerId(defaultListener.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Application Load Balancer (ALB) A Script can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:alb/aScript:AScript example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:alb/aScript:AScript")
public class AScript extends com.pulumi.resources.CustomResource {
    /**
     * AScript name.
     * 
     */
    @Export(name="ascriptName", refs={String.class}, tree="[0]")
    private Output<String> ascriptName;

    /**
     * @return AScript name.
     * 
     */
    public Output<String> ascriptName() {
        return this.ascriptName;
    }
    /**
     * Whether to PreCheck only this request
     * 
     */
    @Export(name="dryRun", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dryRun;

    /**
     * @return Whether to PreCheck only this request
     * 
     */
    public Output<Optional<Boolean>> dryRun() {
        return Codegen.optional(this.dryRun);
    }
    /**
     * Whether AScript is enabled.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Whether AScript is enabled.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * Whether extension parameters are enabled. When ExtAttributeEnabled is true, ExtAttributes must be set.
     * 
     */
    @Export(name="extAttributeEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> extAttributeEnabled;

    /**
     * @return Whether extension parameters are enabled. When ExtAttributeEnabled is true, ExtAttributes must be set.
     * 
     */
    public Output<Optional<Boolean>> extAttributeEnabled() {
        return Codegen.optional(this.extAttributeEnabled);
    }
    /**
     * Expand the list of attributes. When ExtAttributeEnabled is true, ExtAttributes must be set. See `ext_attributes` below.
     * 
     */
    @Export(name="extAttributes", refs={List.class,AScriptExtAttribute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AScriptExtAttribute>> extAttributes;

    /**
     * @return Expand the list of attributes. When ExtAttributeEnabled is true, ExtAttributes must be set. See `ext_attributes` below.
     * 
     */
    public Output<Optional<List<AScriptExtAttribute>>> extAttributes() {
        return Codegen.optional(this.extAttributes);
    }
    /**
     * Listener ID of script attribution
     * 
     */
    @Export(name="listenerId", refs={String.class}, tree="[0]")
    private Output<String> listenerId;

    /**
     * @return Listener ID of script attribution
     * 
     */
    public Output<String> listenerId() {
        return this.listenerId;
    }
    /**
     * Script execution location.
     * 
     */
    @Export(name="position", refs={String.class}, tree="[0]")
    private Output<String> position;

    /**
     * @return Script execution location.
     * 
     */
    public Output<String> position() {
        return this.position;
    }
    /**
     * AScript script content.
     * 
     */
    @Export(name="scriptContent", refs={String.class}, tree="[0]")
    private Output<String> scriptContent;

    /**
     * @return AScript script content.
     * 
     */
    public Output<String> scriptContent() {
        return this.scriptContent;
    }
    /**
     * Script status
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return Script status
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AScript(java.lang.String name) {
        this(name, AScriptArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AScript(java.lang.String name, AScriptArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AScript(java.lang.String name, AScriptArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:alb/aScript:AScript", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AScript(java.lang.String name, Output<java.lang.String> id, @Nullable AScriptState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:alb/aScript:AScript", name, state, makeResourceOptions(options, id), false);
    }

    private static AScriptArgs makeArgs(AScriptArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AScriptArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AScript get(java.lang.String name, Output<java.lang.String> id, @Nullable AScriptState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AScript(name, id, state, options);
    }
}
