// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.gpdb;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DbInstanceIpArrayArgs extends com.pulumi.resources.ResourceArgs {

    public static final DbInstanceIpArrayArgs Empty = new DbInstanceIpArrayArgs();

    /**
     * The instance ID.
     * 
     * &gt; **NOTE:**  You can call the [DescribeDBInstances](https://www.alibabacloud.com/help/en/doc-detail/86911.html) operation to query details about all AnalyticDB for PostgreSQL instances within a region, including instance IDs.
     * 
     */
    @Import(name="dbInstanceId", required=true)
    private Output<String> dbInstanceId;

    /**
     * @return The instance ID.
     * 
     * &gt; **NOTE:**  You can call the [DescribeDBInstances](https://www.alibabacloud.com/help/en/doc-detail/86911.html) operation to query details about all AnalyticDB for PostgreSQL instances within a region, including instance IDs.
     * 
     */
    public Output<String> dbInstanceId() {
        return this.dbInstanceId;
    }

    /**
     * The default is empty. To distinguish between different attribute values, the console does not display groups with the &#39;hidden&#39; attribute.
     * 
     */
    @Import(name="dbInstanceIpArrayAttribute")
    private @Nullable Output<String> dbInstanceIpArrayAttribute;

    /**
     * @return The default is empty. To distinguish between different attribute values, the console does not display groups with the &#39;hidden&#39; attribute.
     * 
     */
    public Optional<Output<String>> dbInstanceIpArrayAttribute() {
        return Optional.ofNullable(this.dbInstanceIpArrayAttribute);
    }

    /**
     * The name of the IP address whitelist. If you do not specify this parameter, the default whitelist is queried.
     * 
     * &gt; **NOTE:**   Each instance supports up to 50 IP address whitelists.
     * 
     */
    @Import(name="dbInstanceIpArrayName", required=true)
    private Output<String> dbInstanceIpArrayName;

    /**
     * @return The name of the IP address whitelist. If you do not specify this parameter, the default whitelist is queried.
     * 
     * &gt; **NOTE:**   Each instance supports up to 50 IP address whitelists.
     * 
     */
    public Output<String> dbInstanceIpArrayName() {
        return this.dbInstanceIpArrayName;
    }

    /**
     * The method of modification. Valid values:
     * 
     * - `Cover`: overwrites the whitelist.
     * - `Append`: appends data to the whitelist.
     * - `Delete`: deletes the whitelist.
     * 
     */
    @Import(name="modifyMode")
    private @Nullable Output<String> modifyMode;

    /**
     * @return The method of modification. Valid values:
     * 
     * - `Cover`: overwrites the whitelist.
     * - `Append`: appends data to the whitelist.
     * - `Delete`: deletes the whitelist.
     * 
     */
    public Optional<Output<String>> modifyMode() {
        return Optional.ofNullable(this.modifyMode);
    }

    /**
     * The IP address whitelist contains a maximum of 1000 IP addresses separated by commas in the following three formats:
     * - 0.0.0.0/0
     * - 10.23.12.24(IP)
     * - 10.23.12.24/24(CIDR mode, Classless Inter-Domain Routing, &#39;/24&#39; indicates the length of the prefix in the address, and the range is &#39;[1,32]&#39;)
     * 
     */
    @Import(name="securityIpLists", required=true)
    private Output<List<String>> securityIpLists;

    /**
     * @return The IP address whitelist contains a maximum of 1000 IP addresses separated by commas in the following three formats:
     * - 0.0.0.0/0
     * - 10.23.12.24(IP)
     * - 10.23.12.24/24(CIDR mode, Classless Inter-Domain Routing, &#39;/24&#39; indicates the length of the prefix in the address, and the range is &#39;[1,32]&#39;)
     * 
     */
    public Output<List<String>> securityIpLists() {
        return this.securityIpLists;
    }

    private DbInstanceIpArrayArgs() {}

    private DbInstanceIpArrayArgs(DbInstanceIpArrayArgs $) {
        this.dbInstanceId = $.dbInstanceId;
        this.dbInstanceIpArrayAttribute = $.dbInstanceIpArrayAttribute;
        this.dbInstanceIpArrayName = $.dbInstanceIpArrayName;
        this.modifyMode = $.modifyMode;
        this.securityIpLists = $.securityIpLists;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DbInstanceIpArrayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DbInstanceIpArrayArgs $;

        public Builder() {
            $ = new DbInstanceIpArrayArgs();
        }

        public Builder(DbInstanceIpArrayArgs defaults) {
            $ = new DbInstanceIpArrayArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dbInstanceId The instance ID.
         * 
         * &gt; **NOTE:**  You can call the [DescribeDBInstances](https://www.alibabacloud.com/help/en/doc-detail/86911.html) operation to query details about all AnalyticDB for PostgreSQL instances within a region, including instance IDs.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceId(Output<String> dbInstanceId) {
            $.dbInstanceId = dbInstanceId;
            return this;
        }

        /**
         * @param dbInstanceId The instance ID.
         * 
         * &gt; **NOTE:**  You can call the [DescribeDBInstances](https://www.alibabacloud.com/help/en/doc-detail/86911.html) operation to query details about all AnalyticDB for PostgreSQL instances within a region, including instance IDs.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceId(String dbInstanceId) {
            return dbInstanceId(Output.of(dbInstanceId));
        }

        /**
         * @param dbInstanceIpArrayAttribute The default is empty. To distinguish between different attribute values, the console does not display groups with the &#39;hidden&#39; attribute.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceIpArrayAttribute(@Nullable Output<String> dbInstanceIpArrayAttribute) {
            $.dbInstanceIpArrayAttribute = dbInstanceIpArrayAttribute;
            return this;
        }

        /**
         * @param dbInstanceIpArrayAttribute The default is empty. To distinguish between different attribute values, the console does not display groups with the &#39;hidden&#39; attribute.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceIpArrayAttribute(String dbInstanceIpArrayAttribute) {
            return dbInstanceIpArrayAttribute(Output.of(dbInstanceIpArrayAttribute));
        }

        /**
         * @param dbInstanceIpArrayName The name of the IP address whitelist. If you do not specify this parameter, the default whitelist is queried.
         * 
         * &gt; **NOTE:**   Each instance supports up to 50 IP address whitelists.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceIpArrayName(Output<String> dbInstanceIpArrayName) {
            $.dbInstanceIpArrayName = dbInstanceIpArrayName;
            return this;
        }

        /**
         * @param dbInstanceIpArrayName The name of the IP address whitelist. If you do not specify this parameter, the default whitelist is queried.
         * 
         * &gt; **NOTE:**   Each instance supports up to 50 IP address whitelists.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceIpArrayName(String dbInstanceIpArrayName) {
            return dbInstanceIpArrayName(Output.of(dbInstanceIpArrayName));
        }

        /**
         * @param modifyMode The method of modification. Valid values:
         * 
         * - `Cover`: overwrites the whitelist.
         * - `Append`: appends data to the whitelist.
         * - `Delete`: deletes the whitelist.
         * 
         * @return builder
         * 
         */
        public Builder modifyMode(@Nullable Output<String> modifyMode) {
            $.modifyMode = modifyMode;
            return this;
        }

        /**
         * @param modifyMode The method of modification. Valid values:
         * 
         * - `Cover`: overwrites the whitelist.
         * - `Append`: appends data to the whitelist.
         * - `Delete`: deletes the whitelist.
         * 
         * @return builder
         * 
         */
        public Builder modifyMode(String modifyMode) {
            return modifyMode(Output.of(modifyMode));
        }

        /**
         * @param securityIpLists The IP address whitelist contains a maximum of 1000 IP addresses separated by commas in the following three formats:
         * - 0.0.0.0/0
         * - 10.23.12.24(IP)
         * - 10.23.12.24/24(CIDR mode, Classless Inter-Domain Routing, &#39;/24&#39; indicates the length of the prefix in the address, and the range is &#39;[1,32]&#39;)
         * 
         * @return builder
         * 
         */
        public Builder securityIpLists(Output<List<String>> securityIpLists) {
            $.securityIpLists = securityIpLists;
            return this;
        }

        /**
         * @param securityIpLists The IP address whitelist contains a maximum of 1000 IP addresses separated by commas in the following three formats:
         * - 0.0.0.0/0
         * - 10.23.12.24(IP)
         * - 10.23.12.24/24(CIDR mode, Classless Inter-Domain Routing, &#39;/24&#39; indicates the length of the prefix in the address, and the range is &#39;[1,32]&#39;)
         * 
         * @return builder
         * 
         */
        public Builder securityIpLists(List<String> securityIpLists) {
            return securityIpLists(Output.of(securityIpLists));
        }

        /**
         * @param securityIpLists The IP address whitelist contains a maximum of 1000 IP addresses separated by commas in the following three formats:
         * - 0.0.0.0/0
         * - 10.23.12.24(IP)
         * - 10.23.12.24/24(CIDR mode, Classless Inter-Domain Routing, &#39;/24&#39; indicates the length of the prefix in the address, and the range is &#39;[1,32]&#39;)
         * 
         * @return builder
         * 
         */
        public Builder securityIpLists(String... securityIpLists) {
            return securityIpLists(List.of(securityIpLists));
        }

        public DbInstanceIpArrayArgs build() {
            if ($.dbInstanceId == null) {
                throw new MissingRequiredPropertyException("DbInstanceIpArrayArgs", "dbInstanceId");
            }
            if ($.dbInstanceIpArrayName == null) {
                throw new MissingRequiredPropertyException("DbInstanceIpArrayArgs", "dbInstanceIpArrayName");
            }
            if ($.securityIpLists == null) {
                throw new MissingRequiredPropertyException("DbInstanceIpArrayArgs", "securityIpLists");
            }
            return $;
        }
    }

}
