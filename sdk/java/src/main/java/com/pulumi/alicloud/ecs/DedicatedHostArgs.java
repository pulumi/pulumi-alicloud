// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs;

import com.pulumi.alicloud.ecs.inputs.DedicatedHostNetworkAttributeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DedicatedHostArgs extends com.pulumi.resources.ResourceArgs {

    public static final DedicatedHostArgs Empty = new DedicatedHostArgs();

    /**
     * The policy used to migrate the instances from the dedicated host when the dedicated host fails or needs to be repaired online. Valid values: `Migrate`, `Stop`.
     * 
     */
    @Import(name="actionOnMaintenance")
    private @Nullable Output<String> actionOnMaintenance;

    /**
     * @return The policy used to migrate the instances from the dedicated host when the dedicated host fails or needs to be repaired online. Valid values: `Migrate`, `Stop`.
     * 
     */
    public Optional<Output<String>> actionOnMaintenance() {
        return Optional.ofNullable(this.actionOnMaintenance);
    }

    /**
     * Specifies whether to add the dedicated host to the resource pool for automatic deployment. If you do not specify the DedicatedHostId parameter when you create an instance on a dedicated host, Alibaba Cloud automatically selects a dedicated host from the resource pool to host the instance. Valid values: `on`, `off`. Default: `on`.
     * 
     */
    @Import(name="autoPlacement")
    private @Nullable Output<String> autoPlacement;

    /**
     * @return Specifies whether to add the dedicated host to the resource pool for automatic deployment. If you do not specify the DedicatedHostId parameter when you create an instance on a dedicated host, Alibaba Cloud automatically selects a dedicated host from the resource pool to host the instance. Valid values: `on`, `off`. Default: `on`.
     * 
     */
    public Optional<Output<String>> autoPlacement() {
        return Optional.ofNullable(this.autoPlacement);
    }

    /**
     * The automatic release time of the dedicated host. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC+0.
     * 
     */
    @Import(name="autoReleaseTime")
    private @Nullable Output<String> autoReleaseTime;

    /**
     * @return The automatic release time of the dedicated host. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC+0.
     * 
     */
    public Optional<Output<String>> autoReleaseTime() {
        return Optional.ofNullable(this.autoReleaseTime);
    }

    /**
     * Specifies whether to automatically renew the subscription dedicated host.
     * 
     */
    @Import(name="autoRenew")
    private @Nullable Output<Boolean> autoRenew;

    /**
     * @return Specifies whether to automatically renew the subscription dedicated host.
     * 
     */
    public Optional<Output<Boolean>> autoRenew() {
        return Optional.ofNullable(this.autoRenew);
    }

    /**
     * The auto-renewal period of the dedicated host. Unit: months. Valid values: `1`, `2`, `3`, `6`, and `12`. takes effect and is required only when the AutoRenew parameter is set to true.
     * 
     */
    @Import(name="autoRenewPeriod")
    private @Nullable Output<Integer> autoRenewPeriod;

    /**
     * @return The auto-renewal period of the dedicated host. Unit: months. Valid values: `1`, `2`, `3`, `6`, and `12`. takes effect and is required only when the AutoRenew parameter is set to true.
     * 
     */
    public Optional<Output<Integer>> autoRenewPeriod() {
        return Optional.ofNullable(this.autoRenewPeriod);
    }

    /**
     * CPU oversold ratio. Only custom specifications g6s, c6s, r6s support setting the CPU oversold ratio.
     * 
     */
    @Import(name="cpuOverCommitRatio")
    private @Nullable Output<Double> cpuOverCommitRatio;

    /**
     * @return CPU oversold ratio. Only custom specifications g6s, c6s, r6s support setting the CPU oversold ratio.
     * 
     */
    public Optional<Output<Double>> cpuOverCommitRatio() {
        return Optional.ofNullable(this.cpuOverCommitRatio);
    }

    /**
     * The dedicated host cluster ID to which the dedicated host belongs.
     * 
     */
    @Import(name="dedicatedHostClusterId")
    private @Nullable Output<String> dedicatedHostClusterId;

    /**
     * @return The dedicated host cluster ID to which the dedicated host belongs.
     * 
     */
    public Optional<Output<String>> dedicatedHostClusterId() {
        return Optional.ofNullable(this.dedicatedHostClusterId);
    }

    /**
     * The name of the dedicated host. The name must be 2 to 128 characters in length. It must start with a letter but cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), and hyphens (-).
     * 
     */
    @Import(name="dedicatedHostName")
    private @Nullable Output<String> dedicatedHostName;

    /**
     * @return The name of the dedicated host. The name must be 2 to 128 characters in length. It must start with a letter but cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), and hyphens (-).
     * 
     */
    public Optional<Output<String>> dedicatedHostName() {
        return Optional.ofNullable(this.dedicatedHostName);
    }

    /**
     * The type of the dedicated host. You can call the [DescribeDedicatedHostTypes](https://www.alibabacloud.com/help/doc-detail/134240.htm) operation to obtain the most recent list of dedicated host types.
     * 
     */
    @Import(name="dedicatedHostType", required=true)
    private Output<String> dedicatedHostType;

    /**
     * @return The type of the dedicated host. You can call the [DescribeDedicatedHostTypes](https://www.alibabacloud.com/help/doc-detail/134240.htm) operation to obtain the most recent list of dedicated host types.
     * 
     */
    public Output<String> dedicatedHostType() {
        return this.dedicatedHostType;
    }

    /**
     * The description of the dedicated host. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the dedicated host. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Specifies whether to return the billing details of the order when the billing method is changed from subscription to pay-as-you-go. Default: `false`.
     * 
     */
    @Import(name="detailFee")
    private @Nullable Output<Boolean> detailFee;

    /**
     * @return Specifies whether to return the billing details of the order when the billing method is changed from subscription to pay-as-you-go. Default: `false`.
     * 
     */
    public Optional<Output<Boolean>> detailFee() {
        return Optional.ofNullable(this.detailFee);
    }

    /**
     * Specifies whether to only validate the request. Default: `false`.
     * 
     */
    @Import(name="dryRun")
    private @Nullable Output<Boolean> dryRun;

    /**
     * @return Specifies whether to only validate the request. Default: `false`.
     * 
     */
    public Optional<Output<Boolean>> dryRun() {
        return Optional.ofNullable(this.dryRun);
    }

    /**
     * The subscription period of the dedicated host. The Period parameter takes effect and is required only when the ChargeType parameter is set to PrePaid.
     * 
     */
    @Import(name="expiredTime")
    private @Nullable Output<String> expiredTime;

    /**
     * @return The subscription period of the dedicated host. The Period parameter takes effect and is required only when the ChargeType parameter is set to PrePaid.
     * 
     */
    public Optional<Output<String>> expiredTime() {
        return Optional.ofNullable(this.expiredTime);
    }

    /**
     * Specify the minimum purchase quantity of a dedicated host.
     * 
     */
    @Import(name="minQuantity")
    private @Nullable Output<Integer> minQuantity;

    /**
     * @return Specify the minimum purchase quantity of a dedicated host.
     * 
     */
    public Optional<Output<Integer>> minQuantity() {
        return Optional.ofNullable(this.minQuantity);
    }

    /**
     * dedicated host network parameters. contains the following attributes:
     * 
     */
    @Import(name="networkAttributes")
    private @Nullable Output<List<DedicatedHostNetworkAttributeArgs>> networkAttributes;

    /**
     * @return dedicated host network parameters. contains the following attributes:
     * 
     */
    public Optional<Output<List<DedicatedHostNetworkAttributeArgs>>> networkAttributes() {
        return Optional.ofNullable(this.networkAttributes);
    }

    /**
     * The billing method of the dedicated host. Valid values: `PrePaid`, `PostPaid`. Default: `PostPaid`.
     * 
     */
    @Import(name="paymentType")
    private @Nullable Output<String> paymentType;

    /**
     * @return The billing method of the dedicated host. Valid values: `PrePaid`, `PostPaid`. Default: `PostPaid`.
     * 
     */
    public Optional<Output<String>> paymentType() {
        return Optional.ofNullable(this.paymentType);
    }

    /**
     * The ID of the resource group to which the dedicated host belongs.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group to which the dedicated host belongs.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The unit of the subscription period of the dedicated host.
     * 
     */
    @Import(name="saleCycle")
    private @Nullable Output<String> saleCycle;

    /**
     * @return The unit of the subscription period of the dedicated host.
     * 
     */
    public Optional<Output<String>> saleCycle() {
        return Optional.ofNullable(this.saleCycle);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The zone ID of the dedicated host. This parameter is empty by default. If you do not specify this parameter, the system automatically selects a zone.
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return The zone ID of the dedicated host. This parameter is empty by default. If you do not specify this parameter, the system automatically selects a zone.
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private DedicatedHostArgs() {}

    private DedicatedHostArgs(DedicatedHostArgs $) {
        this.actionOnMaintenance = $.actionOnMaintenance;
        this.autoPlacement = $.autoPlacement;
        this.autoReleaseTime = $.autoReleaseTime;
        this.autoRenew = $.autoRenew;
        this.autoRenewPeriod = $.autoRenewPeriod;
        this.cpuOverCommitRatio = $.cpuOverCommitRatio;
        this.dedicatedHostClusterId = $.dedicatedHostClusterId;
        this.dedicatedHostName = $.dedicatedHostName;
        this.dedicatedHostType = $.dedicatedHostType;
        this.description = $.description;
        this.detailFee = $.detailFee;
        this.dryRun = $.dryRun;
        this.expiredTime = $.expiredTime;
        this.minQuantity = $.minQuantity;
        this.networkAttributes = $.networkAttributes;
        this.paymentType = $.paymentType;
        this.resourceGroupId = $.resourceGroupId;
        this.saleCycle = $.saleCycle;
        this.tags = $.tags;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DedicatedHostArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DedicatedHostArgs $;

        public Builder() {
            $ = new DedicatedHostArgs();
        }

        public Builder(DedicatedHostArgs defaults) {
            $ = new DedicatedHostArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionOnMaintenance The policy used to migrate the instances from the dedicated host when the dedicated host fails or needs to be repaired online. Valid values: `Migrate`, `Stop`.
         * 
         * @return builder
         * 
         */
        public Builder actionOnMaintenance(@Nullable Output<String> actionOnMaintenance) {
            $.actionOnMaintenance = actionOnMaintenance;
            return this;
        }

        /**
         * @param actionOnMaintenance The policy used to migrate the instances from the dedicated host when the dedicated host fails or needs to be repaired online. Valid values: `Migrate`, `Stop`.
         * 
         * @return builder
         * 
         */
        public Builder actionOnMaintenance(String actionOnMaintenance) {
            return actionOnMaintenance(Output.of(actionOnMaintenance));
        }

        /**
         * @param autoPlacement Specifies whether to add the dedicated host to the resource pool for automatic deployment. If you do not specify the DedicatedHostId parameter when you create an instance on a dedicated host, Alibaba Cloud automatically selects a dedicated host from the resource pool to host the instance. Valid values: `on`, `off`. Default: `on`.
         * 
         * @return builder
         * 
         */
        public Builder autoPlacement(@Nullable Output<String> autoPlacement) {
            $.autoPlacement = autoPlacement;
            return this;
        }

        /**
         * @param autoPlacement Specifies whether to add the dedicated host to the resource pool for automatic deployment. If you do not specify the DedicatedHostId parameter when you create an instance on a dedicated host, Alibaba Cloud automatically selects a dedicated host from the resource pool to host the instance. Valid values: `on`, `off`. Default: `on`.
         * 
         * @return builder
         * 
         */
        public Builder autoPlacement(String autoPlacement) {
            return autoPlacement(Output.of(autoPlacement));
        }

        /**
         * @param autoReleaseTime The automatic release time of the dedicated host. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC+0.
         * 
         * @return builder
         * 
         */
        public Builder autoReleaseTime(@Nullable Output<String> autoReleaseTime) {
            $.autoReleaseTime = autoReleaseTime;
            return this;
        }

        /**
         * @param autoReleaseTime The automatic release time of the dedicated host. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC+0.
         * 
         * @return builder
         * 
         */
        public Builder autoReleaseTime(String autoReleaseTime) {
            return autoReleaseTime(Output.of(autoReleaseTime));
        }

        /**
         * @param autoRenew Specifies whether to automatically renew the subscription dedicated host.
         * 
         * @return builder
         * 
         */
        public Builder autoRenew(@Nullable Output<Boolean> autoRenew) {
            $.autoRenew = autoRenew;
            return this;
        }

        /**
         * @param autoRenew Specifies whether to automatically renew the subscription dedicated host.
         * 
         * @return builder
         * 
         */
        public Builder autoRenew(Boolean autoRenew) {
            return autoRenew(Output.of(autoRenew));
        }

        /**
         * @param autoRenewPeriod The auto-renewal period of the dedicated host. Unit: months. Valid values: `1`, `2`, `3`, `6`, and `12`. takes effect and is required only when the AutoRenew parameter is set to true.
         * 
         * @return builder
         * 
         */
        public Builder autoRenewPeriod(@Nullable Output<Integer> autoRenewPeriod) {
            $.autoRenewPeriod = autoRenewPeriod;
            return this;
        }

        /**
         * @param autoRenewPeriod The auto-renewal period of the dedicated host. Unit: months. Valid values: `1`, `2`, `3`, `6`, and `12`. takes effect and is required only when the AutoRenew parameter is set to true.
         * 
         * @return builder
         * 
         */
        public Builder autoRenewPeriod(Integer autoRenewPeriod) {
            return autoRenewPeriod(Output.of(autoRenewPeriod));
        }

        /**
         * @param cpuOverCommitRatio CPU oversold ratio. Only custom specifications g6s, c6s, r6s support setting the CPU oversold ratio.
         * 
         * @return builder
         * 
         */
        public Builder cpuOverCommitRatio(@Nullable Output<Double> cpuOverCommitRatio) {
            $.cpuOverCommitRatio = cpuOverCommitRatio;
            return this;
        }

        /**
         * @param cpuOverCommitRatio CPU oversold ratio. Only custom specifications g6s, c6s, r6s support setting the CPU oversold ratio.
         * 
         * @return builder
         * 
         */
        public Builder cpuOverCommitRatio(Double cpuOverCommitRatio) {
            return cpuOverCommitRatio(Output.of(cpuOverCommitRatio));
        }

        /**
         * @param dedicatedHostClusterId The dedicated host cluster ID to which the dedicated host belongs.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedHostClusterId(@Nullable Output<String> dedicatedHostClusterId) {
            $.dedicatedHostClusterId = dedicatedHostClusterId;
            return this;
        }

        /**
         * @param dedicatedHostClusterId The dedicated host cluster ID to which the dedicated host belongs.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedHostClusterId(String dedicatedHostClusterId) {
            return dedicatedHostClusterId(Output.of(dedicatedHostClusterId));
        }

        /**
         * @param dedicatedHostName The name of the dedicated host. The name must be 2 to 128 characters in length. It must start with a letter but cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder dedicatedHostName(@Nullable Output<String> dedicatedHostName) {
            $.dedicatedHostName = dedicatedHostName;
            return this;
        }

        /**
         * @param dedicatedHostName The name of the dedicated host. The name must be 2 to 128 characters in length. It must start with a letter but cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder dedicatedHostName(String dedicatedHostName) {
            return dedicatedHostName(Output.of(dedicatedHostName));
        }

        /**
         * @param dedicatedHostType The type of the dedicated host. You can call the [DescribeDedicatedHostTypes](https://www.alibabacloud.com/help/doc-detail/134240.htm) operation to obtain the most recent list of dedicated host types.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedHostType(Output<String> dedicatedHostType) {
            $.dedicatedHostType = dedicatedHostType;
            return this;
        }

        /**
         * @param dedicatedHostType The type of the dedicated host. You can call the [DescribeDedicatedHostTypes](https://www.alibabacloud.com/help/doc-detail/134240.htm) operation to obtain the most recent list of dedicated host types.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedHostType(String dedicatedHostType) {
            return dedicatedHostType(Output.of(dedicatedHostType));
        }

        /**
         * @param description The description of the dedicated host. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the dedicated host. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param detailFee Specifies whether to return the billing details of the order when the billing method is changed from subscription to pay-as-you-go. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder detailFee(@Nullable Output<Boolean> detailFee) {
            $.detailFee = detailFee;
            return this;
        }

        /**
         * @param detailFee Specifies whether to return the billing details of the order when the billing method is changed from subscription to pay-as-you-go. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder detailFee(Boolean detailFee) {
            return detailFee(Output.of(detailFee));
        }

        /**
         * @param dryRun Specifies whether to only validate the request. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(@Nullable Output<Boolean> dryRun) {
            $.dryRun = dryRun;
            return this;
        }

        /**
         * @param dryRun Specifies whether to only validate the request. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(Boolean dryRun) {
            return dryRun(Output.of(dryRun));
        }

        /**
         * @param expiredTime The subscription period of the dedicated host. The Period parameter takes effect and is required only when the ChargeType parameter is set to PrePaid.
         * 
         * @return builder
         * 
         */
        public Builder expiredTime(@Nullable Output<String> expiredTime) {
            $.expiredTime = expiredTime;
            return this;
        }

        /**
         * @param expiredTime The subscription period of the dedicated host. The Period parameter takes effect and is required only when the ChargeType parameter is set to PrePaid.
         * 
         * @return builder
         * 
         */
        public Builder expiredTime(String expiredTime) {
            return expiredTime(Output.of(expiredTime));
        }

        /**
         * @param minQuantity Specify the minimum purchase quantity of a dedicated host.
         * 
         * @return builder
         * 
         */
        public Builder minQuantity(@Nullable Output<Integer> minQuantity) {
            $.minQuantity = minQuantity;
            return this;
        }

        /**
         * @param minQuantity Specify the minimum purchase quantity of a dedicated host.
         * 
         * @return builder
         * 
         */
        public Builder minQuantity(Integer minQuantity) {
            return minQuantity(Output.of(minQuantity));
        }

        /**
         * @param networkAttributes dedicated host network parameters. contains the following attributes:
         * 
         * @return builder
         * 
         */
        public Builder networkAttributes(@Nullable Output<List<DedicatedHostNetworkAttributeArgs>> networkAttributes) {
            $.networkAttributes = networkAttributes;
            return this;
        }

        /**
         * @param networkAttributes dedicated host network parameters. contains the following attributes:
         * 
         * @return builder
         * 
         */
        public Builder networkAttributes(List<DedicatedHostNetworkAttributeArgs> networkAttributes) {
            return networkAttributes(Output.of(networkAttributes));
        }

        /**
         * @param networkAttributes dedicated host network parameters. contains the following attributes:
         * 
         * @return builder
         * 
         */
        public Builder networkAttributes(DedicatedHostNetworkAttributeArgs... networkAttributes) {
            return networkAttributes(List.of(networkAttributes));
        }

        /**
         * @param paymentType The billing method of the dedicated host. Valid values: `PrePaid`, `PostPaid`. Default: `PostPaid`.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(@Nullable Output<String> paymentType) {
            $.paymentType = paymentType;
            return this;
        }

        /**
         * @param paymentType The billing method of the dedicated host. Valid values: `PrePaid`, `PostPaid`. Default: `PostPaid`.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(String paymentType) {
            return paymentType(Output.of(paymentType));
        }

        /**
         * @param resourceGroupId The ID of the resource group to which the dedicated host belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group to which the dedicated host belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param saleCycle The unit of the subscription period of the dedicated host.
         * 
         * @return builder
         * 
         */
        public Builder saleCycle(@Nullable Output<String> saleCycle) {
            $.saleCycle = saleCycle;
            return this;
        }

        /**
         * @param saleCycle The unit of the subscription period of the dedicated host.
         * 
         * @return builder
         * 
         */
        public Builder saleCycle(String saleCycle) {
            return saleCycle(Output.of(saleCycle));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param zoneId The zone ID of the dedicated host. This parameter is empty by default. If you do not specify this parameter, the system automatically selects a zone.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The zone ID of the dedicated host. This parameter is empty by default. If you do not specify this parameter, the system automatically selects a zone.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public DedicatedHostArgs build() {
            if ($.dedicatedHostType == null) {
                throw new MissingRequiredPropertyException("DedicatedHostArgs", "dedicatedHostType");
            }
            return $;
        }
    }

}
