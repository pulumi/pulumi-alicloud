// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.emrv2.outputs;

import com.pulumi.alicloud.emrv2.outputs.ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTrigger;
import com.pulumi.alicloud.emrv2.outputs.ClusterNodeGroupAutoScalingPolicyScalingRuleTimeTrigger;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterNodeGroupAutoScalingPolicyScalingRule {
    private String activityType;
    private @Nullable String adjustmentType;
    private Integer adjustmentValue;
    private @Nullable ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTrigger metricsTrigger;
    private @Nullable Integer minAdjustmentValue;
    private String ruleName;
    private @Nullable ClusterNodeGroupAutoScalingPolicyScalingRuleTimeTrigger timeTrigger;
    private String triggerType;

    private ClusterNodeGroupAutoScalingPolicyScalingRule() {}
    public String activityType() {
        return this.activityType;
    }
    public Optional<String> adjustmentType() {
        return Optional.ofNullable(this.adjustmentType);
    }
    public Integer adjustmentValue() {
        return this.adjustmentValue;
    }
    public Optional<ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTrigger> metricsTrigger() {
        return Optional.ofNullable(this.metricsTrigger);
    }
    public Optional<Integer> minAdjustmentValue() {
        return Optional.ofNullable(this.minAdjustmentValue);
    }
    public String ruleName() {
        return this.ruleName;
    }
    public Optional<ClusterNodeGroupAutoScalingPolicyScalingRuleTimeTrigger> timeTrigger() {
        return Optional.ofNullable(this.timeTrigger);
    }
    public String triggerType() {
        return this.triggerType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterNodeGroupAutoScalingPolicyScalingRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String activityType;
        private @Nullable String adjustmentType;
        private Integer adjustmentValue;
        private @Nullable ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTrigger metricsTrigger;
        private @Nullable Integer minAdjustmentValue;
        private String ruleName;
        private @Nullable ClusterNodeGroupAutoScalingPolicyScalingRuleTimeTrigger timeTrigger;
        private String triggerType;
        public Builder() {}
        public Builder(ClusterNodeGroupAutoScalingPolicyScalingRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activityType = defaults.activityType;
    	      this.adjustmentType = defaults.adjustmentType;
    	      this.adjustmentValue = defaults.adjustmentValue;
    	      this.metricsTrigger = defaults.metricsTrigger;
    	      this.minAdjustmentValue = defaults.minAdjustmentValue;
    	      this.ruleName = defaults.ruleName;
    	      this.timeTrigger = defaults.timeTrigger;
    	      this.triggerType = defaults.triggerType;
        }

        @CustomType.Setter
        public Builder activityType(String activityType) {
            if (activityType == null) {
              throw new MissingRequiredPropertyException("ClusterNodeGroupAutoScalingPolicyScalingRule", "activityType");
            }
            this.activityType = activityType;
            return this;
        }
        @CustomType.Setter
        public Builder adjustmentType(@Nullable String adjustmentType) {

            this.adjustmentType = adjustmentType;
            return this;
        }
        @CustomType.Setter
        public Builder adjustmentValue(Integer adjustmentValue) {
            if (adjustmentValue == null) {
              throw new MissingRequiredPropertyException("ClusterNodeGroupAutoScalingPolicyScalingRule", "adjustmentValue");
            }
            this.adjustmentValue = adjustmentValue;
            return this;
        }
        @CustomType.Setter
        public Builder metricsTrigger(@Nullable ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTrigger metricsTrigger) {

            this.metricsTrigger = metricsTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder minAdjustmentValue(@Nullable Integer minAdjustmentValue) {

            this.minAdjustmentValue = minAdjustmentValue;
            return this;
        }
        @CustomType.Setter
        public Builder ruleName(String ruleName) {
            if (ruleName == null) {
              throw new MissingRequiredPropertyException("ClusterNodeGroupAutoScalingPolicyScalingRule", "ruleName");
            }
            this.ruleName = ruleName;
            return this;
        }
        @CustomType.Setter
        public Builder timeTrigger(@Nullable ClusterNodeGroupAutoScalingPolicyScalingRuleTimeTrigger timeTrigger) {

            this.timeTrigger = timeTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder triggerType(String triggerType) {
            if (triggerType == null) {
              throw new MissingRequiredPropertyException("ClusterNodeGroupAutoScalingPolicyScalingRule", "triggerType");
            }
            this.triggerType = triggerType;
            return this;
        }
        public ClusterNodeGroupAutoScalingPolicyScalingRule build() {
            final var _resultValue = new ClusterNodeGroupAutoScalingPolicyScalingRule();
            _resultValue.activityType = activityType;
            _resultValue.adjustmentType = adjustmentType;
            _resultValue.adjustmentValue = adjustmentValue;
            _resultValue.metricsTrigger = metricsTrigger;
            _resultValue.minAdjustmentValue = minAdjustmentValue;
            _resultValue.ruleName = ruleName;
            _resultValue.timeTrigger = timeTrigger;
            _resultValue.triggerType = triggerType;
            return _resultValue;
        }
    }
}
