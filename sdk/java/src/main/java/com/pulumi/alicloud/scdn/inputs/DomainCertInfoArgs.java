// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.scdn.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainCertInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainCertInfoArgs Empty = new DomainCertInfoArgs();

    @Import(name="certName")
    private @Nullable Output<String> certName;

    public Optional<Output<String>> certName() {
        return Optional.ofNullable(this.certName);
    }

    @Import(name="certType")
    private @Nullable Output<String> certType;

    public Optional<Output<String>> certType() {
        return Optional.ofNullable(this.certType);
    }

    @Import(name="sslPri")
    private @Nullable Output<String> sslPri;

    public Optional<Output<String>> sslPri() {
        return Optional.ofNullable(this.sslPri);
    }

    @Import(name="sslProtocol")
    private @Nullable Output<String> sslProtocol;

    public Optional<Output<String>> sslProtocol() {
        return Optional.ofNullable(this.sslProtocol);
    }

    @Import(name="sslPub")
    private @Nullable Output<String> sslPub;

    public Optional<Output<String>> sslPub() {
        return Optional.ofNullable(this.sslPub);
    }

    private DomainCertInfoArgs() {}

    private DomainCertInfoArgs(DomainCertInfoArgs $) {
        this.certName = $.certName;
        this.certType = $.certType;
        this.sslPri = $.sslPri;
        this.sslProtocol = $.sslProtocol;
        this.sslPub = $.sslPub;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainCertInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainCertInfoArgs $;

        public Builder() {
            $ = new DomainCertInfoArgs();
        }

        public Builder(DomainCertInfoArgs defaults) {
            $ = new DomainCertInfoArgs(Objects.requireNonNull(defaults));
        }

        public Builder certName(@Nullable Output<String> certName) {
            $.certName = certName;
            return this;
        }

        public Builder certName(String certName) {
            return certName(Output.of(certName));
        }

        public Builder certType(@Nullable Output<String> certType) {
            $.certType = certType;
            return this;
        }

        public Builder certType(String certType) {
            return certType(Output.of(certType));
        }

        public Builder sslPri(@Nullable Output<String> sslPri) {
            $.sslPri = sslPri;
            return this;
        }

        public Builder sslPri(String sslPri) {
            return sslPri(Output.of(sslPri));
        }

        public Builder sslProtocol(@Nullable Output<String> sslProtocol) {
            $.sslProtocol = sslProtocol;
            return this;
        }

        public Builder sslProtocol(String sslProtocol) {
            return sslProtocol(Output.of(sslProtocol));
        }

        public Builder sslPub(@Nullable Output<String> sslPub) {
            $.sslPub = sslPub;
            return this;
        }

        public Builder sslPub(String sslPub) {
            return sslPub(Output.of(sslPub));
        }

        public DomainCertInfoArgs build() {
            return $;
        }
    }

}
