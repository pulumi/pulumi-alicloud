// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dts;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ConsumerChannelArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConsumerChannelArgs Empty = new ConsumerChannelArgs();

    /**
     * The name of the consumer group.
     * 
     */
    @Import(name="consumerGroupName", required=true)
    private Output<String> consumerGroupName;

    /**
     * @return The name of the consumer group.
     * 
     */
    public Output<String> consumerGroupName() {
        return this.consumerGroupName;
    }

    /**
     * The password of the consumer group account. The length of the `consumer_group_password` is limited to `8` to `32` characters. It can contain two or more of the following characters: uppercase letters, lowercase letters, digits, and special characters.
     * 
     */
    @Import(name="consumerGroupPassword", required=true)
    private Output<String> consumerGroupPassword;

    /**
     * @return The password of the consumer group account. The length of the `consumer_group_password` is limited to `8` to `32` characters. It can contain two or more of the following characters: uppercase letters, lowercase letters, digits, and special characters.
     * 
     */
    public Output<String> consumerGroupPassword() {
        return this.consumerGroupPassword;
    }

    /**
     * The username of the consumer group. The length of the `consumer_group_user_name` is limited to `1` to `16` characters. It can contain one or more of the following characters: uppercase letters, lowercase letters, digits, and underscores (_).
     * 
     */
    @Import(name="consumerGroupUserName", required=true)
    private Output<String> consumerGroupUserName;

    /**
     * @return The username of the consumer group. The length of the `consumer_group_user_name` is limited to `1` to `16` characters. It can contain one or more of the following characters: uppercase letters, lowercase letters, digits, and underscores (_).
     * 
     */
    public Output<String> consumerGroupUserName() {
        return this.consumerGroupUserName;
    }

    /**
     * The ID of the subscription instance.
     * 
     */
    @Import(name="dtsInstanceId", required=true)
    private Output<String> dtsInstanceId;

    /**
     * @return The ID of the subscription instance.
     * 
     */
    public Output<String> dtsInstanceId() {
        return this.dtsInstanceId;
    }

    private ConsumerChannelArgs() {}

    private ConsumerChannelArgs(ConsumerChannelArgs $) {
        this.consumerGroupName = $.consumerGroupName;
        this.consumerGroupPassword = $.consumerGroupPassword;
        this.consumerGroupUserName = $.consumerGroupUserName;
        this.dtsInstanceId = $.dtsInstanceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConsumerChannelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConsumerChannelArgs $;

        public Builder() {
            $ = new ConsumerChannelArgs();
        }

        public Builder(ConsumerChannelArgs defaults) {
            $ = new ConsumerChannelArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param consumerGroupName The name of the consumer group.
         * 
         * @return builder
         * 
         */
        public Builder consumerGroupName(Output<String> consumerGroupName) {
            $.consumerGroupName = consumerGroupName;
            return this;
        }

        /**
         * @param consumerGroupName The name of the consumer group.
         * 
         * @return builder
         * 
         */
        public Builder consumerGroupName(String consumerGroupName) {
            return consumerGroupName(Output.of(consumerGroupName));
        }

        /**
         * @param consumerGroupPassword The password of the consumer group account. The length of the `consumer_group_password` is limited to `8` to `32` characters. It can contain two or more of the following characters: uppercase letters, lowercase letters, digits, and special characters.
         * 
         * @return builder
         * 
         */
        public Builder consumerGroupPassword(Output<String> consumerGroupPassword) {
            $.consumerGroupPassword = consumerGroupPassword;
            return this;
        }

        /**
         * @param consumerGroupPassword The password of the consumer group account. The length of the `consumer_group_password` is limited to `8` to `32` characters. It can contain two or more of the following characters: uppercase letters, lowercase letters, digits, and special characters.
         * 
         * @return builder
         * 
         */
        public Builder consumerGroupPassword(String consumerGroupPassword) {
            return consumerGroupPassword(Output.of(consumerGroupPassword));
        }

        /**
         * @param consumerGroupUserName The username of the consumer group. The length of the `consumer_group_user_name` is limited to `1` to `16` characters. It can contain one or more of the following characters: uppercase letters, lowercase letters, digits, and underscores (_).
         * 
         * @return builder
         * 
         */
        public Builder consumerGroupUserName(Output<String> consumerGroupUserName) {
            $.consumerGroupUserName = consumerGroupUserName;
            return this;
        }

        /**
         * @param consumerGroupUserName The username of the consumer group. The length of the `consumer_group_user_name` is limited to `1` to `16` characters. It can contain one or more of the following characters: uppercase letters, lowercase letters, digits, and underscores (_).
         * 
         * @return builder
         * 
         */
        public Builder consumerGroupUserName(String consumerGroupUserName) {
            return consumerGroupUserName(Output.of(consumerGroupUserName));
        }

        /**
         * @param dtsInstanceId The ID of the subscription instance.
         * 
         * @return builder
         * 
         */
        public Builder dtsInstanceId(Output<String> dtsInstanceId) {
            $.dtsInstanceId = dtsInstanceId;
            return this;
        }

        /**
         * @param dtsInstanceId The ID of the subscription instance.
         * 
         * @return builder
         * 
         */
        public Builder dtsInstanceId(String dtsInstanceId) {
            return dtsInstanceId(Output.of(dtsInstanceId));
        }

        public ConsumerChannelArgs build() {
            if ($.consumerGroupName == null) {
                throw new MissingRequiredPropertyException("ConsumerChannelArgs", "consumerGroupName");
            }
            if ($.consumerGroupPassword == null) {
                throw new MissingRequiredPropertyException("ConsumerChannelArgs", "consumerGroupPassword");
            }
            if ($.consumerGroupUserName == null) {
                throw new MissingRequiredPropertyException("ConsumerChannelArgs", "consumerGroupUserName");
            }
            if ($.dtsInstanceId == null) {
                throw new MissingRequiredPropertyException("ConsumerChannelArgs", "dtsInstanceId");
            }
            return $;
        }
    }

}
