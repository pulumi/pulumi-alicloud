// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.clickhouseenterprisedbcluster.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PublicEndpointState extends com.pulumi.resources.ResourceArgs {

    public static final PublicEndpointState Empty = new PublicEndpointState();

    /**
     * The public network connection string prefix of the instance.
     * 
     */
    @Import(name="connectionStringPrefix")
    private @Nullable Output<String> connectionStringPrefix;

    /**
     * @return The public network connection string prefix of the instance.
     * 
     */
    public Optional<Output<String>> connectionStringPrefix() {
        return Optional.ofNullable(this.connectionStringPrefix);
    }

    /**
     * The cluster ID.
     * 
     */
    @Import(name="dbInstanceId")
    private @Nullable Output<String> dbInstanceId;

    /**
     * @return The cluster ID.
     * 
     */
    public Optional<Output<String>> dbInstanceId() {
        return Optional.ofNullable(this.dbInstanceId);
    }

    /**
     * Network type of the connection address. Valid values:
     * - Public: Public network.
     * 
     */
    @Import(name="netType")
    private @Nullable Output<String> netType;

    /**
     * @return Network type of the connection address. Valid values:
     * - Public: Public network.
     * 
     */
    public Optional<Output<String>> netType() {
        return Optional.ofNullable(this.netType);
    }

    private PublicEndpointState() {}

    private PublicEndpointState(PublicEndpointState $) {
        this.connectionStringPrefix = $.connectionStringPrefix;
        this.dbInstanceId = $.dbInstanceId;
        this.netType = $.netType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PublicEndpointState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PublicEndpointState $;

        public Builder() {
            $ = new PublicEndpointState();
        }

        public Builder(PublicEndpointState defaults) {
            $ = new PublicEndpointState(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionStringPrefix The public network connection string prefix of the instance.
         * 
         * @return builder
         * 
         */
        public Builder connectionStringPrefix(@Nullable Output<String> connectionStringPrefix) {
            $.connectionStringPrefix = connectionStringPrefix;
            return this;
        }

        /**
         * @param connectionStringPrefix The public network connection string prefix of the instance.
         * 
         * @return builder
         * 
         */
        public Builder connectionStringPrefix(String connectionStringPrefix) {
            return connectionStringPrefix(Output.of(connectionStringPrefix));
        }

        /**
         * @param dbInstanceId The cluster ID.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceId(@Nullable Output<String> dbInstanceId) {
            $.dbInstanceId = dbInstanceId;
            return this;
        }

        /**
         * @param dbInstanceId The cluster ID.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceId(String dbInstanceId) {
            return dbInstanceId(Output.of(dbInstanceId));
        }

        /**
         * @param netType Network type of the connection address. Valid values:
         * - Public: Public network.
         * 
         * @return builder
         * 
         */
        public Builder netType(@Nullable Output<String> netType) {
            $.netType = netType;
            return this;
        }

        /**
         * @param netType Network type of the connection address. Valid values:
         * - Public: Public network.
         * 
         * @return builder
         * 
         */
        public Builder netType(String netType) {
            return netType(Output.of(netType));
        }

        public PublicEndpointState build() {
            return $;
        }
    }

}
