// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.servicecatalog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PortfolioState extends com.pulumi.resources.ResourceArgs {

    public static final PortfolioState Empty = new PortfolioState();

    /**
     * The creation time of the portfolio
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time of the portfolio
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The description of the portfolio
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the portfolio
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The ARN of the portfolio
     * 
     */
    @Import(name="portfolioArn")
    private @Nullable Output<String> portfolioArn;

    /**
     * @return The ARN of the portfolio
     * 
     */
    public Optional<Output<String>> portfolioArn() {
        return Optional.ofNullable(this.portfolioArn);
    }

    /**
     * The name of the portfolio
     * 
     */
    @Import(name="portfolioName")
    private @Nullable Output<String> portfolioName;

    /**
     * @return The name of the portfolio
     * 
     */
    public Optional<Output<String>> portfolioName() {
        return Optional.ofNullable(this.portfolioName);
    }

    /**
     * The provider name of the portfolio
     * 
     */
    @Import(name="providerName")
    private @Nullable Output<String> providerName;

    /**
     * @return The provider name of the portfolio
     * 
     */
    public Optional<Output<String>> providerName() {
        return Optional.ofNullable(this.providerName);
    }

    private PortfolioState() {}

    private PortfolioState(PortfolioState $) {
        this.createTime = $.createTime;
        this.description = $.description;
        this.portfolioArn = $.portfolioArn;
        this.portfolioName = $.portfolioName;
        this.providerName = $.providerName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PortfolioState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PortfolioState $;

        public Builder() {
            $ = new PortfolioState();
        }

        public Builder(PortfolioState defaults) {
            $ = new PortfolioState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime The creation time of the portfolio
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the portfolio
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param description The description of the portfolio
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the portfolio
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param portfolioArn The ARN of the portfolio
         * 
         * @return builder
         * 
         */
        public Builder portfolioArn(@Nullable Output<String> portfolioArn) {
            $.portfolioArn = portfolioArn;
            return this;
        }

        /**
         * @param portfolioArn The ARN of the portfolio
         * 
         * @return builder
         * 
         */
        public Builder portfolioArn(String portfolioArn) {
            return portfolioArn(Output.of(portfolioArn));
        }

        /**
         * @param portfolioName The name of the portfolio
         * 
         * @return builder
         * 
         */
        public Builder portfolioName(@Nullable Output<String> portfolioName) {
            $.portfolioName = portfolioName;
            return this;
        }

        /**
         * @param portfolioName The name of the portfolio
         * 
         * @return builder
         * 
         */
        public Builder portfolioName(String portfolioName) {
            return portfolioName(Output.of(portfolioName));
        }

        /**
         * @param providerName The provider name of the portfolio
         * 
         * @return builder
         * 
         */
        public Builder providerName(@Nullable Output<String> providerName) {
            $.providerName = providerName;
            return this;
        }

        /**
         * @param providerName The provider name of the portfolio
         * 
         * @return builder
         * 
         */
        public Builder providerName(String providerName) {
            return providerName(Output.of(providerName));
        }

        public PortfolioState build() {
            return $;
        }
    }

}
