// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ess.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SuspendProcessState extends com.pulumi.resources.ResourceArgs {

    public static final SuspendProcessState Empty = new SuspendProcessState();

    /**
     * Activity type N that you want to suspend. Valid values are: `SCALE_OUT`,`SCALE_IN`,`HealthCheck`,`AlarmNotification` and `ScheduledAction`.
     * 
     */
    @Import(name="process")
    private @Nullable Output<String> process;

    /**
     * @return Activity type N that you want to suspend. Valid values are: `SCALE_OUT`,`SCALE_IN`,`HealthCheck`,`AlarmNotification` and `ScheduledAction`.
     * 
     */
    public Optional<Output<String>> process() {
        return Optional.ofNullable(this.process);
    }

    /**
     * ID of the scaling group.
     * 
     */
    @Import(name="scalingGroupId")
    private @Nullable Output<String> scalingGroupId;

    /**
     * @return ID of the scaling group.
     * 
     */
    public Optional<Output<String>> scalingGroupId() {
        return Optional.ofNullable(this.scalingGroupId);
    }

    private SuspendProcessState() {}

    private SuspendProcessState(SuspendProcessState $) {
        this.process = $.process;
        this.scalingGroupId = $.scalingGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SuspendProcessState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SuspendProcessState $;

        public Builder() {
            $ = new SuspendProcessState();
        }

        public Builder(SuspendProcessState defaults) {
            $ = new SuspendProcessState(Objects.requireNonNull(defaults));
        }

        /**
         * @param process Activity type N that you want to suspend. Valid values are: `SCALE_OUT`,`SCALE_IN`,`HealthCheck`,`AlarmNotification` and `ScheduledAction`.
         * 
         * @return builder
         * 
         */
        public Builder process(@Nullable Output<String> process) {
            $.process = process;
            return this;
        }

        /**
         * @param process Activity type N that you want to suspend. Valid values are: `SCALE_OUT`,`SCALE_IN`,`HealthCheck`,`AlarmNotification` and `ScheduledAction`.
         * 
         * @return builder
         * 
         */
        public Builder process(String process) {
            return process(Output.of(process));
        }

        /**
         * @param scalingGroupId ID of the scaling group.
         * 
         * @return builder
         * 
         */
        public Builder scalingGroupId(@Nullable Output<String> scalingGroupId) {
            $.scalingGroupId = scalingGroupId;
            return this;
        }

        /**
         * @param scalingGroupId ID of the scaling group.
         * 
         * @return builder
         * 
         */
        public Builder scalingGroupId(String scalingGroupId) {
            return scalingGroupId(Output.of(scalingGroupId));
        }

        public SuspendProcessState build() {
            return $;
        }
    }

}
