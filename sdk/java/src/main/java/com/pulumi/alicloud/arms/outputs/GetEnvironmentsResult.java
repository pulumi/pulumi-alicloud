// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.arms.outputs;

import com.pulumi.alicloud.arms.outputs.GetEnvironmentsEnvironment;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEnvironmentsResult {
    /**
     * @return The type of the environment instance.
     * 
     */
    private @Nullable String environmentType;
    /**
     * @return A list of ARMS Environments. Each element contains the following attributes:
     * 
     */
    private List<GetEnvironmentsEnvironment> environments;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<String> ids;
    private @Nullable String nameRegex;
    /**
     * @return A list of ARMS Environment names.
     * 
     */
    private List<String> names;
    private @Nullable String outputFile;
    /**
     * @return The ID of the resource group.
     * 
     */
    private @Nullable String resourceGroupId;
    /**
     * @return The tags of the environment resource.
     * 
     */
    private @Nullable Map<String,String> tags;

    private GetEnvironmentsResult() {}
    /**
     * @return The type of the environment instance.
     * 
     */
    public Optional<String> environmentType() {
        return Optional.ofNullable(this.environmentType);
    }
    /**
     * @return A list of ARMS Environments. Each element contains the following attributes:
     * 
     */
    public List<GetEnvironmentsEnvironment> environments() {
        return this.environments;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    /**
     * @return A list of ARMS Environment names.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return The ID of the resource group.
     * 
     */
    public Optional<String> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }
    /**
     * @return The tags of the environment resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEnvironmentsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String environmentType;
        private List<GetEnvironmentsEnvironment> environments;
        private String id;
        private List<String> ids;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String outputFile;
        private @Nullable String resourceGroupId;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetEnvironmentsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.environmentType = defaults.environmentType;
    	      this.environments = defaults.environments;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.outputFile = defaults.outputFile;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder environmentType(@Nullable String environmentType) {

            this.environmentType = environmentType;
            return this;
        }
        @CustomType.Setter
        public Builder environments(List<GetEnvironmentsEnvironment> environments) {
            if (environments == null) {
              throw new MissingRequiredPropertyException("GetEnvironmentsResult", "environments");
            }
            this.environments = environments;
            return this;
        }
        public Builder environments(GetEnvironmentsEnvironment... environments) {
            return environments(List.of(environments));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEnvironmentsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            if (ids == null) {
              throw new MissingRequiredPropertyException("GetEnvironmentsResult", "ids");
            }
            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {

            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder names(List<String> names) {
            if (names == null) {
              throw new MissingRequiredPropertyException("GetEnvironmentsResult", "names");
            }
            this.names = names;
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupId(@Nullable String resourceGroupId) {

            this.resourceGroupId = resourceGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {

            this.tags = tags;
            return this;
        }
        public GetEnvironmentsResult build() {
            final var _resultValue = new GetEnvironmentsResult();
            _resultValue.environmentType = environmentType;
            _resultValue.environments = environments;
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.nameRegex = nameRegex;
            _resultValue.names = names;
            _resultValue.outputFile = outputFile;
            _resultValue.resourceGroupId = resourceGroupId;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
