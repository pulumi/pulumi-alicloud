// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alb.outputs;

import com.pulumi.alicloud.alb.outputs.GetRulesRuleRuleConditionCookieConfig;
import com.pulumi.alicloud.alb.outputs.GetRulesRuleRuleConditionHeaderConfig;
import com.pulumi.alicloud.alb.outputs.GetRulesRuleRuleConditionHostConfig;
import com.pulumi.alicloud.alb.outputs.GetRulesRuleRuleConditionMethodConfig;
import com.pulumi.alicloud.alb.outputs.GetRulesRuleRuleConditionPathConfig;
import com.pulumi.alicloud.alb.outputs.GetRulesRuleRuleConditionQueryStringConfig;
import com.pulumi.alicloud.alb.outputs.GetRulesRuleRuleConditionSourceIpConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRulesRuleRuleCondition {
    /**
     * @return The configuration of the cookie.
     * 
     */
    private List<GetRulesRuleRuleConditionCookieConfig> cookieConfigs;
    /**
     * @return The configuration of the header field.
     * 
     */
    private List<GetRulesRuleRuleConditionHeaderConfig> headerConfigs;
    /**
     * @return The configuration of the host.
     * 
     */
    private List<GetRulesRuleRuleConditionHostConfig> hostConfigs;
    /**
     * @return The configuration of the request method.
     * 
     */
    private List<GetRulesRuleRuleConditionMethodConfig> methodConfigs;
    /**
     * @return The configuration of the path for the request to be forwarded.
     * 
     */
    private List<GetRulesRuleRuleConditionPathConfig> pathConfigs;
    /**
     * @return The configuration of the query string.
     * 
     */
    private List<GetRulesRuleRuleConditionQueryStringConfig> queryStringConfigs;
    /**
     * @return The Based on source IP traffic matching.
     * 
     */
    private List<GetRulesRuleRuleConditionSourceIpConfig> sourceIpConfigs;
    /**
     * @return The type of the forwarding rule.
     * 
     */
    private String type;

    private GetRulesRuleRuleCondition() {}
    /**
     * @return The configuration of the cookie.
     * 
     */
    public List<GetRulesRuleRuleConditionCookieConfig> cookieConfigs() {
        return this.cookieConfigs;
    }
    /**
     * @return The configuration of the header field.
     * 
     */
    public List<GetRulesRuleRuleConditionHeaderConfig> headerConfigs() {
        return this.headerConfigs;
    }
    /**
     * @return The configuration of the host.
     * 
     */
    public List<GetRulesRuleRuleConditionHostConfig> hostConfigs() {
        return this.hostConfigs;
    }
    /**
     * @return The configuration of the request method.
     * 
     */
    public List<GetRulesRuleRuleConditionMethodConfig> methodConfigs() {
        return this.methodConfigs;
    }
    /**
     * @return The configuration of the path for the request to be forwarded.
     * 
     */
    public List<GetRulesRuleRuleConditionPathConfig> pathConfigs() {
        return this.pathConfigs;
    }
    /**
     * @return The configuration of the query string.
     * 
     */
    public List<GetRulesRuleRuleConditionQueryStringConfig> queryStringConfigs() {
        return this.queryStringConfigs;
    }
    /**
     * @return The Based on source IP traffic matching.
     * 
     */
    public List<GetRulesRuleRuleConditionSourceIpConfig> sourceIpConfigs() {
        return this.sourceIpConfigs;
    }
    /**
     * @return The type of the forwarding rule.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRulesRuleRuleCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetRulesRuleRuleConditionCookieConfig> cookieConfigs;
        private List<GetRulesRuleRuleConditionHeaderConfig> headerConfigs;
        private List<GetRulesRuleRuleConditionHostConfig> hostConfigs;
        private List<GetRulesRuleRuleConditionMethodConfig> methodConfigs;
        private List<GetRulesRuleRuleConditionPathConfig> pathConfigs;
        private List<GetRulesRuleRuleConditionQueryStringConfig> queryStringConfigs;
        private List<GetRulesRuleRuleConditionSourceIpConfig> sourceIpConfigs;
        private String type;
        public Builder() {}
        public Builder(GetRulesRuleRuleCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cookieConfigs = defaults.cookieConfigs;
    	      this.headerConfigs = defaults.headerConfigs;
    	      this.hostConfigs = defaults.hostConfigs;
    	      this.methodConfigs = defaults.methodConfigs;
    	      this.pathConfigs = defaults.pathConfigs;
    	      this.queryStringConfigs = defaults.queryStringConfigs;
    	      this.sourceIpConfigs = defaults.sourceIpConfigs;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder cookieConfigs(List<GetRulesRuleRuleConditionCookieConfig> cookieConfigs) {
            this.cookieConfigs = Objects.requireNonNull(cookieConfigs);
            return this;
        }
        public Builder cookieConfigs(GetRulesRuleRuleConditionCookieConfig... cookieConfigs) {
            return cookieConfigs(List.of(cookieConfigs));
        }
        @CustomType.Setter
        public Builder headerConfigs(List<GetRulesRuleRuleConditionHeaderConfig> headerConfigs) {
            this.headerConfigs = Objects.requireNonNull(headerConfigs);
            return this;
        }
        public Builder headerConfigs(GetRulesRuleRuleConditionHeaderConfig... headerConfigs) {
            return headerConfigs(List.of(headerConfigs));
        }
        @CustomType.Setter
        public Builder hostConfigs(List<GetRulesRuleRuleConditionHostConfig> hostConfigs) {
            this.hostConfigs = Objects.requireNonNull(hostConfigs);
            return this;
        }
        public Builder hostConfigs(GetRulesRuleRuleConditionHostConfig... hostConfigs) {
            return hostConfigs(List.of(hostConfigs));
        }
        @CustomType.Setter
        public Builder methodConfigs(List<GetRulesRuleRuleConditionMethodConfig> methodConfigs) {
            this.methodConfigs = Objects.requireNonNull(methodConfigs);
            return this;
        }
        public Builder methodConfigs(GetRulesRuleRuleConditionMethodConfig... methodConfigs) {
            return methodConfigs(List.of(methodConfigs));
        }
        @CustomType.Setter
        public Builder pathConfigs(List<GetRulesRuleRuleConditionPathConfig> pathConfigs) {
            this.pathConfigs = Objects.requireNonNull(pathConfigs);
            return this;
        }
        public Builder pathConfigs(GetRulesRuleRuleConditionPathConfig... pathConfigs) {
            return pathConfigs(List.of(pathConfigs));
        }
        @CustomType.Setter
        public Builder queryStringConfigs(List<GetRulesRuleRuleConditionQueryStringConfig> queryStringConfigs) {
            this.queryStringConfigs = Objects.requireNonNull(queryStringConfigs);
            return this;
        }
        public Builder queryStringConfigs(GetRulesRuleRuleConditionQueryStringConfig... queryStringConfigs) {
            return queryStringConfigs(List.of(queryStringConfigs));
        }
        @CustomType.Setter
        public Builder sourceIpConfigs(List<GetRulesRuleRuleConditionSourceIpConfig> sourceIpConfigs) {
            this.sourceIpConfigs = Objects.requireNonNull(sourceIpConfigs);
            return this;
        }
        public Builder sourceIpConfigs(GetRulesRuleRuleConditionSourceIpConfig... sourceIpConfigs) {
            return sourceIpConfigs(List.of(sourceIpConfigs));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetRulesRuleRuleCondition build() {
            final var o = new GetRulesRuleRuleCondition();
            o.cookieConfigs = cookieConfigs;
            o.headerConfigs = headerConfigs;
            o.hostConfigs = hostConfigs;
            o.methodConfigs = methodConfigs;
            o.pathConfigs = pathConfigs;
            o.queryStringConfigs = queryStringConfigs;
            o.sourceIpConfigs = sourceIpConfigs;
            o.type = type;
            return o;
        }
    }
}
