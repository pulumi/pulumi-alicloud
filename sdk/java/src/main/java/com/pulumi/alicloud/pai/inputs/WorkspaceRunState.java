// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.pai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceRunState extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceRunState Empty = new WorkspaceRunState();

    /**
     * The creation time of the resource
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time of the resource
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Resource attribute field of the experiment ID to which Run belongs
     * 
     */
    @Import(name="experimentId")
    private @Nullable Output<String> experimentId;

    /**
     * @return Resource attribute field of the experiment ID to which Run belongs
     * 
     */
    public Optional<Output<String>> experimentId() {
        return Optional.ofNullable(this.experimentId);
    }

    /**
     * The name of the resource
     * 
     */
    @Import(name="runName")
    private @Nullable Output<String> runName;

    /**
     * @return The name of the resource
     * 
     */
    public Optional<Output<String>> runName() {
        return Optional.ofNullable(this.runName);
    }

    /**
     * Attribute Resource field representing the source task ID
     * 
     */
    @Import(name="sourceId")
    private @Nullable Output<String> sourceId;

    /**
     * @return Attribute Resource field representing the source task ID
     * 
     */
    public Optional<Output<String>> sourceId() {
        return Optional.ofNullable(this.sourceId);
    }

    /**
     * Resource attribute fields representing the source type
     * 
     */
    @Import(name="sourceType")
    private @Nullable Output<String> sourceType;

    /**
     * @return Resource attribute fields representing the source type
     * 
     */
    public Optional<Output<String>> sourceType() {
        return Optional.ofNullable(this.sourceType);
    }

    private WorkspaceRunState() {}

    private WorkspaceRunState(WorkspaceRunState $) {
        this.createTime = $.createTime;
        this.experimentId = $.experimentId;
        this.runName = $.runName;
        this.sourceId = $.sourceId;
        this.sourceType = $.sourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceRunState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceRunState $;

        public Builder() {
            $ = new WorkspaceRunState();
        }

        public Builder(WorkspaceRunState defaults) {
            $ = new WorkspaceRunState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime The creation time of the resource
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the resource
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param experimentId Resource attribute field of the experiment ID to which Run belongs
         * 
         * @return builder
         * 
         */
        public Builder experimentId(@Nullable Output<String> experimentId) {
            $.experimentId = experimentId;
            return this;
        }

        /**
         * @param experimentId Resource attribute field of the experiment ID to which Run belongs
         * 
         * @return builder
         * 
         */
        public Builder experimentId(String experimentId) {
            return experimentId(Output.of(experimentId));
        }

        /**
         * @param runName The name of the resource
         * 
         * @return builder
         * 
         */
        public Builder runName(@Nullable Output<String> runName) {
            $.runName = runName;
            return this;
        }

        /**
         * @param runName The name of the resource
         * 
         * @return builder
         * 
         */
        public Builder runName(String runName) {
            return runName(Output.of(runName));
        }

        /**
         * @param sourceId Attribute Resource field representing the source task ID
         * 
         * @return builder
         * 
         */
        public Builder sourceId(@Nullable Output<String> sourceId) {
            $.sourceId = sourceId;
            return this;
        }

        /**
         * @param sourceId Attribute Resource field representing the source task ID
         * 
         * @return builder
         * 
         */
        public Builder sourceId(String sourceId) {
            return sourceId(Output.of(sourceId));
        }

        /**
         * @param sourceType Resource attribute fields representing the source type
         * 
         * @return builder
         * 
         */
        public Builder sourceType(@Nullable Output<String> sourceType) {
            $.sourceType = sourceType;
            return this;
        }

        /**
         * @param sourceType Resource attribute fields representing the source type
         * 
         * @return builder
         * 
         */
        public Builder sourceType(String sourceType) {
            return sourceType(Output.of(sourceType));
        }

        public WorkspaceRunState build() {
            return $;
        }
    }

}
