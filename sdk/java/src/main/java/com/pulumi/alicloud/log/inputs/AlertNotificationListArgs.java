// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.log.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertNotificationListArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertNotificationListArgs Empty = new AlertNotificationListArgs();

    /**
     * Notice content of alarm.
     * 
     */
    @Import(name="content", required=true)
    private Output<String> content;

    /**
     * @return Notice content of alarm.
     * 
     */
    public Output<String> content() {
        return this.content;
    }

    /**
     * Email address list.
     * 
     */
    @Import(name="emailLists")
    private @Nullable Output<List<String>> emailLists;

    /**
     * @return Email address list.
     * 
     */
    public Optional<Output<List<String>>> emailLists() {
        return Optional.ofNullable(this.emailLists);
    }

    /**
     * SMS sending mobile number.
     * 
     */
    @Import(name="mobileLists")
    private @Nullable Output<List<String>> mobileLists;

    /**
     * @return SMS sending mobile number.
     * 
     */
    public Optional<Output<List<String>>> mobileLists() {
        return Optional.ofNullable(this.mobileLists);
    }

    /**
     * Request address.
     * 
     */
    @Import(name="serviceUri")
    private @Nullable Output<String> serviceUri;

    /**
     * @return Request address.
     * 
     */
    public Optional<Output<String>> serviceUri() {
        return Optional.ofNullable(this.serviceUri);
    }

    /**
     * including FixedRate,Hourly,Daily,Weekly,Cron.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return including FixedRate,Hourly,Daily,Weekly,Cron.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private AlertNotificationListArgs() {}

    private AlertNotificationListArgs(AlertNotificationListArgs $) {
        this.content = $.content;
        this.emailLists = $.emailLists;
        this.mobileLists = $.mobileLists;
        this.serviceUri = $.serviceUri;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertNotificationListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertNotificationListArgs $;

        public Builder() {
            $ = new AlertNotificationListArgs();
        }

        public Builder(AlertNotificationListArgs defaults) {
            $ = new AlertNotificationListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param content Notice content of alarm.
         * 
         * @return builder
         * 
         */
        public Builder content(Output<String> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content Notice content of alarm.
         * 
         * @return builder
         * 
         */
        public Builder content(String content) {
            return content(Output.of(content));
        }

        /**
         * @param emailLists Email address list.
         * 
         * @return builder
         * 
         */
        public Builder emailLists(@Nullable Output<List<String>> emailLists) {
            $.emailLists = emailLists;
            return this;
        }

        /**
         * @param emailLists Email address list.
         * 
         * @return builder
         * 
         */
        public Builder emailLists(List<String> emailLists) {
            return emailLists(Output.of(emailLists));
        }

        /**
         * @param emailLists Email address list.
         * 
         * @return builder
         * 
         */
        public Builder emailLists(String... emailLists) {
            return emailLists(List.of(emailLists));
        }

        /**
         * @param mobileLists SMS sending mobile number.
         * 
         * @return builder
         * 
         */
        public Builder mobileLists(@Nullable Output<List<String>> mobileLists) {
            $.mobileLists = mobileLists;
            return this;
        }

        /**
         * @param mobileLists SMS sending mobile number.
         * 
         * @return builder
         * 
         */
        public Builder mobileLists(List<String> mobileLists) {
            return mobileLists(Output.of(mobileLists));
        }

        /**
         * @param mobileLists SMS sending mobile number.
         * 
         * @return builder
         * 
         */
        public Builder mobileLists(String... mobileLists) {
            return mobileLists(List.of(mobileLists));
        }

        /**
         * @param serviceUri Request address.
         * 
         * @return builder
         * 
         */
        public Builder serviceUri(@Nullable Output<String> serviceUri) {
            $.serviceUri = serviceUri;
            return this;
        }

        /**
         * @param serviceUri Request address.
         * 
         * @return builder
         * 
         */
        public Builder serviceUri(String serviceUri) {
            return serviceUri(Output.of(serviceUri));
        }

        /**
         * @param type including FixedRate,Hourly,Daily,Weekly,Cron.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type including FixedRate,Hourly,Daily,Weekly,Cron.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AlertNotificationListArgs build() {
            if ($.content == null) {
                throw new MissingRequiredPropertyException("AlertNotificationListArgs", "content");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("AlertNotificationListArgs", "type");
            }
            return $;
        }
    }

}
