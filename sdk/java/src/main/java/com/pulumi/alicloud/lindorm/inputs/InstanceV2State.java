// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.lindorm.inputs;

import com.pulumi.alicloud.lindorm.inputs.InstanceV2EngineListArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceV2State extends com.pulumi.resources.ResourceArgs {

    public static final InstanceV2State Empty = new InstanceV2State();

    /**
     * Coordination Zone VswitchId
     * 
     */
    @Import(name="arbiterVswitchId")
    private @Nullable Output<String> arbiterVswitchId;

    /**
     * @return Coordination Zone VswitchId
     * 
     */
    public Optional<Output<String>> arbiterVswitchId() {
        return Optional.ofNullable(this.arbiterVswitchId);
    }

    /**
     * Coordination Zone ZoneId
     * 
     */
    @Import(name="arbiterZoneId")
    private @Nullable Output<String> arbiterZoneId;

    /**
     * @return Coordination Zone ZoneId
     * 
     */
    public Optional<Output<String>> arbiterZoneId() {
        return Optional.ofNullable(this.arbiterZoneId);
    }

    /**
     * Deployment Scenario
     * &gt; Enumeration value
     * &gt; - 1.0 Single AZ
     * &gt; - 2.0 Multi-AZ Basic
     * &gt; - 3.0 Multi-AZ High Availability Edition
     * 
     */
    @Import(name="archVersion")
    private @Nullable Output<String> archVersion;

    /**
     * @return Deployment Scenario
     * &gt; Enumeration value
     * &gt; - 1.0 Single AZ
     * &gt; - 2.0 Multi-AZ Basic
     * &gt; - 3.0 Multi-AZ High Availability Edition
     * 
     */
    public Optional<Output<String>> archVersion() {
        return Optional.ofNullable(this.archVersion);
    }

    /**
     * Auto Renew
     * 
     */
    @Import(name="autoRenewal")
    private @Nullable Output<Boolean> autoRenewal;

    /**
     * @return Auto Renew
     * 
     */
    public Optional<Output<Boolean>> autoRenewal() {
        return Optional.ofNullable(this.autoRenewal);
    }

    /**
     * &gt; Cloud storage capacity in GB
     * 
     */
    @Import(name="cloudStorageSize")
    private @Nullable Output<Integer> cloudStorageSize;

    /**
     * @return &gt; Cloud storage capacity in GB
     * 
     */
    public Optional<Output<Integer>> cloudStorageSize() {
        return Optional.ofNullable(this.cloudStorageSize);
    }

    /**
     * &gt; &gt; 
     * &gt; - StandardStorage: Standard cloud storage
     * &gt; - PerformanceStorage: performance-based cloud storage
     * &gt; - capacity storage: Capacity-based cloud storage
     * 
     */
    @Import(name="cloudStorageType")
    private @Nullable Output<String> cloudStorageType;

    /**
     * @return &gt;&gt;
     * &gt; - StandardStorage: Standard cloud storage
     * &gt; - PerformanceStorage: performance-based cloud storage
     * &gt; - capacity storage: Capacity-based cloud storage
     * 
     */
    public Optional<Output<String>> cloudStorageType() {
        return Optional.ofNullable(this.cloudStorageType);
    }

    /**
     * Whether to enable deletion protection
     * 
     */
    @Import(name="deletionProtection")
    private @Nullable Output<String> deletionProtection;

    /**
     * @return Whether to enable deletion protection
     * 
     */
    public Optional<Output<String>> deletionProtection() {
        return Optional.ofNullable(this.deletionProtection);
    }

    /**
     * Engine List See `engine_list` below.
     * 
     */
    @Import(name="engineLists")
    private @Nullable Output<List<InstanceV2EngineListArgs>> engineLists;

    /**
     * @return Engine List See `engine_list` below.
     * 
     */
    public Optional<Output<List<InstanceV2EngineListArgs>>> engineLists() {
        return Optional.ofNullable(this.engineLists);
    }

    /**
     * Instance name
     * 
     */
    @Import(name="instanceAlias")
    private @Nullable Output<String> instanceAlias;

    /**
     * @return Instance name
     * 
     */
    public Optional<Output<String>> instanceAlias() {
        return Optional.ofNullable(this.instanceAlias);
    }

    /**
     * The payment type of the resource
     * 
     */
    @Import(name="paymentType")
    private @Nullable Output<String> paymentType;

    /**
     * @return The payment type of the resource
     * 
     */
    public Optional<Output<String>> paymentType() {
        return Optional.ofNullable(this.paymentType);
    }

    /**
     * Primary zone VswitchId
     * 
     */
    @Import(name="primaryVswitchId")
    private @Nullable Output<String> primaryVswitchId;

    /**
     * @return Primary zone VswitchId
     * 
     */
    public Optional<Output<String>> primaryVswitchId() {
        return Optional.ofNullable(this.primaryVswitchId);
    }

    /**
     * Primary zone ZoneID
     * 
     */
    @Import(name="primaryZoneId")
    private @Nullable Output<String> primaryZoneId;

    /**
     * @return Primary zone ZoneID
     * 
     */
    public Optional<Output<String>> primaryZoneId() {
        return Optional.ofNullable(this.primaryZoneId);
    }

    /**
     * The region ID of the resource
     * 
     */
    @Import(name="regionId")
    private @Nullable Output<String> regionId;

    /**
     * @return The region ID of the resource
     * 
     */
    public Optional<Output<String>> regionId() {
        return Optional.ofNullable(this.regionId);
    }

    /**
     * Standby zone VswitchId
     * 
     */
    @Import(name="standbyVswitchId")
    private @Nullable Output<String> standbyVswitchId;

    /**
     * @return Standby zone VswitchId
     * 
     */
    public Optional<Output<String>> standbyVswitchId() {
        return Optional.ofNullable(this.standbyVswitchId);
    }

    /**
     * Standby zone ZoneID
     * 
     */
    @Import(name="standbyZoneId")
    private @Nullable Output<String> standbyZoneId;

    /**
     * @return Standby zone ZoneID
     * 
     */
    public Optional<Output<String>> standbyZoneId() {
        return Optional.ofNullable(this.standbyZoneId);
    }

    /**
     * VpcId
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return VpcId
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    /**
     * VswitchId
     * 
     */
    @Import(name="vswitchId")
    private @Nullable Output<String> vswitchId;

    /**
     * @return VswitchId
     * 
     */
    public Optional<Output<String>> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    /**
     * The zone ID  of the resource
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return The zone ID  of the resource
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private InstanceV2State() {}

    private InstanceV2State(InstanceV2State $) {
        this.arbiterVswitchId = $.arbiterVswitchId;
        this.arbiterZoneId = $.arbiterZoneId;
        this.archVersion = $.archVersion;
        this.autoRenewal = $.autoRenewal;
        this.cloudStorageSize = $.cloudStorageSize;
        this.cloudStorageType = $.cloudStorageType;
        this.deletionProtection = $.deletionProtection;
        this.engineLists = $.engineLists;
        this.instanceAlias = $.instanceAlias;
        this.paymentType = $.paymentType;
        this.primaryVswitchId = $.primaryVswitchId;
        this.primaryZoneId = $.primaryZoneId;
        this.regionId = $.regionId;
        this.standbyVswitchId = $.standbyVswitchId;
        this.standbyZoneId = $.standbyZoneId;
        this.vpcId = $.vpcId;
        this.vswitchId = $.vswitchId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceV2State defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceV2State $;

        public Builder() {
            $ = new InstanceV2State();
        }

        public Builder(InstanceV2State defaults) {
            $ = new InstanceV2State(Objects.requireNonNull(defaults));
        }

        /**
         * @param arbiterVswitchId Coordination Zone VswitchId
         * 
         * @return builder
         * 
         */
        public Builder arbiterVswitchId(@Nullable Output<String> arbiterVswitchId) {
            $.arbiterVswitchId = arbiterVswitchId;
            return this;
        }

        /**
         * @param arbiterVswitchId Coordination Zone VswitchId
         * 
         * @return builder
         * 
         */
        public Builder arbiterVswitchId(String arbiterVswitchId) {
            return arbiterVswitchId(Output.of(arbiterVswitchId));
        }

        /**
         * @param arbiterZoneId Coordination Zone ZoneId
         * 
         * @return builder
         * 
         */
        public Builder arbiterZoneId(@Nullable Output<String> arbiterZoneId) {
            $.arbiterZoneId = arbiterZoneId;
            return this;
        }

        /**
         * @param arbiterZoneId Coordination Zone ZoneId
         * 
         * @return builder
         * 
         */
        public Builder arbiterZoneId(String arbiterZoneId) {
            return arbiterZoneId(Output.of(arbiterZoneId));
        }

        /**
         * @param archVersion Deployment Scenario
         * &gt; Enumeration value
         * &gt; - 1.0 Single AZ
         * &gt; - 2.0 Multi-AZ Basic
         * &gt; - 3.0 Multi-AZ High Availability Edition
         * 
         * @return builder
         * 
         */
        public Builder archVersion(@Nullable Output<String> archVersion) {
            $.archVersion = archVersion;
            return this;
        }

        /**
         * @param archVersion Deployment Scenario
         * &gt; Enumeration value
         * &gt; - 1.0 Single AZ
         * &gt; - 2.0 Multi-AZ Basic
         * &gt; - 3.0 Multi-AZ High Availability Edition
         * 
         * @return builder
         * 
         */
        public Builder archVersion(String archVersion) {
            return archVersion(Output.of(archVersion));
        }

        /**
         * @param autoRenewal Auto Renew
         * 
         * @return builder
         * 
         */
        public Builder autoRenewal(@Nullable Output<Boolean> autoRenewal) {
            $.autoRenewal = autoRenewal;
            return this;
        }

        /**
         * @param autoRenewal Auto Renew
         * 
         * @return builder
         * 
         */
        public Builder autoRenewal(Boolean autoRenewal) {
            return autoRenewal(Output.of(autoRenewal));
        }

        /**
         * @param cloudStorageSize &gt; Cloud storage capacity in GB
         * 
         * @return builder
         * 
         */
        public Builder cloudStorageSize(@Nullable Output<Integer> cloudStorageSize) {
            $.cloudStorageSize = cloudStorageSize;
            return this;
        }

        /**
         * @param cloudStorageSize &gt; Cloud storage capacity in GB
         * 
         * @return builder
         * 
         */
        public Builder cloudStorageSize(Integer cloudStorageSize) {
            return cloudStorageSize(Output.of(cloudStorageSize));
        }

        /**
         * @param cloudStorageType &gt;&gt;
         * &gt; - StandardStorage: Standard cloud storage
         * &gt; - PerformanceStorage: performance-based cloud storage
         * &gt; - capacity storage: Capacity-based cloud storage
         * 
         * @return builder
         * 
         */
        public Builder cloudStorageType(@Nullable Output<String> cloudStorageType) {
            $.cloudStorageType = cloudStorageType;
            return this;
        }

        /**
         * @param cloudStorageType &gt;&gt;
         * &gt; - StandardStorage: Standard cloud storage
         * &gt; - PerformanceStorage: performance-based cloud storage
         * &gt; - capacity storage: Capacity-based cloud storage
         * 
         * @return builder
         * 
         */
        public Builder cloudStorageType(String cloudStorageType) {
            return cloudStorageType(Output.of(cloudStorageType));
        }

        /**
         * @param deletionProtection Whether to enable deletion protection
         * 
         * @return builder
         * 
         */
        public Builder deletionProtection(@Nullable Output<String> deletionProtection) {
            $.deletionProtection = deletionProtection;
            return this;
        }

        /**
         * @param deletionProtection Whether to enable deletion protection
         * 
         * @return builder
         * 
         */
        public Builder deletionProtection(String deletionProtection) {
            return deletionProtection(Output.of(deletionProtection));
        }

        /**
         * @param engineLists Engine List See `engine_list` below.
         * 
         * @return builder
         * 
         */
        public Builder engineLists(@Nullable Output<List<InstanceV2EngineListArgs>> engineLists) {
            $.engineLists = engineLists;
            return this;
        }

        /**
         * @param engineLists Engine List See `engine_list` below.
         * 
         * @return builder
         * 
         */
        public Builder engineLists(List<InstanceV2EngineListArgs> engineLists) {
            return engineLists(Output.of(engineLists));
        }

        /**
         * @param engineLists Engine List See `engine_list` below.
         * 
         * @return builder
         * 
         */
        public Builder engineLists(InstanceV2EngineListArgs... engineLists) {
            return engineLists(List.of(engineLists));
        }

        /**
         * @param instanceAlias Instance name
         * 
         * @return builder
         * 
         */
        public Builder instanceAlias(@Nullable Output<String> instanceAlias) {
            $.instanceAlias = instanceAlias;
            return this;
        }

        /**
         * @param instanceAlias Instance name
         * 
         * @return builder
         * 
         */
        public Builder instanceAlias(String instanceAlias) {
            return instanceAlias(Output.of(instanceAlias));
        }

        /**
         * @param paymentType The payment type of the resource
         * 
         * @return builder
         * 
         */
        public Builder paymentType(@Nullable Output<String> paymentType) {
            $.paymentType = paymentType;
            return this;
        }

        /**
         * @param paymentType The payment type of the resource
         * 
         * @return builder
         * 
         */
        public Builder paymentType(String paymentType) {
            return paymentType(Output.of(paymentType));
        }

        /**
         * @param primaryVswitchId Primary zone VswitchId
         * 
         * @return builder
         * 
         */
        public Builder primaryVswitchId(@Nullable Output<String> primaryVswitchId) {
            $.primaryVswitchId = primaryVswitchId;
            return this;
        }

        /**
         * @param primaryVswitchId Primary zone VswitchId
         * 
         * @return builder
         * 
         */
        public Builder primaryVswitchId(String primaryVswitchId) {
            return primaryVswitchId(Output.of(primaryVswitchId));
        }

        /**
         * @param primaryZoneId Primary zone ZoneID
         * 
         * @return builder
         * 
         */
        public Builder primaryZoneId(@Nullable Output<String> primaryZoneId) {
            $.primaryZoneId = primaryZoneId;
            return this;
        }

        /**
         * @param primaryZoneId Primary zone ZoneID
         * 
         * @return builder
         * 
         */
        public Builder primaryZoneId(String primaryZoneId) {
            return primaryZoneId(Output.of(primaryZoneId));
        }

        /**
         * @param regionId The region ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder regionId(@Nullable Output<String> regionId) {
            $.regionId = regionId;
            return this;
        }

        /**
         * @param regionId The region ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder regionId(String regionId) {
            return regionId(Output.of(regionId));
        }

        /**
         * @param standbyVswitchId Standby zone VswitchId
         * 
         * @return builder
         * 
         */
        public Builder standbyVswitchId(@Nullable Output<String> standbyVswitchId) {
            $.standbyVswitchId = standbyVswitchId;
            return this;
        }

        /**
         * @param standbyVswitchId Standby zone VswitchId
         * 
         * @return builder
         * 
         */
        public Builder standbyVswitchId(String standbyVswitchId) {
            return standbyVswitchId(Output.of(standbyVswitchId));
        }

        /**
         * @param standbyZoneId Standby zone ZoneID
         * 
         * @return builder
         * 
         */
        public Builder standbyZoneId(@Nullable Output<String> standbyZoneId) {
            $.standbyZoneId = standbyZoneId;
            return this;
        }

        /**
         * @param standbyZoneId Standby zone ZoneID
         * 
         * @return builder
         * 
         */
        public Builder standbyZoneId(String standbyZoneId) {
            return standbyZoneId(Output.of(standbyZoneId));
        }

        /**
         * @param vpcId VpcId
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId VpcId
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param vswitchId VswitchId
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(@Nullable Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId VswitchId
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        /**
         * @param zoneId The zone ID  of the resource
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The zone ID  of the resource
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public InstanceV2State build() {
            return $;
        }
    }

}
