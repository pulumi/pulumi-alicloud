// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudstoragegateway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewayFileShareArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayFileShareArgs Empty = new GatewayFileShareArgs();

    /**
     * Whether to enable Windows ABE, the prime minister, need windowsAcl parameter is set to true in the entry into force of. Default value: `false`. **NOTE:** The attribute is valid when the attribute `protocol` is `SMB`. Gateway version &gt;= 1.0.45 above support.
     * 
     */
    @Import(name="accessBasedEnumeration")
    private @Nullable Output<Boolean> accessBasedEnumeration;

    /**
     * @return Whether to enable Windows ABE, the prime minister, need windowsAcl parameter is set to true in the entry into force of. Default value: `false`. **NOTE:** The attribute is valid when the attribute `protocol` is `SMB`. Gateway version &gt;= 1.0.45 above support.
     * 
     */
    public Optional<Output<Boolean>> accessBasedEnumeration() {
        return Optional.ofNullable(this.accessBasedEnumeration);
    }

    /**
     * The Max upload speed of the gateway file share. Unit: `MB/s`, 0 means unlimited. Value range: `0` ~ `1280`. Default value: `0`. **NOTE:** at the same time if you have to limit the maximum write speed, maximum upload speed is no less than the maximum write speed.
     * 
     */
    @Import(name="backendLimit")
    private @Nullable Output<Integer> backendLimit;

    /**
     * @return The Max upload speed of the gateway file share. Unit: `MB/s`, 0 means unlimited. Value range: `0` ~ `1280`. Default value: `0`. **NOTE:** at the same time if you have to limit the maximum write speed, maximum upload speed is no less than the maximum write speed.
     * 
     */
    public Optional<Output<Integer>> backendLimit() {
        return Optional.ofNullable(this.backendLimit);
    }

    /**
     * The whether browsable of the gateway file share (that is, in the network neighborhood of whether you can find). The attribute is valid when the attribute `protocol` is `SMB`. Default value: `true`.
     * 
     */
    @Import(name="browsable")
    private @Nullable Output<Boolean> browsable;

    /**
     * @return The whether browsable of the gateway file share (that is, in the network neighborhood of whether you can find). The attribute is valid when the attribute `protocol` is `SMB`. Default value: `true`.
     * 
     */
    public Optional<Output<Boolean>> browsable() {
        return Optional.ofNullable(this.browsable);
    }

    /**
     * Direct reading OSS of the gateway file share.
     * 
     */
    @Import(name="bypassCacheRead")
    private @Nullable Output<Boolean> bypassCacheRead;

    /**
     * @return Direct reading OSS of the gateway file share.
     * 
     */
    public Optional<Output<Boolean>> bypassCacheRead() {
        return Optional.ofNullable(this.bypassCacheRead);
    }

    /**
     * The set up gateway file share cache mode. Valid values: `Cache` or `Sync`. `Cache`: cached mode. `Sync`: replication mode are available. Default value: `Cache`.
     * 
     */
    @Import(name="cacheMode")
    private @Nullable Output<String> cacheMode;

    /**
     * @return The set up gateway file share cache mode. Valid values: `Cache` or `Sync`. `Cache`: cached mode. `Sync`: replication mode are available. Default value: `Cache`.
     * 
     */
    public Optional<Output<String>> cacheMode() {
        return Optional.ofNullable(this.cacheMode);
    }

    /**
     * File sharing Whether to enable DirectIO (direct I/O mode for data transmission). Default value: `false`.
     * 
     */
    @Import(name="directIo")
    private @Nullable Output<Boolean> directIo;

    /**
     * @return File sharing Whether to enable DirectIO (direct I/O mode for data transmission). Default value: `false`.
     * 
     */
    public Optional<Output<Boolean>> directIo() {
        return Optional.ofNullable(this.directIo);
    }

    /**
     * The maximum download speed of the gateway file share. Unit: `MB/s`. `0` means unlimited. Value range: `0` ~ `1280`. **NOTE:** only in copy mode and enable download file data can be set. only when the shared opens the reverse synchronization or acceded to by the speed synchronization Group when, this parameter will not take effect. Gateway version &gt;= 1.3.0 above support.
     * 
     */
    @Import(name="downloadLimit")
    private @Nullable Output<Integer> downloadLimit;

    /**
     * @return The maximum download speed of the gateway file share. Unit: `MB/s`. `0` means unlimited. Value range: `0` ~ `1280`. **NOTE:** only in copy mode and enable download file data can be set. only when the shared opens the reverse synchronization or acceded to by the speed synchronization Group when, this parameter will not take effect. Gateway version &gt;= 1.3.0 above support.
     * 
     */
    public Optional<Output<Integer>> downloadLimit() {
        return Optional.ofNullable(this.downloadLimit);
    }

    /**
     * The whether to enable Upload optimization of the gateway file share, which is suitable for data pure backup migration scenarios. Default value: `false`. **NOTE:** Gateway version &gt;= 1.0.39 above support.
     * 
     */
    @Import(name="fastReclaim")
    private @Nullable Output<Boolean> fastReclaim;

    /**
     * @return The whether to enable Upload optimization of the gateway file share, which is suitable for data pure backup migration scenarios. Default value: `false`. **NOTE:** Gateway version &gt;= 1.0.39 above support.
     * 
     */
    public Optional<Output<Boolean>> fastReclaim() {
        return Optional.ofNullable(this.fastReclaim);
    }

    /**
     * The maximum write speed of the gateway file share. Unit: `MB/s`, `0` means unlimited. Value range: `0` ~ `1280`. Default value: `0`.
     * 
     */
    @Import(name="feLimit")
    private @Nullable Output<Integer> feLimit;

    /**
     * @return The maximum write speed of the gateway file share. Unit: `MB/s`, `0` means unlimited. Value range: `0` ~ `1280`. Default value: `0`.
     * 
     */
    public Optional<Output<Integer>> feLimit() {
        return Optional.ofNullable(this.feLimit);
    }

    /**
     * The name of the file share. Length from `1` to `255` characters can contain lowercase letters, digits, (.), (_) Or (-), at the same time, must start with a lowercase letter.
     * 
     */
    @Import(name="gatewayFileShareName", required=true)
    private Output<String> gatewayFileShareName;

    /**
     * @return The name of the file share. Length from `1` to `255` characters can contain lowercase letters, digits, (.), (_) Or (-), at the same time, must start with a lowercase letter.
     * 
     */
    public Output<String> gatewayFileShareName() {
        return this.gatewayFileShareName;
    }

    /**
     * The ID of the gateway.
     * 
     */
    @Import(name="gatewayId", required=true)
    private Output<String> gatewayId;

    /**
     * @return The ID of the gateway.
     * 
     */
    public Output<String> gatewayId() {
        return this.gatewayId;
    }

    /**
     * The whether to ignore deleted of the gateway file share. After the opening of the Gateway side delete file or delete cloud (OSS) corresponding to the file. Default value: `false`. **NOTE:** `ignore_delete` and `remote_sync` cannot be enabled simultaneously. Gateway version &gt;= 1.0.40 above support.
     * 
     */
    @Import(name="ignoreDelete")
    private @Nullable Output<Boolean> ignoreDelete;

    /**
     * @return The whether to ignore deleted of the gateway file share. After the opening of the Gateway side delete file or delete cloud (OSS) corresponding to the file. Default value: `false`. **NOTE:** `ignore_delete` and `remote_sync` cannot be enabled simultaneously. Gateway version &gt;= 1.0.40 above support.
     * 
     */
    public Optional<Output<Boolean>> ignoreDelete() {
        return Optional.ofNullable(this.ignoreDelete);
    }

    /**
     * The whether debris optimization of the gateway file share. Default value: `false`.
     * 
     */
    @Import(name="inPlace")
    private @Nullable Output<Boolean> inPlace;

    /**
     * @return The whether debris optimization of the gateway file share. Default value: `false`.
     * 
     */
    public Optional<Output<Boolean>> inPlace() {
        return Optional.ofNullable(this.inPlace);
    }

    /**
     * The synchronization delay, I.e. gateway local cache sync to Alibaba Cloud Object Storage Service (oss) of the delay time. Unit: `Seconds`. Value range: `5` ~ `120`. Default value: `5`. **NOTE:** Gateway version &gt;= 1.0.40 above support.
     * 
     */
    @Import(name="lagPeriod")
    private @Nullable Output<Integer> lagPeriod;

    /**
     * @return The synchronization delay, I.e. gateway local cache sync to Alibaba Cloud Object Storage Service (oss) of the delay time. Unit: `Seconds`. Value range: `5` ~ `120`. Default value: `5`. **NOTE:** Gateway version &gt;= 1.0.40 above support.
     * 
     */
    public Optional<Output<Integer>> lagPeriod() {
        return Optional.ofNullable(this.lagPeriod);
    }

    /**
     * The cache disk inside the device name.
     * 
     */
    @Import(name="localPath", required=true)
    private Output<String> localPath;

    /**
     * @return The cache disk inside the device name.
     * 
     */
    public Output<String> localPath() {
        return this.localPath;
    }

    /**
     * The set up gateway file share NFS protocol, whether to enable NFS v4 optimization improve Mount Upload efficiency. Default value: `false`. **NOTE:** If it is enabled, NFS V3 cannot be mounted. The attribute is valid when the attribute `protocol` is `NFS`. Gateway version &gt;= 1.2.0 above support.
     * 
     */
    @Import(name="nfsV4Optimization")
    private @Nullable Output<Boolean> nfsV4Optimization;

    /**
     * @return The set up gateway file share NFS protocol, whether to enable NFS v4 optimization improve Mount Upload efficiency. Default value: `false`. **NOTE:** If it is enabled, NFS V3 cannot be mounted. The attribute is valid when the attribute `protocol` is `NFS`. Gateway version &gt;= 1.2.0 above support.
     * 
     */
    public Optional<Output<Boolean>> nfsV4Optimization() {
        return Optional.ofNullable(this.nfsV4Optimization);
    }

    /**
     * The name of the OSS Bucket.
     * 
     */
    @Import(name="ossBucketName", required=true)
    private Output<String> ossBucketName;

    /**
     * @return The name of the OSS Bucket.
     * 
     */
    public Output<String> ossBucketName() {
        return this.ossBucketName;
    }

    /**
     * Whether they are using SSL connect to OSS Bucket.
     * 
     */
    @Import(name="ossBucketSsl")
    private @Nullable Output<Boolean> ossBucketSsl;

    /**
     * @return Whether they are using SSL connect to OSS Bucket.
     * 
     */
    public Optional<Output<Boolean>> ossBucketSsl() {
        return Optional.ofNullable(this.ossBucketSsl);
    }

    /**
     * The gateway file share corresponds to the Object Storage SERVICE (OSS), Bucket Endpoint. **NOTE:** distinguish between intranet and internet Endpoint. We recommend that if the OSS Bucket and the gateway is in the same Region is use the RDS intranet IP Endpoint: `oss-cn-hangzhou-internal.aliyuncs.com`.
     * 
     */
    @Import(name="ossEndpoint", required=true)
    private Output<String> ossEndpoint;

    /**
     * @return The gateway file share corresponds to the Object Storage SERVICE (OSS), Bucket Endpoint. **NOTE:** distinguish between intranet and internet Endpoint. We recommend that if the OSS Bucket and the gateway is in the same Region is use the RDS intranet IP Endpoint: `oss-cn-hangzhou-internal.aliyuncs.com`.
     * 
     */
    public Output<String> ossEndpoint() {
        return this.ossEndpoint;
    }

    /**
     * In part mode, the directory path group JSON format.
     * 
     */
    @Import(name="partialSyncPaths")
    private @Nullable Output<String> partialSyncPaths;

    /**
     * @return In part mode, the directory path group JSON format.
     * 
     */
    public Optional<Output<String>> partialSyncPaths() {
        return Optional.ofNullable(this.partialSyncPaths);
    }

    /**
     * The subdirectory path under the object storage (OSS) bucket corresponding to the file share. If it is blank, it means the root directory of the bucket.
     * 
     */
    @Import(name="pathPrefix")
    private @Nullable Output<String> pathPrefix;

    /**
     * @return The subdirectory path under the object storage (OSS) bucket corresponding to the file share. If it is blank, it means the root directory of the bucket.
     * 
     */
    public Optional<Output<String>> pathPrefix() {
        return Optional.ofNullable(this.pathPrefix);
    }

    /**
     * The reverse synchronization time intervals of the gateway file share. Value range: `15` ~ `36000`. **NOTE:** in copy mode + reverse synchronization is enabled Download file data, value range: `3600` ~ `36000`.
     * 
     */
    @Import(name="pollingInterval")
    private @Nullable Output<Integer> pollingInterval;

    /**
     * @return The reverse synchronization time intervals of the gateway file share. Value range: `15` ~ `36000`. **NOTE:** in copy mode + reverse synchronization is enabled Download file data, value range: `3600` ~ `36000`.
     * 
     */
    public Optional<Output<Integer>> pollingInterval() {
        return Optional.ofNullable(this.pollingInterval);
    }

    /**
     * Share types. Valid values: `SMB`, `NFS`.
     * 
     */
    @Import(name="protocol", required=true)
    private Output<String> protocol;

    /**
     * @return Share types. Valid values: `SMB`, `NFS`.
     * 
     */
    public Output<String> protocol() {
        return this.protocol;
    }

    /**
     * Whether to enable reverse synchronization of the gateway file share. Default value: `false`.
     * 
     */
    @Import(name="remoteSync")
    private @Nullable Output<Boolean> remoteSync;

    /**
     * @return Whether to enable reverse synchronization of the gateway file share. Default value: `false`.
     * 
     */
    public Optional<Output<Boolean>> remoteSync() {
        return Optional.ofNullable(this.remoteSync);
    }

    /**
     * Copy mode, whether to download the file data. Default value: `false`. **NOTE:** only when the attribute `remote_sync` is `true` or acceded to by the speed synchronization group, this parameter will not take effect.
     * 
     */
    @Import(name="remoteSyncDownload")
    private @Nullable Output<Boolean> remoteSyncDownload;

    /**
     * @return Copy mode, whether to download the file data. Default value: `false`. **NOTE:** only when the attribute `remote_sync` is `true` or acceded to by the speed synchronization group, this parameter will not take effect.
     * 
     */
    public Optional<Output<Boolean>> remoteSyncDownload() {
        return Optional.ofNullable(this.remoteSyncDownload);
    }

    /**
     * File sharing NFS read-only client list (IP address or IP address range). Use commas (,) to separate multiple clients.
     * 
     */
    @Import(name="roClientList")
    private @Nullable Output<String> roClientList;

    /**
     * @return File sharing NFS read-only client list (IP address or IP address range). Use commas (,) to separate multiple clients.
     * 
     */
    public Optional<Output<String>> roClientList() {
        return Optional.ofNullable(this.roClientList);
    }

    /**
     * The read-only client list. When Protocol for Server Message Block (SMB) to go back to.
     * 
     */
    @Import(name="roUserList")
    private @Nullable Output<String> roUserList;

    /**
     * @return The read-only client list. When Protocol for Server Message Block (SMB) to go back to.
     * 
     */
    public Optional<Output<String>> roUserList() {
        return Optional.ofNullable(this.roUserList);
    }

    /**
     * Read and write the client list. When Protocol NFS is returned when the status is.
     * 
     */
    @Import(name="rwClientList")
    private @Nullable Output<String> rwClientList;

    /**
     * @return Read and write the client list. When Protocol NFS is returned when the status is.
     * 
     */
    public Optional<Output<String>> rwClientList() {
        return Optional.ofNullable(this.rwClientList);
    }

    /**
     * Read-write user list. When Protocol for Server Message Block (SMB) to go back to.
     * 
     */
    @Import(name="rwUserList")
    private @Nullable Output<String> rwUserList;

    /**
     * @return Read-write user list. When Protocol for Server Message Block (SMB) to go back to.
     * 
     */
    public Optional<Output<String>> rwUserList() {
        return Optional.ofNullable(this.rwUserList);
    }

    /**
     * The NFS protocol user mapping of the gateway file share. Valid values: `none`, `root_squash`, `all_squash`, `all_anonymous`. Default value: `none`. **NOTE:** The attribute is valid when the attribute `protocol` is `NFS`.
     * 
     */
    @Import(name="squash")
    private @Nullable Output<String> squash;

    /**
     * @return The NFS protocol user mapping of the gateway file share. Valid values: `none`, `root_squash`, `all_squash`, `all_anonymous`. Default value: `none`. **NOTE:** The attribute is valid when the attribute `protocol` is `NFS`.
     * 
     */
    public Optional<Output<String>> squash() {
        return Optional.ofNullable(this.squash);
    }

    /**
     * Whether to support the archive transparent read.
     * 
     */
    @Import(name="supportArchive")
    private @Nullable Output<Boolean> supportArchive;

    /**
     * @return Whether to support the archive transparent read.
     * 
     */
    public Optional<Output<Boolean>> supportArchive() {
        return Optional.ofNullable(this.supportArchive);
    }

    /**
     * The set up gateway file share whether to enable transmission acceleration needs corresponding OSS Bucket enabled transport acceleration. **NOTE:** Gateway version &gt;= 1.3.0 above support.
     * 
     */
    @Import(name="transferAcceleration")
    private @Nullable Output<Boolean> transferAcceleration;

    /**
     * @return The set up gateway file share whether to enable transmission acceleration needs corresponding OSS Bucket enabled transport acceleration. **NOTE:** Gateway version &gt;= 1.3.0 above support.
     * 
     */
    public Optional<Output<Boolean>> transferAcceleration() {
        return Optional.ofNullable(this.transferAcceleration);
    }

    /**
     * Whether to enable by Windows access list (requires AD domain) the permissions control. Default value: `false`. **NOTE:** The attribute is valid when the attribute `protocol` is `SMB`. Gateway version &gt;= 1.0.45 above support.
     * 
     */
    @Import(name="windowsAcl")
    private @Nullable Output<Boolean> windowsAcl;

    /**
     * @return Whether to enable by Windows access list (requires AD domain) the permissions control. Default value: `false`. **NOTE:** The attribute is valid when the attribute `protocol` is `SMB`. Gateway version &gt;= 1.0.45 above support.
     * 
     */
    public Optional<Output<Boolean>> windowsAcl() {
        return Optional.ofNullable(this.windowsAcl);
    }

    private GatewayFileShareArgs() {}

    private GatewayFileShareArgs(GatewayFileShareArgs $) {
        this.accessBasedEnumeration = $.accessBasedEnumeration;
        this.backendLimit = $.backendLimit;
        this.browsable = $.browsable;
        this.bypassCacheRead = $.bypassCacheRead;
        this.cacheMode = $.cacheMode;
        this.directIo = $.directIo;
        this.downloadLimit = $.downloadLimit;
        this.fastReclaim = $.fastReclaim;
        this.feLimit = $.feLimit;
        this.gatewayFileShareName = $.gatewayFileShareName;
        this.gatewayId = $.gatewayId;
        this.ignoreDelete = $.ignoreDelete;
        this.inPlace = $.inPlace;
        this.lagPeriod = $.lagPeriod;
        this.localPath = $.localPath;
        this.nfsV4Optimization = $.nfsV4Optimization;
        this.ossBucketName = $.ossBucketName;
        this.ossBucketSsl = $.ossBucketSsl;
        this.ossEndpoint = $.ossEndpoint;
        this.partialSyncPaths = $.partialSyncPaths;
        this.pathPrefix = $.pathPrefix;
        this.pollingInterval = $.pollingInterval;
        this.protocol = $.protocol;
        this.remoteSync = $.remoteSync;
        this.remoteSyncDownload = $.remoteSyncDownload;
        this.roClientList = $.roClientList;
        this.roUserList = $.roUserList;
        this.rwClientList = $.rwClientList;
        this.rwUserList = $.rwUserList;
        this.squash = $.squash;
        this.supportArchive = $.supportArchive;
        this.transferAcceleration = $.transferAcceleration;
        this.windowsAcl = $.windowsAcl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayFileShareArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayFileShareArgs $;

        public Builder() {
            $ = new GatewayFileShareArgs();
        }

        public Builder(GatewayFileShareArgs defaults) {
            $ = new GatewayFileShareArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessBasedEnumeration Whether to enable Windows ABE, the prime minister, need windowsAcl parameter is set to true in the entry into force of. Default value: `false`. **NOTE:** The attribute is valid when the attribute `protocol` is `SMB`. Gateway version &gt;= 1.0.45 above support.
         * 
         * @return builder
         * 
         */
        public Builder accessBasedEnumeration(@Nullable Output<Boolean> accessBasedEnumeration) {
            $.accessBasedEnumeration = accessBasedEnumeration;
            return this;
        }

        /**
         * @param accessBasedEnumeration Whether to enable Windows ABE, the prime minister, need windowsAcl parameter is set to true in the entry into force of. Default value: `false`. **NOTE:** The attribute is valid when the attribute `protocol` is `SMB`. Gateway version &gt;= 1.0.45 above support.
         * 
         * @return builder
         * 
         */
        public Builder accessBasedEnumeration(Boolean accessBasedEnumeration) {
            return accessBasedEnumeration(Output.of(accessBasedEnumeration));
        }

        /**
         * @param backendLimit The Max upload speed of the gateway file share. Unit: `MB/s`, 0 means unlimited. Value range: `0` ~ `1280`. Default value: `0`. **NOTE:** at the same time if you have to limit the maximum write speed, maximum upload speed is no less than the maximum write speed.
         * 
         * @return builder
         * 
         */
        public Builder backendLimit(@Nullable Output<Integer> backendLimit) {
            $.backendLimit = backendLimit;
            return this;
        }

        /**
         * @param backendLimit The Max upload speed of the gateway file share. Unit: `MB/s`, 0 means unlimited. Value range: `0` ~ `1280`. Default value: `0`. **NOTE:** at the same time if you have to limit the maximum write speed, maximum upload speed is no less than the maximum write speed.
         * 
         * @return builder
         * 
         */
        public Builder backendLimit(Integer backendLimit) {
            return backendLimit(Output.of(backendLimit));
        }

        /**
         * @param browsable The whether browsable of the gateway file share (that is, in the network neighborhood of whether you can find). The attribute is valid when the attribute `protocol` is `SMB`. Default value: `true`.
         * 
         * @return builder
         * 
         */
        public Builder browsable(@Nullable Output<Boolean> browsable) {
            $.browsable = browsable;
            return this;
        }

        /**
         * @param browsable The whether browsable of the gateway file share (that is, in the network neighborhood of whether you can find). The attribute is valid when the attribute `protocol` is `SMB`. Default value: `true`.
         * 
         * @return builder
         * 
         */
        public Builder browsable(Boolean browsable) {
            return browsable(Output.of(browsable));
        }

        /**
         * @param bypassCacheRead Direct reading OSS of the gateway file share.
         * 
         * @return builder
         * 
         */
        public Builder bypassCacheRead(@Nullable Output<Boolean> bypassCacheRead) {
            $.bypassCacheRead = bypassCacheRead;
            return this;
        }

        /**
         * @param bypassCacheRead Direct reading OSS of the gateway file share.
         * 
         * @return builder
         * 
         */
        public Builder bypassCacheRead(Boolean bypassCacheRead) {
            return bypassCacheRead(Output.of(bypassCacheRead));
        }

        /**
         * @param cacheMode The set up gateway file share cache mode. Valid values: `Cache` or `Sync`. `Cache`: cached mode. `Sync`: replication mode are available. Default value: `Cache`.
         * 
         * @return builder
         * 
         */
        public Builder cacheMode(@Nullable Output<String> cacheMode) {
            $.cacheMode = cacheMode;
            return this;
        }

        /**
         * @param cacheMode The set up gateway file share cache mode. Valid values: `Cache` or `Sync`. `Cache`: cached mode. `Sync`: replication mode are available. Default value: `Cache`.
         * 
         * @return builder
         * 
         */
        public Builder cacheMode(String cacheMode) {
            return cacheMode(Output.of(cacheMode));
        }

        /**
         * @param directIo File sharing Whether to enable DirectIO (direct I/O mode for data transmission). Default value: `false`.
         * 
         * @return builder
         * 
         */
        public Builder directIo(@Nullable Output<Boolean> directIo) {
            $.directIo = directIo;
            return this;
        }

        /**
         * @param directIo File sharing Whether to enable DirectIO (direct I/O mode for data transmission). Default value: `false`.
         * 
         * @return builder
         * 
         */
        public Builder directIo(Boolean directIo) {
            return directIo(Output.of(directIo));
        }

        /**
         * @param downloadLimit The maximum download speed of the gateway file share. Unit: `MB/s`. `0` means unlimited. Value range: `0` ~ `1280`. **NOTE:** only in copy mode and enable download file data can be set. only when the shared opens the reverse synchronization or acceded to by the speed synchronization Group when, this parameter will not take effect. Gateway version &gt;= 1.3.0 above support.
         * 
         * @return builder
         * 
         */
        public Builder downloadLimit(@Nullable Output<Integer> downloadLimit) {
            $.downloadLimit = downloadLimit;
            return this;
        }

        /**
         * @param downloadLimit The maximum download speed of the gateway file share. Unit: `MB/s`. `0` means unlimited. Value range: `0` ~ `1280`. **NOTE:** only in copy mode and enable download file data can be set. only when the shared opens the reverse synchronization or acceded to by the speed synchronization Group when, this parameter will not take effect. Gateway version &gt;= 1.3.0 above support.
         * 
         * @return builder
         * 
         */
        public Builder downloadLimit(Integer downloadLimit) {
            return downloadLimit(Output.of(downloadLimit));
        }

        /**
         * @param fastReclaim The whether to enable Upload optimization of the gateway file share, which is suitable for data pure backup migration scenarios. Default value: `false`. **NOTE:** Gateway version &gt;= 1.0.39 above support.
         * 
         * @return builder
         * 
         */
        public Builder fastReclaim(@Nullable Output<Boolean> fastReclaim) {
            $.fastReclaim = fastReclaim;
            return this;
        }

        /**
         * @param fastReclaim The whether to enable Upload optimization of the gateway file share, which is suitable for data pure backup migration scenarios. Default value: `false`. **NOTE:** Gateway version &gt;= 1.0.39 above support.
         * 
         * @return builder
         * 
         */
        public Builder fastReclaim(Boolean fastReclaim) {
            return fastReclaim(Output.of(fastReclaim));
        }

        /**
         * @param feLimit The maximum write speed of the gateway file share. Unit: `MB/s`, `0` means unlimited. Value range: `0` ~ `1280`. Default value: `0`.
         * 
         * @return builder
         * 
         */
        public Builder feLimit(@Nullable Output<Integer> feLimit) {
            $.feLimit = feLimit;
            return this;
        }

        /**
         * @param feLimit The maximum write speed of the gateway file share. Unit: `MB/s`, `0` means unlimited. Value range: `0` ~ `1280`. Default value: `0`.
         * 
         * @return builder
         * 
         */
        public Builder feLimit(Integer feLimit) {
            return feLimit(Output.of(feLimit));
        }

        /**
         * @param gatewayFileShareName The name of the file share. Length from `1` to `255` characters can contain lowercase letters, digits, (.), (_) Or (-), at the same time, must start with a lowercase letter.
         * 
         * @return builder
         * 
         */
        public Builder gatewayFileShareName(Output<String> gatewayFileShareName) {
            $.gatewayFileShareName = gatewayFileShareName;
            return this;
        }

        /**
         * @param gatewayFileShareName The name of the file share. Length from `1` to `255` characters can contain lowercase letters, digits, (.), (_) Or (-), at the same time, must start with a lowercase letter.
         * 
         * @return builder
         * 
         */
        public Builder gatewayFileShareName(String gatewayFileShareName) {
            return gatewayFileShareName(Output.of(gatewayFileShareName));
        }

        /**
         * @param gatewayId The ID of the gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayId(Output<String> gatewayId) {
            $.gatewayId = gatewayId;
            return this;
        }

        /**
         * @param gatewayId The ID of the gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayId(String gatewayId) {
            return gatewayId(Output.of(gatewayId));
        }

        /**
         * @param ignoreDelete The whether to ignore deleted of the gateway file share. After the opening of the Gateway side delete file or delete cloud (OSS) corresponding to the file. Default value: `false`. **NOTE:** `ignore_delete` and `remote_sync` cannot be enabled simultaneously. Gateway version &gt;= 1.0.40 above support.
         * 
         * @return builder
         * 
         */
        public Builder ignoreDelete(@Nullable Output<Boolean> ignoreDelete) {
            $.ignoreDelete = ignoreDelete;
            return this;
        }

        /**
         * @param ignoreDelete The whether to ignore deleted of the gateway file share. After the opening of the Gateway side delete file or delete cloud (OSS) corresponding to the file. Default value: `false`. **NOTE:** `ignore_delete` and `remote_sync` cannot be enabled simultaneously. Gateway version &gt;= 1.0.40 above support.
         * 
         * @return builder
         * 
         */
        public Builder ignoreDelete(Boolean ignoreDelete) {
            return ignoreDelete(Output.of(ignoreDelete));
        }

        /**
         * @param inPlace The whether debris optimization of the gateway file share. Default value: `false`.
         * 
         * @return builder
         * 
         */
        public Builder inPlace(@Nullable Output<Boolean> inPlace) {
            $.inPlace = inPlace;
            return this;
        }

        /**
         * @param inPlace The whether debris optimization of the gateway file share. Default value: `false`.
         * 
         * @return builder
         * 
         */
        public Builder inPlace(Boolean inPlace) {
            return inPlace(Output.of(inPlace));
        }

        /**
         * @param lagPeriod The synchronization delay, I.e. gateway local cache sync to Alibaba Cloud Object Storage Service (oss) of the delay time. Unit: `Seconds`. Value range: `5` ~ `120`. Default value: `5`. **NOTE:** Gateway version &gt;= 1.0.40 above support.
         * 
         * @return builder
         * 
         */
        public Builder lagPeriod(@Nullable Output<Integer> lagPeriod) {
            $.lagPeriod = lagPeriod;
            return this;
        }

        /**
         * @param lagPeriod The synchronization delay, I.e. gateway local cache sync to Alibaba Cloud Object Storage Service (oss) of the delay time. Unit: `Seconds`. Value range: `5` ~ `120`. Default value: `5`. **NOTE:** Gateway version &gt;= 1.0.40 above support.
         * 
         * @return builder
         * 
         */
        public Builder lagPeriod(Integer lagPeriod) {
            return lagPeriod(Output.of(lagPeriod));
        }

        /**
         * @param localPath The cache disk inside the device name.
         * 
         * @return builder
         * 
         */
        public Builder localPath(Output<String> localPath) {
            $.localPath = localPath;
            return this;
        }

        /**
         * @param localPath The cache disk inside the device name.
         * 
         * @return builder
         * 
         */
        public Builder localPath(String localPath) {
            return localPath(Output.of(localPath));
        }

        /**
         * @param nfsV4Optimization The set up gateway file share NFS protocol, whether to enable NFS v4 optimization improve Mount Upload efficiency. Default value: `false`. **NOTE:** If it is enabled, NFS V3 cannot be mounted. The attribute is valid when the attribute `protocol` is `NFS`. Gateway version &gt;= 1.2.0 above support.
         * 
         * @return builder
         * 
         */
        public Builder nfsV4Optimization(@Nullable Output<Boolean> nfsV4Optimization) {
            $.nfsV4Optimization = nfsV4Optimization;
            return this;
        }

        /**
         * @param nfsV4Optimization The set up gateway file share NFS protocol, whether to enable NFS v4 optimization improve Mount Upload efficiency. Default value: `false`. **NOTE:** If it is enabled, NFS V3 cannot be mounted. The attribute is valid when the attribute `protocol` is `NFS`. Gateway version &gt;= 1.2.0 above support.
         * 
         * @return builder
         * 
         */
        public Builder nfsV4Optimization(Boolean nfsV4Optimization) {
            return nfsV4Optimization(Output.of(nfsV4Optimization));
        }

        /**
         * @param ossBucketName The name of the OSS Bucket.
         * 
         * @return builder
         * 
         */
        public Builder ossBucketName(Output<String> ossBucketName) {
            $.ossBucketName = ossBucketName;
            return this;
        }

        /**
         * @param ossBucketName The name of the OSS Bucket.
         * 
         * @return builder
         * 
         */
        public Builder ossBucketName(String ossBucketName) {
            return ossBucketName(Output.of(ossBucketName));
        }

        /**
         * @param ossBucketSsl Whether they are using SSL connect to OSS Bucket.
         * 
         * @return builder
         * 
         */
        public Builder ossBucketSsl(@Nullable Output<Boolean> ossBucketSsl) {
            $.ossBucketSsl = ossBucketSsl;
            return this;
        }

        /**
         * @param ossBucketSsl Whether they are using SSL connect to OSS Bucket.
         * 
         * @return builder
         * 
         */
        public Builder ossBucketSsl(Boolean ossBucketSsl) {
            return ossBucketSsl(Output.of(ossBucketSsl));
        }

        /**
         * @param ossEndpoint The gateway file share corresponds to the Object Storage SERVICE (OSS), Bucket Endpoint. **NOTE:** distinguish between intranet and internet Endpoint. We recommend that if the OSS Bucket and the gateway is in the same Region is use the RDS intranet IP Endpoint: `oss-cn-hangzhou-internal.aliyuncs.com`.
         * 
         * @return builder
         * 
         */
        public Builder ossEndpoint(Output<String> ossEndpoint) {
            $.ossEndpoint = ossEndpoint;
            return this;
        }

        /**
         * @param ossEndpoint The gateway file share corresponds to the Object Storage SERVICE (OSS), Bucket Endpoint. **NOTE:** distinguish between intranet and internet Endpoint. We recommend that if the OSS Bucket and the gateway is in the same Region is use the RDS intranet IP Endpoint: `oss-cn-hangzhou-internal.aliyuncs.com`.
         * 
         * @return builder
         * 
         */
        public Builder ossEndpoint(String ossEndpoint) {
            return ossEndpoint(Output.of(ossEndpoint));
        }

        /**
         * @param partialSyncPaths In part mode, the directory path group JSON format.
         * 
         * @return builder
         * 
         */
        public Builder partialSyncPaths(@Nullable Output<String> partialSyncPaths) {
            $.partialSyncPaths = partialSyncPaths;
            return this;
        }

        /**
         * @param partialSyncPaths In part mode, the directory path group JSON format.
         * 
         * @return builder
         * 
         */
        public Builder partialSyncPaths(String partialSyncPaths) {
            return partialSyncPaths(Output.of(partialSyncPaths));
        }

        /**
         * @param pathPrefix The subdirectory path under the object storage (OSS) bucket corresponding to the file share. If it is blank, it means the root directory of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder pathPrefix(@Nullable Output<String> pathPrefix) {
            $.pathPrefix = pathPrefix;
            return this;
        }

        /**
         * @param pathPrefix The subdirectory path under the object storage (OSS) bucket corresponding to the file share. If it is blank, it means the root directory of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder pathPrefix(String pathPrefix) {
            return pathPrefix(Output.of(pathPrefix));
        }

        /**
         * @param pollingInterval The reverse synchronization time intervals of the gateway file share. Value range: `15` ~ `36000`. **NOTE:** in copy mode + reverse synchronization is enabled Download file data, value range: `3600` ~ `36000`.
         * 
         * @return builder
         * 
         */
        public Builder pollingInterval(@Nullable Output<Integer> pollingInterval) {
            $.pollingInterval = pollingInterval;
            return this;
        }

        /**
         * @param pollingInterval The reverse synchronization time intervals of the gateway file share. Value range: `15` ~ `36000`. **NOTE:** in copy mode + reverse synchronization is enabled Download file data, value range: `3600` ~ `36000`.
         * 
         * @return builder
         * 
         */
        public Builder pollingInterval(Integer pollingInterval) {
            return pollingInterval(Output.of(pollingInterval));
        }

        /**
         * @param protocol Share types. Valid values: `SMB`, `NFS`.
         * 
         * @return builder
         * 
         */
        public Builder protocol(Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol Share types. Valid values: `SMB`, `NFS`.
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param remoteSync Whether to enable reverse synchronization of the gateway file share. Default value: `false`.
         * 
         * @return builder
         * 
         */
        public Builder remoteSync(@Nullable Output<Boolean> remoteSync) {
            $.remoteSync = remoteSync;
            return this;
        }

        /**
         * @param remoteSync Whether to enable reverse synchronization of the gateway file share. Default value: `false`.
         * 
         * @return builder
         * 
         */
        public Builder remoteSync(Boolean remoteSync) {
            return remoteSync(Output.of(remoteSync));
        }

        /**
         * @param remoteSyncDownload Copy mode, whether to download the file data. Default value: `false`. **NOTE:** only when the attribute `remote_sync` is `true` or acceded to by the speed synchronization group, this parameter will not take effect.
         * 
         * @return builder
         * 
         */
        public Builder remoteSyncDownload(@Nullable Output<Boolean> remoteSyncDownload) {
            $.remoteSyncDownload = remoteSyncDownload;
            return this;
        }

        /**
         * @param remoteSyncDownload Copy mode, whether to download the file data. Default value: `false`. **NOTE:** only when the attribute `remote_sync` is `true` or acceded to by the speed synchronization group, this parameter will not take effect.
         * 
         * @return builder
         * 
         */
        public Builder remoteSyncDownload(Boolean remoteSyncDownload) {
            return remoteSyncDownload(Output.of(remoteSyncDownload));
        }

        /**
         * @param roClientList File sharing NFS read-only client list (IP address or IP address range). Use commas (,) to separate multiple clients.
         * 
         * @return builder
         * 
         */
        public Builder roClientList(@Nullable Output<String> roClientList) {
            $.roClientList = roClientList;
            return this;
        }

        /**
         * @param roClientList File sharing NFS read-only client list (IP address or IP address range). Use commas (,) to separate multiple clients.
         * 
         * @return builder
         * 
         */
        public Builder roClientList(String roClientList) {
            return roClientList(Output.of(roClientList));
        }

        /**
         * @param roUserList The read-only client list. When Protocol for Server Message Block (SMB) to go back to.
         * 
         * @return builder
         * 
         */
        public Builder roUserList(@Nullable Output<String> roUserList) {
            $.roUserList = roUserList;
            return this;
        }

        /**
         * @param roUserList The read-only client list. When Protocol for Server Message Block (SMB) to go back to.
         * 
         * @return builder
         * 
         */
        public Builder roUserList(String roUserList) {
            return roUserList(Output.of(roUserList));
        }

        /**
         * @param rwClientList Read and write the client list. When Protocol NFS is returned when the status is.
         * 
         * @return builder
         * 
         */
        public Builder rwClientList(@Nullable Output<String> rwClientList) {
            $.rwClientList = rwClientList;
            return this;
        }

        /**
         * @param rwClientList Read and write the client list. When Protocol NFS is returned when the status is.
         * 
         * @return builder
         * 
         */
        public Builder rwClientList(String rwClientList) {
            return rwClientList(Output.of(rwClientList));
        }

        /**
         * @param rwUserList Read-write user list. When Protocol for Server Message Block (SMB) to go back to.
         * 
         * @return builder
         * 
         */
        public Builder rwUserList(@Nullable Output<String> rwUserList) {
            $.rwUserList = rwUserList;
            return this;
        }

        /**
         * @param rwUserList Read-write user list. When Protocol for Server Message Block (SMB) to go back to.
         * 
         * @return builder
         * 
         */
        public Builder rwUserList(String rwUserList) {
            return rwUserList(Output.of(rwUserList));
        }

        /**
         * @param squash The NFS protocol user mapping of the gateway file share. Valid values: `none`, `root_squash`, `all_squash`, `all_anonymous`. Default value: `none`. **NOTE:** The attribute is valid when the attribute `protocol` is `NFS`.
         * 
         * @return builder
         * 
         */
        public Builder squash(@Nullable Output<String> squash) {
            $.squash = squash;
            return this;
        }

        /**
         * @param squash The NFS protocol user mapping of the gateway file share. Valid values: `none`, `root_squash`, `all_squash`, `all_anonymous`. Default value: `none`. **NOTE:** The attribute is valid when the attribute `protocol` is `NFS`.
         * 
         * @return builder
         * 
         */
        public Builder squash(String squash) {
            return squash(Output.of(squash));
        }

        /**
         * @param supportArchive Whether to support the archive transparent read.
         * 
         * @return builder
         * 
         */
        public Builder supportArchive(@Nullable Output<Boolean> supportArchive) {
            $.supportArchive = supportArchive;
            return this;
        }

        /**
         * @param supportArchive Whether to support the archive transparent read.
         * 
         * @return builder
         * 
         */
        public Builder supportArchive(Boolean supportArchive) {
            return supportArchive(Output.of(supportArchive));
        }

        /**
         * @param transferAcceleration The set up gateway file share whether to enable transmission acceleration needs corresponding OSS Bucket enabled transport acceleration. **NOTE:** Gateway version &gt;= 1.3.0 above support.
         * 
         * @return builder
         * 
         */
        public Builder transferAcceleration(@Nullable Output<Boolean> transferAcceleration) {
            $.transferAcceleration = transferAcceleration;
            return this;
        }

        /**
         * @param transferAcceleration The set up gateway file share whether to enable transmission acceleration needs corresponding OSS Bucket enabled transport acceleration. **NOTE:** Gateway version &gt;= 1.3.0 above support.
         * 
         * @return builder
         * 
         */
        public Builder transferAcceleration(Boolean transferAcceleration) {
            return transferAcceleration(Output.of(transferAcceleration));
        }

        /**
         * @param windowsAcl Whether to enable by Windows access list (requires AD domain) the permissions control. Default value: `false`. **NOTE:** The attribute is valid when the attribute `protocol` is `SMB`. Gateway version &gt;= 1.0.45 above support.
         * 
         * @return builder
         * 
         */
        public Builder windowsAcl(@Nullable Output<Boolean> windowsAcl) {
            $.windowsAcl = windowsAcl;
            return this;
        }

        /**
         * @param windowsAcl Whether to enable by Windows access list (requires AD domain) the permissions control. Default value: `false`. **NOTE:** The attribute is valid when the attribute `protocol` is `SMB`. Gateway version &gt;= 1.0.45 above support.
         * 
         * @return builder
         * 
         */
        public Builder windowsAcl(Boolean windowsAcl) {
            return windowsAcl(Output.of(windowsAcl));
        }

        public GatewayFileShareArgs build() {
            if ($.gatewayFileShareName == null) {
                throw new MissingRequiredPropertyException("GatewayFileShareArgs", "gatewayFileShareName");
            }
            if ($.gatewayId == null) {
                throw new MissingRequiredPropertyException("GatewayFileShareArgs", "gatewayId");
            }
            if ($.localPath == null) {
                throw new MissingRequiredPropertyException("GatewayFileShareArgs", "localPath");
            }
            if ($.ossBucketName == null) {
                throw new MissingRequiredPropertyException("GatewayFileShareArgs", "ossBucketName");
            }
            if ($.ossEndpoint == null) {
                throw new MissingRequiredPropertyException("GatewayFileShareArgs", "ossEndpoint");
            }
            if ($.protocol == null) {
                throw new MissingRequiredPropertyException("GatewayFileShareArgs", "protocol");
            }
            return $;
        }
    }

}
