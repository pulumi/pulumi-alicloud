// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.mhub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAppsApp {
    /**
     * @return Application AppKey, which uniquely identifies an application when requested by the interface
     * 
     */
    private String appKey;
    /**
     * @return The Name of the App.
     * 
     */
    private String appName;
    /**
     * @return iOS application ID. Required when creating an iOS app. **NOTE:** Either `bundle_id` or `package_name` must be set.
     * 
     */
    private String bundleId;
    /**
     * @return The CreateTime of the App.
     * 
     */
    private String createTime;
    /**
     * @return Base64 string of picture.
     * 
     */
    private String encodedIcon;
    /**
     * @return The ID of the App.
     * 
     */
    private String id;
    /**
     * @return The Industry ID of the app. For information about Industry and how to use it, MHUB[Industry](https://help.aliyun.com/document_detail/201638.html).
     * 
     */
    private String industryId;
    /**
     * @return Android App package name.  **NOTE:** Either `bundle_id` or `package_name` must be set.
     * 
     */
    private String packageName;
    /**
     * @return The ID of the Product.
     * 
     */
    private String productId;
    /**
     * @return The type of the App. Valid values: `Android` and `iOS`.
     * 
     */
    private String type;

    private GetAppsApp() {}
    /**
     * @return Application AppKey, which uniquely identifies an application when requested by the interface
     * 
     */
    public String appKey() {
        return this.appKey;
    }
    /**
     * @return The Name of the App.
     * 
     */
    public String appName() {
        return this.appName;
    }
    /**
     * @return iOS application ID. Required when creating an iOS app. **NOTE:** Either `bundle_id` or `package_name` must be set.
     * 
     */
    public String bundleId() {
        return this.bundleId;
    }
    /**
     * @return The CreateTime of the App.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Base64 string of picture.
     * 
     */
    public String encodedIcon() {
        return this.encodedIcon;
    }
    /**
     * @return The ID of the App.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Industry ID of the app. For information about Industry and how to use it, MHUB[Industry](https://help.aliyun.com/document_detail/201638.html).
     * 
     */
    public String industryId() {
        return this.industryId;
    }
    /**
     * @return Android App package name.  **NOTE:** Either `bundle_id` or `package_name` must be set.
     * 
     */
    public String packageName() {
        return this.packageName;
    }
    /**
     * @return The ID of the Product.
     * 
     */
    public String productId() {
        return this.productId;
    }
    /**
     * @return The type of the App. Valid values: `Android` and `iOS`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAppsApp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String appKey;
        private String appName;
        private String bundleId;
        private String createTime;
        private String encodedIcon;
        private String id;
        private String industryId;
        private String packageName;
        private String productId;
        private String type;
        public Builder() {}
        public Builder(GetAppsApp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appKey = defaults.appKey;
    	      this.appName = defaults.appName;
    	      this.bundleId = defaults.bundleId;
    	      this.createTime = defaults.createTime;
    	      this.encodedIcon = defaults.encodedIcon;
    	      this.id = defaults.id;
    	      this.industryId = defaults.industryId;
    	      this.packageName = defaults.packageName;
    	      this.productId = defaults.productId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder appKey(String appKey) {
            if (appKey == null) {
              throw new MissingRequiredPropertyException("GetAppsApp", "appKey");
            }
            this.appKey = appKey;
            return this;
        }
        @CustomType.Setter
        public Builder appName(String appName) {
            if (appName == null) {
              throw new MissingRequiredPropertyException("GetAppsApp", "appName");
            }
            this.appName = appName;
            return this;
        }
        @CustomType.Setter
        public Builder bundleId(String bundleId) {
            if (bundleId == null) {
              throw new MissingRequiredPropertyException("GetAppsApp", "bundleId");
            }
            this.bundleId = bundleId;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetAppsApp", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder encodedIcon(String encodedIcon) {
            if (encodedIcon == null) {
              throw new MissingRequiredPropertyException("GetAppsApp", "encodedIcon");
            }
            this.encodedIcon = encodedIcon;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAppsApp", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder industryId(String industryId) {
            if (industryId == null) {
              throw new MissingRequiredPropertyException("GetAppsApp", "industryId");
            }
            this.industryId = industryId;
            return this;
        }
        @CustomType.Setter
        public Builder packageName(String packageName) {
            if (packageName == null) {
              throw new MissingRequiredPropertyException("GetAppsApp", "packageName");
            }
            this.packageName = packageName;
            return this;
        }
        @CustomType.Setter
        public Builder productId(String productId) {
            if (productId == null) {
              throw new MissingRequiredPropertyException("GetAppsApp", "productId");
            }
            this.productId = productId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetAppsApp", "type");
            }
            this.type = type;
            return this;
        }
        public GetAppsApp build() {
            final var _resultValue = new GetAppsApp();
            _resultValue.appKey = appKey;
            _resultValue.appName = appName;
            _resultValue.bundleId = bundleId;
            _resultValue.createTime = createTime;
            _resultValue.encodedIcon = encodedIcon;
            _resultValue.id = id;
            _resultValue.industryId = industryId;
            _resultValue.packageName = packageName;
            _resultValue.productId = productId;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
