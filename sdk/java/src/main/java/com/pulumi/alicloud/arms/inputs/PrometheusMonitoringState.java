// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.arms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrometheusMonitoringState extends com.pulumi.resources.ResourceArgs {

    public static final PrometheusMonitoringState Empty = new PrometheusMonitoringState();

    /**
     * The ID of the prometheus instance.
     * 
     */
    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    /**
     * @return The ID of the prometheus instance.
     * 
     */
    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * Yaml configuration for monitoring.
     * 
     */
    @Import(name="configYaml")
    private @Nullable Output<String> configYaml;

    /**
     * @return Yaml configuration for monitoring.
     * 
     */
    public Optional<Output<String>> configYaml() {
        return Optional.ofNullable(this.configYaml);
    }

    /**
     * The name of the resource.
     * 
     */
    @Import(name="monitoringName")
    private @Nullable Output<String> monitoringName;

    /**
     * @return The name of the resource.
     * 
     */
    public Optional<Output<String>> monitoringName() {
        return Optional.ofNullable(this.monitoringName);
    }

    /**
     * Valid values: `stop`, `run`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Valid values: `stop`, `run`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Monitoring type: `serviceMonitor`, `podMonitor`, `customJob`, `probe`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Monitoring type: `serviceMonitor`, `podMonitor`, `customJob`, `probe`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private PrometheusMonitoringState() {}

    private PrometheusMonitoringState(PrometheusMonitoringState $) {
        this.clusterId = $.clusterId;
        this.configYaml = $.configYaml;
        this.monitoringName = $.monitoringName;
        this.status = $.status;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrometheusMonitoringState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrometheusMonitoringState $;

        public Builder() {
            $ = new PrometheusMonitoringState();
        }

        public Builder(PrometheusMonitoringState defaults) {
            $ = new PrometheusMonitoringState(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId The ID of the prometheus instance.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The ID of the prometheus instance.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param configYaml Yaml configuration for monitoring.
         * 
         * @return builder
         * 
         */
        public Builder configYaml(@Nullable Output<String> configYaml) {
            $.configYaml = configYaml;
            return this;
        }

        /**
         * @param configYaml Yaml configuration for monitoring.
         * 
         * @return builder
         * 
         */
        public Builder configYaml(String configYaml) {
            return configYaml(Output.of(configYaml));
        }

        /**
         * @param monitoringName The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder monitoringName(@Nullable Output<String> monitoringName) {
            $.monitoringName = monitoringName;
            return this;
        }

        /**
         * @param monitoringName The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder monitoringName(String monitoringName) {
            return monitoringName(Output.of(monitoringName));
        }

        /**
         * @param status Valid values: `stop`, `run`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Valid values: `stop`, `run`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param type Monitoring type: `serviceMonitor`, `podMonitor`, `customJob`, `probe`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Monitoring type: `serviceMonitor`, `podMonitor`, `customJob`, `probe`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public PrometheusMonitoringState build() {
            return $;
        }
    }

}
