// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.esa.HttpsBasicConfigurationArgs;
import com.pulumi.alicloud.esa.inputs.HttpsBasicConfigurationState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a ESA Https Basic Configuration resource.
 * 
 * For information about ESA Https Basic Configuration and how to use it, see [What is Https Basic Configuration](https://next.api.alibabacloud.com/document/ESA/2024-09-10/CreateHttpsBasicConfiguration).
 * 
 * &gt; **NOTE:** Available since v1.243.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.esa.RatePlanInstance;
 * import com.pulumi.alicloud.esa.RatePlanInstanceArgs;
 * import com.pulumi.alicloud.esa.Site;
 * import com.pulumi.alicloud.esa.SiteArgs;
 * import com.pulumi.alicloud.esa.HttpsBasicConfiguration;
 * import com.pulumi.alicloud.esa.HttpsBasicConfigurationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         var example = new RatePlanInstance("example", RatePlanInstanceArgs.builder()
 *             .type("NS")
 *             .autoRenew(false)
 *             .period(1)
 *             .paymentType("Subscription")
 *             .coverage("overseas")
 *             .autoPay(true)
 *             .planName("high")
 *             .build());
 * 
 *         var resourceHttpBasicConfigurationSetExample = new Site("resourceHttpBasicConfigurationSetExample", SiteArgs.builder()
 *             .siteName("gositecdn.cn")
 *             .instanceId(example.id())
 *             .coverage("overseas")
 *             .accessType("NS")
 *             .build());
 * 
 *         var default_ = new HttpsBasicConfiguration("default", HttpsBasicConfigurationArgs.builder()
 *             .https("on")
 *             .rule("true")
 *             .ruleName("example2")
 *             .siteId(resourceHttpBasicConfigurationSetExample.id())
 *             .ruleEnable("on")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ESA Https Basic Configuration can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:esa/httpsBasicConfiguration:HttpsBasicConfiguration example &lt;site_id&gt;:&lt;config_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:esa/httpsBasicConfiguration:HttpsBasicConfiguration")
public class HttpsBasicConfiguration extends com.pulumi.resources.CustomResource {
    /**
     * Custom cipher suite, indicating the specific encryption algorithm selected when CiphersuiteGroup is set to custom.
     * 
     */
    @Export(name="ciphersuite", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ciphersuite;

    /**
     * @return Custom cipher suite, indicating the specific encryption algorithm selected when CiphersuiteGroup is set to custom.
     * 
     */
    public Output<Optional<String>> ciphersuite() {
        return Codegen.optional(this.ciphersuite);
    }
    /**
     * Cipher suite group. Default is all cipher suites. Possible values:
     * - all: All cipher suites.
     * - strict: Strong cipher suites.
     * - custom: Custom cipher suites.
     * 
     */
    @Export(name="ciphersuiteGroup", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ciphersuiteGroup;

    /**
     * @return Cipher suite group. Default is all cipher suites. Possible values:
     * - all: All cipher suites.
     * - strict: Strong cipher suites.
     * - custom: Custom cipher suites.
     * 
     */
    public Output<Optional<String>> ciphersuiteGroup() {
        return Codegen.optional(this.ciphersuiteGroup);
    }
    /**
     * ConfigId of the configuration, which can be obtained by calling the [ListHttpsBasicConfigurations](https://www.alibabacloud.com/help/en/doc-detail/2867470.html) interface.
     * 
     */
    @Export(name="configId", refs={Integer.class}, tree="[0]")
    private Output<Integer> configId;

    /**
     * @return ConfigId of the configuration, which can be obtained by calling the [ListHttpsBasicConfigurations](https://www.alibabacloud.com/help/en/doc-detail/2867470.html) interface.
     * 
     */
    public Output<Integer> configId() {
        return this.configId;
    }
    /**
     * Indicates whether HTTP2 is enabled. Default is on. Possible values:
     * - on: Enabled.
     * - off: Disabled.
     * 
     */
    @Export(name="http2", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> http2;

    /**
     * @return Indicates whether HTTP2 is enabled. Default is on. Possible values:
     * - on: Enabled.
     * - off: Disabled.
     * 
     */
    public Output<Optional<String>> http2() {
        return Codegen.optional(this.http2);
    }
    /**
     * Whether to enable HTTP3, which is enabled by default. The value can be:
     * - on: Enabled.
     * - off: Disabled.
     * 
     */
    @Export(name="http3", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> http3;

    /**
     * @return Whether to enable HTTP3, which is enabled by default. The value can be:
     * - on: Enabled.
     * - off: Disabled.
     * 
     */
    public Output<Optional<String>> http3() {
        return Codegen.optional(this.http3);
    }
    /**
     * Whether to enable HTTPS. Default is enabled. Possible values:
     * - on: Enable.
     * - off: Disable.
     * 
     */
    @Export(name="https", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> https;

    /**
     * @return Whether to enable HTTPS. Default is enabled. Possible values:
     * - on: Enable.
     * - off: Disable.
     * 
     */
    public Output<Optional<String>> https() {
        return Codegen.optional(this.https);
    }
    /**
     * Indicates whether OCSP is enabled. Default is off. Possible values:
     * - on: Enabled.
     * - off: Disabled.
     * 
     */
    @Export(name="ocspStapling", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ocspStapling;

    /**
     * @return Indicates whether OCSP is enabled. Default is off. Possible values:
     * - on: Enabled.
     * - off: Disabled.
     * 
     */
    public Output<Optional<String>> ocspStapling() {
        return Codegen.optional(this.ocspStapling);
    }
    /**
     * Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
     * -  Match all incoming requests: value set to true
     * -  Match specified request: Set the value to a custom expression, for example: (http.host eq \&#34;video.example.com\&#34;)
     * 
     */
    @Export(name="rule", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> rule;

    /**
     * @return Rule content, using conditional expressions to match user requests. When adding global configuration, this parameter does not need to be set. There are two usage scenarios:
     * -  Match all incoming requests: value set to true
     * -  Match specified request: Set the value to a custom expression, for example: (http.host eq \&#34;video.example.com\&#34;)
     * 
     */
    public Output<Optional<String>> rule() {
        return Codegen.optional(this.rule);
    }
    /**
     * Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
     * - on: open.
     * - off: close.
     * 
     */
    @Export(name="ruleEnable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ruleEnable;

    /**
     * @return Rule switch. When adding global configuration, this parameter does not need to be set. Value range:
     * - on: open.
     * - off: close.
     * 
     */
    public Output<Optional<String>> ruleEnable() {
        return Codegen.optional(this.ruleEnable);
    }
    /**
     * Rule name. When adding global configuration, this parameter does not need to be set.
     * 
     */
    @Export(name="ruleName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ruleName;

    /**
     * @return Rule name. When adding global configuration, this parameter does not need to be set.
     * 
     */
    public Output<Optional<String>> ruleName() {
        return Codegen.optional(this.ruleName);
    }
    /**
     * Site ID, which can be obtained by calling the [ListSites](https://next.api.alibabacloud.com/document/ESA/2024-09-10/ListSites) interface.
     * 
     */
    @Export(name="siteId", refs={Integer.class}, tree="[0]")
    private Output<Integer> siteId;

    /**
     * @return Site ID, which can be obtained by calling the [ListSites](https://next.api.alibabacloud.com/document/ESA/2024-09-10/ListSites) interface.
     * 
     */
    public Output<Integer> siteId() {
        return this.siteId;
    }
    /**
     * Whether to enable TLS1.0. Default is disabled. Possible values:
     * - on: Enable.
     * - off: Disable.
     * 
     */
    @Export(name="tls10", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tls10;

    /**
     * @return Whether to enable TLS1.0. Default is disabled. Possible values:
     * - on: Enable.
     * - off: Disable.
     * 
     */
    public Output<Optional<String>> tls10() {
        return Codegen.optional(this.tls10);
    }
    /**
     * Whether to enable TLS1.1. Default is enabled. Possible values:
     * - on: Enable.
     * - off: Disable.
     * 
     */
    @Export(name="tls11", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tls11;

    /**
     * @return Whether to enable TLS1.1. Default is enabled. Possible values:
     * - on: Enable.
     * - off: Disable.
     * 
     */
    public Output<Optional<String>> tls11() {
        return Codegen.optional(this.tls11);
    }
    /**
     * Whether to enable TLS1.2. Default is enabled. Possible values:
     * - on: Enable.
     * - off: Disable.
     * 
     */
    @Export(name="tls12", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tls12;

    /**
     * @return Whether to enable TLS1.2. Default is enabled. Possible values:
     * - on: Enable.
     * - off: Disable.
     * 
     */
    public Output<Optional<String>> tls12() {
        return Codegen.optional(this.tls12);
    }
    /**
     * Whether to enable TLS1.3. Default is enabled. Possible values:
     * - on: Enable.
     * - off: Disable.
     * 
     */
    @Export(name="tls13", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tls13;

    /**
     * @return Whether to enable TLS1.3. Default is enabled. Possible values:
     * - on: Enable.
     * - off: Disable.
     * 
     */
    public Output<Optional<String>> tls13() {
        return Codegen.optional(this.tls13);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public HttpsBasicConfiguration(java.lang.String name) {
        this(name, HttpsBasicConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public HttpsBasicConfiguration(java.lang.String name, HttpsBasicConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public HttpsBasicConfiguration(java.lang.String name, HttpsBasicConfigurationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:esa/httpsBasicConfiguration:HttpsBasicConfiguration", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private HttpsBasicConfiguration(java.lang.String name, Output<java.lang.String> id, @Nullable HttpsBasicConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:esa/httpsBasicConfiguration:HttpsBasicConfiguration", name, state, makeResourceOptions(options, id), false);
    }

    private static HttpsBasicConfigurationArgs makeArgs(HttpsBasicConfigurationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? HttpsBasicConfigurationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static HttpsBasicConfiguration get(java.lang.String name, Output<java.lang.String> id, @Nullable HttpsBasicConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new HttpsBasicConfiguration(name, id, state, options);
    }
}
