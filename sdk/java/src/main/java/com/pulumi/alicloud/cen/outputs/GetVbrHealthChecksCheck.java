// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVbrHealthChecksCheck {
    /**
     * @return The ID of the Cloud Enterprise Network (CEN) instance.
     * 
     */
    private String cenId;
    /**
     * @return The time interval at which probe packets are sent during the health check.
     * 
     */
    private Integer healthCheckInterval;
    /**
     * @return The source IP address of the health check.
     * 
     */
    private String healthCheckSourceIp;
    /**
     * @return The destination IP address of the health check.
     * 
     */
    private String healthCheckTargetIp;
    /**
     * @return The number of probe packets that are sent during the health check.
     * 
     */
    private Integer healthyThreshold;
    /**
     * @return The ID of the CEN VBR Heath Check.
     * 
     */
    private String id;
    /**
     * @return The ID of the VBR instance.
     * 
     */
    private String vbrInstanceId;
    /**
     * @return The ID of the region where the VBR instance is deployed.
     * 
     */
    private String vbrInstanceRegionId;

    private GetVbrHealthChecksCheck() {}
    /**
     * @return The ID of the Cloud Enterprise Network (CEN) instance.
     * 
     */
    public String cenId() {
        return this.cenId;
    }
    /**
     * @return The time interval at which probe packets are sent during the health check.
     * 
     */
    public Integer healthCheckInterval() {
        return this.healthCheckInterval;
    }
    /**
     * @return The source IP address of the health check.
     * 
     */
    public String healthCheckSourceIp() {
        return this.healthCheckSourceIp;
    }
    /**
     * @return The destination IP address of the health check.
     * 
     */
    public String healthCheckTargetIp() {
        return this.healthCheckTargetIp;
    }
    /**
     * @return The number of probe packets that are sent during the health check.
     * 
     */
    public Integer healthyThreshold() {
        return this.healthyThreshold;
    }
    /**
     * @return The ID of the CEN VBR Heath Check.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the VBR instance.
     * 
     */
    public String vbrInstanceId() {
        return this.vbrInstanceId;
    }
    /**
     * @return The ID of the region where the VBR instance is deployed.
     * 
     */
    public String vbrInstanceRegionId() {
        return this.vbrInstanceRegionId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVbrHealthChecksCheck defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cenId;
        private Integer healthCheckInterval;
        private String healthCheckSourceIp;
        private String healthCheckTargetIp;
        private Integer healthyThreshold;
        private String id;
        private String vbrInstanceId;
        private String vbrInstanceRegionId;
        public Builder() {}
        public Builder(GetVbrHealthChecksCheck defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cenId = defaults.cenId;
    	      this.healthCheckInterval = defaults.healthCheckInterval;
    	      this.healthCheckSourceIp = defaults.healthCheckSourceIp;
    	      this.healthCheckTargetIp = defaults.healthCheckTargetIp;
    	      this.healthyThreshold = defaults.healthyThreshold;
    	      this.id = defaults.id;
    	      this.vbrInstanceId = defaults.vbrInstanceId;
    	      this.vbrInstanceRegionId = defaults.vbrInstanceRegionId;
        }

        @CustomType.Setter
        public Builder cenId(String cenId) {
            this.cenId = Objects.requireNonNull(cenId);
            return this;
        }
        @CustomType.Setter
        public Builder healthCheckInterval(Integer healthCheckInterval) {
            this.healthCheckInterval = Objects.requireNonNull(healthCheckInterval);
            return this;
        }
        @CustomType.Setter
        public Builder healthCheckSourceIp(String healthCheckSourceIp) {
            this.healthCheckSourceIp = Objects.requireNonNull(healthCheckSourceIp);
            return this;
        }
        @CustomType.Setter
        public Builder healthCheckTargetIp(String healthCheckTargetIp) {
            this.healthCheckTargetIp = Objects.requireNonNull(healthCheckTargetIp);
            return this;
        }
        @CustomType.Setter
        public Builder healthyThreshold(Integer healthyThreshold) {
            this.healthyThreshold = Objects.requireNonNull(healthyThreshold);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder vbrInstanceId(String vbrInstanceId) {
            this.vbrInstanceId = Objects.requireNonNull(vbrInstanceId);
            return this;
        }
        @CustomType.Setter
        public Builder vbrInstanceRegionId(String vbrInstanceRegionId) {
            this.vbrInstanceRegionId = Objects.requireNonNull(vbrInstanceRegionId);
            return this;
        }
        public GetVbrHealthChecksCheck build() {
            final var o = new GetVbrHealthChecksCheck();
            o.cenId = cenId;
            o.healthCheckInterval = healthCheckInterval;
            o.healthCheckSourceIp = healthCheckSourceIp;
            o.healthCheckTargetIp = healthCheckTargetIp;
            o.healthyThreshold = healthyThreshold;
            o.id = id;
            o.vbrInstanceId = vbrInstanceId;
            o.vbrInstanceRegionId = vbrInstanceRegionId;
            return o;
        }
    }
}
