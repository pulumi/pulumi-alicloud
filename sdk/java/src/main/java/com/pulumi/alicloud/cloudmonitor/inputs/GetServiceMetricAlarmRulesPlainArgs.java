// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudmonitor.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetServiceMetricAlarmRulesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetServiceMetricAlarmRulesPlainArgs Empty = new GetServiceMetricAlarmRulesPlainArgs();

    /**
     * The monitoring dimensions of the specified resource.
     * 
     */
    @Import(name="dimensions")
    private @Nullable String dimensions;

    /**
     * @return The monitoring dimensions of the specified resource.
     * 
     */
    public Optional<String> dimensions() {
        return Optional.ofNullable(this.dimensions);
    }

    /**
     * A list of Metric Alarm Rule IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable List<String> ids;

    /**
     * @return A list of Metric Alarm Rule IDs.
     * 
     */
    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * The name of the metric.
     * 
     */
    @Import(name="metricName")
    private @Nullable String metricName;

    /**
     * @return The name of the metric.
     * 
     */
    public Optional<String> metricName() {
        return Optional.ofNullable(this.metricName);
    }

    /**
     * The namespace of the cloud service.
     * 
     */
    @Import(name="namespace")
    private @Nullable String namespace;

    /**
     * @return The namespace of the cloud service.
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The name of the alert rule.
     * 
     */
    @Import(name="ruleName")
    private @Nullable String ruleName;

    /**
     * @return The name of the alert rule.
     * 
     */
    public Optional<String> ruleName() {
        return Optional.ofNullable(this.ruleName);
    }

    /**
     * Specifies whether to query enabled or disabled alert rules. Valid values: `true`, `false`.
     * 
     */
    @Import(name="status")
    private @Nullable Boolean status;

    /**
     * @return Specifies whether to query enabled or disabled alert rules. Valid values: `true`, `false`.
     * 
     */
    public Optional<Boolean> status() {
        return Optional.ofNullable(this.status);
    }

    private GetServiceMetricAlarmRulesPlainArgs() {}

    private GetServiceMetricAlarmRulesPlainArgs(GetServiceMetricAlarmRulesPlainArgs $) {
        this.dimensions = $.dimensions;
        this.ids = $.ids;
        this.metricName = $.metricName;
        this.namespace = $.namespace;
        this.outputFile = $.outputFile;
        this.ruleName = $.ruleName;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServiceMetricAlarmRulesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServiceMetricAlarmRulesPlainArgs $;

        public Builder() {
            $ = new GetServiceMetricAlarmRulesPlainArgs();
        }

        public Builder(GetServiceMetricAlarmRulesPlainArgs defaults) {
            $ = new GetServiceMetricAlarmRulesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dimensions The monitoring dimensions of the specified resource.
         * 
         * @return builder
         * 
         */
        public Builder dimensions(@Nullable String dimensions) {
            $.dimensions = dimensions;
            return this;
        }

        /**
         * @param ids A list of Metric Alarm Rule IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Metric Alarm Rule IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param metricName The name of the metric.
         * 
         * @return builder
         * 
         */
        public Builder metricName(@Nullable String metricName) {
            $.metricName = metricName;
            return this;
        }

        /**
         * @param namespace The namespace of the cloud service.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable String namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param ruleName The name of the alert rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(@Nullable String ruleName) {
            $.ruleName = ruleName;
            return this;
        }

        /**
         * @param status Specifies whether to query enabled or disabled alert rules. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Boolean status) {
            $.status = status;
            return this;
        }

        public GetServiceMetricAlarmRulesPlainArgs build() {
            return $;
        }
    }

}
