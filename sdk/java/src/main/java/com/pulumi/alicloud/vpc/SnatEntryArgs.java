// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SnatEntryArgs extends com.pulumi.resources.ResourceArgs {

    public static final SnatEntryArgs Empty = new SnatEntryArgs();

    /**
     * The name of snat entry.
     * 
     */
    @Import(name="snatEntryName")
    private @Nullable Output<String> snatEntryName;

    /**
     * @return The name of snat entry.
     * 
     */
    public Optional<Output<String>> snatEntryName() {
        return Optional.ofNullable(this.snatEntryName);
    }

    /**
     * The SNAT ip address, the ip must along bandwidth package public ip which `alicloud.vpc.NatGateway` argument `bandwidth_packages`.
     * 
     */
    @Import(name="snatIp", required=true)
    private Output<String> snatIp;

    /**
     * @return The SNAT ip address, the ip must along bandwidth package public ip which `alicloud.vpc.NatGateway` argument `bandwidth_packages`.
     * 
     */
    public Output<String> snatIp() {
        return this.snatIp;
    }

    /**
     * The value can get from `alicloud.vpc.NatGateway` Attributes &#34;snat_table_ids&#34;.
     * 
     */
    @Import(name="snatTableId", required=true)
    private Output<String> snatTableId;

    /**
     * @return The value can get from `alicloud.vpc.NatGateway` Attributes &#34;snat_table_ids&#34;.
     * 
     */
    public Output<String> snatTableId() {
        return this.snatTableId;
    }

    /**
     * The private network segment of Ecs. This parameter and the `source_vswitch_id` parameter are mutually exclusive and cannot appear at the same time.
     * 
     */
    @Import(name="sourceCidr")
    private @Nullable Output<String> sourceCidr;

    /**
     * @return The private network segment of Ecs. This parameter and the `source_vswitch_id` parameter are mutually exclusive and cannot appear at the same time.
     * 
     */
    public Optional<Output<String>> sourceCidr() {
        return Optional.ofNullable(this.sourceCidr);
    }

    /**
     * The vswitch ID.
     * 
     */
    @Import(name="sourceVswitchId")
    private @Nullable Output<String> sourceVswitchId;

    /**
     * @return The vswitch ID.
     * 
     */
    public Optional<Output<String>> sourceVswitchId() {
        return Optional.ofNullable(this.sourceVswitchId);
    }

    private SnatEntryArgs() {}

    private SnatEntryArgs(SnatEntryArgs $) {
        this.snatEntryName = $.snatEntryName;
        this.snatIp = $.snatIp;
        this.snatTableId = $.snatTableId;
        this.sourceCidr = $.sourceCidr;
        this.sourceVswitchId = $.sourceVswitchId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SnatEntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SnatEntryArgs $;

        public Builder() {
            $ = new SnatEntryArgs();
        }

        public Builder(SnatEntryArgs defaults) {
            $ = new SnatEntryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param snatEntryName The name of snat entry.
         * 
         * @return builder
         * 
         */
        public Builder snatEntryName(@Nullable Output<String> snatEntryName) {
            $.snatEntryName = snatEntryName;
            return this;
        }

        /**
         * @param snatEntryName The name of snat entry.
         * 
         * @return builder
         * 
         */
        public Builder snatEntryName(String snatEntryName) {
            return snatEntryName(Output.of(snatEntryName));
        }

        /**
         * @param snatIp The SNAT ip address, the ip must along bandwidth package public ip which `alicloud.vpc.NatGateway` argument `bandwidth_packages`.
         * 
         * @return builder
         * 
         */
        public Builder snatIp(Output<String> snatIp) {
            $.snatIp = snatIp;
            return this;
        }

        /**
         * @param snatIp The SNAT ip address, the ip must along bandwidth package public ip which `alicloud.vpc.NatGateway` argument `bandwidth_packages`.
         * 
         * @return builder
         * 
         */
        public Builder snatIp(String snatIp) {
            return snatIp(Output.of(snatIp));
        }

        /**
         * @param snatTableId The value can get from `alicloud.vpc.NatGateway` Attributes &#34;snat_table_ids&#34;.
         * 
         * @return builder
         * 
         */
        public Builder snatTableId(Output<String> snatTableId) {
            $.snatTableId = snatTableId;
            return this;
        }

        /**
         * @param snatTableId The value can get from `alicloud.vpc.NatGateway` Attributes &#34;snat_table_ids&#34;.
         * 
         * @return builder
         * 
         */
        public Builder snatTableId(String snatTableId) {
            return snatTableId(Output.of(snatTableId));
        }

        /**
         * @param sourceCidr The private network segment of Ecs. This parameter and the `source_vswitch_id` parameter are mutually exclusive and cannot appear at the same time.
         * 
         * @return builder
         * 
         */
        public Builder sourceCidr(@Nullable Output<String> sourceCidr) {
            $.sourceCidr = sourceCidr;
            return this;
        }

        /**
         * @param sourceCidr The private network segment of Ecs. This parameter and the `source_vswitch_id` parameter are mutually exclusive and cannot appear at the same time.
         * 
         * @return builder
         * 
         */
        public Builder sourceCidr(String sourceCidr) {
            return sourceCidr(Output.of(sourceCidr));
        }

        /**
         * @param sourceVswitchId The vswitch ID.
         * 
         * @return builder
         * 
         */
        public Builder sourceVswitchId(@Nullable Output<String> sourceVswitchId) {
            $.sourceVswitchId = sourceVswitchId;
            return this;
        }

        /**
         * @param sourceVswitchId The vswitch ID.
         * 
         * @return builder
         * 
         */
        public Builder sourceVswitchId(String sourceVswitchId) {
            return sourceVswitchId(Output.of(sourceVswitchId));
        }

        public SnatEntryArgs build() {
            if ($.snatIp == null) {
                throw new MissingRequiredPropertyException("SnatEntryArgs", "snatIp");
            }
            if ($.snatTableId == null) {
                throw new MissingRequiredPropertyException("SnatEntryArgs", "snatTableId");
            }
            return $;
        }
    }

}
