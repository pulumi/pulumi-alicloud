// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eds.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetNasFileSystemsSystem {
    /**
     * @return The capacity of nas file system.
     * 
     */
    private String capacity;
    /**
     * @return The create time of nas file system.
     * 
     */
    private String createTime;
    /**
     * @return The description of nas file system.
     * 
     */
    private String description;
    /**
     * @return The filesystem id of nas file system.
     * 
     */
    private String fileSystemId;
    /**
     * @return The type of nas file system.
     * 
     */
    private String fileSystemType;
    /**
     * @return The ID of the Nas File System.
     * 
     */
    private String id;
    /**
     * @return The size of metered.
     * 
     */
    private String meteredSize;
    /**
     * @return The domain of mount target.
     * 
     */
    private String mountTargetDomain;
    /**
     * @return The status of mount target. Valid values: `Pending`, `Active`, `Inactive`,`Deleting`,`Invalid`.
     * 
     */
    private String mountTargetStatus;
    /**
     * @return The name of nas file system.
     * 
     */
    private String nasFileSystemName;
    /**
     * @return The ID of office site.
     * 
     */
    private String officeSiteId;
    /**
     * @return The name of office site.
     * 
     */
    private String officeSiteName;
    /**
     * @return The status of nas file system. Valid values: `Pending`, `Running`, `Stopped`,`Deleting`, `Deleted`, `Invalid`.
     * 
     */
    private String status;
    /**
     * @return The storage type of nas file system.
     * 
     */
    private String storageType;
    /**
     * @return Whether to support Acl.
     * 
     */
    private Boolean supportAcl;
    /**
     * @return The zone id of nas file system.
     * 
     */
    private String zoneId;

    private GetNasFileSystemsSystem() {}
    /**
     * @return The capacity of nas file system.
     * 
     */
    public String capacity() {
        return this.capacity;
    }
    /**
     * @return The create time of nas file system.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The description of nas file system.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The filesystem id of nas file system.
     * 
     */
    public String fileSystemId() {
        return this.fileSystemId;
    }
    /**
     * @return The type of nas file system.
     * 
     */
    public String fileSystemType() {
        return this.fileSystemType;
    }
    /**
     * @return The ID of the Nas File System.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The size of metered.
     * 
     */
    public String meteredSize() {
        return this.meteredSize;
    }
    /**
     * @return The domain of mount target.
     * 
     */
    public String mountTargetDomain() {
        return this.mountTargetDomain;
    }
    /**
     * @return The status of mount target. Valid values: `Pending`, `Active`, `Inactive`,`Deleting`,`Invalid`.
     * 
     */
    public String mountTargetStatus() {
        return this.mountTargetStatus;
    }
    /**
     * @return The name of nas file system.
     * 
     */
    public String nasFileSystemName() {
        return this.nasFileSystemName;
    }
    /**
     * @return The ID of office site.
     * 
     */
    public String officeSiteId() {
        return this.officeSiteId;
    }
    /**
     * @return The name of office site.
     * 
     */
    public String officeSiteName() {
        return this.officeSiteName;
    }
    /**
     * @return The status of nas file system. Valid values: `Pending`, `Running`, `Stopped`,`Deleting`, `Deleted`, `Invalid`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The storage type of nas file system.
     * 
     */
    public String storageType() {
        return this.storageType;
    }
    /**
     * @return Whether to support Acl.
     * 
     */
    public Boolean supportAcl() {
        return this.supportAcl;
    }
    /**
     * @return The zone id of nas file system.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNasFileSystemsSystem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String capacity;
        private String createTime;
        private String description;
        private String fileSystemId;
        private String fileSystemType;
        private String id;
        private String meteredSize;
        private String mountTargetDomain;
        private String mountTargetStatus;
        private String nasFileSystemName;
        private String officeSiteId;
        private String officeSiteName;
        private String status;
        private String storageType;
        private Boolean supportAcl;
        private String zoneId;
        public Builder() {}
        public Builder(GetNasFileSystemsSystem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacity = defaults.capacity;
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.fileSystemId = defaults.fileSystemId;
    	      this.fileSystemType = defaults.fileSystemType;
    	      this.id = defaults.id;
    	      this.meteredSize = defaults.meteredSize;
    	      this.mountTargetDomain = defaults.mountTargetDomain;
    	      this.mountTargetStatus = defaults.mountTargetStatus;
    	      this.nasFileSystemName = defaults.nasFileSystemName;
    	      this.officeSiteId = defaults.officeSiteId;
    	      this.officeSiteName = defaults.officeSiteName;
    	      this.status = defaults.status;
    	      this.storageType = defaults.storageType;
    	      this.supportAcl = defaults.supportAcl;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder capacity(String capacity) {
            this.capacity = Objects.requireNonNull(capacity);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemId(String fileSystemId) {
            this.fileSystemId = Objects.requireNonNull(fileSystemId);
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemType(String fileSystemType) {
            this.fileSystemType = Objects.requireNonNull(fileSystemType);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder meteredSize(String meteredSize) {
            this.meteredSize = Objects.requireNonNull(meteredSize);
            return this;
        }
        @CustomType.Setter
        public Builder mountTargetDomain(String mountTargetDomain) {
            this.mountTargetDomain = Objects.requireNonNull(mountTargetDomain);
            return this;
        }
        @CustomType.Setter
        public Builder mountTargetStatus(String mountTargetStatus) {
            this.mountTargetStatus = Objects.requireNonNull(mountTargetStatus);
            return this;
        }
        @CustomType.Setter
        public Builder nasFileSystemName(String nasFileSystemName) {
            this.nasFileSystemName = Objects.requireNonNull(nasFileSystemName);
            return this;
        }
        @CustomType.Setter
        public Builder officeSiteId(String officeSiteId) {
            this.officeSiteId = Objects.requireNonNull(officeSiteId);
            return this;
        }
        @CustomType.Setter
        public Builder officeSiteName(String officeSiteName) {
            this.officeSiteName = Objects.requireNonNull(officeSiteName);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder storageType(String storageType) {
            this.storageType = Objects.requireNonNull(storageType);
            return this;
        }
        @CustomType.Setter
        public Builder supportAcl(Boolean supportAcl) {
            this.supportAcl = Objects.requireNonNull(supportAcl);
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            this.zoneId = Objects.requireNonNull(zoneId);
            return this;
        }
        public GetNasFileSystemsSystem build() {
            final var o = new GetNasFileSystemsSystem();
            o.capacity = capacity;
            o.createTime = createTime;
            o.description = description;
            o.fileSystemId = fileSystemId;
            o.fileSystemType = fileSystemType;
            o.id = id;
            o.meteredSize = meteredSize;
            o.mountTargetDomain = mountTargetDomain;
            o.mountTargetStatus = mountTargetStatus;
            o.nasFileSystemName = nasFileSystemName;
            o.officeSiteId = officeSiteId;
            o.officeSiteName = officeSiteName;
            o.status = status;
            o.storageType = storageType;
            o.supportAcl = supportAcl;
            o.zoneId = zoneId;
            return o;
        }
    }
}
