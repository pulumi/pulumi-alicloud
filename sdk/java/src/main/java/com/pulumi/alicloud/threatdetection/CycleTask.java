// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.threatdetection.CycleTaskArgs;
import com.pulumi.alicloud.threatdetection.inputs.CycleTaskState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Threat Detection Cycle Task resource.
 * 
 * Configure periodic tasks in Security Center.
 * 
 * For information about Threat Detection Cycle Task and how to use it, see [What is Cycle Task](https://next.api.alibabacloud.com/document/Sas/2018-12-03/CreateCycleTask).
 * 
 * &gt; **NOTE:** Available since v1.253.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.threatdetection.CycleTask;
 * import com.pulumi.alicloud.threatdetection.CycleTaskArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         var default_ = new CycleTask("default", CycleTaskArgs.builder()
 *             .targetEndTime(6)
 *             .taskType("VIRUS_VUL_SCHEDULE_SCAN")
 *             .targetStartTime(0)
 *             .source("console_batch")
 *             .taskName("VIRUS_VUL_SCHEDULE_SCAN")
 *             .firstDateStr(1650556800000)
 *             .periodUnit("day")
 *             .intervalPeriod(7)
 *             .param(serializeJson(
 *                 jsonObject(
 *                     jsonProperty("targetInfo", jsonArray(
 *                         jsonObject(
 *                             jsonProperty("type", "groupId"),
 *                             jsonProperty("name", "TI HOST"),
 *                             jsonProperty("target", 10597)
 *                         ), 
 *                         jsonObject(
 *                             jsonProperty("type", "groupId"),
 *                             jsonProperty("name", "expense HOST"),
 *                             jsonProperty("target", 10597)
 *                         )
 *                     ))
 *                 )))
 *             .enable(1)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Threat Detection Cycle Task can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:threatdetection/cycleTask:CycleTask example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:threatdetection/cycleTask:CycleTask")
public class CycleTask extends com.pulumi.resources.CustomResource {
    /**
     * Whether to enable. Value:
     * 
     */
    @Export(name="enable", refs={Integer.class}, tree="[0]")
    private Output<Integer> enable;

    /**
     * @return Whether to enable. Value:
     * 
     */
    public Output<Integer> enable() {
        return this.enable;
    }
    /**
     * First execution time.
     * 
     */
    @Export(name="firstDateStr", refs={Integer.class}, tree="[0]")
    private Output<Integer> firstDateStr;

    /**
     * @return First execution time.
     * 
     */
    public Output<Integer> firstDateStr() {
        return this.firstDateStr;
    }
    /**
     * Interval period.
     * 
     */
    @Export(name="intervalPeriod", refs={Integer.class}, tree="[0]")
    private Output<Integer> intervalPeriod;

    /**
     * @return Interval period.
     * 
     */
    public Output<Integer> intervalPeriod() {
        return this.intervalPeriod;
    }
    /**
     * Extended information field.
     * 
     */
    @Export(name="param", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> param;

    /**
     * @return Extended information field.
     * 
     */
    public Output<Optional<String>> param() {
        return Codegen.optional(this.param);
    }
    /**
     * Unit of scan cycle, value:
     * 
     */
    @Export(name="periodUnit", refs={String.class}, tree="[0]")
    private Output<String> periodUnit;

    /**
     * @return Unit of scan cycle, value:
     * 
     */
    public Output<String> periodUnit() {
        return this.periodUnit;
    }
    /**
     * Added the source of the task.
     * 
     */
    @Export(name="source", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> source;

    /**
     * @return Added the source of the task.
     * 
     */
    public Output<Optional<String>> source() {
        return Codegen.optional(this.source);
    }
    /**
     * Task end time (hours).
     * 
     */
    @Export(name="targetEndTime", refs={Integer.class}, tree="[0]")
    private Output<Integer> targetEndTime;

    /**
     * @return Task end time (hours).
     * 
     */
    public Output<Integer> targetEndTime() {
        return this.targetEndTime;
    }
    /**
     * Task start time (hours).
     * 
     */
    @Export(name="targetStartTime", refs={Integer.class}, tree="[0]")
    private Output<Integer> targetStartTime;

    /**
     * @return Task start time (hours).
     * 
     */
    public Output<Integer> targetStartTime() {
        return this.targetStartTime;
    }
    /**
     * The task name.
     * - **VIRUS_VUL_SCHEDULE_SCAN**: scans for viruses.
     * - **IMAGE_SCAN**: Image scan.
     * - **EMG_VUL_SCHEDULE_SCAN**: Emergency vulnerability scanning.
     * 
     */
    @Export(name="taskName", refs={String.class}, tree="[0]")
    private Output<String> taskName;

    /**
     * @return The task name.
     * - **VIRUS_VUL_SCHEDULE_SCAN**: scans for viruses.
     * - **IMAGE_SCAN**: Image scan.
     * - **EMG_VUL_SCHEDULE_SCAN**: Emergency vulnerability scanning.
     * 
     */
    public Output<String> taskName() {
        return this.taskName;
    }
    /**
     * The task type.
     * - **VIRUS_VUL_SCHEDULE_SCAN**: scans for viruses.
     * - **IMAGE_SCAN**: Image scan.
     * - **EMG_VUL_SCHEDULE_SCAN**: Emergency vulnerability scanning.
     * 
     */
    @Export(name="taskType", refs={String.class}, tree="[0]")
    private Output<String> taskType;

    /**
     * @return The task type.
     * - **VIRUS_VUL_SCHEDULE_SCAN**: scans for viruses.
     * - **IMAGE_SCAN**: Image scan.
     * - **EMG_VUL_SCHEDULE_SCAN**: Emergency vulnerability scanning.
     * 
     */
    public Output<String> taskType() {
        return this.taskType;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CycleTask(java.lang.String name) {
        this(name, CycleTaskArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CycleTask(java.lang.String name, CycleTaskArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CycleTask(java.lang.String name, CycleTaskArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:threatdetection/cycleTask:CycleTask", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private CycleTask(java.lang.String name, Output<java.lang.String> id, @Nullable CycleTaskState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:threatdetection/cycleTask:CycleTask", name, state, makeResourceOptions(options, id), false);
    }

    private static CycleTaskArgs makeArgs(CycleTaskArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CycleTaskArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CycleTask get(java.lang.String name, Output<java.lang.String> id, @Nullable CycleTaskState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CycleTask(name, id, state, options);
    }
}
