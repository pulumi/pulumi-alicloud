// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DhcpOptionsSetAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final DhcpOptionsSetAttachmentState Empty = new DhcpOptionsSetAttachmentState();

    /**
     * The ID of the DHCP options set.
     * 
     */
    @Import(name="dhcpOptionsSetId")
    private @Nullable Output<String> dhcpOptionsSetId;

    /**
     * @return The ID of the DHCP options set.
     * 
     */
    public Optional<Output<String>> dhcpOptionsSetId() {
        return Optional.ofNullable(this.dhcpOptionsSetId);
    }

    /**
     * Specifies whether to precheck this request only. Default values: `false`. Valid values:
     * 
     */
    @Import(name="dryRun")
    private @Nullable Output<Boolean> dryRun;

    /**
     * @return Specifies whether to precheck this request only. Default values: `false`. Valid values:
     * 
     */
    public Optional<Output<Boolean>> dryRun() {
        return Optional.ofNullable(this.dryRun);
    }

    /**
     * The status of the VPC network that is associated with the DHCP options set.  Valid values: `InUse` or `Pending`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the VPC network that is associated with the DHCP options set.  Valid values: `InUse` or `Pending`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The ID of the VPC network that is to be associated with the DHCP options set..
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The ID of the VPC network that is to be associated with the DHCP options set..
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private DhcpOptionsSetAttachmentState() {}

    private DhcpOptionsSetAttachmentState(DhcpOptionsSetAttachmentState $) {
        this.dhcpOptionsSetId = $.dhcpOptionsSetId;
        this.dryRun = $.dryRun;
        this.status = $.status;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DhcpOptionsSetAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DhcpOptionsSetAttachmentState $;

        public Builder() {
            $ = new DhcpOptionsSetAttachmentState();
        }

        public Builder(DhcpOptionsSetAttachmentState defaults) {
            $ = new DhcpOptionsSetAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param dhcpOptionsSetId The ID of the DHCP options set.
         * 
         * @return builder
         * 
         */
        public Builder dhcpOptionsSetId(@Nullable Output<String> dhcpOptionsSetId) {
            $.dhcpOptionsSetId = dhcpOptionsSetId;
            return this;
        }

        /**
         * @param dhcpOptionsSetId The ID of the DHCP options set.
         * 
         * @return builder
         * 
         */
        public Builder dhcpOptionsSetId(String dhcpOptionsSetId) {
            return dhcpOptionsSetId(Output.of(dhcpOptionsSetId));
        }

        /**
         * @param dryRun Specifies whether to precheck this request only. Default values: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder dryRun(@Nullable Output<Boolean> dryRun) {
            $.dryRun = dryRun;
            return this;
        }

        /**
         * @param dryRun Specifies whether to precheck this request only. Default values: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder dryRun(Boolean dryRun) {
            return dryRun(Output.of(dryRun));
        }

        /**
         * @param status The status of the VPC network that is associated with the DHCP options set.  Valid values: `InUse` or `Pending`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the VPC network that is associated with the DHCP options set.  Valid values: `InUse` or `Pending`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param vpcId The ID of the VPC network that is to be associated with the DHCP options set..
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The ID of the VPC network that is to be associated with the DHCP options set..
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public DhcpOptionsSetAttachmentState build() {
            return $;
        }
    }

}
