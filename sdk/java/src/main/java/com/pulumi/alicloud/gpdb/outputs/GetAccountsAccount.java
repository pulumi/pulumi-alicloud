// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.gpdb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAccountsAccount {
    /**
     * @return The description of the account.
     * 
     */
    private String accountDescription;
    /**
     * @return The name of the account.
     * 
     */
    private String accountName;
    /**
     * @return The ID of the instance.
     * 
     */
    private String dbInstanceId;
    /**
     * @return The ID of the Account. Its value is same as Queue Name.
     * 
     */
    private String id;
    /**
     * @return The status of the account. Valid values: `Active`, `Creating` and `Deleting`.
     * 
     */
    private String status;

    private GetAccountsAccount() {}
    /**
     * @return The description of the account.
     * 
     */
    public String accountDescription() {
        return this.accountDescription;
    }
    /**
     * @return The name of the account.
     * 
     */
    public String accountName() {
        return this.accountName;
    }
    /**
     * @return The ID of the instance.
     * 
     */
    public String dbInstanceId() {
        return this.dbInstanceId;
    }
    /**
     * @return The ID of the Account. Its value is same as Queue Name.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The status of the account. Valid values: `Active`, `Creating` and `Deleting`.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountsAccount defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountDescription;
        private String accountName;
        private String dbInstanceId;
        private String id;
        private String status;
        public Builder() {}
        public Builder(GetAccountsAccount defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountDescription = defaults.accountDescription;
    	      this.accountName = defaults.accountName;
    	      this.dbInstanceId = defaults.dbInstanceId;
    	      this.id = defaults.id;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder accountDescription(String accountDescription) {
            this.accountDescription = Objects.requireNonNull(accountDescription);
            return this;
        }
        @CustomType.Setter
        public Builder accountName(String accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }
        @CustomType.Setter
        public Builder dbInstanceId(String dbInstanceId) {
            this.dbInstanceId = Objects.requireNonNull(dbInstanceId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public GetAccountsAccount build() {
            final var o = new GetAccountsAccount();
            o.accountDescription = accountDescription;
            o.accountName = accountName;
            o.dbInstanceId = dbInstanceId;
            o.id = id;
            o.status = status;
            return o;
        }
    }
}
