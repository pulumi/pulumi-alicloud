// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ros.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StackInstanceParameterOverrideArgs extends com.pulumi.resources.ResourceArgs {

    public static final StackInstanceParameterOverrideArgs Empty = new StackInstanceParameterOverrideArgs();

    /**
     * The key of override parameter. If you do not specify the key and value of the parameter, ROS uses the key and value that you specified when you created the stack group.
     * 
     */
    @Import(name="parameterKey")
    private @Nullable Output<String> parameterKey;

    /**
     * @return The key of override parameter. If you do not specify the key and value of the parameter, ROS uses the key and value that you specified when you created the stack group.
     * 
     */
    public Optional<Output<String>> parameterKey() {
        return Optional.ofNullable(this.parameterKey);
    }

    /**
     * The value of override parameter. If you do not specify the key and value of the parameter, ROS uses the key and value that you specified when you created the stack group.
     * 
     */
    @Import(name="parameterValue")
    private @Nullable Output<String> parameterValue;

    /**
     * @return The value of override parameter. If you do not specify the key and value of the parameter, ROS uses the key and value that you specified when you created the stack group.
     * 
     */
    public Optional<Output<String>> parameterValue() {
        return Optional.ofNullable(this.parameterValue);
    }

    private StackInstanceParameterOverrideArgs() {}

    private StackInstanceParameterOverrideArgs(StackInstanceParameterOverrideArgs $) {
        this.parameterKey = $.parameterKey;
        this.parameterValue = $.parameterValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StackInstanceParameterOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StackInstanceParameterOverrideArgs $;

        public Builder() {
            $ = new StackInstanceParameterOverrideArgs();
        }

        public Builder(StackInstanceParameterOverrideArgs defaults) {
            $ = new StackInstanceParameterOverrideArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param parameterKey The key of override parameter. If you do not specify the key and value of the parameter, ROS uses the key and value that you specified when you created the stack group.
         * 
         * @return builder
         * 
         */
        public Builder parameterKey(@Nullable Output<String> parameterKey) {
            $.parameterKey = parameterKey;
            return this;
        }

        /**
         * @param parameterKey The key of override parameter. If you do not specify the key and value of the parameter, ROS uses the key and value that you specified when you created the stack group.
         * 
         * @return builder
         * 
         */
        public Builder parameterKey(String parameterKey) {
            return parameterKey(Output.of(parameterKey));
        }

        /**
         * @param parameterValue The value of override parameter. If you do not specify the key and value of the parameter, ROS uses the key and value that you specified when you created the stack group.
         * 
         * @return builder
         * 
         */
        public Builder parameterValue(@Nullable Output<String> parameterValue) {
            $.parameterValue = parameterValue;
            return this;
        }

        /**
         * @param parameterValue The value of override parameter. If you do not specify the key and value of the parameter, ROS uses the key and value that you specified when you created the stack group.
         * 
         * @return builder
         * 
         */
        public Builder parameterValue(String parameterValue) {
            return parameterValue(Output.of(parameterValue));
        }

        public StackInstanceParameterOverrideArgs build() {
            return $;
        }
    }

}
