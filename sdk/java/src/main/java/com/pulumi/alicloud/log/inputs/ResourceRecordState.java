// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.log.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourceRecordState extends com.pulumi.resources.ResourceArgs {

    public static final ResourceRecordState Empty = new ResourceRecordState();

    /**
     * The record&#39;s id, should be unique.
     * 
     */
    @Import(name="recordId")
    private @Nullable Output<String> recordId;

    /**
     * @return The record&#39;s id, should be unique.
     * 
     */
    public Optional<Output<String>> recordId() {
        return Optional.ofNullable(this.recordId);
    }

    /**
     * The name defined in log_resource, log service have some internal resource, like sls.common.user, sls.common.user_group. More detail see [Resource Data Structure](https://www.alibabacloud.com/help/en/sls/developer-reference/data-structure-of-alert-resource-data).
     * 
     */
    @Import(name="resourceName")
    private @Nullable Output<String> resourceName;

    /**
     * @return The name defined in log_resource, log service have some internal resource, like sls.common.user, sls.common.user_group. More detail see [Resource Data Structure](https://www.alibabacloud.com/help/en/sls/developer-reference/data-structure-of-alert-resource-data).
     * 
     */
    public Optional<Output<String>> resourceName() {
        return Optional.ofNullable(this.resourceName);
    }

    /**
     * The record&#39;s tag, can be used for search.
     * 
     */
    @Import(name="tag")
    private @Nullable Output<String> tag;

    /**
     * @return The record&#39;s tag, can be used for search.
     * 
     */
    public Optional<Output<String>> tag() {
        return Optional.ofNullable(this.tag);
    }

    /**
     * The json value of record. More detail see [Resource Data Structure](https://www.alibabacloud.com/help/en/sls/developer-reference/data-structure-of-alert-resource-data).
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return The json value of record. More detail see [Resource Data Structure](https://www.alibabacloud.com/help/en/sls/developer-reference/data-structure-of-alert-resource-data).
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private ResourceRecordState() {}

    private ResourceRecordState(ResourceRecordState $) {
        this.recordId = $.recordId;
        this.resourceName = $.resourceName;
        this.tag = $.tag;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceRecordState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceRecordState $;

        public Builder() {
            $ = new ResourceRecordState();
        }

        public Builder(ResourceRecordState defaults) {
            $ = new ResourceRecordState(Objects.requireNonNull(defaults));
        }

        /**
         * @param recordId The record&#39;s id, should be unique.
         * 
         * @return builder
         * 
         */
        public Builder recordId(@Nullable Output<String> recordId) {
            $.recordId = recordId;
            return this;
        }

        /**
         * @param recordId The record&#39;s id, should be unique.
         * 
         * @return builder
         * 
         */
        public Builder recordId(String recordId) {
            return recordId(Output.of(recordId));
        }

        /**
         * @param resourceName The name defined in log_resource, log service have some internal resource, like sls.common.user, sls.common.user_group. More detail see [Resource Data Structure](https://www.alibabacloud.com/help/en/sls/developer-reference/data-structure-of-alert-resource-data).
         * 
         * @return builder
         * 
         */
        public Builder resourceName(@Nullable Output<String> resourceName) {
            $.resourceName = resourceName;
            return this;
        }

        /**
         * @param resourceName The name defined in log_resource, log service have some internal resource, like sls.common.user, sls.common.user_group. More detail see [Resource Data Structure](https://www.alibabacloud.com/help/en/sls/developer-reference/data-structure-of-alert-resource-data).
         * 
         * @return builder
         * 
         */
        public Builder resourceName(String resourceName) {
            return resourceName(Output.of(resourceName));
        }

        /**
         * @param tag The record&#39;s tag, can be used for search.
         * 
         * @return builder
         * 
         */
        public Builder tag(@Nullable Output<String> tag) {
            $.tag = tag;
            return this;
        }

        /**
         * @param tag The record&#39;s tag, can be used for search.
         * 
         * @return builder
         * 
         */
        public Builder tag(String tag) {
            return tag(Output.of(tag));
        }

        /**
         * @param value The json value of record. More detail see [Resource Data Structure](https://www.alibabacloud.com/help/en/sls/developer-reference/data-structure-of-alert-resource-data).
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The json value of record. More detail see [Resource Data Structure](https://www.alibabacloud.com/help/en/sls/developer-reference/data-structure-of-alert-resource-data).
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public ResourceRecordState build() {
            return $;
        }
    }

}
