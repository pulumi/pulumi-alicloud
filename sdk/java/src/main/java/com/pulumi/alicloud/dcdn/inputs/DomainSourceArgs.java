// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dcdn.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainSourceArgs Empty = new DomainSourceArgs();

    /**
     * The origin address.
     * 
     */
    @Import(name="content", required=true)
    private Output<String> content;

    /**
     * @return The origin address.
     * 
     */
    public Output<String> content() {
        return this.content;
    }

    /**
     * The port number. Valid values: `443` and `80`. Default to `80`.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return The port number. Valid values: `443` and `80`. Default to `80`.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * The priority of the origin if multiple origins are specified. Default to `20`.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<String> priority;

    /**
     * @return The priority of the origin if multiple origins are specified. Default to `20`.
     * 
     */
    public Optional<Output<String>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * The type of the origin. Valid values:
     * `ipaddr`: The origin is configured using an IP address.
     * `domain`: The origin is configured using a domain name.
     * `oss`: The origin is configured using the Internet domain name of an Alibaba Cloud Object Storage Service (OSS) bucket.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of the origin. Valid values:
     * `ipaddr`: The origin is configured using an IP address.
     * `domain`: The origin is configured using a domain name.
     * `oss`: The origin is configured using the Internet domain name of an Alibaba Cloud Object Storage Service (OSS) bucket.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * The weight of the origin if multiple origins are specified. Default to `10`.
     * 
     */
    @Import(name="weight")
    private @Nullable Output<String> weight;

    /**
     * @return The weight of the origin if multiple origins are specified. Default to `10`.
     * 
     */
    public Optional<Output<String>> weight() {
        return Optional.ofNullable(this.weight);
    }

    private DomainSourceArgs() {}

    private DomainSourceArgs(DomainSourceArgs $) {
        this.content = $.content;
        this.port = $.port;
        this.priority = $.priority;
        this.type = $.type;
        this.weight = $.weight;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainSourceArgs $;

        public Builder() {
            $ = new DomainSourceArgs();
        }

        public Builder(DomainSourceArgs defaults) {
            $ = new DomainSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param content The origin address.
         * 
         * @return builder
         * 
         */
        public Builder content(Output<String> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content The origin address.
         * 
         * @return builder
         * 
         */
        public Builder content(String content) {
            return content(Output.of(content));
        }

        /**
         * @param port The port number. Valid values: `443` and `80`. Default to `80`.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port The port number. Valid values: `443` and `80`. Default to `80`.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param priority The priority of the origin if multiple origins are specified. Default to `20`.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<String> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority The priority of the origin if multiple origins are specified. Default to `20`.
         * 
         * @return builder
         * 
         */
        public Builder priority(String priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param type The type of the origin. Valid values:
         * `ipaddr`: The origin is configured using an IP address.
         * `domain`: The origin is configured using a domain name.
         * `oss`: The origin is configured using the Internet domain name of an Alibaba Cloud Object Storage Service (OSS) bucket.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the origin. Valid values:
         * `ipaddr`: The origin is configured using an IP address.
         * `domain`: The origin is configured using a domain name.
         * `oss`: The origin is configured using the Internet domain name of an Alibaba Cloud Object Storage Service (OSS) bucket.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param weight The weight of the origin if multiple origins are specified. Default to `10`.
         * 
         * @return builder
         * 
         */
        public Builder weight(@Nullable Output<String> weight) {
            $.weight = weight;
            return this;
        }

        /**
         * @param weight The weight of the origin if multiple origins are specified. Default to `10`.
         * 
         * @return builder
         * 
         */
        public Builder weight(String weight) {
            return weight(Output.of(weight));
        }

        public DomainSourceArgs build() {
            if ($.content == null) {
                throw new MissingRequiredPropertyException("DomainSourceArgs", "content");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("DomainSourceArgs", "type");
            }
            return $;
        }
    }

}
