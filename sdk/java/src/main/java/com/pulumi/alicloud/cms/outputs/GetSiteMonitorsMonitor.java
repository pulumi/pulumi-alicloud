// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSiteMonitorsMonitor {
    /**
     * @return Address.
     * 
     */
    private String address;
    /**
     * @return CreateTime.
     * 
     */
    private String createTime;
    /**
     * @return Monitoring frequency.
     * 
     */
    private String interval;
    /**
     * @return Task ID.
     * 
     */
    private String taskId;
    /**
     * @return Task Name.
     * 
     */
    private String taskName;
    /**
     * @return Task Type.
     * 
     */
    private String taskType;

    private GetSiteMonitorsMonitor() {}
    /**
     * @return Address.
     * 
     */
    public String address() {
        return this.address;
    }
    /**
     * @return CreateTime.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Monitoring frequency.
     * 
     */
    public String interval() {
        return this.interval;
    }
    /**
     * @return Task ID.
     * 
     */
    public String taskId() {
        return this.taskId;
    }
    /**
     * @return Task Name.
     * 
     */
    public String taskName() {
        return this.taskName;
    }
    /**
     * @return Task Type.
     * 
     */
    public String taskType() {
        return this.taskType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSiteMonitorsMonitor defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String address;
        private String createTime;
        private String interval;
        private String taskId;
        private String taskName;
        private String taskType;
        public Builder() {}
        public Builder(GetSiteMonitorsMonitor defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.createTime = defaults.createTime;
    	      this.interval = defaults.interval;
    	      this.taskId = defaults.taskId;
    	      this.taskName = defaults.taskName;
    	      this.taskType = defaults.taskType;
        }

        @CustomType.Setter
        public Builder address(String address) {
            if (address == null) {
              throw new MissingRequiredPropertyException("GetSiteMonitorsMonitor", "address");
            }
            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetSiteMonitorsMonitor", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder interval(String interval) {
            if (interval == null) {
              throw new MissingRequiredPropertyException("GetSiteMonitorsMonitor", "interval");
            }
            this.interval = interval;
            return this;
        }
        @CustomType.Setter
        public Builder taskId(String taskId) {
            if (taskId == null) {
              throw new MissingRequiredPropertyException("GetSiteMonitorsMonitor", "taskId");
            }
            this.taskId = taskId;
            return this;
        }
        @CustomType.Setter
        public Builder taskName(String taskName) {
            if (taskName == null) {
              throw new MissingRequiredPropertyException("GetSiteMonitorsMonitor", "taskName");
            }
            this.taskName = taskName;
            return this;
        }
        @CustomType.Setter
        public Builder taskType(String taskType) {
            if (taskType == null) {
              throw new MissingRequiredPropertyException("GetSiteMonitorsMonitor", "taskType");
            }
            this.taskType = taskType;
            return this;
        }
        public GetSiteMonitorsMonitor build() {
            final var _resultValue = new GetSiteMonitorsMonitor();
            _resultValue.address = address;
            _resultValue.createTime = createTime;
            _resultValue.interval = interval;
            _resultValue.taskId = taskId;
            _resultValue.taskName = taskName;
            _resultValue.taskType = taskType;
            return _resultValue;
        }
    }
}
