// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCustomDomainsDomainCertConfig {
    /**
     * @return The name of the certificate.
     * 
     */
    private String certName;
    /**
     * @return Certificate data of the HTTPS certificates, follow the &#39;pem&#39;.
     * 
     */
    private String certificate;

    private GetCustomDomainsDomainCertConfig() {}
    /**
     * @return The name of the certificate.
     * 
     */
    public String certName() {
        return this.certName;
    }
    /**
     * @return Certificate data of the HTTPS certificates, follow the &#39;pem&#39;.
     * 
     */
    public String certificate() {
        return this.certificate;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCustomDomainsDomainCertConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certName;
        private String certificate;
        public Builder() {}
        public Builder(GetCustomDomainsDomainCertConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certName = defaults.certName;
    	      this.certificate = defaults.certificate;
        }

        @CustomType.Setter
        public Builder certName(String certName) {
            if (certName == null) {
              throw new MissingRequiredPropertyException("GetCustomDomainsDomainCertConfig", "certName");
            }
            this.certName = certName;
            return this;
        }
        @CustomType.Setter
        public Builder certificate(String certificate) {
            if (certificate == null) {
              throw new MissingRequiredPropertyException("GetCustomDomainsDomainCertConfig", "certificate");
            }
            this.certificate = certificate;
            return this;
        }
        public GetCustomDomainsDomainCertConfig build() {
            final var _resultValue = new GetCustomDomainsDomainCertConfig();
            _resultValue.certName = certName;
            _resultValue.certificate = certificate;
            return _resultValue;
        }
    }
}
