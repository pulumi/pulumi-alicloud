// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss;

import com.pulumi.alicloud.oss.inputs.BucketWebsiteErrorDocumentArgs;
import com.pulumi.alicloud.oss.inputs.BucketWebsiteIndexDocumentArgs;
import com.pulumi.alicloud.oss.inputs.BucketWebsiteRoutingRulesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketWebsiteArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketWebsiteArgs Empty = new BucketWebsiteArgs();

    /**
     * The name of the bucket
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return The name of the bucket
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * The container that holds the error page configuration information. See `error_document` below.
     * 
     */
    @Import(name="errorDocument")
    private @Nullable Output<BucketWebsiteErrorDocumentArgs> errorDocument;

    /**
     * @return The container that holds the error page configuration information. See `error_document` below.
     * 
     */
    public Optional<Output<BucketWebsiteErrorDocumentArgs>> errorDocument() {
        return Optional.ofNullable(this.errorDocument);
    }

    /**
     * Static Website Default Home Page Configuration See `index_document` below.
     * 
     */
    @Import(name="indexDocument")
    private @Nullable Output<BucketWebsiteIndexDocumentArgs> indexDocument;

    /**
     * @return Static Website Default Home Page Configuration See `index_document` below.
     * 
     */
    public Optional<Output<BucketWebsiteIndexDocumentArgs>> indexDocument() {
        return Optional.ofNullable(this.indexDocument);
    }

    /**
     * The container that holds the jump rule or the mirroring back-to-origin rule. See `routing_rules` below.
     * 
     */
    @Import(name="routingRules")
    private @Nullable Output<BucketWebsiteRoutingRulesArgs> routingRules;

    /**
     * @return The container that holds the jump rule or the mirroring back-to-origin rule. See `routing_rules` below.
     * 
     */
    public Optional<Output<BucketWebsiteRoutingRulesArgs>> routingRules() {
        return Optional.ofNullable(this.routingRules);
    }

    private BucketWebsiteArgs() {}

    private BucketWebsiteArgs(BucketWebsiteArgs $) {
        this.bucket = $.bucket;
        this.errorDocument = $.errorDocument;
        this.indexDocument = $.indexDocument;
        this.routingRules = $.routingRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketWebsiteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketWebsiteArgs $;

        public Builder() {
            $ = new BucketWebsiteArgs();
        }

        public Builder(BucketWebsiteArgs defaults) {
            $ = new BucketWebsiteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket The name of the bucket
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket The name of the bucket
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param errorDocument The container that holds the error page configuration information. See `error_document` below.
         * 
         * @return builder
         * 
         */
        public Builder errorDocument(@Nullable Output<BucketWebsiteErrorDocumentArgs> errorDocument) {
            $.errorDocument = errorDocument;
            return this;
        }

        /**
         * @param errorDocument The container that holds the error page configuration information. See `error_document` below.
         * 
         * @return builder
         * 
         */
        public Builder errorDocument(BucketWebsiteErrorDocumentArgs errorDocument) {
            return errorDocument(Output.of(errorDocument));
        }

        /**
         * @param indexDocument Static Website Default Home Page Configuration See `index_document` below.
         * 
         * @return builder
         * 
         */
        public Builder indexDocument(@Nullable Output<BucketWebsiteIndexDocumentArgs> indexDocument) {
            $.indexDocument = indexDocument;
            return this;
        }

        /**
         * @param indexDocument Static Website Default Home Page Configuration See `index_document` below.
         * 
         * @return builder
         * 
         */
        public Builder indexDocument(BucketWebsiteIndexDocumentArgs indexDocument) {
            return indexDocument(Output.of(indexDocument));
        }

        /**
         * @param routingRules The container that holds the jump rule or the mirroring back-to-origin rule. See `routing_rules` below.
         * 
         * @return builder
         * 
         */
        public Builder routingRules(@Nullable Output<BucketWebsiteRoutingRulesArgs> routingRules) {
            $.routingRules = routingRules;
            return this;
        }

        /**
         * @param routingRules The container that holds the jump rule or the mirroring back-to-origin rule. See `routing_rules` below.
         * 
         * @return builder
         * 
         */
        public Builder routingRules(BucketWebsiteRoutingRulesArgs routingRules) {
            return routingRules(Output.of(routingRules));
        }

        public BucketWebsiteArgs build() {
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("BucketWebsiteArgs", "bucket");
            }
            return $;
        }
    }

}
