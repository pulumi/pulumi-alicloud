// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.kvstore.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuditLogConfigState extends com.pulumi.resources.ResourceArgs {

    public static final AuditLogConfigState Empty = new AuditLogConfigState();

    /**
     * Instance Creation Time.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Instance Creation Time.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Indicates Whether to Enable the Audit Log.  Valid value:
     * * true: Default Value, Open.
     * * false: Closed.
     * 
     * Note: When the Instance for the Cluster Architecture Or Read/Write Split Architecture, at the Same Time to Open Or Close the Data Node and the Proxy Node of the Audit Log Doesn&#39;t Support Separate Open.
     * 
     */
    @Import(name="dbAudit")
    private @Nullable Output<Boolean> dbAudit;

    /**
     * @return Indicates Whether to Enable the Audit Log.  Valid value:
     * * true: Default Value, Open.
     * * false: Closed.
     * 
     * Note: When the Instance for the Cluster Architecture Or Read/Write Split Architecture, at the Same Time to Open Or Close the Data Node and the Proxy Node of the Audit Log Doesn&#39;t Support Separate Open.
     * 
     */
    public Optional<Output<Boolean>> dbAudit() {
        return Optional.ofNullable(this.dbAudit);
    }

    /**
     * Instance ID, Call the Describeinstances Get.
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return Instance ID, Call the Describeinstances Get.
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * Audit Log Retention Period Value: 1~365.
     * 
     * &gt; **NOTE:** When the Instance dbaudit Value Is Set to True, This Parameter Entry into Force. The Parameter Setting of the Current Region of All a Tair (Redis OSS-Compatible) And Memcache (KVStore) Instance for a Data Entry into Force.
     * 
     */
    @Import(name="retention")
    private @Nullable Output<Integer> retention;

    /**
     * @return Audit Log Retention Period Value: 1~365.
     * 
     * &gt; **NOTE:** When the Instance dbaudit Value Is Set to True, This Parameter Entry into Force. The Parameter Setting of the Current Region of All a Tair (Redis OSS-Compatible) And Memcache (KVStore) Instance for a Data Entry into Force.
     * 
     */
    public Optional<Output<Integer>> retention() {
        return Optional.ofNullable(this.retention);
    }

    /**
     * The status of the resource.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private AuditLogConfigState() {}

    private AuditLogConfigState(AuditLogConfigState $) {
        this.createTime = $.createTime;
        this.dbAudit = $.dbAudit;
        this.instanceId = $.instanceId;
        this.retention = $.retention;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuditLogConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuditLogConfigState $;

        public Builder() {
            $ = new AuditLogConfigState();
        }

        public Builder(AuditLogConfigState defaults) {
            $ = new AuditLogConfigState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime Instance Creation Time.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Instance Creation Time.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param dbAudit Indicates Whether to Enable the Audit Log.  Valid value:
         * * true: Default Value, Open.
         * * false: Closed.
         * 
         * Note: When the Instance for the Cluster Architecture Or Read/Write Split Architecture, at the Same Time to Open Or Close the Data Node and the Proxy Node of the Audit Log Doesn&#39;t Support Separate Open.
         * 
         * @return builder
         * 
         */
        public Builder dbAudit(@Nullable Output<Boolean> dbAudit) {
            $.dbAudit = dbAudit;
            return this;
        }

        /**
         * @param dbAudit Indicates Whether to Enable the Audit Log.  Valid value:
         * * true: Default Value, Open.
         * * false: Closed.
         * 
         * Note: When the Instance for the Cluster Architecture Or Read/Write Split Architecture, at the Same Time to Open Or Close the Data Node and the Proxy Node of the Audit Log Doesn&#39;t Support Separate Open.
         * 
         * @return builder
         * 
         */
        public Builder dbAudit(Boolean dbAudit) {
            return dbAudit(Output.of(dbAudit));
        }

        /**
         * @param instanceId Instance ID, Call the Describeinstances Get.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId Instance ID, Call the Describeinstances Get.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param retention Audit Log Retention Period Value: 1~365.
         * 
         * &gt; **NOTE:** When the Instance dbaudit Value Is Set to True, This Parameter Entry into Force. The Parameter Setting of the Current Region of All a Tair (Redis OSS-Compatible) And Memcache (KVStore) Instance for a Data Entry into Force.
         * 
         * @return builder
         * 
         */
        public Builder retention(@Nullable Output<Integer> retention) {
            $.retention = retention;
            return this;
        }

        /**
         * @param retention Audit Log Retention Period Value: 1~365.
         * 
         * &gt; **NOTE:** When the Instance dbaudit Value Is Set to True, This Parameter Entry into Force. The Parameter Setting of the Current Region of All a Tair (Redis OSS-Compatible) And Memcache (KVStore) Instance for a Data Entry into Force.
         * 
         * @return builder
         * 
         */
        public Builder retention(Integer retention) {
            return retention(Output.of(retention));
        }

        /**
         * @param status The status of the resource.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public AuditLogConfigState build() {
            return $;
        }
    }

}
