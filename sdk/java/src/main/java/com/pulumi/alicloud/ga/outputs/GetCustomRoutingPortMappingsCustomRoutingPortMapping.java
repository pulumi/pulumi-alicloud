// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ga.outputs;

import com.pulumi.alicloud.ga.outputs.GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddress;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCustomRoutingPortMappingsCustomRoutingPortMapping {
    /**
     * @return The ID of the GA instance.
     * 
     */
    private String acceleratorId;
    /**
     * @return The acceleration port.
     * 
     */
    private Integer acceleratorPort;
    /**
     * @return The service IP address and port of the backend instance.
     * 
     */
    private List<GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddress> destinationSocketAddresses;
    /**
     * @return The ID of the endpoint group.
     * 
     */
    private String endpointGroupId;
    /**
     * @return The ID of the region in which the endpoint group resides.
     * 
     */
    private String endpointGroupRegion;
    /**
     * @return The ID of the endpoint.
     * 
     */
    private String endpointId;
    /**
     * @return The ID of the listener.
     * 
     */
    private String listenerId;
    /**
     * @return The protocol of the backend service.
     * 
     */
    private List<String> protocols;
    /**
     * @return The access policy of traffic for the backend instance. Valid Values: `allow`, `deny`.
     * 
     */
    private String status;
    /**
     * @return The ID of the endpoint (vSwitch).
     * 
     */
    private String vswitch;

    private GetCustomRoutingPortMappingsCustomRoutingPortMapping() {}
    /**
     * @return The ID of the GA instance.
     * 
     */
    public String acceleratorId() {
        return this.acceleratorId;
    }
    /**
     * @return The acceleration port.
     * 
     */
    public Integer acceleratorPort() {
        return this.acceleratorPort;
    }
    /**
     * @return The service IP address and port of the backend instance.
     * 
     */
    public List<GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddress> destinationSocketAddresses() {
        return this.destinationSocketAddresses;
    }
    /**
     * @return The ID of the endpoint group.
     * 
     */
    public String endpointGroupId() {
        return this.endpointGroupId;
    }
    /**
     * @return The ID of the region in which the endpoint group resides.
     * 
     */
    public String endpointGroupRegion() {
        return this.endpointGroupRegion;
    }
    /**
     * @return The ID of the endpoint.
     * 
     */
    public String endpointId() {
        return this.endpointId;
    }
    /**
     * @return The ID of the listener.
     * 
     */
    public String listenerId() {
        return this.listenerId;
    }
    /**
     * @return The protocol of the backend service.
     * 
     */
    public List<String> protocols() {
        return this.protocols;
    }
    /**
     * @return The access policy of traffic for the backend instance. Valid Values: `allow`, `deny`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The ID of the endpoint (vSwitch).
     * 
     */
    public String vswitch() {
        return this.vswitch;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCustomRoutingPortMappingsCustomRoutingPortMapping defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String acceleratorId;
        private Integer acceleratorPort;
        private List<GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddress> destinationSocketAddresses;
        private String endpointGroupId;
        private String endpointGroupRegion;
        private String endpointId;
        private String listenerId;
        private List<String> protocols;
        private String status;
        private String vswitch;
        public Builder() {}
        public Builder(GetCustomRoutingPortMappingsCustomRoutingPortMapping defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceleratorId = defaults.acceleratorId;
    	      this.acceleratorPort = defaults.acceleratorPort;
    	      this.destinationSocketAddresses = defaults.destinationSocketAddresses;
    	      this.endpointGroupId = defaults.endpointGroupId;
    	      this.endpointGroupRegion = defaults.endpointGroupRegion;
    	      this.endpointId = defaults.endpointId;
    	      this.listenerId = defaults.listenerId;
    	      this.protocols = defaults.protocols;
    	      this.status = defaults.status;
    	      this.vswitch = defaults.vswitch;
        }

        @CustomType.Setter
        public Builder acceleratorId(String acceleratorId) {
            this.acceleratorId = Objects.requireNonNull(acceleratorId);
            return this;
        }
        @CustomType.Setter
        public Builder acceleratorPort(Integer acceleratorPort) {
            this.acceleratorPort = Objects.requireNonNull(acceleratorPort);
            return this;
        }
        @CustomType.Setter
        public Builder destinationSocketAddresses(List<GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddress> destinationSocketAddresses) {
            this.destinationSocketAddresses = Objects.requireNonNull(destinationSocketAddresses);
            return this;
        }
        public Builder destinationSocketAddresses(GetCustomRoutingPortMappingsCustomRoutingPortMappingDestinationSocketAddress... destinationSocketAddresses) {
            return destinationSocketAddresses(List.of(destinationSocketAddresses));
        }
        @CustomType.Setter
        public Builder endpointGroupId(String endpointGroupId) {
            this.endpointGroupId = Objects.requireNonNull(endpointGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder endpointGroupRegion(String endpointGroupRegion) {
            this.endpointGroupRegion = Objects.requireNonNull(endpointGroupRegion);
            return this;
        }
        @CustomType.Setter
        public Builder endpointId(String endpointId) {
            this.endpointId = Objects.requireNonNull(endpointId);
            return this;
        }
        @CustomType.Setter
        public Builder listenerId(String listenerId) {
            this.listenerId = Objects.requireNonNull(listenerId);
            return this;
        }
        @CustomType.Setter
        public Builder protocols(List<String> protocols) {
            this.protocols = Objects.requireNonNull(protocols);
            return this;
        }
        public Builder protocols(String... protocols) {
            return protocols(List.of(protocols));
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder vswitch(String vswitch) {
            this.vswitch = Objects.requireNonNull(vswitch);
            return this;
        }
        public GetCustomRoutingPortMappingsCustomRoutingPortMapping build() {
            final var o = new GetCustomRoutingPortMappingsCustomRoutingPortMapping();
            o.acceleratorId = acceleratorId;
            o.acceleratorPort = acceleratorPort;
            o.destinationSocketAddresses = destinationSocketAddresses;
            o.endpointGroupId = endpointGroupId;
            o.endpointGroupRegion = endpointGroupRegion;
            o.endpointId = endpointId;
            o.listenerId = listenerId;
            o.protocols = protocols;
            o.status = status;
            o.vswitch = vswitch;
            return o;
        }
    }
}
