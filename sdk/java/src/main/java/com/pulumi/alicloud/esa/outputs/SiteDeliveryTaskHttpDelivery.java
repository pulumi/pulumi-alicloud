// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.outputs;

import com.pulumi.alicloud.esa.outputs.SiteDeliveryTaskHttpDeliveryStandardAuthParam;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SiteDeliveryTaskHttpDelivery {
    private @Nullable String compress;
    private @Nullable String destUrl;
    private @Nullable Map<String,String> headerParam;
    private @Nullable String logBodyPrefix;
    private @Nullable String logBodySuffix;
    private @Nullable Integer maxBatchMb;
    private @Nullable Integer maxBatchSize;
    private @Nullable Integer maxRetry;
    private @Nullable Map<String,String> queryParam;
    private @Nullable Boolean standardAuthOn;
    /**
     * @return See `standardAuthParam` below.
     * 
     */
    private @Nullable SiteDeliveryTaskHttpDeliveryStandardAuthParam standardAuthParam;
    private @Nullable Integer transformTimeout;

    private SiteDeliveryTaskHttpDelivery() {}
    public Optional<String> compress() {
        return Optional.ofNullable(this.compress);
    }
    public Optional<String> destUrl() {
        return Optional.ofNullable(this.destUrl);
    }
    public Map<String,String> headerParam() {
        return this.headerParam == null ? Map.of() : this.headerParam;
    }
    public Optional<String> logBodyPrefix() {
        return Optional.ofNullable(this.logBodyPrefix);
    }
    public Optional<String> logBodySuffix() {
        return Optional.ofNullable(this.logBodySuffix);
    }
    public Optional<Integer> maxBatchMb() {
        return Optional.ofNullable(this.maxBatchMb);
    }
    public Optional<Integer> maxBatchSize() {
        return Optional.ofNullable(this.maxBatchSize);
    }
    public Optional<Integer> maxRetry() {
        return Optional.ofNullable(this.maxRetry);
    }
    public Map<String,String> queryParam() {
        return this.queryParam == null ? Map.of() : this.queryParam;
    }
    public Optional<Boolean> standardAuthOn() {
        return Optional.ofNullable(this.standardAuthOn);
    }
    /**
     * @return See `standardAuthParam` below.
     * 
     */
    public Optional<SiteDeliveryTaskHttpDeliveryStandardAuthParam> standardAuthParam() {
        return Optional.ofNullable(this.standardAuthParam);
    }
    public Optional<Integer> transformTimeout() {
        return Optional.ofNullable(this.transformTimeout);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SiteDeliveryTaskHttpDelivery defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compress;
        private @Nullable String destUrl;
        private @Nullable Map<String,String> headerParam;
        private @Nullable String logBodyPrefix;
        private @Nullable String logBodySuffix;
        private @Nullable Integer maxBatchMb;
        private @Nullable Integer maxBatchSize;
        private @Nullable Integer maxRetry;
        private @Nullable Map<String,String> queryParam;
        private @Nullable Boolean standardAuthOn;
        private @Nullable SiteDeliveryTaskHttpDeliveryStandardAuthParam standardAuthParam;
        private @Nullable Integer transformTimeout;
        public Builder() {}
        public Builder(SiteDeliveryTaskHttpDelivery defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compress = defaults.compress;
    	      this.destUrl = defaults.destUrl;
    	      this.headerParam = defaults.headerParam;
    	      this.logBodyPrefix = defaults.logBodyPrefix;
    	      this.logBodySuffix = defaults.logBodySuffix;
    	      this.maxBatchMb = defaults.maxBatchMb;
    	      this.maxBatchSize = defaults.maxBatchSize;
    	      this.maxRetry = defaults.maxRetry;
    	      this.queryParam = defaults.queryParam;
    	      this.standardAuthOn = defaults.standardAuthOn;
    	      this.standardAuthParam = defaults.standardAuthParam;
    	      this.transformTimeout = defaults.transformTimeout;
        }

        @CustomType.Setter
        public Builder compress(@Nullable String compress) {

            this.compress = compress;
            return this;
        }
        @CustomType.Setter
        public Builder destUrl(@Nullable String destUrl) {

            this.destUrl = destUrl;
            return this;
        }
        @CustomType.Setter
        public Builder headerParam(@Nullable Map<String,String> headerParam) {

            this.headerParam = headerParam;
            return this;
        }
        @CustomType.Setter
        public Builder logBodyPrefix(@Nullable String logBodyPrefix) {

            this.logBodyPrefix = logBodyPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder logBodySuffix(@Nullable String logBodySuffix) {

            this.logBodySuffix = logBodySuffix;
            return this;
        }
        @CustomType.Setter
        public Builder maxBatchMb(@Nullable Integer maxBatchMb) {

            this.maxBatchMb = maxBatchMb;
            return this;
        }
        @CustomType.Setter
        public Builder maxBatchSize(@Nullable Integer maxBatchSize) {

            this.maxBatchSize = maxBatchSize;
            return this;
        }
        @CustomType.Setter
        public Builder maxRetry(@Nullable Integer maxRetry) {

            this.maxRetry = maxRetry;
            return this;
        }
        @CustomType.Setter
        public Builder queryParam(@Nullable Map<String,String> queryParam) {

            this.queryParam = queryParam;
            return this;
        }
        @CustomType.Setter
        public Builder standardAuthOn(@Nullable Boolean standardAuthOn) {

            this.standardAuthOn = standardAuthOn;
            return this;
        }
        @CustomType.Setter
        public Builder standardAuthParam(@Nullable SiteDeliveryTaskHttpDeliveryStandardAuthParam standardAuthParam) {

            this.standardAuthParam = standardAuthParam;
            return this;
        }
        @CustomType.Setter
        public Builder transformTimeout(@Nullable Integer transformTimeout) {

            this.transformTimeout = transformTimeout;
            return this;
        }
        public SiteDeliveryTaskHttpDelivery build() {
            final var _resultValue = new SiteDeliveryTaskHttpDelivery();
            _resultValue.compress = compress;
            _resultValue.destUrl = destUrl;
            _resultValue.headerParam = headerParam;
            _resultValue.logBodyPrefix = logBodyPrefix;
            _resultValue.logBodySuffix = logBodySuffix;
            _resultValue.maxBatchMb = maxBatchMb;
            _resultValue.maxBatchSize = maxBatchSize;
            _resultValue.maxRetry = maxRetry;
            _resultValue.queryParam = queryParam;
            _resultValue.standardAuthOn = standardAuthOn;
            _resultValue.standardAuthParam = standardAuthParam;
            _resultValue.transformTimeout = transformTimeout;
            return _resultValue;
        }
    }
}
