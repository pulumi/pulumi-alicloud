// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.emrv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterNodeGroupSystemDiskArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterNodeGroupSystemDiskArgs Empty = new ClusterNodeGroupSystemDiskArgs();

    @Import(name="category", required=true)
    private Output<String> category;

    public Output<String> category() {
        return this.category;
    }

    @Import(name="count")
    private @Nullable Output<Integer> count;

    public Optional<Output<Integer>> count() {
        return Optional.ofNullable(this.count);
    }

    @Import(name="performanceLevel")
    private @Nullable Output<String> performanceLevel;

    public Optional<Output<String>> performanceLevel() {
        return Optional.ofNullable(this.performanceLevel);
    }

    @Import(name="size", required=true)
    private Output<Integer> size;

    public Output<Integer> size() {
        return this.size;
    }

    private ClusterNodeGroupSystemDiskArgs() {}

    private ClusterNodeGroupSystemDiskArgs(ClusterNodeGroupSystemDiskArgs $) {
        this.category = $.category;
        this.count = $.count;
        this.performanceLevel = $.performanceLevel;
        this.size = $.size;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterNodeGroupSystemDiskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterNodeGroupSystemDiskArgs $;

        public Builder() {
            $ = new ClusterNodeGroupSystemDiskArgs();
        }

        public Builder(ClusterNodeGroupSystemDiskArgs defaults) {
            $ = new ClusterNodeGroupSystemDiskArgs(Objects.requireNonNull(defaults));
        }

        public Builder category(Output<String> category) {
            $.category = category;
            return this;
        }

        public Builder category(String category) {
            return category(Output.of(category));
        }

        public Builder count(@Nullable Output<Integer> count) {
            $.count = count;
            return this;
        }

        public Builder count(Integer count) {
            return count(Output.of(count));
        }

        public Builder performanceLevel(@Nullable Output<String> performanceLevel) {
            $.performanceLevel = performanceLevel;
            return this;
        }

        public Builder performanceLevel(String performanceLevel) {
            return performanceLevel(Output.of(performanceLevel));
        }

        public Builder size(Output<Integer> size) {
            $.size = size;
            return this;
        }

        public Builder size(Integer size) {
            return size(Output.of(size));
        }

        public ClusterNodeGroupSystemDiskArgs build() {
            if ($.category == null) {
                throw new MissingRequiredPropertyException("ClusterNodeGroupSystemDiskArgs", "category");
            }
            if ($.size == null) {
                throw new MissingRequiredPropertyException("ClusterNodeGroupSystemDiskArgs", "size");
            }
            return $;
        }
    }

}
