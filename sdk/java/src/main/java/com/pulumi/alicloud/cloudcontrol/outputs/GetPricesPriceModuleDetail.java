// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudcontrol.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPricesPriceModuleDetail {
    /**
     * @return Preferential price.
     * 
     */
    private Double costAfterDiscount;
    /**
     * @return Discount.
     * 
     */
    private Double invoiceDiscount;
    /**
     * @return Valuation Module Identification.
     * 
     */
    private String moduleCode;
    /**
     * @return Pricing Module Name.
     * 
     */
    private String moduleName;
    /**
     * @return Original Price.
     * 
     */
    private Double originalCost;
    /**
     * @return Price Type.
     * 
     */
    private String priceType;

    private GetPricesPriceModuleDetail() {}
    /**
     * @return Preferential price.
     * 
     */
    public Double costAfterDiscount() {
        return this.costAfterDiscount;
    }
    /**
     * @return Discount.
     * 
     */
    public Double invoiceDiscount() {
        return this.invoiceDiscount;
    }
    /**
     * @return Valuation Module Identification.
     * 
     */
    public String moduleCode() {
        return this.moduleCode;
    }
    /**
     * @return Pricing Module Name.
     * 
     */
    public String moduleName() {
        return this.moduleName;
    }
    /**
     * @return Original Price.
     * 
     */
    public Double originalCost() {
        return this.originalCost;
    }
    /**
     * @return Price Type.
     * 
     */
    public String priceType() {
        return this.priceType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPricesPriceModuleDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double costAfterDiscount;
        private Double invoiceDiscount;
        private String moduleCode;
        private String moduleName;
        private Double originalCost;
        private String priceType;
        public Builder() {}
        public Builder(GetPricesPriceModuleDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.costAfterDiscount = defaults.costAfterDiscount;
    	      this.invoiceDiscount = defaults.invoiceDiscount;
    	      this.moduleCode = defaults.moduleCode;
    	      this.moduleName = defaults.moduleName;
    	      this.originalCost = defaults.originalCost;
    	      this.priceType = defaults.priceType;
        }

        @CustomType.Setter
        public Builder costAfterDiscount(Double costAfterDiscount) {
            if (costAfterDiscount == null) {
              throw new MissingRequiredPropertyException("GetPricesPriceModuleDetail", "costAfterDiscount");
            }
            this.costAfterDiscount = costAfterDiscount;
            return this;
        }
        @CustomType.Setter
        public Builder invoiceDiscount(Double invoiceDiscount) {
            if (invoiceDiscount == null) {
              throw new MissingRequiredPropertyException("GetPricesPriceModuleDetail", "invoiceDiscount");
            }
            this.invoiceDiscount = invoiceDiscount;
            return this;
        }
        @CustomType.Setter
        public Builder moduleCode(String moduleCode) {
            if (moduleCode == null) {
              throw new MissingRequiredPropertyException("GetPricesPriceModuleDetail", "moduleCode");
            }
            this.moduleCode = moduleCode;
            return this;
        }
        @CustomType.Setter
        public Builder moduleName(String moduleName) {
            if (moduleName == null) {
              throw new MissingRequiredPropertyException("GetPricesPriceModuleDetail", "moduleName");
            }
            this.moduleName = moduleName;
            return this;
        }
        @CustomType.Setter
        public Builder originalCost(Double originalCost) {
            if (originalCost == null) {
              throw new MissingRequiredPropertyException("GetPricesPriceModuleDetail", "originalCost");
            }
            this.originalCost = originalCost;
            return this;
        }
        @CustomType.Setter
        public Builder priceType(String priceType) {
            if (priceType == null) {
              throw new MissingRequiredPropertyException("GetPricesPriceModuleDetail", "priceType");
            }
            this.priceType = priceType;
            return this;
        }
        public GetPricesPriceModuleDetail build() {
            final var _resultValue = new GetPricesPriceModuleDetail();
            _resultValue.costAfterDiscount = costAfterDiscount;
            _resultValue.invoiceDiscount = invoiceDiscount;
            _resultValue.moduleCode = moduleCode;
            _resultValue.moduleName = moduleName;
            _resultValue.originalCost = originalCost;
            _resultValue.priceType = priceType;
            return _resultValue;
        }
    }
}
