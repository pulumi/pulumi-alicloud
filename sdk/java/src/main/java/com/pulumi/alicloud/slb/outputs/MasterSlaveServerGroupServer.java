// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.slb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MasterSlaveServerGroupServer {
    /**
     * @return Determine if the server is executing. Valid value 0, 1.
     * 
     */
    private @Nullable Integer isBackup;
    /**
     * @return The port used by the backend server. Valid value range: [1-65535].
     * 
     */
    private Integer port;
    /**
     * @return A list backend server ID (ECS instance ID).
     * 
     */
    private String serverId;
    /**
     * @return The server type of the backend server. Valid value Master, Slave.
     * 
     */
    private @Nullable String serverType;
    /**
     * @return Type of the backend server. Valid value ecs, eni. Default to eni.
     * 
     */
    private @Nullable String type;
    /**
     * @return Weight of the backend server. Valid value range: [0-100]. Default to 100.
     * 
     */
    private @Nullable Integer weight;

    private MasterSlaveServerGroupServer() {}
    /**
     * @return Determine if the server is executing. Valid value 0, 1.
     * 
     */
    public Optional<Integer> isBackup() {
        return Optional.ofNullable(this.isBackup);
    }
    /**
     * @return The port used by the backend server. Valid value range: [1-65535].
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return A list backend server ID (ECS instance ID).
     * 
     */
    public String serverId() {
        return this.serverId;
    }
    /**
     * @return The server type of the backend server. Valid value Master, Slave.
     * 
     */
    public Optional<String> serverType() {
        return Optional.ofNullable(this.serverType);
    }
    /**
     * @return Type of the backend server. Valid value ecs, eni. Default to eni.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return Weight of the backend server. Valid value range: [0-100]. Default to 100.
     * 
     */
    public Optional<Integer> weight() {
        return Optional.ofNullable(this.weight);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MasterSlaveServerGroupServer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer isBackup;
        private Integer port;
        private String serverId;
        private @Nullable String serverType;
        private @Nullable String type;
        private @Nullable Integer weight;
        public Builder() {}
        public Builder(MasterSlaveServerGroupServer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isBackup = defaults.isBackup;
    	      this.port = defaults.port;
    	      this.serverId = defaults.serverId;
    	      this.serverType = defaults.serverType;
    	      this.type = defaults.type;
    	      this.weight = defaults.weight;
        }

        @CustomType.Setter
        public Builder isBackup(@Nullable Integer isBackup) {

            this.isBackup = isBackup;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("MasterSlaveServerGroupServer", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder serverId(String serverId) {
            if (serverId == null) {
              throw new MissingRequiredPropertyException("MasterSlaveServerGroupServer", "serverId");
            }
            this.serverId = serverId;
            return this;
        }
        @CustomType.Setter
        public Builder serverType(@Nullable String serverType) {

            this.serverType = serverType;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder weight(@Nullable Integer weight) {

            this.weight = weight;
            return this;
        }
        public MasterSlaveServerGroupServer build() {
            final var _resultValue = new MasterSlaveServerGroupServer();
            _resultValue.isBackup = isBackup;
            _resultValue.port = port;
            _resultValue.serverId = serverId;
            _resultValue.serverType = serverType;
            _resultValue.type = type;
            _resultValue.weight = weight;
            return _resultValue;
        }
    }
}
