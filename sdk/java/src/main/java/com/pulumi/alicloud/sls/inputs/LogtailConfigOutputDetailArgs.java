// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sls.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogtailConfigOutputDetailArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogtailConfigOutputDetailArgs Empty = new LogtailConfigOutputDetailArgs();

    /**
     * The endpoint of the log project.
     * 
     */
    @Import(name="endpoint")
    private @Nullable Output<String> endpoint;

    /**
     * @return The endpoint of the log project.
     * 
     */
    public Optional<Output<String>> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    /**
     * The name of the output target logstore.
     * 
     */
    @Import(name="logstoreName")
    private @Nullable Output<String> logstoreName;

    /**
     * @return The name of the output target logstore.
     * 
     */
    public Optional<Output<String>> logstoreName() {
        return Optional.ofNullable(this.logstoreName);
    }

    /**
     * Region
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private LogtailConfigOutputDetailArgs() {}

    private LogtailConfigOutputDetailArgs(LogtailConfigOutputDetailArgs $) {
        this.endpoint = $.endpoint;
        this.logstoreName = $.logstoreName;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogtailConfigOutputDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogtailConfigOutputDetailArgs $;

        public Builder() {
            $ = new LogtailConfigOutputDetailArgs();
        }

        public Builder(LogtailConfigOutputDetailArgs defaults) {
            $ = new LogtailConfigOutputDetailArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endpoint The endpoint of the log project.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(@Nullable Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        /**
         * @param endpoint The endpoint of the log project.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        /**
         * @param logstoreName The name of the output target logstore.
         * 
         * @return builder
         * 
         */
        public Builder logstoreName(@Nullable Output<String> logstoreName) {
            $.logstoreName = logstoreName;
            return this;
        }

        /**
         * @param logstoreName The name of the output target logstore.
         * 
         * @return builder
         * 
         */
        public Builder logstoreName(String logstoreName) {
            return logstoreName(Output.of(logstoreName));
        }

        /**
         * @param region Region
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public LogtailConfigOutputDetailArgs build() {
            return $;
        }
    }

}
