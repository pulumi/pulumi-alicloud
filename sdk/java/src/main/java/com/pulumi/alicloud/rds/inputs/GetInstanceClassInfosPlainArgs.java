// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rds.inputs;

import com.pulumi.alicloud.rds.inputs.GetInstanceClassInfosInfo;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInstanceClassInfosPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInstanceClassInfosPlainArgs Empty = new GetInstanceClassInfosPlainArgs();

    /**
     * The commodity code of the instance. Valid values:
     * * **bards**: The instance is a pay-as-you-go primary instance. This value is available on the China site (aliyun.com).
     * * **rds**: The instance is a subscription primary instance. This value is available on the China site (aliyun.com).
     * * **rords**: The instance is a pay-as-you-go read-only instance. This value is available on the China site (aliyun.com).
     * * **rds_rordspre_public_cn**: The instance is a subscription read-only instance. This value is available on the China site (aliyun.com).
     * * **bards_intl**: The instance is a pay-as-you-go primary instance. This value is available on the International site (alibabacloud.com).
     * * **rds_intl**: The instance is a subscription primary instance. This value is available on the International site (alibabacloud.com).
     * * **rords_intl**: The instance is a pay-as-you-go read-only instance. This value is available on the International site (alibabacloud.com).
     * * **rds_rordspre_public_intl**: The instance is a subscription read-only instance. This value is available on the International site (alibabacloud.com).
     * 
     */
    @Import(name="commodityCode", required=true)
    private String commodityCode;

    /**
     * @return The commodity code of the instance. Valid values:
     * * **bards**: The instance is a pay-as-you-go primary instance. This value is available on the China site (aliyun.com).
     * * **rds**: The instance is a subscription primary instance. This value is available on the China site (aliyun.com).
     * * **rords**: The instance is a pay-as-you-go read-only instance. This value is available on the China site (aliyun.com).
     * * **rds_rordspre_public_cn**: The instance is a subscription read-only instance. This value is available on the China site (aliyun.com).
     * * **bards_intl**: The instance is a pay-as-you-go primary instance. This value is available on the International site (alibabacloud.com).
     * * **rds_intl**: The instance is a subscription primary instance. This value is available on the International site (alibabacloud.com).
     * * **rords_intl**: The instance is a pay-as-you-go read-only instance. This value is available on the International site (alibabacloud.com).
     * * **rds_rordspre_public_intl**: The instance is a subscription read-only instance. This value is available on the International site (alibabacloud.com).
     * 
     */
    public String commodityCode() {
        return this.commodityCode;
    }

    /**
     * The ID of the primary instance.
     * 
     */
    @Import(name="dbInstanceId")
    private @Nullable String dbInstanceId;

    /**
     * @return The ID of the primary instance.
     * 
     */
    public Optional<String> dbInstanceId() {
        return Optional.ofNullable(this.dbInstanceId);
    }

    /**
     * A list of Rds available resource. Each element contains the following attributes:
     * 
     */
    @Import(name="infos")
    private @Nullable List<GetInstanceClassInfosInfo> infos;

    /**
     * @return A list of Rds available resource. Each element contains the following attributes:
     * 
     */
    public Optional<List<GetInstanceClassInfosInfo>> infos() {
        return Optional.ofNullable(this.infos);
    }

    /**
     * FThe type of order that you want to query. Valid values:
     * * **BUY**: specifies the query orders that are used to purchase instances.
     * * **UPGRADE**: specifies the query orders that are used to change the specifications of instances.
     * * **RENEW**: specifies the query orders that are used to renew instances.
     * * **CONVERT**: specifies the query orders that are used to change the billing methods of instances.
     * 
     */
    @Import(name="orderType", required=true)
    private String orderType;

    /**
     * @return FThe type of order that you want to query. Valid values:
     * * **BUY**: specifies the query orders that are used to purchase instances.
     * * **UPGRADE**: specifies the query orders that are used to change the specifications of instances.
     * * **RENEW**: specifies the query orders that are used to renew instances.
     * * **CONVERT**: specifies the query orders that are used to change the billing methods of instances.
     * 
     */
    public String orderType() {
        return this.orderType;
    }

    /**
     * File name where to save data source results (after running `pulumi up`).
     * 
     * &gt; **NOTE**: If you use the CommodityCode parameter to query the instance types that are available to read-only instances, you must specify the DBInstanceId parameter.
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi up`).
     * 
     * &gt; **NOTE**: If you use the CommodityCode parameter to query the instance types that are available to read-only instances, you must specify the DBInstanceId parameter.
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    private GetInstanceClassInfosPlainArgs() {}

    private GetInstanceClassInfosPlainArgs(GetInstanceClassInfosPlainArgs $) {
        this.commodityCode = $.commodityCode;
        this.dbInstanceId = $.dbInstanceId;
        this.infos = $.infos;
        this.orderType = $.orderType;
        this.outputFile = $.outputFile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstanceClassInfosPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstanceClassInfosPlainArgs $;

        public Builder() {
            $ = new GetInstanceClassInfosPlainArgs();
        }

        public Builder(GetInstanceClassInfosPlainArgs defaults) {
            $ = new GetInstanceClassInfosPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param commodityCode The commodity code of the instance. Valid values:
         * * **bards**: The instance is a pay-as-you-go primary instance. This value is available on the China site (aliyun.com).
         * * **rds**: The instance is a subscription primary instance. This value is available on the China site (aliyun.com).
         * * **rords**: The instance is a pay-as-you-go read-only instance. This value is available on the China site (aliyun.com).
         * * **rds_rordspre_public_cn**: The instance is a subscription read-only instance. This value is available on the China site (aliyun.com).
         * * **bards_intl**: The instance is a pay-as-you-go primary instance. This value is available on the International site (alibabacloud.com).
         * * **rds_intl**: The instance is a subscription primary instance. This value is available on the International site (alibabacloud.com).
         * * **rords_intl**: The instance is a pay-as-you-go read-only instance. This value is available on the International site (alibabacloud.com).
         * * **rds_rordspre_public_intl**: The instance is a subscription read-only instance. This value is available on the International site (alibabacloud.com).
         * 
         * @return builder
         * 
         */
        public Builder commodityCode(String commodityCode) {
            $.commodityCode = commodityCode;
            return this;
        }

        /**
         * @param dbInstanceId The ID of the primary instance.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceId(@Nullable String dbInstanceId) {
            $.dbInstanceId = dbInstanceId;
            return this;
        }

        /**
         * @param infos A list of Rds available resource. Each element contains the following attributes:
         * 
         * @return builder
         * 
         */
        public Builder infos(@Nullable List<GetInstanceClassInfosInfo> infos) {
            $.infos = infos;
            return this;
        }

        /**
         * @param infos A list of Rds available resource. Each element contains the following attributes:
         * 
         * @return builder
         * 
         */
        public Builder infos(GetInstanceClassInfosInfo... infos) {
            return infos(List.of(infos));
        }

        /**
         * @param orderType FThe type of order that you want to query. Valid values:
         * * **BUY**: specifies the query orders that are used to purchase instances.
         * * **UPGRADE**: specifies the query orders that are used to change the specifications of instances.
         * * **RENEW**: specifies the query orders that are used to renew instances.
         * * **CONVERT**: specifies the query orders that are used to change the billing methods of instances.
         * 
         * @return builder
         * 
         */
        public Builder orderType(String orderType) {
            $.orderType = orderType;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi up`).
         * 
         * &gt; **NOTE**: If you use the CommodityCode parameter to query the instance types that are available to read-only instances, you must specify the DBInstanceId parameter.
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        public GetInstanceClassInfosPlainArgs build() {
            if ($.commodityCode == null) {
                throw new MissingRequiredPropertyException("GetInstanceClassInfosPlainArgs", "commodityCode");
            }
            if ($.orderType == null) {
                throw new MissingRequiredPropertyException("GetInstanceClassInfosPlainArgs", "orderType");
            }
            return $;
        }
    }

}
