// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cdn.inputs;

import com.pulumi.alicloud.cdn.inputs.DomainAuthConfigArgs;
import com.pulumi.alicloud.cdn.inputs.DomainCacheConfigArgs;
import com.pulumi.alicloud.cdn.inputs.DomainCertificateConfigArgs;
import com.pulumi.alicloud.cdn.inputs.DomainHttpHeaderConfigArgs;
import com.pulumi.alicloud.cdn.inputs.DomainPage404ConfigArgs;
import com.pulumi.alicloud.cdn.inputs.DomainParameterFilterConfigArgs;
import com.pulumi.alicloud.cdn.inputs.DomainReferConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainState extends com.pulumi.resources.ResourceArgs {

    public static final DomainState Empty = new DomainState();

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Import(name="authConfig")
    private @Nullable Output<DomainAuthConfigArgs> authConfig;

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    public Optional<Output<DomainAuthConfigArgs>> authConfig() {
        return Optional.ofNullable(this.authConfig);
    }

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Import(name="blockIps")
    private @Nullable Output<List<String>> blockIps;

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    public Optional<Output<List<String>>> blockIps() {
        return Optional.ofNullable(this.blockIps);
    }

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Import(name="cacheConfigs")
    private @Nullable Output<List<DomainCacheConfigArgs>> cacheConfigs;

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    public Optional<Output<List<DomainCacheConfigArgs>>> cacheConfigs() {
        return Optional.ofNullable(this.cacheConfigs);
    }

    @Import(name="cdnType")
    private @Nullable Output<String> cdnType;

    public Optional<Output<String>> cdnType() {
        return Optional.ofNullable(this.cdnType);
    }

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Import(name="certificateConfig")
    private @Nullable Output<DomainCertificateConfigArgs> certificateConfig;

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    public Optional<Output<DomainCertificateConfigArgs>> certificateConfig() {
        return Optional.ofNullable(this.certificateConfig);
    }

    @Import(name="domainName")
    private @Nullable Output<String> domainName;

    public Optional<Output<String>> domainName() {
        return Optional.ofNullable(this.domainName);
    }

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Import(name="httpHeaderConfigs")
    private @Nullable Output<List<DomainHttpHeaderConfigArgs>> httpHeaderConfigs;

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    public Optional<Output<List<DomainHttpHeaderConfigArgs>>> httpHeaderConfigs() {
        return Optional.ofNullable(this.httpHeaderConfigs);
    }

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Import(name="optimizeEnable")
    private @Nullable Output<String> optimizeEnable;

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    public Optional<Output<String>> optimizeEnable() {
        return Optional.ofNullable(this.optimizeEnable);
    }

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Import(name="page404Config")
    private @Nullable Output<DomainPage404ConfigArgs> page404Config;

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    public Optional<Output<DomainPage404ConfigArgs>> page404Config() {
        return Optional.ofNullable(this.page404Config);
    }

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Import(name="pageCompressEnable")
    private @Nullable Output<String> pageCompressEnable;

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    public Optional<Output<String>> pageCompressEnable() {
        return Optional.ofNullable(this.pageCompressEnable);
    }

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Import(name="parameterFilterConfig")
    private @Nullable Output<DomainParameterFilterConfigArgs> parameterFilterConfig;

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    public Optional<Output<DomainParameterFilterConfigArgs>> parameterFilterConfig() {
        return Optional.ofNullable(this.parameterFilterConfig);
    }

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Import(name="rangeEnable")
    private @Nullable Output<String> rangeEnable;

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    public Optional<Output<String>> rangeEnable() {
        return Optional.ofNullable(this.rangeEnable);
    }

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Import(name="referConfig")
    private @Nullable Output<DomainReferConfigArgs> referConfig;

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    public Optional<Output<DomainReferConfigArgs>> referConfig() {
        return Optional.ofNullable(this.referConfig);
    }

    @Import(name="scope")
    private @Nullable Output<String> scope;

    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_new` configuration `sources` block `port` argument instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_new` configuration `sources` block `port` argument instead. */
    @Import(name="sourcePort")
    private @Nullable Output<Integer> sourcePort;

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_new` configuration `sources` block `port` argument instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_new` configuration `sources` block `port` argument instead. */
    public Optional<Output<Integer>> sourcePort() {
        return Optional.ofNullable(this.sourcePort);
    }

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_new` configuration `sources` block `type` argument instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_new` configuration `sources` block `type` argument instead. */
    @Import(name="sourceType")
    private @Nullable Output<String> sourceType;

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_new` configuration `sources` block `type` argument instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_new` configuration `sources` block `type` argument instead. */
    public Optional<Output<String>> sourceType() {
        return Optional.ofNullable(this.sourceType);
    }

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_new` configuration `sources` argument instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_new` configuration `sources` argument instead. */
    @Import(name="sources")
    private @Nullable Output<List<String>> sources;

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_new` configuration `sources` argument instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_new` configuration `sources` argument instead. */
    public Optional<Output<List<String>>> sources() {
        return Optional.ofNullable(this.sources);
    }

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Import(name="videoSeekEnable")
    private @Nullable Output<String> videoSeekEnable;

    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    public Optional<Output<String>> videoSeekEnable() {
        return Optional.ofNullable(this.videoSeekEnable);
    }

    private DomainState() {}

    private DomainState(DomainState $) {
        this.authConfig = $.authConfig;
        this.blockIps = $.blockIps;
        this.cacheConfigs = $.cacheConfigs;
        this.cdnType = $.cdnType;
        this.certificateConfig = $.certificateConfig;
        this.domainName = $.domainName;
        this.httpHeaderConfigs = $.httpHeaderConfigs;
        this.optimizeEnable = $.optimizeEnable;
        this.page404Config = $.page404Config;
        this.pageCompressEnable = $.pageCompressEnable;
        this.parameterFilterConfig = $.parameterFilterConfig;
        this.rangeEnable = $.rangeEnable;
        this.referConfig = $.referConfig;
        this.scope = $.scope;
        this.sourcePort = $.sourcePort;
        this.sourceType = $.sourceType;
        this.sources = $.sources;
        this.videoSeekEnable = $.videoSeekEnable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainState $;

        public Builder() {
            $ = new DomainState();
        }

        public Builder(DomainState defaults) {
            $ = new DomainState(Objects.requireNonNull(defaults));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder authConfig(@Nullable Output<DomainAuthConfigArgs> authConfig) {
            $.authConfig = authConfig;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder authConfig(DomainAuthConfigArgs authConfig) {
            return authConfig(Output.of(authConfig));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder blockIps(@Nullable Output<List<String>> blockIps) {
            $.blockIps = blockIps;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder blockIps(List<String> blockIps) {
            return blockIps(Output.of(blockIps));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder blockIps(String... blockIps) {
            return blockIps(List.of(blockIps));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder cacheConfigs(@Nullable Output<List<DomainCacheConfigArgs>> cacheConfigs) {
            $.cacheConfigs = cacheConfigs;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder cacheConfigs(List<DomainCacheConfigArgs> cacheConfigs) {
            return cacheConfigs(Output.of(cacheConfigs));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder cacheConfigs(DomainCacheConfigArgs... cacheConfigs) {
            return cacheConfigs(List.of(cacheConfigs));
        }

        public Builder cdnType(@Nullable Output<String> cdnType) {
            $.cdnType = cdnType;
            return this;
        }

        public Builder cdnType(String cdnType) {
            return cdnType(Output.of(cdnType));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder certificateConfig(@Nullable Output<DomainCertificateConfigArgs> certificateConfig) {
            $.certificateConfig = certificateConfig;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder certificateConfig(DomainCertificateConfigArgs certificateConfig) {
            return certificateConfig(Output.of(certificateConfig));
        }

        public Builder domainName(@Nullable Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder httpHeaderConfigs(@Nullable Output<List<DomainHttpHeaderConfigArgs>> httpHeaderConfigs) {
            $.httpHeaderConfigs = httpHeaderConfigs;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder httpHeaderConfigs(List<DomainHttpHeaderConfigArgs> httpHeaderConfigs) {
            return httpHeaderConfigs(Output.of(httpHeaderConfigs));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder httpHeaderConfigs(DomainHttpHeaderConfigArgs... httpHeaderConfigs) {
            return httpHeaderConfigs(List.of(httpHeaderConfigs));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder optimizeEnable(@Nullable Output<String> optimizeEnable) {
            $.optimizeEnable = optimizeEnable;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder optimizeEnable(String optimizeEnable) {
            return optimizeEnable(Output.of(optimizeEnable));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder page404Config(@Nullable Output<DomainPage404ConfigArgs> page404Config) {
            $.page404Config = page404Config;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder page404Config(DomainPage404ConfigArgs page404Config) {
            return page404Config(Output.of(page404Config));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder pageCompressEnable(@Nullable Output<String> pageCompressEnable) {
            $.pageCompressEnable = pageCompressEnable;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder pageCompressEnable(String pageCompressEnable) {
            return pageCompressEnable(Output.of(pageCompressEnable));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder parameterFilterConfig(@Nullable Output<DomainParameterFilterConfigArgs> parameterFilterConfig) {
            $.parameterFilterConfig = parameterFilterConfig;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder parameterFilterConfig(DomainParameterFilterConfigArgs parameterFilterConfig) {
            return parameterFilterConfig(Output.of(parameterFilterConfig));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder rangeEnable(@Nullable Output<String> rangeEnable) {
            $.rangeEnable = rangeEnable;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder rangeEnable(String rangeEnable) {
            return rangeEnable(Output.of(rangeEnable));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder referConfig(@Nullable Output<DomainReferConfigArgs> referConfig) {
            $.referConfig = referConfig;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder referConfig(DomainReferConfigArgs referConfig) {
            return referConfig(Output.of(referConfig));
        }

        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_new` configuration `sources` block `port` argument instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_new` configuration `sources` block `port` argument instead. */
        public Builder sourcePort(@Nullable Output<Integer> sourcePort) {
            $.sourcePort = sourcePort;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_new` configuration `sources` block `port` argument instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_new` configuration `sources` block `port` argument instead. */
        public Builder sourcePort(Integer sourcePort) {
            return sourcePort(Output.of(sourcePort));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_new` configuration `sources` block `type` argument instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_new` configuration `sources` block `type` argument instead. */
        public Builder sourceType(@Nullable Output<String> sourceType) {
            $.sourceType = sourceType;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_new` configuration `sources` block `type` argument instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_new` configuration `sources` block `type` argument instead. */
        public Builder sourceType(String sourceType) {
            return sourceType(Output.of(sourceType));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_new` configuration `sources` argument instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_new` configuration `sources` argument instead. */
        public Builder sources(@Nullable Output<List<String>> sources) {
            $.sources = sources;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_new` configuration `sources` argument instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_new` configuration `sources` argument instead. */
        public Builder sources(List<String> sources) {
            return sources(Output.of(sources));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_new` configuration `sources` argument instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_new` configuration `sources` argument instead. */
        public Builder sources(String... sources) {
            return sources(List.of(sources));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder videoSeekEnable(@Nullable Output<String> videoSeekEnable) {
            $.videoSeekEnable = videoSeekEnable;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
         * 
         */
        @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
        public Builder videoSeekEnable(String videoSeekEnable) {
            return videoSeekEnable(Output.of(videoSeekEnable));
        }

        public DomainState build() {
            return $;
        }
    }

}
