// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.schedulerx.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobJobMonitorInfoMonitorConfig {
    /**
     * @return Enable failure alarm
     * 
     */
    private @Nullable Boolean failEnable;
    /**
     * @return Whether no available Machine alarm is on
     * 
     */
    private @Nullable Boolean missWorkerEnable;
    /**
     * @return Alarm sending form
     * - sms: sms alarm
     * - phone: phone alarm
     * - mail: mail alarm
     * - webhook:webhook alarm
     * 
     */
    private @Nullable String sendChannel;
    /**
     * @return Timeout threshold, unit s, default 7200.
     * 
     */
    private @Nullable Integer timeout;
    /**
     * @return Time-out alarm switch. The values are as follows:
     * 
     */
    private @Nullable Boolean timeoutEnable;
    /**
     * @return The trigger switch is terminated by timeout and is turned off by default.
     * 
     */
    private @Nullable Boolean timeoutKillEnable;

    private JobJobMonitorInfoMonitorConfig() {}
    /**
     * @return Enable failure alarm
     * 
     */
    public Optional<Boolean> failEnable() {
        return Optional.ofNullable(this.failEnable);
    }
    /**
     * @return Whether no available Machine alarm is on
     * 
     */
    public Optional<Boolean> missWorkerEnable() {
        return Optional.ofNullable(this.missWorkerEnable);
    }
    /**
     * @return Alarm sending form
     * - sms: sms alarm
     * - phone: phone alarm
     * - mail: mail alarm
     * - webhook:webhook alarm
     * 
     */
    public Optional<String> sendChannel() {
        return Optional.ofNullable(this.sendChannel);
    }
    /**
     * @return Timeout threshold, unit s, default 7200.
     * 
     */
    public Optional<Integer> timeout() {
        return Optional.ofNullable(this.timeout);
    }
    /**
     * @return Time-out alarm switch. The values are as follows:
     * 
     */
    public Optional<Boolean> timeoutEnable() {
        return Optional.ofNullable(this.timeoutEnable);
    }
    /**
     * @return The trigger switch is terminated by timeout and is turned off by default.
     * 
     */
    public Optional<Boolean> timeoutKillEnable() {
        return Optional.ofNullable(this.timeoutKillEnable);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobJobMonitorInfoMonitorConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean failEnable;
        private @Nullable Boolean missWorkerEnable;
        private @Nullable String sendChannel;
        private @Nullable Integer timeout;
        private @Nullable Boolean timeoutEnable;
        private @Nullable Boolean timeoutKillEnable;
        public Builder() {}
        public Builder(JobJobMonitorInfoMonitorConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.failEnable = defaults.failEnable;
    	      this.missWorkerEnable = defaults.missWorkerEnable;
    	      this.sendChannel = defaults.sendChannel;
    	      this.timeout = defaults.timeout;
    	      this.timeoutEnable = defaults.timeoutEnable;
    	      this.timeoutKillEnable = defaults.timeoutKillEnable;
        }

        @CustomType.Setter
        public Builder failEnable(@Nullable Boolean failEnable) {

            this.failEnable = failEnable;
            return this;
        }
        @CustomType.Setter
        public Builder missWorkerEnable(@Nullable Boolean missWorkerEnable) {

            this.missWorkerEnable = missWorkerEnable;
            return this;
        }
        @CustomType.Setter
        public Builder sendChannel(@Nullable String sendChannel) {

            this.sendChannel = sendChannel;
            return this;
        }
        @CustomType.Setter
        public Builder timeout(@Nullable Integer timeout) {

            this.timeout = timeout;
            return this;
        }
        @CustomType.Setter
        public Builder timeoutEnable(@Nullable Boolean timeoutEnable) {

            this.timeoutEnable = timeoutEnable;
            return this;
        }
        @CustomType.Setter
        public Builder timeoutKillEnable(@Nullable Boolean timeoutKillEnable) {

            this.timeoutKillEnable = timeoutKillEnable;
            return this;
        }
        public JobJobMonitorInfoMonitorConfig build() {
            final var _resultValue = new JobJobMonitorInfoMonitorConfig();
            _resultValue.failEnable = failEnable;
            _resultValue.missWorkerEnable = missWorkerEnable;
            _resultValue.sendChannel = sendChannel;
            _resultValue.timeout = timeout;
            _resultValue.timeoutEnable = timeoutEnable;
            _resultValue.timeoutKillEnable = timeoutKillEnable;
            return _resultValue;
        }
    }
}
