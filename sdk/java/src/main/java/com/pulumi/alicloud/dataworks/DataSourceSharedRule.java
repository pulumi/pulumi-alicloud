// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dataworks;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.dataworks.DataSourceSharedRuleArgs;
import com.pulumi.alicloud.dataworks.inputs.DataSourceSharedRuleState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Data Works Data Source Shared Rule resource.
 * 
 * Data source sharing rule, which expresses A data source, from space A to space B (A user).
 * 
 * For information about Data Works Data Source Shared Rule and how to use it, see [What is Data Source Shared Rule](https://www.alibabacloud.com/help/en/dataworks/developer-reference/api-dataworks-public-2024-05-18-createdatasourcesharedrule).
 * 
 * &gt; **NOTE:** Available since v1.237.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
 * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
 * import com.pulumi.alicloud.dataworks.Project;
 * import com.pulumi.alicloud.dataworks.ProjectArgs;
 * import com.pulumi.std.StdFunctions;
 * import com.pulumi.std.inputs.FormatArgs;
 * import com.pulumi.alicloud.dataworks.DataSource;
 * import com.pulumi.alicloud.dataworks.DataSourceArgs;
 * import com.pulumi.alicloud.dataworks.DataSourceSharedRule;
 * import com.pulumi.alicloud.dataworks.DataSourceSharedRuleArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("tf_example");
 *         var randint = new Integer("randint", IntegerArgs.builder()
 *             .max(999)
 *             .min(1)
 *             .build());
 * 
 *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
 *             .build());
 * 
 *         var defaultQeRfvU = new Project("defaultQeRfvU", ProjectArgs.builder()
 *             .description("源项目")
 *             .projectName(name)
 *             .displayName("shared_source2")
 *             .paiTaskEnabled(true)
 *             .build());
 * 
 *         var defaultasjsH5 = new Project("defaultasjsH5", ProjectArgs.builder()
 *             .description("目标空间")
 *             .projectName(StdFunctions.format(FormatArgs.builder()
 *                 .input("%s1")
 *                 .args(name)
 *                 .build()).result())
 *             .displayName("shared_target2")
 *             .paiTaskEnabled(true)
 *             .build());
 * 
 *         var defaultvzu0wG = new DataSource("defaultvzu0wG", DataSourceArgs.builder()
 *             .type("hive")
 *             .dataSourceName(StdFunctions.format(FormatArgs.builder()
 *                 .input("%s2")
 *                 .args(name)
 *                 .build()).result())
 *             .connectionProperties(serializeJson(
 *                 jsonObject(
 *                     jsonProperty("address", jsonArray(jsonObject(
 *                         jsonProperty("host", "127.0.0.1"),
 *                         jsonProperty("port", "1234")
 *                     ))),
 *                     jsonProperty("database", "hive_database"),
 *                     jsonProperty("metaType", "HiveMetastore"),
 *                     jsonProperty("metastoreUris", "thrift://123:123"),
 *                     jsonProperty("version", "2.3.9"),
 *                     jsonProperty("loginMode", "Anonymous"),
 *                     jsonProperty("securityProtocol", "authTypeNone"),
 *                     jsonProperty("envType", "Prod"),
 *                     jsonProperty("properties", jsonObject(
 *                         jsonProperty("key1", "value1")
 *                     ))
 *                 )))
 *             .projectId(defaultQeRfvU.id())
 *             .connectionPropertiesMode("UrlMode")
 *             .build());
 * 
 *         var defaultDataSourceSharedRule = new DataSourceSharedRule("defaultDataSourceSharedRule", DataSourceSharedRuleArgs.builder()
 *             .targetProjectId(defaultasjsH5.id())
 *             .dataSourceId(defaultvzu0wG.dataSourceId())
 *             .envType("Prod")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Data Works Data Source Shared Rule can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:dataworks/dataSourceSharedRule:DataSourceSharedRule example &lt;data_source_id&gt;:&lt;data_source_shared_rule_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:dataworks/dataSourceSharedRule:DataSourceSharedRule")
public class DataSourceSharedRule extends com.pulumi.resources.CustomResource {
    /**
     * The creation time of the data source sharing rule.
     * 
     */
    @Export(name="createTime", refs={Integer.class}, tree="[0]")
    private Output<Integer> createTime;

    /**
     * @return The creation time of the data source sharing rule.
     * 
     */
    public Output<Integer> createTime() {
        return this.createTime;
    }
    /**
     * The ID of the data source, that is, the unique identifier of the data source.
     * 
     */
    @Export(name="dataSourceId", refs={Integer.class}, tree="[0]")
    private Output<Integer> dataSourceId;

    /**
     * @return The ID of the data source, that is, the unique identifier of the data source.
     * 
     */
    public Output<Integer> dataSourceId() {
        return this.dataSourceId;
    }
    /**
     * The data source sharing rule ID, that is, the unique identifier of the data source sharing rule.
     * 
     */
    @Export(name="dataSourceSharedRuleId", refs={String.class}, tree="[0]")
    private Output<String> dataSourceSharedRuleId;

    /**
     * @return The data source sharing rule ID, that is, the unique identifier of the data source sharing rule.
     * 
     */
    public Output<String> dataSourceSharedRuleId() {
        return this.dataSourceSharedRuleId;
    }
    /**
     * The environment type of the data source shared to the target project, such as Dev (Development Environment) and Prod (production environment).
     * 
     */
    @Export(name="envType", refs={String.class}, tree="[0]")
    private Output<String> envType;

    /**
     * @return The environment type of the data source shared to the target project, such as Dev (Development Environment) and Prod (production environment).
     * 
     */
    public Output<String> envType() {
        return this.envType;
    }
    /**
     * The target user of the data source permission policy, which is null to share to the project.
     * 
     */
    @Export(name="sharedUser", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sharedUser;

    /**
     * @return The target user of the data source permission policy, which is null to share to the project.
     * 
     */
    public Output<Optional<String>> sharedUser() {
        return Codegen.optional(this.sharedUser);
    }
    /**
     * The ID of the project to which the data source is shared.
     * 
     */
    @Export(name="targetProjectId", refs={Integer.class}, tree="[0]")
    private Output<Integer> targetProjectId;

    /**
     * @return The ID of the project to which the data source is shared.
     * 
     */
    public Output<Integer> targetProjectId() {
        return this.targetProjectId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DataSourceSharedRule(java.lang.String name) {
        this(name, DataSourceSharedRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DataSourceSharedRule(java.lang.String name, DataSourceSharedRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DataSourceSharedRule(java.lang.String name, DataSourceSharedRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:dataworks/dataSourceSharedRule:DataSourceSharedRule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DataSourceSharedRule(java.lang.String name, Output<java.lang.String> id, @Nullable DataSourceSharedRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:dataworks/dataSourceSharedRule:DataSourceSharedRule", name, state, makeResourceOptions(options, id), false);
    }

    private static DataSourceSharedRuleArgs makeArgs(DataSourceSharedRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DataSourceSharedRuleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DataSourceSharedRule get(java.lang.String name, Output<java.lang.String> id, @Nullable DataSourceSharedRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DataSourceSharedRule(name, id, state, options);
    }
}
