// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eds.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPolicyGroupsGroupAuthorizeSecurityPolicyRule {
    /**
     * @return The cidrip of security rules.
     * 
     */
    private String cidrIp;
    /**
     * @return The description of security rules.
     * 
     */
    private String description;
    /**
     * @return The ip protocol of security rules.
     * 
     */
    private String ipProtocol;
    /**
     * @return The policy of security rules.
     * 
     */
    private String policy;
    /**
     * @return The port range of security rules.
     * 
     */
    private String portRange;
    /**
     * @return The priority of security rules.
     * 
     */
    private String priority;
    /**
     * @return The type of security rules.
     * 
     */
    private String type;

    private GetPolicyGroupsGroupAuthorizeSecurityPolicyRule() {}
    /**
     * @return The cidrip of security rules.
     * 
     */
    public String cidrIp() {
        return this.cidrIp;
    }
    /**
     * @return The description of security rules.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The ip protocol of security rules.
     * 
     */
    public String ipProtocol() {
        return this.ipProtocol;
    }
    /**
     * @return The policy of security rules.
     * 
     */
    public String policy() {
        return this.policy;
    }
    /**
     * @return The port range of security rules.
     * 
     */
    public String portRange() {
        return this.portRange;
    }
    /**
     * @return The priority of security rules.
     * 
     */
    public String priority() {
        return this.priority;
    }
    /**
     * @return The type of security rules.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPolicyGroupsGroupAuthorizeSecurityPolicyRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cidrIp;
        private String description;
        private String ipProtocol;
        private String policy;
        private String portRange;
        private String priority;
        private String type;
        public Builder() {}
        public Builder(GetPolicyGroupsGroupAuthorizeSecurityPolicyRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidrIp = defaults.cidrIp;
    	      this.description = defaults.description;
    	      this.ipProtocol = defaults.ipProtocol;
    	      this.policy = defaults.policy;
    	      this.portRange = defaults.portRange;
    	      this.priority = defaults.priority;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder cidrIp(String cidrIp) {
            if (cidrIp == null) {
              throw new MissingRequiredPropertyException("GetPolicyGroupsGroupAuthorizeSecurityPolicyRule", "cidrIp");
            }
            this.cidrIp = cidrIp;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetPolicyGroupsGroupAuthorizeSecurityPolicyRule", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder ipProtocol(String ipProtocol) {
            if (ipProtocol == null) {
              throw new MissingRequiredPropertyException("GetPolicyGroupsGroupAuthorizeSecurityPolicyRule", "ipProtocol");
            }
            this.ipProtocol = ipProtocol;
            return this;
        }
        @CustomType.Setter
        public Builder policy(String policy) {
            if (policy == null) {
              throw new MissingRequiredPropertyException("GetPolicyGroupsGroupAuthorizeSecurityPolicyRule", "policy");
            }
            this.policy = policy;
            return this;
        }
        @CustomType.Setter
        public Builder portRange(String portRange) {
            if (portRange == null) {
              throw new MissingRequiredPropertyException("GetPolicyGroupsGroupAuthorizeSecurityPolicyRule", "portRange");
            }
            this.portRange = portRange;
            return this;
        }
        @CustomType.Setter
        public Builder priority(String priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetPolicyGroupsGroupAuthorizeSecurityPolicyRule", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetPolicyGroupsGroupAuthorizeSecurityPolicyRule", "type");
            }
            this.type = type;
            return this;
        }
        public GetPolicyGroupsGroupAuthorizeSecurityPolicyRule build() {
            final var _resultValue = new GetPolicyGroupsGroupAuthorizeSecurityPolicyRule();
            _resultValue.cidrIp = cidrIp;
            _resultValue.description = description;
            _resultValue.ipProtocol = ipProtocol;
            _resultValue.policy = policy;
            _resultValue.portRange = portRange;
            _resultValue.priority = priority;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
