// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.wafv3.inputs;

import com.pulumi.alicloud.wafv3.inputs.DefenseRuleConfigRateLimitStatusArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DefenseRuleConfigRateLimitArgs extends com.pulumi.resources.ResourceArgs {

    public static final DefenseRuleConfigRateLimitArgs Empty = new DefenseRuleConfigRateLimitArgs();

    /**
     * The statistical period, in seconds. This parameter specifies the period during which access counts are collected, and works with the Threshold parameter.
     * Valid values: 1 to 1800 seconds.
     * 
     */
    @Import(name="interval")
    private @Nullable Output<Integer> interval;

    /**
     * @return The statistical period, in seconds. This parameter specifies the period during which access counts are collected, and works with the Threshold parameter.
     * Valid values: 1 to 1800 seconds.
     * 
     */
    public Optional<Output<Integer>> interval() {
        return Optional.ofNullable(this.interval);
    }

    /**
     * Response code frequency setting. The description is in the JSON string format. See `status` below.
     * 
     */
    @Import(name="status")
    private @Nullable Output<DefenseRuleConfigRateLimitStatusArgs> status;

    /**
     * @return Response code frequency setting. The description is in the JSON string format. See `status` below.
     * 
     */
    public Optional<Output<DefenseRuleConfigRateLimitStatusArgs>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The characteristics of the statistical object. When the Target parameter is set to cookie, header, or queryarg, you must specify the corresponding information in the Subkey parameter.
     * 
     */
    @Import(name="subKey")
    private @Nullable Output<String> subKey;

    /**
     * @return The characteristics of the statistical object. When the Target parameter is set to cookie, header, or queryarg, you must specify the corresponding information in the Subkey parameter.
     * 
     */
    public Optional<Output<String>> subKey() {
        return Optional.ofNullable(this.subKey);
    }

    /**
     * The type of the statistical object. Valid values:
     * - remote_addr (default): indicates IP.
     * - cookie.acw_tc: indicates session.
     * - header: indicates custom header. If you use custom headers, you must specify the headers in subkey.
     * - queryarg: indicates custom parameters. If you use custom parameters, you must specify the parameters in subkey.
     * - cookie: indicates custom cookies. If you use custom cookies, you must specify the cookies in subkey.
     * 
     */
    @Import(name="target")
    private @Nullable Output<String> target;

    /**
     * @return The type of the statistical object. Valid values:
     * - remote_addr (default): indicates IP.
     * - cookie.acw_tc: indicates session.
     * - header: indicates custom header. If you use custom headers, you must specify the headers in subkey.
     * - queryarg: indicates custom parameters. If you use custom parameters, you must specify the parameters in subkey.
     * - cookie: indicates custom cookies. If you use custom cookies, you must specify the cookies in subkey.
     * 
     */
    public Optional<Output<String>> target() {
        return Optional.ofNullable(this.target);
    }

    /**
     * The maximum number of requests that can be sent from a statistical object.
     * 
     */
    @Import(name="threshold")
    private @Nullable Output<Integer> threshold;

    /**
     * @return The maximum number of requests that can be sent from a statistical object.
     * 
     */
    public Optional<Output<Integer>> threshold() {
        return Optional.ofNullable(this.threshold);
    }

    /**
     * The period of time during which you want the specified action to be valid. Unit: seconds.
     * Valid values: 60 to 86400.
     * 
     */
    @Import(name="ttl")
    private @Nullable Output<Integer> ttl;

    /**
     * @return The period of time during which you want the specified action to be valid. Unit: seconds.
     * Valid values: 60 to 86400.
     * 
     */
    public Optional<Output<Integer>> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    private DefenseRuleConfigRateLimitArgs() {}

    private DefenseRuleConfigRateLimitArgs(DefenseRuleConfigRateLimitArgs $) {
        this.interval = $.interval;
        this.status = $.status;
        this.subKey = $.subKey;
        this.target = $.target;
        this.threshold = $.threshold;
        this.ttl = $.ttl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DefenseRuleConfigRateLimitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DefenseRuleConfigRateLimitArgs $;

        public Builder() {
            $ = new DefenseRuleConfigRateLimitArgs();
        }

        public Builder(DefenseRuleConfigRateLimitArgs defaults) {
            $ = new DefenseRuleConfigRateLimitArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param interval The statistical period, in seconds. This parameter specifies the period during which access counts are collected, and works with the Threshold parameter.
         * Valid values: 1 to 1800 seconds.
         * 
         * @return builder
         * 
         */
        public Builder interval(@Nullable Output<Integer> interval) {
            $.interval = interval;
            return this;
        }

        /**
         * @param interval The statistical period, in seconds. This parameter specifies the period during which access counts are collected, and works with the Threshold parameter.
         * Valid values: 1 to 1800 seconds.
         * 
         * @return builder
         * 
         */
        public Builder interval(Integer interval) {
            return interval(Output.of(interval));
        }

        /**
         * @param status Response code frequency setting. The description is in the JSON string format. See `status` below.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<DefenseRuleConfigRateLimitStatusArgs> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Response code frequency setting. The description is in the JSON string format. See `status` below.
         * 
         * @return builder
         * 
         */
        public Builder status(DefenseRuleConfigRateLimitStatusArgs status) {
            return status(Output.of(status));
        }

        /**
         * @param subKey The characteristics of the statistical object. When the Target parameter is set to cookie, header, or queryarg, you must specify the corresponding information in the Subkey parameter.
         * 
         * @return builder
         * 
         */
        public Builder subKey(@Nullable Output<String> subKey) {
            $.subKey = subKey;
            return this;
        }

        /**
         * @param subKey The characteristics of the statistical object. When the Target parameter is set to cookie, header, or queryarg, you must specify the corresponding information in the Subkey parameter.
         * 
         * @return builder
         * 
         */
        public Builder subKey(String subKey) {
            return subKey(Output.of(subKey));
        }

        /**
         * @param target The type of the statistical object. Valid values:
         * - remote_addr (default): indicates IP.
         * - cookie.acw_tc: indicates session.
         * - header: indicates custom header. If you use custom headers, you must specify the headers in subkey.
         * - queryarg: indicates custom parameters. If you use custom parameters, you must specify the parameters in subkey.
         * - cookie: indicates custom cookies. If you use custom cookies, you must specify the cookies in subkey.
         * 
         * @return builder
         * 
         */
        public Builder target(@Nullable Output<String> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target The type of the statistical object. Valid values:
         * - remote_addr (default): indicates IP.
         * - cookie.acw_tc: indicates session.
         * - header: indicates custom header. If you use custom headers, you must specify the headers in subkey.
         * - queryarg: indicates custom parameters. If you use custom parameters, you must specify the parameters in subkey.
         * - cookie: indicates custom cookies. If you use custom cookies, you must specify the cookies in subkey.
         * 
         * @return builder
         * 
         */
        public Builder target(String target) {
            return target(Output.of(target));
        }

        /**
         * @param threshold The maximum number of requests that can be sent from a statistical object.
         * 
         * @return builder
         * 
         */
        public Builder threshold(@Nullable Output<Integer> threshold) {
            $.threshold = threshold;
            return this;
        }

        /**
         * @param threshold The maximum number of requests that can be sent from a statistical object.
         * 
         * @return builder
         * 
         */
        public Builder threshold(Integer threshold) {
            return threshold(Output.of(threshold));
        }

        /**
         * @param ttl The period of time during which you want the specified action to be valid. Unit: seconds.
         * Valid values: 60 to 86400.
         * 
         * @return builder
         * 
         */
        public Builder ttl(@Nullable Output<Integer> ttl) {
            $.ttl = ttl;
            return this;
        }

        /**
         * @param ttl The period of time during which you want the specified action to be valid. Unit: seconds.
         * Valid values: 60 to 86400.
         * 
         * @return builder
         * 
         */
        public Builder ttl(Integer ttl) {
            return ttl(Output.of(ttl));
        }

        public DefenseRuleConfigRateLimitArgs build() {
            return $;
        }
    }

}
