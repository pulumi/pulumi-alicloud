// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.mongodb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GlobalSecurityIpGroupState extends com.pulumi.resources.ResourceArgs {

    public static final GlobalSecurityIpGroupState Empty = new GlobalSecurityIpGroupState();

    /**
     * The name of the IP whitelist template.
     * 
     */
    @Import(name="globalIgName")
    private @Nullable Output<String> globalIgName;

    /**
     * @return The name of the IP whitelist template.
     * 
     */
    public Optional<Output<String>> globalIgName() {
        return Optional.ofNullable(this.globalIgName);
    }

    /**
     * The IP address in the whitelist template.
     * 
     * &gt; **NOTE:** Separate multiple IP addresses with commas (,). You can create up to 1000 IP addresses or CIDR blocks for all IP address whitelists.
     * 
     */
    @Import(name="globalSecurityIpList")
    private @Nullable Output<String> globalSecurityIpList;

    /**
     * @return The IP address in the whitelist template.
     * 
     * &gt; **NOTE:** Separate multiple IP addresses with commas (,). You can create up to 1000 IP addresses or CIDR blocks for all IP address whitelists.
     * 
     */
    public Optional<Output<String>> globalSecurityIpList() {
        return Optional.ofNullable(this.globalSecurityIpList);
    }

    /**
     * The region ID of the resource
     * 
     */
    @Import(name="regionId")
    private @Nullable Output<String> regionId;

    /**
     * @return The region ID of the resource
     * 
     */
    public Optional<Output<String>> regionId() {
        return Optional.ofNullable(this.regionId);
    }

    private GlobalSecurityIpGroupState() {}

    private GlobalSecurityIpGroupState(GlobalSecurityIpGroupState $) {
        this.globalIgName = $.globalIgName;
        this.globalSecurityIpList = $.globalSecurityIpList;
        this.regionId = $.regionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GlobalSecurityIpGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GlobalSecurityIpGroupState $;

        public Builder() {
            $ = new GlobalSecurityIpGroupState();
        }

        public Builder(GlobalSecurityIpGroupState defaults) {
            $ = new GlobalSecurityIpGroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param globalIgName The name of the IP whitelist template.
         * 
         * @return builder
         * 
         */
        public Builder globalIgName(@Nullable Output<String> globalIgName) {
            $.globalIgName = globalIgName;
            return this;
        }

        /**
         * @param globalIgName The name of the IP whitelist template.
         * 
         * @return builder
         * 
         */
        public Builder globalIgName(String globalIgName) {
            return globalIgName(Output.of(globalIgName));
        }

        /**
         * @param globalSecurityIpList The IP address in the whitelist template.
         * 
         * &gt; **NOTE:** Separate multiple IP addresses with commas (,). You can create up to 1000 IP addresses or CIDR blocks for all IP address whitelists.
         * 
         * @return builder
         * 
         */
        public Builder globalSecurityIpList(@Nullable Output<String> globalSecurityIpList) {
            $.globalSecurityIpList = globalSecurityIpList;
            return this;
        }

        /**
         * @param globalSecurityIpList The IP address in the whitelist template.
         * 
         * &gt; **NOTE:** Separate multiple IP addresses with commas (,). You can create up to 1000 IP addresses or CIDR blocks for all IP address whitelists.
         * 
         * @return builder
         * 
         */
        public Builder globalSecurityIpList(String globalSecurityIpList) {
            return globalSecurityIpList(Output.of(globalSecurityIpList));
        }

        /**
         * @param regionId The region ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder regionId(@Nullable Output<String> regionId) {
            $.regionId = regionId;
            return this;
        }

        /**
         * @param regionId The region ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder regionId(String regionId) {
            return regionId(Output.of(regionId));
        }

        public GlobalSecurityIpGroupState build() {
            return $;
        }
    }

}
