// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AssetSelectionConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssetSelectionConfigArgs Empty = new AssetSelectionConfigArgs();

    /**
     * The first ID of the resource
     * 
     */
    @Import(name="businessType", required=true)
    private Output<String> businessType;

    /**
     * @return The first ID of the resource
     * 
     */
    public Output<String> businessType() {
        return this.businessType;
    }

    /**
     * The operating system type.
     * 
     */
    @Import(name="platform")
    private @Nullable Output<String> platform;

    /**
     * @return The operating system type.
     * 
     */
    public Optional<Output<String>> platform() {
        return Optional.ofNullable(this.platform);
    }

    /**
     * Target object type.
     * 
     */
    @Import(name="targetType", required=true)
    private Output<String> targetType;

    /**
     * @return Target object type.
     * 
     */
    public Output<String> targetType() {
        return this.targetType;
    }

    private AssetSelectionConfigArgs() {}

    private AssetSelectionConfigArgs(AssetSelectionConfigArgs $) {
        this.businessType = $.businessType;
        this.platform = $.platform;
        this.targetType = $.targetType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssetSelectionConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssetSelectionConfigArgs $;

        public Builder() {
            $ = new AssetSelectionConfigArgs();
        }

        public Builder(AssetSelectionConfigArgs defaults) {
            $ = new AssetSelectionConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param businessType The first ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder businessType(Output<String> businessType) {
            $.businessType = businessType;
            return this;
        }

        /**
         * @param businessType The first ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder businessType(String businessType) {
            return businessType(Output.of(businessType));
        }

        /**
         * @param platform The operating system type.
         * 
         * @return builder
         * 
         */
        public Builder platform(@Nullable Output<String> platform) {
            $.platform = platform;
            return this;
        }

        /**
         * @param platform The operating system type.
         * 
         * @return builder
         * 
         */
        public Builder platform(String platform) {
            return platform(Output.of(platform));
        }

        /**
         * @param targetType Target object type.
         * 
         * @return builder
         * 
         */
        public Builder targetType(Output<String> targetType) {
            $.targetType = targetType;
            return this;
        }

        /**
         * @param targetType Target object type.
         * 
         * @return builder
         * 
         */
        public Builder targetType(String targetType) {
            return targetType(Output.of(targetType));
        }

        public AssetSelectionConfigArgs build() {
            if ($.businessType == null) {
                throw new MissingRequiredPropertyException("AssetSelectionConfigArgs", "businessType");
            }
            if ($.targetType == null) {
                throw new MissingRequiredPropertyException("AssetSelectionConfigArgs", "targetType");
            }
            return $;
        }
    }

}
