// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vod;

import com.pulumi.alicloud.vod.inputs.DomainSourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainArgs Empty = new DomainArgs();

    /**
     * The URL that is used for health checks.
     * 
     */
    @Import(name="checkUrl")
    private @Nullable Output<String> checkUrl;

    /**
     * @return The URL that is used for health checks.
     * 
     */
    public Optional<Output<String>> checkUrl() {
        return Optional.ofNullable(this.checkUrl);
    }

    /**
     * The domain name for CDN that you want to add to ApsaraVideo VOD. Wildcard domain names are supported. Start the domain name with a period (.). Example: `.example.com.`.
     * 
     */
    @Import(name="domainName", required=true)
    private Output<String> domainName;

    /**
     * @return The domain name for CDN that you want to add to ApsaraVideo VOD. Wildcard domain names are supported. Start the domain name with a period (.). Example: `.example.com.`.
     * 
     */
    public Output<String> domainName() {
        return this.domainName;
    }

    /**
     * This parameter is applicable to users of level 3 or higher in mainland China and users outside mainland China. Valid values:
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return This parameter is applicable to users of level 3 or higher in mainland China and users outside mainland China. Valid values:
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    /**
     * The information about the address of the origin server. For more information about the Sources parameter, See the following `Block sources`.
     * 
     */
    @Import(name="sources", required=true)
    private Output<List<DomainSourceArgs>> sources;

    /**
     * @return The information about the address of the origin server. For more information about the Sources parameter, See the following `Block sources`.
     * 
     */
    public Output<List<DomainSourceArgs>> sources() {
        return this.sources;
    }

    /**
     * A mapping of tags to assign to the resource.
     * * `Key`: It can be up to 64 characters in length. It cannot be a null string.
     * * `Value`: It can be up to 128 characters in length. It can be a null string.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * * `Key`: It can be up to 64 characters in length. It cannot be a null string.
     * * `Value`: It can be up to 128 characters in length. It can be a null string.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The top-level domain name.
     * 
     */
    @Import(name="topLevelDomain")
    private @Nullable Output<String> topLevelDomain;

    /**
     * @return The top-level domain name.
     * 
     */
    public Optional<Output<String>> topLevelDomain() {
        return Optional.ofNullable(this.topLevelDomain);
    }

    private DomainArgs() {}

    private DomainArgs(DomainArgs $) {
        this.checkUrl = $.checkUrl;
        this.domainName = $.domainName;
        this.scope = $.scope;
        this.sources = $.sources;
        this.tags = $.tags;
        this.topLevelDomain = $.topLevelDomain;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainArgs $;

        public Builder() {
            $ = new DomainArgs();
        }

        public Builder(DomainArgs defaults) {
            $ = new DomainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param checkUrl The URL that is used for health checks.
         * 
         * @return builder
         * 
         */
        public Builder checkUrl(@Nullable Output<String> checkUrl) {
            $.checkUrl = checkUrl;
            return this;
        }

        /**
         * @param checkUrl The URL that is used for health checks.
         * 
         * @return builder
         * 
         */
        public Builder checkUrl(String checkUrl) {
            return checkUrl(Output.of(checkUrl));
        }

        /**
         * @param domainName The domain name for CDN that you want to add to ApsaraVideo VOD. Wildcard domain names are supported. Start the domain name with a period (.). Example: `.example.com.`.
         * 
         * @return builder
         * 
         */
        public Builder domainName(Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        /**
         * @param domainName The domain name for CDN that you want to add to ApsaraVideo VOD. Wildcard domain names are supported. Start the domain name with a period (.). Example: `.example.com.`.
         * 
         * @return builder
         * 
         */
        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        /**
         * @param scope This parameter is applicable to users of level 3 or higher in mainland China and users outside mainland China. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope This parameter is applicable to users of level 3 or higher in mainland China and users outside mainland China. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        /**
         * @param sources The information about the address of the origin server. For more information about the Sources parameter, See the following `Block sources`.
         * 
         * @return builder
         * 
         */
        public Builder sources(Output<List<DomainSourceArgs>> sources) {
            $.sources = sources;
            return this;
        }

        /**
         * @param sources The information about the address of the origin server. For more information about the Sources parameter, See the following `Block sources`.
         * 
         * @return builder
         * 
         */
        public Builder sources(List<DomainSourceArgs> sources) {
            return sources(Output.of(sources));
        }

        /**
         * @param sources The information about the address of the origin server. For more information about the Sources parameter, See the following `Block sources`.
         * 
         * @return builder
         * 
         */
        public Builder sources(DomainSourceArgs... sources) {
            return sources(List.of(sources));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * * `Key`: It can be up to 64 characters in length. It cannot be a null string.
         * * `Value`: It can be up to 128 characters in length. It can be a null string.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * * `Key`: It can be up to 64 characters in length. It cannot be a null string.
         * * `Value`: It can be up to 128 characters in length. It can be a null string.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param topLevelDomain The top-level domain name.
         * 
         * @return builder
         * 
         */
        public Builder topLevelDomain(@Nullable Output<String> topLevelDomain) {
            $.topLevelDomain = topLevelDomain;
            return this;
        }

        /**
         * @param topLevelDomain The top-level domain name.
         * 
         * @return builder
         * 
         */
        public Builder topLevelDomain(String topLevelDomain) {
            return topLevelDomain(Output.of(topLevelDomain));
        }

        public DomainArgs build() {
            if ($.domainName == null) {
                throw new MissingRequiredPropertyException("DomainArgs", "domainName");
            }
            if ($.sources == null) {
                throw new MissingRequiredPropertyException("DomainArgs", "sources");
            }
            return $;
        }
    }

}
