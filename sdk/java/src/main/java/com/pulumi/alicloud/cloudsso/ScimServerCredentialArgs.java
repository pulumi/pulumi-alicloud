// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudsso;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScimServerCredentialArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScimServerCredentialArgs Empty = new ScimServerCredentialArgs();

    /**
     * The ID of the Directory.
     * 
     */
    @Import(name="directoryId", required=true)
    private Output<String> directoryId;

    /**
     * @return The ID of the Directory.
     * 
     */
    public Output<String> directoryId() {
        return this.directoryId;
    }

    /**
     * The Status of the resource. Valid values: `Disabled`, `Enabled`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The Status of the resource. Valid values: `Disabled`, `Enabled`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private ScimServerCredentialArgs() {}

    private ScimServerCredentialArgs(ScimServerCredentialArgs $) {
        this.directoryId = $.directoryId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScimServerCredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScimServerCredentialArgs $;

        public Builder() {
            $ = new ScimServerCredentialArgs();
        }

        public Builder(ScimServerCredentialArgs defaults) {
            $ = new ScimServerCredentialArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param directoryId The ID of the Directory.
         * 
         * @return builder
         * 
         */
        public Builder directoryId(Output<String> directoryId) {
            $.directoryId = directoryId;
            return this;
        }

        /**
         * @param directoryId The ID of the Directory.
         * 
         * @return builder
         * 
         */
        public Builder directoryId(String directoryId) {
            return directoryId(Output.of(directoryId));
        }

        /**
         * @param status The Status of the resource. Valid values: `Disabled`, `Enabled`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The Status of the resource. Valid values: `Disabled`, `Enabled`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public ScimServerCredentialArgs build() {
            if ($.directoryId == null) {
                throw new MissingRequiredPropertyException("ScimServerCredentialArgs", "directoryId");
            }
            return $;
        }
    }

}
