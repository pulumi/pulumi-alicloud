// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rocketmq;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.rocketmq.inputs.GetGroupsArgs;
import com.pulumi.alicloud.rocketmq.inputs.GetGroupsPlainArgs;
import com.pulumi.alicloud.rocketmq.inputs.GetInstancesArgs;
import com.pulumi.alicloud.rocketmq.inputs.GetInstancesPlainArgs;
import com.pulumi.alicloud.rocketmq.inputs.GetServiceArgs;
import com.pulumi.alicloud.rocketmq.inputs.GetServicePlainArgs;
import com.pulumi.alicloud.rocketmq.inputs.GetTopicsArgs;
import com.pulumi.alicloud.rocketmq.inputs.GetTopicsPlainArgs;
import com.pulumi.alicloud.rocketmq.outputs.GetGroupsResult;
import com.pulumi.alicloud.rocketmq.outputs.GetInstancesResult;
import com.pulumi.alicloud.rocketmq.outputs.GetServiceResult;
import com.pulumi.alicloud.rocketmq.outputs.GetTopicsResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class RocketmqFunctions {
    /**
     * This data source provides a list of ONS Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in 1.53.0+
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetGroupsResult> getGroups(GetGroupsArgs args) {
        return getGroups(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of ONS Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in 1.53.0+
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetGroupsResult> getGroupsPlain(GetGroupsPlainArgs args) {
        return getGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of ONS Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in 1.53.0+
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetGroupsResult> getGroups(GetGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:rocketmq/getGroups:getGroups", TypeShape.of(GetGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of ONS Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in 1.53.0+
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetGroupsResult> getGroupsPlain(GetGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:rocketmq/getGroups:getGroups", TypeShape.of(GetGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of ONS Instances in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in 1.52.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.rocketmq.Instance;
     * import com.pulumi.alicloud.rocketmq.InstanceArgs;
     * import com.pulumi.alicloud.rocketmq.RocketmqFunctions;
     * import com.pulumi.alicloud.rocketmq.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("onsInstanceDatasourceName");
     *         var default_ = new Instance("default", InstanceArgs.builder()        
     *             .name(name)
     *             .remark("default_ons_instance_remark")
     *             .build());
     * 
     *         final var instancesDs = RocketmqFunctions.getInstances(GetInstancesArgs.builder()
     *             .ids(default_.id())
     *             .nameRegex(default_.name())
     *             .outputFile("instances.txt")
     *             .build());
     * 
     *         ctx.export("firstInstanceId", instancesDs.applyValue(getInstancesResult -> getInstancesResult).applyValue(instancesDs -> instancesDs.applyValue(getInstancesResult -> getInstancesResult.instances()[0].instanceId())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstancesResult> getInstances() {
        return getInstances(GetInstancesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of ONS Instances in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in 1.52.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.rocketmq.Instance;
     * import com.pulumi.alicloud.rocketmq.InstanceArgs;
     * import com.pulumi.alicloud.rocketmq.RocketmqFunctions;
     * import com.pulumi.alicloud.rocketmq.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("onsInstanceDatasourceName");
     *         var default_ = new Instance("default", InstanceArgs.builder()        
     *             .name(name)
     *             .remark("default_ons_instance_remark")
     *             .build());
     * 
     *         final var instancesDs = RocketmqFunctions.getInstances(GetInstancesArgs.builder()
     *             .ids(default_.id())
     *             .nameRegex(default_.name())
     *             .outputFile("instances.txt")
     *             .build());
     * 
     *         ctx.export("firstInstanceId", instancesDs.applyValue(getInstancesResult -> getInstancesResult).applyValue(instancesDs -> instancesDs.applyValue(getInstancesResult -> getInstancesResult.instances()[0].instanceId())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstancesResult> getInstancesPlain() {
        return getInstancesPlain(GetInstancesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of ONS Instances in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in 1.52.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.rocketmq.Instance;
     * import com.pulumi.alicloud.rocketmq.InstanceArgs;
     * import com.pulumi.alicloud.rocketmq.RocketmqFunctions;
     * import com.pulumi.alicloud.rocketmq.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("onsInstanceDatasourceName");
     *         var default_ = new Instance("default", InstanceArgs.builder()        
     *             .name(name)
     *             .remark("default_ons_instance_remark")
     *             .build());
     * 
     *         final var instancesDs = RocketmqFunctions.getInstances(GetInstancesArgs.builder()
     *             .ids(default_.id())
     *             .nameRegex(default_.name())
     *             .outputFile("instances.txt")
     *             .build());
     * 
     *         ctx.export("firstInstanceId", instancesDs.applyValue(getInstancesResult -> getInstancesResult).applyValue(instancesDs -> instancesDs.applyValue(getInstancesResult -> getInstancesResult.instances()[0].instanceId())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstancesResult> getInstances(GetInstancesArgs args) {
        return getInstances(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of ONS Instances in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in 1.52.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.rocketmq.Instance;
     * import com.pulumi.alicloud.rocketmq.InstanceArgs;
     * import com.pulumi.alicloud.rocketmq.RocketmqFunctions;
     * import com.pulumi.alicloud.rocketmq.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("onsInstanceDatasourceName");
     *         var default_ = new Instance("default", InstanceArgs.builder()        
     *             .name(name)
     *             .remark("default_ons_instance_remark")
     *             .build());
     * 
     *         final var instancesDs = RocketmqFunctions.getInstances(GetInstancesArgs.builder()
     *             .ids(default_.id())
     *             .nameRegex(default_.name())
     *             .outputFile("instances.txt")
     *             .build());
     * 
     *         ctx.export("firstInstanceId", instancesDs.applyValue(getInstancesResult -> getInstancesResult).applyValue(instancesDs -> instancesDs.applyValue(getInstancesResult -> getInstancesResult.instances()[0].instanceId())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstancesResult> getInstancesPlain(GetInstancesPlainArgs args) {
        return getInstancesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of ONS Instances in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in 1.52.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.rocketmq.Instance;
     * import com.pulumi.alicloud.rocketmq.InstanceArgs;
     * import com.pulumi.alicloud.rocketmq.RocketmqFunctions;
     * import com.pulumi.alicloud.rocketmq.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("onsInstanceDatasourceName");
     *         var default_ = new Instance("default", InstanceArgs.builder()        
     *             .name(name)
     *             .remark("default_ons_instance_remark")
     *             .build());
     * 
     *         final var instancesDs = RocketmqFunctions.getInstances(GetInstancesArgs.builder()
     *             .ids(default_.id())
     *             .nameRegex(default_.name())
     *             .outputFile("instances.txt")
     *             .build());
     * 
     *         ctx.export("firstInstanceId", instancesDs.applyValue(getInstancesResult -> getInstancesResult).applyValue(instancesDs -> instancesDs.applyValue(getInstancesResult -> getInstancesResult.instances()[0].instanceId())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstancesResult> getInstances(GetInstancesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:rocketmq/getInstances:getInstances", TypeShape.of(GetInstancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of ONS Instances in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in 1.52.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.rocketmq.Instance;
     * import com.pulumi.alicloud.rocketmq.InstanceArgs;
     * import com.pulumi.alicloud.rocketmq.RocketmqFunctions;
     * import com.pulumi.alicloud.rocketmq.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("onsInstanceDatasourceName");
     *         var default_ = new Instance("default", InstanceArgs.builder()        
     *             .name(name)
     *             .remark("default_ons_instance_remark")
     *             .build());
     * 
     *         final var instancesDs = RocketmqFunctions.getInstances(GetInstancesArgs.builder()
     *             .ids(default_.id())
     *             .nameRegex(default_.name())
     *             .outputFile("instances.txt")
     *             .build());
     * 
     *         ctx.export("firstInstanceId", instancesDs.applyValue(getInstancesResult -> getInstancesResult).applyValue(instancesDs -> instancesDs.applyValue(getInstancesResult -> getInstancesResult.instances()[0].instanceId())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstancesResult> getInstancesPlain(GetInstancesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:rocketmq/getInstances:getInstances", TypeShape.of(GetInstancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Using this data source can open ONS service automatically. If the service has been opened, it will return opened.
     * 
     * For information about ONS and how to use it, see [What is ONS](https://help.aliyun.com/product/29530.html).
     * 
     * &gt; **NOTE:** Available in v1.111.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.rocketmq.RocketmqFunctions;
     * import com.pulumi.alicloud.rocketmq.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = RocketmqFunctions.getService(GetServiceArgs.builder()
     *             .enable("On")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceResult> getService() {
        return getService(GetServiceArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Using this data source can open ONS service automatically. If the service has been opened, it will return opened.
     * 
     * For information about ONS and how to use it, see [What is ONS](https://help.aliyun.com/product/29530.html).
     * 
     * &gt; **NOTE:** Available in v1.111.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.rocketmq.RocketmqFunctions;
     * import com.pulumi.alicloud.rocketmq.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = RocketmqFunctions.getService(GetServiceArgs.builder()
     *             .enable("On")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain() {
        return getServicePlain(GetServicePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Using this data source can open ONS service automatically. If the service has been opened, it will return opened.
     * 
     * For information about ONS and how to use it, see [What is ONS](https://help.aliyun.com/product/29530.html).
     * 
     * &gt; **NOTE:** Available in v1.111.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.rocketmq.RocketmqFunctions;
     * import com.pulumi.alicloud.rocketmq.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = RocketmqFunctions.getService(GetServiceArgs.builder()
     *             .enable("On")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args) {
        return getService(args, InvokeOptions.Empty);
    }
    /**
     * Using this data source can open ONS service automatically. If the service has been opened, it will return opened.
     * 
     * For information about ONS and how to use it, see [What is ONS](https://help.aliyun.com/product/29530.html).
     * 
     * &gt; **NOTE:** Available in v1.111.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.rocketmq.RocketmqFunctions;
     * import com.pulumi.alicloud.rocketmq.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = RocketmqFunctions.getService(GetServiceArgs.builder()
     *             .enable("On")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args) {
        return getServicePlain(args, InvokeOptions.Empty);
    }
    /**
     * Using this data source can open ONS service automatically. If the service has been opened, it will return opened.
     * 
     * For information about ONS and how to use it, see [What is ONS](https://help.aliyun.com/product/29530.html).
     * 
     * &gt; **NOTE:** Available in v1.111.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.rocketmq.RocketmqFunctions;
     * import com.pulumi.alicloud.rocketmq.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = RocketmqFunctions.getService(GetServiceArgs.builder()
     *             .enable("On")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:rocketmq/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Using this data source can open ONS service automatically. If the service has been opened, it will return opened.
     * 
     * For information about ONS and how to use it, see [What is ONS](https://help.aliyun.com/product/29530.html).
     * 
     * &gt; **NOTE:** Available in v1.111.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.rocketmq.RocketmqFunctions;
     * import com.pulumi.alicloud.rocketmq.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = RocketmqFunctions.getService(GetServiceArgs.builder()
     *             .enable("On")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:rocketmq/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of ONS Topics in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in 1.53.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.rocketmq.Instance;
     * import com.pulumi.alicloud.rocketmq.InstanceArgs;
     * import com.pulumi.alicloud.rocketmq.Topic;
     * import com.pulumi.alicloud.rocketmq.TopicArgs;
     * import com.pulumi.alicloud.rocketmq.RocketmqFunctions;
     * import com.pulumi.alicloud.rocketmq.inputs.GetTopicsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("onsInstanceName");
     *         final var topic = config.get("topic").orElse("onsTopicDatasourceName");
     *         var default_ = new Instance("default", InstanceArgs.builder()        
     *             .instanceName(name)
     *             .remark("default_ons_instance_remark")
     *             .build());
     * 
     *         var defaultTopic = new Topic("defaultTopic", TopicArgs.builder()        
     *             .topicName(topic)
     *             .instanceId(default_.id())
     *             .messageType(0)
     *             .remark("dafault_ons_topic_remark")
     *             .build());
     * 
     *         final var topicsDs = RocketmqFunctions.getTopics(GetTopicsArgs.builder()
     *             .instanceId(defaultTopic.instanceId())
     *             .nameRegex(topic)
     *             .outputFile("topics.txt")
     *             .build());
     * 
     *         ctx.export("firstTopicName", topicsDs.applyValue(getTopicsResult -> getTopicsResult).applyValue(topicsDs -> topicsDs.applyValue(getTopicsResult -> getTopicsResult.topics()[0].topicName())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTopicsResult> getTopics(GetTopicsArgs args) {
        return getTopics(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of ONS Topics in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in 1.53.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.rocketmq.Instance;
     * import com.pulumi.alicloud.rocketmq.InstanceArgs;
     * import com.pulumi.alicloud.rocketmq.Topic;
     * import com.pulumi.alicloud.rocketmq.TopicArgs;
     * import com.pulumi.alicloud.rocketmq.RocketmqFunctions;
     * import com.pulumi.alicloud.rocketmq.inputs.GetTopicsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("onsInstanceName");
     *         final var topic = config.get("topic").orElse("onsTopicDatasourceName");
     *         var default_ = new Instance("default", InstanceArgs.builder()        
     *             .instanceName(name)
     *             .remark("default_ons_instance_remark")
     *             .build());
     * 
     *         var defaultTopic = new Topic("defaultTopic", TopicArgs.builder()        
     *             .topicName(topic)
     *             .instanceId(default_.id())
     *             .messageType(0)
     *             .remark("dafault_ons_topic_remark")
     *             .build());
     * 
     *         final var topicsDs = RocketmqFunctions.getTopics(GetTopicsArgs.builder()
     *             .instanceId(defaultTopic.instanceId())
     *             .nameRegex(topic)
     *             .outputFile("topics.txt")
     *             .build());
     * 
     *         ctx.export("firstTopicName", topicsDs.applyValue(getTopicsResult -> getTopicsResult).applyValue(topicsDs -> topicsDs.applyValue(getTopicsResult -> getTopicsResult.topics()[0].topicName())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTopicsResult> getTopicsPlain(GetTopicsPlainArgs args) {
        return getTopicsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of ONS Topics in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in 1.53.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.rocketmq.Instance;
     * import com.pulumi.alicloud.rocketmq.InstanceArgs;
     * import com.pulumi.alicloud.rocketmq.Topic;
     * import com.pulumi.alicloud.rocketmq.TopicArgs;
     * import com.pulumi.alicloud.rocketmq.RocketmqFunctions;
     * import com.pulumi.alicloud.rocketmq.inputs.GetTopicsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("onsInstanceName");
     *         final var topic = config.get("topic").orElse("onsTopicDatasourceName");
     *         var default_ = new Instance("default", InstanceArgs.builder()        
     *             .instanceName(name)
     *             .remark("default_ons_instance_remark")
     *             .build());
     * 
     *         var defaultTopic = new Topic("defaultTopic", TopicArgs.builder()        
     *             .topicName(topic)
     *             .instanceId(default_.id())
     *             .messageType(0)
     *             .remark("dafault_ons_topic_remark")
     *             .build());
     * 
     *         final var topicsDs = RocketmqFunctions.getTopics(GetTopicsArgs.builder()
     *             .instanceId(defaultTopic.instanceId())
     *             .nameRegex(topic)
     *             .outputFile("topics.txt")
     *             .build());
     * 
     *         ctx.export("firstTopicName", topicsDs.applyValue(getTopicsResult -> getTopicsResult).applyValue(topicsDs -> topicsDs.applyValue(getTopicsResult -> getTopicsResult.topics()[0].topicName())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTopicsResult> getTopics(GetTopicsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:rocketmq/getTopics:getTopics", TypeShape.of(GetTopicsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of ONS Topics in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in 1.53.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.rocketmq.Instance;
     * import com.pulumi.alicloud.rocketmq.InstanceArgs;
     * import com.pulumi.alicloud.rocketmq.Topic;
     * import com.pulumi.alicloud.rocketmq.TopicArgs;
     * import com.pulumi.alicloud.rocketmq.RocketmqFunctions;
     * import com.pulumi.alicloud.rocketmq.inputs.GetTopicsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("onsInstanceName");
     *         final var topic = config.get("topic").orElse("onsTopicDatasourceName");
     *         var default_ = new Instance("default", InstanceArgs.builder()        
     *             .instanceName(name)
     *             .remark("default_ons_instance_remark")
     *             .build());
     * 
     *         var defaultTopic = new Topic("defaultTopic", TopicArgs.builder()        
     *             .topicName(topic)
     *             .instanceId(default_.id())
     *             .messageType(0)
     *             .remark("dafault_ons_topic_remark")
     *             .build());
     * 
     *         final var topicsDs = RocketmqFunctions.getTopics(GetTopicsArgs.builder()
     *             .instanceId(defaultTopic.instanceId())
     *             .nameRegex(topic)
     *             .outputFile("topics.txt")
     *             .build());
     * 
     *         ctx.export("firstTopicName", topicsDs.applyValue(getTopicsResult -> getTopicsResult).applyValue(topicsDs -> topicsDs.applyValue(getTopicsResult -> getTopicsResult.topics()[0].topicName())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTopicsResult> getTopicsPlain(GetTopicsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:rocketmq/getTopics:getTopics", TypeShape.of(GetTopicsResult.class), args, Utilities.withVersion(options));
    }
}
