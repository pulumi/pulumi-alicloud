// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessRuleState extends com.pulumi.resources.ResourceArgs {

    public static final AccessRuleState Empty = new AccessRuleState();

    /**
     * AccessGroupName.
     * 
     */
    @Import(name="accessGroupName")
    private @Nullable Output<String> accessGroupName;

    /**
     * @return AccessGroupName.
     * 
     */
    public Optional<Output<String>> accessGroupName() {
        return Optional.ofNullable(this.accessGroupName);
    }

    /**
     * The first ID of the resource.
     * 
     */
    @Import(name="accessRuleId")
    private @Nullable Output<String> accessRuleId;

    /**
     * @return The first ID of the resource.
     * 
     */
    public Optional<Output<String>> accessRuleId() {
        return Optional.ofNullable(this.accessRuleId);
    }

    /**
     * filesystem type. include standard, extreme.
     * 
     */
    @Import(name="fileSystemType")
    private @Nullable Output<String> fileSystemType;

    /**
     * @return filesystem type. include standard, extreme.
     * 
     */
    public Optional<Output<String>> fileSystemType() {
        return Optional.ofNullable(this.fileSystemType);
    }

    /**
     * Ipv6SourceCidrIp.
     * 
     */
    @Import(name="ipv6SourceCidrIp")
    private @Nullable Output<String> ipv6SourceCidrIp;

    /**
     * @return Ipv6SourceCidrIp.
     * 
     */
    public Optional<Output<String>> ipv6SourceCidrIp() {
        return Optional.ofNullable(this.ipv6SourceCidrIp);
    }

    /**
     * Priority.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return Priority.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * RWAccess.
     * 
     */
    @Import(name="rwAccessType")
    private @Nullable Output<String> rwAccessType;

    /**
     * @return RWAccess.
     * 
     */
    public Optional<Output<String>> rwAccessType() {
        return Optional.ofNullable(this.rwAccessType);
    }

    /**
     * SourceCidrIp.
     * 
     */
    @Import(name="sourceCidrIp")
    private @Nullable Output<String> sourceCidrIp;

    /**
     * @return SourceCidrIp.
     * 
     */
    public Optional<Output<String>> sourceCidrIp() {
        return Optional.ofNullable(this.sourceCidrIp);
    }

    /**
     * UserAccess.
     * 
     */
    @Import(name="userAccessType")
    private @Nullable Output<String> userAccessType;

    /**
     * @return UserAccess.
     * 
     */
    public Optional<Output<String>> userAccessType() {
        return Optional.ofNullable(this.userAccessType);
    }

    private AccessRuleState() {}

    private AccessRuleState(AccessRuleState $) {
        this.accessGroupName = $.accessGroupName;
        this.accessRuleId = $.accessRuleId;
        this.fileSystemType = $.fileSystemType;
        this.ipv6SourceCidrIp = $.ipv6SourceCidrIp;
        this.priority = $.priority;
        this.rwAccessType = $.rwAccessType;
        this.sourceCidrIp = $.sourceCidrIp;
        this.userAccessType = $.userAccessType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessRuleState $;

        public Builder() {
            $ = new AccessRuleState();
        }

        public Builder(AccessRuleState defaults) {
            $ = new AccessRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessGroupName AccessGroupName.
         * 
         * @return builder
         * 
         */
        public Builder accessGroupName(@Nullable Output<String> accessGroupName) {
            $.accessGroupName = accessGroupName;
            return this;
        }

        /**
         * @param accessGroupName AccessGroupName.
         * 
         * @return builder
         * 
         */
        public Builder accessGroupName(String accessGroupName) {
            return accessGroupName(Output.of(accessGroupName));
        }

        /**
         * @param accessRuleId The first ID of the resource.
         * 
         * @return builder
         * 
         */
        public Builder accessRuleId(@Nullable Output<String> accessRuleId) {
            $.accessRuleId = accessRuleId;
            return this;
        }

        /**
         * @param accessRuleId The first ID of the resource.
         * 
         * @return builder
         * 
         */
        public Builder accessRuleId(String accessRuleId) {
            return accessRuleId(Output.of(accessRuleId));
        }

        /**
         * @param fileSystemType filesystem type. include standard, extreme.
         * 
         * @return builder
         * 
         */
        public Builder fileSystemType(@Nullable Output<String> fileSystemType) {
            $.fileSystemType = fileSystemType;
            return this;
        }

        /**
         * @param fileSystemType filesystem type. include standard, extreme.
         * 
         * @return builder
         * 
         */
        public Builder fileSystemType(String fileSystemType) {
            return fileSystemType(Output.of(fileSystemType));
        }

        /**
         * @param ipv6SourceCidrIp Ipv6SourceCidrIp.
         * 
         * @return builder
         * 
         */
        public Builder ipv6SourceCidrIp(@Nullable Output<String> ipv6SourceCidrIp) {
            $.ipv6SourceCidrIp = ipv6SourceCidrIp;
            return this;
        }

        /**
         * @param ipv6SourceCidrIp Ipv6SourceCidrIp.
         * 
         * @return builder
         * 
         */
        public Builder ipv6SourceCidrIp(String ipv6SourceCidrIp) {
            return ipv6SourceCidrIp(Output.of(ipv6SourceCidrIp));
        }

        /**
         * @param priority Priority.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Priority.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param rwAccessType RWAccess.
         * 
         * @return builder
         * 
         */
        public Builder rwAccessType(@Nullable Output<String> rwAccessType) {
            $.rwAccessType = rwAccessType;
            return this;
        }

        /**
         * @param rwAccessType RWAccess.
         * 
         * @return builder
         * 
         */
        public Builder rwAccessType(String rwAccessType) {
            return rwAccessType(Output.of(rwAccessType));
        }

        /**
         * @param sourceCidrIp SourceCidrIp.
         * 
         * @return builder
         * 
         */
        public Builder sourceCidrIp(@Nullable Output<String> sourceCidrIp) {
            $.sourceCidrIp = sourceCidrIp;
            return this;
        }

        /**
         * @param sourceCidrIp SourceCidrIp.
         * 
         * @return builder
         * 
         */
        public Builder sourceCidrIp(String sourceCidrIp) {
            return sourceCidrIp(Output.of(sourceCidrIp));
        }

        /**
         * @param userAccessType UserAccess.
         * 
         * @return builder
         * 
         */
        public Builder userAccessType(@Nullable Output<String> userAccessType) {
            $.userAccessType = userAccessType;
            return this;
        }

        /**
         * @param userAccessType UserAccess.
         * 
         * @return builder
         * 
         */
        public Builder userAccessType(String userAccessType) {
            return userAccessType(Output.of(userAccessType));
        }

        public AccessRuleState build() {
            return $;
        }
    }

}
