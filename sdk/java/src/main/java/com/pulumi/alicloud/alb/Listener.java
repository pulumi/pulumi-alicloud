// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alb;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.alb.ListenerArgs;
import com.pulumi.alicloud.alb.inputs.ListenerState;
import com.pulumi.alicloud.alb.outputs.ListenerAccessLogTracingConfig;
import com.pulumi.alicloud.alb.outputs.ListenerAclConfig;
import com.pulumi.alicloud.alb.outputs.ListenerCaCertificate;
import com.pulumi.alicloud.alb.outputs.ListenerCertificates;
import com.pulumi.alicloud.alb.outputs.ListenerDefaultAction;
import com.pulumi.alicloud.alb.outputs.ListenerQuicConfig;
import com.pulumi.alicloud.alb.outputs.ListenerXForwardedForConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Application Load Balancer (ALB) Listener resource.
 * 
 * For information about Application Load Balancer (ALB) Listener and how to use it, see [What is Listener](https://www.alibabacloud.com/help/en/slb/application-load-balancer/developer-reference/api-alb-2020-06-16-createlistener).
 * 
 * &gt; **NOTE:** Available since v1.133.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.alb.AlbFunctions;
 * import com.pulumi.alicloud.alb.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
 * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
 * import com.pulumi.alicloud.ecs.EcsFunctions;
 * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
 * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.std.StdFunctions;
 * import com.pulumi.std.inputs.FormatArgs;
 * import com.pulumi.alicloud.ecs.SecurityGroup;
 * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
 * import com.pulumi.alicloud.alb.LoadBalancer;
 * import com.pulumi.alicloud.alb.LoadBalancerArgs;
 * import com.pulumi.alicloud.alb.inputs.LoadBalancerLoadBalancerBillingConfigArgs;
 * import com.pulumi.alicloud.alb.inputs.LoadBalancerZoneMappingArgs;
 * import com.pulumi.alicloud.alb.inputs.LoadBalancerModificationProtectionConfigArgs;
 * import com.pulumi.alicloud.ecs.Instance;
 * import com.pulumi.alicloud.ecs.InstanceArgs;
 * import com.pulumi.alicloud.alb.ServerGroup;
 * import com.pulumi.alicloud.alb.ServerGroupArgs;
 * import com.pulumi.alicloud.alb.inputs.ServerGroupHealthCheckConfigArgs;
 * import com.pulumi.alicloud.alb.inputs.ServerGroupStickySessionConfigArgs;
 * import com.pulumi.alicloud.alb.inputs.ServerGroupServerArgs;
 * import com.pulumi.alicloud.alb.Listener;
 * import com.pulumi.alicloud.alb.ListenerArgs;
 * import com.pulumi.alicloud.alb.inputs.ListenerDefaultActionArgs;
 * import com.pulumi.alicloud.alb.inputs.ListenerDefaultActionForwardGroupConfigArgs;
 * import com.pulumi.codegen.internal.KeyedValue;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("tf_example");
 *         final var default = AlbFunctions.getZones(GetZonesArgs.builder()
 *             .build());
 * 
 *         final var defaultGetResourceGroups = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
 *             .build());
 * 
 *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
 *             .availabilityZone(default_.zones()[0].id())
 *             .cpuCoreCount(1)
 *             .memorySize(2)
 *             .build());
 * 
 *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
 *             .nameRegex("^ubuntu_18.*64")
 *             .owners("system")
 *             .build());
 * 
 *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
 *             .vpcName(name)
 *             .cidrBlock("10.4.0.0/16")
 *             .build());
 * 
 *         for (var i = 0; i < 2; i++) {
 *             new Switch("defaultSwitch-" + i, SwitchArgs.builder()
 *                 .vpcId(defaultNetwork.id())
 *                 .cidrBlock(StdFunctions.format(FormatArgs.builder()
 *                     .input("10.4.%d.0/24")
 *                     .args(range.value() + 1)
 *                     .build()).result())
 *                 .zoneId(default_.zones()[range.value()].id())
 *                 .vswitchName(StdFunctions.format(FormatArgs.builder()
 *                     .input(String.format("%s_%d", name))
 *                     .args(range.value() + 1)
 *                     .build()).result())
 *                 .build());
 * 
 *         
 * }
 *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
 *             .securityGroupName(name)
 *             .description(name)
 *             .vpcId(defaultNetwork.id())
 *             .build());
 * 
 *         var defaultLoadBalancer = new LoadBalancer("defaultLoadBalancer", LoadBalancerArgs.builder()
 *             .vpcId(defaultNetwork.id())
 *             .addressType("Internet")
 *             .addressAllocatedMode("Fixed")
 *             .loadBalancerName(name)
 *             .loadBalancerEdition("Basic")
 *             .resourceGroupId(defaultGetResourceGroups.groups()[0].id())
 *             .loadBalancerBillingConfig(LoadBalancerLoadBalancerBillingConfigArgs.builder()
 *                 .payType("PayAsYouGo")
 *                 .build())
 *             .tags(Map.of("Created", "TF"))
 *             .zoneMappings(            
 *                 LoadBalancerZoneMappingArgs.builder()
 *                     .vswitchId(defaultSwitch[0].id())
 *                     .zoneId(default_.zones()[0].id())
 *                     .build(),
 *                 LoadBalancerZoneMappingArgs.builder()
 *                     .vswitchId(defaultSwitch[1].id())
 *                     .zoneId(default_.zones()[1].id())
 *                     .build())
 *             .modificationProtectionConfig(LoadBalancerModificationProtectionConfigArgs.builder()
 *                 .status("NonProtection")
 *                 .build())
 *             .build());
 * 
 *         var defaultInstance = new Instance("defaultInstance", InstanceArgs.builder()
 *             .availabilityZone(default_.zones()[0].id())
 *             .instanceName(name)
 *             .imageId(defaultGetImages.images()[0].id())
 *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
 *             .securityGroups(defaultSecurityGroup.id())
 *             .vswitchId(defaultSwitch[0].id())
 *             .build());
 * 
 *         var defaultServerGroup = new ServerGroup("defaultServerGroup", ServerGroupArgs.builder()
 *             .protocol("HTTP")
 *             .vpcId(defaultNetwork.id())
 *             .serverGroupName(name)
 *             .resourceGroupId(defaultGetResourceGroups.groups()[0].id())
 *             .healthCheckConfig(ServerGroupHealthCheckConfigArgs.builder()
 *                 .healthCheckConnectPort(46325)
 *                 .healthCheckEnabled(true)
 *                 .healthCheckHost("tf-example.com")
 *                 .healthCheckCodes(                
 *                     "http_2xx",
 *                     "http_3xx",
 *                     "http_4xx")
 *                 .healthCheckHttpVersion("HTTP1.1")
 *                 .healthCheckInterval(2)
 *                 .healthCheckMethod("HEAD")
 *                 .healthCheckPath("/tf-example")
 *                 .healthCheckProtocol("HTTP")
 *                 .healthCheckTimeout(5)
 *                 .healthyThreshold(3)
 *                 .unhealthyThreshold(3)
 *                 .build())
 *             .stickySessionConfig(ServerGroupStickySessionConfigArgs.builder()
 *                 .stickySessionEnabled(true)
 *                 .cookie("tf-example")
 *                 .stickySessionType("Server")
 *                 .build())
 *             .servers(ServerGroupServerArgs.builder()
 *                 .description(name)
 *                 .port(80)
 *                 .serverId(defaultInstance.id())
 *                 .serverIp(defaultInstance.privateIp())
 *                 .serverType("Ecs")
 *                 .weight(10)
 *                 .build())
 *             .build());
 * 
 *         var defaultListener = new Listener("defaultListener", ListenerArgs.builder()
 *             .loadBalancerId(defaultLoadBalancer.id())
 *             .listenerProtocol("HTTP")
 *             .listenerPort(443)
 *             .listenerDescription(name)
 *             .defaultActions(ListenerDefaultActionArgs.builder()
 *                 .type("ForwardGroup")
 *                 .forwardGroupConfig(ListenerDefaultActionForwardGroupConfigArgs.builder()
 *                     .serverGroupTuples(ListenerDefaultActionForwardGroupConfigServerGroupTupleArgs.builder()
 *                         .serverGroupId(defaultServerGroup.id())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Application Load Balancer (ALB) Listener can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:alb/listener:Listener example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:alb/listener:Listener")
public class Listener extends com.pulumi.resources.CustomResource {
    /**
     * Access Log Whether to Enable Carry Custom Header Field. Valid values: `true`, `false`. Default Value: `false`.
     * 
     * &gt; **NOTE:**  Only Instances outside the Security Group to Access the Log Switch `accesslogenabled` Open, in Order to Set This Parameter to the `true`.
     * 
     */
    @Export(name="accessLogRecordCustomizedHeadersEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> accessLogRecordCustomizedHeadersEnabled;

    /**
     * @return Access Log Whether to Enable Carry Custom Header Field. Valid values: `true`, `false`. Default Value: `false`.
     * 
     * &gt; **NOTE:**  Only Instances outside the Security Group to Access the Log Switch `accesslogenabled` Open, in Order to Set This Parameter to the `true`.
     * 
     */
    public Output<Optional<Boolean>> accessLogRecordCustomizedHeadersEnabled() {
        return Codegen.optional(this.accessLogRecordCustomizedHeadersEnabled);
    }
    /**
     * Xtrace Configuration Information. See `access_log_tracing_config` below.
     * 
     */
    @Export(name="accessLogTracingConfig", refs={ListenerAccessLogTracingConfig.class}, tree="[0]")
    private Output</* @Nullable */ ListenerAccessLogTracingConfig> accessLogTracingConfig;

    /**
     * @return Xtrace Configuration Information. See `access_log_tracing_config` below.
     * 
     */
    public Output<Optional<ListenerAccessLogTracingConfig>> accessLogTracingConfig() {
        return Codegen.optional(this.accessLogTracingConfig);
    }
    /**
     * The configurations of the access control lists (ACLs). See `acl_config` below for details. **NOTE:** Field `acl_config` has been deprecated from provider version 1.163.0, and it will be removed in the future version. Please use the new resource `alicloud.alb.ListenerAclAttachment`.,
     * 
     * @deprecated
     * Field &#39;acl_config&#39; has been deprecated from provider version 1.163.0 and it will be removed in the future version. Please use the new resource &#39;alicloud_alb_listener_acl_attachment&#39;.
     * 
     */
    @Deprecated /* Field 'acl_config' has been deprecated from provider version 1.163.0 and it will be removed in the future version. Please use the new resource 'alicloud_alb_listener_acl_attachment'. */
    @Export(name="aclConfig", refs={ListenerAclConfig.class}, tree="[0]")
    private Output<ListenerAclConfig> aclConfig;

    /**
     * @return The configurations of the access control lists (ACLs). See `acl_config` below for details. **NOTE:** Field `acl_config` has been deprecated from provider version 1.163.0, and it will be removed in the future version. Please use the new resource `alicloud.alb.ListenerAclAttachment`.,
     * 
     */
    public Output<ListenerAclConfig> aclConfig() {
        return this.aclConfig;
    }
    /**
     * The list of certificates. See `ca_certificates` below.
     * 
     */
    @Export(name="caCertificates", refs={List.class,ListenerCaCertificate.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ListenerCaCertificate>> caCertificates;

    /**
     * @return The list of certificates. See `ca_certificates` below.
     * 
     */
    public Output<Optional<List<ListenerCaCertificate>>> caCertificates() {
        return Codegen.optional(this.caCertificates);
    }
    /**
     * Whether to turn on two-way authentication. Value:
     * 
     */
    @Export(name="caEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> caEnabled;

    /**
     * @return Whether to turn on two-way authentication. Value:
     * 
     */
    public Output<Optional<Boolean>> caEnabled() {
        return Codegen.optional(this.caEnabled);
    }
    /**
     * The list of certificates. See `certificates` below.
     * 
     */
    @Export(name="certificates", refs={ListenerCertificates.class}, tree="[0]")
    private Output</* @Nullable */ ListenerCertificates> certificates;

    /**
     * @return The list of certificates. See `certificates` below.
     * 
     */
    public Output<Optional<ListenerCertificates>> certificates() {
        return Codegen.optional(this.certificates);
    }
    /**
     * The Default Rule Action List See `default_actions` below.
     * 
     */
    @Export(name="defaultActions", refs={List.class,ListenerDefaultAction.class}, tree="[0,1]")
    private Output<List<ListenerDefaultAction>> defaultActions;

    /**
     * @return The Default Rule Action List See `default_actions` below.
     * 
     */
    public Output<List<ListenerDefaultAction>> defaultActions() {
        return this.defaultActions;
    }
    /**
     * Whether to PreCheck only this request. Value:
     * 
     */
    @Export(name="dryRun", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dryRun;

    /**
     * @return Whether to PreCheck only this request. Value:
     * 
     */
    public Output<Optional<Boolean>> dryRun() {
        return Codegen.optional(this.dryRun);
    }
    /**
     * Whether to Enable Gzip Compression, as a Specific File Type on a Compression. Valid Values: True Or False. Default Value: TRUE.
     * 
     */
    @Export(name="gzipEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> gzipEnabled;

    /**
     * @return Whether to Enable Gzip Compression, as a Specific File Type on a Compression. Valid Values: True Or False. Default Value: TRUE.
     * 
     */
    public Output<Boolean> gzipEnabled() {
        return this.gzipEnabled;
    }
    /**
     * Whether to Enable HTTP/2 Features. Valid Values: True Or False. Default Value: TRUE.
     * 
     */
    @Export(name="http2Enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> http2Enabled;

    /**
     * @return Whether to Enable HTTP/2 Features. Valid Values: True Or False. Default Value: TRUE.
     * 
     */
    public Output<Boolean> http2Enabled() {
        return this.http2Enabled;
    }
    /**
     * Specify the Connection Idle Timeout Value: 1 to 60 seconds.
     * 
     */
    @Export(name="idleTimeout", refs={Integer.class}, tree="[0]")
    private Output<Integer> idleTimeout;

    /**
     * @return Specify the Connection Idle Timeout Value: 1 to 60 seconds.
     * 
     */
    public Output<Integer> idleTimeout() {
        return this.idleTimeout;
    }
    /**
     * Set the IP Address of the Listened Description. Length Is from 2 to 256 Characters.
     * 
     */
    @Export(name="listenerDescription", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> listenerDescription;

    /**
     * @return Set the IP Address of the Listened Description. Length Is from 2 to 256 Characters.
     * 
     */
    public Output<Optional<String>> listenerDescription() {
        return Codegen.optional(this.listenerDescription);
    }
    /**
     * The SLB Instance Front-End, and Those of the Ports Used. Value: 1~65535.
     * 
     */
    @Export(name="listenerPort", refs={Integer.class}, tree="[0]")
    private Output<Integer> listenerPort;

    /**
     * @return The SLB Instance Front-End, and Those of the Ports Used. Value: 1~65535.
     * 
     */
    public Output<Integer> listenerPort() {
        return this.listenerPort;
    }
    /**
     * Snooping Protocols. Valid Values: HTTP, HTTPS Or QuIC.
     * 
     */
    @Export(name="listenerProtocol", refs={String.class}, tree="[0]")
    private Output<String> listenerProtocol;

    /**
     * @return Snooping Protocols. Valid Values: HTTP, HTTPS Or QuIC.
     * 
     */
    public Output<String> listenerProtocol() {
        return this.listenerProtocol;
    }
    /**
     * The SLB Instance Id.
     * 
     */
    @Export(name="loadBalancerId", refs={String.class}, tree="[0]")
    private Output<String> loadBalancerId;

    /**
     * @return The SLB Instance Id.
     * 
     */
    public Output<String> loadBalancerId() {
        return this.loadBalancerId;
    }
    /**
     * Configuration Associated with the QuIC Listening See `quic_config` below.
     * 
     */
    @Export(name="quicConfig", refs={ListenerQuicConfig.class}, tree="[0]")
    private Output<ListenerQuicConfig> quicConfig;

    /**
     * @return Configuration Associated with the QuIC Listening See `quic_config` below.
     * 
     */
    public Output<ListenerQuicConfig> quicConfig() {
        return this.quicConfig;
    }
    /**
     * The Specified Request Timeout Time. Value: 1~180 Seconds. Default Value: 60 seconds. If the Timeout Time Within the Back-End Server Has Not Answered the SLB Will Give up Waiting, the Client Returns the HTTP 504 Error Code.
     * 
     */
    @Export(name="requestTimeout", refs={Integer.class}, tree="[0]")
    private Output<Integer> requestTimeout;

    /**
     * @return The Specified Request Timeout Time. Value: 1~180 Seconds. Default Value: 60 seconds. If the Timeout Time Within the Back-End Server Has Not Answered the SLB Will Give up Waiting, the Client Returns the HTTP 504 Error Code.
     * 
     */
    public Output<Integer> requestTimeout() {
        return this.requestTimeout;
    }
    /**
     * Security Policy
     * 
     */
    @Export(name="securityPolicyId", refs={String.class}, tree="[0]")
    private Output<String> securityPolicyId;

    /**
     * @return Security Policy
     * 
     */
    public Output<String> securityPolicyId() {
        return this.securityPolicyId;
    }
    /**
     * The Current IP Address of the Listened State
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The Current IP Address of the Listened State
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The tag of the resource
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return The tag of the resource
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * xforwardfor Related Attribute Configuration See `x_forwarded_for_config` below.
     * 
     */
    @Export(name="xForwardedForConfig", refs={ListenerXForwardedForConfig.class}, tree="[0]")
    private Output<ListenerXForwardedForConfig> xForwardedForConfig;

    /**
     * @return xforwardfor Related Attribute Configuration See `x_forwarded_for_config` below.
     * 
     */
    public Output<ListenerXForwardedForConfig> xForwardedForConfig() {
        return this.xForwardedForConfig;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Listener(java.lang.String name) {
        this(name, ListenerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Listener(java.lang.String name, ListenerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Listener(java.lang.String name, ListenerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:alb/listener:Listener", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Listener(java.lang.String name, Output<java.lang.String> id, @Nullable ListenerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:alb/listener:Listener", name, state, makeResourceOptions(options, id), false);
    }

    private static ListenerArgs makeArgs(ListenerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ListenerArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Listener get(java.lang.String name, Output<java.lang.String> id, @Nullable ListenerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Listener(name, id, state, options);
    }
}
