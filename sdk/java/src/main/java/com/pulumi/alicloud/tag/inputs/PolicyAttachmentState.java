// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.tag.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final PolicyAttachmentState Empty = new PolicyAttachmentState();

    /**
     * The ID of the tag policy.
     * 
     */
    @Import(name="policyId")
    private @Nullable Output<String> policyId;

    /**
     * @return The ID of the tag policy.
     * 
     */
    public Optional<Output<String>> policyId() {
        return Optional.ofNullable(this.policyId);
    }

    /**
     * The ID of the object.
     * 
     */
    @Import(name="targetId")
    private @Nullable Output<String> targetId;

    /**
     * @return The ID of the object.
     * 
     */
    public Optional<Output<String>> targetId() {
        return Optional.ofNullable(this.targetId);
    }

    /**
     * The type of the object. Valid values: `USER`, `ROOT`, `FOLDER`, `ACCOUNT`.
     * 
     */
    @Import(name="targetType")
    private @Nullable Output<String> targetType;

    /**
     * @return The type of the object. Valid values: `USER`, `ROOT`, `FOLDER`, `ACCOUNT`.
     * 
     */
    public Optional<Output<String>> targetType() {
        return Optional.ofNullable(this.targetType);
    }

    private PolicyAttachmentState() {}

    private PolicyAttachmentState(PolicyAttachmentState $) {
        this.policyId = $.policyId;
        this.targetId = $.targetId;
        this.targetType = $.targetType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyAttachmentState $;

        public Builder() {
            $ = new PolicyAttachmentState();
        }

        public Builder(PolicyAttachmentState defaults) {
            $ = new PolicyAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param policyId The ID of the tag policy.
         * 
         * @return builder
         * 
         */
        public Builder policyId(@Nullable Output<String> policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param policyId The ID of the tag policy.
         * 
         * @return builder
         * 
         */
        public Builder policyId(String policyId) {
            return policyId(Output.of(policyId));
        }

        /**
         * @param targetId The ID of the object.
         * 
         * @return builder
         * 
         */
        public Builder targetId(@Nullable Output<String> targetId) {
            $.targetId = targetId;
            return this;
        }

        /**
         * @param targetId The ID of the object.
         * 
         * @return builder
         * 
         */
        public Builder targetId(String targetId) {
            return targetId(Output.of(targetId));
        }

        /**
         * @param targetType The type of the object. Valid values: `USER`, `ROOT`, `FOLDER`, `ACCOUNT`.
         * 
         * @return builder
         * 
         */
        public Builder targetType(@Nullable Output<String> targetType) {
            $.targetType = targetType;
            return this;
        }

        /**
         * @param targetType The type of the object. Valid values: `USER`, `ROOT`, `FOLDER`, `ACCOUNT`.
         * 
         * @return builder
         * 
         */
        public Builder targetType(String targetType) {
            return targetType(Output.of(targetType));
        }

        public PolicyAttachmentState build() {
            return $;
        }
    }

}
