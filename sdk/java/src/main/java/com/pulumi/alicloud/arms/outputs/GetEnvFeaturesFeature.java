// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.arms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetEnvFeaturesFeature {
    /**
     * @return The language.
     * 
     */
    private String aliyunLang;
    /**
     * @return The name of the feature.
     * 
     */
    private String envFeatureName;
    /**
     * @return The ID of the environment instance.
     * 
     */
    private String environmentId;
    /**
     * @return The version of the feature.
     * 
     */
    private String featureVersion;
    /**
     * @return The ID of the Env Feature. It formats as `&lt;environment_id&gt;:&lt;env_feature_name&gt;`.
     * 
     */
    private String id;
    /**
     * @return The status of the feature.
     * 
     */
    private String status;

    private GetEnvFeaturesFeature() {}
    /**
     * @return The language.
     * 
     */
    public String aliyunLang() {
        return this.aliyunLang;
    }
    /**
     * @return The name of the feature.
     * 
     */
    public String envFeatureName() {
        return this.envFeatureName;
    }
    /**
     * @return The ID of the environment instance.
     * 
     */
    public String environmentId() {
        return this.environmentId;
    }
    /**
     * @return The version of the feature.
     * 
     */
    public String featureVersion() {
        return this.featureVersion;
    }
    /**
     * @return The ID of the Env Feature. It formats as `&lt;environment_id&gt;:&lt;env_feature_name&gt;`.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The status of the feature.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEnvFeaturesFeature defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String aliyunLang;
        private String envFeatureName;
        private String environmentId;
        private String featureVersion;
        private String id;
        private String status;
        public Builder() {}
        public Builder(GetEnvFeaturesFeature defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aliyunLang = defaults.aliyunLang;
    	      this.envFeatureName = defaults.envFeatureName;
    	      this.environmentId = defaults.environmentId;
    	      this.featureVersion = defaults.featureVersion;
    	      this.id = defaults.id;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder aliyunLang(String aliyunLang) {
            if (aliyunLang == null) {
              throw new MissingRequiredPropertyException("GetEnvFeaturesFeature", "aliyunLang");
            }
            this.aliyunLang = aliyunLang;
            return this;
        }
        @CustomType.Setter
        public Builder envFeatureName(String envFeatureName) {
            if (envFeatureName == null) {
              throw new MissingRequiredPropertyException("GetEnvFeaturesFeature", "envFeatureName");
            }
            this.envFeatureName = envFeatureName;
            return this;
        }
        @CustomType.Setter
        public Builder environmentId(String environmentId) {
            if (environmentId == null) {
              throw new MissingRequiredPropertyException("GetEnvFeaturesFeature", "environmentId");
            }
            this.environmentId = environmentId;
            return this;
        }
        @CustomType.Setter
        public Builder featureVersion(String featureVersion) {
            if (featureVersion == null) {
              throw new MissingRequiredPropertyException("GetEnvFeaturesFeature", "featureVersion");
            }
            this.featureVersion = featureVersion;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEnvFeaturesFeature", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetEnvFeaturesFeature", "status");
            }
            this.status = status;
            return this;
        }
        public GetEnvFeaturesFeature build() {
            final var _resultValue = new GetEnvFeaturesFeature();
            _resultValue.aliyunLang = aliyunLang;
            _resultValue.envFeatureName = envFeatureName;
            _resultValue.environmentId = environmentId;
            _resultValue.featureVersion = featureVersion;
            _resultValue.id = id;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
