// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sae.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetApplicationScalingRulesRuleScalingRuleTimerSchedule {
    /**
     * @return Time point. Format: `hours:minutes`.
     * 
     */
    private String atTime;
    /**
     * @return The maximum number of instances.
     * 
     */
    private Integer maxReplicas;
    /**
     * @return The minimum number of instances.
     * 
     */
    private Integer minReplicas;
    /**
     * @return The number of target instances.
     * 
     */
    private Integer targetReplicas;

    private GetApplicationScalingRulesRuleScalingRuleTimerSchedule() {}
    /**
     * @return Time point. Format: `hours:minutes`.
     * 
     */
    public String atTime() {
        return this.atTime;
    }
    /**
     * @return The maximum number of instances.
     * 
     */
    public Integer maxReplicas() {
        return this.maxReplicas;
    }
    /**
     * @return The minimum number of instances.
     * 
     */
    public Integer minReplicas() {
        return this.minReplicas;
    }
    /**
     * @return The number of target instances.
     * 
     */
    public Integer targetReplicas() {
        return this.targetReplicas;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationScalingRulesRuleScalingRuleTimerSchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String atTime;
        private Integer maxReplicas;
        private Integer minReplicas;
        private Integer targetReplicas;
        public Builder() {}
        public Builder(GetApplicationScalingRulesRuleScalingRuleTimerSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.atTime = defaults.atTime;
    	      this.maxReplicas = defaults.maxReplicas;
    	      this.minReplicas = defaults.minReplicas;
    	      this.targetReplicas = defaults.targetReplicas;
        }

        @CustomType.Setter
        public Builder atTime(String atTime) {
            if (atTime == null) {
              throw new MissingRequiredPropertyException("GetApplicationScalingRulesRuleScalingRuleTimerSchedule", "atTime");
            }
            this.atTime = atTime;
            return this;
        }
        @CustomType.Setter
        public Builder maxReplicas(Integer maxReplicas) {
            if (maxReplicas == null) {
              throw new MissingRequiredPropertyException("GetApplicationScalingRulesRuleScalingRuleTimerSchedule", "maxReplicas");
            }
            this.maxReplicas = maxReplicas;
            return this;
        }
        @CustomType.Setter
        public Builder minReplicas(Integer minReplicas) {
            if (minReplicas == null) {
              throw new MissingRequiredPropertyException("GetApplicationScalingRulesRuleScalingRuleTimerSchedule", "minReplicas");
            }
            this.minReplicas = minReplicas;
            return this;
        }
        @CustomType.Setter
        public Builder targetReplicas(Integer targetReplicas) {
            if (targetReplicas == null) {
              throw new MissingRequiredPropertyException("GetApplicationScalingRulesRuleScalingRuleTimerSchedule", "targetReplicas");
            }
            this.targetReplicas = targetReplicas;
            return this;
        }
        public GetApplicationScalingRulesRuleScalingRuleTimerSchedule build() {
            final var _resultValue = new GetApplicationScalingRulesRuleScalingRuleTimerSchedule();
            _resultValue.atTime = atTime;
            _resultValue.maxReplicas = maxReplicas;
            _resultValue.minReplicas = minReplicas;
            _resultValue.targetReplicas = targetReplicas;
            return _resultValue;
        }
    }
}
