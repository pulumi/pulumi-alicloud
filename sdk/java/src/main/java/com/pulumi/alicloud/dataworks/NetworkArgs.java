// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dataworks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class NetworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkArgs Empty = new NetworkArgs();

    /**
     * The ID of the resource group.
     * 
     */
    @Import(name="dwResourceGroupId", required=true)
    private Output<String> dwResourceGroupId;

    /**
     * @return The ID of the resource group.
     * 
     */
    public Output<String> dwResourceGroupId() {
        return this.dwResourceGroupId;
    }

    /**
     * Virtual Private Cloud ID of network resources
     * 
     */
    @Import(name="vpcId", required=true)
    private Output<String> vpcId;

    /**
     * @return Virtual Private Cloud ID of network resources
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }

    /**
     * The vSwitch ID of the network resource.
     * 
     */
    @Import(name="vswitchId", required=true)
    private Output<String> vswitchId;

    /**
     * @return The vSwitch ID of the network resource.
     * 
     */
    public Output<String> vswitchId() {
        return this.vswitchId;
    }

    private NetworkArgs() {}

    private NetworkArgs(NetworkArgs $) {
        this.dwResourceGroupId = $.dwResourceGroupId;
        this.vpcId = $.vpcId;
        this.vswitchId = $.vswitchId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkArgs $;

        public Builder() {
            $ = new NetworkArgs();
        }

        public Builder(NetworkArgs defaults) {
            $ = new NetworkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dwResourceGroupId The ID of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder dwResourceGroupId(Output<String> dwResourceGroupId) {
            $.dwResourceGroupId = dwResourceGroupId;
            return this;
        }

        /**
         * @param dwResourceGroupId The ID of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder dwResourceGroupId(String dwResourceGroupId) {
            return dwResourceGroupId(Output.of(dwResourceGroupId));
        }

        /**
         * @param vpcId Virtual Private Cloud ID of network resources
         * 
         * @return builder
         * 
         */
        public Builder vpcId(Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId Virtual Private Cloud ID of network resources
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param vswitchId The vSwitch ID of the network resource.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId The vSwitch ID of the network resource.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        public NetworkArgs build() {
            if ($.dwResourceGroupId == null) {
                throw new MissingRequiredPropertyException("NetworkArgs", "dwResourceGroupId");
            }
            if ($.vpcId == null) {
                throw new MissingRequiredPropertyException("NetworkArgs", "vpcId");
            }
            if ($.vswitchId == null) {
                throw new MissingRequiredPropertyException("NetworkArgs", "vswitchId");
            }
            return $;
        }
    }

}
