// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sms;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class ShortUrlArgs extends com.pulumi.resources.ResourceArgs {

    public static final ShortUrlArgs Empty = new ShortUrlArgs();

    /**
     * Short chain service use validity period. Valid values: `30`, `60`, `90`. The unit is days, and the maximum validity period is 90 days.
     * 
     */
    @Import(name="effectiveDays", required=true)
    private Output<Integer> effectiveDays;

    /**
     * @return Short chain service use validity period. Valid values: `30`, `60`, `90`. The unit is days, and the maximum validity period is 90 days.
     * 
     */
    public Output<Integer> effectiveDays() {
        return this.effectiveDays;
    }

    /**
     * The name of the resource.
     * 
     */
    @Import(name="shortUrlName", required=true)
    private Output<String> shortUrlName;

    /**
     * @return The name of the resource.
     * 
     */
    public Output<String> shortUrlName() {
        return this.shortUrlName;
    }

    /**
     * The original link address.
     * 
     */
    @Import(name="sourceUrl", required=true)
    private Output<String> sourceUrl;

    /**
     * @return The original link address.
     * 
     */
    public Output<String> sourceUrl() {
        return this.sourceUrl;
    }

    private ShortUrlArgs() {}

    private ShortUrlArgs(ShortUrlArgs $) {
        this.effectiveDays = $.effectiveDays;
        this.shortUrlName = $.shortUrlName;
        this.sourceUrl = $.sourceUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ShortUrlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ShortUrlArgs $;

        public Builder() {
            $ = new ShortUrlArgs();
        }

        public Builder(ShortUrlArgs defaults) {
            $ = new ShortUrlArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param effectiveDays Short chain service use validity period. Valid values: `30`, `60`, `90`. The unit is days, and the maximum validity period is 90 days.
         * 
         * @return builder
         * 
         */
        public Builder effectiveDays(Output<Integer> effectiveDays) {
            $.effectiveDays = effectiveDays;
            return this;
        }

        /**
         * @param effectiveDays Short chain service use validity period. Valid values: `30`, `60`, `90`. The unit is days, and the maximum validity period is 90 days.
         * 
         * @return builder
         * 
         */
        public Builder effectiveDays(Integer effectiveDays) {
            return effectiveDays(Output.of(effectiveDays));
        }

        /**
         * @param shortUrlName The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder shortUrlName(Output<String> shortUrlName) {
            $.shortUrlName = shortUrlName;
            return this;
        }

        /**
         * @param shortUrlName The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder shortUrlName(String shortUrlName) {
            return shortUrlName(Output.of(shortUrlName));
        }

        /**
         * @param sourceUrl The original link address.
         * 
         * @return builder
         * 
         */
        public Builder sourceUrl(Output<String> sourceUrl) {
            $.sourceUrl = sourceUrl;
            return this;
        }

        /**
         * @param sourceUrl The original link address.
         * 
         * @return builder
         * 
         */
        public Builder sourceUrl(String sourceUrl) {
            return sourceUrl(Output.of(sourceUrl));
        }

        public ShortUrlArgs build() {
            if ($.effectiveDays == null) {
                throw new MissingRequiredPropertyException("ShortUrlArgs", "effectiveDays");
            }
            if ($.shortUrlName == null) {
                throw new MissingRequiredPropertyException("ShortUrlArgs", "shortUrlName");
            }
            if ($.sourceUrl == null) {
                throw new MissingRequiredPropertyException("ShortUrlArgs", "sourceUrl");
            }
            return $;
        }
    }

}
