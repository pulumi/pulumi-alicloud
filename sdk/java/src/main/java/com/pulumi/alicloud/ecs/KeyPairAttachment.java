// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.ecs.KeyPairAttachmentArgs;
import com.pulumi.alicloud.ecs.inputs.KeyPairAttachmentState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * &gt; **DEPRECATED:** This resource has been renamed to alicloud.ecs.EcsKeyPairAttachment from version 1.121.0.
 * 
 * Provides a key pair attachment resource to bind key pair for several ECS instances.
 * 
 * &gt; **NOTE:** After the key pair is attached with sone instances, there instances must be rebooted to make the key pair affect.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.ecs.EcsFunctions;
 * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
 * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.ecs.SecurityGroup;
 * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
 * import com.pulumi.alicloud.ecs.Instance;
 * import com.pulumi.alicloud.ecs.InstanceArgs;
 * import com.pulumi.alicloud.ecs.KeyPair;
 * import com.pulumi.alicloud.ecs.KeyPairArgs;
 * import com.pulumi.alicloud.ecs.KeyPairAttachment;
 * import com.pulumi.alicloud.ecs.KeyPairAttachmentArgs;
 * import com.pulumi.codegen.internal.KeyedValue;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
 *             .availableDiskCategory(&#34;cloud_ssd&#34;)
 *             .availableResourceCreation(&#34;VSwitch&#34;)
 *             .build());
 * 
 *         final var type = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
 *             .avaiabilityZone(default_.zones()[0].id())
 *             .cpuCoreCount(1)
 *             .memorySize(2)
 *             .build());
 * 
 *         final var images = EcsFunctions.getImages(GetImagesArgs.builder()
 *             .nameRegex(&#34;^ubuntu_18.*64&#34;)
 *             .mostRecent(true)
 *             .owners(&#34;system&#34;)
 *             .build());
 * 
 *         final var name = config.get(&#34;name&#34;).orElse(&#34;keyPairAttachmentName&#34;);
 *         var vpc = new Network(&#34;vpc&#34;, NetworkArgs.builder()        
 *             .vpcName(name)
 *             .cidrBlock(&#34;10.1.0.0/21&#34;)
 *             .build());
 * 
 *         var vswitch = new Switch(&#34;vswitch&#34;, SwitchArgs.builder()        
 *             .vpcId(vpc.id())
 *             .cidrBlock(&#34;10.1.1.0/24&#34;)
 *             .zoneId(default_.zones()[0].id())
 *             .vswitchName(name)
 *             .build());
 * 
 *         var group = new SecurityGroup(&#34;group&#34;, SecurityGroupArgs.builder()        
 *             .description(&#34;New security group&#34;)
 *             .vpcId(vpc.id())
 *             .build());
 * 
 *         for (var i = 0; i &lt; 2; i++) {
 *             new Instance(&#34;instance-&#34; + i, InstanceArgs.builder()            
 *                 .instanceName(String.format(&#34;%s-%s&#34;, name,range.value() + 1))
 *                 .imageId(images.applyValue(getImagesResult -&gt; getImagesResult.images()[0].id()))
 *                 .instanceType(type.applyValue(getInstanceTypesResult -&gt; getInstanceTypesResult.instanceTypes()[0].id()))
 *                 .securityGroups(group.id())
 *                 .vswitchId(vswitch.id())
 *                 .internetChargeType(&#34;PayByTraffic&#34;)
 *                 .internetMaxBandwidthOut(5)
 *                 .password(&#34;Test12345&#34;)
 *                 .instanceChargeType(&#34;PostPaid&#34;)
 *                 .systemDiskCategory(&#34;cloud_ssd&#34;)
 *                 .build());
 * 
 *         
 * }
 *         var pair = new KeyPair(&#34;pair&#34;, KeyPairArgs.builder()        
 *             .keyName(name)
 *             .build());
 * 
 *         var attachment = new KeyPairAttachment(&#34;attachment&#34;, KeyPairAttachmentArgs.builder()        
 *             .keyName(pair.id())
 *             .instanceIds(instance.stream().map(element -&gt; element.id()).collect(toList()))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="alicloud:ecs/keyPairAttachment:KeyPairAttachment")
public class KeyPairAttachment extends com.pulumi.resources.CustomResource {
    /**
     * Set it to true and it will reboot instances which attached with the key pair to make key pair affect immediately.
     * 
     */
    @Export(name="force", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> force;

    /**
     * @return Set it to true and it will reboot instances which attached with the key pair to make key pair affect immediately.
     * 
     */
    public Output<Optional<Boolean>> force() {
        return Codegen.optional(this.force);
    }
    /**
     * The list of ECS instance&#39;s IDs.
     * 
     */
    @Export(name="instanceIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> instanceIds;

    /**
     * @return The list of ECS instance&#39;s IDs.
     * 
     */
    public Output<List<String>> instanceIds() {
        return this.instanceIds;
    }
    /**
     * The name of key pair used to bind.
     * 
     * @deprecated
     * Field &#39;key_name&#39; has been deprecated from provider version 1.121.0. New field &#39;key_pair_name&#39; instead.
     * 
     */
    @Deprecated /* Field 'key_name' has been deprecated from provider version 1.121.0. New field 'key_pair_name' instead. */
    @Export(name="keyName", refs={String.class}, tree="[0]")
    private Output<String> keyName;

    /**
     * @return The name of key pair used to bind.
     * 
     */
    public Output<String> keyName() {
        return this.keyName;
    }
    @Export(name="keyPairName", refs={String.class}, tree="[0]")
    private Output<String> keyPairName;

    public Output<String> keyPairName() {
        return this.keyPairName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public KeyPairAttachment(String name) {
        this(name, KeyPairAttachmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public KeyPairAttachment(String name, KeyPairAttachmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public KeyPairAttachment(String name, KeyPairAttachmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ecs/keyPairAttachment:KeyPairAttachment", name, args == null ? KeyPairAttachmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private KeyPairAttachment(String name, Output<String> id, @Nullable KeyPairAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ecs/keyPairAttachment:KeyPairAttachment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static KeyPairAttachment get(String name, Output<String> id, @Nullable KeyPairAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new KeyPairAttachment(name, id, state, options);
    }
}
