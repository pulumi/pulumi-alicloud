// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.resourcemanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountState extends com.pulumi.resources.ResourceArgs {

    public static final AccountState Empty = new AccountState();

    /**
     * The IDs of the check items that you can choose to ignore for the member deletion.
     * If you want to delete the account, please use datasource `alicloud.resourcemanager.getAccountDeletionCheckTask`
     * to get check ids and set them.
     * 
     */
    @Import(name="abandonAbleCheckIds")
    private @Nullable Output<List<String>> abandonAbleCheckIds;

    /**
     * @return The IDs of the check items that you can choose to ignore for the member deletion.
     * If you want to delete the account, please use datasource `alicloud.resourcemanager.getAccountDeletionCheckTask`
     * to get check ids and set them.
     * 
     */
    public Optional<Output<List<String>>> abandonAbleCheckIds() {
        return Optional.ofNullable(this.abandonAbleCheckIds);
    }

    /**
     * The name prefix of account.
     * 
     */
    @Import(name="accountNamePrefix")
    private @Nullable Output<String> accountNamePrefix;

    /**
     * @return The name prefix of account.
     * 
     */
    public Optional<Output<String>> accountNamePrefix() {
        return Optional.ofNullable(this.accountNamePrefix);
    }

    /**
     * Member name. The length is 2 ~ 50 characters or Chinese characters, which can include Chinese characters, English letters, numbers, underscores (_), dots (.) And dashes (-).
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Member name. The length is 2 ~ 50 characters or Chinese characters, which can include Chinese characters, English letters, numbers, underscores (_), dots (.) And dashes (-).
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The ID of the parent folder.
     * 
     */
    @Import(name="folderId")
    private @Nullable Output<String> folderId;

    /**
     * @return The ID of the parent folder.
     * 
     */
    public Optional<Output<String>> folderId() {
        return Optional.ofNullable(this.folderId);
    }

    /**
     * Ways for members to join the resource directory. Valid values: `invited`, `created`.
     * 
     */
    @Import(name="joinMethod")
    private @Nullable Output<String> joinMethod;

    /**
     * @return Ways for members to join the resource directory. Valid values: `invited`, `created`.
     * 
     */
    public Optional<Output<String>> joinMethod() {
        return Optional.ofNullable(this.joinMethod);
    }

    /**
     * The time when the member joined the resource directory.
     * 
     */
    @Import(name="joinTime")
    private @Nullable Output<String> joinTime;

    /**
     * @return The time when the member joined the resource directory.
     * 
     */
    public Optional<Output<String>> joinTime() {
        return Optional.ofNullable(this.joinTime);
    }

    /**
     * The modification time of the invitation.
     * 
     */
    @Import(name="modifyTime")
    private @Nullable Output<String> modifyTime;

    /**
     * @return The modification time of the invitation.
     * 
     */
    public Optional<Output<String>> modifyTime() {
        return Optional.ofNullable(this.modifyTime);
    }

    /**
     * The ID of the billing account. If you leave this parameter empty, the current account is used as the billing account.
     * 
     */
    @Import(name="payerAccountId")
    private @Nullable Output<String> payerAccountId;

    /**
     * @return The ID of the billing account. If you leave this parameter empty, the current account is used as the billing account.
     * 
     */
    public Optional<Output<String>> payerAccountId() {
        return Optional.ofNullable(this.payerAccountId);
    }

    /**
     * Resource directory ID.
     * 
     */
    @Import(name="resourceDirectoryId")
    private @Nullable Output<String> resourceDirectoryId;

    /**
     * @return Resource directory ID.
     * 
     */
    public Optional<Output<String>> resourceDirectoryId() {
        return Optional.ofNullable(this.resourceDirectoryId);
    }

    /**
     * Member joining status. Valid values: `CreateSuccess`,`CreateVerifying`,`CreateFailed`,`CreateExpired`,`CreateCancelled`,`PromoteVerifying`,`PromoteFailed`,`PromoteExpired`,`PromoteCancelled`,`PromoteSuccess`,`InviteSuccess`,`Removed`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Member joining status. Valid values: `CreateSuccess`,`CreateVerifying`,`CreateFailed`,`CreateExpired`,`CreateCancelled`,`PromoteVerifying`,`PromoteFailed`,`PromoteExpired`,`PromoteCancelled`,`PromoteSuccess`,`InviteSuccess`,`Removed`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     * &gt; **NOTE:** The member name must be unique within the resource directory.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     * &gt; **NOTE:** The member name must be unique within the resource directory.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Member type. The value of `ResourceAccount` indicates the resource account.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Member type. The value of `ResourceAccount` indicates the resource account.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private AccountState() {}

    private AccountState(AccountState $) {
        this.abandonAbleCheckIds = $.abandonAbleCheckIds;
        this.accountNamePrefix = $.accountNamePrefix;
        this.displayName = $.displayName;
        this.folderId = $.folderId;
        this.joinMethod = $.joinMethod;
        this.joinTime = $.joinTime;
        this.modifyTime = $.modifyTime;
        this.payerAccountId = $.payerAccountId;
        this.resourceDirectoryId = $.resourceDirectoryId;
        this.status = $.status;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountState $;

        public Builder() {
            $ = new AccountState();
        }

        public Builder(AccountState defaults) {
            $ = new AccountState(Objects.requireNonNull(defaults));
        }

        /**
         * @param abandonAbleCheckIds The IDs of the check items that you can choose to ignore for the member deletion.
         * If you want to delete the account, please use datasource `alicloud.resourcemanager.getAccountDeletionCheckTask`
         * to get check ids and set them.
         * 
         * @return builder
         * 
         */
        public Builder abandonAbleCheckIds(@Nullable Output<List<String>> abandonAbleCheckIds) {
            $.abandonAbleCheckIds = abandonAbleCheckIds;
            return this;
        }

        /**
         * @param abandonAbleCheckIds The IDs of the check items that you can choose to ignore for the member deletion.
         * If you want to delete the account, please use datasource `alicloud.resourcemanager.getAccountDeletionCheckTask`
         * to get check ids and set them.
         * 
         * @return builder
         * 
         */
        public Builder abandonAbleCheckIds(List<String> abandonAbleCheckIds) {
            return abandonAbleCheckIds(Output.of(abandonAbleCheckIds));
        }

        /**
         * @param abandonAbleCheckIds The IDs of the check items that you can choose to ignore for the member deletion.
         * If you want to delete the account, please use datasource `alicloud.resourcemanager.getAccountDeletionCheckTask`
         * to get check ids and set them.
         * 
         * @return builder
         * 
         */
        public Builder abandonAbleCheckIds(String... abandonAbleCheckIds) {
            return abandonAbleCheckIds(List.of(abandonAbleCheckIds));
        }

        /**
         * @param accountNamePrefix The name prefix of account.
         * 
         * @return builder
         * 
         */
        public Builder accountNamePrefix(@Nullable Output<String> accountNamePrefix) {
            $.accountNamePrefix = accountNamePrefix;
            return this;
        }

        /**
         * @param accountNamePrefix The name prefix of account.
         * 
         * @return builder
         * 
         */
        public Builder accountNamePrefix(String accountNamePrefix) {
            return accountNamePrefix(Output.of(accountNamePrefix));
        }

        /**
         * @param displayName Member name. The length is 2 ~ 50 characters or Chinese characters, which can include Chinese characters, English letters, numbers, underscores (_), dots (.) And dashes (-).
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Member name. The length is 2 ~ 50 characters or Chinese characters, which can include Chinese characters, English letters, numbers, underscores (_), dots (.) And dashes (-).
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param folderId The ID of the parent folder.
         * 
         * @return builder
         * 
         */
        public Builder folderId(@Nullable Output<String> folderId) {
            $.folderId = folderId;
            return this;
        }

        /**
         * @param folderId The ID of the parent folder.
         * 
         * @return builder
         * 
         */
        public Builder folderId(String folderId) {
            return folderId(Output.of(folderId));
        }

        /**
         * @param joinMethod Ways for members to join the resource directory. Valid values: `invited`, `created`.
         * 
         * @return builder
         * 
         */
        public Builder joinMethod(@Nullable Output<String> joinMethod) {
            $.joinMethod = joinMethod;
            return this;
        }

        /**
         * @param joinMethod Ways for members to join the resource directory. Valid values: `invited`, `created`.
         * 
         * @return builder
         * 
         */
        public Builder joinMethod(String joinMethod) {
            return joinMethod(Output.of(joinMethod));
        }

        /**
         * @param joinTime The time when the member joined the resource directory.
         * 
         * @return builder
         * 
         */
        public Builder joinTime(@Nullable Output<String> joinTime) {
            $.joinTime = joinTime;
            return this;
        }

        /**
         * @param joinTime The time when the member joined the resource directory.
         * 
         * @return builder
         * 
         */
        public Builder joinTime(String joinTime) {
            return joinTime(Output.of(joinTime));
        }

        /**
         * @param modifyTime The modification time of the invitation.
         * 
         * @return builder
         * 
         */
        public Builder modifyTime(@Nullable Output<String> modifyTime) {
            $.modifyTime = modifyTime;
            return this;
        }

        /**
         * @param modifyTime The modification time of the invitation.
         * 
         * @return builder
         * 
         */
        public Builder modifyTime(String modifyTime) {
            return modifyTime(Output.of(modifyTime));
        }

        /**
         * @param payerAccountId The ID of the billing account. If you leave this parameter empty, the current account is used as the billing account.
         * 
         * @return builder
         * 
         */
        public Builder payerAccountId(@Nullable Output<String> payerAccountId) {
            $.payerAccountId = payerAccountId;
            return this;
        }

        /**
         * @param payerAccountId The ID of the billing account. If you leave this parameter empty, the current account is used as the billing account.
         * 
         * @return builder
         * 
         */
        public Builder payerAccountId(String payerAccountId) {
            return payerAccountId(Output.of(payerAccountId));
        }

        /**
         * @param resourceDirectoryId Resource directory ID.
         * 
         * @return builder
         * 
         */
        public Builder resourceDirectoryId(@Nullable Output<String> resourceDirectoryId) {
            $.resourceDirectoryId = resourceDirectoryId;
            return this;
        }

        /**
         * @param resourceDirectoryId Resource directory ID.
         * 
         * @return builder
         * 
         */
        public Builder resourceDirectoryId(String resourceDirectoryId) {
            return resourceDirectoryId(Output.of(resourceDirectoryId));
        }

        /**
         * @param status Member joining status. Valid values: `CreateSuccess`,`CreateVerifying`,`CreateFailed`,`CreateExpired`,`CreateCancelled`,`PromoteVerifying`,`PromoteFailed`,`PromoteExpired`,`PromoteCancelled`,`PromoteSuccess`,`InviteSuccess`,`Removed`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Member joining status. Valid values: `CreateSuccess`,`CreateVerifying`,`CreateFailed`,`CreateExpired`,`CreateCancelled`,`PromoteVerifying`,`PromoteFailed`,`PromoteExpired`,`PromoteCancelled`,`PromoteSuccess`,`InviteSuccess`,`Removed`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * &gt; **NOTE:** The member name must be unique within the resource directory.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * &gt; **NOTE:** The member name must be unique within the resource directory.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param type Member type. The value of `ResourceAccount` indicates the resource account.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Member type. The value of `ResourceAccount` indicates the resource account.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AccountState build() {
            return $;
        }
    }

}
