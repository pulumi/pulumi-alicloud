// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection.outputs;

import com.pulumi.alicloud.threatdetection.outputs.GetHoneyPotsPot;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetHoneyPotsResult {
    /**
     * @return Honeypot ID.
     * 
     */
    private @Nullable String honeypotId;
    /**
     * @return Honeypot custom name.
     * 
     */
    private @Nullable String honeypotName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of Honey Pot IDs.
     * 
     */
    private List<String> ids;
    private @Nullable String nameRegex;
    /**
     * @return The ID of the honeypot management node.
     * 
     */
    private @Nullable String nodeId;
    private @Nullable String nodeName;
    private @Nullable String outputFile;
    /**
     * @return A list of Honey Pot Entries. Each element contains the following attributes:
     * 
     */
    private List<GetHoneyPotsPot> pots;

    private GetHoneyPotsResult() {}
    /**
     * @return Honeypot ID.
     * 
     */
    public Optional<String> honeypotId() {
        return Optional.ofNullable(this.honeypotId);
    }
    /**
     * @return Honeypot custom name.
     * 
     */
    public Optional<String> honeypotName() {
        return Optional.ofNullable(this.honeypotName);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of Honey Pot IDs.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    /**
     * @return The ID of the honeypot management node.
     * 
     */
    public Optional<String> nodeId() {
        return Optional.ofNullable(this.nodeId);
    }
    public Optional<String> nodeName() {
        return Optional.ofNullable(this.nodeName);
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return A list of Honey Pot Entries. Each element contains the following attributes:
     * 
     */
    public List<GetHoneyPotsPot> pots() {
        return this.pots;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHoneyPotsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String honeypotId;
        private @Nullable String honeypotName;
        private String id;
        private List<String> ids;
        private @Nullable String nameRegex;
        private @Nullable String nodeId;
        private @Nullable String nodeName;
        private @Nullable String outputFile;
        private List<GetHoneyPotsPot> pots;
        public Builder() {}
        public Builder(GetHoneyPotsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.honeypotId = defaults.honeypotId;
    	      this.honeypotName = defaults.honeypotName;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.nameRegex = defaults.nameRegex;
    	      this.nodeId = defaults.nodeId;
    	      this.nodeName = defaults.nodeName;
    	      this.outputFile = defaults.outputFile;
    	      this.pots = defaults.pots;
        }

        @CustomType.Setter
        public Builder honeypotId(@Nullable String honeypotId) {

            this.honeypotId = honeypotId;
            return this;
        }
        @CustomType.Setter
        public Builder honeypotName(@Nullable String honeypotName) {

            this.honeypotName = honeypotName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetHoneyPotsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            if (ids == null) {
              throw new MissingRequiredPropertyException("GetHoneyPotsResult", "ids");
            }
            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {

            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder nodeId(@Nullable String nodeId) {

            this.nodeId = nodeId;
            return this;
        }
        @CustomType.Setter
        public Builder nodeName(@Nullable String nodeName) {

            this.nodeName = nodeName;
            return this;
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder pots(List<GetHoneyPotsPot> pots) {
            if (pots == null) {
              throw new MissingRequiredPropertyException("GetHoneyPotsResult", "pots");
            }
            this.pots = pots;
            return this;
        }
        public Builder pots(GetHoneyPotsPot... pots) {
            return pots(List.of(pots));
        }
        public GetHoneyPotsResult build() {
            final var _resultValue = new GetHoneyPotsResult();
            _resultValue.honeypotId = honeypotId;
            _resultValue.honeypotName = honeypotName;
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.nameRegex = nameRegex;
            _resultValue.nodeId = nodeId;
            _resultValue.nodeName = nodeName;
            _resultValue.outputFile = outputFile;
            _resultValue.pots = pots;
            return _resultValue;
        }
    }
}
