// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEcsLaunchTemplatesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEcsLaunchTemplatesArgs Empty = new GetEcsLaunchTemplatesArgs();

    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     * 
     */
    @Import(name="enableDetails")
    private @Nullable Output<Boolean> enableDetails;

    /**
     * @return Default to `false`. Set it to `true` can output more details about resource attributes.
     * 
     */
    public Optional<Output<Boolean>> enableDetails() {
        return Optional.ofNullable(this.enableDetails);
    }

    /**
     * A list of Launch Template IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of Launch Template IDs.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * The Launch Template Name.
     * 
     */
    @Import(name="launchTemplateName")
    private @Nullable Output<String> launchTemplateName;

    /**
     * @return The Launch Template Name.
     * 
     */
    public Optional<Output<String>> launchTemplateName() {
        return Optional.ofNullable(this.launchTemplateName);
    }

    /**
     * A regex string to filter results by Launch Template name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    /**
     * @return A regex string to filter results by Launch Template name.
     * 
     */
    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The template resource group id.
     * 
     */
    @Import(name="templateResourceGroupId")
    private @Nullable Output<String> templateResourceGroupId;

    /**
     * @return The template resource group id.
     * 
     */
    public Optional<Output<String>> templateResourceGroupId() {
        return Optional.ofNullable(this.templateResourceGroupId);
    }

    @Import(name="templateTags")
    private @Nullable Output<Map<String,String>> templateTags;

    public Optional<Output<Map<String,String>>> templateTags() {
        return Optional.ofNullable(this.templateTags);
    }

    private GetEcsLaunchTemplatesArgs() {}

    private GetEcsLaunchTemplatesArgs(GetEcsLaunchTemplatesArgs $) {
        this.enableDetails = $.enableDetails;
        this.ids = $.ids;
        this.launchTemplateName = $.launchTemplateName;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.templateResourceGroupId = $.templateResourceGroupId;
        this.templateTags = $.templateTags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEcsLaunchTemplatesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEcsLaunchTemplatesArgs $;

        public Builder() {
            $ = new GetEcsLaunchTemplatesArgs();
        }

        public Builder(GetEcsLaunchTemplatesArgs defaults) {
            $ = new GetEcsLaunchTemplatesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableDetails Default to `false`. Set it to `true` can output more details about resource attributes.
         * 
         * @return builder
         * 
         */
        public Builder enableDetails(@Nullable Output<Boolean> enableDetails) {
            $.enableDetails = enableDetails;
            return this;
        }

        /**
         * @param enableDetails Default to `false`. Set it to `true` can output more details about resource attributes.
         * 
         * @return builder
         * 
         */
        public Builder enableDetails(Boolean enableDetails) {
            return enableDetails(Output.of(enableDetails));
        }

        /**
         * @param ids A list of Launch Template IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Launch Template IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of Launch Template IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param launchTemplateName The Launch Template Name.
         * 
         * @return builder
         * 
         */
        public Builder launchTemplateName(@Nullable Output<String> launchTemplateName) {
            $.launchTemplateName = launchTemplateName;
            return this;
        }

        /**
         * @param launchTemplateName The Launch Template Name.
         * 
         * @return builder
         * 
         */
        public Builder launchTemplateName(String launchTemplateName) {
            return launchTemplateName(Output.of(launchTemplateName));
        }

        /**
         * @param nameRegex A regex string to filter results by Launch Template name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param nameRegex A regex string to filter results by Launch Template name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        /**
         * @param templateResourceGroupId The template resource group id.
         * 
         * @return builder
         * 
         */
        public Builder templateResourceGroupId(@Nullable Output<String> templateResourceGroupId) {
            $.templateResourceGroupId = templateResourceGroupId;
            return this;
        }

        /**
         * @param templateResourceGroupId The template resource group id.
         * 
         * @return builder
         * 
         */
        public Builder templateResourceGroupId(String templateResourceGroupId) {
            return templateResourceGroupId(Output.of(templateResourceGroupId));
        }

        public Builder templateTags(@Nullable Output<Map<String,String>> templateTags) {
            $.templateTags = templateTags;
            return this;
        }

        public Builder templateTags(Map<String,String> templateTags) {
            return templateTags(Output.of(templateTags));
        }

        public GetEcsLaunchTemplatesArgs build() {
            return $;
        }
    }

}
