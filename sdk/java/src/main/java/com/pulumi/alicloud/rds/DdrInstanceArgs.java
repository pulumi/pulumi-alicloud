// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rds;

import com.pulumi.alicloud.rds.inputs.DdrInstanceParameterArgs;
import com.pulumi.alicloud.rds.inputs.DdrInstancePgHbaConfArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DdrInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final DdrInstanceArgs Empty = new DdrInstanceArgs();

    /**
     * The method that is used to verify the identities of clients. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. In addition, this parameter is available only when the public key of the CA that issues client certificates is enabled. Valid values:
     * - cert
     * - perfer
     * - verify-ca
     * - verify-full (supported only when the instance runs PostgreSQL 12 or later)
     * 
     */
    @Import(name="acl")
    private @Nullable Output<String> acl;

    /**
     * @return The method that is used to verify the identities of clients. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. In addition, this parameter is available only when the public key of the CA that issues client certificates is enabled. Valid values:
     * - cert
     * - perfer
     * - verify-ca
     * - verify-full (supported only when the instance runs PostgreSQL 12 or later)
     * 
     */
    public Optional<Output<String>> acl() {
        return Optional.ofNullable(this.acl);
    }

    /**
     * Whether to renewal a DB instance automatically or not. It is valid when payment_type is `Subscription`. Default to `false`.
     * 
     */
    @Import(name="autoRenew")
    private @Nullable Output<Boolean> autoRenew;

    /**
     * @return Whether to renewal a DB instance automatically or not. It is valid when payment_type is `Subscription`. Default to `false`.
     * 
     */
    public Optional<Output<Boolean>> autoRenew() {
        return Optional.ofNullable(this.autoRenew);
    }

    /**
     * Auto-renewal period of an instance, in the unit of the month. It is valid when payment_type is `Subscription`. Valid value:[1~12], Default to 1.
     * 
     */
    @Import(name="autoRenewPeriod")
    private @Nullable Output<Integer> autoRenewPeriod;

    /**
     * @return Auto-renewal period of an instance, in the unit of the month. It is valid when payment_type is `Subscription`. Valid value:[1~12], Default to 1.
     * 
     */
    public Optional<Output<Integer>> autoRenewPeriod() {
        return Optional.ofNullable(this.autoRenewPeriod);
    }

    /**
     * The upgrade method to use. Valid values:
     * - Auto: Instances are automatically upgraded to a higher minor version.
     * - Manual: Instances are forcibly upgraded to a higher minor version when the current version is unpublished.
     * 
     * See more [details and limitation](https://www.alibabacloud.com/help/doc-detail/123605.htm).
     * 
     */
    @Import(name="autoUpgradeMinorVersion")
    private @Nullable Output<String> autoUpgradeMinorVersion;

    /**
     * @return The upgrade method to use. Valid values:
     * - Auto: Instances are automatically upgraded to a higher minor version.
     * - Manual: Instances are forcibly upgraded to a higher minor version when the current version is unpublished.
     * 
     * See more [details and limitation](https://www.alibabacloud.com/help/doc-detail/123605.htm).
     * 
     */
    public Optional<Output<String>> autoUpgradeMinorVersion() {
        return Optional.ofNullable(this.autoUpgradeMinorVersion);
    }

    /**
     * The ID of the backup set that is used for the restoration. You can call the DescribeCrossRegionBackups operation to query the ID of the backup set.
     * 
     */
    @Import(name="backupSetId")
    private @Nullable Output<String> backupSetId;

    /**
     * @return The ID of the backup set that is used for the restoration. You can call the DescribeCrossRegionBackups operation to query the ID of the backup set.
     * 
     */
    public Optional<Output<String>> backupSetId() {
        return Optional.ofNullable(this.backupSetId);
    }

    /**
     * The type of the server certificate. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the SSLEnabled parameter to 1, the default value of this parameter is aliyun. Value range:
     * - aliyun: a cloud certificate
     * - custom: a custom certificate
     * 
     */
    @Import(name="caType")
    private @Nullable Output<String> caType;

    /**
     * @return The type of the server certificate. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the SSLEnabled parameter to 1, the default value of this parameter is aliyun. Value range:
     * - aliyun: a cloud certificate
     * - custom: a custom certificate
     * 
     */
    public Optional<Output<String>> caType() {
        return Optional.ofNullable(this.caType);
    }

    /**
     * The public key of the CA that issues client certificates. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the ClientCAEbabled parameter to 1, you must also specify this parameter.
     * 
     */
    @Import(name="clientCaCert")
    private @Nullable Output<String> clientCaCert;

    /**
     * @return The public key of the CA that issues client certificates. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the ClientCAEbabled parameter to 1, you must also specify this parameter.
     * 
     */
    public Optional<Output<String>> clientCaCert() {
        return Optional.ofNullable(this.clientCaCert);
    }

    /**
     * Specifies whether to enable the public key of the CA that issues client certificates. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. Valid values:
     * - 1: enables the public key
     * - 0: disables the public key
     * 
     */
    @Import(name="clientCaEnabled")
    private @Nullable Output<Integer> clientCaEnabled;

    /**
     * @return Specifies whether to enable the public key of the CA that issues client certificates. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. Valid values:
     * - 1: enables the public key
     * - 0: disables the public key
     * 
     */
    public Optional<Output<Integer>> clientCaEnabled() {
        return Optional.ofNullable(this.clientCaEnabled);
    }

    /**
     * The CRL that contains revoked client certificates. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the ClientCrlEnabled parameter to 1, you must also specify this parameter.
     * 
     */
    @Import(name="clientCertRevocationList")
    private @Nullable Output<String> clientCertRevocationList;

    /**
     * @return The CRL that contains revoked client certificates. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the ClientCrlEnabled parameter to 1, you must also specify this parameter.
     * 
     */
    public Optional<Output<String>> clientCertRevocationList() {
        return Optional.ofNullable(this.clientCertRevocationList);
    }

    /**
     * Specifies whether to enable a certificate revocation list (CRL) that contains revoked client certificates. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. In addition, this parameter is available only when the public key of the CA that issues client certificates is enabled. Valid values:
     * - 1: enables the CRL
     * - 0: disables the CRL
     * 
     */
    @Import(name="clientCrlEnabled")
    private @Nullable Output<Integer> clientCrlEnabled;

    /**
     * @return Specifies whether to enable a certificate revocation list (CRL) that contains revoked client certificates. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. In addition, this parameter is available only when the public key of the CA that issues client certificates is enabled. Valid values:
     * - 1: enables the CRL
     * - 0: disables the CRL
     * 
     */
    public Optional<Output<Integer>> clientCrlEnabled() {
        return Optional.ofNullable(this.clientCrlEnabled);
    }

    /**
     * The private connection string prefix. If you want to update public connection string prefix, please use resource alicloud.rds.Connection connection_prefix.
     * &gt; **NOTE:** The prefix must be 8 to 64 characters in length and can contain letters, digits, and hyphens (-). It cannot contain Chinese characters and special characters ~!#%^&amp;*=+\|{};:&#39;&#34;,&lt;&gt;/?
     * 
     */
    @Import(name="connectionStringPrefix")
    private @Nullable Output<String> connectionStringPrefix;

    /**
     * @return The private connection string prefix. If you want to update public connection string prefix, please use resource alicloud.rds.Connection connection_prefix.
     * &gt; **NOTE:** The prefix must be 8 to 64 characters in length and can contain letters, digits, and hyphens (-). It cannot contain Chinese characters and special characters ~!#%^&amp;*=+\|{};:&#39;&#34;,&lt;&gt;/?
     * 
     */
    public Optional<Output<String>> connectionStringPrefix() {
        return Optional.ofNullable(this.connectionStringPrefix);
    }

    /**
     * The attribute of the IP address whitelist. By default, this parameter is empty.
     * 
     * &gt; **NOTE:** The IP address whitelists that have the hidden attribute are not displayed in the ApsaraDB RDS console. These IP address whitelists are used to access Alibaba Cloud services, such as Data Transmission Service (DTS).
     * 
     */
    @Import(name="dbInstanceIpArrayAttribute")
    private @Nullable Output<String> dbInstanceIpArrayAttribute;

    /**
     * @return The attribute of the IP address whitelist. By default, this parameter is empty.
     * 
     * &gt; **NOTE:** The IP address whitelists that have the hidden attribute are not displayed in the ApsaraDB RDS console. These IP address whitelists are used to access Alibaba Cloud services, such as Data Transmission Service (DTS).
     * 
     */
    public Optional<Output<String>> dbInstanceIpArrayAttribute() {
        return Optional.ofNullable(this.dbInstanceIpArrayAttribute);
    }

    /**
     * The name of the IP address whitelist. Default value: Default.
     * 
     * &gt; **NOTE:** A maximum of 200 IP address whitelists can be configured for each instance.
     * 
     */
    @Import(name="dbInstanceIpArrayName")
    private @Nullable Output<String> dbInstanceIpArrayName;

    /**
     * @return The name of the IP address whitelist. Default value: Default.
     * 
     * &gt; **NOTE:** A maximum of 200 IP address whitelists can be configured for each instance.
     * 
     */
    public Optional<Output<String>> dbInstanceIpArrayName() {
        return Optional.ofNullable(this.dbInstanceIpArrayName);
    }

    /**
     * The storage type of the instance. Valid values:
     * - local_ssd: specifies to use local SSDs. This value is recommended.
     * - cloud_ssd: specifies to use standard SSDs.
     * - cloud_essd: specifies to use enhanced SSDs (ESSDs).
     * - cloud_essd2: specifies to use enhanced SSDs (ESSDs).
     * - cloud_essd3: specifies to use enhanced SSDs (ESSDs).
     * 
     * &gt; **NOTE:** You can specify the time zone when you create a primary instance. You cannot specify the time zone when you create a read-only instance. Read-only instances inherit the time zone of their primary instance. If you do not specify this parameter, the system assigns the default time zone of the region where the instance resides.
     * 
     */
    @Import(name="dbInstanceStorageType")
    private @Nullable Output<String> dbInstanceStorageType;

    /**
     * @return The storage type of the instance. Valid values:
     * - local_ssd: specifies to use local SSDs. This value is recommended.
     * - cloud_ssd: specifies to use standard SSDs.
     * - cloud_essd: specifies to use enhanced SSDs (ESSDs).
     * - cloud_essd2: specifies to use enhanced SSDs (ESSDs).
     * - cloud_essd3: specifies to use enhanced SSDs (ESSDs).
     * 
     * &gt; **NOTE:** You can specify the time zone when you create a primary instance. You cannot specify the time zone when you create a read-only instance. Read-only instances inherit the time zone of their primary instance. If you do not specify this parameter, the system assigns the default time zone of the region where the instance resides.
     * 
     */
    public Optional<Output<String>> dbInstanceStorageType() {
        return Optional.ofNullable(this.dbInstanceStorageType);
    }

    /**
     * The switch of delete protection. Valid values:
     * - true: delete protect.
     * - false: no delete protect.
     * 
     * &gt; **NOTE:** `deletion_protection` is valid only when attribute `payment_type` is set to `PayAsYouGo`, supported engine type: **MySQL**, **PostgreSQL**, **MariaDB**, **MSSQL**.
     * 
     */
    @Import(name="deletionProtection")
    private @Nullable Output<Boolean> deletionProtection;

    /**
     * @return The switch of delete protection. Valid values:
     * - true: delete protect.
     * - false: no delete protect.
     * 
     * &gt; **NOTE:** `deletion_protection` is valid only when attribute `payment_type` is set to `PayAsYouGo`, supported engine type: **MySQL**, **PostgreSQL**, **MariaDB**, **MSSQL**.
     * 
     */
    public Optional<Output<Boolean>> deletionProtection() {
        return Optional.ofNullable(this.deletionProtection);
    }

    /**
     * The method to update the engine version and change.  Default value: Immediate. Valid values:
     * - Immediate: The change immediately takes effect.
     * - MaintainTime: The change takes effect during the specified maintenance window. For more information, see ModifyDBInstanceMaintainTime.
     * 
     */
    @Import(name="effectiveTime")
    private @Nullable Output<String> effectiveTime;

    /**
     * @return The method to update the engine version and change.  Default value: Immediate. Valid values:
     * - Immediate: The change immediately takes effect.
     * - MaintainTime: The change takes effect during the specified maintenance window. For more information, see ModifyDBInstanceMaintainTime.
     * 
     */
    public Optional<Output<String>> effectiveTime() {
        return Optional.ofNullable(this.effectiveTime);
    }

    /**
     * The key id of the KMS. Used for encrypting a disk if not null. Only for PostgreSQL, MySQL and SQLServer.
     * 
     */
    @Import(name="encryptionKey")
    private @Nullable Output<String> encryptionKey;

    /**
     * @return The key id of the KMS. Used for encrypting a disk if not null. Only for PostgreSQL, MySQL and SQLServer.
     * 
     */
    public Optional<Output<String>> encryptionKey() {
        return Optional.ofNullable(this.encryptionKey);
    }

    /**
     * Database type. Value options: MySQL, SQLServer.
     * 
     * &gt; **NOTE:** When the &#39;EngineVersion&#39; changes, it can be used as the target database version for the large version upgrade of RDS for MySQL instance.
     * 
     */
    @Import(name="engine", required=true)
    private Output<String> engine;

    /**
     * @return Database type. Value options: MySQL, SQLServer.
     * 
     * &gt; **NOTE:** When the &#39;EngineVersion&#39; changes, it can be used as the target database version for the large version upgrade of RDS for MySQL instance.
     * 
     */
    public Output<String> engine() {
        return this.engine;
    }

    /**
     * Database version. Value options can refer to the latest docs [CreateDdrInstance](https://www.alibabacloud.com/help/en/apsaradb-for-rds/latest/restore-data-to-a-new-instance-across-regions) `EngineVersion`.
     * 
     */
    @Import(name="engineVersion", required=true)
    private Output<String> engineVersion;

    /**
     * @return Database version. Value options can refer to the latest docs [CreateDdrInstance](https://www.alibabacloud.com/help/en/apsaradb-for-rds/latest/restore-data-to-a-new-instance-across-regions) `EngineVersion`.
     * 
     */
    public Output<String> engineVersion() {
        return this.engineVersion;
    }

    /**
     * Set it to true to make some parameter efficient when modifying them. Default to false.
     * 
     */
    @Import(name="forceRestart")
    private @Nullable Output<Boolean> forceRestart;

    /**
     * @return Set it to true to make some parameter efficient when modifying them. Default to false.
     * 
     */
    public Optional<Output<Boolean>> forceRestart() {
        return Optional.ofNullable(this.forceRestart);
    }

    /**
     * The read-only instances to which you want to synchronize the IP address whitelist.
     * * If the instance is attached with a read-only instance, you can use this parameter to synchronize the IP address whitelist to the read-only instance. If the instance is attached with multiple read-only instances, the read-only instances must be separated by commas (,).
     * * If the instance is not attached with a read-only instance, this parameter is empty.
     * 
     */
    @Import(name="freshWhiteListReadins")
    private @Nullable Output<String> freshWhiteListReadins;

    /**
     * @return The read-only instances to which you want to synchronize the IP address whitelist.
     * * If the instance is attached with a read-only instance, you can use this parameter to synchronize the IP address whitelist to the read-only instance. If the instance is attached with multiple read-only instances, the read-only instances must be separated by commas (,).
     * * If the instance is not attached with a read-only instance, this parameter is empty.
     * 
     */
    public Optional<Output<String>> freshWhiteListReadins() {
        return Optional.ofNullable(this.freshWhiteListReadins);
    }

    /**
     * The primary/secondary switchover mode of the instance. Default value: Auto. Valid values:
     * - Auto: The system automatically switches over services from the primary to secondary instances in the event of a fault.
     * - Manual: You must manually switch over services from the primary to secondary instances in the event of a fault.
     * 
     * &gt; **NOTE:** If you set this parameter to Manual, you must specify the ManualHATime parameter.
     * 
     */
    @Import(name="haConfig")
    private @Nullable Output<String> haConfig;

    /**
     * @return The primary/secondary switchover mode of the instance. Default value: Auto. Valid values:
     * - Auto: The system automatically switches over services from the primary to secondary instances in the event of a fault.
     * - Manual: You must manually switch over services from the primary to secondary instances in the event of a fault.
     * 
     * &gt; **NOTE:** If you set this parameter to Manual, you must specify the ManualHATime parameter.
     * 
     */
    public Optional<Output<String>> haConfig() {
        return Optional.ofNullable(this.haConfig);
    }

    /**
     * The name of DB instance. It a string of 2 to 256 characters.
     * 
     */
    @Import(name="instanceName")
    private @Nullable Output<String> instanceName;

    /**
     * @return The name of DB instance. It a string of 2 to 256 characters.
     * 
     */
    public Optional<Output<String>> instanceName() {
        return Optional.ofNullable(this.instanceName);
    }

    /**
     * The storage capacity of the destination instance. Valid values: 5 to 2000. Unit: GB.
     * 
     * This value must be a multiple of 5 GB. For more information, see Primary ApsaraDB RDS instance types.
     * 
     */
    @Import(name="instanceStorage", required=true)
    private Output<Integer> instanceStorage;

    /**
     * @return The storage capacity of the destination instance. Valid values: 5 to 2000. Unit: GB.
     * 
     * This value must be a multiple of 5 GB. For more information, see Primary ApsaraDB RDS instance types.
     * 
     */
    public Output<Integer> instanceStorage() {
        return this.instanceStorage;
    }

    /**
     * DB Instance type.
     * 
     * &gt; **NOTE:** When `storage_auto_scale=&#34;Enable&#34;`, do not perform `instance_storage` check. when `storage_auto_scale=&#34;Disable&#34;`, if the instance itself `instance_storage`has changed. You need to manually revise the `instance_storage` in the template value.
     * 
     */
    @Import(name="instanceType", required=true)
    private Output<String> instanceType;

    /**
     * @return DB Instance type.
     * 
     * &gt; **NOTE:** When `storage_auto_scale=&#34;Enable&#34;`, do not perform `instance_storage` check. when `storage_auto_scale=&#34;Disable&#34;`, if the instance itself `instance_storage`has changed. You need to manually revise the `instance_storage` in the template value.
     * 
     */
    public Output<String> instanceType() {
        return this.instanceType;
    }

    /**
     * Maintainable time period format of the instance: HH:MMZ-HH:MMZ (UTC time)
     * 
     */
    @Import(name="maintainTime")
    private @Nullable Output<String> maintainTime;

    /**
     * @return Maintainable time period format of the instance: HH:MMZ-HH:MMZ (UTC time)
     * 
     */
    public Optional<Output<String>> maintainTime() {
        return Optional.ofNullable(this.maintainTime);
    }

    /**
     * The time after when you want to enable automatic primary/secondary switchover. At most, you can set this parameter to 23:59:59 seven days later. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
     * 
     * &gt; **NOTE:** This parameter only takes effect when the HAConfig parameter is set to Manual.
     * 
     */
    @Import(name="manualHaTime")
    private @Nullable Output<String> manualHaTime;

    /**
     * @return The time after when you want to enable automatic primary/secondary switchover. At most, you can set this parameter to 23:59:59 seven days later. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
     * 
     * &gt; **NOTE:** This parameter only takes effect when the HAConfig parameter is set to Manual.
     * 
     */
    public Optional<Output<String>> manualHaTime() {
        return Optional.ofNullable(this.manualHaTime);
    }

    /**
     * The method that is used to modify the IP address whitelist. Default value: Cover. Valid values:
     * - Cover: Use the value of the SecurityIps parameter to overwrite the existing entries in the IP address whitelist.
     * - Append: Add the IP addresses and CIDR blocks that are specified in the SecurityIps parameter to the IP address whitelist.
     * - Delete: Delete IP addresses and CIDR blocks that are specified in the SecurityIps parameter from the IP address whitelist. You must retain at least one IP address or CIDR block.
     * 
     */
    @Import(name="modifyMode")
    private @Nullable Output<String> modifyMode;

    /**
     * @return The method that is used to modify the IP address whitelist. Default value: Cover. Valid values:
     * - Cover: Use the value of the SecurityIps parameter to overwrite the existing entries in the IP address whitelist.
     * - Append: Add the IP addresses and CIDR blocks that are specified in the SecurityIps parameter to the IP address whitelist.
     * - Delete: Delete IP addresses and CIDR blocks that are specified in the SecurityIps parameter from the IP address whitelist. You must retain at least one IP address or CIDR block.
     * 
     */
    public Optional<Output<String>> modifyMode() {
        return Optional.ofNullable(this.modifyMode);
    }

    /**
     * The monitoring frequency in seconds. Valid values are 5, 60, 300. Defaults to 300.
     * 
     */
    @Import(name="monitoringPeriod")
    private @Nullable Output<Integer> monitoringPeriod;

    /**
     * @return The monitoring frequency in seconds. Valid values are 5, 60, 300. Defaults to 300.
     * 
     */
    public Optional<Output<Integer>> monitoringPeriod() {
        return Optional.ofNullable(this.monitoringPeriod);
    }

    /**
     * Set of parameters needs to be set after DB instance was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/26284.htm) . See `parameters` below.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<List<DdrInstanceParameterArgs>> parameters;

    /**
     * @return Set of parameters needs to be set after DB instance was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/26284.htm) . See `parameters` below.
     * 
     */
    public Optional<Output<List<DdrInstanceParameterArgs>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * Valid values are `Subscription`, `PayAsYouGo`, Default to `PayAsYouGo`.
     * 
     */
    @Import(name="paymentType", required=true)
    private Output<String> paymentType;

    /**
     * @return Valid values are `Subscription`, `PayAsYouGo`, Default to `PayAsYouGo`.
     * 
     */
    public Output<String> paymentType() {
        return this.paymentType;
    }

    /**
     * The duration that you will buy DB instance (in month). It is valid when payment_type is `Subscription`. Valid values: [1~9], 12, 24, 36.
     * &gt; **NOTE:** The attribute `period` is only used to create Subscription instance or modify the PayAsYouGo instance to Subscription. Once effect, it will not be modified that means running `pulumi up` will not effect the resource.
     * 
     */
    @Import(name="period")
    private @Nullable Output<Integer> period;

    /**
     * @return The duration that you will buy DB instance (in month). It is valid when payment_type is `Subscription`. Valid values: [1~9], 12, 24, 36.
     * &gt; **NOTE:** The attribute `period` is only used to create Subscription instance or modify the PayAsYouGo instance to Subscription. Once effect, it will not be modified that means running `pulumi up` will not effect the resource.
     * 
     */
    public Optional<Output<Integer>> period() {
        return Optional.ofNullable(this.period);
    }

    /**
     * The configuration of [AD domain](https://www.alibabacloud.com/help/en/doc-detail/349288.htm) . See `pg_hba_conf` below.
     * 
     */
    @Import(name="pgHbaConfs")
    private @Nullable Output<List<DdrInstancePgHbaConfArgs>> pgHbaConfs;

    /**
     * @return The configuration of [AD domain](https://www.alibabacloud.com/help/en/doc-detail/349288.htm) . See `pg_hba_conf` below.
     * 
     */
    public Optional<Output<List<DdrInstancePgHbaConfArgs>>> pgHbaConfs() {
        return Optional.ofNullable(this.pgHbaConfs);
    }

    /**
     * The private port of the database service. If you want to update public port, please use resource alicloud.rds.Connection port.
     * 
     */
    @Import(name="port")
    private @Nullable Output<String> port;

    /**
     * @return The private port of the database service. If you want to update public port, please use resource alicloud.rds.Connection port.
     * 
     */
    public Optional<Output<String>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * The private IP address of the instance. The private IP address must be within the Classless Inter-Domain Routing (CIDR) block of the vSwitch that is specified by the VSwitchId parameter.
     * 
     */
    @Import(name="privateIpAddress")
    private @Nullable Output<String> privateIpAddress;

    /**
     * @return The private IP address of the instance. The private IP address must be within the Classless Inter-Domain Routing (CIDR) block of the vSwitch that is specified by the VSwitchId parameter.
     * 
     */
    public Optional<Output<String>> privateIpAddress() {
        return Optional.ofNullable(this.privateIpAddress);
    }

    /**
     * The policy based on which ApsaraDB RDS retains archived backup files after the instance is released. Valid values:
     * - None: No archived backup files are retained.
     * - Lastest: Only the last archived backup file is retained.
     * - All: All the archived backup files are retained.
     * 
     * &gt; **NOTE:** This parameter is supported only when the instance runs the MySQL database engine.
     * 
     */
    @Import(name="releasedKeepPolicy")
    private @Nullable Output<String> releasedKeepPolicy;

    /**
     * @return The policy based on which ApsaraDB RDS retains archived backup files after the instance is released. Valid values:
     * - None: No archived backup files are retained.
     * - Lastest: Only the last archived backup file is retained.
     * - All: All the archived backup files are retained.
     * 
     * &gt; **NOTE:** This parameter is supported only when the instance runs the MySQL database engine.
     * 
     */
    public Optional<Output<String>> releasedKeepPolicy() {
        return Optional.ofNullable(this.releasedKeepPolicy);
    }

    /**
     * The method that is used to verify the replication permission. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. In addition, this parameter is available only when the public key of the CA that issues client certificates is enabled. Valid values:
     * - cert
     * - perfer
     * - verify-ca
     * - verify-full (supported only when the instance runs PostgreSQL 12 or later)
     * 
     */
    @Import(name="replicationAcl")
    private @Nullable Output<String> replicationAcl;

    /**
     * @return The method that is used to verify the replication permission. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. In addition, this parameter is available only when the public key of the CA that issues client certificates is enabled. Valid values:
     * - cert
     * - perfer
     * - verify-ca
     * - verify-full (supported only when the instance runs PostgreSQL 12 or later)
     * 
     */
    public Optional<Output<String>> replicationAcl() {
        return Optional.ofNullable(this.replicationAcl);
    }

    /**
     * The ID of resource group which the DB instance belongs.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of resource group which the DB instance belongs.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The point in time to which you want to restore data. The point in time that you specify must be earlier than the current time. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
     * 
     */
    @Import(name="restoreTime")
    private @Nullable Output<String> restoreTime;

    /**
     * @return The point in time to which you want to restore data. The point in time that you specify must be earlier than the current time. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
     * 
     */
    public Optional<Output<String>> restoreTime() {
        return Optional.ofNullable(this.restoreTime);
    }

    /**
     * The method that is used to restore data. Valid values:
     * - BackupSet: Data is restored from a backup set. If you use this value, you must also specify the BackupSetID parameter.
     * - BackupTime: restores data to a point in time. You must also specify the RestoreTime, SourceRegion, and SourceDBInstanceName parameters.
     * 
     */
    @Import(name="restoreType", required=true)
    private Output<String> restoreType;

    /**
     * @return The method that is used to restore data. Valid values:
     * - BackupSet: Data is restored from a backup set. If you use this value, you must also specify the BackupSetID parameter.
     * - BackupTime: restores data to a point in time. You must also specify the RestoreTime, SourceRegion, and SourceDBInstanceName parameters.
     * 
     */
    public Output<String> restoreType() {
        return this.restoreType;
    }

    /**
     * ) The list IDs to join ECS Security Group. At most supports three security groups.
     * 
     */
    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    /**
     * @return ) The list IDs to join ECS Security Group. At most supports three security groups.
     * 
     */
    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    /**
     * Valid values are `normal`, `safety`, Default to `normal`. support `safety` switch to high security access mode.
     * 
     */
    @Import(name="securityIpMode")
    private @Nullable Output<String> securityIpMode;

    /**
     * @return Valid values are `normal`, `safety`, Default to `normal`. support `safety` switch to high security access mode.
     * 
     */
    public Optional<Output<String>> securityIpMode() {
        return Optional.ofNullable(this.securityIpMode);
    }

    /**
     * The type of IP address in the IP address whitelist.
     * 
     */
    @Import(name="securityIpType")
    private @Nullable Output<String> securityIpType;

    /**
     * @return The type of IP address in the IP address whitelist.
     * 
     */
    public Optional<Output<String>> securityIpType() {
        return Optional.ofNullable(this.securityIpType);
    }

    /**
     * List of IP addresses allowed to access all databases of an instance. The list contains up to 1,000 IP addresses, separated by commas. Supported formats include 0.0.0.0/0, 10.23.12.24 (IP), and 10.23.12.24/24 (Classless Inter-Domain Routing (CIDR) mode. /24 represents the length of the prefix in an IP address. The range of the prefix length is [1,32]).
     * 
     */
    @Import(name="securityIps")
    private @Nullable Output<List<String>> securityIps;

    /**
     * @return List of IP addresses allowed to access all databases of an instance. The list contains up to 1,000 IP addresses, separated by commas. Supported formats include 0.0.0.0/0, 10.23.12.24 (IP), and 10.23.12.24/24 (Classless Inter-Domain Routing (CIDR) mode. /24 represents the length of the prefix in an IP address. The range of the prefix length is [1,32]).
     * 
     */
    public Optional<Output<List<String>>> securityIps() {
        return Optional.ofNullable(this.securityIps);
    }

    /**
     * The content of the server certificate. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the CAType parameter to custom, you must also specify this parameter.
     * 
     */
    @Import(name="serverCert")
    private @Nullable Output<String> serverCert;

    /**
     * @return The content of the server certificate. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the CAType parameter to custom, you must also specify this parameter.
     * 
     */
    public Optional<Output<String>> serverCert() {
        return Optional.ofNullable(this.serverCert);
    }

    /**
     * The private key of the server certificate. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the CAType parameter to custom, you must also specify this parameter.
     * 
     */
    @Import(name="serverKey")
    private @Nullable Output<String> serverKey;

    /**
     * @return The private key of the server certificate. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the CAType parameter to custom, you must also specify this parameter.
     * 
     */
    public Optional<Output<String>> serverKey() {
        return Optional.ofNullable(this.serverKey);
    }

    /**
     * The ID of the source instance if you want to restore data to a point in time.
     * 
     */
    @Import(name="sourceDbInstanceName")
    private @Nullable Output<String> sourceDbInstanceName;

    /**
     * @return The ID of the source instance if you want to restore data to a point in time.
     * 
     */
    public Optional<Output<String>> sourceDbInstanceName() {
        return Optional.ofNullable(this.sourceDbInstanceName);
    }

    /**
     * The region ID of the source instance if you want to restore data to a point in time.
     * 
     */
    @Import(name="sourceRegion")
    private @Nullable Output<String> sourceRegion;

    /**
     * @return The region ID of the source instance if you want to restore data to a point in time.
     * 
     */
    public Optional<Output<String>> sourceRegion() {
        return Optional.ofNullable(this.sourceRegion);
    }

    /**
     * The sql collector keep time of the instance. Valid values are `30`, `180`, `365`, `1095`, `1825`, Default to `30`.
     * 
     */
    @Import(name="sqlCollectorConfigValue")
    private @Nullable Output<Integer> sqlCollectorConfigValue;

    /**
     * @return The sql collector keep time of the instance. Valid values are `30`, `180`, `365`, `1095`, `1825`, Default to `30`.
     * 
     */
    public Optional<Output<Integer>> sqlCollectorConfigValue() {
        return Optional.ofNullable(this.sqlCollectorConfigValue);
    }

    /**
     * The sql collector status of the instance. Valid values are `Enabled`, `Disabled`, Default to `Disabled`.
     * 
     */
    @Import(name="sqlCollectorStatus")
    private @Nullable Output<String> sqlCollectorStatus;

    /**
     * @return The sql collector status of the instance. Valid values are `Enabled`, `Disabled`, Default to `Disabled`.
     * 
     */
    public Optional<Output<String>> sqlCollectorStatus() {
        return Optional.ofNullable(this.sqlCollectorStatus);
    }

    /**
     * Actions performed on SSL functions, Valid values: `Open`: turn on SSL encryption; `Close`: turn off SSL encryption; `Update`: update SSL certificate. See more [engine and engineVersion limitation](https://www.alibabacloud.com/help/zh/doc-detail/26254.htm).
     * 
     */
    @Import(name="sslAction")
    private @Nullable Output<String> sslAction;

    /**
     * @return Actions performed on SSL functions, Valid values: `Open`: turn on SSL encryption; `Close`: turn off SSL encryption; `Update`: update SSL certificate. See more [engine and engineVersion limitation](https://www.alibabacloud.com/help/zh/doc-detail/26254.htm).
     * 
     */
    public Optional<Output<String>> sslAction() {
        return Optional.ofNullable(this.sslAction);
    }

    /**
     * Automatic storage space expansion switch. Valid values:
     * - Enable
     * - Disable
     * 
     * &gt; **NOTE:** This parameter only takes effect when the StorageAutoScale parameter is set to Enable.
     * 
     */
    @Import(name="storageAutoScale")
    private @Nullable Output<String> storageAutoScale;

    /**
     * @return Automatic storage space expansion switch. Valid values:
     * - Enable
     * - Disable
     * 
     * &gt; **NOTE:** This parameter only takes effect when the StorageAutoScale parameter is set to Enable.
     * 
     */
    public Optional<Output<String>> storageAutoScale() {
        return Optional.ofNullable(this.storageAutoScale);
    }

    /**
     * The trigger threshold (percentage) for automatic storage space expansion. Valid values:
     * - 10
     * - 20
     * - 30
     * - 40
     * - 50
     * 
     * &gt; **NOTE:** This parameter only takes effect when the StorageAutoScale parameter is set to Enable. The value must be greater than or equal to the total size of the current storage space of the instance.
     * 
     */
    @Import(name="storageThreshold")
    private @Nullable Output<Integer> storageThreshold;

    /**
     * @return The trigger threshold (percentage) for automatic storage space expansion. Valid values:
     * - 10
     * - 20
     * - 30
     * - 40
     * - 50
     * 
     * &gt; **NOTE:** This parameter only takes effect when the StorageAutoScale parameter is set to Enable. The value must be greater than or equal to the total size of the current storage space of the instance.
     * 
     */
    public Optional<Output<Integer>> storageThreshold() {
        return Optional.ofNullable(this.storageThreshold);
    }

    /**
     * The upper limit of the total storage space for automatic expansion of the storage space, that is, automatic expansion will not cause the total storage space of the instance to exceed this value. Unit: GB. The value must be ≥0.
     * 
     * &gt; **NOTE:** Because of data backup and migration, change DB instance type and storage would cost 15~20 minutes. Please make full preparation before changing them.
     * 
     */
    @Import(name="storageUpperBound")
    private @Nullable Output<Integer> storageUpperBound;

    /**
     * @return The upper limit of the total storage space for automatic expansion of the storage space, that is, automatic expansion will not cause the total storage space of the instance to exceed this value. Unit: GB. The value must be ≥0.
     * 
     * &gt; **NOTE:** Because of data backup and migration, change DB instance type and storage would cost 15~20 minutes. Please make full preparation before changing them.
     * 
     */
    public Optional<Output<Integer>> storageUpperBound() {
        return Optional.ofNullable(this.storageUpperBound);
    }

    /**
     * The specific point in time when you want to perform the update. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. It is valid only when `upgrade_db_instance_kernel_version = true`. The time must be in UTC.
     * 
     * &gt; **NOTE:** This parameter takes effect only when you set the UpgradeTime parameter to SpecifyTime.
     * 
     */
    @Import(name="switchTime")
    private @Nullable Output<String> switchTime;

    /**
     * @return The specific point in time when you want to perform the update. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. It is valid only when `upgrade_db_instance_kernel_version = true`. The time must be in UTC.
     * 
     * &gt; **NOTE:** This parameter takes effect only when you set the UpgradeTime parameter to SpecifyTime.
     * 
     */
    public Optional<Output<String>> switchTime() {
        return Optional.ofNullable(this.switchTime);
    }

    /**
     * A mapping of tags to assign to the resource.
     * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
     * 
     */
    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The minor engine version to which you want to update the instance. If you do not specify this parameter, the instance is updated to the latest minor engine version. It is valid only when `upgrade_db_instance_kernel_version = true`. You must specify the minor engine version in one of the following formats:
     * - PostgreSQL: rds_postgres_&lt;Major engine version&gt;00_&lt;Minor engine version&gt;. Example: rds_postgres_1200_20200830.
     * - MySQL: &lt;RDS edition&gt;_&lt;Minor engine version&gt;. Examples: rds_20200229, xcluster_20200229, and xcluster80_20200229. The following RDS editions are supported:
     * - rds: The instance runs RDS Basic or High-availability Edition.
     * - xcluster: The instance runs MySQL 5.7 on RDS Enterprise Edition.
     * - xcluster80: The instance runs MySQL 8.0 on RDS Enterprise Edition.
     * - SQLServer: &lt;Minor engine version&gt;. Example: 15.0.4073.23.
     * 
     * &gt; **NOTE:** For more information about minor engine versions, see Release notes of minor AliPG versions, Release notes of minor AliSQL versions, and Release notes of minor engine versions of ApsaraDB RDS for SQL Server.
     * 
     */
    @Import(name="targetMinorVersion")
    private @Nullable Output<String> targetMinorVersion;

    /**
     * @return The minor engine version to which you want to update the instance. If you do not specify this parameter, the instance is updated to the latest minor engine version. It is valid only when `upgrade_db_instance_kernel_version = true`. You must specify the minor engine version in one of the following formats:
     * - PostgreSQL: rds_postgres_&lt;Major engine version&gt;00_&lt;Minor engine version&gt;. Example: rds_postgres_1200_20200830.
     * - MySQL: &lt;RDS edition&gt;_&lt;Minor engine version&gt;. Examples: rds_20200229, xcluster_20200229, and xcluster80_20200229. The following RDS editions are supported:
     * - rds: The instance runs RDS Basic or High-availability Edition.
     * - xcluster: The instance runs MySQL 5.7 on RDS Enterprise Edition.
     * - xcluster80: The instance runs MySQL 8.0 on RDS Enterprise Edition.
     * - SQLServer: &lt;Minor engine version&gt;. Example: 15.0.4073.23.
     * 
     * &gt; **NOTE:** For more information about minor engine versions, see Release notes of minor AliPG versions, Release notes of minor AliSQL versions, and Release notes of minor engine versions of ApsaraDB RDS for SQL Server.
     * 
     */
    public Optional<Output<String>> targetMinorVersion() {
        return Optional.ofNullable(this.targetMinorVersion);
    }

    /**
     * The availability check method of the instance. Valid values:
     * - **SHORT**: Alibaba Cloud uses short-lived connections to check the availability of the instance.
     * - **LONG**: Alibaba Cloud uses persistent connections to check the availability of the instance.
     * 
     */
    @Import(name="tcpConnectionType")
    private @Nullable Output<String> tcpConnectionType;

    /**
     * @return The availability check method of the instance. Valid values:
     * - **SHORT**: Alibaba Cloud uses short-lived connections to check the availability of the instance.
     * - **LONG**: Alibaba Cloud uses persistent connections to check the availability of the instance.
     * 
     */
    public Optional<Output<String>> tcpConnectionType() {
        return Optional.ofNullable(this.tcpConnectionType);
    }

    /**
     * The TDE(Transparent Data Encryption) status. See more [engine and engineVersion limitation](https://www.alibabacloud.com/help/zh/doc-detail/26256.htm).
     * 
     */
    @Import(name="tdeStatus")
    private @Nullable Output<String> tdeStatus;

    /**
     * @return The TDE(Transparent Data Encryption) status. See more [engine and engineVersion limitation](https://www.alibabacloud.com/help/zh/doc-detail/26256.htm).
     * 
     */
    public Optional<Output<String>> tdeStatus() {
        return Optional.ofNullable(this.tdeStatus);
    }

    /**
     * Whether to upgrade a minor version of the kernel. Valid values:
     * - true: upgrade
     * - false: not to upgrade
     * 
     */
    @Import(name="upgradeDbInstanceKernelVersion")
    private @Nullable Output<Boolean> upgradeDbInstanceKernelVersion;

    /**
     * @return Whether to upgrade a minor version of the kernel. Valid values:
     * - true: upgrade
     * - false: not to upgrade
     * 
     */
    public Optional<Output<Boolean>> upgradeDbInstanceKernelVersion() {
        return Optional.ofNullable(this.upgradeDbInstanceKernelVersion);
    }

    /**
     * The method to update the minor engine version. Default value: Immediate. It is valid only when `upgrade_db_instance_kernel_version = true`. Valid values:
     * - Immediate: The minor engine version is immediately updated.
     * - MaintainTime: The minor engine version is updated during the maintenance window. For more information about how to change the maintenance window, see ModifyDBInstanceMaintainTime.
     * - SpecifyTime: The minor engine version is updated at the point in time you specify.
     * 
     */
    @Import(name="upgradeTime")
    private @Nullable Output<String> upgradeTime;

    /**
     * @return The method to update the minor engine version. Default value: Immediate. It is valid only when `upgrade_db_instance_kernel_version = true`. Valid values:
     * - Immediate: The minor engine version is immediately updated.
     * - MaintainTime: The minor engine version is updated during the maintenance window. For more information about how to change the maintenance window, see ModifyDBInstanceMaintainTime.
     * - SpecifyTime: The minor engine version is updated at the point in time you specify.
     * 
     */
    public Optional<Output<String>> upgradeTime() {
        return Optional.ofNullable(this.upgradeTime);
    }

    /**
     * The VPC ID of the instance.
     * 
     * &gt; **NOTE:** This parameter applies only to ApsaraDB RDS for MySQL instances. For more information about Upgrade the major engine version of an ApsaraDB RDS for MySQL instance, see [Upgrade the major engine version of an RDS instance in the ApsaraDB RDS console](https://www.alibabacloud.com/help/en/apsaradb-for-rds/latest/upgrade-the-major-engine-version-of-an-apsaradb-rds-for-mysql-instance-1).
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The VPC ID of the instance.
     * 
     * &gt; **NOTE:** This parameter applies only to ApsaraDB RDS for MySQL instances. For more information about Upgrade the major engine version of an ApsaraDB RDS for MySQL instance, see [Upgrade the major engine version of an RDS instance in the ApsaraDB RDS console](https://www.alibabacloud.com/help/en/apsaradb-for-rds/latest/upgrade-the-major-engine-version-of-an-apsaradb-rds-for-mysql-instance-1).
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    /**
     * The virtual switch ID to launch DB instances in one VPC. If there are multiple vswitches, separate them with commas.
     * 
     */
    @Import(name="vswitchId")
    private @Nullable Output<String> vswitchId;

    /**
     * @return The virtual switch ID to launch DB instances in one VPC. If there are multiple vswitches, separate them with commas.
     * 
     */
    public Optional<Output<String>> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    /**
     * The network type of the IP address whitelist. Default value: MIX. Valid values:
     * - Classic: classic network in enhanced whitelist mode
     * - VPC: virtual private cloud (VPC) in enhanced whitelist mode
     * - MIX: standard whitelist mode
     * 
     * &gt; **NOTE:** In standard whitelist mode, IP addresses and CIDR blocks can be added only to the default IP address whitelist. In enhanced whitelist mode, IP addresses and CIDR blocks can be added to both IP address whitelists of the classic network type and those of the VPC network type.
     * 
     */
    @Import(name="whitelistNetworkType")
    private @Nullable Output<String> whitelistNetworkType;

    /**
     * @return The network type of the IP address whitelist. Default value: MIX. Valid values:
     * - Classic: classic network in enhanced whitelist mode
     * - VPC: virtual private cloud (VPC) in enhanced whitelist mode
     * - MIX: standard whitelist mode
     * 
     * &gt; **NOTE:** In standard whitelist mode, IP addresses and CIDR blocks can be added only to the default IP address whitelist. In enhanced whitelist mode, IP addresses and CIDR blocks can be added to both IP address whitelists of the classic network type and those of the VPC network type.
     * 
     */
    public Optional<Output<String>> whitelistNetworkType() {
        return Optional.ofNullable(this.whitelistNetworkType);
    }

    /**
     * The Zone to launch the DB instance. It supports multiple zone.
     * If it is a multi-zone and `vswitch_id` is specified, the vswitch must in the one of them.
     * The multiple zone ID can be retrieved by setting `multi` to &#34;true&#34; in the data source `alicloud.getZones`.
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return The Zone to launch the DB instance. It supports multiple zone.
     * If it is a multi-zone and `vswitch_id` is specified, the vswitch must in the one of them.
     * The multiple zone ID can be retrieved by setting `multi` to &#34;true&#34; in the data source `alicloud.getZones`.
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private DdrInstanceArgs() {}

    private DdrInstanceArgs(DdrInstanceArgs $) {
        this.acl = $.acl;
        this.autoRenew = $.autoRenew;
        this.autoRenewPeriod = $.autoRenewPeriod;
        this.autoUpgradeMinorVersion = $.autoUpgradeMinorVersion;
        this.backupSetId = $.backupSetId;
        this.caType = $.caType;
        this.clientCaCert = $.clientCaCert;
        this.clientCaEnabled = $.clientCaEnabled;
        this.clientCertRevocationList = $.clientCertRevocationList;
        this.clientCrlEnabled = $.clientCrlEnabled;
        this.connectionStringPrefix = $.connectionStringPrefix;
        this.dbInstanceIpArrayAttribute = $.dbInstanceIpArrayAttribute;
        this.dbInstanceIpArrayName = $.dbInstanceIpArrayName;
        this.dbInstanceStorageType = $.dbInstanceStorageType;
        this.deletionProtection = $.deletionProtection;
        this.effectiveTime = $.effectiveTime;
        this.encryptionKey = $.encryptionKey;
        this.engine = $.engine;
        this.engineVersion = $.engineVersion;
        this.forceRestart = $.forceRestart;
        this.freshWhiteListReadins = $.freshWhiteListReadins;
        this.haConfig = $.haConfig;
        this.instanceName = $.instanceName;
        this.instanceStorage = $.instanceStorage;
        this.instanceType = $.instanceType;
        this.maintainTime = $.maintainTime;
        this.manualHaTime = $.manualHaTime;
        this.modifyMode = $.modifyMode;
        this.monitoringPeriod = $.monitoringPeriod;
        this.parameters = $.parameters;
        this.paymentType = $.paymentType;
        this.period = $.period;
        this.pgHbaConfs = $.pgHbaConfs;
        this.port = $.port;
        this.privateIpAddress = $.privateIpAddress;
        this.releasedKeepPolicy = $.releasedKeepPolicy;
        this.replicationAcl = $.replicationAcl;
        this.resourceGroupId = $.resourceGroupId;
        this.restoreTime = $.restoreTime;
        this.restoreType = $.restoreType;
        this.securityGroupIds = $.securityGroupIds;
        this.securityIpMode = $.securityIpMode;
        this.securityIpType = $.securityIpType;
        this.securityIps = $.securityIps;
        this.serverCert = $.serverCert;
        this.serverKey = $.serverKey;
        this.sourceDbInstanceName = $.sourceDbInstanceName;
        this.sourceRegion = $.sourceRegion;
        this.sqlCollectorConfigValue = $.sqlCollectorConfigValue;
        this.sqlCollectorStatus = $.sqlCollectorStatus;
        this.sslAction = $.sslAction;
        this.storageAutoScale = $.storageAutoScale;
        this.storageThreshold = $.storageThreshold;
        this.storageUpperBound = $.storageUpperBound;
        this.switchTime = $.switchTime;
        this.tags = $.tags;
        this.targetMinorVersion = $.targetMinorVersion;
        this.tcpConnectionType = $.tcpConnectionType;
        this.tdeStatus = $.tdeStatus;
        this.upgradeDbInstanceKernelVersion = $.upgradeDbInstanceKernelVersion;
        this.upgradeTime = $.upgradeTime;
        this.vpcId = $.vpcId;
        this.vswitchId = $.vswitchId;
        this.whitelistNetworkType = $.whitelistNetworkType;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DdrInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DdrInstanceArgs $;

        public Builder() {
            $ = new DdrInstanceArgs();
        }

        public Builder(DdrInstanceArgs defaults) {
            $ = new DdrInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param acl The method that is used to verify the identities of clients. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. In addition, this parameter is available only when the public key of the CA that issues client certificates is enabled. Valid values:
         * - cert
         * - perfer
         * - verify-ca
         * - verify-full (supported only when the instance runs PostgreSQL 12 or later)
         * 
         * @return builder
         * 
         */
        public Builder acl(@Nullable Output<String> acl) {
            $.acl = acl;
            return this;
        }

        /**
         * @param acl The method that is used to verify the identities of clients. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. In addition, this parameter is available only when the public key of the CA that issues client certificates is enabled. Valid values:
         * - cert
         * - perfer
         * - verify-ca
         * - verify-full (supported only when the instance runs PostgreSQL 12 or later)
         * 
         * @return builder
         * 
         */
        public Builder acl(String acl) {
            return acl(Output.of(acl));
        }

        /**
         * @param autoRenew Whether to renewal a DB instance automatically or not. It is valid when payment_type is `Subscription`. Default to `false`.
         * 
         * @return builder
         * 
         */
        public Builder autoRenew(@Nullable Output<Boolean> autoRenew) {
            $.autoRenew = autoRenew;
            return this;
        }

        /**
         * @param autoRenew Whether to renewal a DB instance automatically or not. It is valid when payment_type is `Subscription`. Default to `false`.
         * 
         * @return builder
         * 
         */
        public Builder autoRenew(Boolean autoRenew) {
            return autoRenew(Output.of(autoRenew));
        }

        /**
         * @param autoRenewPeriod Auto-renewal period of an instance, in the unit of the month. It is valid when payment_type is `Subscription`. Valid value:[1~12], Default to 1.
         * 
         * @return builder
         * 
         */
        public Builder autoRenewPeriod(@Nullable Output<Integer> autoRenewPeriod) {
            $.autoRenewPeriod = autoRenewPeriod;
            return this;
        }

        /**
         * @param autoRenewPeriod Auto-renewal period of an instance, in the unit of the month. It is valid when payment_type is `Subscription`. Valid value:[1~12], Default to 1.
         * 
         * @return builder
         * 
         */
        public Builder autoRenewPeriod(Integer autoRenewPeriod) {
            return autoRenewPeriod(Output.of(autoRenewPeriod));
        }

        /**
         * @param autoUpgradeMinorVersion The upgrade method to use. Valid values:
         * - Auto: Instances are automatically upgraded to a higher minor version.
         * - Manual: Instances are forcibly upgraded to a higher minor version when the current version is unpublished.
         * 
         * See more [details and limitation](https://www.alibabacloud.com/help/doc-detail/123605.htm).
         * 
         * @return builder
         * 
         */
        public Builder autoUpgradeMinorVersion(@Nullable Output<String> autoUpgradeMinorVersion) {
            $.autoUpgradeMinorVersion = autoUpgradeMinorVersion;
            return this;
        }

        /**
         * @param autoUpgradeMinorVersion The upgrade method to use. Valid values:
         * - Auto: Instances are automatically upgraded to a higher minor version.
         * - Manual: Instances are forcibly upgraded to a higher minor version when the current version is unpublished.
         * 
         * See more [details and limitation](https://www.alibabacloud.com/help/doc-detail/123605.htm).
         * 
         * @return builder
         * 
         */
        public Builder autoUpgradeMinorVersion(String autoUpgradeMinorVersion) {
            return autoUpgradeMinorVersion(Output.of(autoUpgradeMinorVersion));
        }

        /**
         * @param backupSetId The ID of the backup set that is used for the restoration. You can call the DescribeCrossRegionBackups operation to query the ID of the backup set.
         * 
         * @return builder
         * 
         */
        public Builder backupSetId(@Nullable Output<String> backupSetId) {
            $.backupSetId = backupSetId;
            return this;
        }

        /**
         * @param backupSetId The ID of the backup set that is used for the restoration. You can call the DescribeCrossRegionBackups operation to query the ID of the backup set.
         * 
         * @return builder
         * 
         */
        public Builder backupSetId(String backupSetId) {
            return backupSetId(Output.of(backupSetId));
        }

        /**
         * @param caType The type of the server certificate. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the SSLEnabled parameter to 1, the default value of this parameter is aliyun. Value range:
         * - aliyun: a cloud certificate
         * - custom: a custom certificate
         * 
         * @return builder
         * 
         */
        public Builder caType(@Nullable Output<String> caType) {
            $.caType = caType;
            return this;
        }

        /**
         * @param caType The type of the server certificate. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the SSLEnabled parameter to 1, the default value of this parameter is aliyun. Value range:
         * - aliyun: a cloud certificate
         * - custom: a custom certificate
         * 
         * @return builder
         * 
         */
        public Builder caType(String caType) {
            return caType(Output.of(caType));
        }

        /**
         * @param clientCaCert The public key of the CA that issues client certificates. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the ClientCAEbabled parameter to 1, you must also specify this parameter.
         * 
         * @return builder
         * 
         */
        public Builder clientCaCert(@Nullable Output<String> clientCaCert) {
            $.clientCaCert = clientCaCert;
            return this;
        }

        /**
         * @param clientCaCert The public key of the CA that issues client certificates. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the ClientCAEbabled parameter to 1, you must also specify this parameter.
         * 
         * @return builder
         * 
         */
        public Builder clientCaCert(String clientCaCert) {
            return clientCaCert(Output.of(clientCaCert));
        }

        /**
         * @param clientCaEnabled Specifies whether to enable the public key of the CA that issues client certificates. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. Valid values:
         * - 1: enables the public key
         * - 0: disables the public key
         * 
         * @return builder
         * 
         */
        public Builder clientCaEnabled(@Nullable Output<Integer> clientCaEnabled) {
            $.clientCaEnabled = clientCaEnabled;
            return this;
        }

        /**
         * @param clientCaEnabled Specifies whether to enable the public key of the CA that issues client certificates. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. Valid values:
         * - 1: enables the public key
         * - 0: disables the public key
         * 
         * @return builder
         * 
         */
        public Builder clientCaEnabled(Integer clientCaEnabled) {
            return clientCaEnabled(Output.of(clientCaEnabled));
        }

        /**
         * @param clientCertRevocationList The CRL that contains revoked client certificates. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the ClientCrlEnabled parameter to 1, you must also specify this parameter.
         * 
         * @return builder
         * 
         */
        public Builder clientCertRevocationList(@Nullable Output<String> clientCertRevocationList) {
            $.clientCertRevocationList = clientCertRevocationList;
            return this;
        }

        /**
         * @param clientCertRevocationList The CRL that contains revoked client certificates. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the ClientCrlEnabled parameter to 1, you must also specify this parameter.
         * 
         * @return builder
         * 
         */
        public Builder clientCertRevocationList(String clientCertRevocationList) {
            return clientCertRevocationList(Output.of(clientCertRevocationList));
        }

        /**
         * @param clientCrlEnabled Specifies whether to enable a certificate revocation list (CRL) that contains revoked client certificates. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. In addition, this parameter is available only when the public key of the CA that issues client certificates is enabled. Valid values:
         * - 1: enables the CRL
         * - 0: disables the CRL
         * 
         * @return builder
         * 
         */
        public Builder clientCrlEnabled(@Nullable Output<Integer> clientCrlEnabled) {
            $.clientCrlEnabled = clientCrlEnabled;
            return this;
        }

        /**
         * @param clientCrlEnabled Specifies whether to enable a certificate revocation list (CRL) that contains revoked client certificates. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. In addition, this parameter is available only when the public key of the CA that issues client certificates is enabled. Valid values:
         * - 1: enables the CRL
         * - 0: disables the CRL
         * 
         * @return builder
         * 
         */
        public Builder clientCrlEnabled(Integer clientCrlEnabled) {
            return clientCrlEnabled(Output.of(clientCrlEnabled));
        }

        /**
         * @param connectionStringPrefix The private connection string prefix. If you want to update public connection string prefix, please use resource alicloud.rds.Connection connection_prefix.
         * &gt; **NOTE:** The prefix must be 8 to 64 characters in length and can contain letters, digits, and hyphens (-). It cannot contain Chinese characters and special characters ~!#%^&amp;*=+\|{};:&#39;&#34;,&lt;&gt;/?
         * 
         * @return builder
         * 
         */
        public Builder connectionStringPrefix(@Nullable Output<String> connectionStringPrefix) {
            $.connectionStringPrefix = connectionStringPrefix;
            return this;
        }

        /**
         * @param connectionStringPrefix The private connection string prefix. If you want to update public connection string prefix, please use resource alicloud.rds.Connection connection_prefix.
         * &gt; **NOTE:** The prefix must be 8 to 64 characters in length and can contain letters, digits, and hyphens (-). It cannot contain Chinese characters and special characters ~!#%^&amp;*=+\|{};:&#39;&#34;,&lt;&gt;/?
         * 
         * @return builder
         * 
         */
        public Builder connectionStringPrefix(String connectionStringPrefix) {
            return connectionStringPrefix(Output.of(connectionStringPrefix));
        }

        /**
         * @param dbInstanceIpArrayAttribute The attribute of the IP address whitelist. By default, this parameter is empty.
         * 
         * &gt; **NOTE:** The IP address whitelists that have the hidden attribute are not displayed in the ApsaraDB RDS console. These IP address whitelists are used to access Alibaba Cloud services, such as Data Transmission Service (DTS).
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceIpArrayAttribute(@Nullable Output<String> dbInstanceIpArrayAttribute) {
            $.dbInstanceIpArrayAttribute = dbInstanceIpArrayAttribute;
            return this;
        }

        /**
         * @param dbInstanceIpArrayAttribute The attribute of the IP address whitelist. By default, this parameter is empty.
         * 
         * &gt; **NOTE:** The IP address whitelists that have the hidden attribute are not displayed in the ApsaraDB RDS console. These IP address whitelists are used to access Alibaba Cloud services, such as Data Transmission Service (DTS).
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceIpArrayAttribute(String dbInstanceIpArrayAttribute) {
            return dbInstanceIpArrayAttribute(Output.of(dbInstanceIpArrayAttribute));
        }

        /**
         * @param dbInstanceIpArrayName The name of the IP address whitelist. Default value: Default.
         * 
         * &gt; **NOTE:** A maximum of 200 IP address whitelists can be configured for each instance.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceIpArrayName(@Nullable Output<String> dbInstanceIpArrayName) {
            $.dbInstanceIpArrayName = dbInstanceIpArrayName;
            return this;
        }

        /**
         * @param dbInstanceIpArrayName The name of the IP address whitelist. Default value: Default.
         * 
         * &gt; **NOTE:** A maximum of 200 IP address whitelists can be configured for each instance.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceIpArrayName(String dbInstanceIpArrayName) {
            return dbInstanceIpArrayName(Output.of(dbInstanceIpArrayName));
        }

        /**
         * @param dbInstanceStorageType The storage type of the instance. Valid values:
         * - local_ssd: specifies to use local SSDs. This value is recommended.
         * - cloud_ssd: specifies to use standard SSDs.
         * - cloud_essd: specifies to use enhanced SSDs (ESSDs).
         * - cloud_essd2: specifies to use enhanced SSDs (ESSDs).
         * - cloud_essd3: specifies to use enhanced SSDs (ESSDs).
         * 
         * &gt; **NOTE:** You can specify the time zone when you create a primary instance. You cannot specify the time zone when you create a read-only instance. Read-only instances inherit the time zone of their primary instance. If you do not specify this parameter, the system assigns the default time zone of the region where the instance resides.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceStorageType(@Nullable Output<String> dbInstanceStorageType) {
            $.dbInstanceStorageType = dbInstanceStorageType;
            return this;
        }

        /**
         * @param dbInstanceStorageType The storage type of the instance. Valid values:
         * - local_ssd: specifies to use local SSDs. This value is recommended.
         * - cloud_ssd: specifies to use standard SSDs.
         * - cloud_essd: specifies to use enhanced SSDs (ESSDs).
         * - cloud_essd2: specifies to use enhanced SSDs (ESSDs).
         * - cloud_essd3: specifies to use enhanced SSDs (ESSDs).
         * 
         * &gt; **NOTE:** You can specify the time zone when you create a primary instance. You cannot specify the time zone when you create a read-only instance. Read-only instances inherit the time zone of their primary instance. If you do not specify this parameter, the system assigns the default time zone of the region where the instance resides.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceStorageType(String dbInstanceStorageType) {
            return dbInstanceStorageType(Output.of(dbInstanceStorageType));
        }

        /**
         * @param deletionProtection The switch of delete protection. Valid values:
         * - true: delete protect.
         * - false: no delete protect.
         * 
         * &gt; **NOTE:** `deletion_protection` is valid only when attribute `payment_type` is set to `PayAsYouGo`, supported engine type: **MySQL**, **PostgreSQL**, **MariaDB**, **MSSQL**.
         * 
         * @return builder
         * 
         */
        public Builder deletionProtection(@Nullable Output<Boolean> deletionProtection) {
            $.deletionProtection = deletionProtection;
            return this;
        }

        /**
         * @param deletionProtection The switch of delete protection. Valid values:
         * - true: delete protect.
         * - false: no delete protect.
         * 
         * &gt; **NOTE:** `deletion_protection` is valid only when attribute `payment_type` is set to `PayAsYouGo`, supported engine type: **MySQL**, **PostgreSQL**, **MariaDB**, **MSSQL**.
         * 
         * @return builder
         * 
         */
        public Builder deletionProtection(Boolean deletionProtection) {
            return deletionProtection(Output.of(deletionProtection));
        }

        /**
         * @param effectiveTime The method to update the engine version and change.  Default value: Immediate. Valid values:
         * - Immediate: The change immediately takes effect.
         * - MaintainTime: The change takes effect during the specified maintenance window. For more information, see ModifyDBInstanceMaintainTime.
         * 
         * @return builder
         * 
         */
        public Builder effectiveTime(@Nullable Output<String> effectiveTime) {
            $.effectiveTime = effectiveTime;
            return this;
        }

        /**
         * @param effectiveTime The method to update the engine version and change.  Default value: Immediate. Valid values:
         * - Immediate: The change immediately takes effect.
         * - MaintainTime: The change takes effect during the specified maintenance window. For more information, see ModifyDBInstanceMaintainTime.
         * 
         * @return builder
         * 
         */
        public Builder effectiveTime(String effectiveTime) {
            return effectiveTime(Output.of(effectiveTime));
        }

        /**
         * @param encryptionKey The key id of the KMS. Used for encrypting a disk if not null. Only for PostgreSQL, MySQL and SQLServer.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKey(@Nullable Output<String> encryptionKey) {
            $.encryptionKey = encryptionKey;
            return this;
        }

        /**
         * @param encryptionKey The key id of the KMS. Used for encrypting a disk if not null. Only for PostgreSQL, MySQL and SQLServer.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKey(String encryptionKey) {
            return encryptionKey(Output.of(encryptionKey));
        }

        /**
         * @param engine Database type. Value options: MySQL, SQLServer.
         * 
         * &gt; **NOTE:** When the &#39;EngineVersion&#39; changes, it can be used as the target database version for the large version upgrade of RDS for MySQL instance.
         * 
         * @return builder
         * 
         */
        public Builder engine(Output<String> engine) {
            $.engine = engine;
            return this;
        }

        /**
         * @param engine Database type. Value options: MySQL, SQLServer.
         * 
         * &gt; **NOTE:** When the &#39;EngineVersion&#39; changes, it can be used as the target database version for the large version upgrade of RDS for MySQL instance.
         * 
         * @return builder
         * 
         */
        public Builder engine(String engine) {
            return engine(Output.of(engine));
        }

        /**
         * @param engineVersion Database version. Value options can refer to the latest docs [CreateDdrInstance](https://www.alibabacloud.com/help/en/apsaradb-for-rds/latest/restore-data-to-a-new-instance-across-regions) `EngineVersion`.
         * 
         * @return builder
         * 
         */
        public Builder engineVersion(Output<String> engineVersion) {
            $.engineVersion = engineVersion;
            return this;
        }

        /**
         * @param engineVersion Database version. Value options can refer to the latest docs [CreateDdrInstance](https://www.alibabacloud.com/help/en/apsaradb-for-rds/latest/restore-data-to-a-new-instance-across-regions) `EngineVersion`.
         * 
         * @return builder
         * 
         */
        public Builder engineVersion(String engineVersion) {
            return engineVersion(Output.of(engineVersion));
        }

        /**
         * @param forceRestart Set it to true to make some parameter efficient when modifying them. Default to false.
         * 
         * @return builder
         * 
         */
        public Builder forceRestart(@Nullable Output<Boolean> forceRestart) {
            $.forceRestart = forceRestart;
            return this;
        }

        /**
         * @param forceRestart Set it to true to make some parameter efficient when modifying them. Default to false.
         * 
         * @return builder
         * 
         */
        public Builder forceRestart(Boolean forceRestart) {
            return forceRestart(Output.of(forceRestart));
        }

        /**
         * @param freshWhiteListReadins The read-only instances to which you want to synchronize the IP address whitelist.
         * * If the instance is attached with a read-only instance, you can use this parameter to synchronize the IP address whitelist to the read-only instance. If the instance is attached with multiple read-only instances, the read-only instances must be separated by commas (,).
         * * If the instance is not attached with a read-only instance, this parameter is empty.
         * 
         * @return builder
         * 
         */
        public Builder freshWhiteListReadins(@Nullable Output<String> freshWhiteListReadins) {
            $.freshWhiteListReadins = freshWhiteListReadins;
            return this;
        }

        /**
         * @param freshWhiteListReadins The read-only instances to which you want to synchronize the IP address whitelist.
         * * If the instance is attached with a read-only instance, you can use this parameter to synchronize the IP address whitelist to the read-only instance. If the instance is attached with multiple read-only instances, the read-only instances must be separated by commas (,).
         * * If the instance is not attached with a read-only instance, this parameter is empty.
         * 
         * @return builder
         * 
         */
        public Builder freshWhiteListReadins(String freshWhiteListReadins) {
            return freshWhiteListReadins(Output.of(freshWhiteListReadins));
        }

        /**
         * @param haConfig The primary/secondary switchover mode of the instance. Default value: Auto. Valid values:
         * - Auto: The system automatically switches over services from the primary to secondary instances in the event of a fault.
         * - Manual: You must manually switch over services from the primary to secondary instances in the event of a fault.
         * 
         * &gt; **NOTE:** If you set this parameter to Manual, you must specify the ManualHATime parameter.
         * 
         * @return builder
         * 
         */
        public Builder haConfig(@Nullable Output<String> haConfig) {
            $.haConfig = haConfig;
            return this;
        }

        /**
         * @param haConfig The primary/secondary switchover mode of the instance. Default value: Auto. Valid values:
         * - Auto: The system automatically switches over services from the primary to secondary instances in the event of a fault.
         * - Manual: You must manually switch over services from the primary to secondary instances in the event of a fault.
         * 
         * &gt; **NOTE:** If you set this parameter to Manual, you must specify the ManualHATime parameter.
         * 
         * @return builder
         * 
         */
        public Builder haConfig(String haConfig) {
            return haConfig(Output.of(haConfig));
        }

        /**
         * @param instanceName The name of DB instance. It a string of 2 to 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(@Nullable Output<String> instanceName) {
            $.instanceName = instanceName;
            return this;
        }

        /**
         * @param instanceName The name of DB instance. It a string of 2 to 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(String instanceName) {
            return instanceName(Output.of(instanceName));
        }

        /**
         * @param instanceStorage The storage capacity of the destination instance. Valid values: 5 to 2000. Unit: GB.
         * 
         * This value must be a multiple of 5 GB. For more information, see Primary ApsaraDB RDS instance types.
         * 
         * @return builder
         * 
         */
        public Builder instanceStorage(Output<Integer> instanceStorage) {
            $.instanceStorage = instanceStorage;
            return this;
        }

        /**
         * @param instanceStorage The storage capacity of the destination instance. Valid values: 5 to 2000. Unit: GB.
         * 
         * This value must be a multiple of 5 GB. For more information, see Primary ApsaraDB RDS instance types.
         * 
         * @return builder
         * 
         */
        public Builder instanceStorage(Integer instanceStorage) {
            return instanceStorage(Output.of(instanceStorage));
        }

        /**
         * @param instanceType DB Instance type.
         * 
         * &gt; **NOTE:** When `storage_auto_scale=&#34;Enable&#34;`, do not perform `instance_storage` check. when `storage_auto_scale=&#34;Disable&#34;`, if the instance itself `instance_storage`has changed. You need to manually revise the `instance_storage` in the template value.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType DB Instance type.
         * 
         * &gt; **NOTE:** When `storage_auto_scale=&#34;Enable&#34;`, do not perform `instance_storage` check. when `storage_auto_scale=&#34;Disable&#34;`, if the instance itself `instance_storage`has changed. You need to manually revise the `instance_storage` in the template value.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param maintainTime Maintainable time period format of the instance: HH:MMZ-HH:MMZ (UTC time)
         * 
         * @return builder
         * 
         */
        public Builder maintainTime(@Nullable Output<String> maintainTime) {
            $.maintainTime = maintainTime;
            return this;
        }

        /**
         * @param maintainTime Maintainable time period format of the instance: HH:MMZ-HH:MMZ (UTC time)
         * 
         * @return builder
         * 
         */
        public Builder maintainTime(String maintainTime) {
            return maintainTime(Output.of(maintainTime));
        }

        /**
         * @param manualHaTime The time after when you want to enable automatic primary/secondary switchover. At most, you can set this parameter to 23:59:59 seven days later. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
         * 
         * &gt; **NOTE:** This parameter only takes effect when the HAConfig parameter is set to Manual.
         * 
         * @return builder
         * 
         */
        public Builder manualHaTime(@Nullable Output<String> manualHaTime) {
            $.manualHaTime = manualHaTime;
            return this;
        }

        /**
         * @param manualHaTime The time after when you want to enable automatic primary/secondary switchover. At most, you can set this parameter to 23:59:59 seven days later. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
         * 
         * &gt; **NOTE:** This parameter only takes effect when the HAConfig parameter is set to Manual.
         * 
         * @return builder
         * 
         */
        public Builder manualHaTime(String manualHaTime) {
            return manualHaTime(Output.of(manualHaTime));
        }

        /**
         * @param modifyMode The method that is used to modify the IP address whitelist. Default value: Cover. Valid values:
         * - Cover: Use the value of the SecurityIps parameter to overwrite the existing entries in the IP address whitelist.
         * - Append: Add the IP addresses and CIDR blocks that are specified in the SecurityIps parameter to the IP address whitelist.
         * - Delete: Delete IP addresses and CIDR blocks that are specified in the SecurityIps parameter from the IP address whitelist. You must retain at least one IP address or CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder modifyMode(@Nullable Output<String> modifyMode) {
            $.modifyMode = modifyMode;
            return this;
        }

        /**
         * @param modifyMode The method that is used to modify the IP address whitelist. Default value: Cover. Valid values:
         * - Cover: Use the value of the SecurityIps parameter to overwrite the existing entries in the IP address whitelist.
         * - Append: Add the IP addresses and CIDR blocks that are specified in the SecurityIps parameter to the IP address whitelist.
         * - Delete: Delete IP addresses and CIDR blocks that are specified in the SecurityIps parameter from the IP address whitelist. You must retain at least one IP address or CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder modifyMode(String modifyMode) {
            return modifyMode(Output.of(modifyMode));
        }

        /**
         * @param monitoringPeriod The monitoring frequency in seconds. Valid values are 5, 60, 300. Defaults to 300.
         * 
         * @return builder
         * 
         */
        public Builder monitoringPeriod(@Nullable Output<Integer> monitoringPeriod) {
            $.monitoringPeriod = monitoringPeriod;
            return this;
        }

        /**
         * @param monitoringPeriod The monitoring frequency in seconds. Valid values are 5, 60, 300. Defaults to 300.
         * 
         * @return builder
         * 
         */
        public Builder monitoringPeriod(Integer monitoringPeriod) {
            return monitoringPeriod(Output.of(monitoringPeriod));
        }

        /**
         * @param parameters Set of parameters needs to be set after DB instance was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/26284.htm) . See `parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<List<DdrInstanceParameterArgs>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Set of parameters needs to be set after DB instance was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/26284.htm) . See `parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder parameters(List<DdrInstanceParameterArgs> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param parameters Set of parameters needs to be set after DB instance was launched. Available parameters can refer to the latest docs [View database parameter templates](https://www.alibabacloud.com/help/doc-detail/26284.htm) . See `parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder parameters(DdrInstanceParameterArgs... parameters) {
            return parameters(List.of(parameters));
        }

        /**
         * @param paymentType Valid values are `Subscription`, `PayAsYouGo`, Default to `PayAsYouGo`.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(Output<String> paymentType) {
            $.paymentType = paymentType;
            return this;
        }

        /**
         * @param paymentType Valid values are `Subscription`, `PayAsYouGo`, Default to `PayAsYouGo`.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(String paymentType) {
            return paymentType(Output.of(paymentType));
        }

        /**
         * @param period The duration that you will buy DB instance (in month). It is valid when payment_type is `Subscription`. Valid values: [1~9], 12, 24, 36.
         * &gt; **NOTE:** The attribute `period` is only used to create Subscription instance or modify the PayAsYouGo instance to Subscription. Once effect, it will not be modified that means running `pulumi up` will not effect the resource.
         * 
         * @return builder
         * 
         */
        public Builder period(@Nullable Output<Integer> period) {
            $.period = period;
            return this;
        }

        /**
         * @param period The duration that you will buy DB instance (in month). It is valid when payment_type is `Subscription`. Valid values: [1~9], 12, 24, 36.
         * &gt; **NOTE:** The attribute `period` is only used to create Subscription instance or modify the PayAsYouGo instance to Subscription. Once effect, it will not be modified that means running `pulumi up` will not effect the resource.
         * 
         * @return builder
         * 
         */
        public Builder period(Integer period) {
            return period(Output.of(period));
        }

        /**
         * @param pgHbaConfs The configuration of [AD domain](https://www.alibabacloud.com/help/en/doc-detail/349288.htm) . See `pg_hba_conf` below.
         * 
         * @return builder
         * 
         */
        public Builder pgHbaConfs(@Nullable Output<List<DdrInstancePgHbaConfArgs>> pgHbaConfs) {
            $.pgHbaConfs = pgHbaConfs;
            return this;
        }

        /**
         * @param pgHbaConfs The configuration of [AD domain](https://www.alibabacloud.com/help/en/doc-detail/349288.htm) . See `pg_hba_conf` below.
         * 
         * @return builder
         * 
         */
        public Builder pgHbaConfs(List<DdrInstancePgHbaConfArgs> pgHbaConfs) {
            return pgHbaConfs(Output.of(pgHbaConfs));
        }

        /**
         * @param pgHbaConfs The configuration of [AD domain](https://www.alibabacloud.com/help/en/doc-detail/349288.htm) . See `pg_hba_conf` below.
         * 
         * @return builder
         * 
         */
        public Builder pgHbaConfs(DdrInstancePgHbaConfArgs... pgHbaConfs) {
            return pgHbaConfs(List.of(pgHbaConfs));
        }

        /**
         * @param port The private port of the database service. If you want to update public port, please use resource alicloud.rds.Connection port.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<String> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port The private port of the database service. If you want to update public port, please use resource alicloud.rds.Connection port.
         * 
         * @return builder
         * 
         */
        public Builder port(String port) {
            return port(Output.of(port));
        }

        /**
         * @param privateIpAddress The private IP address of the instance. The private IP address must be within the Classless Inter-Domain Routing (CIDR) block of the vSwitch that is specified by the VSwitchId parameter.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(@Nullable Output<String> privateIpAddress) {
            $.privateIpAddress = privateIpAddress;
            return this;
        }

        /**
         * @param privateIpAddress The private IP address of the instance. The private IP address must be within the Classless Inter-Domain Routing (CIDR) block of the vSwitch that is specified by the VSwitchId parameter.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(String privateIpAddress) {
            return privateIpAddress(Output.of(privateIpAddress));
        }

        /**
         * @param releasedKeepPolicy The policy based on which ApsaraDB RDS retains archived backup files after the instance is released. Valid values:
         * - None: No archived backup files are retained.
         * - Lastest: Only the last archived backup file is retained.
         * - All: All the archived backup files are retained.
         * 
         * &gt; **NOTE:** This parameter is supported only when the instance runs the MySQL database engine.
         * 
         * @return builder
         * 
         */
        public Builder releasedKeepPolicy(@Nullable Output<String> releasedKeepPolicy) {
            $.releasedKeepPolicy = releasedKeepPolicy;
            return this;
        }

        /**
         * @param releasedKeepPolicy The policy based on which ApsaraDB RDS retains archived backup files after the instance is released. Valid values:
         * - None: No archived backup files are retained.
         * - Lastest: Only the last archived backup file is retained.
         * - All: All the archived backup files are retained.
         * 
         * &gt; **NOTE:** This parameter is supported only when the instance runs the MySQL database engine.
         * 
         * @return builder
         * 
         */
        public Builder releasedKeepPolicy(String releasedKeepPolicy) {
            return releasedKeepPolicy(Output.of(releasedKeepPolicy));
        }

        /**
         * @param replicationAcl The method that is used to verify the replication permission. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. In addition, this parameter is available only when the public key of the CA that issues client certificates is enabled. Valid values:
         * - cert
         * - perfer
         * - verify-ca
         * - verify-full (supported only when the instance runs PostgreSQL 12 or later)
         * 
         * @return builder
         * 
         */
        public Builder replicationAcl(@Nullable Output<String> replicationAcl) {
            $.replicationAcl = replicationAcl;
            return this;
        }

        /**
         * @param replicationAcl The method that is used to verify the replication permission. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. In addition, this parameter is available only when the public key of the CA that issues client certificates is enabled. Valid values:
         * - cert
         * - perfer
         * - verify-ca
         * - verify-full (supported only when the instance runs PostgreSQL 12 or later)
         * 
         * @return builder
         * 
         */
        public Builder replicationAcl(String replicationAcl) {
            return replicationAcl(Output.of(replicationAcl));
        }

        /**
         * @param resourceGroupId The ID of resource group which the DB instance belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of resource group which the DB instance belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param restoreTime The point in time to which you want to restore data. The point in time that you specify must be earlier than the current time. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
         * 
         * @return builder
         * 
         */
        public Builder restoreTime(@Nullable Output<String> restoreTime) {
            $.restoreTime = restoreTime;
            return this;
        }

        /**
         * @param restoreTime The point in time to which you want to restore data. The point in time that you specify must be earlier than the current time. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
         * 
         * @return builder
         * 
         */
        public Builder restoreTime(String restoreTime) {
            return restoreTime(Output.of(restoreTime));
        }

        /**
         * @param restoreType The method that is used to restore data. Valid values:
         * - BackupSet: Data is restored from a backup set. If you use this value, you must also specify the BackupSetID parameter.
         * - BackupTime: restores data to a point in time. You must also specify the RestoreTime, SourceRegion, and SourceDBInstanceName parameters.
         * 
         * @return builder
         * 
         */
        public Builder restoreType(Output<String> restoreType) {
            $.restoreType = restoreType;
            return this;
        }

        /**
         * @param restoreType The method that is used to restore data. Valid values:
         * - BackupSet: Data is restored from a backup set. If you use this value, you must also specify the BackupSetID parameter.
         * - BackupTime: restores data to a point in time. You must also specify the RestoreTime, SourceRegion, and SourceDBInstanceName parameters.
         * 
         * @return builder
         * 
         */
        public Builder restoreType(String restoreType) {
            return restoreType(Output.of(restoreType));
        }

        /**
         * @param securityGroupIds ) The list IDs to join ECS Security Group. At most supports three security groups.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        /**
         * @param securityGroupIds ) The list IDs to join ECS Security Group. At most supports three security groups.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        /**
         * @param securityGroupIds ) The list IDs to join ECS Security Group. At most supports three security groups.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        /**
         * @param securityIpMode Valid values are `normal`, `safety`, Default to `normal`. support `safety` switch to high security access mode.
         * 
         * @return builder
         * 
         */
        public Builder securityIpMode(@Nullable Output<String> securityIpMode) {
            $.securityIpMode = securityIpMode;
            return this;
        }

        /**
         * @param securityIpMode Valid values are `normal`, `safety`, Default to `normal`. support `safety` switch to high security access mode.
         * 
         * @return builder
         * 
         */
        public Builder securityIpMode(String securityIpMode) {
            return securityIpMode(Output.of(securityIpMode));
        }

        /**
         * @param securityIpType The type of IP address in the IP address whitelist.
         * 
         * @return builder
         * 
         */
        public Builder securityIpType(@Nullable Output<String> securityIpType) {
            $.securityIpType = securityIpType;
            return this;
        }

        /**
         * @param securityIpType The type of IP address in the IP address whitelist.
         * 
         * @return builder
         * 
         */
        public Builder securityIpType(String securityIpType) {
            return securityIpType(Output.of(securityIpType));
        }

        /**
         * @param securityIps List of IP addresses allowed to access all databases of an instance. The list contains up to 1,000 IP addresses, separated by commas. Supported formats include 0.0.0.0/0, 10.23.12.24 (IP), and 10.23.12.24/24 (Classless Inter-Domain Routing (CIDR) mode. /24 represents the length of the prefix in an IP address. The range of the prefix length is [1,32]).
         * 
         * @return builder
         * 
         */
        public Builder securityIps(@Nullable Output<List<String>> securityIps) {
            $.securityIps = securityIps;
            return this;
        }

        /**
         * @param securityIps List of IP addresses allowed to access all databases of an instance. The list contains up to 1,000 IP addresses, separated by commas. Supported formats include 0.0.0.0/0, 10.23.12.24 (IP), and 10.23.12.24/24 (Classless Inter-Domain Routing (CIDR) mode. /24 represents the length of the prefix in an IP address. The range of the prefix length is [1,32]).
         * 
         * @return builder
         * 
         */
        public Builder securityIps(List<String> securityIps) {
            return securityIps(Output.of(securityIps));
        }

        /**
         * @param securityIps List of IP addresses allowed to access all databases of an instance. The list contains up to 1,000 IP addresses, separated by commas. Supported formats include 0.0.0.0/0, 10.23.12.24 (IP), and 10.23.12.24/24 (Classless Inter-Domain Routing (CIDR) mode. /24 represents the length of the prefix in an IP address. The range of the prefix length is [1,32]).
         * 
         * @return builder
         * 
         */
        public Builder securityIps(String... securityIps) {
            return securityIps(List.of(securityIps));
        }

        /**
         * @param serverCert The content of the server certificate. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the CAType parameter to custom, you must also specify this parameter.
         * 
         * @return builder
         * 
         */
        public Builder serverCert(@Nullable Output<String> serverCert) {
            $.serverCert = serverCert;
            return this;
        }

        /**
         * @param serverCert The content of the server certificate. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the CAType parameter to custom, you must also specify this parameter.
         * 
         * @return builder
         * 
         */
        public Builder serverCert(String serverCert) {
            return serverCert(Output.of(serverCert));
        }

        /**
         * @param serverKey The private key of the server certificate. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the CAType parameter to custom, you must also specify this parameter.
         * 
         * @return builder
         * 
         */
        public Builder serverKey(@Nullable Output<String> serverKey) {
            $.serverKey = serverKey;
            return this;
        }

        /**
         * @param serverKey The private key of the server certificate. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the CAType parameter to custom, you must also specify this parameter.
         * 
         * @return builder
         * 
         */
        public Builder serverKey(String serverKey) {
            return serverKey(Output.of(serverKey));
        }

        /**
         * @param sourceDbInstanceName The ID of the source instance if you want to restore data to a point in time.
         * 
         * @return builder
         * 
         */
        public Builder sourceDbInstanceName(@Nullable Output<String> sourceDbInstanceName) {
            $.sourceDbInstanceName = sourceDbInstanceName;
            return this;
        }

        /**
         * @param sourceDbInstanceName The ID of the source instance if you want to restore data to a point in time.
         * 
         * @return builder
         * 
         */
        public Builder sourceDbInstanceName(String sourceDbInstanceName) {
            return sourceDbInstanceName(Output.of(sourceDbInstanceName));
        }

        /**
         * @param sourceRegion The region ID of the source instance if you want to restore data to a point in time.
         * 
         * @return builder
         * 
         */
        public Builder sourceRegion(@Nullable Output<String> sourceRegion) {
            $.sourceRegion = sourceRegion;
            return this;
        }

        /**
         * @param sourceRegion The region ID of the source instance if you want to restore data to a point in time.
         * 
         * @return builder
         * 
         */
        public Builder sourceRegion(String sourceRegion) {
            return sourceRegion(Output.of(sourceRegion));
        }

        /**
         * @param sqlCollectorConfigValue The sql collector keep time of the instance. Valid values are `30`, `180`, `365`, `1095`, `1825`, Default to `30`.
         * 
         * @return builder
         * 
         */
        public Builder sqlCollectorConfigValue(@Nullable Output<Integer> sqlCollectorConfigValue) {
            $.sqlCollectorConfigValue = sqlCollectorConfigValue;
            return this;
        }

        /**
         * @param sqlCollectorConfigValue The sql collector keep time of the instance. Valid values are `30`, `180`, `365`, `1095`, `1825`, Default to `30`.
         * 
         * @return builder
         * 
         */
        public Builder sqlCollectorConfigValue(Integer sqlCollectorConfigValue) {
            return sqlCollectorConfigValue(Output.of(sqlCollectorConfigValue));
        }

        /**
         * @param sqlCollectorStatus The sql collector status of the instance. Valid values are `Enabled`, `Disabled`, Default to `Disabled`.
         * 
         * @return builder
         * 
         */
        public Builder sqlCollectorStatus(@Nullable Output<String> sqlCollectorStatus) {
            $.sqlCollectorStatus = sqlCollectorStatus;
            return this;
        }

        /**
         * @param sqlCollectorStatus The sql collector status of the instance. Valid values are `Enabled`, `Disabled`, Default to `Disabled`.
         * 
         * @return builder
         * 
         */
        public Builder sqlCollectorStatus(String sqlCollectorStatus) {
            return sqlCollectorStatus(Output.of(sqlCollectorStatus));
        }

        /**
         * @param sslAction Actions performed on SSL functions, Valid values: `Open`: turn on SSL encryption; `Close`: turn off SSL encryption; `Update`: update SSL certificate. See more [engine and engineVersion limitation](https://www.alibabacloud.com/help/zh/doc-detail/26254.htm).
         * 
         * @return builder
         * 
         */
        public Builder sslAction(@Nullable Output<String> sslAction) {
            $.sslAction = sslAction;
            return this;
        }

        /**
         * @param sslAction Actions performed on SSL functions, Valid values: `Open`: turn on SSL encryption; `Close`: turn off SSL encryption; `Update`: update SSL certificate. See more [engine and engineVersion limitation](https://www.alibabacloud.com/help/zh/doc-detail/26254.htm).
         * 
         * @return builder
         * 
         */
        public Builder sslAction(String sslAction) {
            return sslAction(Output.of(sslAction));
        }

        /**
         * @param storageAutoScale Automatic storage space expansion switch. Valid values:
         * - Enable
         * - Disable
         * 
         * &gt; **NOTE:** This parameter only takes effect when the StorageAutoScale parameter is set to Enable.
         * 
         * @return builder
         * 
         */
        public Builder storageAutoScale(@Nullable Output<String> storageAutoScale) {
            $.storageAutoScale = storageAutoScale;
            return this;
        }

        /**
         * @param storageAutoScale Automatic storage space expansion switch. Valid values:
         * - Enable
         * - Disable
         * 
         * &gt; **NOTE:** This parameter only takes effect when the StorageAutoScale parameter is set to Enable.
         * 
         * @return builder
         * 
         */
        public Builder storageAutoScale(String storageAutoScale) {
            return storageAutoScale(Output.of(storageAutoScale));
        }

        /**
         * @param storageThreshold The trigger threshold (percentage) for automatic storage space expansion. Valid values:
         * - 10
         * - 20
         * - 30
         * - 40
         * - 50
         * 
         * &gt; **NOTE:** This parameter only takes effect when the StorageAutoScale parameter is set to Enable. The value must be greater than or equal to the total size of the current storage space of the instance.
         * 
         * @return builder
         * 
         */
        public Builder storageThreshold(@Nullable Output<Integer> storageThreshold) {
            $.storageThreshold = storageThreshold;
            return this;
        }

        /**
         * @param storageThreshold The trigger threshold (percentage) for automatic storage space expansion. Valid values:
         * - 10
         * - 20
         * - 30
         * - 40
         * - 50
         * 
         * &gt; **NOTE:** This parameter only takes effect when the StorageAutoScale parameter is set to Enable. The value must be greater than or equal to the total size of the current storage space of the instance.
         * 
         * @return builder
         * 
         */
        public Builder storageThreshold(Integer storageThreshold) {
            return storageThreshold(Output.of(storageThreshold));
        }

        /**
         * @param storageUpperBound The upper limit of the total storage space for automatic expansion of the storage space, that is, automatic expansion will not cause the total storage space of the instance to exceed this value. Unit: GB. The value must be ≥0.
         * 
         * &gt; **NOTE:** Because of data backup and migration, change DB instance type and storage would cost 15~20 minutes. Please make full preparation before changing them.
         * 
         * @return builder
         * 
         */
        public Builder storageUpperBound(@Nullable Output<Integer> storageUpperBound) {
            $.storageUpperBound = storageUpperBound;
            return this;
        }

        /**
         * @param storageUpperBound The upper limit of the total storage space for automatic expansion of the storage space, that is, automatic expansion will not cause the total storage space of the instance to exceed this value. Unit: GB. The value must be ≥0.
         * 
         * &gt; **NOTE:** Because of data backup and migration, change DB instance type and storage would cost 15~20 minutes. Please make full preparation before changing them.
         * 
         * @return builder
         * 
         */
        public Builder storageUpperBound(Integer storageUpperBound) {
            return storageUpperBound(Output.of(storageUpperBound));
        }

        /**
         * @param switchTime The specific point in time when you want to perform the update. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. It is valid only when `upgrade_db_instance_kernel_version = true`. The time must be in UTC.
         * 
         * &gt; **NOTE:** This parameter takes effect only when you set the UpgradeTime parameter to SpecifyTime.
         * 
         * @return builder
         * 
         */
        public Builder switchTime(@Nullable Output<String> switchTime) {
            $.switchTime = switchTime;
            return this;
        }

        /**
         * @param switchTime The specific point in time when you want to perform the update. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. It is valid only when `upgrade_db_instance_kernel_version = true`. The time must be in UTC.
         * 
         * &gt; **NOTE:** This parameter takes effect only when you set the UpgradeTime parameter to SpecifyTime.
         * 
         * @return builder
         * 
         */
        public Builder switchTime(String switchTime) {
            return switchTime(Output.of(switchTime));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
         * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
         * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param targetMinorVersion The minor engine version to which you want to update the instance. If you do not specify this parameter, the instance is updated to the latest minor engine version. It is valid only when `upgrade_db_instance_kernel_version = true`. You must specify the minor engine version in one of the following formats:
         * - PostgreSQL: rds_postgres_&lt;Major engine version&gt;00_&lt;Minor engine version&gt;. Example: rds_postgres_1200_20200830.
         * - MySQL: &lt;RDS edition&gt;_&lt;Minor engine version&gt;. Examples: rds_20200229, xcluster_20200229, and xcluster80_20200229. The following RDS editions are supported:
         * - rds: The instance runs RDS Basic or High-availability Edition.
         * - xcluster: The instance runs MySQL 5.7 on RDS Enterprise Edition.
         * - xcluster80: The instance runs MySQL 8.0 on RDS Enterprise Edition.
         * - SQLServer: &lt;Minor engine version&gt;. Example: 15.0.4073.23.
         * 
         * &gt; **NOTE:** For more information about minor engine versions, see Release notes of minor AliPG versions, Release notes of minor AliSQL versions, and Release notes of minor engine versions of ApsaraDB RDS for SQL Server.
         * 
         * @return builder
         * 
         */
        public Builder targetMinorVersion(@Nullable Output<String> targetMinorVersion) {
            $.targetMinorVersion = targetMinorVersion;
            return this;
        }

        /**
         * @param targetMinorVersion The minor engine version to which you want to update the instance. If you do not specify this parameter, the instance is updated to the latest minor engine version. It is valid only when `upgrade_db_instance_kernel_version = true`. You must specify the minor engine version in one of the following formats:
         * - PostgreSQL: rds_postgres_&lt;Major engine version&gt;00_&lt;Minor engine version&gt;. Example: rds_postgres_1200_20200830.
         * - MySQL: &lt;RDS edition&gt;_&lt;Minor engine version&gt;. Examples: rds_20200229, xcluster_20200229, and xcluster80_20200229. The following RDS editions are supported:
         * - rds: The instance runs RDS Basic or High-availability Edition.
         * - xcluster: The instance runs MySQL 5.7 on RDS Enterprise Edition.
         * - xcluster80: The instance runs MySQL 8.0 on RDS Enterprise Edition.
         * - SQLServer: &lt;Minor engine version&gt;. Example: 15.0.4073.23.
         * 
         * &gt; **NOTE:** For more information about minor engine versions, see Release notes of minor AliPG versions, Release notes of minor AliSQL versions, and Release notes of minor engine versions of ApsaraDB RDS for SQL Server.
         * 
         * @return builder
         * 
         */
        public Builder targetMinorVersion(String targetMinorVersion) {
            return targetMinorVersion(Output.of(targetMinorVersion));
        }

        /**
         * @param tcpConnectionType The availability check method of the instance. Valid values:
         * - **SHORT**: Alibaba Cloud uses short-lived connections to check the availability of the instance.
         * - **LONG**: Alibaba Cloud uses persistent connections to check the availability of the instance.
         * 
         * @return builder
         * 
         */
        public Builder tcpConnectionType(@Nullable Output<String> tcpConnectionType) {
            $.tcpConnectionType = tcpConnectionType;
            return this;
        }

        /**
         * @param tcpConnectionType The availability check method of the instance. Valid values:
         * - **SHORT**: Alibaba Cloud uses short-lived connections to check the availability of the instance.
         * - **LONG**: Alibaba Cloud uses persistent connections to check the availability of the instance.
         * 
         * @return builder
         * 
         */
        public Builder tcpConnectionType(String tcpConnectionType) {
            return tcpConnectionType(Output.of(tcpConnectionType));
        }

        /**
         * @param tdeStatus The TDE(Transparent Data Encryption) status. See more [engine and engineVersion limitation](https://www.alibabacloud.com/help/zh/doc-detail/26256.htm).
         * 
         * @return builder
         * 
         */
        public Builder tdeStatus(@Nullable Output<String> tdeStatus) {
            $.tdeStatus = tdeStatus;
            return this;
        }

        /**
         * @param tdeStatus The TDE(Transparent Data Encryption) status. See more [engine and engineVersion limitation](https://www.alibabacloud.com/help/zh/doc-detail/26256.htm).
         * 
         * @return builder
         * 
         */
        public Builder tdeStatus(String tdeStatus) {
            return tdeStatus(Output.of(tdeStatus));
        }

        /**
         * @param upgradeDbInstanceKernelVersion Whether to upgrade a minor version of the kernel. Valid values:
         * - true: upgrade
         * - false: not to upgrade
         * 
         * @return builder
         * 
         */
        public Builder upgradeDbInstanceKernelVersion(@Nullable Output<Boolean> upgradeDbInstanceKernelVersion) {
            $.upgradeDbInstanceKernelVersion = upgradeDbInstanceKernelVersion;
            return this;
        }

        /**
         * @param upgradeDbInstanceKernelVersion Whether to upgrade a minor version of the kernel. Valid values:
         * - true: upgrade
         * - false: not to upgrade
         * 
         * @return builder
         * 
         */
        public Builder upgradeDbInstanceKernelVersion(Boolean upgradeDbInstanceKernelVersion) {
            return upgradeDbInstanceKernelVersion(Output.of(upgradeDbInstanceKernelVersion));
        }

        /**
         * @param upgradeTime The method to update the minor engine version. Default value: Immediate. It is valid only when `upgrade_db_instance_kernel_version = true`. Valid values:
         * - Immediate: The minor engine version is immediately updated.
         * - MaintainTime: The minor engine version is updated during the maintenance window. For more information about how to change the maintenance window, see ModifyDBInstanceMaintainTime.
         * - SpecifyTime: The minor engine version is updated at the point in time you specify.
         * 
         * @return builder
         * 
         */
        public Builder upgradeTime(@Nullable Output<String> upgradeTime) {
            $.upgradeTime = upgradeTime;
            return this;
        }

        /**
         * @param upgradeTime The method to update the minor engine version. Default value: Immediate. It is valid only when `upgrade_db_instance_kernel_version = true`. Valid values:
         * - Immediate: The minor engine version is immediately updated.
         * - MaintainTime: The minor engine version is updated during the maintenance window. For more information about how to change the maintenance window, see ModifyDBInstanceMaintainTime.
         * - SpecifyTime: The minor engine version is updated at the point in time you specify.
         * 
         * @return builder
         * 
         */
        public Builder upgradeTime(String upgradeTime) {
            return upgradeTime(Output.of(upgradeTime));
        }

        /**
         * @param vpcId The VPC ID of the instance.
         * 
         * &gt; **NOTE:** This parameter applies only to ApsaraDB RDS for MySQL instances. For more information about Upgrade the major engine version of an ApsaraDB RDS for MySQL instance, see [Upgrade the major engine version of an RDS instance in the ApsaraDB RDS console](https://www.alibabacloud.com/help/en/apsaradb-for-rds/latest/upgrade-the-major-engine-version-of-an-apsaradb-rds-for-mysql-instance-1).
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The VPC ID of the instance.
         * 
         * &gt; **NOTE:** This parameter applies only to ApsaraDB RDS for MySQL instances. For more information about Upgrade the major engine version of an ApsaraDB RDS for MySQL instance, see [Upgrade the major engine version of an RDS instance in the ApsaraDB RDS console](https://www.alibabacloud.com/help/en/apsaradb-for-rds/latest/upgrade-the-major-engine-version-of-an-apsaradb-rds-for-mysql-instance-1).
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param vswitchId The virtual switch ID to launch DB instances in one VPC. If there are multiple vswitches, separate them with commas.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(@Nullable Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId The virtual switch ID to launch DB instances in one VPC. If there are multiple vswitches, separate them with commas.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        /**
         * @param whitelistNetworkType The network type of the IP address whitelist. Default value: MIX. Valid values:
         * - Classic: classic network in enhanced whitelist mode
         * - VPC: virtual private cloud (VPC) in enhanced whitelist mode
         * - MIX: standard whitelist mode
         * 
         * &gt; **NOTE:** In standard whitelist mode, IP addresses and CIDR blocks can be added only to the default IP address whitelist. In enhanced whitelist mode, IP addresses and CIDR blocks can be added to both IP address whitelists of the classic network type and those of the VPC network type.
         * 
         * @return builder
         * 
         */
        public Builder whitelistNetworkType(@Nullable Output<String> whitelistNetworkType) {
            $.whitelistNetworkType = whitelistNetworkType;
            return this;
        }

        /**
         * @param whitelistNetworkType The network type of the IP address whitelist. Default value: MIX. Valid values:
         * - Classic: classic network in enhanced whitelist mode
         * - VPC: virtual private cloud (VPC) in enhanced whitelist mode
         * - MIX: standard whitelist mode
         * 
         * &gt; **NOTE:** In standard whitelist mode, IP addresses and CIDR blocks can be added only to the default IP address whitelist. In enhanced whitelist mode, IP addresses and CIDR blocks can be added to both IP address whitelists of the classic network type and those of the VPC network type.
         * 
         * @return builder
         * 
         */
        public Builder whitelistNetworkType(String whitelistNetworkType) {
            return whitelistNetworkType(Output.of(whitelistNetworkType));
        }

        /**
         * @param zoneId The Zone to launch the DB instance. It supports multiple zone.
         * If it is a multi-zone and `vswitch_id` is specified, the vswitch must in the one of them.
         * The multiple zone ID can be retrieved by setting `multi` to &#34;true&#34; in the data source `alicloud.getZones`.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The Zone to launch the DB instance. It supports multiple zone.
         * If it is a multi-zone and `vswitch_id` is specified, the vswitch must in the one of them.
         * The multiple zone ID can be retrieved by setting `multi` to &#34;true&#34; in the data source `alicloud.getZones`.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public DdrInstanceArgs build() {
            if ($.engine == null) {
                throw new MissingRequiredPropertyException("DdrInstanceArgs", "engine");
            }
            if ($.engineVersion == null) {
                throw new MissingRequiredPropertyException("DdrInstanceArgs", "engineVersion");
            }
            if ($.instanceStorage == null) {
                throw new MissingRequiredPropertyException("DdrInstanceArgs", "instanceStorage");
            }
            if ($.instanceType == null) {
                throw new MissingRequiredPropertyException("DdrInstanceArgs", "instanceType");
            }
            if ($.paymentType == null) {
                throw new MissingRequiredPropertyException("DdrInstanceArgs", "paymentType");
            }
            if ($.restoreType == null) {
                throw new MissingRequiredPropertyException("DdrInstanceArgs", "restoreType");
            }
            return $;
        }
    }

}
