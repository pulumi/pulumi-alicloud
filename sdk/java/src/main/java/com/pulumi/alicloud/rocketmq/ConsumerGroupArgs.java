// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rocketmq;

import com.pulumi.alicloud.rocketmq.inputs.ConsumerGroupConsumeRetryPolicyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConsumerGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConsumerGroupArgs Empty = new ConsumerGroupArgs();

    /**
     * Consumption retry strategy. See `consume_retry_policy` below.
     * 
     */
    @Import(name="consumeRetryPolicy", required=true)
    private Output<ConsumerGroupConsumeRetryPolicyArgs> consumeRetryPolicy;

    /**
     * @return Consumption retry strategy. See `consume_retry_policy` below.
     * 
     */
    public Output<ConsumerGroupConsumeRetryPolicyArgs> consumeRetryPolicy() {
        return this.consumeRetryPolicy;
    }

    /**
     * The first ID of the resource.
     * 
     */
    @Import(name="consumerGroupId", required=true)
    private Output<String> consumerGroupId;

    /**
     * @return The first ID of the resource.
     * 
     */
    public Output<String> consumerGroupId() {
        return this.consumerGroupId;
    }

    /**
     * Delivery order.
     * 
     */
    @Import(name="deliveryOrderType")
    private @Nullable Output<String> deliveryOrderType;

    /**
     * @return Delivery order.
     * 
     */
    public Optional<Output<String>> deliveryOrderType() {
        return Optional.ofNullable(this.deliveryOrderType);
    }

    /**
     * Instance ID.
     * 
     */
    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    /**
     * @return Instance ID.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }

    /**
     * Custom remarks.
     * 
     */
    @Import(name="remark")
    private @Nullable Output<String> remark;

    /**
     * @return Custom remarks.
     * 
     */
    public Optional<Output<String>> remark() {
        return Optional.ofNullable(this.remark);
    }

    private ConsumerGroupArgs() {}

    private ConsumerGroupArgs(ConsumerGroupArgs $) {
        this.consumeRetryPolicy = $.consumeRetryPolicy;
        this.consumerGroupId = $.consumerGroupId;
        this.deliveryOrderType = $.deliveryOrderType;
        this.instanceId = $.instanceId;
        this.remark = $.remark;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConsumerGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConsumerGroupArgs $;

        public Builder() {
            $ = new ConsumerGroupArgs();
        }

        public Builder(ConsumerGroupArgs defaults) {
            $ = new ConsumerGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param consumeRetryPolicy Consumption retry strategy. See `consume_retry_policy` below.
         * 
         * @return builder
         * 
         */
        public Builder consumeRetryPolicy(Output<ConsumerGroupConsumeRetryPolicyArgs> consumeRetryPolicy) {
            $.consumeRetryPolicy = consumeRetryPolicy;
            return this;
        }

        /**
         * @param consumeRetryPolicy Consumption retry strategy. See `consume_retry_policy` below.
         * 
         * @return builder
         * 
         */
        public Builder consumeRetryPolicy(ConsumerGroupConsumeRetryPolicyArgs consumeRetryPolicy) {
            return consumeRetryPolicy(Output.of(consumeRetryPolicy));
        }

        /**
         * @param consumerGroupId The first ID of the resource.
         * 
         * @return builder
         * 
         */
        public Builder consumerGroupId(Output<String> consumerGroupId) {
            $.consumerGroupId = consumerGroupId;
            return this;
        }

        /**
         * @param consumerGroupId The first ID of the resource.
         * 
         * @return builder
         * 
         */
        public Builder consumerGroupId(String consumerGroupId) {
            return consumerGroupId(Output.of(consumerGroupId));
        }

        /**
         * @param deliveryOrderType Delivery order.
         * 
         * @return builder
         * 
         */
        public Builder deliveryOrderType(@Nullable Output<String> deliveryOrderType) {
            $.deliveryOrderType = deliveryOrderType;
            return this;
        }

        /**
         * @param deliveryOrderType Delivery order.
         * 
         * @return builder
         * 
         */
        public Builder deliveryOrderType(String deliveryOrderType) {
            return deliveryOrderType(Output.of(deliveryOrderType));
        }

        /**
         * @param instanceId Instance ID.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId Instance ID.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param remark Custom remarks.
         * 
         * @return builder
         * 
         */
        public Builder remark(@Nullable Output<String> remark) {
            $.remark = remark;
            return this;
        }

        /**
         * @param remark Custom remarks.
         * 
         * @return builder
         * 
         */
        public Builder remark(String remark) {
            return remark(Output.of(remark));
        }

        public ConsumerGroupArgs build() {
            if ($.consumeRetryPolicy == null) {
                throw new MissingRequiredPropertyException("ConsumerGroupArgs", "consumeRetryPolicy");
            }
            if ($.consumerGroupId == null) {
                throw new MissingRequiredPropertyException("ConsumerGroupArgs", "consumerGroupId");
            }
            if ($.instanceId == null) {
                throw new MissingRequiredPropertyException("ConsumerGroupArgs", "instanceId");
            }
            return $;
        }
    }

}
