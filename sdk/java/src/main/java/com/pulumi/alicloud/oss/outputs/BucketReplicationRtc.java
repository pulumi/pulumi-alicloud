// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BucketReplicationRtc {
    /**
     * @return Specifies whether to enable the RTC feature. Set to `true` to enable or `false` to disable. This argument is required when the rtc block is defined.
     * 
     */
    private Boolean enabled;
    /**
     * @return The current status of the RTC feature. This attribute is read-only and is only populated when `enabled` is set to `true`. Possible values are:
     * 
     */
    private @Nullable String status;

    private BucketReplicationRtc() {}
    /**
     * @return Specifies whether to enable the RTC feature. Set to `true` to enable or `false` to disable. This argument is required when the rtc block is defined.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return The current status of the RTC feature. This attribute is read-only and is only populated when `enabled` is set to `true`. Possible values are:
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketReplicationRtc defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private @Nullable String status;
        public Builder() {}
        public Builder(BucketReplicationRtc defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("BucketReplicationRtc", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        public BucketReplicationRtc build() {
            final var _resultValue = new BucketReplicationRtc();
            _resultValue.enabled = enabled;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
