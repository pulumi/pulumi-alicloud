// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceState extends com.pulumi.resources.ResourceArgs {

    public static final InstanceState Empty = new InstanceState();

    /**
     * The name of the CEN instance. Defaults to null. The name must be 2 to 128 characters in length and can contain letters, numbers, periods (.), underscores (_), and hyphens (-). The name must start with a letter, but cannot start with http:// or https://.
     * 
     */
    @Import(name="cenInstanceName")
    private @Nullable Output<String> cenInstanceName;

    /**
     * @return The name of the CEN instance. Defaults to null. The name must be 2 to 128 characters in length and can contain letters, numbers, periods (.), underscores (_), and hyphens (-). The name must start with a letter, but cannot start with http:// or https://.
     * 
     */
    public Optional<Output<String>> cenInstanceName() {
        return Optional.ofNullable(this.cenInstanceName);
    }

    /**
     * The description of the CEN instance. Defaults to null. The description must be 2 to 256 characters in length. It must start with a letter, and cannot start with http:// or https://.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the CEN instance. Defaults to null. The description must be 2 to 256 characters in length. It must start with a letter, and cannot start with http:// or https://.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Field `name` has been deprecated from version 1.98.0. Use `cen_instance_name` instead.
     * 
     * @deprecated
     * attribute &#39;name&#39; has been deprecated from version 1.98.0. Use &#39;cen_instance_name&#39; instead.
     * 
     */
    @Deprecated /* attribute 'name' has been deprecated from version 1.98.0. Use 'cen_instance_name' instead. */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Field `name` has been deprecated from version 1.98.0. Use `cen_instance_name` instead.
     * 
     * @deprecated
     * attribute &#39;name&#39; has been deprecated from version 1.98.0. Use &#39;cen_instance_name&#39; instead.
     * 
     */
    @Deprecated /* attribute 'name' has been deprecated from version 1.98.0. Use 'cen_instance_name' instead. */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Indicates the allowed level of CIDR block overlapping. Default value: `REDUCE`: Overlapping CIDR blocks are allowed. However, the overlapping CIDR blocks cannot be identical.
     * 
     */
    @Import(name="protectionLevel")
    private @Nullable Output<String> protectionLevel;

    /**
     * @return Indicates the allowed level of CIDR block overlapping. Default value: `REDUCE`: Overlapping CIDR blocks are allowed. However, the overlapping CIDR blocks cannot be identical.
     * 
     */
    public Optional<Output<String>> protectionLevel() {
        return Optional.ofNullable(this.protectionLevel);
    }

    /**
     * The Cen Instance current status.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The Cen Instance current status.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private InstanceState() {}

    private InstanceState(InstanceState $) {
        this.cenInstanceName = $.cenInstanceName;
        this.description = $.description;
        this.name = $.name;
        this.protectionLevel = $.protectionLevel;
        this.status = $.status;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceState $;

        public Builder() {
            $ = new InstanceState();
        }

        public Builder(InstanceState defaults) {
            $ = new InstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param cenInstanceName The name of the CEN instance. Defaults to null. The name must be 2 to 128 characters in length and can contain letters, numbers, periods (.), underscores (_), and hyphens (-). The name must start with a letter, but cannot start with http:// or https://.
         * 
         * @return builder
         * 
         */
        public Builder cenInstanceName(@Nullable Output<String> cenInstanceName) {
            $.cenInstanceName = cenInstanceName;
            return this;
        }

        /**
         * @param cenInstanceName The name of the CEN instance. Defaults to null. The name must be 2 to 128 characters in length and can contain letters, numbers, periods (.), underscores (_), and hyphens (-). The name must start with a letter, but cannot start with http:// or https://.
         * 
         * @return builder
         * 
         */
        public Builder cenInstanceName(String cenInstanceName) {
            return cenInstanceName(Output.of(cenInstanceName));
        }

        /**
         * @param description The description of the CEN instance. Defaults to null. The description must be 2 to 256 characters in length. It must start with a letter, and cannot start with http:// or https://.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the CEN instance. Defaults to null. The description must be 2 to 256 characters in length. It must start with a letter, and cannot start with http:// or https://.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Field `name` has been deprecated from version 1.98.0. Use `cen_instance_name` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * attribute &#39;name&#39; has been deprecated from version 1.98.0. Use &#39;cen_instance_name&#39; instead.
         * 
         */
        @Deprecated /* attribute 'name' has been deprecated from version 1.98.0. Use 'cen_instance_name' instead. */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Field `name` has been deprecated from version 1.98.0. Use `cen_instance_name` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * attribute &#39;name&#39; has been deprecated from version 1.98.0. Use &#39;cen_instance_name&#39; instead.
         * 
         */
        @Deprecated /* attribute 'name' has been deprecated from version 1.98.0. Use 'cen_instance_name' instead. */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param protectionLevel Indicates the allowed level of CIDR block overlapping. Default value: `REDUCE`: Overlapping CIDR blocks are allowed. However, the overlapping CIDR blocks cannot be identical.
         * 
         * @return builder
         * 
         */
        public Builder protectionLevel(@Nullable Output<String> protectionLevel) {
            $.protectionLevel = protectionLevel;
            return this;
        }

        /**
         * @param protectionLevel Indicates the allowed level of CIDR block overlapping. Default value: `REDUCE`: Overlapping CIDR blocks are allowed. However, the overlapping CIDR blocks cannot be identical.
         * 
         * @return builder
         * 
         */
        public Builder protectionLevel(String protectionLevel) {
            return protectionLevel(Output.of(protectionLevel));
        }

        /**
         * @param status The Cen Instance current status.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The Cen Instance current status.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public InstanceState build() {
            return $;
        }
    }

}
