// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ros.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class TemplateScratchSourceResourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final TemplateScratchSourceResourceArgs Empty = new TemplateScratchSourceResourceArgs();

    /**
     * The ID of the Source Resource.
     * 
     */
    @Import(name="resourceId", required=true)
    private Output<String> resourceId;

    /**
     * @return The ID of the Source Resource.
     * 
     */
    public Output<String> resourceId() {
        return this.resourceId;
    }

    /**
     * The type of the Source resource.
     * 
     */
    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    /**
     * @return The type of the Source resource.
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }

    private TemplateScratchSourceResourceArgs() {}

    private TemplateScratchSourceResourceArgs(TemplateScratchSourceResourceArgs $) {
        this.resourceId = $.resourceId;
        this.resourceType = $.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TemplateScratchSourceResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TemplateScratchSourceResourceArgs $;

        public Builder() {
            $ = new TemplateScratchSourceResourceArgs();
        }

        public Builder(TemplateScratchSourceResourceArgs defaults) {
            $ = new TemplateScratchSourceResourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceId The ID of the Source Resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId The ID of the Source Resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param resourceType The type of the Source resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The type of the Source resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public TemplateScratchSourceResourceArgs build() {
            if ($.resourceId == null) {
                throw new MissingRequiredPropertyException("TemplateScratchSourceResourceArgs", "resourceId");
            }
            if ($.resourceType == null) {
                throw new MissingRequiredPropertyException("TemplateScratchSourceResourceArgs", "resourceType");
            }
            return $;
        }
    }

}
