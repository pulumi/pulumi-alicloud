// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.emrv2;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.emrv2.ClusterArgs;
import com.pulumi.alicloud.emrv2.inputs.ClusterState;
import com.pulumi.alicloud.emrv2.outputs.ClusterApplicationConfig;
import com.pulumi.alicloud.emrv2.outputs.ClusterBootstrapScript;
import com.pulumi.alicloud.emrv2.outputs.ClusterNodeAttribute;
import com.pulumi.alicloud.emrv2.outputs.ClusterNodeGroup;
import com.pulumi.alicloud.emrv2.outputs.ClusterSubscriptionConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a EMR cluster resource. This resource is based on EMR&#39;s new version OpenAPI.
 * 
 * For information about EMR New and how to use it, see [Add a domain](https://www.alibabacloud.com/help/doc-detail/28068.htm).
 * 
 * &gt; **NOTE:** Available since v1.199.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
 * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
 * import com.pulumi.alicloud.kms.KmsFunctions;
 * import com.pulumi.alicloud.kms.inputs.GetKeysArgs;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.ecs.EcsKeyPair;
 * import com.pulumi.alicloud.ecs.EcsKeyPairArgs;
 * import com.pulumi.alicloud.ecs.SecurityGroup;
 * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
 * import com.pulumi.alicloud.ram.Role;
 * import com.pulumi.alicloud.ram.RoleArgs;
 * import com.pulumi.alicloud.emrv2.Cluster;
 * import com.pulumi.alicloud.emrv2.ClusterArgs;
 * import com.pulumi.alicloud.emrv2.inputs.ClusterNodeGroupArgs;
 * import com.pulumi.alicloud.emrv2.inputs.ClusterNodeGroupSystemDiskArgs;
 * import com.pulumi.alicloud.emrv2.inputs.ClusterNodeAttributeArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("tf-example");
 *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
 *             .status("OK")
 *             .build());
 * 
 *         final var defaultGetKeys = KmsFunctions.getKeys(GetKeysArgs.builder()
 *             .status("Enabled")
 *             .build());
 * 
 *         final var defaultGetZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
 *             .availableInstanceType("ecs.g7.xlarge")
 *             .build());
 * 
 *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
 *             .vpcName(name)
 *             .cidrBlock("172.16.0.0/12")
 *             .build());
 * 
 *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
 *             .vpcId(defaultNetwork.id())
 *             .cidrBlock("172.16.0.0/21")
 *             .zoneId(defaultGetZones.zones()[0].id())
 *             .vswitchName(name)
 *             .build());
 * 
 *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
 *             .max(99999)
 *             .min(10000)
 *             .build());
 * 
 *         var defaultEcsKeyPair = new EcsKeyPair("defaultEcsKeyPair", EcsKeyPairArgs.builder()
 *             .keyPairName(String.format("%s-%s", name,defaultInteger.result()))
 *             .build());
 * 
 *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
 *             .name(name)
 *             .vpcId(defaultNetwork.id())
 *             .build());
 * 
 *         var defaultRole = new Role("defaultRole", RoleArgs.builder()
 *             .name(name)
 *             .document("""
 *     {
 *         \"Statement\": [
 *         {
 *             \"Action\": \"sts:AssumeRole\",
 *             \"Effect\": \"Allow\",
 *             \"Principal\": {
 *             \"Service\": [
 *                 \"emr.aliyuncs.com\",
 *                 \"ecs.aliyuncs.com\"
 *             ]
 *             }
 *         }
 *         ],
 *         \"Version\": \"1\"
 *     }
 *             """)
 *             .description("this is a role example.")
 *             .force(true)
 *             .build());
 * 
 *         var defaultCluster = new Cluster("defaultCluster", ClusterArgs.builder()
 *             .nodeGroups(            
 *                 ClusterNodeGroupArgs.builder()
 *                     .vswitchIds(defaultSwitch.id())
 *                     .instanceTypes("ecs.g7.xlarge")
 *                     .nodeCount(1)
 *                     .spotInstanceRemedy(false)
 *                     .dataDisks(ClusterNodeGroupDataDiskArgs.builder()
 *                         .count(3)
 *                         .category("cloud_essd")
 *                         .size(80)
 *                         .performanceLevel("PL0")
 *                         .build())
 *                     .nodeGroupName("emr-master")
 *                     .paymentType("PayAsYouGo")
 *                     .withPublicIp(false)
 *                     .gracefulShutdown(false)
 *                     .systemDisk(ClusterNodeGroupSystemDiskArgs.builder()
 *                         .category("cloud_essd")
 *                         .size(80)
 *                         .performanceLevel("PL0")
 *                         .count(1)
 *                         .build())
 *                     .nodeGroupType("MASTER")
 *                     .build(),
 *                 ClusterNodeGroupArgs.builder()
 *                     .spotInstanceRemedy(false)
 *                     .nodeGroupType("CORE")
 *                     .vswitchIds(defaultSwitch.id())
 *                     .nodeCount(2)
 *                     .gracefulShutdown(false)
 *                     .systemDisk(ClusterNodeGroupSystemDiskArgs.builder()
 *                         .performanceLevel("PL0")
 *                         .count(1)
 *                         .category("cloud_essd")
 *                         .size(80)
 *                         .build())
 *                     .dataDisks(ClusterNodeGroupDataDiskArgs.builder()
 *                         .count(3)
 *                         .performanceLevel("PL0")
 *                         .category("cloud_essd")
 *                         .size(80)
 *                         .build())
 *                     .nodeGroupName("emr-core")
 *                     .paymentType("PayAsYouGo")
 *                     .instanceTypes("ecs.g7.xlarge")
 *                     .withPublicIp(false)
 *                     .build())
 *             .deployMode("NORMAL")
 *             .tags(Map.ofEntries(
 *                 Map.entry("Created", "TF"),
 *                 Map.entry("For", "example")
 *             ))
 *             .releaseVersion("EMR-5.10.0")
 *             .applications(            
 *                 "HADOOP-COMMON",
 *                 "HDFS",
 *                 "YARN")
 *             .nodeAttributes(ClusterNodeAttributeArgs.builder()
 *                 .zoneId(defaultGetZones.zones()[0].id())
 *                 .keyPairName(defaultEcsKeyPair.id())
 *                 .dataDiskEncrypted(true)
 *                 .dataDiskKmsKeyId(defaultGetKeys.ids()[0])
 *                 .vpcId(defaultNetwork.id())
 *                 .ramRole(defaultRole.name())
 *                 .securityGroupId(defaultSecurityGroup.id())
 *                 .build())
 *             .resourceGroupId(default_.ids()[0])
 *             .clusterName(name)
 *             .paymentType("PayAsYouGo")
 *             .clusterType("DATAFLOW")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Aliclioud E-MapReduce cluster can be imported using the id e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:emrv2/cluster:Cluster default &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:emrv2/cluster:Cluster")
public class Cluster extends com.pulumi.resources.CustomResource {
    /**
     * The application configurations of EMR cluster. See `application_configs` below.
     * 
     */
    @Export(name="applicationConfigs", refs={List.class,ClusterApplicationConfig.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ClusterApplicationConfig>> applicationConfigs;

    /**
     * @return The application configurations of EMR cluster. See `application_configs` below.
     * 
     */
    public Output<Optional<List<ClusterApplicationConfig>>> applicationConfigs() {
        return Codegen.optional(this.applicationConfigs);
    }
    /**
     * The applications of EMR cluster to be installed, e.g. HADOOP-COMMON, HDFS, YARN, HIVE, SPARK2, SPARK3, ZOOKEEPER etc. You can find all valid applications in emr web console.
     * 
     */
    @Export(name="applications", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> applications;

    /**
     * @return The applications of EMR cluster to be installed, e.g. HADOOP-COMMON, HDFS, YARN, HIVE, SPARK2, SPARK3, ZOOKEEPER etc. You can find all valid applications in emr web console.
     * 
     */
    public Output<List<String>> applications() {
        return this.applications;
    }
    /**
     * The bootstrap scripts to be effected when creating emr-cluster or resize emr-cluster, if priority is not specified, the scripts will execute in the declared order. See `bootstrap_scripts` below.
     * 
     */
    @Export(name="bootstrapScripts", refs={List.class,ClusterBootstrapScript.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ClusterBootstrapScript>> bootstrapScripts;

    /**
     * @return The bootstrap scripts to be effected when creating emr-cluster or resize emr-cluster, if priority is not specified, the scripts will execute in the declared order. See `bootstrap_scripts` below.
     * 
     */
    public Output<Optional<List<ClusterBootstrapScript>>> bootstrapScripts() {
        return Codegen.optional(this.bootstrapScripts);
    }
    /**
     * The name of emr cluster. The name length must be less than 64. Supported characters: chinese character, english character, number, &#34;-&#34;, &#34;_&#34;.
     * 
     */
    @Export(name="clusterName", refs={String.class}, tree="[0]")
    private Output<String> clusterName;

    /**
     * @return The name of emr cluster. The name length must be less than 64. Supported characters: chinese character, english character, number, &#34;-&#34;, &#34;_&#34;.
     * 
     */
    public Output<String> clusterName() {
        return this.clusterName;
    }
    /**
     * EMR Cluster Type, e.g. DATALAKE, OLAP, DATAFLOW, DATASERVING, CUSTOM etc. You can find all valid EMR cluster type in emr web console.
     * 
     */
    @Export(name="clusterType", refs={String.class}, tree="[0]")
    private Output<String> clusterType;

    /**
     * @return EMR Cluster Type, e.g. DATALAKE, OLAP, DATAFLOW, DATASERVING, CUSTOM etc. You can find all valid EMR cluster type in emr web console.
     * 
     */
    public Output<String> clusterType() {
        return this.clusterType;
    }
    /**
     * The deletion protection of EMR cluster.
     * 
     */
    @Export(name="deletionProtection", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> deletionProtection;

    /**
     * @return The deletion protection of EMR cluster.
     * 
     */
    public Output<Optional<Boolean>> deletionProtection() {
        return Codegen.optional(this.deletionProtection);
    }
    /**
     * The deploy mode of EMR cluster. Supported value: NORMAL or HA.
     * 
     */
    @Export(name="deployMode", refs={String.class}, tree="[0]")
    private Output<String> deployMode;

    /**
     * @return The deploy mode of EMR cluster. Supported value: NORMAL or HA.
     * 
     */
    public Output<String> deployMode() {
        return this.deployMode;
    }
    /**
     * The log collect strategy of EMR cluster.
     * 
     */
    @Export(name="logCollectStrategy", refs={String.class}, tree="[0]")
    private Output<String> logCollectStrategy;

    /**
     * @return The log collect strategy of EMR cluster.
     * 
     */
    public Output<String> logCollectStrategy() {
        return this.logCollectStrategy;
    }
    /**
     * The node attributes of ecs instances which the emr-cluster belongs. See `node_attributes` below.
     * 
     */
    @Export(name="nodeAttributes", refs={List.class,ClusterNodeAttribute.class}, tree="[0,1]")
    private Output<List<ClusterNodeAttribute>> nodeAttributes;

    /**
     * @return The node attributes of ecs instances which the emr-cluster belongs. See `node_attributes` below.
     * 
     */
    public Output<List<ClusterNodeAttribute>> nodeAttributes() {
        return this.nodeAttributes;
    }
    /**
     * Groups of node, You can specify MASTER as a group, CORE as a group (just like the above example). See `node_groups` below. **NOTE:** Since version 1.227.0, the type of `node_groups` changed from Set to List.
     * 
     */
    @Export(name="nodeGroups", refs={List.class,ClusterNodeGroup.class}, tree="[0,1]")
    private Output<List<ClusterNodeGroup>> nodeGroups;

    /**
     * @return Groups of node, You can specify MASTER as a group, CORE as a group (just like the above example). See `node_groups` below. **NOTE:** Since version 1.227.0, the type of `node_groups` changed from Set to List.
     * 
     */
    public Output<List<ClusterNodeGroup>> nodeGroups() {
        return this.nodeGroups;
    }
    /**
     * Payment Type for this cluster. Supported value: PayAsYouGo or Subscription. **NOTE:** From version 1.227.0, `payment_type` can be modified.
     * 
     */
    @Export(name="paymentType", refs={String.class}, tree="[0]")
    private Output<String> paymentType;

    /**
     * @return Payment Type for this cluster. Supported value: PayAsYouGo or Subscription. **NOTE:** From version 1.227.0, `payment_type` can be modified.
     * 
     */
    public Output<String> paymentType() {
        return this.paymentType;
    }
    /**
     * EMR Version, e.g. EMR-5.10.0. You can find the all valid EMR Version in emr web console.
     * 
     */
    @Export(name="releaseVersion", refs={String.class}, tree="[0]")
    private Output<String> releaseVersion;

    /**
     * @return EMR Version, e.g. EMR-5.10.0. You can find the all valid EMR Version in emr web console.
     * 
     */
    public Output<String> releaseVersion() {
        return this.releaseVersion;
    }
    /**
     * The Id of resource group which the emr-cluster belongs.
     * 
     */
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupId;

    /**
     * @return The Id of resource group which the emr-cluster belongs.
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * The security mode of EMR cluster. Supported value: NORMAL or KERBEROS.
     * 
     */
    @Export(name="securityMode", refs={String.class}, tree="[0]")
    private Output<String> securityMode;

    /**
     * @return The security mode of EMR cluster. Supported value: NORMAL or KERBEROS.
     * 
     */
    public Output<String> securityMode() {
        return this.securityMode;
    }
    /**
     * The detail configuration of subscription payment type. See `subscription_config` below.
     * 
     */
    @Export(name="subscriptionConfig", refs={ClusterSubscriptionConfig.class}, tree="[0]")
    private Output</* @Nullable */ ClusterSubscriptionConfig> subscriptionConfig;

    /**
     * @return The detail configuration of subscription payment type. See `subscription_config` below.
     * 
     */
    public Output<Optional<ClusterSubscriptionConfig>> subscriptionConfig() {
        return Codegen.optional(this.subscriptionConfig);
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Cluster(java.lang.String name) {
        this(name, ClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Cluster(java.lang.String name, ClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Cluster(java.lang.String name, ClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:emrv2/cluster:Cluster", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Cluster(java.lang.String name, Output<java.lang.String> id, @Nullable ClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:emrv2/cluster:Cluster", name, state, makeResourceOptions(options, id), false);
    }

    private static ClusterArgs makeArgs(ClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ClusterArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Cluster get(java.lang.String name, Output<java.lang.String> id, @Nullable ClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Cluster(name, id, state, options);
    }
}
