// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.outputs;

import com.pulumi.alicloud.cms.outputs.GetHybridMonitorSlsTasksTaskSlsProcessConfigExpress;
import com.pulumi.alicloud.cms.outputs.GetHybridMonitorSlsTasksTaskSlsProcessConfigFilter;
import com.pulumi.alicloud.cms.outputs.GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupBy;
import com.pulumi.alicloud.cms.outputs.GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetHybridMonitorSlsTasksTaskSlsProcessConfig {
    /**
     * @return The extended field that specifies the result of basic operations that are performed on aggregation results.
     * 
     */
    private List<GetHybridMonitorSlsTasksTaskSlsProcessConfigExpress> expresses;
    /**
     * @return The conditions that are used to filter logs imported from Log Service.
     * 
     */
    private List<GetHybridMonitorSlsTasksTaskSlsProcessConfigFilter> filters;
    /**
     * @return The dimension based on which data is aggregated. This parameter is equivalent to the GROUP BY clause in SQL.
     * 
     */
    private List<GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupBy> groupBies;
    /**
     * @return The method that is used to aggregate logs imported from Log Service.
     * 
     */
    private List<GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic> statistics;

    private GetHybridMonitorSlsTasksTaskSlsProcessConfig() {}
    /**
     * @return The extended field that specifies the result of basic operations that are performed on aggregation results.
     * 
     */
    public List<GetHybridMonitorSlsTasksTaskSlsProcessConfigExpress> expresses() {
        return this.expresses;
    }
    /**
     * @return The conditions that are used to filter logs imported from Log Service.
     * 
     */
    public List<GetHybridMonitorSlsTasksTaskSlsProcessConfigFilter> filters() {
        return this.filters;
    }
    /**
     * @return The dimension based on which data is aggregated. This parameter is equivalent to the GROUP BY clause in SQL.
     * 
     */
    public List<GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupBy> groupBies() {
        return this.groupBies;
    }
    /**
     * @return The method that is used to aggregate logs imported from Log Service.
     * 
     */
    public List<GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic> statistics() {
        return this.statistics;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHybridMonitorSlsTasksTaskSlsProcessConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetHybridMonitorSlsTasksTaskSlsProcessConfigExpress> expresses;
        private List<GetHybridMonitorSlsTasksTaskSlsProcessConfigFilter> filters;
        private List<GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupBy> groupBies;
        private List<GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic> statistics;
        public Builder() {}
        public Builder(GetHybridMonitorSlsTasksTaskSlsProcessConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expresses = defaults.expresses;
    	      this.filters = defaults.filters;
    	      this.groupBies = defaults.groupBies;
    	      this.statistics = defaults.statistics;
        }

        @CustomType.Setter
        public Builder expresses(List<GetHybridMonitorSlsTasksTaskSlsProcessConfigExpress> expresses) {
            this.expresses = Objects.requireNonNull(expresses);
            return this;
        }
        public Builder expresses(GetHybridMonitorSlsTasksTaskSlsProcessConfigExpress... expresses) {
            return expresses(List.of(expresses));
        }
        @CustomType.Setter
        public Builder filters(List<GetHybridMonitorSlsTasksTaskSlsProcessConfigFilter> filters) {
            this.filters = Objects.requireNonNull(filters);
            return this;
        }
        public Builder filters(GetHybridMonitorSlsTasksTaskSlsProcessConfigFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder groupBies(List<GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupBy> groupBies) {
            this.groupBies = Objects.requireNonNull(groupBies);
            return this;
        }
        public Builder groupBies(GetHybridMonitorSlsTasksTaskSlsProcessConfigGroupBy... groupBies) {
            return groupBies(List.of(groupBies));
        }
        @CustomType.Setter
        public Builder statistics(List<GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic> statistics) {
            this.statistics = Objects.requireNonNull(statistics);
            return this;
        }
        public Builder statistics(GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic... statistics) {
            return statistics(List.of(statistics));
        }
        public GetHybridMonitorSlsTasksTaskSlsProcessConfig build() {
            final var o = new GetHybridMonitorSlsTasksTaskSlsProcessConfig();
            o.expresses = expresses;
            o.filters = filters;
            o.groupBies = groupBies;
            o.statistics = statistics;
            return o;
        }
    }
}
