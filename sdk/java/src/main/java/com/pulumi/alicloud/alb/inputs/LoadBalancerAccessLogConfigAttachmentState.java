// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadBalancerAccessLogConfigAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final LoadBalancerAccessLogConfigAttachmentState Empty = new LoadBalancerAccessLogConfigAttachmentState();

    /**
     * The creation time of the resource
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time of the resource
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The ID of the load balancing instance.
     * 
     */
    @Import(name="loadBalancerId")
    private @Nullable Output<String> loadBalancerId;

    /**
     * @return The ID of the load balancing instance.
     * 
     */
    public Optional<Output<String>> loadBalancerId() {
        return Optional.ofNullable(this.loadBalancerId);
    }

    /**
     * The log items shipped by the access log.
     * 
     */
    @Import(name="logProject")
    private @Nullable Output<String> logProject;

    /**
     * @return The log items shipped by the access log.
     * 
     */
    public Optional<Output<String>> logProject() {
        return Optional.ofNullable(this.logProject);
    }

    /**
     * Logstore for log delivery.
     * 
     */
    @Import(name="logStore")
    private @Nullable Output<String> logStore;

    /**
     * @return Logstore for log delivery.
     * 
     */
    public Optional<Output<String>> logStore() {
        return Optional.ofNullable(this.logStore);
    }

    private LoadBalancerAccessLogConfigAttachmentState() {}

    private LoadBalancerAccessLogConfigAttachmentState(LoadBalancerAccessLogConfigAttachmentState $) {
        this.createTime = $.createTime;
        this.loadBalancerId = $.loadBalancerId;
        this.logProject = $.logProject;
        this.logStore = $.logStore;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerAccessLogConfigAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerAccessLogConfigAttachmentState $;

        public Builder() {
            $ = new LoadBalancerAccessLogConfigAttachmentState();
        }

        public Builder(LoadBalancerAccessLogConfigAttachmentState defaults) {
            $ = new LoadBalancerAccessLogConfigAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime The creation time of the resource
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the resource
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param loadBalancerId The ID of the load balancing instance.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerId(@Nullable Output<String> loadBalancerId) {
            $.loadBalancerId = loadBalancerId;
            return this;
        }

        /**
         * @param loadBalancerId The ID of the load balancing instance.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerId(String loadBalancerId) {
            return loadBalancerId(Output.of(loadBalancerId));
        }

        /**
         * @param logProject The log items shipped by the access log.
         * 
         * @return builder
         * 
         */
        public Builder logProject(@Nullable Output<String> logProject) {
            $.logProject = logProject;
            return this;
        }

        /**
         * @param logProject The log items shipped by the access log.
         * 
         * @return builder
         * 
         */
        public Builder logProject(String logProject) {
            return logProject(Output.of(logProject));
        }

        /**
         * @param logStore Logstore for log delivery.
         * 
         * @return builder
         * 
         */
        public Builder logStore(@Nullable Output<String> logStore) {
            $.logStore = logStore;
            return this;
        }

        /**
         * @param logStore Logstore for log delivery.
         * 
         * @return builder
         * 
         */
        public Builder logStore(String logStore) {
            return logStore(Output.of(logStore));
        }

        public LoadBalancerAccessLogConfigAttachmentState build() {
            return $;
        }
    }

}
