// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nas;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.nas.FileSystemArgs;
import com.pulumi.alicloud.nas.inputs.FileSystemState;
import com.pulumi.alicloud.nas.outputs.FileSystemNfsAcl;
import com.pulumi.alicloud.nas.outputs.FileSystemOptions;
import com.pulumi.alicloud.nas.outputs.FileSystemRecycleBin;
import com.pulumi.alicloud.nas.outputs.FileSystemSmbAcl;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a File Storage (NAS) File System resource.
 * 
 * File System Instance.
 * 
 * For information about File Storage (NAS) File System and how to use it, see [What is File System](https://www.alibabacloud.com/help/en/nas/developer-reference/api-nas-2017-06-26-createfilesystem).
 * 
 * &gt; **NOTE:** Available since v1.33.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.nas.NasFunctions;
 * import com.pulumi.alicloud.nas.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.nas.FileSystem;
 * import com.pulumi.alicloud.nas.FileSystemArgs;
 * import com.pulumi.alicloud.nas.inputs.FileSystemRecycleBinArgs;
 * import com.pulumi.alicloud.nas.inputs.FileSystemNfsAclArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         final var default = NasFunctions.getZones(GetZonesArgs.builder()
 *             .fileSystemType("standard")
 *             .build());
 * 
 *         var defaultFileSystem = new FileSystem("defaultFileSystem", FileSystemArgs.builder()
 *             .protocolType("NFS")
 *             .storageType("Capacity")
 *             .description(name)
 *             .encryptType(1)
 *             .fileSystemType("standard")
 *             .recycleBin(FileSystemRecycleBinArgs.builder()
 *                 .status("Enable")
 *                 .reservedDays(10)
 *                 .build())
 *             .nfsAcl(FileSystemNfsAclArgs.builder()
 *                 .enabled(true)
 *                 .build())
 *             .zoneId(default_.zones()[0].zoneId())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * File Storage (NAS) File System can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:nas/fileSystem:FileSystem example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:nas/fileSystem:FileSystem")
public class FileSystem extends com.pulumi.resources.CustomResource {
    /**
     * File system capacity.
     * 
     * Unit: GiB, required and valid when FileSystemType = extreme or cpfs.
     * 
     * For optional values, please refer to the actual specifications on the purchase page:
     * -[Fast NAS Pay-As-You-Go Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme_post#/buy)
     * -[Fast NAS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme#/buy)
     * -[Parallel File System CPFS Pay-As-You-Go Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_cpfs_post#/buy)
     * -[Parallel File System CPFS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=cpfs#/buy)
     * 
     */
    @Export(name="capacity", refs={Integer.class}, tree="[0]")
    private Output<Integer> capacity;

    /**
     * @return File system capacity.
     * 
     * Unit: GiB, required and valid when FileSystemType = extreme or cpfs.
     * 
     * For optional values, please refer to the actual specifications on the purchase page:
     * -[Fast NAS Pay-As-You-Go Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme_post#/buy)
     * -[Fast NAS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme#/buy)
     * -[Parallel File System CPFS Pay-As-You-Go Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_cpfs_post#/buy)
     * -[Parallel File System CPFS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=cpfs#/buy)
     * 
     */
    public Output<Integer> capacity() {
        return this.capacity;
    }
    /**
     * CreateTime
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return CreateTime
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * File system description.
     * 
     * Restrictions:
     * - 2~128 English or Chinese characters in length.
     * - Must start with upper and lower case letters or Chinese, and cannot start with&#39;http: // &#39;and&#39;https.
     * - Can contain numbers, colons (:), underscores (_), or dashes (-).
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return File system description.
     * 
     * Restrictions:
     * - 2~128 English or Chinese characters in length.
     * - Must start with upper and lower case letters or Chinese, and cannot start with&#39;http: // &#39;and&#39;https.
     * - Can contain numbers, colons (:), underscores (_), or dashes (-).
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Whether the file system is encrypted.
     * 
     * Use the KMS service hosting key to encrypt and store the file system disk data. When reading and writing encrypted data, there is no need to decrypt it.
     * 
     * Value:
     * - 0 (default): not encrypted.
     * - 1:NAS managed key. NAS managed keys are supported when FileSystemType = standard or extreme.
     * - 2: User management key. You can manage keys only when FileSystemType = extreme.
     * 
     */
    @Export(name="encryptType", refs={Integer.class}, tree="[0]")
    private Output<Integer> encryptType;

    /**
     * @return Whether the file system is encrypted.
     * 
     * Use the KMS service hosting key to encrypt and store the file system disk data. When reading and writing encrypted data, there is no need to decrypt it.
     * 
     * Value:
     * - 0 (default): not encrypted.
     * - 1:NAS managed key. NAS managed keys are supported when FileSystemType = standard or extreme.
     * - 2: User management key. You can manage keys only when FileSystemType = extreme.
     * 
     */
    public Output<Integer> encryptType() {
        return this.encryptType;
    }
    /**
     * File system type.
     * 
     * Value:
     * - standard (default): Universal NAS
     * - extreme: extreme NAS
     * - cpfs: file storage CPFS
     * 
     */
    @Export(name="fileSystemType", refs={String.class}, tree="[0]")
    private Output<String> fileSystemType;

    /**
     * @return File system type.
     * 
     * Value:
     * - standard (default): Universal NAS
     * - extreme: extreme NAS
     * - cpfs: file storage CPFS
     * 
     */
    public Output<String> fileSystemType() {
        return this.fileSystemType;
    }
    /**
     * String of keytab file content encrypted by base64
     * 
     */
    @Export(name="keytab", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> keytab;

    /**
     * @return String of keytab file content encrypted by base64
     * 
     */
    public Output<Optional<String>> keytab() {
        return Codegen.optional(this.keytab);
    }
    /**
     * String of the keytab file content encrypted by MD5
     * 
     */
    @Export(name="keytabMd5", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> keytabMd5;

    /**
     * @return String of the keytab file content encrypted by MD5
     * 
     */
    public Output<Optional<String>> keytabMd5() {
        return Codegen.optional(this.keytabMd5);
    }
    /**
     * The ID of the KMS key.
     * This parameter is required only when EncryptType = 2.
     * 
     */
    @Export(name="kmsKeyId", refs={String.class}, tree="[0]")
    private Output<String> kmsKeyId;

    /**
     * @return The ID of the KMS key.
     * This parameter is required only when EncryptType = 2.
     * 
     */
    public Output<String> kmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * NFS ACL See `nfs_acl` below.
     * 
     */
    @Export(name="nfsAcl", refs={FileSystemNfsAcl.class}, tree="[0]")
    private Output<FileSystemNfsAcl> nfsAcl;

    /**
     * @return NFS ACL See `nfs_acl` below.
     * 
     */
    public Output<FileSystemNfsAcl> nfsAcl() {
        return this.nfsAcl;
    }
    /**
     * Option. See `options` below.
     * 
     */
    @Export(name="options", refs={FileSystemOptions.class}, tree="[0]")
    private Output<FileSystemOptions> options;

    /**
     * @return Option. See `options` below.
     * 
     */
    public Output<FileSystemOptions> options() {
        return this.options;
    }
    /**
     * File transfer protocol type.
     * - When FileSystemType = standard, the values are NFS and SMB.
     * - When FileSystemType = extreme, the value is NFS.
     * - When FileSystemType = cpfs, the value is cpfs.
     * 
     */
    @Export(name="protocolType", refs={String.class}, tree="[0]")
    private Output<String> protocolType;

    /**
     * @return File transfer protocol type.
     * - When FileSystemType = standard, the values are NFS and SMB.
     * - When FileSystemType = extreme, the value is NFS.
     * - When FileSystemType = cpfs, the value is cpfs.
     * 
     */
    public Output<String> protocolType() {
        return this.protocolType;
    }
    /**
     * Recycle Bin See `recycle_bin` below.
     * 
     */
    @Export(name="recycleBin", refs={FileSystemRecycleBin.class}, tree="[0]")
    private Output<FileSystemRecycleBin> recycleBin;

    /**
     * @return Recycle Bin See `recycle_bin` below.
     * 
     */
    public Output<FileSystemRecycleBin> recycleBin() {
        return this.recycleBin;
    }
    /**
     * RegionId
     * 
     */
    @Export(name="regionId", refs={String.class}, tree="[0]")
    private Output<String> regionId;

    /**
     * @return RegionId
     * 
     */
    public Output<String> regionId() {
        return this.regionId;
    }
    /**
     * The ID of the resource group.
     * 
     */
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group.
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * SMB ACL See `smb_acl` below.
     * 
     */
    @Export(name="smbAcl", refs={FileSystemSmbAcl.class}, tree="[0]")
    private Output<FileSystemSmbAcl> smbAcl;

    /**
     * @return SMB ACL See `smb_acl` below.
     * 
     */
    public Output<FileSystemSmbAcl> smbAcl() {
        return this.smbAcl;
    }
    /**
     * Only extreme NAS is supported.
     * 
     * &gt; **NOTE:** A file system is created from a snapshot. The version of the created file system is the same as that of the snapshot source file system. For example, if the source file system version of the snapshot is 1 and you need to create A file system of version 2, you can first create A file system A from the snapshot, then create A file system B that meets the configuration of version 2, copy the data in file system A to file system B, and migrate the business to file system B after the copy is completed.
     * 
     */
    @Export(name="snapshotId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> snapshotId;

    /**
     * @return Only extreme NAS is supported.
     * 
     * &gt; **NOTE:** A file system is created from a snapshot. The version of the created file system is the same as that of the snapshot source file system. For example, if the source file system version of the snapshot is 1 and you need to create A file system of version 2, you can first create A file system A from the snapshot, then create A file system B that meets the configuration of version 2, copy the data in file system A to file system B, and migrate the business to file system B after the copy is completed.
     * 
     */
    public Output<Optional<String>> snapshotId() {
        return Codegen.optional(this.snapshotId);
    }
    /**
     * File system status. Includes:(such as creating a mount point) can only be performed when the file system is in the Running state.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return File system status. Includes:(such as creating a mount point) can only be performed when the file system is in the Running state.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The storage type.
     * - When FileSystemType = standard, the values are Performance, Capacity, and Premium.
     * - When FileSystemType = extreme, the value is standard or advance.
     * - When FileSystemType = cpfs, the values are advance_100(100MB/s/TiB baseline) and advance_200(200MB/s/TiB baseline).
     * 
     */
    @Export(name="storageType", refs={String.class}, tree="[0]")
    private Output<String> storageType;

    /**
     * @return The storage type.
     * - When FileSystemType = standard, the values are Performance, Capacity, and Premium.
     * - When FileSystemType = extreme, the value is standard or advance.
     * - When FileSystemType = cpfs, the values are advance_100(100MB/s/TiB baseline) and advance_200(200MB/s/TiB baseline).
     * 
     */
    public Output<String> storageType() {
        return this.storageType;
    }
    /**
     * Label information collection.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Label information collection.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The ID of the VPC network.
     * This parameter must be configured when FileSystemType = cpfs.
     * When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
     * 
     */
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpcId;

    /**
     * @return The ID of the VPC network.
     * This parameter must be configured when FileSystemType = cpfs.
     * When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
     * 
     */
    public Output<Optional<String>> vpcId() {
        return Codegen.optional(this.vpcId);
    }
    /**
     * The ID of the switch.
     * This parameter must be configured when FileSystemType = cpfs.
     * When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
     * 
     */
    @Export(name="vswitchId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vswitchId;

    /**
     * @return The ID of the switch.
     * This parameter must be configured when FileSystemType = cpfs.
     * When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
     * 
     */
    public Output<Optional<String>> vswitchId() {
        return Codegen.optional(this.vswitchId);
    }
    /**
     * The zone ID.
     * 
     * The usable area refers to the physical area where power and network are independent of each other in the same area.
     * 
     * When the FileSystemType is set to standard, this parameter is optional. By default, a zone that meets the conditions is randomly selected based on the ProtocolType and StorageType configurations. This parameter is required when FileSystemType = extreme or FileSystemType = cpfs.
     * 
     * &gt; **NOTE:** - file systems in different zones in the same region communicate with ECS cloud servers.
     * 
     * &gt; **NOTE:** - We recommend that the file system and the ECS instance belong to the same zone to avoid cross-zone latency.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return The zone ID.
     * 
     * The usable area refers to the physical area where power and network are independent of each other in the same area.
     * 
     * When the FileSystemType is set to standard, this parameter is optional. By default, a zone that meets the conditions is randomly selected based on the ProtocolType and StorageType configurations. This parameter is required when FileSystemType = extreme or FileSystemType = cpfs.
     * 
     * &gt; **NOTE:** - file systems in different zones in the same region communicate with ECS cloud servers.
     * 
     * &gt; **NOTE:** - We recommend that the file system and the ECS instance belong to the same zone to avoid cross-zone latency.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FileSystem(java.lang.String name) {
        this(name, FileSystemArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FileSystem(java.lang.String name, FileSystemArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FileSystem(java.lang.String name, FileSystemArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:nas/fileSystem:FileSystem", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private FileSystem(java.lang.String name, Output<java.lang.String> id, @Nullable FileSystemState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:nas/fileSystem:FileSystem", name, state, makeResourceOptions(options, id), false);
    }

    private static FileSystemArgs makeArgs(FileSystemArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FileSystemArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FileSystem get(java.lang.String name, Output<java.lang.String> id, @Nullable FileSystemState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FileSystem(name, id, state, options);
    }
}
