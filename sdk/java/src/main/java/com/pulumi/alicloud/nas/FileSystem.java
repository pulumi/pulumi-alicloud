// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nas;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.nas.FileSystemArgs;
import com.pulumi.alicloud.nas.inputs.FileSystemState;
import com.pulumi.alicloud.nas.outputs.FileSystemNfsAcl;
import com.pulumi.alicloud.nas.outputs.FileSystemRecycleBin;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a File Storage (NAS) File System resource.
 * 
 * For information about File Storage (NAS) File System and how to use it, see [What is File System](https://www.alibabacloud.com/help/en/nas/developer-reference/api-nas-2017-06-26-createfilesystem).
 * 
 * &gt; **NOTE:** Available since v1.33.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.nas.NasFunctions;
 * import com.pulumi.alicloud.nas.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.nas.FileSystem;
 * import com.pulumi.alicloud.nas.FileSystemArgs;
 * import com.pulumi.alicloud.nas.inputs.FileSystemRecycleBinArgs;
 * import com.pulumi.alicloud.nas.inputs.FileSystemNfsAclArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         final var default = NasFunctions.getZones(GetZonesArgs.builder()
 *             .fileSystemType("standard")
 *             .build());
 * 
 *         var defaultFileSystem = new FileSystem("defaultFileSystem", FileSystemArgs.builder()
 *             .protocolType("NFS")
 *             .storageType("Capacity")
 *             .description(name)
 *             .encryptType(1)
 *             .fileSystemType("standard")
 *             .recycleBin(FileSystemRecycleBinArgs.builder()
 *                 .status("Enable")
 *                 .reservedDays("10")
 *                 .build())
 *             .nfsAcl(FileSystemNfsAclArgs.builder()
 *                 .enabled(true)
 *                 .build())
 *             .zoneId(default_.zones()[0].zoneId())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.nas.NasFunctions;
 * import com.pulumi.alicloud.nas.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.nas.FileSystem;
 * import com.pulumi.alicloud.nas.FileSystemArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         final var default = NasFunctions.getZones(GetZonesArgs.builder()
 *             .fileSystemType("extreme")
 *             .build());
 * 
 *         var defaultFileSystem = new FileSystem("defaultFileSystem", FileSystemArgs.builder()
 *             .protocolType("NFS")
 *             .storageType("standard")
 *             .capacity(100)
 *             .description(name)
 *             .encryptType(1)
 *             .fileSystemType("extreme")
 *             .zoneId(default_.zones()[0].zoneId())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.nas.NasFunctions;
 * import com.pulumi.alicloud.nas.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.nas.FileSystem;
 * import com.pulumi.alicloud.nas.FileSystemArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         final var default = NasFunctions.getZones(GetZonesArgs.builder()
 *             .fileSystemType("cpfs")
 *             .build());
 * 
 *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
 *             .vpcName(name)
 *             .cidrBlock("172.17.3.0/24")
 *             .build());
 * 
 *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
 *             .vswitchName(name)
 *             .cidrBlock("172.17.3.0/24")
 *             .vpcId(defaultNetwork.id())
 *             .zoneId(default_.zones()[1].zoneId())
 *             .build());
 * 
 *         var defaultFileSystem = new FileSystem("defaultFileSystem", FileSystemArgs.builder()
 *             .protocolType("cpfs")
 *             .storageType("advance_100")
 *             .capacity(5000)
 *             .description(name)
 *             .fileSystemType("cpfs")
 *             .vswitchId(defaultSwitch.id())
 *             .vpcId(defaultNetwork.id())
 *             .zoneId(default_.zones()[1].zoneId())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * File Storage (NAS) File System can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:nas/fileSystem:FileSystem example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:nas/fileSystem:FileSystem")
public class FileSystem extends com.pulumi.resources.CustomResource {
    /**
     * The capacity of the file system. Unit: GiB. **Note:** If `file_system_type` is set to `extreme` or `cpfs`, `capacity` must be set.
     * 
     */
    @Export(name="capacity", refs={Integer.class}, tree="[0]")
    private Output<Integer> capacity;

    /**
     * @return The capacity of the file system. Unit: GiB. **Note:** If `file_system_type` is set to `extreme` or `cpfs`, `capacity` must be set.
     * 
     */
    public Output<Integer> capacity() {
        return this.capacity;
    }
    /**
     * (Available since v1.236.0) The time when the file system was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return (Available since v1.236.0) The time when the file system was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The description of the file system.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the file system.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Specifies whether to encrypt data in the file system. Default value: `0`. Valid values:
     * 
     */
    @Export(name="encryptType", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> encryptType;

    /**
     * @return Specifies whether to encrypt data in the file system. Default value: `0`. Valid values:
     * 
     */
    public Output<Optional<Integer>> encryptType() {
        return Codegen.optional(this.encryptType);
    }
    /**
     * The type of the file system. Default value: `standard`. Valid values: `standard`, `extreme`, `cpfs`.
     * 
     */
    @Export(name="fileSystemType", refs={String.class}, tree="[0]")
    private Output<String> fileSystemType;

    /**
     * @return The type of the file system. Default value: `standard`. Valid values: `standard`, `extreme`, `cpfs`.
     * 
     */
    public Output<String> fileSystemType() {
        return this.fileSystemType;
    }
    /**
     * The ID of the KMS-managed key. **Note:** If `encrypt_type` is set to `2`, `kms_key_id` must be set.
     * 
     */
    @Export(name="kmsKeyId", refs={String.class}, tree="[0]")
    private Output<String> kmsKeyId;

    /**
     * @return The ID of the KMS-managed key. **Note:** If `encrypt_type` is set to `2`, `kms_key_id` must be set.
     * 
     */
    public Output<String> kmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * The NFS ACL feature of the file system. See `nfs_acl` below.
     * &gt; **NOTE:** `nfs_acl` takes effect only if `file_system_type` is set to `standard`.
     * 
     */
    @Export(name="nfsAcl", refs={FileSystemNfsAcl.class}, tree="[0]")
    private Output<FileSystemNfsAcl> nfsAcl;

    /**
     * @return The NFS ACL feature of the file system. See `nfs_acl` below.
     * &gt; **NOTE:** `nfs_acl` takes effect only if `file_system_type` is set to `standard`.
     * 
     */
    public Output<FileSystemNfsAcl> nfsAcl() {
        return this.nfsAcl;
    }
    /**
     * The protocol type of the file system. Valid values:
     * - If `file_system_type` is set to `standard`. Valid values: `NFS`, `SMB`.
     * - If `file_system_type` is set to `extreme`. Valid values: `NFS`.
     * - If `file_system_type` is set to `cpfs`. Valid values: `cpfs`.
     * 
     */
    @Export(name="protocolType", refs={String.class}, tree="[0]")
    private Output<String> protocolType;

    /**
     * @return The protocol type of the file system. Valid values:
     * - If `file_system_type` is set to `standard`. Valid values: `NFS`, `SMB`.
     * - If `file_system_type` is set to `extreme`. Valid values: `NFS`.
     * - If `file_system_type` is set to `cpfs`. Valid values: `cpfs`.
     * 
     */
    public Output<String> protocolType() {
        return this.protocolType;
    }
    /**
     * The recycle bin feature of the file system. See `recycle_bin` below.
     * &gt; **NOTE:** `recycle_bin` takes effect only if `file_system_type` is set to `standard`.
     * 
     */
    @Export(name="recycleBin", refs={FileSystemRecycleBin.class}, tree="[0]")
    private Output<FileSystemRecycleBin> recycleBin;

    /**
     * @return The recycle bin feature of the file system. See `recycle_bin` below.
     * &gt; **NOTE:** `recycle_bin` takes effect only if `file_system_type` is set to `standard`.
     * 
     */
    public Output<FileSystemRecycleBin> recycleBin() {
        return this.recycleBin;
    }
    /**
     * The ID of the resource group.
     * 
     */
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group.
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * The ID of the snapshot. **NOTE:** `snapshot_id` takes effect only if `file_system_type` is set to `extreme`.
     * 
     */
    @Export(name="snapshotId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> snapshotId;

    /**
     * @return The ID of the snapshot. **NOTE:** `snapshot_id` takes effect only if `file_system_type` is set to `extreme`.
     * 
     */
    public Output<Optional<String>> snapshotId() {
        return Codegen.optional(this.snapshotId);
    }
    /**
     * (Available since v1.236.0) The status of the File System.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return (Available since v1.236.0) The status of the File System.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The storage type of the file system. Valid values:
     * - If `file_system_type` is set to `standard`. Valid values: `Performance`, `Capacity`, `Premium`.
     * - If `file_system_type` is set to `extreme`. Valid values: `standard`, `advance`.
     * - If `file_system_type` is set to `cpfs`. Valid values: `advance_100`, `advance_200`.
     * &gt; **NOTE:** From version 1.140.0, `storage_type` can be set to `standard`, `advance`. From version 1.153.0, `storage_type` can be set to `advance_100`, `advance_200`. From version 1.236.0, `storage_type` can be set to `Premium`.
     * 
     */
    @Export(name="storageType", refs={String.class}, tree="[0]")
    private Output<String> storageType;

    /**
     * @return The storage type of the file system. Valid values:
     * - If `file_system_type` is set to `standard`. Valid values: `Performance`, `Capacity`, `Premium`.
     * - If `file_system_type` is set to `extreme`. Valid values: `standard`, `advance`.
     * - If `file_system_type` is set to `cpfs`. Valid values: `advance_100`, `advance_200`.
     * &gt; **NOTE:** From version 1.140.0, `storage_type` can be set to `standard`, `advance`. From version 1.153.0, `storage_type` can be set to `advance_100`, `advance_200`. From version 1.236.0, `storage_type` can be set to `Premium`.
     * 
     */
    public Output<String> storageType() {
        return this.storageType;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The ID of the VPC. **NOTE:** `vpc_id` takes effect only if `file_system_type` is set to `cpfs`.
     * 
     */
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpcId;

    /**
     * @return The ID of the VPC. **NOTE:** `vpc_id` takes effect only if `file_system_type` is set to `cpfs`.
     * 
     */
    public Output<Optional<String>> vpcId() {
        return Codegen.optional(this.vpcId);
    }
    /**
     * The ID of the vSwitch. **NOTE:** `vswitch_id` takes effect only if `file_system_type` is set to `cpfs`.
     * 
     */
    @Export(name="vswitchId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vswitchId;

    /**
     * @return The ID of the vSwitch. **NOTE:** `vswitch_id` takes effect only if `file_system_type` is set to `cpfs`.
     * 
     */
    public Output<Optional<String>> vswitchId() {
        return Codegen.optional(this.vswitchId);
    }
    /**
     * The ID of the zone. **Note:** If `file_system_type` is set to `extreme` or `cpfs`, `zone_id` must be set.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return The ID of the zone. **Note:** If `file_system_type` is set to `extreme` or `cpfs`, `zone_id` must be set.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FileSystem(java.lang.String name) {
        this(name, FileSystemArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FileSystem(java.lang.String name, FileSystemArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FileSystem(java.lang.String name, FileSystemArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:nas/fileSystem:FileSystem", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private FileSystem(java.lang.String name, Output<java.lang.String> id, @Nullable FileSystemState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:nas/fileSystem:FileSystem", name, state, makeResourceOptions(options, id), false);
    }

    private static FileSystemArgs makeArgs(FileSystemArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FileSystemArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FileSystem get(java.lang.String name, Output<java.lang.String> id, @Nullable FileSystemState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FileSystem(name, id, state, options);
    }
}
