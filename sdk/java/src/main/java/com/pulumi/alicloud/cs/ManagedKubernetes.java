// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
import com.pulumi.alicloud.cs.inputs.ManagedKubernetesState;
import com.pulumi.alicloud.cs.outputs.ManagedKubernetesAddon;
import com.pulumi.alicloud.cs.outputs.ManagedKubernetesAuditLogConfig;
import com.pulumi.alicloud.cs.outputs.ManagedKubernetesAutoMode;
import com.pulumi.alicloud.cs.outputs.ManagedKubernetesCertificateAuthority;
import com.pulumi.alicloud.cs.outputs.ManagedKubernetesConnections;
import com.pulumi.alicloud.cs.outputs.ManagedKubernetesDeleteOption;
import com.pulumi.alicloud.cs.outputs.ManagedKubernetesMaintenanceWindow;
import com.pulumi.alicloud.cs.outputs.ManagedKubernetesOperationPolicy;
import com.pulumi.alicloud.cs.outputs.ManagedKubernetesRrsaMetadata;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource will help you to manage a ManagedKubernetes Cluster in Alibaba Cloud Kubernetes Service.
 * 
 * &gt; **NOTE:** Available since v1.26.0.
 * 
 * &gt; **NOTE:** It is recommended to create a cluster with zero worker nodes, and then use a node pool to manage the cluster nodes.
 * 
 * &gt; **NOTE:** Kubernetes cluster only supports VPC network and it can access internet while creating kubernetes cluster.
 * A Nat Gateway and configuring a SNAT for it can ensure one VPC network access internet. If there is no nat gateway in the
 * VPC, you can set `new_nat_gateway` to &#34;true&#34; to create one automatically.
 * 
 * &gt; **NOTE:** Creating kubernetes cluster need to install several packages and it will cost about 15 minutes. Please be patient.
 * 
 * &gt; **NOTE:** From version 1.9.4, the provider supports to download kube config, client certificate, client key and cluster ca certificate
 * after creating cluster successfully, and you can put them into the specified location, like &#39;~/.kube/config&#39;.
 * 
 * &gt; **NOTE:** From version 1.20.0, the provider supports disabling internet load balancer for API Server by setting `false` to `slb_internet_enabled`.
 * 
 * &gt; **NOTE:** If you want to manage Kubernetes, you can use Kubernetes Provider.
 * 
 * &gt; **NOTE:** You need to activate several other products and confirm Authorization Policy used by Container Service before using this resource.
 * Please refer to the `Authorization management` and `Cluster management` sections in the [Document Center](https://www.alibabacloud.com/help/doc-detail/86488.htm).
 * 
 * &gt; **NOTE:** From version 1.72.0, Some parameters have been removed from resource,You can check them below and re-import the cluster if necessary.
 * 
 * &gt; **NOTE:** From version 1.120.0, Support for cluster migration from Standard cluster to professional.
 * 
 * &gt; **NOTE:** From version 1.177.0, `runtime`,`enable_ssh`,`rds_instances`,`exclude_autoscaler_nodes`,`worker_number`,`worker_instance_types`,`password`,`key_name`,`kms_encrypted_password`,`kms_encryption_context`,`worker_instance_charge_type`,`worker_period`,`worker_period_unit`,`worker_auto_renew`,`worker_auto_renew_period`,`worker_disk_category`,`worker_disk_size`,`worker_data_disks`,`node_name_mode`,`node_port_range`,`os_type`,`platform`,`image_id`,`cpu_policy`,`user_data`,`taints`,`worker_disk_performance_level`,`worker_disk_snapshot_policy_id`,`install_cloud_monitor` are deprecated.
 * We Suggest you using resource **`alicloud.cs.NodePool`** to manage your cluster worker nodes.
 * 
 * &gt; **NOTE:** From version 1.212.0, `runtime`,`enable_ssh`,`rds_instances`,`exclude_autoscaler_nodes`,`worker_number`,`worker_instance_types`,`password`,`key_name`,`kms_encrypted_password`,`kms_encryption_context`,`worker_instance_charge_type`,`worker_period`,`worker_period_unit`,`worker_auto_renew`,`worker_auto_renew_period`,`worker_disk_category`,`worker_disk_size`,`worker_data_disks`,`node_name_mode`,`node_port_range`,`os_type`,`platform`,`image_id`,`cpu_policy`,`user_data`,`taints`,`worker_disk_performance_level`,`worker_disk_snapshot_policy_id`,`install_cloud_monitor`,`kube_config`,`availability_zone` are removed.
 * Please use resource **`alicloud.cs.NodePool`** to manage your cluster worker nodes.
 * 
 * ## Example Usage
 * 
 * ACK cluster
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.vpc.VpcFunctions;
 * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.std.StdFunctions;
 * import com.pulumi.std.inputs.JoinArgs;
 * import com.pulumi.alicloud.cs.ManagedKubernetes;
 * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
 * import com.pulumi.alicloud.cs.inputs.ManagedKubernetesAddonArgs;
 * import com.pulumi.std.inputs.SplitArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import com.pulumi.codegen.internal.KeyedValue;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("tf-example");
 *         final var vpcId = config.get("vpcId").orElse("");
 *         final var vpcCidr = config.get("vpcCidr").orElse("10.0.0.0/8");
 *         final var vswitchIds = config.get("vswitchIds").orElse(List.of());
 *         final var vswitchCidrs = config.get("vswitchCidrs").orElse(List.of(        
 *             "10.1.0.0/16",
 *             "10.2.0.0/16"));
 *         final var proxyMode = config.get("proxyMode").orElse("ipvs");
 *         final var serviceCidr = config.get("serviceCidr").orElse("192.168.0.0/16");
 *         final var terwayVswitchIds = config.get("terwayVswitchIds").orElse(List.of());
 *         final var terwayVswitchCidrs = config.get("terwayVswitchCidrs").orElse(List.of(        
 *             "10.4.0.0/16",
 *             "10.5.0.0/16"));
 *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
 *             .build());
 * 
 *         // If there is not specifying vpc_id, the module will launch a new vpc
 *         for (var i = 0; i < (vpcId == "" ? 1 : 0); i++) {
 *             new Network("vpc-" + i, NetworkArgs.builder()
 *                 .cidrBlock(vpcCidr)
 *                 .build());
 * 
 *         
 * }
 *         // According to the vswitch cidr blocks to launch several vswitches
 *         for (var i = 0; i < (vswitchIds.length() > 0 ? 0 : vswitchCidrs.length()); i++) {
 *             new Switch("vswitches-" + i, SwitchArgs.builder()
 *                 .vpcId(vpcId == "" ? StdFunctions.join(JoinArgs.builder()
 *                     .separator("")
 *                     .input(vpc.stream().map(element -> element.id()).collect(toList()))
 *                     .build()).applyValue(_invoke -> _invoke.result()) : vpcId)
 *                 .cidrBlock(vswitchCidrs[range.value()])
 *                 .zoneId(enhanced.zones()[range.value()].zoneId())
 *                 .build());
 * 
 *         
 * }
 *         // According to the vswitch cidr blocks to launch several vswitches
 *         for (var i = 0; i < (terwayVswitchIds.length() > 0 ? 0 : terwayVswitchCidrs.length()); i++) {
 *             new Switch("terwayVswitches-" + i, SwitchArgs.builder()
 *                 .vpcId(vpcId == "" ? StdFunctions.join(JoinArgs.builder()
 *                     .separator("")
 *                     .input(vpc.stream().map(element -> element.id()).collect(toList()))
 *                     .build()).applyValue(_invoke -> _invoke.result()) : vpcId)
 *                 .cidrBlock(terwayVswitchCidrs[range.value()])
 *                 .zoneId(enhanced.zones()[range.value()].zoneId())
 *                 .build());
 * 
 *         
 * }
 *         var k8s = new ManagedKubernetes("k8s", ManagedKubernetesArgs.builder()
 *             .name(name)
 *             .clusterSpec("ack.pro.small")
 *             .vswitchIds(vswitchIds.length() > 0 ? StdFunctions.split(SplitArgs.builder()
 *                 .separator(",")
 *                 .text(StdFunctions.join(JoinArgs.builder()
 *                     .separator(",")
 *                     .input(vswitchIds)
 *                     .build()).result())
 *                 .build()).result() : vswitchCidrs.length() < 1 ?  : StdFunctions.join(JoinArgs.builder()
 *                 .separator(",")
 *                 .input(vswitches.stream().map(element -> element.id()).collect(toList()))
 *                 .build()).applyValue(_invoke -> StdFunctions.split(SplitArgs.builder()
 *                 .separator(",")
 *                 .text(_invoke.result())
 *                 .build())).applyValue(_invoke -> _invoke.result()))
 *             .podVswitchIds(terwayVswitchIds.length() > 0 ? StdFunctions.split(SplitArgs.builder()
 *                 .separator(",")
 *                 .text(StdFunctions.join(JoinArgs.builder()
 *                     .separator(",")
 *                     .input(terwayVswitchIds)
 *                     .build()).result())
 *                 .build()).result() : terwayVswitchCidrs.length() < 1 ?  : StdFunctions.join(JoinArgs.builder()
 *                 .separator(",")
 *                 .input(terwayVswitches.stream().map(element -> element.id()).collect(toList()))
 *                 .build()).applyValue(_invoke -> StdFunctions.split(SplitArgs.builder()
 *                 .separator(",")
 *                 .text(_invoke.result())
 *                 .build())).applyValue(_invoke -> _invoke.result()))
 *             .newNatGateway(true)
 *             .proxyMode(proxyMode)
 *             .serviceCidr(serviceCidr)
 *             .skipSetCertificateAuthority(true)
 *             .addons(            
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("terway-eniip")
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("csi-plugin")
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("csi-provisioner")
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("logtail-ds")
 *                     .config(serializeJson(
 *                         jsonObject(
 *                             jsonProperty("IngressDashboardEnabled", "true")
 *                         )))
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("nginx-ingress-controller")
 *                     .config(serializeJson(
 *                         jsonObject(
 *                             jsonProperty("IngressSlbNetworkType", "internet")
 *                         )))
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("arms-prometheus")
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("ack-node-problem-detector")
 *                     .config(serializeJson(
 *                         jsonObject(
 * 
 *                         )))
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ACK Cluster with Auto Mode
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.vpc.VpcFunctions;
 * import com.pulumi.alicloud.vpc.inputs.GetEnhancedNatAvailableZonesArgs;
 * import com.pulumi.alicloud.cs.ManagedKubernetes;
 * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
 * import com.pulumi.alicloud.cs.inputs.ManagedKubernetesAutoModeArgs;
 * import com.pulumi.alicloud.cs.inputs.ManagedKubernetesMaintenanceWindowArgs;
 * import com.pulumi.alicloud.cs.inputs.ManagedKubernetesOperationPolicyArgs;
 * import com.pulumi.alicloud.cs.inputs.ManagedKubernetesOperationPolicyClusterAutoUpgradeArgs;
 * import com.pulumi.alicloud.cs.inputs.ManagedKubernetesAuditLogConfigArgs;
 * import com.pulumi.alicloud.cs.inputs.ManagedKubernetesAddonArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("auto-mode");
 *         final var proxyMode = config.get("proxyMode").orElse("ipvs");
 *         final var serviceCidr = config.get("serviceCidr").orElse("192.168.0.0/16");
 *         final var enhanced = VpcFunctions.getEnhancedNatAvailableZones(GetEnhancedNatAvailableZonesArgs.builder()
 *             .build());
 * 
 *         var auto_mode = new ManagedKubernetes("auto-mode", ManagedKubernetesArgs.builder()
 *             .name(name)
 *             .clusterSpec("ack.pro.small")
 *             .zoneIds(enhanced.zones()[0].zoneId())
 *             .newNatGateway(true)
 *             .isEnterpriseSecurityGroup(true)
 *             .slbInternetEnabled(false)
 *             .skipSetCertificateAuthority(true)
 *             .proxyMode(proxyMode)
 *             .serviceCidr(serviceCidr)
 *             .ipStack("ipv4")
 *             .autoMode(ManagedKubernetesAutoModeArgs.builder()
 *                 .enabled(true)
 *                 .build())
 *             .maintenanceWindow(ManagedKubernetesMaintenanceWindowArgs.builder()
 *                 .duration("3h")
 *                 .weeklyPeriod("Monday")
 *                 .enable(true)
 *                 .maintenanceTime("2025-07-07T00:00:00.000+08:00")
 *                 .build())
 *             .operationPolicy(ManagedKubernetesOperationPolicyArgs.builder()
 *                 .clusterAutoUpgrade(ManagedKubernetesOperationPolicyClusterAutoUpgradeArgs.builder()
 *                     .channel("stable")
 *                     .enabled(true)
 *                     .build())
 *                 .build())
 *             .controlPlaneLogComponents(            
 *                 "apiserver",
 *                 "kcm",
 *                 "scheduler",
 *                 "ccm",
 *                 "controlplane-events",
 *                 "alb",
 *                 "ack-goatscaler",
 *                 "coredns")
 *             .controlPlaneLogTtl("30")
 *             .auditLogConfig(ManagedKubernetesAuditLogConfigArgs.builder()
 *                 .enabled(true)
 *                 .build())
 *             .addons(            
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("managed-metrics-server")
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("managed-coredns")
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("managed-security-inspector")
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("ack-cost-exporter")
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("terway-controlplane")
 *                     .config(serializeJson(
 *                         jsonObject(
 *                             jsonProperty("ENITrunking", "true")
 *                         )))
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("terway-eniip")
 *                     .config(serializeJson(
 *                         jsonObject(
 *                             jsonProperty("NetworkPolicy", "false"),
 *                             jsonProperty("ENITrunking", "true"),
 *                             jsonProperty("IPVlan", "false")
 *                         )))
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("csi-plugin")
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("managed-csiprovisioner")
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("storage-operator")
 *                     .config(serializeJson(
 *                         jsonObject(
 *                             jsonProperty("CnfsOssEnable", "false"),
 *                             jsonProperty("CnfsNasEnable", "false")
 *                         )))
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("loongcollector")
 *                     .config(serializeJson(
 *                         jsonObject(
 *                             jsonProperty("IngressDashboardEnabled", "true")
 *                         )))
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("ack-node-problem-detector")
 *                     .config(serializeJson(
 *                         jsonObject(
 *                             jsonProperty("sls_project_name", "")
 *                         )))
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("nginx-ingress-controller")
 *                     .disabled(true)
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("alb-ingress-controller")
 *                     .config(serializeJson(
 *                         jsonObject(
 *                             jsonProperty("albIngress", jsonObject(
 *                                 jsonProperty("CreateDefaultALBConfig", false)
 *                             ))
 *                         )))
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("arms-prometheus")
 *                     .config(serializeJson(
 *                         jsonObject(
 *                             jsonProperty("prometheusMode", "default")
 *                         )))
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("alicloud-monitor-controller")
 *                     .build(),
 *                 ManagedKubernetesAddonArgs.builder()
 *                     .name("managed-aliyun-acr-credential-helper")
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Kubernetes managed cluster can be imported using the id, e.g. Then complete the main.tf accords to the result of `pulumi preview`.
 * 
 * ```sh
 * $ pulumi import alicloud:cs/managedKubernetes:ManagedKubernetes main cluster_id
 * ```
 * 
 */
@ResourceType(type="alicloud:cs/managedKubernetes:ManagedKubernetes")
public class ManagedKubernetes extends com.pulumi.resources.CustomResource {
    /**
     * The addon you want to install in cluster. See `addons` below. Only works for **Create** Operation, use resource cs_kubernetes_addon to manage addons if cluster is created.
     * 
     */
    @Export(name="addons", refs={List.class,ManagedKubernetesAddon.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ManagedKubernetesAddon>> addons;

    /**
     * @return The addon you want to install in cluster. See `addons` below. Only works for **Create** Operation, use resource cs_kubernetes_addon to manage addons if cluster is created.
     * 
     */
    public Output<Optional<List<ManagedKubernetesAddon>>> addons() {
        return Codegen.optional(this.addons);
    }
    /**
     * A list of API audiences for [Service Account Token Volume Projection](https://www.alibabacloud.com/help/doc-detail/160384.htm). Set this to `[&#34;https://kubernetes.default.svc&#34;]` if you want to enable the Token Volume Projection feature (requires specifying `service_account_issuer` as well. From cluster version 1.22, Service Account Token Volume Projection will be enabled by default.
     * 
     */
    @Export(name="apiAudiences", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> apiAudiences;

    /**
     * @return A list of API audiences for [Service Account Token Volume Projection](https://www.alibabacloud.com/help/doc-detail/160384.htm). Set this to `[&#34;https://kubernetes.default.svc&#34;]` if you want to enable the Token Volume Projection feature (requires specifying `service_account_issuer` as well. From cluster version 1.22, Service Account Token Volume Projection will be enabled by default.
     * 
     */
    public Output<Optional<List<String>>> apiAudiences() {
        return Codegen.optional(this.apiAudiences);
    }
    /**
     * Audit log configuration. See `audit_log_config` below.
     * 
     */
    @Export(name="auditLogConfig", refs={ManagedKubernetesAuditLogConfig.class}, tree="[0]")
    private Output<ManagedKubernetesAuditLogConfig> auditLogConfig;

    /**
     * @return Audit log configuration. See `audit_log_config` below.
     * 
     */
    public Output<ManagedKubernetesAuditLogConfig> auditLogConfig() {
        return this.auditLogConfig;
    }
    /**
     * Auto mode cluster configuration. See `auto_mode` below.
     * 
     */
    @Export(name="autoMode", refs={ManagedKubernetesAutoMode.class}, tree="[0]")
    private Output</* @Nullable */ ManagedKubernetesAutoMode> autoMode;

    /**
     * @return Auto mode cluster configuration. See `auto_mode` below.
     * 
     */
    public Output<Optional<ManagedKubernetesAutoMode>> autoMode() {
        return Codegen.optional(this.autoMode);
    }
    /**
     * (Map, Deprecated from v1.248.0) Nested attribute containing certificate authority data for your cluster. Please use the attribute certificate_authority of new DataSource `alicloud.cs.getClusterCredential` to replace it.
     * 
     * @deprecated
     * Field &#39;certificate_authority&#39; has been deprecated from provider version 1.248.0. Please use the attribute &#39;certificate_authority&#39; of new DataSource &#39;alicloud_cs_cluster_credential&#39; to replace it.
     * 
     */
    @Deprecated /* Field 'certificate_authority' has been deprecated from provider version 1.248.0. Please use the attribute 'certificate_authority' of new DataSource 'alicloud_cs_cluster_credential' to replace it. */
    @Export(name="certificateAuthority", refs={ManagedKubernetesCertificateAuthority.class}, tree="[0]")
    private Output<ManagedKubernetesCertificateAuthority> certificateAuthority;

    /**
     * @return (Map, Deprecated from v1.248.0) Nested attribute containing certificate authority data for your cluster. Please use the attribute certificate_authority of new DataSource `alicloud.cs.getClusterCredential` to replace it.
     * 
     */
    public Output<ManagedKubernetesCertificateAuthority> certificateAuthority() {
        return this.certificateAuthority;
    }
    /**
     * From version 1.248.0, new DataSource `alicloud.cs.getClusterCredential` is recommended to manage cluster&#39;s kubeconfig, you can also save the certificate_authority.client_cert attribute content of new DataSource `alicloud.cs.getClusterCredential` to an appropriate path(like ~/.kube/client-cert.pem) for replace it.
     * 
     * @deprecated
     * Field &#39;client_cert&#39; has been deprecated from provider version 1.248.0. From version 1.248.0, new DataSource &#39;alicloud_cs_cluster_credential&#39; is recommended to manage cluster&#39;s kubeconfig, you can also save the &#39;certificate_authority.client_cert&#39; attribute content of new DataSource &#39;alicloud_cs_cluster_credential&#39; to an appropriate path(like ~/.kube/client-cert.pem) for replace it.
     * 
     */
    @Deprecated /* Field 'client_cert' has been deprecated from provider version 1.248.0. From version 1.248.0, new DataSource 'alicloud_cs_cluster_credential' is recommended to manage cluster's kubeconfig, you can also save the 'certificate_authority.client_cert' attribute content of new DataSource 'alicloud_cs_cluster_credential' to an appropriate path(like ~/.kube/client-cert.pem) for replace it. */
    @Export(name="clientCert", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clientCert;

    /**
     * @return From version 1.248.0, new DataSource `alicloud.cs.getClusterCredential` is recommended to manage cluster&#39;s kubeconfig, you can also save the certificate_authority.client_cert attribute content of new DataSource `alicloud.cs.getClusterCredential` to an appropriate path(like ~/.kube/client-cert.pem) for replace it.
     * 
     */
    public Output<Optional<String>> clientCert() {
        return Codegen.optional(this.clientCert);
    }
    /**
     * From version 1.248.0, new DataSource `alicloud.cs.getClusterCredential` is recommended to manage cluster&#39;s kubeconfig, you can also save the certificate_authority.client_key attribute content of new DataSource `alicloud.cs.getClusterCredential` to an appropriate path(like ~/.kube/client-key.pem) for replace it.
     * 
     * @deprecated
     * Field &#39;client_key&#39; has been deprecated from provider version 1.248.0. From version 1.248.0, new DataSource &#39;alicloud_cs_cluster_credential&#39; is recommended to manage cluster&#39;s kubeconfig, you can also save the &#39;certificate_authority.client_key&#39; attribute content of new DataSource &#39;alicloud_cs_cluster_credential&#39; to an appropriate path(like ~/.kube/client-key.pem) for replace it.
     * 
     */
    @Deprecated /* Field 'client_key' has been deprecated from provider version 1.248.0. From version 1.248.0, new DataSource 'alicloud_cs_cluster_credential' is recommended to manage cluster's kubeconfig, you can also save the 'certificate_authority.client_key' attribute content of new DataSource 'alicloud_cs_cluster_credential' to an appropriate path(like ~/.kube/client-key.pem) for replace it. */
    @Export(name="clientKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clientKey;

    /**
     * @return From version 1.248.0, new DataSource `alicloud.cs.getClusterCredential` is recommended to manage cluster&#39;s kubeconfig, you can also save the certificate_authority.client_key attribute content of new DataSource `alicloud.cs.getClusterCredential` to an appropriate path(like ~/.kube/client-key.pem) for replace it.
     * 
     */
    public Output<Optional<String>> clientKey() {
        return Codegen.optional(this.clientKey);
    }
    /**
     * From version 1.248.0, new DataSource `alicloud.cs.getClusterCredential` is recommended to manage cluster&#39;s kubeconfig, you can also save the certificate_authority.cluster_cert attribute content of new DataSource `alicloud.cs.getClusterCredential` to an appropriate path(like ~/.kube/cluster-ca-cert.pem) for replace it.
     * 
     * *Removed params*
     * 
     * @deprecated
     * Field &#39;cluster_ca_cert&#39; has been deprecated from provider version 1.248.0. From version 1.248.0, new DataSource &#39;alicloud_cs_cluster_credential&#39; is recommended to manage cluster&#39;s kubeconfig, you can also save the &#39;certificate_authority.cluster_cert&#39; attribute content of new DataSource &#39;alicloud_cs_cluster_credential&#39; to an appropriate path(like ~/.kube/cluster-ca-cert.pem) for replace it.
     * 
     */
    @Deprecated /* Field 'cluster_ca_cert' has been deprecated from provider version 1.248.0. From version 1.248.0, new DataSource 'alicloud_cs_cluster_credential' is recommended to manage cluster's kubeconfig, you can also save the 'certificate_authority.cluster_cert' attribute content of new DataSource 'alicloud_cs_cluster_credential' to an appropriate path(like ~/.kube/cluster-ca-cert.pem) for replace it. */
    @Export(name="clusterCaCert", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clusterCaCert;

    /**
     * @return From version 1.248.0, new DataSource `alicloud.cs.getClusterCredential` is recommended to manage cluster&#39;s kubeconfig, you can also save the certificate_authority.cluster_cert attribute content of new DataSource `alicloud.cs.getClusterCredential` to an appropriate path(like ~/.kube/cluster-ca-cert.pem) for replace it.
     * 
     * *Removed params*
     * 
     */
    public Output<Optional<String>> clusterCaCert() {
        return Codegen.optional(this.clusterCaCert);
    }
    /**
     * Cluster local domain name, Default to `cluster.local`. A domain name consists of one or more sections separated by a decimal point (.), each of which is up to 63 characters long, and can be lowercase, numerals, and underscores (-), and must be lowercase or numerals at the beginning and end.
     * 
     */
    @Export(name="clusterDomain", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clusterDomain;

    /**
     * @return Cluster local domain name, Default to `cluster.local`. A domain name consists of one or more sections separated by a decimal point (.), each of which is up to 63 characters long, and can be lowercase, numerals, and underscores (-), and must be lowercase or numerals at the beginning and end.
     * 
     */
    public Output<Optional<String>> clusterDomain() {
        return Codegen.optional(this.clusterDomain);
    }
    /**
     * The cluster specifications of kubernetes cluster,which can be empty. Valid values:
     * * ack.standard : Basic managed clusters.
     * * ack.pro.small : Professional managed clusters.
     * 
     */
    @Export(name="clusterSpec", refs={String.class}, tree="[0]")
    private Output<String> clusterSpec;

    /**
     * @return The cluster specifications of kubernetes cluster,which can be empty. Valid values:
     * * ack.standard : Basic managed clusters.
     * * ack.pro.small : Professional managed clusters.
     * 
     */
    public Output<String> clusterSpec() {
        return this.clusterSpec;
    }
    /**
     * Map of kubernetes cluster connection information.
     * 
     */
    @Export(name="connections", refs={ManagedKubernetesConnections.class}, tree="[0]")
    private Output<ManagedKubernetesConnections> connections;

    /**
     * @return Map of kubernetes cluster connection information.
     * 
     */
    public Output<ManagedKubernetesConnections> connections() {
        return this.connections;
    }
    /**
     * List of target components for which logs need to be collected. Supports `apiserver`, `kcm`, `scheduler`, `ccm` and `controlplane-events`.
     * 
     */
    @Export(name="controlPlaneLogComponents", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> controlPlaneLogComponents;

    /**
     * @return List of target components for which logs need to be collected. Supports `apiserver`, `kcm`, `scheduler`, `ccm` and `controlplane-events`.
     * 
     */
    public Output<Optional<List<String>>> controlPlaneLogComponents() {
        return Codegen.optional(this.controlPlaneLogComponents);
    }
    /**
     * Control plane log project. If this field is not set, a log service project named k8s-log-{ClusterID} will be automatically created.
     * 
     */
    @Export(name="controlPlaneLogProject", refs={String.class}, tree="[0]")
    private Output<String> controlPlaneLogProject;

    /**
     * @return Control plane log project. If this field is not set, a log service project named k8s-log-{ClusterID} will be automatically created.
     * 
     */
    public Output<String> controlPlaneLogProject() {
        return this.controlPlaneLogProject;
    }
    /**
     * Control plane log retention duration (unit: day). Default `30`. If control plane logs are to be collected, `control_plane_log_ttl` and `control_plane_log_components` must be specified.
     * 
     */
    @Export(name="controlPlaneLogTtl", refs={String.class}, tree="[0]")
    private Output<String> controlPlaneLogTtl;

    /**
     * @return Control plane log retention duration (unit: day). Default `30`. If control plane logs are to be collected, `control_plane_log_ttl` and `control_plane_log_components` must be specified.
     * 
     */
    public Output<String> controlPlaneLogTtl() {
        return this.controlPlaneLogTtl;
    }
    /**
     * Customize the certificate SAN, multiple IP or domain names are separated by English commas (,).
     * &gt; **NOTE:** Make sure you have specified all certificate SANs before updating. Updating this field will lead APIServer to restart.
     * 
     */
    @Export(name="customSan", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> customSan;

    /**
     * @return Customize the certificate SAN, multiple IP or domain names are separated by English commas (,).
     * &gt; **NOTE:** Make sure you have specified all certificate SANs before updating. Updating this field will lead APIServer to restart.
     * 
     */
    public Output<Optional<String>> customSan() {
        return Codegen.optional(this.customSan);
    }
    /**
     * Delete options, only work for deleting resource. Make sure you have run `pulumi up` to make the configuration applied. See `delete_options` below.
     * 
     */
    @Export(name="deleteOptions", refs={List.class,ManagedKubernetesDeleteOption.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ManagedKubernetesDeleteOption>> deleteOptions;

    /**
     * @return Delete options, only work for deleting resource. Make sure you have run `pulumi up` to make the configuration applied. See `delete_options` below.
     * 
     */
    public Output<Optional<List<ManagedKubernetesDeleteOption>>> deleteOptions() {
        return Codegen.optional(this.deleteOptions);
    }
    /**
     * Whether to enable cluster deletion protection.
     * 
     */
    @Export(name="deletionProtection", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> deletionProtection;

    /**
     * @return Whether to enable cluster deletion protection.
     * 
     */
    public Output<Optional<Boolean>> deletionProtection() {
        return Codegen.optional(this.deletionProtection);
    }
    /**
     * Whether to enable cluster to support RRSA for kubernetes version 1.22.3+. Default to `false`. Once the RRSA function is turned on, it is not allowed to turn off. If your cluster has enabled this function, please manually modify your tf file and add the rrsa configuration to the file, learn more [RAM Roles for Service Accounts](https://www.alibabacloud.com/help/zh/container-service-for-kubernetes/latest/use-rrsa-to-enforce-access-control).
     * 
     */
    @Export(name="enableRrsa", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableRrsa;

    /**
     * @return Whether to enable cluster to support RRSA for kubernetes version 1.22.3+. Default to `false`. Once the RRSA function is turned on, it is not allowed to turn off. If your cluster has enabled this function, please manually modify your tf file and add the rrsa configuration to the file, learn more [RAM Roles for Service Accounts](https://www.alibabacloud.com/help/zh/container-service-for-kubernetes/latest/use-rrsa-to-enforce-access-control).
     * 
     */
    public Output<Optional<Boolean>> enableRrsa() {
        return Codegen.optional(this.enableRrsa);
    }
    /**
     * The ID of the Key Management Service (KMS) key that is used to encrypt Kubernetes Secrets.
     * 
     */
    @Export(name="encryptionProviderKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> encryptionProviderKey;

    /**
     * @return The ID of the Key Management Service (KMS) key that is used to encrypt Kubernetes Secrets.
     * 
     */
    public Output<Optional<String>> encryptionProviderKey() {
        return Codegen.optional(this.encryptionProviderKey);
    }
    /**
     * The IP address family that the cluster network uses. Valid values:
     * 
     */
    @Export(name="ipStack", refs={String.class}, tree="[0]")
    private Output<String> ipStack;

    /**
     * @return The IP address family that the cluster network uses. Valid values:
     * 
     */
    public Output<String> ipStack() {
        return this.ipStack;
    }
    /**
     * Enable to create advanced security group. default: false. Only works for **Create** Operation. See [Advanced security group](https://www.alibabacloud.com/help/doc-detail/120621.htm).
     * 
     */
    @Export(name="isEnterpriseSecurityGroup", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isEnterpriseSecurityGroup;

    /**
     * @return Enable to create advanced security group. default: false. Only works for **Create** Operation. See [Advanced security group](https://www.alibabacloud.com/help/doc-detail/120621.htm).
     * 
     */
    public Output<Boolean> isEnterpriseSecurityGroup() {
        return this.isEnterpriseSecurityGroup;
    }
    /**
     * The cluster api server load balancer instance specification. For more information on how to select a LB instance specification, see [SLB instance overview](https://help.aliyun.com/document_detail/85931.html). Only works for **Create** Operation. The spec will not take effect because the charge of the load balancer has been changed to PayByCLCU.
     * 
     * @deprecated
     * Field &#39;load_balancer_spec&#39; has been deprecated from provider version 1.232.0. The spec will not take effect because the charge of the load balancer has been changed to PayByCLCU
     * 
     */
    @Deprecated /* Field 'load_balancer_spec' has been deprecated from provider version 1.232.0. The spec will not take effect because the charge of the load balancer has been changed to PayByCLCU */
    @Export(name="loadBalancerSpec", refs={String.class}, tree="[0]")
    private Output<String> loadBalancerSpec;

    /**
     * @return The cluster api server load balancer instance specification. For more information on how to select a LB instance specification, see [SLB instance overview](https://help.aliyun.com/document_detail/85931.html). Only works for **Create** Operation. The spec will not take effect because the charge of the load balancer has been changed to PayByCLCU.
     * 
     */
    public Output<String> loadBalancerSpec() {
        return this.loadBalancerSpec;
    }
    /**
     * The cluster maintenance window. Managed node pool will use it. See `maintenance_window` below.
     * 
     */
    @Export(name="maintenanceWindow", refs={ManagedKubernetesMaintenanceWindow.class}, tree="[0]")
    private Output<ManagedKubernetesMaintenanceWindow> maintenanceWindow;

    /**
     * @return The cluster maintenance window. Managed node pool will use it. See `maintenance_window` below.
     * 
     */
    public Output<ManagedKubernetesMaintenanceWindow> maintenanceWindow() {
        return this.maintenanceWindow;
    }
    /**
     * The kubernetes cluster&#39;s name. It is unique in one Alicloud account.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The kubernetes cluster&#39;s name. It is unique in one Alicloud account.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="namePrefix", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namePrefix;

    public Output<Optional<String>> namePrefix() {
        return Codegen.optional(this.namePrefix);
    }
    /**
     * The ID of nat gateway used to launch kubernetes cluster.
     * 
     */
    @Export(name="natGatewayId", refs={String.class}, tree="[0]")
    private Output<String> natGatewayId;

    /**
     * @return The ID of nat gateway used to launch kubernetes cluster.
     * 
     */
    public Output<String> natGatewayId() {
        return this.natGatewayId;
    }
    /**
     * Whether to create a new nat gateway while creating kubernetes cluster. Default to true. Then openapi in Alibaba Cloud are not all on intranet, So turn this option on is a good choice. Only works for **Create** Operation.
     * 
     */
    @Export(name="newNatGateway", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> newNatGateway;

    /**
     * @return Whether to create a new nat gateway while creating kubernetes cluster. Default to true. Then openapi in Alibaba Cloud are not all on intranet, So turn this option on is a good choice. Only works for **Create** Operation.
     * 
     */
    public Output<Optional<Boolean>> newNatGateway() {
        return Codegen.optional(this.newNatGateway);
    }
    /**
     * The node cidr block to specific how many pods can run on single node. 24-28 is allowed. 24 means 2^(32-24)-1=255 and the node can run at most 255 pods. default: 24
     * 
     */
    @Export(name="nodeCidrMask", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> nodeCidrMask;

    /**
     * @return The node cidr block to specific how many pods can run on single node. 24-28 is allowed. 24 means 2^(32-24)-1=255 and the node can run at most 255 pods. default: 24
     * 
     */
    public Output<Optional<Integer>> nodeCidrMask() {
        return Codegen.optional(this.nodeCidrMask);
    }
    /**
     * The cluster automatic operation policy, only works when `maintenance_window` is enabled. See `operation_policy` below.
     * 
     */
    @Export(name="operationPolicy", refs={ManagedKubernetesOperationPolicy.class}, tree="[0]")
    private Output<ManagedKubernetesOperationPolicy> operationPolicy;

    /**
     * @return The cluster automatic operation policy, only works when `maintenance_window` is enabled. See `operation_policy` below.
     * 
     */
    public Output<ManagedKubernetesOperationPolicy> operationPolicy() {
        return this.operationPolicy;
    }
    /**
     * [Flannel Specific] The CIDR block for the pod network when using Flannel.
     * 
     */
    @Export(name="podCidr", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> podCidr;

    /**
     * @return [Flannel Specific] The CIDR block for the pod network when using Flannel.
     * 
     */
    public Output<Optional<String>> podCidr() {
        return Codegen.optional(this.podCidr);
    }
    /**
     * [Terway Specific] The vswitches for the pod network when using Terway. It is recommended that `pod_vswitch_ids` is not belong to `vswitch_ids` but must be in same availability zones. Only works for **Create** Operation.
     * 
     */
    @Export(name="podVswitchIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> podVswitchIds;

    /**
     * @return [Terway Specific] The vswitches for the pod network when using Terway. It is recommended that `pod_vswitch_ids` is not belong to `vswitch_ids` but must be in same availability zones. Only works for **Create** Operation.
     * 
     */
    public Output<Optional<List<String>>> podVswitchIds() {
        return Codegen.optional(this.podVswitchIds);
    }
    /**
     * The profile of cluster. Valid values:
     * * `Default`: ACK managed cluster. ACK managed clusters include ACK Basic clusters and ACK Pro clusters.
     * * `Edge`: ACK Edge cluster. ACK Edge clusters include ACK Edge Basic clusters and ACK Edge Pro clusters.
     * * `Serverless`: ACK Serverless cluster. ACK Serverless clusters include ACK Serverless Basic clusters and ACK Serverless Pro clusters.
     * * `Acs`: ACS cluster.
     * 
     */
    @Export(name="profile", refs={String.class}, tree="[0]")
    private Output<String> profile;

    /**
     * @return The profile of cluster. Valid values:
     * * `Default`: ACK managed cluster. ACK managed clusters include ACK Basic clusters and ACK Pro clusters.
     * * `Edge`: ACK Edge cluster. ACK Edge clusters include ACK Edge Basic clusters and ACK Edge Pro clusters.
     * * `Serverless`: ACK Serverless cluster. ACK Serverless clusters include ACK Serverless Basic clusters and ACK Serverless Pro clusters.
     * * `Acs`: ACS cluster.
     * 
     */
    public Output<String> profile() {
        return this.profile;
    }
    /**
     * Proxy mode is option of kube-proxy. options: iptables|ipvs. default: ipvs.
     * 
     */
    @Export(name="proxyMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> proxyMode;

    /**
     * @return Proxy mode is option of kube-proxy. options: iptables|ipvs. default: ipvs.
     * 
     */
    public Output<Optional<String>> proxyMode() {
        return Codegen.optional(this.proxyMode);
    }
    /**
     * The ID of the resource group,by default these cloud resources are automatically assigned to the default resource group.
     * 
     */
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group,by default these cloud resources are automatically assigned to the default resource group.
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    @Export(name="retainResources", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> retainResources;

    public Output<Optional<List<String>>> retainResources() {
        return Codegen.optional(this.retainResources);
    }
    /**
     * (Optional, Available since v1.185.0) Nested attribute containing RRSA related data for your cluster.
     * 
     */
    @Export(name="rrsaMetadata", refs={ManagedKubernetesRrsaMetadata.class}, tree="[0]")
    private Output<ManagedKubernetesRrsaMetadata> rrsaMetadata;

    /**
     * @return (Optional, Available since v1.185.0) Nested attribute containing RRSA related data for your cluster.
     * 
     */
    public Output<ManagedKubernetesRrsaMetadata> rrsaMetadata() {
        return this.rrsaMetadata;
    }
    /**
     * The ID of the security group to which the ECS instances in the cluster belong. If it is not specified, a new Security group will be built.
     * * &gt; **NOTE:** Please take of note before updating the `security_group_id`:
     * * If block rules are configured in the security group, ensure the security group rules allow traffic for protocols and ports required by the cluster. For recommended security group rules, see [Configure and manage security groups for an ACK cluster](https://www.alibabacloud.com/help/en/ack/ack-managed-and-ack-dedicated/user-guide/configure-security-group-rules-to-enforce-access-control-on-ack-clusters).
     * * During security group updates, the cluster control plane and managed components (e.g., terway-controlplane) will restart briefly. Perform this operation during off-peak hours.
     * * After updating the control plane security group, the Elastic Network Interfaces (ENIs) used by the control plane and managed components will automatically join the new security group.
     * 
     */
    @Export(name="securityGroupId", refs={String.class}, tree="[0]")
    private Output<String> securityGroupId;

    /**
     * @return The ID of the security group to which the ECS instances in the cluster belong. If it is not specified, a new Security group will be built.
     * * &gt; **NOTE:** Please take of note before updating the `security_group_id`:
     * * If block rules are configured in the security group, ensure the security group rules allow traffic for protocols and ports required by the cluster. For recommended security group rules, see [Configure and manage security groups for an ACK cluster](https://www.alibabacloud.com/help/en/ack/ack-managed-and-ack-dedicated/user-guide/configure-security-group-rules-to-enforce-access-control-on-ack-clusters).
     * * During security group updates, the cluster control plane and managed components (e.g., terway-controlplane) will restart briefly. Perform this operation during off-peak hours.
     * * After updating the control plane security group, the Elastic Network Interfaces (ENIs) used by the control plane and managed components will automatically join the new security group.
     * 
     */
    public Output<String> securityGroupId() {
        return this.securityGroupId;
    }
    /**
     * The issuer of the Service Account token for [Service Account Token Volume Projection](https://www.alibabacloud.com/help/doc-detail/160384.htm), corresponds to the `iss` field in the token payload. Set this to `&#34;https://kubernetes.default.svc&#34;` to enable the Token Volume Projection feature (requires specifying `api_audiences` as well). From cluster version 1.22, Service Account Token Volume Projection will be enabled by default.
     * 
     */
    @Export(name="serviceAccountIssuer", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> serviceAccountIssuer;

    /**
     * @return The issuer of the Service Account token for [Service Account Token Volume Projection](https://www.alibabacloud.com/help/doc-detail/160384.htm), corresponds to the `iss` field in the token payload. Set this to `&#34;https://kubernetes.default.svc&#34;` to enable the Token Volume Projection feature (requires specifying `api_audiences` as well). From cluster version 1.22, Service Account Token Volume Projection will be enabled by default.
     * 
     */
    public Output<Optional<String>> serviceAccountIssuer() {
        return Codegen.optional(this.serviceAccountIssuer);
    }
    /**
     * The CIDR block for the service network. It cannot be duplicated with the VPC CIDR and CIDR used by Kubernetes cluster in VPC, cannot be modified after creation.
     * 
     */
    @Export(name="serviceCidr", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> serviceCidr;

    /**
     * @return The CIDR block for the service network. It cannot be duplicated with the VPC CIDR and CIDR used by Kubernetes cluster in VPC, cannot be modified after creation.
     * 
     */
    public Output<Optional<String>> serviceCidr() {
        return Codegen.optional(this.serviceCidr);
    }
    /**
     * Configure whether to save certificate authority data for your cluster to attribute `certificate_authority`. For cluster security, recommended configuration as `true`. Will be removed with attribute certificate_authority removed.
     * 
     * *Network params*
     * 
     */
    @Export(name="skipSetCertificateAuthority", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> skipSetCertificateAuthority;

    /**
     * @return Configure whether to save certificate authority data for your cluster to attribute `certificate_authority`. For cluster security, recommended configuration as `true`. Will be removed with attribute certificate_authority removed.
     * 
     * *Network params*
     * 
     */
    public Output<Optional<Boolean>> skipSetCertificateAuthority() {
        return Codegen.optional(this.skipSetCertificateAuthority);
    }
    /**
     * The ID of APIServer load balancer.
     * 
     */
    @Export(name="slbId", refs={String.class}, tree="[0]")
    private Output<String> slbId;

    /**
     * @return The ID of APIServer load balancer.
     * 
     */
    public Output<String> slbId() {
        return this.slbId;
    }
    /**
     * The public ip of load balancer.
     * 
     */
    @Export(name="slbInternet", refs={String.class}, tree="[0]")
    private Output<String> slbInternet;

    /**
     * @return The public ip of load balancer.
     * 
     */
    public Output<String> slbInternet() {
        return this.slbInternet;
    }
    /**
     * Whether to create internet load balancer for API Server. Default to true. Only works for **Create** Operation.
     * 
     */
    @Export(name="slbInternetEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> slbInternetEnabled;

    /**
     * @return Whether to create internet load balancer for API Server. Default to true. Only works for **Create** Operation.
     * 
     */
    public Output<Optional<Boolean>> slbInternetEnabled() {
        return Codegen.optional(this.slbInternetEnabled);
    }
    /**
     * The ID of private load balancer where the current cluster master node is located.
     * 
     */
    @Export(name="slbIntranet", refs={String.class}, tree="[0]")
    private Output<String> slbIntranet;

    /**
     * @return The ID of private load balancer where the current cluster master node is located.
     * 
     */
    public Output<String> slbIntranet() {
        return this.slbIntranet;
    }
    /**
     * Default nil, A map of tags assigned to the kubernetes cluster and work nodes. See `tags` below.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Default nil, A map of tags assigned to the kubernetes cluster and work nodes. See `tags` below.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Cluster timezone, works for control plane and Worker nodes.
     * * &gt; **NOTE:** Please take of note before updating the `timezone`:
     * * After modifying the timezone, cluster inspection configurations will adopt the new timezone.
     * * During timezone updates, the cluster control plane and managed components (e.g., terway-controlplane) will restart briefly. Perform this operation during off-peak hours.
     * * After updating the timezone: Newly scaled-out nodes will automatically apply the new timezone. Existing nodes remain unaffected. Reset the node to apply changes to existing nodes.
     * 
     */
    @Export(name="timezone", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timezone;

    /**
     * @return Cluster timezone, works for control plane and Worker nodes.
     * * &gt; **NOTE:** Please take of note before updating the `timezone`:
     * * After modifying the timezone, cluster inspection configurations will adopt the new timezone.
     * * During timezone updates, the cluster control plane and managed components (e.g., terway-controlplane) will restart briefly. Perform this operation during off-peak hours.
     * * After updating the timezone: Newly scaled-out nodes will automatically apply the new timezone. Existing nodes remain unaffected. Reset the node to apply changes to existing nodes.
     * 
     */
    public Output<Optional<String>> timezone() {
        return Codegen.optional(this.timezone);
    }
    /**
     * The path of customized CA cert, you can use this CA to sign client certs to connect your cluster.
     * 
     */
    @Export(name="userCa", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userCa;

    /**
     * @return The path of customized CA cert, you can use this CA to sign client certs to connect your cluster.
     * 
     */
    public Output<Optional<String>> userCa() {
        return Codegen.optional(this.userCa);
    }
    /**
     * Desired Kubernetes version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except you set a higher version number. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by ACK. Do not specify if cluster auto upgrade is enabled, see cluster_auto_upgrade for more information.
     * 
     */
    @Export(name="version", refs={String.class}, tree="[0]")
    private Output<String> version;

    /**
     * @return Desired Kubernetes version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except you set a higher version number. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by ACK. Do not specify if cluster auto upgrade is enabled, see cluster_auto_upgrade for more information.
     * 
     */
    public Output<String> version() {
        return this.version;
    }
    /**
     * The ID of VPC where the current cluster is located.
     * 
     */
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output<String> vpcId;

    /**
     * @return The ID of VPC where the current cluster is located.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }
    /**
     * The vSwitches of the control plane.
     * &gt; **NOTE:** Please take of note before updating the `vswitch_ids`:
     * * This parameter overwrites the existing configuration. You must specify all vSwitches of the control plane.
     * * The control plane restarts during the change process. Exercise caution when you perform this operation.
     * * Ensure that all security groups of the cluster, including the security groups of the control plane, all node pools, and container network, are allowed to access the CIDR blocks of the new vSwitches. This ensures that the nodes and containers can connect to the API server.
     * * If the new vSwitches of the control plane are configured with an ACL, ensure that the ACL allows communication between the new vSwitches and CIDR blocks such as those of the cluster nodes and the container network.
     * 
     */
    @Export(name="vswitchIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> vswitchIds;

    /**
     * @return The vSwitches of the control plane.
     * &gt; **NOTE:** Please take of note before updating the `vswitch_ids`:
     * * This parameter overwrites the existing configuration. You must specify all vSwitches of the control plane.
     * * The control plane restarts during the change process. Exercise caution when you perform this operation.
     * * Ensure that all security groups of the cluster, including the security groups of the control plane, all node pools, and container network, are allowed to access the CIDR blocks of the new vSwitches. This ensures that the nodes and containers can connect to the API server.
     * * If the new vSwitches of the control plane are configured with an ACL, ensure that the ACL allows communication between the new vSwitches and CIDR blocks such as those of the cluster nodes and the container network.
     * 
     */
    public Output<List<String>> vswitchIds() {
        return this.vswitchIds;
    }
    /**
     * The RamRole Name attached to worker node.
     * 
     */
    @Export(name="workerRamRoleName", refs={String.class}, tree="[0]")
    private Output<String> workerRamRoleName;

    /**
     * @return The RamRole Name attached to worker node.
     * 
     */
    public Output<String> workerRamRoleName() {
        return this.workerRamRoleName;
    }
    /**
     * The vSwitches used by control plane. Modification after creation will not take effect. Please use `vswitch_ids` to managed control plane vSwitches, which supports modifying control plane vSwitches.
     * 
     * @deprecated
     * Field &#39;worker_vswitch_ids&#39; has been deprecated from provider version 1.241.0. Please use &#39;vswitch_ids&#39; to managed control plane vswtiches
     * 
     */
    @Deprecated /* Field 'worker_vswitch_ids' has been deprecated from provider version 1.241.0. Please use 'vswitch_ids' to managed control plane vswtiches */
    @Export(name="workerVswitchIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> workerVswitchIds;

    /**
     * @return The vSwitches used by control plane. Modification after creation will not take effect. Please use `vswitch_ids` to managed control plane vSwitches, which supports modifying control plane vSwitches.
     * 
     */
    public Output<Optional<List<String>>> workerVswitchIds() {
        return Codegen.optional(this.workerVswitchIds);
    }
    /**
     * The IDs of the zone in which the cluster control plane is deployed. ACK automatically creates a VPC in the region and vSwitches in the specified zones. Only works for **Create** Operation. Do not specify this with `vswitch_ids` together.
     * 
     */
    @Export(name="zoneIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> zoneIds;

    /**
     * @return The IDs of the zone in which the cluster control plane is deployed. ACK automatically creates a VPC in the region and vSwitches in the specified zones. Only works for **Create** Operation. Do not specify this with `vswitch_ids` together.
     * 
     */
    public Output<Optional<List<String>>> zoneIds() {
        return Codegen.optional(this.zoneIds);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ManagedKubernetes(java.lang.String name) {
        this(name, ManagedKubernetesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ManagedKubernetes(java.lang.String name, @Nullable ManagedKubernetesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ManagedKubernetes(java.lang.String name, @Nullable ManagedKubernetesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:cs/managedKubernetes:ManagedKubernetes", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ManagedKubernetes(java.lang.String name, Output<java.lang.String> id, @Nullable ManagedKubernetesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:cs/managedKubernetes:ManagedKubernetes", name, state, makeResourceOptions(options, id), false);
    }

    private static ManagedKubernetesArgs makeArgs(@Nullable ManagedKubernetesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ManagedKubernetesArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ManagedKubernetes get(java.lang.String name, Output<java.lang.String> id, @Nullable ManagedKubernetesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ManagedKubernetes(name, id, state, options);
    }
}
