// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegistryEnterpriseSyncRuleState extends com.pulumi.resources.ResourceArgs {

    public static final RegistryEnterpriseSyncRuleState Empty = new RegistryEnterpriseSyncRuleState();

    /**
     * (Available since v1.240.0) The time when the synchronization rule was created.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return (Available since v1.240.0) The time when the synchronization rule was created.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The ID of the Container Registry source instance.
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return The ID of the Container Registry source instance.
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * Field `name` has been deprecated from provider version 1.240.0. New field `syncRuleName` instead.
     * 
     * @deprecated
     * Field `name` has been deprecated from provider version 1.240.0. New field `syncRuleName` instead.
     * 
     */
    @Deprecated /* Field `name` has been deprecated from provider version 1.240.0. New field `syncRuleName` instead. */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Field `name` has been deprecated from provider version 1.240.0. New field `syncRuleName` instead.
     * 
     * @deprecated
     * Field `name` has been deprecated from provider version 1.240.0. New field `syncRuleName` instead.
     * 
     */
    @Deprecated /* Field `name` has been deprecated from provider version 1.240.0. New field `syncRuleName` instead. */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The namespace name of the source instance.
     * 
     */
    @Import(name="namespaceName")
    private @Nullable Output<String> namespaceName;

    /**
     * @return The namespace name of the source instance.
     * 
     */
    public Optional<Output<String>> namespaceName() {
        return Optional.ofNullable(this.namespaceName);
    }

    /**
     * (Available since v1.240.0) The region ID of the source instance.
     * 
     */
    @Import(name="regionId")
    private @Nullable Output<String> regionId;

    /**
     * @return (Available since v1.240.0) The region ID of the source instance.
     * 
     */
    public Optional<Output<String>> regionId() {
        return Optional.ofNullable(this.regionId);
    }

    /**
     * The image repository name of the source instance.
     * 
     */
    @Import(name="repoName")
    private @Nullable Output<String> repoName;

    /**
     * @return The image repository name of the source instance.
     * 
     */
    public Optional<Output<String>> repoName() {
        return Optional.ofNullable(this.repoName);
    }

    /**
     * (Available since v1.240.0) The ID of the synchronization rule.
     * 
     */
    @Import(name="repoSyncRuleId")
    private @Nullable Output<String> repoSyncRuleId;

    /**
     * @return (Available since v1.240.0) The ID of the synchronization rule.
     * 
     */
    public Optional<Output<String>> repoSyncRuleId() {
        return Optional.ofNullable(this.repoSyncRuleId);
    }

    /**
     * (Deprecated since v1.240.0) Field `ruleId` has been deprecated from provider version 1.240.0. New field `repoSyncRuleId` instead.
     * 
     * @deprecated
     * Field `ruleId` has been deprecated from provider version 1.240.0. New field `repoSyncRuleId` instead.
     * 
     */
    @Deprecated /* Field `ruleId` has been deprecated from provider version 1.240.0. New field `repoSyncRuleId` instead. */
    @Import(name="ruleId")
    private @Nullable Output<String> ruleId;

    /**
     * @return (Deprecated since v1.240.0) Field `ruleId` has been deprecated from provider version 1.240.0. New field `repoSyncRuleId` instead.
     * 
     * @deprecated
     * Field `ruleId` has been deprecated from provider version 1.240.0. New field `repoSyncRuleId` instead.
     * 
     */
    @Deprecated /* Field `ruleId` has been deprecated from provider version 1.240.0. New field `repoSyncRuleId` instead. */
    public Optional<Output<String>> ruleId() {
        return Optional.ofNullable(this.ruleId);
    }

    /**
     * The synchronization direction.
     * 
     */
    @Import(name="syncDirection")
    private @Nullable Output<String> syncDirection;

    /**
     * @return The synchronization direction.
     * 
     */
    public Optional<Output<String>> syncDirection() {
        return Optional.ofNullable(this.syncDirection);
    }

    /**
     * The name of the sync rule.
     * 
     */
    @Import(name="syncRuleName")
    private @Nullable Output<String> syncRuleName;

    /**
     * @return The name of the sync rule.
     * 
     */
    public Optional<Output<String>> syncRuleName() {
        return Optional.ofNullable(this.syncRuleName);
    }

    /**
     * The synchronization scope. Valid values:
     * - `REPO`: Encrypts or decrypts data.
     * - `NAMESPACE`: Generates or verifies a digital signature.
     * &gt; **NOTE:** From version 1.240.0, `syncScope` can be set.
     * 
     */
    @Import(name="syncScope")
    private @Nullable Output<String> syncScope;

    /**
     * @return The synchronization scope. Valid values:
     * - `REPO`: Encrypts or decrypts data.
     * - `NAMESPACE`: Generates or verifies a digital signature.
     * &gt; **NOTE:** From version 1.240.0, `syncScope` can be set.
     * 
     */
    public Optional<Output<String>> syncScope() {
        return Optional.ofNullable(this.syncScope);
    }

    /**
     * The policy configured to trigger the synchronization rule. Default value: `PASSIVE`. Valid values:
     * - `INITIATIVE`: Manually triggers the synchronization rule.
     * - `PASSIVE`: Automatically triggers the synchronization rule.
     * 
     */
    @Import(name="syncTrigger")
    private @Nullable Output<String> syncTrigger;

    /**
     * @return The policy configured to trigger the synchronization rule. Default value: `PASSIVE`. Valid values:
     * - `INITIATIVE`: Manually triggers the synchronization rule.
     * - `PASSIVE`: Automatically triggers the synchronization rule.
     * 
     */
    public Optional<Output<String>> syncTrigger() {
        return Optional.ofNullable(this.syncTrigger);
    }

    /**
     * The regular expression used to filter image tags.
     * 
     */
    @Import(name="tagFilter")
    private @Nullable Output<String> tagFilter;

    /**
     * @return The regular expression used to filter image tags.
     * 
     */
    public Optional<Output<String>> tagFilter() {
        return Optional.ofNullable(this.tagFilter);
    }

    /**
     * The ID of the destination instance.
     * 
     */
    @Import(name="targetInstanceId")
    private @Nullable Output<String> targetInstanceId;

    /**
     * @return The ID of the destination instance.
     * 
     */
    public Optional<Output<String>> targetInstanceId() {
        return Optional.ofNullable(this.targetInstanceId);
    }

    /**
     * The namespace name of the destination instance.
     * 
     */
    @Import(name="targetNamespaceName")
    private @Nullable Output<String> targetNamespaceName;

    /**
     * @return The namespace name of the destination instance.
     * 
     */
    public Optional<Output<String>> targetNamespaceName() {
        return Optional.ofNullable(this.targetNamespaceName);
    }

    /**
     * The region ID of the destination instance.
     * 
     */
    @Import(name="targetRegionId")
    private @Nullable Output<String> targetRegionId;

    /**
     * @return The region ID of the destination instance.
     * 
     */
    public Optional<Output<String>> targetRegionId() {
        return Optional.ofNullable(this.targetRegionId);
    }

    /**
     * The image repository name of the destination instance.
     * 
     */
    @Import(name="targetRepoName")
    private @Nullable Output<String> targetRepoName;

    /**
     * @return The image repository name of the destination instance.
     * 
     */
    public Optional<Output<String>> targetRepoName() {
        return Optional.ofNullable(this.targetRepoName);
    }

    /**
     * The UID of the account to which the target instance belongs.
     * 
     */
    @Import(name="targetUserId")
    private @Nullable Output<String> targetUserId;

    /**
     * @return The UID of the account to which the target instance belongs.
     * 
     */
    public Optional<Output<String>> targetUserId() {
        return Optional.ofNullable(this.targetUserId);
    }

    private RegistryEnterpriseSyncRuleState() {}

    private RegistryEnterpriseSyncRuleState(RegistryEnterpriseSyncRuleState $) {
        this.createTime = $.createTime;
        this.instanceId = $.instanceId;
        this.name = $.name;
        this.namespaceName = $.namespaceName;
        this.regionId = $.regionId;
        this.repoName = $.repoName;
        this.repoSyncRuleId = $.repoSyncRuleId;
        this.ruleId = $.ruleId;
        this.syncDirection = $.syncDirection;
        this.syncRuleName = $.syncRuleName;
        this.syncScope = $.syncScope;
        this.syncTrigger = $.syncTrigger;
        this.tagFilter = $.tagFilter;
        this.targetInstanceId = $.targetInstanceId;
        this.targetNamespaceName = $.targetNamespaceName;
        this.targetRegionId = $.targetRegionId;
        this.targetRepoName = $.targetRepoName;
        this.targetUserId = $.targetUserId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegistryEnterpriseSyncRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegistryEnterpriseSyncRuleState $;

        public Builder() {
            $ = new RegistryEnterpriseSyncRuleState();
        }

        public Builder(RegistryEnterpriseSyncRuleState defaults) {
            $ = new RegistryEnterpriseSyncRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime (Available since v1.240.0) The time when the synchronization rule was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime (Available since v1.240.0) The time when the synchronization rule was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param instanceId The ID of the Container Registry source instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The ID of the Container Registry source instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param name Field `name` has been deprecated from provider version 1.240.0. New field `syncRuleName` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `name` has been deprecated from provider version 1.240.0. New field `syncRuleName` instead.
         * 
         */
        @Deprecated /* Field `name` has been deprecated from provider version 1.240.0. New field `syncRuleName` instead. */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Field `name` has been deprecated from provider version 1.240.0. New field `syncRuleName` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `name` has been deprecated from provider version 1.240.0. New field `syncRuleName` instead.
         * 
         */
        @Deprecated /* Field `name` has been deprecated from provider version 1.240.0. New field `syncRuleName` instead. */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namespaceName The namespace name of the source instance.
         * 
         * @return builder
         * 
         */
        public Builder namespaceName(@Nullable Output<String> namespaceName) {
            $.namespaceName = namespaceName;
            return this;
        }

        /**
         * @param namespaceName The namespace name of the source instance.
         * 
         * @return builder
         * 
         */
        public Builder namespaceName(String namespaceName) {
            return namespaceName(Output.of(namespaceName));
        }

        /**
         * @param regionId (Available since v1.240.0) The region ID of the source instance.
         * 
         * @return builder
         * 
         */
        public Builder regionId(@Nullable Output<String> regionId) {
            $.regionId = regionId;
            return this;
        }

        /**
         * @param regionId (Available since v1.240.0) The region ID of the source instance.
         * 
         * @return builder
         * 
         */
        public Builder regionId(String regionId) {
            return regionId(Output.of(regionId));
        }

        /**
         * @param repoName The image repository name of the source instance.
         * 
         * @return builder
         * 
         */
        public Builder repoName(@Nullable Output<String> repoName) {
            $.repoName = repoName;
            return this;
        }

        /**
         * @param repoName The image repository name of the source instance.
         * 
         * @return builder
         * 
         */
        public Builder repoName(String repoName) {
            return repoName(Output.of(repoName));
        }

        /**
         * @param repoSyncRuleId (Available since v1.240.0) The ID of the synchronization rule.
         * 
         * @return builder
         * 
         */
        public Builder repoSyncRuleId(@Nullable Output<String> repoSyncRuleId) {
            $.repoSyncRuleId = repoSyncRuleId;
            return this;
        }

        /**
         * @param repoSyncRuleId (Available since v1.240.0) The ID of the synchronization rule.
         * 
         * @return builder
         * 
         */
        public Builder repoSyncRuleId(String repoSyncRuleId) {
            return repoSyncRuleId(Output.of(repoSyncRuleId));
        }

        /**
         * @param ruleId (Deprecated since v1.240.0) Field `ruleId` has been deprecated from provider version 1.240.0. New field `repoSyncRuleId` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `ruleId` has been deprecated from provider version 1.240.0. New field `repoSyncRuleId` instead.
         * 
         */
        @Deprecated /* Field `ruleId` has been deprecated from provider version 1.240.0. New field `repoSyncRuleId` instead. */
        public Builder ruleId(@Nullable Output<String> ruleId) {
            $.ruleId = ruleId;
            return this;
        }

        /**
         * @param ruleId (Deprecated since v1.240.0) Field `ruleId` has been deprecated from provider version 1.240.0. New field `repoSyncRuleId` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `ruleId` has been deprecated from provider version 1.240.0. New field `repoSyncRuleId` instead.
         * 
         */
        @Deprecated /* Field `ruleId` has been deprecated from provider version 1.240.0. New field `repoSyncRuleId` instead. */
        public Builder ruleId(String ruleId) {
            return ruleId(Output.of(ruleId));
        }

        /**
         * @param syncDirection The synchronization direction.
         * 
         * @return builder
         * 
         */
        public Builder syncDirection(@Nullable Output<String> syncDirection) {
            $.syncDirection = syncDirection;
            return this;
        }

        /**
         * @param syncDirection The synchronization direction.
         * 
         * @return builder
         * 
         */
        public Builder syncDirection(String syncDirection) {
            return syncDirection(Output.of(syncDirection));
        }

        /**
         * @param syncRuleName The name of the sync rule.
         * 
         * @return builder
         * 
         */
        public Builder syncRuleName(@Nullable Output<String> syncRuleName) {
            $.syncRuleName = syncRuleName;
            return this;
        }

        /**
         * @param syncRuleName The name of the sync rule.
         * 
         * @return builder
         * 
         */
        public Builder syncRuleName(String syncRuleName) {
            return syncRuleName(Output.of(syncRuleName));
        }

        /**
         * @param syncScope The synchronization scope. Valid values:
         * - `REPO`: Encrypts or decrypts data.
         * - `NAMESPACE`: Generates or verifies a digital signature.
         * &gt; **NOTE:** From version 1.240.0, `syncScope` can be set.
         * 
         * @return builder
         * 
         */
        public Builder syncScope(@Nullable Output<String> syncScope) {
            $.syncScope = syncScope;
            return this;
        }

        /**
         * @param syncScope The synchronization scope. Valid values:
         * - `REPO`: Encrypts or decrypts data.
         * - `NAMESPACE`: Generates or verifies a digital signature.
         * &gt; **NOTE:** From version 1.240.0, `syncScope` can be set.
         * 
         * @return builder
         * 
         */
        public Builder syncScope(String syncScope) {
            return syncScope(Output.of(syncScope));
        }

        /**
         * @param syncTrigger The policy configured to trigger the synchronization rule. Default value: `PASSIVE`. Valid values:
         * - `INITIATIVE`: Manually triggers the synchronization rule.
         * - `PASSIVE`: Automatically triggers the synchronization rule.
         * 
         * @return builder
         * 
         */
        public Builder syncTrigger(@Nullable Output<String> syncTrigger) {
            $.syncTrigger = syncTrigger;
            return this;
        }

        /**
         * @param syncTrigger The policy configured to trigger the synchronization rule. Default value: `PASSIVE`. Valid values:
         * - `INITIATIVE`: Manually triggers the synchronization rule.
         * - `PASSIVE`: Automatically triggers the synchronization rule.
         * 
         * @return builder
         * 
         */
        public Builder syncTrigger(String syncTrigger) {
            return syncTrigger(Output.of(syncTrigger));
        }

        /**
         * @param tagFilter The regular expression used to filter image tags.
         * 
         * @return builder
         * 
         */
        public Builder tagFilter(@Nullable Output<String> tagFilter) {
            $.tagFilter = tagFilter;
            return this;
        }

        /**
         * @param tagFilter The regular expression used to filter image tags.
         * 
         * @return builder
         * 
         */
        public Builder tagFilter(String tagFilter) {
            return tagFilter(Output.of(tagFilter));
        }

        /**
         * @param targetInstanceId The ID of the destination instance.
         * 
         * @return builder
         * 
         */
        public Builder targetInstanceId(@Nullable Output<String> targetInstanceId) {
            $.targetInstanceId = targetInstanceId;
            return this;
        }

        /**
         * @param targetInstanceId The ID of the destination instance.
         * 
         * @return builder
         * 
         */
        public Builder targetInstanceId(String targetInstanceId) {
            return targetInstanceId(Output.of(targetInstanceId));
        }

        /**
         * @param targetNamespaceName The namespace name of the destination instance.
         * 
         * @return builder
         * 
         */
        public Builder targetNamespaceName(@Nullable Output<String> targetNamespaceName) {
            $.targetNamespaceName = targetNamespaceName;
            return this;
        }

        /**
         * @param targetNamespaceName The namespace name of the destination instance.
         * 
         * @return builder
         * 
         */
        public Builder targetNamespaceName(String targetNamespaceName) {
            return targetNamespaceName(Output.of(targetNamespaceName));
        }

        /**
         * @param targetRegionId The region ID of the destination instance.
         * 
         * @return builder
         * 
         */
        public Builder targetRegionId(@Nullable Output<String> targetRegionId) {
            $.targetRegionId = targetRegionId;
            return this;
        }

        /**
         * @param targetRegionId The region ID of the destination instance.
         * 
         * @return builder
         * 
         */
        public Builder targetRegionId(String targetRegionId) {
            return targetRegionId(Output.of(targetRegionId));
        }

        /**
         * @param targetRepoName The image repository name of the destination instance.
         * 
         * @return builder
         * 
         */
        public Builder targetRepoName(@Nullable Output<String> targetRepoName) {
            $.targetRepoName = targetRepoName;
            return this;
        }

        /**
         * @param targetRepoName The image repository name of the destination instance.
         * 
         * @return builder
         * 
         */
        public Builder targetRepoName(String targetRepoName) {
            return targetRepoName(Output.of(targetRepoName));
        }

        /**
         * @param targetUserId The UID of the account to which the target instance belongs.
         * 
         * @return builder
         * 
         */
        public Builder targetUserId(@Nullable Output<String> targetUserId) {
            $.targetUserId = targetUserId;
            return this;
        }

        /**
         * @param targetUserId The UID of the account to which the target instance belongs.
         * 
         * @return builder
         * 
         */
        public Builder targetUserId(String targetUserId) {
            return targetUserId(Output.of(targetUserId));
        }

        public RegistryEnterpriseSyncRuleState build() {
            return $;
        }
    }

}
