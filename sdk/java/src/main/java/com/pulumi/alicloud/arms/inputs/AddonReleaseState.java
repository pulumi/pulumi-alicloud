// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.arms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AddonReleaseState extends com.pulumi.resources.ResourceArgs {

    public static final AddonReleaseState Empty = new AddonReleaseState();

    /**
     * Addon Name.
     * 
     */
    @Import(name="addonName")
    private @Nullable Output<String> addonName;

    /**
     * @return Addon Name.
     * 
     */
    public Optional<Output<String>> addonName() {
        return Optional.ofNullable(this.addonName);
    }

    /**
     * The name of the resource.
     * 
     */
    @Import(name="addonReleaseName")
    private @Nullable Output<String> addonReleaseName;

    /**
     * @return The name of the resource.
     * 
     */
    public Optional<Output<String>> addonReleaseName() {
        return Optional.ofNullable(this.addonReleaseName);
    }

    /**
     * Version number of Addon. Addon information can be obtained through ListAddons.
     * 
     */
    @Import(name="addonVersion")
    private @Nullable Output<String> addonVersion;

    /**
     * @return Version number of Addon. Addon information can be obtained through ListAddons.
     * 
     */
    public Optional<Output<String>> addonVersion() {
        return Optional.ofNullable(this.addonVersion);
    }

    /**
     * The installed locale.
     * 
     */
    @Import(name="aliyunLang")
    private @Nullable Output<String> aliyunLang;

    /**
     * @return The installed locale.
     * 
     */
    public Optional<Output<String>> aliyunLang() {
        return Optional.ofNullable(this.aliyunLang);
    }

    /**
     * Creation time.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Creation time.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Environment id.
     * 
     */
    @Import(name="environmentId")
    private @Nullable Output<String> environmentId;

    /**
     * @return Environment id.
     * 
     */
    public Optional<Output<String>> environmentId() {
        return Optional.ofNullable(this.environmentId);
    }

    /**
     * Configuration information for installing Addon. Obtain the configuration template from ListAddonSchema, for example, {&#34;host&#34;:&#34;mysql-service.default&#34;,&#34;port&#34;:3306,&#34;username&#34;:&#34;root&#34;,&#34;password&#34;:&#34;roots&#34;}.
     * 
     */
    @Import(name="values")
    private @Nullable Output<String> values;

    /**
     * @return Configuration information for installing Addon. Obtain the configuration template from ListAddonSchema, for example, {&#34;host&#34;:&#34;mysql-service.default&#34;,&#34;port&#34;:3306,&#34;username&#34;:&#34;root&#34;,&#34;password&#34;:&#34;roots&#34;}.
     * 
     */
    public Optional<Output<String>> values() {
        return Optional.ofNullable(this.values);
    }

    private AddonReleaseState() {}

    private AddonReleaseState(AddonReleaseState $) {
        this.addonName = $.addonName;
        this.addonReleaseName = $.addonReleaseName;
        this.addonVersion = $.addonVersion;
        this.aliyunLang = $.aliyunLang;
        this.createTime = $.createTime;
        this.environmentId = $.environmentId;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AddonReleaseState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AddonReleaseState $;

        public Builder() {
            $ = new AddonReleaseState();
        }

        public Builder(AddonReleaseState defaults) {
            $ = new AddonReleaseState(Objects.requireNonNull(defaults));
        }

        /**
         * @param addonName Addon Name.
         * 
         * @return builder
         * 
         */
        public Builder addonName(@Nullable Output<String> addonName) {
            $.addonName = addonName;
            return this;
        }

        /**
         * @param addonName Addon Name.
         * 
         * @return builder
         * 
         */
        public Builder addonName(String addonName) {
            return addonName(Output.of(addonName));
        }

        /**
         * @param addonReleaseName The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder addonReleaseName(@Nullable Output<String> addonReleaseName) {
            $.addonReleaseName = addonReleaseName;
            return this;
        }

        /**
         * @param addonReleaseName The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder addonReleaseName(String addonReleaseName) {
            return addonReleaseName(Output.of(addonReleaseName));
        }

        /**
         * @param addonVersion Version number of Addon. Addon information can be obtained through ListAddons.
         * 
         * @return builder
         * 
         */
        public Builder addonVersion(@Nullable Output<String> addonVersion) {
            $.addonVersion = addonVersion;
            return this;
        }

        /**
         * @param addonVersion Version number of Addon. Addon information can be obtained through ListAddons.
         * 
         * @return builder
         * 
         */
        public Builder addonVersion(String addonVersion) {
            return addonVersion(Output.of(addonVersion));
        }

        /**
         * @param aliyunLang The installed locale.
         * 
         * @return builder
         * 
         */
        public Builder aliyunLang(@Nullable Output<String> aliyunLang) {
            $.aliyunLang = aliyunLang;
            return this;
        }

        /**
         * @param aliyunLang The installed locale.
         * 
         * @return builder
         * 
         */
        public Builder aliyunLang(String aliyunLang) {
            return aliyunLang(Output.of(aliyunLang));
        }

        /**
         * @param createTime Creation time.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Creation time.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param environmentId Environment id.
         * 
         * @return builder
         * 
         */
        public Builder environmentId(@Nullable Output<String> environmentId) {
            $.environmentId = environmentId;
            return this;
        }

        /**
         * @param environmentId Environment id.
         * 
         * @return builder
         * 
         */
        public Builder environmentId(String environmentId) {
            return environmentId(Output.of(environmentId));
        }

        /**
         * @param values Configuration information for installing Addon. Obtain the configuration template from ListAddonSchema, for example, {&#34;host&#34;:&#34;mysql-service.default&#34;,&#34;port&#34;:3306,&#34;username&#34;:&#34;root&#34;,&#34;password&#34;:&#34;roots&#34;}.
         * 
         * @return builder
         * 
         */
        public Builder values(@Nullable Output<String> values) {
            $.values = values;
            return this;
        }

        /**
         * @param values Configuration information for installing Addon. Obtain the configuration template from ListAddonSchema, for example, {&#34;host&#34;:&#34;mysql-service.default&#34;,&#34;port&#34;:3306,&#34;username&#34;:&#34;root&#34;,&#34;password&#34;:&#34;roots&#34;}.
         * 
         * @return builder
         * 
         */
        public Builder values(String values) {
            return values(Output.of(values));
        }

        public AddonReleaseState build() {
            return $;
        }
    }

}
