// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nas;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.nas.inputs.GetAccessGroupsArgs;
import com.pulumi.alicloud.nas.inputs.GetAccessGroupsPlainArgs;
import com.pulumi.alicloud.nas.inputs.GetAccessRulesArgs;
import com.pulumi.alicloud.nas.inputs.GetAccessRulesPlainArgs;
import com.pulumi.alicloud.nas.inputs.GetAutoSnapshotPoliciesArgs;
import com.pulumi.alicloud.nas.inputs.GetAutoSnapshotPoliciesPlainArgs;
import com.pulumi.alicloud.nas.inputs.GetDataFlowsArgs;
import com.pulumi.alicloud.nas.inputs.GetDataFlowsPlainArgs;
import com.pulumi.alicloud.nas.inputs.GetFileSystemsArgs;
import com.pulumi.alicloud.nas.inputs.GetFileSystemsPlainArgs;
import com.pulumi.alicloud.nas.inputs.GetFilesetsArgs;
import com.pulumi.alicloud.nas.inputs.GetFilesetsPlainArgs;
import com.pulumi.alicloud.nas.inputs.GetLifecyclePoliciesArgs;
import com.pulumi.alicloud.nas.inputs.GetLifecyclePoliciesPlainArgs;
import com.pulumi.alicloud.nas.inputs.GetMountTargetsArgs;
import com.pulumi.alicloud.nas.inputs.GetMountTargetsPlainArgs;
import com.pulumi.alicloud.nas.inputs.GetProtocolsArgs;
import com.pulumi.alicloud.nas.inputs.GetProtocolsPlainArgs;
import com.pulumi.alicloud.nas.inputs.GetServiceArgs;
import com.pulumi.alicloud.nas.inputs.GetServicePlainArgs;
import com.pulumi.alicloud.nas.inputs.GetSnapshotsArgs;
import com.pulumi.alicloud.nas.inputs.GetSnapshotsPlainArgs;
import com.pulumi.alicloud.nas.inputs.GetZonesArgs;
import com.pulumi.alicloud.nas.inputs.GetZonesPlainArgs;
import com.pulumi.alicloud.nas.outputs.GetAccessGroupsResult;
import com.pulumi.alicloud.nas.outputs.GetAccessRulesResult;
import com.pulumi.alicloud.nas.outputs.GetAutoSnapshotPoliciesResult;
import com.pulumi.alicloud.nas.outputs.GetDataFlowsResult;
import com.pulumi.alicloud.nas.outputs.GetFileSystemsResult;
import com.pulumi.alicloud.nas.outputs.GetFilesetsResult;
import com.pulumi.alicloud.nas.outputs.GetLifecyclePoliciesResult;
import com.pulumi.alicloud.nas.outputs.GetMountTargetsResult;
import com.pulumi.alicloud.nas.outputs.GetProtocolsResult;
import com.pulumi.alicloud.nas.outputs.GetServiceResult;
import com.pulumi.alicloud.nas.outputs.GetSnapshotsResult;
import com.pulumi.alicloud.nas.outputs.GetZonesResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class NasFunctions {
    /**
     * This data source provides user-available access groups. Use when you can create mount points
     * 
     * &gt; NOTE: Available in 1.35.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetAccessGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NasFunctions.getAccessGroups(GetAccessGroupsArgs.builder()
     *             .nameRegex(&#34;^foo&#34;)
     *             .accessGroupType(&#34;Classic&#34;)
     *             .description(&#34;tf-testAccAccessGroupsdatasource&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;alicloudNasAccessGroupsId&#34;, example.applyValue(getAccessGroupsResult -&gt; getAccessGroupsResult.groups()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccessGroupsResult> getAccessGroups() {
        return getAccessGroups(GetAccessGroupsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides user-available access groups. Use when you can create mount points
     * 
     * &gt; NOTE: Available in 1.35.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetAccessGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NasFunctions.getAccessGroups(GetAccessGroupsArgs.builder()
     *             .nameRegex(&#34;^foo&#34;)
     *             .accessGroupType(&#34;Classic&#34;)
     *             .description(&#34;tf-testAccAccessGroupsdatasource&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;alicloudNasAccessGroupsId&#34;, example.applyValue(getAccessGroupsResult -&gt; getAccessGroupsResult.groups()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccessGroupsResult> getAccessGroupsPlain() {
        return getAccessGroupsPlain(GetAccessGroupsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides user-available access groups. Use when you can create mount points
     * 
     * &gt; NOTE: Available in 1.35.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetAccessGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NasFunctions.getAccessGroups(GetAccessGroupsArgs.builder()
     *             .nameRegex(&#34;^foo&#34;)
     *             .accessGroupType(&#34;Classic&#34;)
     *             .description(&#34;tf-testAccAccessGroupsdatasource&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;alicloudNasAccessGroupsId&#34;, example.applyValue(getAccessGroupsResult -&gt; getAccessGroupsResult.groups()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccessGroupsResult> getAccessGroups(GetAccessGroupsArgs args) {
        return getAccessGroups(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides user-available access groups. Use when you can create mount points
     * 
     * &gt; NOTE: Available in 1.35.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetAccessGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NasFunctions.getAccessGroups(GetAccessGroupsArgs.builder()
     *             .nameRegex(&#34;^foo&#34;)
     *             .accessGroupType(&#34;Classic&#34;)
     *             .description(&#34;tf-testAccAccessGroupsdatasource&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;alicloudNasAccessGroupsId&#34;, example.applyValue(getAccessGroupsResult -&gt; getAccessGroupsResult.groups()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccessGroupsResult> getAccessGroupsPlain(GetAccessGroupsPlainArgs args) {
        return getAccessGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides user-available access groups. Use when you can create mount points
     * 
     * &gt; NOTE: Available in 1.35.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetAccessGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NasFunctions.getAccessGroups(GetAccessGroupsArgs.builder()
     *             .nameRegex(&#34;^foo&#34;)
     *             .accessGroupType(&#34;Classic&#34;)
     *             .description(&#34;tf-testAccAccessGroupsdatasource&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;alicloudNasAccessGroupsId&#34;, example.applyValue(getAccessGroupsResult -&gt; getAccessGroupsResult.groups()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccessGroupsResult> getAccessGroups(GetAccessGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:nas/getAccessGroups:getAccessGroups", TypeShape.of(GetAccessGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides user-available access groups. Use when you can create mount points
     * 
     * &gt; NOTE: Available in 1.35.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetAccessGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NasFunctions.getAccessGroups(GetAccessGroupsArgs.builder()
     *             .nameRegex(&#34;^foo&#34;)
     *             .accessGroupType(&#34;Classic&#34;)
     *             .description(&#34;tf-testAccAccessGroupsdatasource&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;alicloudNasAccessGroupsId&#34;, example.applyValue(getAccessGroupsResult -&gt; getAccessGroupsResult.groups()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccessGroupsResult> getAccessGroupsPlain(GetAccessGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:nas/getAccessGroups:getAccessGroups", TypeShape.of(GetAccessGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides AccessRule available to the user.
     * 
     * &gt; **NOTE**: Available in 1.35.0+
     * 
     */
    public static Output<GetAccessRulesResult> getAccessRules(GetAccessRulesArgs args) {
        return getAccessRules(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides AccessRule available to the user.
     * 
     * &gt; **NOTE**: Available in 1.35.0+
     * 
     */
    public static CompletableFuture<GetAccessRulesResult> getAccessRulesPlain(GetAccessRulesPlainArgs args) {
        return getAccessRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides AccessRule available to the user.
     * 
     * &gt; **NOTE**: Available in 1.35.0+
     * 
     */
    public static Output<GetAccessRulesResult> getAccessRules(GetAccessRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:nas/getAccessRules:getAccessRules", TypeShape.of(GetAccessRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides AccessRule available to the user.
     * 
     * &gt; **NOTE**: Available in 1.35.0+
     * 
     */
    public static CompletableFuture<GetAccessRulesResult> getAccessRulesPlain(GetAccessRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:nas/getAccessRules:getAccessRules", TypeShape.of(GetAccessRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides Auto Snapshot Policies available to the user.
     * 
     * &gt; **NOTE**: Available in v1.153.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetAutoSnapshotPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.builder()
     *             .ids(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasAutoSnapshotPoliciesId1&#34;, ids.applyValue(getAutoSnapshotPoliciesResult -&gt; getAutoSnapshotPoliciesResult.policies()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAutoSnapshotPoliciesResult> getAutoSnapshotPolicies() {
        return getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides Auto Snapshot Policies available to the user.
     * 
     * &gt; **NOTE**: Available in v1.153.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetAutoSnapshotPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.builder()
     *             .ids(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasAutoSnapshotPoliciesId1&#34;, ids.applyValue(getAutoSnapshotPoliciesResult -&gt; getAutoSnapshotPoliciesResult.policies()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAutoSnapshotPoliciesResult> getAutoSnapshotPoliciesPlain() {
        return getAutoSnapshotPoliciesPlain(GetAutoSnapshotPoliciesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides Auto Snapshot Policies available to the user.
     * 
     * &gt; **NOTE**: Available in v1.153.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetAutoSnapshotPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.builder()
     *             .ids(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasAutoSnapshotPoliciesId1&#34;, ids.applyValue(getAutoSnapshotPoliciesResult -&gt; getAutoSnapshotPoliciesResult.policies()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAutoSnapshotPoliciesResult> getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs args) {
        return getAutoSnapshotPolicies(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides Auto Snapshot Policies available to the user.
     * 
     * &gt; **NOTE**: Available in v1.153.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetAutoSnapshotPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.builder()
     *             .ids(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasAutoSnapshotPoliciesId1&#34;, ids.applyValue(getAutoSnapshotPoliciesResult -&gt; getAutoSnapshotPoliciesResult.policies()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAutoSnapshotPoliciesResult> getAutoSnapshotPoliciesPlain(GetAutoSnapshotPoliciesPlainArgs args) {
        return getAutoSnapshotPoliciesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides Auto Snapshot Policies available to the user.
     * 
     * &gt; **NOTE**: Available in v1.153.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetAutoSnapshotPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.builder()
     *             .ids(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasAutoSnapshotPoliciesId1&#34;, ids.applyValue(getAutoSnapshotPoliciesResult -&gt; getAutoSnapshotPoliciesResult.policies()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAutoSnapshotPoliciesResult> getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:nas/getAutoSnapshotPolicies:getAutoSnapshotPolicies", TypeShape.of(GetAutoSnapshotPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides Auto Snapshot Policies available to the user.
     * 
     * &gt; **NOTE**: Available in v1.153.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetAutoSnapshotPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.builder()
     *             .ids(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasAutoSnapshotPoliciesId1&#34;, ids.applyValue(getAutoSnapshotPoliciesResult -&gt; getAutoSnapshotPoliciesResult.policies()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAutoSnapshotPoliciesResult> getAutoSnapshotPoliciesPlain(GetAutoSnapshotPoliciesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:nas/getAutoSnapshotPolicies:getAutoSnapshotPolicies", TypeShape.of(GetAutoSnapshotPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Nas Data Flows of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.153.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetDataFlowsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getDataFlows(GetDataFlowsArgs.builder()
     *             .fileSystemId(&#34;example_value&#34;)
     *             .ids(            
     *                 &#34;example_value-1&#34;,
     *                 &#34;example_value-2&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasDataFlowId1&#34;, ids.applyValue(getDataFlowsResult -&gt; getDataFlowsResult.flows()[0].id()));
     *         final var status = NasFunctions.getDataFlows(GetDataFlowsArgs.builder()
     *             .fileSystemId(&#34;example_value&#34;)
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasDataFlowId2&#34;, status.applyValue(getDataFlowsResult -&gt; getDataFlowsResult.flows()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDataFlowsResult> getDataFlows(GetDataFlowsArgs args) {
        return getDataFlows(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Nas Data Flows of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.153.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetDataFlowsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getDataFlows(GetDataFlowsArgs.builder()
     *             .fileSystemId(&#34;example_value&#34;)
     *             .ids(            
     *                 &#34;example_value-1&#34;,
     *                 &#34;example_value-2&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasDataFlowId1&#34;, ids.applyValue(getDataFlowsResult -&gt; getDataFlowsResult.flows()[0].id()));
     *         final var status = NasFunctions.getDataFlows(GetDataFlowsArgs.builder()
     *             .fileSystemId(&#34;example_value&#34;)
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasDataFlowId2&#34;, status.applyValue(getDataFlowsResult -&gt; getDataFlowsResult.flows()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDataFlowsResult> getDataFlowsPlain(GetDataFlowsPlainArgs args) {
        return getDataFlowsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Nas Data Flows of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.153.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetDataFlowsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getDataFlows(GetDataFlowsArgs.builder()
     *             .fileSystemId(&#34;example_value&#34;)
     *             .ids(            
     *                 &#34;example_value-1&#34;,
     *                 &#34;example_value-2&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasDataFlowId1&#34;, ids.applyValue(getDataFlowsResult -&gt; getDataFlowsResult.flows()[0].id()));
     *         final var status = NasFunctions.getDataFlows(GetDataFlowsArgs.builder()
     *             .fileSystemId(&#34;example_value&#34;)
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasDataFlowId2&#34;, status.applyValue(getDataFlowsResult -&gt; getDataFlowsResult.flows()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDataFlowsResult> getDataFlows(GetDataFlowsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:nas/getDataFlows:getDataFlows", TypeShape.of(GetDataFlowsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Nas Data Flows of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.153.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetDataFlowsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getDataFlows(GetDataFlowsArgs.builder()
     *             .fileSystemId(&#34;example_value&#34;)
     *             .ids(            
     *                 &#34;example_value-1&#34;,
     *                 &#34;example_value-2&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasDataFlowId1&#34;, ids.applyValue(getDataFlowsResult -&gt; getDataFlowsResult.flows()[0].id()));
     *         final var status = NasFunctions.getDataFlows(GetDataFlowsArgs.builder()
     *             .fileSystemId(&#34;example_value&#34;)
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasDataFlowId2&#34;, status.applyValue(getDataFlowsResult -&gt; getDataFlowsResult.flows()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDataFlowsResult> getDataFlowsPlain(GetDataFlowsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:nas/getDataFlows:getDataFlows", TypeShape.of(GetDataFlowsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides FileSystems available to the user.
     * 
     * &gt; **NOTE**: Available in 1.35.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetFileSystemsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fs = NasFunctions.getFileSystems(GetFileSystemsArgs.builder()
     *             .descriptionRegex(alicloud_nas_file_system.foo().description())
     *             .protocolType(&#34;NFS&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;alicloudNasFileSystemsId&#34;, fs.applyValue(getFileSystemsResult -&gt; getFileSystemsResult.systems()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFileSystemsResult> getFileSystems() {
        return getFileSystems(GetFileSystemsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides FileSystems available to the user.
     * 
     * &gt; **NOTE**: Available in 1.35.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetFileSystemsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fs = NasFunctions.getFileSystems(GetFileSystemsArgs.builder()
     *             .descriptionRegex(alicloud_nas_file_system.foo().description())
     *             .protocolType(&#34;NFS&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;alicloudNasFileSystemsId&#34;, fs.applyValue(getFileSystemsResult -&gt; getFileSystemsResult.systems()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFileSystemsResult> getFileSystemsPlain() {
        return getFileSystemsPlain(GetFileSystemsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides FileSystems available to the user.
     * 
     * &gt; **NOTE**: Available in 1.35.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetFileSystemsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fs = NasFunctions.getFileSystems(GetFileSystemsArgs.builder()
     *             .descriptionRegex(alicloud_nas_file_system.foo().description())
     *             .protocolType(&#34;NFS&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;alicloudNasFileSystemsId&#34;, fs.applyValue(getFileSystemsResult -&gt; getFileSystemsResult.systems()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFileSystemsResult> getFileSystems(GetFileSystemsArgs args) {
        return getFileSystems(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides FileSystems available to the user.
     * 
     * &gt; **NOTE**: Available in 1.35.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetFileSystemsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fs = NasFunctions.getFileSystems(GetFileSystemsArgs.builder()
     *             .descriptionRegex(alicloud_nas_file_system.foo().description())
     *             .protocolType(&#34;NFS&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;alicloudNasFileSystemsId&#34;, fs.applyValue(getFileSystemsResult -&gt; getFileSystemsResult.systems()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFileSystemsResult> getFileSystemsPlain(GetFileSystemsPlainArgs args) {
        return getFileSystemsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides FileSystems available to the user.
     * 
     * &gt; **NOTE**: Available in 1.35.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetFileSystemsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fs = NasFunctions.getFileSystems(GetFileSystemsArgs.builder()
     *             .descriptionRegex(alicloud_nas_file_system.foo().description())
     *             .protocolType(&#34;NFS&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;alicloudNasFileSystemsId&#34;, fs.applyValue(getFileSystemsResult -&gt; getFileSystemsResult.systems()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFileSystemsResult> getFileSystems(GetFileSystemsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:nas/getFileSystems:getFileSystems", TypeShape.of(GetFileSystemsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides FileSystems available to the user.
     * 
     * &gt; **NOTE**: Available in 1.35.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetFileSystemsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fs = NasFunctions.getFileSystems(GetFileSystemsArgs.builder()
     *             .descriptionRegex(alicloud_nas_file_system.foo().description())
     *             .protocolType(&#34;NFS&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;alicloudNasFileSystemsId&#34;, fs.applyValue(getFileSystemsResult -&gt; getFileSystemsResult.systems()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFileSystemsResult> getFileSystemsPlain(GetFileSystemsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:nas/getFileSystems:getFileSystems", TypeShape.of(GetFileSystemsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Nas Filesets of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.153.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetFilesetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getFilesets(GetFilesetsArgs.builder()
     *             .fileSystemId(&#34;example_value&#34;)
     *             .ids(            
     *                 &#34;example_value-1&#34;,
     *                 &#34;example_value-2&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasFilesetId1&#34;, ids.applyValue(getFilesetsResult -&gt; getFilesetsResult.filesets()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFilesetsResult> getFilesets(GetFilesetsArgs args) {
        return getFilesets(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Nas Filesets of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.153.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetFilesetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getFilesets(GetFilesetsArgs.builder()
     *             .fileSystemId(&#34;example_value&#34;)
     *             .ids(            
     *                 &#34;example_value-1&#34;,
     *                 &#34;example_value-2&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasFilesetId1&#34;, ids.applyValue(getFilesetsResult -&gt; getFilesetsResult.filesets()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFilesetsResult> getFilesetsPlain(GetFilesetsPlainArgs args) {
        return getFilesetsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Nas Filesets of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.153.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetFilesetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getFilesets(GetFilesetsArgs.builder()
     *             .fileSystemId(&#34;example_value&#34;)
     *             .ids(            
     *                 &#34;example_value-1&#34;,
     *                 &#34;example_value-2&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasFilesetId1&#34;, ids.applyValue(getFilesetsResult -&gt; getFilesetsResult.filesets()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFilesetsResult> getFilesets(GetFilesetsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:nas/getFilesets:getFilesets", TypeShape.of(GetFilesetsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Nas Filesets of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.153.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetFilesetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getFilesets(GetFilesetsArgs.builder()
     *             .fileSystemId(&#34;example_value&#34;)
     *             .ids(            
     *                 &#34;example_value-1&#34;,
     *                 &#34;example_value-2&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasFilesetId1&#34;, ids.applyValue(getFilesetsResult -&gt; getFilesetsResult.filesets()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFilesetsResult> getFilesetsPlain(GetFilesetsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:nas/getFilesets:getFilesets", TypeShape.of(GetFilesetsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Nas Lifecycle Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.153.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetLifecyclePoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getLifecyclePolicies(GetLifecyclePoliciesArgs.builder()
     *             .fileSystemId(&#34;example_value&#34;)
     *             .ids(            
     *                 &#34;my-LifecyclePolicy-1&#34;,
     *                 &#34;my-LifecyclePolicy-2&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasLifecyclePolicyId1&#34;, ids.applyValue(getLifecyclePoliciesResult -&gt; getLifecyclePoliciesResult.policies()[0].id()));
     *         final var nameRegex = NasFunctions.getLifecyclePolicies(GetLifecyclePoliciesArgs.builder()
     *             .fileSystemId(&#34;example_value&#34;)
     *             .nameRegex(&#34;^my-LifecyclePolicy&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasLifecyclePolicyId2&#34;, nameRegex.applyValue(getLifecyclePoliciesResult -&gt; getLifecyclePoliciesResult.policies()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLifecyclePoliciesResult> getLifecyclePolicies(GetLifecyclePoliciesArgs args) {
        return getLifecyclePolicies(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Nas Lifecycle Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.153.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetLifecyclePoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getLifecyclePolicies(GetLifecyclePoliciesArgs.builder()
     *             .fileSystemId(&#34;example_value&#34;)
     *             .ids(            
     *                 &#34;my-LifecyclePolicy-1&#34;,
     *                 &#34;my-LifecyclePolicy-2&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasLifecyclePolicyId1&#34;, ids.applyValue(getLifecyclePoliciesResult -&gt; getLifecyclePoliciesResult.policies()[0].id()));
     *         final var nameRegex = NasFunctions.getLifecyclePolicies(GetLifecyclePoliciesArgs.builder()
     *             .fileSystemId(&#34;example_value&#34;)
     *             .nameRegex(&#34;^my-LifecyclePolicy&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasLifecyclePolicyId2&#34;, nameRegex.applyValue(getLifecyclePoliciesResult -&gt; getLifecyclePoliciesResult.policies()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLifecyclePoliciesResult> getLifecyclePoliciesPlain(GetLifecyclePoliciesPlainArgs args) {
        return getLifecyclePoliciesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Nas Lifecycle Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.153.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetLifecyclePoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getLifecyclePolicies(GetLifecyclePoliciesArgs.builder()
     *             .fileSystemId(&#34;example_value&#34;)
     *             .ids(            
     *                 &#34;my-LifecyclePolicy-1&#34;,
     *                 &#34;my-LifecyclePolicy-2&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasLifecyclePolicyId1&#34;, ids.applyValue(getLifecyclePoliciesResult -&gt; getLifecyclePoliciesResult.policies()[0].id()));
     *         final var nameRegex = NasFunctions.getLifecyclePolicies(GetLifecyclePoliciesArgs.builder()
     *             .fileSystemId(&#34;example_value&#34;)
     *             .nameRegex(&#34;^my-LifecyclePolicy&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasLifecyclePolicyId2&#34;, nameRegex.applyValue(getLifecyclePoliciesResult -&gt; getLifecyclePoliciesResult.policies()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLifecyclePoliciesResult> getLifecyclePolicies(GetLifecyclePoliciesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:nas/getLifecyclePolicies:getLifecyclePolicies", TypeShape.of(GetLifecyclePoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Nas Lifecycle Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.153.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetLifecyclePoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getLifecyclePolicies(GetLifecyclePoliciesArgs.builder()
     *             .fileSystemId(&#34;example_value&#34;)
     *             .ids(            
     *                 &#34;my-LifecyclePolicy-1&#34;,
     *                 &#34;my-LifecyclePolicy-2&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasLifecyclePolicyId1&#34;, ids.applyValue(getLifecyclePoliciesResult -&gt; getLifecyclePoliciesResult.policies()[0].id()));
     *         final var nameRegex = NasFunctions.getLifecyclePolicies(GetLifecyclePoliciesArgs.builder()
     *             .fileSystemId(&#34;example_value&#34;)
     *             .nameRegex(&#34;^my-LifecyclePolicy&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasLifecyclePolicyId2&#34;, nameRegex.applyValue(getLifecyclePoliciesResult -&gt; getLifecyclePoliciesResult.policies()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLifecyclePoliciesResult> getLifecyclePoliciesPlain(GetLifecyclePoliciesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:nas/getLifecyclePolicies:getLifecyclePolicies", TypeShape.of(GetLifecyclePoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides MountTargets available to the user.
     * 
     * &gt; **NOTE**: Available in 1.35.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetMountTargetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NasFunctions.getMountTargets(GetMountTargetsArgs.builder()
     *             .fileSystemId(&#34;1a2sc4d&#34;)
     *             .accessGroupName(&#34;tf-testAccNasConfig&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;theFirstMountTargetDomain&#34;, example.applyValue(getMountTargetsResult -&gt; getMountTargetsResult.targets()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMountTargetsResult> getMountTargets(GetMountTargetsArgs args) {
        return getMountTargets(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides MountTargets available to the user.
     * 
     * &gt; **NOTE**: Available in 1.35.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetMountTargetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NasFunctions.getMountTargets(GetMountTargetsArgs.builder()
     *             .fileSystemId(&#34;1a2sc4d&#34;)
     *             .accessGroupName(&#34;tf-testAccNasConfig&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;theFirstMountTargetDomain&#34;, example.applyValue(getMountTargetsResult -&gt; getMountTargetsResult.targets()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMountTargetsResult> getMountTargetsPlain(GetMountTargetsPlainArgs args) {
        return getMountTargetsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides MountTargets available to the user.
     * 
     * &gt; **NOTE**: Available in 1.35.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetMountTargetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NasFunctions.getMountTargets(GetMountTargetsArgs.builder()
     *             .fileSystemId(&#34;1a2sc4d&#34;)
     *             .accessGroupName(&#34;tf-testAccNasConfig&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;theFirstMountTargetDomain&#34;, example.applyValue(getMountTargetsResult -&gt; getMountTargetsResult.targets()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMountTargetsResult> getMountTargets(GetMountTargetsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:nas/getMountTargets:getMountTargets", TypeShape.of(GetMountTargetsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides MountTargets available to the user.
     * 
     * &gt; **NOTE**: Available in 1.35.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetMountTargetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NasFunctions.getMountTargets(GetMountTargetsArgs.builder()
     *             .fileSystemId(&#34;1a2sc4d&#34;)
     *             .accessGroupName(&#34;tf-testAccNasConfig&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;theFirstMountTargetDomain&#34;, example.applyValue(getMountTargetsResult -&gt; getMountTargetsResult.targets()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMountTargetsResult> getMountTargetsPlain(GetMountTargetsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:nas/getMountTargets:getMountTargets", TypeShape.of(GetMountTargetsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provide  a data source to retrieve the type of protocol used to create NAS file system.
     * 
     * &gt; **NOTE:** Available in 1.42.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetProtocolsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = NasFunctions.getProtocols(GetProtocolsArgs.builder()
     *             .outputFile(&#34;protocols.txt&#34;)
     *             .type(&#34;Performance&#34;)
     *             .zoneId(&#34;cn-beijing-e&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasProtocolsProtocol&#34;, default_.protocols()[0]);
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetProtocolsResult> getProtocols(GetProtocolsArgs args) {
        return getProtocols(args, InvokeOptions.Empty);
    }
    /**
     * Provide  a data source to retrieve the type of protocol used to create NAS file system.
     * 
     * &gt; **NOTE:** Available in 1.42.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetProtocolsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = NasFunctions.getProtocols(GetProtocolsArgs.builder()
     *             .outputFile(&#34;protocols.txt&#34;)
     *             .type(&#34;Performance&#34;)
     *             .zoneId(&#34;cn-beijing-e&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasProtocolsProtocol&#34;, default_.protocols()[0]);
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetProtocolsResult> getProtocolsPlain(GetProtocolsPlainArgs args) {
        return getProtocolsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Provide  a data source to retrieve the type of protocol used to create NAS file system.
     * 
     * &gt; **NOTE:** Available in 1.42.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetProtocolsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = NasFunctions.getProtocols(GetProtocolsArgs.builder()
     *             .outputFile(&#34;protocols.txt&#34;)
     *             .type(&#34;Performance&#34;)
     *             .zoneId(&#34;cn-beijing-e&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasProtocolsProtocol&#34;, default_.protocols()[0]);
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetProtocolsResult> getProtocols(GetProtocolsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:nas/getProtocols:getProtocols", TypeShape.of(GetProtocolsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provide  a data source to retrieve the type of protocol used to create NAS file system.
     * 
     * &gt; **NOTE:** Available in 1.42.0
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetProtocolsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = NasFunctions.getProtocols(GetProtocolsArgs.builder()
     *             .outputFile(&#34;protocols.txt&#34;)
     *             .type(&#34;Performance&#34;)
     *             .zoneId(&#34;cn-beijing-e&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasProtocolsProtocol&#34;, default_.protocols()[0]);
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetProtocolsResult> getProtocolsPlain(GetProtocolsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:nas/getProtocols:getProtocols", TypeShape.of(GetProtocolsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Using this data source can enable NAS service automatically. If the service has been enabled, it will return `Opened`.
     * 
     * For information about NAS and how to use it, see [What is NAS](https://www.alibabacloud.com/help/product/27516.htm).
     * 
     * &gt; **NOTE:** Available in v1.97.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = NasFunctions.getService(GetServiceArgs.builder()
     *             .enable(&#34;On&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceResult> getService() {
        return getService(GetServiceArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Using this data source can enable NAS service automatically. If the service has been enabled, it will return `Opened`.
     * 
     * For information about NAS and how to use it, see [What is NAS](https://www.alibabacloud.com/help/product/27516.htm).
     * 
     * &gt; **NOTE:** Available in v1.97.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = NasFunctions.getService(GetServiceArgs.builder()
     *             .enable(&#34;On&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain() {
        return getServicePlain(GetServicePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Using this data source can enable NAS service automatically. If the service has been enabled, it will return `Opened`.
     * 
     * For information about NAS and how to use it, see [What is NAS](https://www.alibabacloud.com/help/product/27516.htm).
     * 
     * &gt; **NOTE:** Available in v1.97.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = NasFunctions.getService(GetServiceArgs.builder()
     *             .enable(&#34;On&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args) {
        return getService(args, InvokeOptions.Empty);
    }
    /**
     * Using this data source can enable NAS service automatically. If the service has been enabled, it will return `Opened`.
     * 
     * For information about NAS and how to use it, see [What is NAS](https://www.alibabacloud.com/help/product/27516.htm).
     * 
     * &gt; **NOTE:** Available in v1.97.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = NasFunctions.getService(GetServiceArgs.builder()
     *             .enable(&#34;On&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args) {
        return getServicePlain(args, InvokeOptions.Empty);
    }
    /**
     * Using this data source can enable NAS service automatically. If the service has been enabled, it will return `Opened`.
     * 
     * For information about NAS and how to use it, see [What is NAS](https://www.alibabacloud.com/help/product/27516.htm).
     * 
     * &gt; **NOTE:** Available in v1.97.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = NasFunctions.getService(GetServiceArgs.builder()
     *             .enable(&#34;On&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:nas/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Using this data source can enable NAS service automatically. If the service has been enabled, it will return `Opened`.
     * 
     * For information about NAS and how to use it, see [What is NAS](https://www.alibabacloud.com/help/product/27516.htm).
     * 
     * &gt; **NOTE:** Available in v1.97.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = NasFunctions.getService(GetServiceArgs.builder()
     *             .enable(&#34;On&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:nas/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Nas Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.152.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getSnapshots();
     * 
     *         ctx.export(&#34;nasSnapshotId1&#34;, ids.applyValue(getSnapshotsResult -&gt; getSnapshotsResult.snapshots()[0].id()));
     *         final var nameRegex = NasFunctions.getSnapshots(GetSnapshotsArgs.builder()
     *             .nameRegex(&#34;^my-Snapshot&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasSnapshotId2&#34;, nameRegex.applyValue(getSnapshotsResult -&gt; getSnapshotsResult.snapshots()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnapshotsResult> getSnapshots() {
        return getSnapshots(GetSnapshotsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Nas Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.152.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getSnapshots();
     * 
     *         ctx.export(&#34;nasSnapshotId1&#34;, ids.applyValue(getSnapshotsResult -&gt; getSnapshotsResult.snapshots()[0].id()));
     *         final var nameRegex = NasFunctions.getSnapshots(GetSnapshotsArgs.builder()
     *             .nameRegex(&#34;^my-Snapshot&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasSnapshotId2&#34;, nameRegex.applyValue(getSnapshotsResult -&gt; getSnapshotsResult.snapshots()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnapshotsResult> getSnapshotsPlain() {
        return getSnapshotsPlain(GetSnapshotsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Nas Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.152.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getSnapshots();
     * 
     *         ctx.export(&#34;nasSnapshotId1&#34;, ids.applyValue(getSnapshotsResult -&gt; getSnapshotsResult.snapshots()[0].id()));
     *         final var nameRegex = NasFunctions.getSnapshots(GetSnapshotsArgs.builder()
     *             .nameRegex(&#34;^my-Snapshot&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasSnapshotId2&#34;, nameRegex.applyValue(getSnapshotsResult -&gt; getSnapshotsResult.snapshots()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnapshotsResult> getSnapshots(GetSnapshotsArgs args) {
        return getSnapshots(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Nas Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.152.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getSnapshots();
     * 
     *         ctx.export(&#34;nasSnapshotId1&#34;, ids.applyValue(getSnapshotsResult -&gt; getSnapshotsResult.snapshots()[0].id()));
     *         final var nameRegex = NasFunctions.getSnapshots(GetSnapshotsArgs.builder()
     *             .nameRegex(&#34;^my-Snapshot&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasSnapshotId2&#34;, nameRegex.applyValue(getSnapshotsResult -&gt; getSnapshotsResult.snapshots()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnapshotsResult> getSnapshotsPlain(GetSnapshotsPlainArgs args) {
        return getSnapshotsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Nas Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.152.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getSnapshots();
     * 
     *         ctx.export(&#34;nasSnapshotId1&#34;, ids.applyValue(getSnapshotsResult -&gt; getSnapshotsResult.snapshots()[0].id()));
     *         final var nameRegex = NasFunctions.getSnapshots(GetSnapshotsArgs.builder()
     *             .nameRegex(&#34;^my-Snapshot&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasSnapshotId2&#34;, nameRegex.applyValue(getSnapshotsResult -&gt; getSnapshotsResult.snapshots()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnapshotsResult> getSnapshots(GetSnapshotsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:nas/getSnapshots:getSnapshots", TypeShape.of(GetSnapshotsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Nas Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.152.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = NasFunctions.getSnapshots();
     * 
     *         ctx.export(&#34;nasSnapshotId1&#34;, ids.applyValue(getSnapshotsResult -&gt; getSnapshotsResult.snapshots()[0].id()));
     *         final var nameRegex = NasFunctions.getSnapshots(GetSnapshotsArgs.builder()
     *             .nameRegex(&#34;^my-Snapshot&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;nasSnapshotId2&#34;, nameRegex.applyValue(getSnapshotsResult -&gt; getSnapshotsResult.snapshots()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnapshotsResult> getSnapshotsPlain(GetSnapshotsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:nas/getSnapshots:getSnapshots", TypeShape.of(GetSnapshotsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provide  a data source to retrieve the type of zone used to create NAS file system.
     * 
     * &gt; **NOTE:** Available in v1.140.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = NasFunctions.getZones();
     * 
     *         ctx.export(&#34;alicloudNasZonesId&#34;, default_.zones()[0].zoneId());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZonesResult> getZones() {
        return getZones(GetZonesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Provide  a data source to retrieve the type of zone used to create NAS file system.
     * 
     * &gt; **NOTE:** Available in v1.140.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = NasFunctions.getZones();
     * 
     *         ctx.export(&#34;alicloudNasZonesId&#34;, default_.zones()[0].zoneId());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZonesResult> getZonesPlain() {
        return getZonesPlain(GetZonesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Provide  a data source to retrieve the type of zone used to create NAS file system.
     * 
     * &gt; **NOTE:** Available in v1.140.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = NasFunctions.getZones();
     * 
     *         ctx.export(&#34;alicloudNasZonesId&#34;, default_.zones()[0].zoneId());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZonesResult> getZones(GetZonesArgs args) {
        return getZones(args, InvokeOptions.Empty);
    }
    /**
     * Provide  a data source to retrieve the type of zone used to create NAS file system.
     * 
     * &gt; **NOTE:** Available in v1.140.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = NasFunctions.getZones();
     * 
     *         ctx.export(&#34;alicloudNasZonesId&#34;, default_.zones()[0].zoneId());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZonesResult> getZonesPlain(GetZonesPlainArgs args) {
        return getZonesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Provide  a data source to retrieve the type of zone used to create NAS file system.
     * 
     * &gt; **NOTE:** Available in v1.140.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = NasFunctions.getZones();
     * 
     *         ctx.export(&#34;alicloudNasZonesId&#34;, default_.zones()[0].zoneId());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZonesResult> getZones(GetZonesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:nas/getZones:getZones", TypeShape.of(GetZonesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provide  a data source to retrieve the type of zone used to create NAS file system.
     * 
     * &gt; **NOTE:** Available in v1.140.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.nas.NasFunctions;
     * import com.pulumi.alicloud.nas.inputs.GetZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = NasFunctions.getZones();
     * 
     *         ctx.export(&#34;alicloudNasZonesId&#34;, default_.zones()[0].zoneId());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZonesResult> getZonesPlain(GetZonesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:nas/getZones:getZones", TypeShape.of(GetZonesResult.class), args, Utilities.withVersion(options));
    }
}
