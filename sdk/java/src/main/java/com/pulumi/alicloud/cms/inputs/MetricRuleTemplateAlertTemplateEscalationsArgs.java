// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.inputs;

import com.pulumi.alicloud.cms.inputs.MetricRuleTemplateAlertTemplateEscalationsCriticalArgs;
import com.pulumi.alicloud.cms.inputs.MetricRuleTemplateAlertTemplateEscalationsInfoArgs;
import com.pulumi.alicloud.cms.inputs.MetricRuleTemplateAlertTemplateEscalationsWarnArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MetricRuleTemplateAlertTemplateEscalationsArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetricRuleTemplateAlertTemplateEscalationsArgs Empty = new MetricRuleTemplateAlertTemplateEscalationsArgs();

    /**
     * The condition for triggering critical-level alerts. See `critical` below.
     * 
     */
    @Import(name="critical")
    private @Nullable Output<MetricRuleTemplateAlertTemplateEscalationsCriticalArgs> critical;

    /**
     * @return The condition for triggering critical-level alerts. See `critical` below.
     * 
     */
    public Optional<Output<MetricRuleTemplateAlertTemplateEscalationsCriticalArgs>> critical() {
        return Optional.ofNullable(this.critical);
    }

    /**
     * The condition for triggering info-level alerts. See `info` below.
     * 
     */
    @Import(name="info")
    private @Nullable Output<MetricRuleTemplateAlertTemplateEscalationsInfoArgs> info;

    /**
     * @return The condition for triggering info-level alerts. See `info` below.
     * 
     */
    public Optional<Output<MetricRuleTemplateAlertTemplateEscalationsInfoArgs>> info() {
        return Optional.ofNullable(this.info);
    }

    /**
     * The condition for triggering warn-level alerts. See `warn` below.
     * 
     */
    @Import(name="warn")
    private @Nullable Output<MetricRuleTemplateAlertTemplateEscalationsWarnArgs> warn;

    /**
     * @return The condition for triggering warn-level alerts. See `warn` below.
     * 
     */
    public Optional<Output<MetricRuleTemplateAlertTemplateEscalationsWarnArgs>> warn() {
        return Optional.ofNullable(this.warn);
    }

    private MetricRuleTemplateAlertTemplateEscalationsArgs() {}

    private MetricRuleTemplateAlertTemplateEscalationsArgs(MetricRuleTemplateAlertTemplateEscalationsArgs $) {
        this.critical = $.critical;
        this.info = $.info;
        this.warn = $.warn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricRuleTemplateAlertTemplateEscalationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricRuleTemplateAlertTemplateEscalationsArgs $;

        public Builder() {
            $ = new MetricRuleTemplateAlertTemplateEscalationsArgs();
        }

        public Builder(MetricRuleTemplateAlertTemplateEscalationsArgs defaults) {
            $ = new MetricRuleTemplateAlertTemplateEscalationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param critical The condition for triggering critical-level alerts. See `critical` below.
         * 
         * @return builder
         * 
         */
        public Builder critical(@Nullable Output<MetricRuleTemplateAlertTemplateEscalationsCriticalArgs> critical) {
            $.critical = critical;
            return this;
        }

        /**
         * @param critical The condition for triggering critical-level alerts. See `critical` below.
         * 
         * @return builder
         * 
         */
        public Builder critical(MetricRuleTemplateAlertTemplateEscalationsCriticalArgs critical) {
            return critical(Output.of(critical));
        }

        /**
         * @param info The condition for triggering info-level alerts. See `info` below.
         * 
         * @return builder
         * 
         */
        public Builder info(@Nullable Output<MetricRuleTemplateAlertTemplateEscalationsInfoArgs> info) {
            $.info = info;
            return this;
        }

        /**
         * @param info The condition for triggering info-level alerts. See `info` below.
         * 
         * @return builder
         * 
         */
        public Builder info(MetricRuleTemplateAlertTemplateEscalationsInfoArgs info) {
            return info(Output.of(info));
        }

        /**
         * @param warn The condition for triggering warn-level alerts. See `warn` below.
         * 
         * @return builder
         * 
         */
        public Builder warn(@Nullable Output<MetricRuleTemplateAlertTemplateEscalationsWarnArgs> warn) {
            $.warn = warn;
            return this;
        }

        /**
         * @param warn The condition for triggering warn-level alerts. See `warn` below.
         * 
         * @return builder
         * 
         */
        public Builder warn(MetricRuleTemplateAlertTemplateEscalationsWarnArgs warn) {
            return warn(Output.of(warn));
        }

        public MetricRuleTemplateAlertTemplateEscalationsArgs build() {
            return $;
        }
    }

}
