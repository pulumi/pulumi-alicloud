// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.arms;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class IntegrationExporterArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationExporterArgs Empty = new IntegrationExporterArgs();

    /**
     * The ID of the Prometheus instance.
     * 
     */
    @Import(name="clusterId", required=true)
    private Output<String> clusterId;

    /**
     * @return The ID of the Prometheus instance.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }

    /**
     * The type of prometheus integration.
     * 
     */
    @Import(name="integrationType", required=true)
    private Output<String> integrationType;

    /**
     * @return The type of prometheus integration.
     * 
     */
    public Output<String> integrationType() {
        return this.integrationType;
    }

    /**
     * Exporter configuration parameter json string.
     * 
     */
    @Import(name="param", required=true)
    private Output<String> param;

    /**
     * @return Exporter configuration parameter json string.
     * 
     */
    public Output<String> param() {
        return this.param;
    }

    private IntegrationExporterArgs() {}

    private IntegrationExporterArgs(IntegrationExporterArgs $) {
        this.clusterId = $.clusterId;
        this.integrationType = $.integrationType;
        this.param = $.param;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationExporterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationExporterArgs $;

        public Builder() {
            $ = new IntegrationExporterArgs();
        }

        public Builder(IntegrationExporterArgs defaults) {
            $ = new IntegrationExporterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId The ID of the Prometheus instance.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The ID of the Prometheus instance.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param integrationType The type of prometheus integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationType(Output<String> integrationType) {
            $.integrationType = integrationType;
            return this;
        }

        /**
         * @param integrationType The type of prometheus integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationType(String integrationType) {
            return integrationType(Output.of(integrationType));
        }

        /**
         * @param param Exporter configuration parameter json string.
         * 
         * @return builder
         * 
         */
        public Builder param(Output<String> param) {
            $.param = param;
            return this;
        }

        /**
         * @param param Exporter configuration parameter json string.
         * 
         * @return builder
         * 
         */
        public Builder param(String param) {
            return param(Output.of(param));
        }

        public IntegrationExporterArgs build() {
            $.clusterId = Objects.requireNonNull($.clusterId, "expected parameter 'clusterId' to be non-null");
            $.integrationType = Objects.requireNonNull($.integrationType, "expected parameter 'integrationType' to be non-null");
            $.param = Objects.requireNonNull($.param, "expected parameter 'param' to be non-null");
            return $;
        }
    }

}
