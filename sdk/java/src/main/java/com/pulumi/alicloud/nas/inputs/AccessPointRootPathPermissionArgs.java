// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessPointRootPathPermissionArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessPointRootPathPermissionArgs Empty = new AccessPointRootPathPermissionArgs();

    /**
     * The ID of the primary user group.
     * 
     */
    @Import(name="ownerGroupId")
    private @Nullable Output<Integer> ownerGroupId;

    /**
     * @return The ID of the primary user group.
     * 
     */
    public Optional<Output<Integer>> ownerGroupId() {
        return Optional.ofNullable(this.ownerGroupId);
    }

    /**
     * The owner user ID.
     * 
     */
    @Import(name="ownerUserId")
    private @Nullable Output<Integer> ownerUserId;

    /**
     * @return The owner user ID.
     * 
     */
    public Optional<Output<Integer>> ownerUserId() {
        return Optional.ofNullable(this.ownerUserId);
    }

    /**
     * The Portable Operating System Interface for UNIX (POSIX) permission.
     * 
     */
    @Import(name="permission")
    private @Nullable Output<String> permission;

    /**
     * @return The Portable Operating System Interface for UNIX (POSIX) permission.
     * 
     */
    public Optional<Output<String>> permission() {
        return Optional.ofNullable(this.permission);
    }

    private AccessPointRootPathPermissionArgs() {}

    private AccessPointRootPathPermissionArgs(AccessPointRootPathPermissionArgs $) {
        this.ownerGroupId = $.ownerGroupId;
        this.ownerUserId = $.ownerUserId;
        this.permission = $.permission;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessPointRootPathPermissionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessPointRootPathPermissionArgs $;

        public Builder() {
            $ = new AccessPointRootPathPermissionArgs();
        }

        public Builder(AccessPointRootPathPermissionArgs defaults) {
            $ = new AccessPointRootPathPermissionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ownerGroupId The ID of the primary user group.
         * 
         * @return builder
         * 
         */
        public Builder ownerGroupId(@Nullable Output<Integer> ownerGroupId) {
            $.ownerGroupId = ownerGroupId;
            return this;
        }

        /**
         * @param ownerGroupId The ID of the primary user group.
         * 
         * @return builder
         * 
         */
        public Builder ownerGroupId(Integer ownerGroupId) {
            return ownerGroupId(Output.of(ownerGroupId));
        }

        /**
         * @param ownerUserId The owner user ID.
         * 
         * @return builder
         * 
         */
        public Builder ownerUserId(@Nullable Output<Integer> ownerUserId) {
            $.ownerUserId = ownerUserId;
            return this;
        }

        /**
         * @param ownerUserId The owner user ID.
         * 
         * @return builder
         * 
         */
        public Builder ownerUserId(Integer ownerUserId) {
            return ownerUserId(Output.of(ownerUserId));
        }

        /**
         * @param permission The Portable Operating System Interface for UNIX (POSIX) permission.
         * 
         * @return builder
         * 
         */
        public Builder permission(@Nullable Output<String> permission) {
            $.permission = permission;
            return this;
        }

        /**
         * @param permission The Portable Operating System Interface for UNIX (POSIX) permission.
         * 
         * @return builder
         * 
         */
        public Builder permission(String permission) {
            return permission(Output.of(permission));
        }

        public AccessPointRootPathPermissionArgs build() {
            return $;
        }
    }

}
