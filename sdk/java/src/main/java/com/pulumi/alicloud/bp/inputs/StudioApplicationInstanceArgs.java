// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.bp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StudioApplicationInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final StudioApplicationInstanceArgs Empty = new StudioApplicationInstanceArgs();

    /**
     * The id of the instance.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The id of the instance.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The name of the instance.
     * 
     */
    @Import(name="nodeName")
    private @Nullable Output<String> nodeName;

    /**
     * @return The name of the instance.
     * 
     */
    public Optional<Output<String>> nodeName() {
        return Optional.ofNullable(this.nodeName);
    }

    /**
     * The type of the instance.
     * 
     */
    @Import(name="nodeType")
    private @Nullable Output<String> nodeType;

    /**
     * @return The type of the instance.
     * 
     */
    public Optional<Output<String>> nodeType() {
        return Optional.ofNullable(this.nodeType);
    }

    private StudioApplicationInstanceArgs() {}

    private StudioApplicationInstanceArgs(StudioApplicationInstanceArgs $) {
        this.id = $.id;
        this.nodeName = $.nodeName;
        this.nodeType = $.nodeType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StudioApplicationInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StudioApplicationInstanceArgs $;

        public Builder() {
            $ = new StudioApplicationInstanceArgs();
        }

        public Builder(StudioApplicationInstanceArgs defaults) {
            $ = new StudioApplicationInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The id of the instance.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The id of the instance.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param nodeName The name of the instance.
         * 
         * @return builder
         * 
         */
        public Builder nodeName(@Nullable Output<String> nodeName) {
            $.nodeName = nodeName;
            return this;
        }

        /**
         * @param nodeName The name of the instance.
         * 
         * @return builder
         * 
         */
        public Builder nodeName(String nodeName) {
            return nodeName(Output.of(nodeName));
        }

        /**
         * @param nodeType The type of the instance.
         * 
         * @return builder
         * 
         */
        public Builder nodeType(@Nullable Output<String> nodeType) {
            $.nodeType = nodeType;
            return this;
        }

        /**
         * @param nodeType The type of the instance.
         * 
         * @return builder
         * 
         */
        public Builder nodeType(String nodeType) {
            return nodeType(Output.of(nodeType));
        }

        public StudioApplicationInstanceArgs build() {
            return $;
        }
    }

}
