// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fnf;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.fnf.ScheduleArgs;
import com.pulumi.alicloud.fnf.inputs.ScheduleState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Serverless Workflow Schedule resource.
 * 
 * For information about Serverless Workflow Schedule and how to use it, see [What is Schedule](https://www.alibabacloud.com/help/en/doc-detail/168934.htm).
 * 
 * &gt; **NOTE:** Available in v1.105.0+.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.fnf.Flow;
 * import com.pulumi.alicloud.fnf.FlowArgs;
 * import com.pulumi.alicloud.fnf.Schedule;
 * import com.pulumi.alicloud.fnf.ScheduleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleFlow = new Flow(&#34;exampleFlow&#34;, FlowArgs.builder()        
 *             .definition(&#34;&#34;&#34;
 *   version: v1beta1
 *   type: flow
 *   steps:
 *     - type: pass
 *       name: helloworld
 *             &#34;&#34;&#34;)
 *             .description(&#34;tf-testaccFnFFlow983041&#34;)
 *             .type(&#34;FDL&#34;)
 *             .build());
 * 
 *         var exampleSchedule = new Schedule(&#34;exampleSchedule&#34;, ScheduleArgs.builder()        
 *             .cronExpression(&#34;30 9 * * * *&#34;)
 *             .description(&#34;tf-testaccFnFSchedule983041&#34;)
 *             .enable(&#34;true&#34;)
 *             .flowName(exampleFlow.name())
 *             .payload(&#34;{\&#34;tf-test\&#34;: \&#34;test success\&#34;}&#34;)
 *             .scheduleName(&#34;tf-testaccFnFSchedule983041&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Serverless Workflow Schedule can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:fnf/schedule:Schedule example &lt;schedule_name&gt;:&lt;flow_name&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:fnf/schedule:Schedule")
public class Schedule extends com.pulumi.resources.CustomResource {
    /**
     * The CRON expression of the time-based schedule to be created.
     * 
     */
    @Export(name="cronExpression", refs={String.class}, tree="[0]")
    private Output<String> cronExpression;

    /**
     * @return The CRON expression of the time-based schedule to be created.
     * 
     */
    public Output<String> cronExpression() {
        return this.cronExpression;
    }
    /**
     * The description of the time-based schedule to be created.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the time-based schedule to be created.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Specifies whether to enable the time-based schedule you want to create. Valid values: `false`, `true`.
     * 
     */
    @Export(name="enable", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enable;

    /**
     * @return Specifies whether to enable the time-based schedule you want to create. Valid values: `false`, `true`.
     * 
     */
    public Output<Optional<Boolean>> enable() {
        return Codegen.optional(this.enable);
    }
    /**
     * The name of the flow bound to the time-based schedule you want to create.
     * 
     */
    @Export(name="flowName", refs={String.class}, tree="[0]")
    private Output<String> flowName;

    /**
     * @return The name of the flow bound to the time-based schedule you want to create.
     * 
     */
    public Output<String> flowName() {
        return this.flowName;
    }
    /**
     * The time when the time-based schedule was last updated.
     * 
     */
    @Export(name="lastModifiedTime", refs={String.class}, tree="[0]")
    private Output<String> lastModifiedTime;

    /**
     * @return The time when the time-based schedule was last updated.
     * 
     */
    public Output<String> lastModifiedTime() {
        return this.lastModifiedTime;
    }
    /**
     * The trigger message of the time-based schedule to be created. It must be in JSON object format.
     * 
     */
    @Export(name="payload", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> payload;

    /**
     * @return The trigger message of the time-based schedule to be created. It must be in JSON object format.
     * 
     */
    public Output<Optional<String>> payload() {
        return Codegen.optional(this.payload);
    }
    /**
     * The ID of the time-based schedule.
     * 
     */
    @Export(name="scheduleId", refs={String.class}, tree="[0]")
    private Output<String> scheduleId;

    /**
     * @return The ID of the time-based schedule.
     * 
     */
    public Output<String> scheduleId() {
        return this.scheduleId;
    }
    /**
     * The name of the time-based schedule to be created.
     * 
     */
    @Export(name="scheduleName", refs={String.class}, tree="[0]")
    private Output<String> scheduleName;

    /**
     * @return The name of the time-based schedule to be created.
     * 
     */
    public Output<String> scheduleName() {
        return this.scheduleName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Schedule(String name) {
        this(name, ScheduleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Schedule(String name, ScheduleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Schedule(String name, ScheduleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:fnf/schedule:Schedule", name, args == null ? ScheduleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Schedule(String name, Output<String> id, @Nullable ScheduleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:fnf/schedule:Schedule", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Schedule get(String name, Output<String> id, @Nullable ScheduleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Schedule(name, id, state, options);
    }
}
