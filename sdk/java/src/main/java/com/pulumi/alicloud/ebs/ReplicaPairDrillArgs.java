// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ebs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ReplicaPairDrillArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReplicaPairDrillArgs Empty = new ReplicaPairDrillArgs();

    /**
     * Copy the ID of the pair. You can call DescribeDiskReplicaPairs to query the list of asynchronous replication pairs to obtain the replication pair ID.
     * 
     */
    @Import(name="pairId", required=true)
    private Output<String> pairId;

    /**
     * @return Copy the ID of the pair. You can call DescribeDiskReplicaPairs to query the list of asynchronous replication pairs to obtain the replication pair ID.
     * 
     */
    public Output<String> pairId() {
        return this.pairId;
    }

    private ReplicaPairDrillArgs() {}

    private ReplicaPairDrillArgs(ReplicaPairDrillArgs $) {
        this.pairId = $.pairId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicaPairDrillArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicaPairDrillArgs $;

        public Builder() {
            $ = new ReplicaPairDrillArgs();
        }

        public Builder(ReplicaPairDrillArgs defaults) {
            $ = new ReplicaPairDrillArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param pairId Copy the ID of the pair. You can call DescribeDiskReplicaPairs to query the list of asynchronous replication pairs to obtain the replication pair ID.
         * 
         * @return builder
         * 
         */
        public Builder pairId(Output<String> pairId) {
            $.pairId = pairId;
            return this;
        }

        /**
         * @param pairId Copy the ID of the pair. You can call DescribeDiskReplicaPairs to query the list of asynchronous replication pairs to obtain the replication pair ID.
         * 
         * @return builder
         * 
         */
        public Builder pairId(String pairId) {
            return pairId(Output.of(pairId));
        }

        public ReplicaPairDrillArgs build() {
            if ($.pairId == null) {
                throw new MissingRequiredPropertyException("ReplicaPairDrillArgs", "pairId");
            }
            return $;
        }
    }

}
