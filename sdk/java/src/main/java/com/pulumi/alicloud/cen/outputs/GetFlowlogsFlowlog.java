// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFlowlogsFlowlog {
    /**
     * @return The ID of the CEN Instance.
     * 
     */
    private String cenId;
    /**
     * @return The description of flowlog.
     * 
     */
    private String description;
    /**
     * @return ID of the CEN flow log.
     * 
     */
    private String flowLogId;
    /**
     * @return The name of flowlog.
     * 
     */
    private String flowLogName;
    /**
     * @return ID of the CEN flow log.
     * 
     */
    private String id;
    /**
     * @return The name of the log store which is in the  `project_name` SLS project.
     * 
     */
    private String logStoreName;
    /**
     * @return The name of the SLS project.
     * 
     */
    private String projectName;
    /**
     * @return The status of flowlog. Valid values: [&#34;Active&#34;, &#34;Inactive&#34;]. Default to &#34;Active&#34;.
     * 
     */
    private String status;

    private GetFlowlogsFlowlog() {}
    /**
     * @return The ID of the CEN Instance.
     * 
     */
    public String cenId() {
        return this.cenId;
    }
    /**
     * @return The description of flowlog.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return ID of the CEN flow log.
     * 
     */
    public String flowLogId() {
        return this.flowLogId;
    }
    /**
     * @return The name of flowlog.
     * 
     */
    public String flowLogName() {
        return this.flowLogName;
    }
    /**
     * @return ID of the CEN flow log.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the log store which is in the  `project_name` SLS project.
     * 
     */
    public String logStoreName() {
        return this.logStoreName;
    }
    /**
     * @return The name of the SLS project.
     * 
     */
    public String projectName() {
        return this.projectName;
    }
    /**
     * @return The status of flowlog. Valid values: [&#34;Active&#34;, &#34;Inactive&#34;]. Default to &#34;Active&#34;.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFlowlogsFlowlog defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cenId;
        private String description;
        private String flowLogId;
        private String flowLogName;
        private String id;
        private String logStoreName;
        private String projectName;
        private String status;
        public Builder() {}
        public Builder(GetFlowlogsFlowlog defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cenId = defaults.cenId;
    	      this.description = defaults.description;
    	      this.flowLogId = defaults.flowLogId;
    	      this.flowLogName = defaults.flowLogName;
    	      this.id = defaults.id;
    	      this.logStoreName = defaults.logStoreName;
    	      this.projectName = defaults.projectName;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder cenId(String cenId) {
            this.cenId = Objects.requireNonNull(cenId);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder flowLogId(String flowLogId) {
            this.flowLogId = Objects.requireNonNull(flowLogId);
            return this;
        }
        @CustomType.Setter
        public Builder flowLogName(String flowLogName) {
            this.flowLogName = Objects.requireNonNull(flowLogName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder logStoreName(String logStoreName) {
            this.logStoreName = Objects.requireNonNull(logStoreName);
            return this;
        }
        @CustomType.Setter
        public Builder projectName(String projectName) {
            this.projectName = Objects.requireNonNull(projectName);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public GetFlowlogsFlowlog build() {
            final var o = new GetFlowlogsFlowlog();
            o.cenId = cenId;
            o.description = description;
            o.flowLogId = flowLogId;
            o.flowLogName = flowLogName;
            o.id = id;
            o.logStoreName = logStoreName;
            o.projectName = projectName;
            o.status = status;
            return o;
        }
    }
}
