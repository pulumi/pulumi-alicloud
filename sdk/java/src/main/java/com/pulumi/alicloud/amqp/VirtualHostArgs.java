// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.amqp;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class VirtualHostArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualHostArgs Empty = new VirtualHostArgs();

    /**
     * InstanceId.
     * 
     */
    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    /**
     * @return InstanceId.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }

    /**
     * VirtualHostName.
     * 
     */
    @Import(name="virtualHostName", required=true)
    private Output<String> virtualHostName;

    /**
     * @return VirtualHostName.
     * 
     */
    public Output<String> virtualHostName() {
        return this.virtualHostName;
    }

    private VirtualHostArgs() {}

    private VirtualHostArgs(VirtualHostArgs $) {
        this.instanceId = $.instanceId;
        this.virtualHostName = $.virtualHostName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualHostArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualHostArgs $;

        public Builder() {
            $ = new VirtualHostArgs();
        }

        public Builder(VirtualHostArgs defaults) {
            $ = new VirtualHostArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param instanceId InstanceId.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId InstanceId.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param virtualHostName VirtualHostName.
         * 
         * @return builder
         * 
         */
        public Builder virtualHostName(Output<String> virtualHostName) {
            $.virtualHostName = virtualHostName;
            return this;
        }

        /**
         * @param virtualHostName VirtualHostName.
         * 
         * @return builder
         * 
         */
        public Builder virtualHostName(String virtualHostName) {
            return virtualHostName(Output.of(virtualHostName));
        }

        public VirtualHostArgs build() {
            if ($.instanceId == null) {
                throw new MissingRequiredPropertyException("VirtualHostArgs", "instanceId");
            }
            if ($.virtualHostName == null) {
                throw new MissingRequiredPropertyException("VirtualHostArgs", "virtualHostName");
            }
            return $;
        }
    }

}
