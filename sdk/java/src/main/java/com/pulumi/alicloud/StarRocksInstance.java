// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud;

import com.pulumi.alicloud.StarRocksInstanceArgs;
import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.inputs.StarRocksInstanceState;
import com.pulumi.alicloud.outputs.StarRocksInstanceBackendNodeGroup;
import com.pulumi.alicloud.outputs.StarRocksInstanceFrontendNodeGroup;
import com.pulumi.alicloud.outputs.StarRocksInstanceObserverNodeGroup;
import com.pulumi.alicloud.outputs.StarRocksInstanceVswitch;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Star Rocks Instance resource.
 * 
 * StarRocks resource instance.
 * 
 * For information about Star Rocks Instance and how to use it, see [What is Instance](https://next.api.alibabacloud.com/document/starrocks/2022-10-19/CreateInstanceV1).
 * 
 * &gt; **NOTE:** Available since v1.256.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
 * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.StarRocksInstance;
 * import com.pulumi.alicloud.StarRocksInstanceArgs;
 * import com.pulumi.alicloud.inputs.StarRocksInstanceFrontendNodeGroupArgs;
 * import com.pulumi.alicloud.inputs.StarRocksInstanceVswitchArgs;
 * import com.pulumi.alicloud.inputs.StarRocksInstanceBackendNodeGroupArgs;
 * import com.pulumi.alicloud.inputs.StarRocksInstanceObserverNodeGroupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
 *             .build());
 * 
 *         var defaultB21JUD = new Network("defaultB21JUD", NetworkArgs.builder()
 *             .cidrBlock("172.16.0.0/12")
 *             .build());
 * 
 *         var default106DkE = new Switch("default106DkE", SwitchArgs.builder()
 *             .vpcId(defaultB21JUD.id())
 *             .cidrBlock("172.16.1.0/24")
 *             .vswitchName("sr-example")
 *             .zoneId("cn-hangzhou-i")
 *             .build());
 * 
 *         var defaultStarRocksInstance = new StarRocksInstance("defaultStarRocksInstance", StarRocksInstanceArgs.builder()
 *             .instanceName("create-instance-1")
 *             .autoRenew(false)
 *             .frontendNodeGroups(StarRocksInstanceFrontendNodeGroupArgs.builder()
 *                 .cu(8)
 *                 .storageSize(100)
 *                 .residentNodeNumber(3)
 *                 .storagePerformanceLevel("pl1")
 *                 .specType("standard")
 *                 .diskNumber(1)
 *                 .zoneId("cn-hangzhou-i")
 *                 .localStorageInstanceType("null")
 *                 .build())
 *             .vswitches(StarRocksInstanceVswitchArgs.builder()
 *                 .vswitchId(default106DkE.id())
 *                 .zoneId("cn-hangzhou-i")
 *                 .build())
 *             .backendNodeGroups(StarRocksInstanceBackendNodeGroupArgs.builder()
 *                 .cu(8)
 *                 .storageSize(100)
 *                 .residentNodeNumber(3)
 *                 .diskNumber(1)
 *                 .storagePerformanceLevel("pl1")
 *                 .specType("standard")
 *                 .zoneId("cn-hangzhou-i")
 *                 .localStorageInstanceType("null")
 *                 .build())
 *             .clusterZoneId("cn-hangzhou-i")
 *             .duration(1)
 *             .payType("postPaid")
 *             .vpcId(defaultB21JUD.id())
 *             .version("3.3")
 *             .runMode("shared_data")
 *             .packageType("official")
 *             .adminPassword("1qaz}{@literal @}{@code QAZ")
 *             .ossAccessingRoleName("AliyunEMRStarRocksAccessingOSSRole")
 *             .pricingCycle("Month")
 *             .kmsKeyId("123")
 *             .promotionOptionNo("123")
 *             .encrypted(false)
 *             .observerNodeGroups(StarRocksInstanceObserverNodeGroupArgs.builder()
 *                 .cu(8)
 *                 .storageSize(100)
 *                 .storagePerformanceLevel("pl1")
 *                 .diskNumber(1)
 *                 .residentNodeNumber(1)
 *                 .specType("standard")
 *                 .localStorageInstanceType("null")
 *                 .zoneId("cn-hangzhou-h")
 *                 .build())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Star Rocks Instance can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:index/starRocksInstance:StarRocksInstance example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:index/starRocksInstance:StarRocksInstance")
public class StarRocksInstance extends com.pulumi.resources.CustomResource {
    /**
     * Password of admin user.
     * 
     */
    @Export(name="adminPassword", refs={String.class}, tree="[0]")
    private Output<String> adminPassword;

    /**
     * @return Password of admin user.
     * 
     */
    public Output<String> adminPassword() {
        return this.adminPassword;
    }
    /**
     * Whether to enable automatic renewal. This is only meaningful when payType is set to PrePaid. Disabled by default.
     * 
     */
    @Export(name="autoRenew", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autoRenew;

    /**
     * @return Whether to enable automatic renewal. This is only meaningful when payType is set to PrePaid. Disabled by default.
     * 
     */
    public Output<Optional<Boolean>> autoRenew() {
        return Codegen.optional(this.autoRenew);
    }
    /**
     * BackendNodeGroups See `backendNodeGroups` below.
     * 
     */
    @Export(name="backendNodeGroups", refs={List.class,StarRocksInstanceBackendNodeGroup.class}, tree="[0,1]")
    private Output</* @Nullable */ List<StarRocksInstanceBackendNodeGroup>> backendNodeGroups;

    /**
     * @return BackendNodeGroups See `backendNodeGroups` below.
     * 
     */
    public Output<Optional<List<StarRocksInstanceBackendNodeGroup>>> backendNodeGroups() {
        return Codegen.optional(this.backendNodeGroups);
    }
    /**
     * ZoneId of instance.
     * 
     */
    @Export(name="clusterZoneId", refs={String.class}, tree="[0]")
    private Output<String> clusterZoneId;

    /**
     * @return ZoneId of instance.
     * 
     */
    public Output<String> clusterZoneId() {
        return this.clusterZoneId;
    }
    /**
     * The creation time of the instance.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The creation time of the instance.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Duration of purchase. It is only meaningful when payType is set to PrePaid.
     * 
     */
    @Export(name="duration", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> duration;

    /**
     * @return Duration of purchase. It is only meaningful when payType is set to PrePaid.
     * 
     */
    public Output<Optional<Integer>> duration() {
        return Codegen.optional(this.duration);
    }
    /**
     * Whether encrypted
     * 
     */
    @Export(name="encrypted", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> encrypted;

    /**
     * @return Whether encrypted
     * 
     */
    public Output<Optional<Boolean>> encrypted() {
        return Codegen.optional(this.encrypted);
    }
    /**
     * FrontendNodeGroups See `frontendNodeGroups` below.
     * 
     */
    @Export(name="frontendNodeGroups", refs={List.class,StarRocksInstanceFrontendNodeGroup.class}, tree="[0,1]")
    private Output</* @Nullable */ List<StarRocksInstanceFrontendNodeGroup>> frontendNodeGroups;

    /**
     * @return FrontendNodeGroups See `frontendNodeGroups` below.
     * 
     */
    public Output<Optional<List<StarRocksInstanceFrontendNodeGroup>>> frontendNodeGroups() {
        return Codegen.optional(this.frontendNodeGroups);
    }
    /**
     * The name of the instance.
     * 
     */
    @Export(name="instanceName", refs={String.class}, tree="[0]")
    private Output<String> instanceName;

    /**
     * @return The name of the instance.
     * 
     */
    public Output<String> instanceName() {
        return this.instanceName;
    }
    /**
     * KmsKeyId
     * 
     */
    @Export(name="kmsKeyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> kmsKeyId;

    /**
     * @return KmsKeyId
     * 
     */
    public Output<Optional<String>> kmsKeyId() {
        return Codegen.optional(this.kmsKeyId);
    }
    /**
     * ObserverNodeGroups See `observerNodeGroups` below.
     * 
     */
    @Export(name="observerNodeGroups", refs={List.class,StarRocksInstanceObserverNodeGroup.class}, tree="[0,1]")
    private Output</* @Nullable */ List<StarRocksInstanceObserverNodeGroup>> observerNodeGroups;

    /**
     * @return ObserverNodeGroups See `observerNodeGroups` below.
     * 
     */
    public Output<Optional<List<StarRocksInstanceObserverNodeGroup>>> observerNodeGroups() {
        return Codegen.optional(this.observerNodeGroups);
    }
    /**
     * Role name used for password-free access to OSS.
     * 
     */
    @Export(name="ossAccessingRoleName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ossAccessingRoleName;

    /**
     * @return Role name used for password-free access to OSS.
     * 
     */
    public Output<Optional<String>> ossAccessingRoleName() {
        return Codegen.optional(this.ossAccessingRoleName);
    }
    /**
     * The package type of the instance:
     * - trial
     * - official
     * 
     */
    @Export(name="packageType", refs={String.class}, tree="[0]")
    private Output<String> packageType;

    /**
     * @return The package type of the instance:
     * - trial
     * - official
     * 
     */
    public Output<String> packageType() {
        return this.packageType;
    }
    /**
     * The pay type of the instance:
     * - prePaid
     * - postPaid
     * 
     */
    @Export(name="payType", refs={String.class}, tree="[0]")
    private Output<String> payType;

    /**
     * @return The pay type of the instance:
     * - prePaid
     * - postPaid
     * 
     */
    public Output<String> payType() {
        return this.payType;
    }
    /**
     * The duration unit for purchasing:
     * - Month
     * - Year
     *   This is only meaningful when PayType is set to PrePaid.
     * 
     */
    @Export(name="pricingCycle", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> pricingCycle;

    /**
     * @return The duration unit for purchasing:
     * - Month
     * - Year
     *   This is only meaningful when PayType is set to PrePaid.
     * 
     */
    public Output<Optional<String>> pricingCycle() {
        return Codegen.optional(this.pricingCycle);
    }
    /**
     * Promotion
     * 
     */
    @Export(name="promotionOptionNo", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> promotionOptionNo;

    /**
     * @return Promotion
     * 
     */
    public Output<Optional<String>> promotionOptionNo() {
        return Codegen.optional(this.promotionOptionNo);
    }
    /**
     * The region ID of the instance.
     * 
     */
    @Export(name="regionId", refs={String.class}, tree="[0]")
    private Output<String> regionId;

    /**
     * @return The region ID of the instance.
     * 
     */
    public Output<String> regionId() {
        return this.regionId;
    }
    /**
     * ResourceGroupId
     * 
     */
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupId;

    /**
     * @return ResourceGroupId
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * The run mode of the instance:
     * - sharedNothing
     * - sharedData
     * - lakehouse
     * 
     */
    @Export(name="runMode", refs={String.class}, tree="[0]")
    private Output<String> runMode;

    /**
     * @return The run mode of the instance:
     * - sharedNothing
     * - sharedData
     * - lakehouse
     * 
     */
    public Output<String> runMode() {
        return this.runMode;
    }
    /**
     * The status of the instance.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the instance.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Tag list of the instance.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Tag list of the instance.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The version of the instance.
     * 
     */
    @Export(name="version", refs={String.class}, tree="[0]")
    private Output<String> version;

    /**
     * @return The version of the instance.
     * 
     */
    public Output<String> version() {
        return this.version;
    }
    /**
     * The VPC ID of the instance.
     * 
     */
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output<String> vpcId;

    /**
     * @return The VPC ID of the instance.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }
    /**
     * The VSwitches info of the instance. See `vswitches` below.
     * 
     */
    @Export(name="vswitches", refs={List.class,StarRocksInstanceVswitch.class}, tree="[0,1]")
    private Output</* @Nullable */ List<StarRocksInstanceVswitch>> vswitches;

    /**
     * @return The VSwitches info of the instance. See `vswitches` below.
     * 
     */
    public Output<Optional<List<StarRocksInstanceVswitch>>> vswitches() {
        return Codegen.optional(this.vswitches);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StarRocksInstance(java.lang.String name) {
        this(name, StarRocksInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StarRocksInstance(java.lang.String name, StarRocksInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StarRocksInstance(java.lang.String name, StarRocksInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:index/starRocksInstance:StarRocksInstance", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private StarRocksInstance(java.lang.String name, Output<java.lang.String> id, @Nullable StarRocksInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:index/starRocksInstance:StarRocksInstance", name, state, makeResourceOptions(options, id), false);
    }

    private static StarRocksInstanceArgs makeArgs(StarRocksInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? StarRocksInstanceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StarRocksInstance get(java.lang.String name, Output<java.lang.String> id, @Nullable StarRocksInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StarRocksInstance(name, id, state, options);
    }
}
