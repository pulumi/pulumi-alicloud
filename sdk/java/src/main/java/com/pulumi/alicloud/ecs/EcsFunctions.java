// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.ecs.inputs.GetActivationsArgs;
import com.pulumi.alicloud.ecs.inputs.GetActivationsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetAutoSnapshotPoliciesArgs;
import com.pulumi.alicloud.ecs.inputs.GetAutoSnapshotPoliciesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetCapacityReservationsArgs;
import com.pulumi.alicloud.ecs.inputs.GetCapacityReservationsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetCommandsArgs;
import com.pulumi.alicloud.ecs.inputs.GetCommandsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetDedicatedHostsArgs;
import com.pulumi.alicloud.ecs.inputs.GetDedicatedHostsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetDisksArgs;
import com.pulumi.alicloud.ecs.inputs.GetDisksPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsDedicatedHostClustersArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsDedicatedHostClustersPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsDeploymentSetsArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsDeploymentSetsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsDisksArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsDisksPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsImageComponentsArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsImageComponentsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsImagePipelineArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsImagePipelinePlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsInvocationsArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsInvocationsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsKeyPairsArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsKeyPairsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsLaunchTemplatesArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsLaunchTemplatesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacePermissionsArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacePermissionsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacesArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsPrefixListsArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsPrefixListsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotGroupsArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotGroupsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotsArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsStorageCapacityUnitsArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsStorageCapacityUnitsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEipAddressesArgs;
import com.pulumi.alicloud.ecs.inputs.GetEipAddressesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEipsArgs;
import com.pulumi.alicloud.ecs.inputs.GetEipsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetElasticityAssurancesArgs;
import com.pulumi.alicloud.ecs.inputs.GetElasticityAssurancesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetHpcClustersArgs;
import com.pulumi.alicloud.ecs.inputs.GetHpcClustersPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
import com.pulumi.alicloud.ecs.inputs.GetImagesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetInstanceKeywordsArgs;
import com.pulumi.alicloud.ecs.inputs.GetInstanceKeywordsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetInstanceTypeFamiliesArgs;
import com.pulumi.alicloud.ecs.inputs.GetInstanceTypeFamiliesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetInstancesArgs;
import com.pulumi.alicloud.ecs.inputs.GetInstancesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetKeyPairsArgs;
import com.pulumi.alicloud.ecs.inputs.GetKeyPairsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetNetworkInterfacesArgs;
import com.pulumi.alicloud.ecs.inputs.GetNetworkInterfacesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupRulesArgs;
import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupRulesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetSnapshotsArgs;
import com.pulumi.alicloud.ecs.inputs.GetSnapshotsPlainArgs;
import com.pulumi.alicloud.ecs.outputs.GetActivationsResult;
import com.pulumi.alicloud.ecs.outputs.GetAutoSnapshotPoliciesResult;
import com.pulumi.alicloud.ecs.outputs.GetCapacityReservationsResult;
import com.pulumi.alicloud.ecs.outputs.GetCommandsResult;
import com.pulumi.alicloud.ecs.outputs.GetDedicatedHostsResult;
import com.pulumi.alicloud.ecs.outputs.GetDisksResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsDedicatedHostClustersResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsDeploymentSetsResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsDisksResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsImageComponentsResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsImagePipelineResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsInvocationsResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsKeyPairsResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsLaunchTemplatesResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsNetworkInterfacePermissionsResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsNetworkInterfacesResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsPrefixListsResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsSnapshotGroupsResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsSnapshotsResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsStorageCapacityUnitsResult;
import com.pulumi.alicloud.ecs.outputs.GetEipAddressesResult;
import com.pulumi.alicloud.ecs.outputs.GetEipsResult;
import com.pulumi.alicloud.ecs.outputs.GetElasticityAssurancesResult;
import com.pulumi.alicloud.ecs.outputs.GetHpcClustersResult;
import com.pulumi.alicloud.ecs.outputs.GetImagesResult;
import com.pulumi.alicloud.ecs.outputs.GetInstanceKeywordsResult;
import com.pulumi.alicloud.ecs.outputs.GetInstanceTypeFamiliesResult;
import com.pulumi.alicloud.ecs.outputs.GetInstanceTypesResult;
import com.pulumi.alicloud.ecs.outputs.GetInstancesResult;
import com.pulumi.alicloud.ecs.outputs.GetKeyPairsResult;
import com.pulumi.alicloud.ecs.outputs.GetNetworkInterfacesResult;
import com.pulumi.alicloud.ecs.outputs.GetSecurityGroupRulesResult;
import com.pulumi.alicloud.ecs.outputs.GetSecurityGroupsResult;
import com.pulumi.alicloud.ecs.outputs.GetSnapshotsResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class EcsFunctions {
    /**
     * This data source provides the Ecs Activations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.177.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetActivationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getActivations();
     * 
     *         ctx.export(&#34;ecsActivationId1&#34;, ids.applyValue(getActivationsResult -&gt; getActivationsResult.activations()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetActivationsResult> getActivations() {
        return getActivations(GetActivationsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Activations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.177.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetActivationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getActivations();
     * 
     *         ctx.export(&#34;ecsActivationId1&#34;, ids.applyValue(getActivationsResult -&gt; getActivationsResult.activations()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetActivationsResult> getActivationsPlain() {
        return getActivationsPlain(GetActivationsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Activations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.177.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetActivationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getActivations();
     * 
     *         ctx.export(&#34;ecsActivationId1&#34;, ids.applyValue(getActivationsResult -&gt; getActivationsResult.activations()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetActivationsResult> getActivations(GetActivationsArgs args) {
        return getActivations(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Activations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.177.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetActivationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getActivations();
     * 
     *         ctx.export(&#34;ecsActivationId1&#34;, ids.applyValue(getActivationsResult -&gt; getActivationsResult.activations()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetActivationsResult> getActivationsPlain(GetActivationsPlainArgs args) {
        return getActivationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Activations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.177.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetActivationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getActivations();
     * 
     *         ctx.export(&#34;ecsActivationId1&#34;, ids.applyValue(getActivationsResult -&gt; getActivationsResult.activations()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetActivationsResult> getActivations(GetActivationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getActivations:getActivations", TypeShape.of(GetActivationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Activations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.177.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetActivationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getActivations();
     * 
     *         ctx.export(&#34;ecsActivationId1&#34;, ids.applyValue(getActivationsResult -&gt; getActivationsResult.activations()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetActivationsResult> getActivationsPlain(GetActivationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getActivations:getActivations", TypeShape.of(GetActivationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Auto Snapshot Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.117.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetAutoSnapshotPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.builder()
     *             .ids(&#34;sp-bp14e66xxxxxxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsAutoSnapshotPolicyId&#34;, example.applyValue(getAutoSnapshotPoliciesResult -&gt; getAutoSnapshotPoliciesResult.policies()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAutoSnapshotPoliciesResult> getAutoSnapshotPolicies() {
        return getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Auto Snapshot Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.117.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetAutoSnapshotPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.builder()
     *             .ids(&#34;sp-bp14e66xxxxxxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsAutoSnapshotPolicyId&#34;, example.applyValue(getAutoSnapshotPoliciesResult -&gt; getAutoSnapshotPoliciesResult.policies()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAutoSnapshotPoliciesResult> getAutoSnapshotPoliciesPlain() {
        return getAutoSnapshotPoliciesPlain(GetAutoSnapshotPoliciesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Auto Snapshot Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.117.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetAutoSnapshotPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.builder()
     *             .ids(&#34;sp-bp14e66xxxxxxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsAutoSnapshotPolicyId&#34;, example.applyValue(getAutoSnapshotPoliciesResult -&gt; getAutoSnapshotPoliciesResult.policies()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAutoSnapshotPoliciesResult> getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs args) {
        return getAutoSnapshotPolicies(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Auto Snapshot Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.117.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetAutoSnapshotPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.builder()
     *             .ids(&#34;sp-bp14e66xxxxxxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsAutoSnapshotPolicyId&#34;, example.applyValue(getAutoSnapshotPoliciesResult -&gt; getAutoSnapshotPoliciesResult.policies()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAutoSnapshotPoliciesResult> getAutoSnapshotPoliciesPlain(GetAutoSnapshotPoliciesPlainArgs args) {
        return getAutoSnapshotPoliciesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Auto Snapshot Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.117.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetAutoSnapshotPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.builder()
     *             .ids(&#34;sp-bp14e66xxxxxxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsAutoSnapshotPolicyId&#34;, example.applyValue(getAutoSnapshotPoliciesResult -&gt; getAutoSnapshotPoliciesResult.policies()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAutoSnapshotPoliciesResult> getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getAutoSnapshotPolicies:getAutoSnapshotPolicies", TypeShape.of(GetAutoSnapshotPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Auto Snapshot Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.117.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetAutoSnapshotPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.builder()
     *             .ids(&#34;sp-bp14e66xxxxxxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsAutoSnapshotPolicyId&#34;, example.applyValue(getAutoSnapshotPoliciesResult -&gt; getAutoSnapshotPoliciesResult.policies()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAutoSnapshotPoliciesResult> getAutoSnapshotPoliciesPlain(GetAutoSnapshotPoliciesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getAutoSnapshotPolicies:getAutoSnapshotPolicies", TypeShape.of(GetAutoSnapshotPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides Ecs Capacity Reservation available to the user.
     * 
     * &gt; **NOTE:** Available in 1.195.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCapacityReservationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getCapacityReservations(GetCapacityReservationsArgs.builder()
     *             .ids(alicloud_ecs_capacity_reservation.default().id())
     *             .nameRegex(alicloud_ecs_capacity_reservation.default().name())
     *             .instanceType(&#34;ecs.c6.large&#34;)
     *             .platform(&#34;linux&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;alicloudEcsCapacityReservationExampleId&#34;, default_.reservations()[0].id());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCapacityReservationsResult> getCapacityReservations() {
        return getCapacityReservations(GetCapacityReservationsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides Ecs Capacity Reservation available to the user.
     * 
     * &gt; **NOTE:** Available in 1.195.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCapacityReservationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getCapacityReservations(GetCapacityReservationsArgs.builder()
     *             .ids(alicloud_ecs_capacity_reservation.default().id())
     *             .nameRegex(alicloud_ecs_capacity_reservation.default().name())
     *             .instanceType(&#34;ecs.c6.large&#34;)
     *             .platform(&#34;linux&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;alicloudEcsCapacityReservationExampleId&#34;, default_.reservations()[0].id());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCapacityReservationsResult> getCapacityReservationsPlain() {
        return getCapacityReservationsPlain(GetCapacityReservationsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides Ecs Capacity Reservation available to the user.
     * 
     * &gt; **NOTE:** Available in 1.195.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCapacityReservationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getCapacityReservations(GetCapacityReservationsArgs.builder()
     *             .ids(alicloud_ecs_capacity_reservation.default().id())
     *             .nameRegex(alicloud_ecs_capacity_reservation.default().name())
     *             .instanceType(&#34;ecs.c6.large&#34;)
     *             .platform(&#34;linux&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;alicloudEcsCapacityReservationExampleId&#34;, default_.reservations()[0].id());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCapacityReservationsResult> getCapacityReservations(GetCapacityReservationsArgs args) {
        return getCapacityReservations(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides Ecs Capacity Reservation available to the user.
     * 
     * &gt; **NOTE:** Available in 1.195.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCapacityReservationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getCapacityReservations(GetCapacityReservationsArgs.builder()
     *             .ids(alicloud_ecs_capacity_reservation.default().id())
     *             .nameRegex(alicloud_ecs_capacity_reservation.default().name())
     *             .instanceType(&#34;ecs.c6.large&#34;)
     *             .platform(&#34;linux&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;alicloudEcsCapacityReservationExampleId&#34;, default_.reservations()[0].id());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCapacityReservationsResult> getCapacityReservationsPlain(GetCapacityReservationsPlainArgs args) {
        return getCapacityReservationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides Ecs Capacity Reservation available to the user.
     * 
     * &gt; **NOTE:** Available in 1.195.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCapacityReservationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getCapacityReservations(GetCapacityReservationsArgs.builder()
     *             .ids(alicloud_ecs_capacity_reservation.default().id())
     *             .nameRegex(alicloud_ecs_capacity_reservation.default().name())
     *             .instanceType(&#34;ecs.c6.large&#34;)
     *             .platform(&#34;linux&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;alicloudEcsCapacityReservationExampleId&#34;, default_.reservations()[0].id());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCapacityReservationsResult> getCapacityReservations(GetCapacityReservationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getCapacityReservations:getCapacityReservations", TypeShape.of(GetCapacityReservationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides Ecs Capacity Reservation available to the user.
     * 
     * &gt; **NOTE:** Available in 1.195.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCapacityReservationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getCapacityReservations(GetCapacityReservationsArgs.builder()
     *             .ids(alicloud_ecs_capacity_reservation.default().id())
     *             .nameRegex(alicloud_ecs_capacity_reservation.default().name())
     *             .instanceType(&#34;ecs.c6.large&#34;)
     *             .platform(&#34;linux&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;alicloudEcsCapacityReservationExampleId&#34;, default_.reservations()[0].id());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCapacityReservationsResult> getCapacityReservationsPlain(GetCapacityReservationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getCapacityReservations:getCapacityReservations", TypeShape.of(GetCapacityReservationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Commands of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCommandsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getCommands(GetCommandsArgs.builder()
     *             .ids(&#34;E2RY53-xxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsCommandId&#34;, example.applyValue(getCommandsResult -&gt; getCommandsResult.commands()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCommandsResult> getCommands() {
        return getCommands(GetCommandsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Commands of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCommandsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getCommands(GetCommandsArgs.builder()
     *             .ids(&#34;E2RY53-xxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsCommandId&#34;, example.applyValue(getCommandsResult -&gt; getCommandsResult.commands()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCommandsResult> getCommandsPlain() {
        return getCommandsPlain(GetCommandsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Commands of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCommandsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getCommands(GetCommandsArgs.builder()
     *             .ids(&#34;E2RY53-xxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsCommandId&#34;, example.applyValue(getCommandsResult -&gt; getCommandsResult.commands()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCommandsResult> getCommands(GetCommandsArgs args) {
        return getCommands(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Commands of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCommandsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getCommands(GetCommandsArgs.builder()
     *             .ids(&#34;E2RY53-xxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsCommandId&#34;, example.applyValue(getCommandsResult -&gt; getCommandsResult.commands()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCommandsResult> getCommandsPlain(GetCommandsPlainArgs args) {
        return getCommandsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Commands of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCommandsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getCommands(GetCommandsArgs.builder()
     *             .ids(&#34;E2RY53-xxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsCommandId&#34;, example.applyValue(getCommandsResult -&gt; getCommandsResult.commands()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCommandsResult> getCommands(GetCommandsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getCommands:getCommands", TypeShape.of(GetCommandsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Commands of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCommandsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getCommands(GetCommandsArgs.builder()
     *             .ids(&#34;E2RY53-xxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsCommandId&#34;, example.applyValue(getCommandsResult -&gt; getCommandsResult.commands()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCommandsResult> getCommandsPlain(GetCommandsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getCommands:getCommands", TypeShape.of(GetCommandsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of ECS Dedicated Hosts in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in v1.91.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDedicatedHostsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var dedicatedHostsDs = EcsFunctions.getDedicatedHosts(GetDedicatedHostsArgs.builder()
     *             .dedicatedHostType(&#34;ddh.g5&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .status(&#34;Available&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstDedicatedHostsId&#34;, dedicatedHostsDs.applyValue(getDedicatedHostsResult -&gt; getDedicatedHostsResult.hosts()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDedicatedHostsResult> getDedicatedHosts() {
        return getDedicatedHosts(GetDedicatedHostsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of ECS Dedicated Hosts in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in v1.91.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDedicatedHostsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var dedicatedHostsDs = EcsFunctions.getDedicatedHosts(GetDedicatedHostsArgs.builder()
     *             .dedicatedHostType(&#34;ddh.g5&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .status(&#34;Available&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstDedicatedHostsId&#34;, dedicatedHostsDs.applyValue(getDedicatedHostsResult -&gt; getDedicatedHostsResult.hosts()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDedicatedHostsResult> getDedicatedHostsPlain() {
        return getDedicatedHostsPlain(GetDedicatedHostsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of ECS Dedicated Hosts in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in v1.91.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDedicatedHostsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var dedicatedHostsDs = EcsFunctions.getDedicatedHosts(GetDedicatedHostsArgs.builder()
     *             .dedicatedHostType(&#34;ddh.g5&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .status(&#34;Available&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstDedicatedHostsId&#34;, dedicatedHostsDs.applyValue(getDedicatedHostsResult -&gt; getDedicatedHostsResult.hosts()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDedicatedHostsResult> getDedicatedHosts(GetDedicatedHostsArgs args) {
        return getDedicatedHosts(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of ECS Dedicated Hosts in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in v1.91.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDedicatedHostsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var dedicatedHostsDs = EcsFunctions.getDedicatedHosts(GetDedicatedHostsArgs.builder()
     *             .dedicatedHostType(&#34;ddh.g5&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .status(&#34;Available&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstDedicatedHostsId&#34;, dedicatedHostsDs.applyValue(getDedicatedHostsResult -&gt; getDedicatedHostsResult.hosts()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDedicatedHostsResult> getDedicatedHostsPlain(GetDedicatedHostsPlainArgs args) {
        return getDedicatedHostsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of ECS Dedicated Hosts in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in v1.91.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDedicatedHostsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var dedicatedHostsDs = EcsFunctions.getDedicatedHosts(GetDedicatedHostsArgs.builder()
     *             .dedicatedHostType(&#34;ddh.g5&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .status(&#34;Available&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstDedicatedHostsId&#34;, dedicatedHostsDs.applyValue(getDedicatedHostsResult -&gt; getDedicatedHostsResult.hosts()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDedicatedHostsResult> getDedicatedHosts(GetDedicatedHostsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getDedicatedHosts:getDedicatedHosts", TypeShape.of(GetDedicatedHostsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of ECS Dedicated Hosts in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available in v1.91.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDedicatedHostsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var dedicatedHostsDs = EcsFunctions.getDedicatedHosts(GetDedicatedHostsArgs.builder()
     *             .dedicatedHostType(&#34;ddh.g5&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .status(&#34;Available&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstDedicatedHostsId&#34;, dedicatedHostsDs.applyValue(getDedicatedHostsResult -&gt; getDedicatedHostsResult.hosts()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDedicatedHostsResult> getDedicatedHostsPlain(GetDedicatedHostsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getDedicatedHosts:getDedicatedHosts", TypeShape.of(GetDedicatedHostsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsDisks from version 1.122.0.
     * 
     * This data source provides the disks of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var disksDs = EcsFunctions.getDisks(GetDisksArgs.builder()
     *             .nameRegex(&#34;sample_disk&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstDiskId&#34;, disksDs.applyValue(getDisksResult -&gt; getDisksResult.disks()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDisksResult> getDisks() {
        return getDisks(GetDisksArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsDisks from version 1.122.0.
     * 
     * This data source provides the disks of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var disksDs = EcsFunctions.getDisks(GetDisksArgs.builder()
     *             .nameRegex(&#34;sample_disk&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstDiskId&#34;, disksDs.applyValue(getDisksResult -&gt; getDisksResult.disks()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDisksResult> getDisksPlain() {
        return getDisksPlain(GetDisksPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsDisks from version 1.122.0.
     * 
     * This data source provides the disks of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var disksDs = EcsFunctions.getDisks(GetDisksArgs.builder()
     *             .nameRegex(&#34;sample_disk&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstDiskId&#34;, disksDs.applyValue(getDisksResult -&gt; getDisksResult.disks()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDisksResult> getDisks(GetDisksArgs args) {
        return getDisks(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsDisks from version 1.122.0.
     * 
     * This data source provides the disks of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var disksDs = EcsFunctions.getDisks(GetDisksArgs.builder()
     *             .nameRegex(&#34;sample_disk&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstDiskId&#34;, disksDs.applyValue(getDisksResult -&gt; getDisksResult.disks()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDisksResult> getDisksPlain(GetDisksPlainArgs args) {
        return getDisksPlain(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsDisks from version 1.122.0.
     * 
     * This data source provides the disks of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var disksDs = EcsFunctions.getDisks(GetDisksArgs.builder()
     *             .nameRegex(&#34;sample_disk&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstDiskId&#34;, disksDs.applyValue(getDisksResult -&gt; getDisksResult.disks()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDisksResult> getDisks(GetDisksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getDisks:getDisks", TypeShape.of(GetDisksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsDisks from version 1.122.0.
     * 
     * This data source provides the disks of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var disksDs = EcsFunctions.getDisks(GetDisksArgs.builder()
     *             .nameRegex(&#34;sample_disk&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstDiskId&#34;, disksDs.applyValue(getDisksResult -&gt; getDisksResult.disks()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDisksResult> getDisksPlain(GetDisksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getDisks:getDisks", TypeShape.of(GetDisksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Dedicated Host Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.146.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDedicatedHostClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .ids(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId1&#34;, ids.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .nameRegex(&#34;^my-DedicatedHostCluster&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId2&#34;, nameRegex.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var zoneId = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .zoneId(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId3&#34;, zoneId.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var clusterName = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterName(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId4&#34;, clusterName.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var clusterIds = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterIds(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId5&#34;, clusterIds.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsDedicatedHostClustersResult> getEcsDedicatedHostClusters() {
        return getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Dedicated Host Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.146.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDedicatedHostClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .ids(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId1&#34;, ids.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .nameRegex(&#34;^my-DedicatedHostCluster&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId2&#34;, nameRegex.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var zoneId = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .zoneId(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId3&#34;, zoneId.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var clusterName = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterName(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId4&#34;, clusterName.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var clusterIds = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterIds(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId5&#34;, clusterIds.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsDedicatedHostClustersResult> getEcsDedicatedHostClustersPlain() {
        return getEcsDedicatedHostClustersPlain(GetEcsDedicatedHostClustersPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Dedicated Host Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.146.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDedicatedHostClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .ids(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId1&#34;, ids.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .nameRegex(&#34;^my-DedicatedHostCluster&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId2&#34;, nameRegex.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var zoneId = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .zoneId(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId3&#34;, zoneId.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var clusterName = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterName(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId4&#34;, clusterName.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var clusterIds = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterIds(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId5&#34;, clusterIds.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsDedicatedHostClustersResult> getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs args) {
        return getEcsDedicatedHostClusters(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Dedicated Host Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.146.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDedicatedHostClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .ids(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId1&#34;, ids.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .nameRegex(&#34;^my-DedicatedHostCluster&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId2&#34;, nameRegex.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var zoneId = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .zoneId(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId3&#34;, zoneId.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var clusterName = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterName(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId4&#34;, clusterName.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var clusterIds = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterIds(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId5&#34;, clusterIds.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsDedicatedHostClustersResult> getEcsDedicatedHostClustersPlain(GetEcsDedicatedHostClustersPlainArgs args) {
        return getEcsDedicatedHostClustersPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Dedicated Host Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.146.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDedicatedHostClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .ids(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId1&#34;, ids.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .nameRegex(&#34;^my-DedicatedHostCluster&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId2&#34;, nameRegex.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var zoneId = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .zoneId(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId3&#34;, zoneId.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var clusterName = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterName(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId4&#34;, clusterName.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var clusterIds = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterIds(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId5&#34;, clusterIds.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsDedicatedHostClustersResult> getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsDedicatedHostClusters:getEcsDedicatedHostClusters", TypeShape.of(GetEcsDedicatedHostClustersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Dedicated Host Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.146.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDedicatedHostClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .ids(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId1&#34;, ids.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .nameRegex(&#34;^my-DedicatedHostCluster&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId2&#34;, nameRegex.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var zoneId = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .zoneId(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId3&#34;, zoneId.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var clusterName = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterName(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId4&#34;, clusterName.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *         final var clusterIds = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterIds(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDedicatedHostClusterId5&#34;, clusterIds.applyValue(getEcsDedicatedHostClustersResult -&gt; getEcsDedicatedHostClustersResult.clusters()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsDedicatedHostClustersResult> getEcsDedicatedHostClustersPlain(GetEcsDedicatedHostClustersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsDedicatedHostClusters:getEcsDedicatedHostClusters", TypeShape.of(GetEcsDedicatedHostClustersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Deployment Sets of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.140.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDeploymentSetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .ids(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDeploymentSetId1&#34;, ids.applyValue(getEcsDeploymentSetsResult -&gt; getEcsDeploymentSetsResult.sets()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .nameRegex(&#34;^my-DeploymentSet&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDeploymentSetId2&#34;, nameRegex.applyValue(getEcsDeploymentSetsResult -&gt; getEcsDeploymentSetsResult.sets()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsDeploymentSetsResult> getEcsDeploymentSets() {
        return getEcsDeploymentSets(GetEcsDeploymentSetsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Deployment Sets of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.140.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDeploymentSetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .ids(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDeploymentSetId1&#34;, ids.applyValue(getEcsDeploymentSetsResult -&gt; getEcsDeploymentSetsResult.sets()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .nameRegex(&#34;^my-DeploymentSet&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDeploymentSetId2&#34;, nameRegex.applyValue(getEcsDeploymentSetsResult -&gt; getEcsDeploymentSetsResult.sets()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsDeploymentSetsResult> getEcsDeploymentSetsPlain() {
        return getEcsDeploymentSetsPlain(GetEcsDeploymentSetsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Deployment Sets of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.140.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDeploymentSetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .ids(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDeploymentSetId1&#34;, ids.applyValue(getEcsDeploymentSetsResult -&gt; getEcsDeploymentSetsResult.sets()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .nameRegex(&#34;^my-DeploymentSet&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDeploymentSetId2&#34;, nameRegex.applyValue(getEcsDeploymentSetsResult -&gt; getEcsDeploymentSetsResult.sets()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsDeploymentSetsResult> getEcsDeploymentSets(GetEcsDeploymentSetsArgs args) {
        return getEcsDeploymentSets(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Deployment Sets of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.140.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDeploymentSetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .ids(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDeploymentSetId1&#34;, ids.applyValue(getEcsDeploymentSetsResult -&gt; getEcsDeploymentSetsResult.sets()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .nameRegex(&#34;^my-DeploymentSet&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDeploymentSetId2&#34;, nameRegex.applyValue(getEcsDeploymentSetsResult -&gt; getEcsDeploymentSetsResult.sets()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsDeploymentSetsResult> getEcsDeploymentSetsPlain(GetEcsDeploymentSetsPlainArgs args) {
        return getEcsDeploymentSetsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Deployment Sets of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.140.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDeploymentSetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .ids(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDeploymentSetId1&#34;, ids.applyValue(getEcsDeploymentSetsResult -&gt; getEcsDeploymentSetsResult.sets()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .nameRegex(&#34;^my-DeploymentSet&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDeploymentSetId2&#34;, nameRegex.applyValue(getEcsDeploymentSetsResult -&gt; getEcsDeploymentSetsResult.sets()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsDeploymentSetsResult> getEcsDeploymentSets(GetEcsDeploymentSetsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsDeploymentSets:getEcsDeploymentSets", TypeShape.of(GetEcsDeploymentSetsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Deployment Sets of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.140.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDeploymentSetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .ids(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDeploymentSetId1&#34;, ids.applyValue(getEcsDeploymentSetsResult -&gt; getEcsDeploymentSetsResult.sets()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .nameRegex(&#34;^my-DeploymentSet&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsDeploymentSetId2&#34;, nameRegex.applyValue(getEcsDeploymentSetsResult -&gt; getEcsDeploymentSetsResult.sets()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsDeploymentSetsResult> getEcsDeploymentSetsPlain(GetEcsDeploymentSetsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsDeploymentSets:getEcsDeploymentSets", TypeShape.of(GetEcsDeploymentSetsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Disks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.122.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsDisks(GetEcsDisksArgs.builder()
     *             .ids(&#34;d-artgdsvdvxxxx&#34;)
     *             .nameRegex(&#34;tf-test&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsDiskId&#34;, example.applyValue(getEcsDisksResult -&gt; getEcsDisksResult.disks()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsDisksResult> getEcsDisks() {
        return getEcsDisks(GetEcsDisksArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Disks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.122.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsDisks(GetEcsDisksArgs.builder()
     *             .ids(&#34;d-artgdsvdvxxxx&#34;)
     *             .nameRegex(&#34;tf-test&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsDiskId&#34;, example.applyValue(getEcsDisksResult -&gt; getEcsDisksResult.disks()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsDisksResult> getEcsDisksPlain() {
        return getEcsDisksPlain(GetEcsDisksPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Disks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.122.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsDisks(GetEcsDisksArgs.builder()
     *             .ids(&#34;d-artgdsvdvxxxx&#34;)
     *             .nameRegex(&#34;tf-test&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsDiskId&#34;, example.applyValue(getEcsDisksResult -&gt; getEcsDisksResult.disks()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsDisksResult> getEcsDisks(GetEcsDisksArgs args) {
        return getEcsDisks(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Disks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.122.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsDisks(GetEcsDisksArgs.builder()
     *             .ids(&#34;d-artgdsvdvxxxx&#34;)
     *             .nameRegex(&#34;tf-test&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsDiskId&#34;, example.applyValue(getEcsDisksResult -&gt; getEcsDisksResult.disks()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsDisksResult> getEcsDisksPlain(GetEcsDisksPlainArgs args) {
        return getEcsDisksPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Disks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.122.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsDisks(GetEcsDisksArgs.builder()
     *             .ids(&#34;d-artgdsvdvxxxx&#34;)
     *             .nameRegex(&#34;tf-test&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsDiskId&#34;, example.applyValue(getEcsDisksResult -&gt; getEcsDisksResult.disks()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsDisksResult> getEcsDisks(GetEcsDisksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsDisks:getEcsDisks", TypeShape.of(GetEcsDisksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Disks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.122.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsDisks(GetEcsDisksArgs.builder()
     *             .ids(&#34;d-artgdsvdvxxxx&#34;)
     *             .nameRegex(&#34;tf-test&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsDiskId&#34;, example.applyValue(getEcsDisksResult -&gt; getEcsDisksResult.disks()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsDisksResult> getEcsDisksPlain(GetEcsDisksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsDisks:getEcsDisks", TypeShape.of(GetEcsDisksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Image Components of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.159.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImageComponentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .ids(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImageComponentId1&#34;, ids.applyValue(getEcsImageComponentsResult -&gt; getEcsImageComponentsResult.components()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .nameRegex(&#34;^my-ImageComponent&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImageComponentId2&#34;, nameRegex.applyValue(getEcsImageComponentsResult -&gt; getEcsImageComponentsResult.components()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsImageComponentsResult> getEcsImageComponents() {
        return getEcsImageComponents(GetEcsImageComponentsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Image Components of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.159.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImageComponentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .ids(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImageComponentId1&#34;, ids.applyValue(getEcsImageComponentsResult -&gt; getEcsImageComponentsResult.components()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .nameRegex(&#34;^my-ImageComponent&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImageComponentId2&#34;, nameRegex.applyValue(getEcsImageComponentsResult -&gt; getEcsImageComponentsResult.components()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsImageComponentsResult> getEcsImageComponentsPlain() {
        return getEcsImageComponentsPlain(GetEcsImageComponentsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Image Components of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.159.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImageComponentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .ids(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImageComponentId1&#34;, ids.applyValue(getEcsImageComponentsResult -&gt; getEcsImageComponentsResult.components()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .nameRegex(&#34;^my-ImageComponent&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImageComponentId2&#34;, nameRegex.applyValue(getEcsImageComponentsResult -&gt; getEcsImageComponentsResult.components()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsImageComponentsResult> getEcsImageComponents(GetEcsImageComponentsArgs args) {
        return getEcsImageComponents(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Image Components of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.159.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImageComponentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .ids(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImageComponentId1&#34;, ids.applyValue(getEcsImageComponentsResult -&gt; getEcsImageComponentsResult.components()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .nameRegex(&#34;^my-ImageComponent&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImageComponentId2&#34;, nameRegex.applyValue(getEcsImageComponentsResult -&gt; getEcsImageComponentsResult.components()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsImageComponentsResult> getEcsImageComponentsPlain(GetEcsImageComponentsPlainArgs args) {
        return getEcsImageComponentsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Image Components of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.159.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImageComponentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .ids(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImageComponentId1&#34;, ids.applyValue(getEcsImageComponentsResult -&gt; getEcsImageComponentsResult.components()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .nameRegex(&#34;^my-ImageComponent&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImageComponentId2&#34;, nameRegex.applyValue(getEcsImageComponentsResult -&gt; getEcsImageComponentsResult.components()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsImageComponentsResult> getEcsImageComponents(GetEcsImageComponentsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsImageComponents:getEcsImageComponents", TypeShape.of(GetEcsImageComponentsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Image Components of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.159.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImageComponentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .ids(&#34;example_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImageComponentId1&#34;, ids.applyValue(getEcsImageComponentsResult -&gt; getEcsImageComponentsResult.components()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .nameRegex(&#34;^my-ImageComponent&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImageComponentId2&#34;, nameRegex.applyValue(getEcsImageComponentsResult -&gt; getEcsImageComponentsResult.components()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsImageComponentsResult> getEcsImageComponentsPlain(GetEcsImageComponentsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsImageComponents:getEcsImageComponents", TypeShape.of(GetEcsImageComponentsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Image Pipelines of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.163.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImagePipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .ids(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImagePipelineId1&#34;, ids.applyValue(getEcsImagePipelineResult -&gt; getEcsImagePipelineResult.pipelines()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .nameRegex(&#34;^my-ImagePipeline&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImagePipelineId2&#34;, nameRegex.applyValue(getEcsImagePipelineResult -&gt; getEcsImagePipelineResult.pipelines()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsImagePipelineResult> getEcsImagePipeline() {
        return getEcsImagePipeline(GetEcsImagePipelineArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Image Pipelines of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.163.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImagePipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .ids(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImagePipelineId1&#34;, ids.applyValue(getEcsImagePipelineResult -&gt; getEcsImagePipelineResult.pipelines()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .nameRegex(&#34;^my-ImagePipeline&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImagePipelineId2&#34;, nameRegex.applyValue(getEcsImagePipelineResult -&gt; getEcsImagePipelineResult.pipelines()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsImagePipelineResult> getEcsImagePipelinePlain() {
        return getEcsImagePipelinePlain(GetEcsImagePipelinePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Image Pipelines of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.163.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImagePipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .ids(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImagePipelineId1&#34;, ids.applyValue(getEcsImagePipelineResult -&gt; getEcsImagePipelineResult.pipelines()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .nameRegex(&#34;^my-ImagePipeline&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImagePipelineId2&#34;, nameRegex.applyValue(getEcsImagePipelineResult -&gt; getEcsImagePipelineResult.pipelines()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsImagePipelineResult> getEcsImagePipeline(GetEcsImagePipelineArgs args) {
        return getEcsImagePipeline(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Image Pipelines of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.163.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImagePipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .ids(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImagePipelineId1&#34;, ids.applyValue(getEcsImagePipelineResult -&gt; getEcsImagePipelineResult.pipelines()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .nameRegex(&#34;^my-ImagePipeline&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImagePipelineId2&#34;, nameRegex.applyValue(getEcsImagePipelineResult -&gt; getEcsImagePipelineResult.pipelines()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsImagePipelineResult> getEcsImagePipelinePlain(GetEcsImagePipelinePlainArgs args) {
        return getEcsImagePipelinePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Image Pipelines of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.163.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImagePipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .ids(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImagePipelineId1&#34;, ids.applyValue(getEcsImagePipelineResult -&gt; getEcsImagePipelineResult.pipelines()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .nameRegex(&#34;^my-ImagePipeline&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImagePipelineId2&#34;, nameRegex.applyValue(getEcsImagePipelineResult -&gt; getEcsImagePipelineResult.pipelines()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsImagePipelineResult> getEcsImagePipeline(GetEcsImagePipelineArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsImagePipeline:getEcsImagePipeline", TypeShape.of(GetEcsImagePipelineResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Image Pipelines of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.163.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImagePipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .ids(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImagePipelineId1&#34;, ids.applyValue(getEcsImagePipelineResult -&gt; getEcsImagePipelineResult.pipelines()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .nameRegex(&#34;^my-ImagePipeline&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsImagePipelineId2&#34;, nameRegex.applyValue(getEcsImagePipelineResult -&gt; getEcsImagePipelineResult.pipelines()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsImagePipelineResult> getEcsImagePipelinePlain(GetEcsImagePipelinePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsImagePipeline:getEcsImagePipeline", TypeShape.of(GetEcsImagePipelineResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Invocations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.168.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsInvocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsInvocations(GetEcsInvocationsArgs.builder()
     *             .ids(&#34;example-id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsInvocationId1&#34;, ids.applyValue(getEcsInvocationsResult -&gt; getEcsInvocationsResult.invocations()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsInvocationsResult> getEcsInvocations() {
        return getEcsInvocations(GetEcsInvocationsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Invocations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.168.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsInvocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsInvocations(GetEcsInvocationsArgs.builder()
     *             .ids(&#34;example-id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsInvocationId1&#34;, ids.applyValue(getEcsInvocationsResult -&gt; getEcsInvocationsResult.invocations()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsInvocationsResult> getEcsInvocationsPlain() {
        return getEcsInvocationsPlain(GetEcsInvocationsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Invocations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.168.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsInvocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsInvocations(GetEcsInvocationsArgs.builder()
     *             .ids(&#34;example-id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsInvocationId1&#34;, ids.applyValue(getEcsInvocationsResult -&gt; getEcsInvocationsResult.invocations()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsInvocationsResult> getEcsInvocations(GetEcsInvocationsArgs args) {
        return getEcsInvocations(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Invocations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.168.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsInvocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsInvocations(GetEcsInvocationsArgs.builder()
     *             .ids(&#34;example-id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsInvocationId1&#34;, ids.applyValue(getEcsInvocationsResult -&gt; getEcsInvocationsResult.invocations()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsInvocationsResult> getEcsInvocationsPlain(GetEcsInvocationsPlainArgs args) {
        return getEcsInvocationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Invocations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.168.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsInvocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsInvocations(GetEcsInvocationsArgs.builder()
     *             .ids(&#34;example-id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsInvocationId1&#34;, ids.applyValue(getEcsInvocationsResult -&gt; getEcsInvocationsResult.invocations()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsInvocationsResult> getEcsInvocations(GetEcsInvocationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsInvocations:getEcsInvocations", TypeShape.of(GetEcsInvocationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Invocations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.168.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsInvocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsInvocations(GetEcsInvocationsArgs.builder()
     *             .ids(&#34;example-id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsInvocationId1&#34;, ids.applyValue(getEcsInvocationsResult -&gt; getEcsInvocationsResult.invocations()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsInvocationsResult> getEcsInvocationsPlain(GetEcsInvocationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsInvocations:getEcsInvocations", TypeShape.of(GetEcsInvocationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Key Pairs of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.121.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsKeyPairs(GetEcsKeyPairsArgs.builder()
     *             .ids(&#34;key_pair_name&#34;)
     *             .nameRegex(&#34;key_pair_name&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsKeyPairId&#34;, example.applyValue(getEcsKeyPairsResult -&gt; getEcsKeyPairsResult.pairs()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsKeyPairsResult> getEcsKeyPairs() {
        return getEcsKeyPairs(GetEcsKeyPairsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Key Pairs of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.121.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsKeyPairs(GetEcsKeyPairsArgs.builder()
     *             .ids(&#34;key_pair_name&#34;)
     *             .nameRegex(&#34;key_pair_name&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsKeyPairId&#34;, example.applyValue(getEcsKeyPairsResult -&gt; getEcsKeyPairsResult.pairs()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsKeyPairsResult> getEcsKeyPairsPlain() {
        return getEcsKeyPairsPlain(GetEcsKeyPairsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Key Pairs of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.121.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsKeyPairs(GetEcsKeyPairsArgs.builder()
     *             .ids(&#34;key_pair_name&#34;)
     *             .nameRegex(&#34;key_pair_name&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsKeyPairId&#34;, example.applyValue(getEcsKeyPairsResult -&gt; getEcsKeyPairsResult.pairs()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsKeyPairsResult> getEcsKeyPairs(GetEcsKeyPairsArgs args) {
        return getEcsKeyPairs(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Key Pairs of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.121.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsKeyPairs(GetEcsKeyPairsArgs.builder()
     *             .ids(&#34;key_pair_name&#34;)
     *             .nameRegex(&#34;key_pair_name&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsKeyPairId&#34;, example.applyValue(getEcsKeyPairsResult -&gt; getEcsKeyPairsResult.pairs()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsKeyPairsResult> getEcsKeyPairsPlain(GetEcsKeyPairsPlainArgs args) {
        return getEcsKeyPairsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Key Pairs of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.121.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsKeyPairs(GetEcsKeyPairsArgs.builder()
     *             .ids(&#34;key_pair_name&#34;)
     *             .nameRegex(&#34;key_pair_name&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsKeyPairId&#34;, example.applyValue(getEcsKeyPairsResult -&gt; getEcsKeyPairsResult.pairs()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsKeyPairsResult> getEcsKeyPairs(GetEcsKeyPairsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsKeyPairs:getEcsKeyPairs", TypeShape.of(GetEcsKeyPairsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Key Pairs of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.121.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsKeyPairs(GetEcsKeyPairsArgs.builder()
     *             .ids(&#34;key_pair_name&#34;)
     *             .nameRegex(&#34;key_pair_name&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsKeyPairId&#34;, example.applyValue(getEcsKeyPairsResult -&gt; getEcsKeyPairsResult.pairs()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsKeyPairsResult> getEcsKeyPairsPlain(GetEcsKeyPairsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsKeyPairs:getEcsKeyPairs", TypeShape.of(GetEcsKeyPairsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Launch Templates of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.120.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsLaunchTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsLaunchTemplates(GetEcsLaunchTemplatesArgs.builder()
     *             .ids(&#34;lt-bp1a469uxxxxxx&#34;)
     *             .nameRegex(&#34;your_launch_name&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsLaunchTemplateId&#34;, example.applyValue(getEcsLaunchTemplatesResult -&gt; getEcsLaunchTemplatesResult.templates()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsLaunchTemplatesResult> getEcsLaunchTemplates() {
        return getEcsLaunchTemplates(GetEcsLaunchTemplatesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Launch Templates of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.120.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsLaunchTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsLaunchTemplates(GetEcsLaunchTemplatesArgs.builder()
     *             .ids(&#34;lt-bp1a469uxxxxxx&#34;)
     *             .nameRegex(&#34;your_launch_name&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsLaunchTemplateId&#34;, example.applyValue(getEcsLaunchTemplatesResult -&gt; getEcsLaunchTemplatesResult.templates()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsLaunchTemplatesResult> getEcsLaunchTemplatesPlain() {
        return getEcsLaunchTemplatesPlain(GetEcsLaunchTemplatesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Launch Templates of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.120.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsLaunchTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsLaunchTemplates(GetEcsLaunchTemplatesArgs.builder()
     *             .ids(&#34;lt-bp1a469uxxxxxx&#34;)
     *             .nameRegex(&#34;your_launch_name&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsLaunchTemplateId&#34;, example.applyValue(getEcsLaunchTemplatesResult -&gt; getEcsLaunchTemplatesResult.templates()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsLaunchTemplatesResult> getEcsLaunchTemplates(GetEcsLaunchTemplatesArgs args) {
        return getEcsLaunchTemplates(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Launch Templates of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.120.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsLaunchTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsLaunchTemplates(GetEcsLaunchTemplatesArgs.builder()
     *             .ids(&#34;lt-bp1a469uxxxxxx&#34;)
     *             .nameRegex(&#34;your_launch_name&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsLaunchTemplateId&#34;, example.applyValue(getEcsLaunchTemplatesResult -&gt; getEcsLaunchTemplatesResult.templates()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsLaunchTemplatesResult> getEcsLaunchTemplatesPlain(GetEcsLaunchTemplatesPlainArgs args) {
        return getEcsLaunchTemplatesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Launch Templates of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.120.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsLaunchTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsLaunchTemplates(GetEcsLaunchTemplatesArgs.builder()
     *             .ids(&#34;lt-bp1a469uxxxxxx&#34;)
     *             .nameRegex(&#34;your_launch_name&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsLaunchTemplateId&#34;, example.applyValue(getEcsLaunchTemplatesResult -&gt; getEcsLaunchTemplatesResult.templates()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsLaunchTemplatesResult> getEcsLaunchTemplates(GetEcsLaunchTemplatesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsLaunchTemplates:getEcsLaunchTemplates", TypeShape.of(GetEcsLaunchTemplatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Launch Templates of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.120.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsLaunchTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsLaunchTemplates(GetEcsLaunchTemplatesArgs.builder()
     *             .ids(&#34;lt-bp1a469uxxxxxx&#34;)
     *             .nameRegex(&#34;your_launch_name&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsLaunchTemplateId&#34;, example.applyValue(getEcsLaunchTemplatesResult -&gt; getEcsLaunchTemplatesResult.templates()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsLaunchTemplatesResult> getEcsLaunchTemplatesPlain(GetEcsLaunchTemplatesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsLaunchTemplates:getEcsLaunchTemplates", TypeShape.of(GetEcsLaunchTemplatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Network Interface Permissions of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.166.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacePermissionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsNetworkInterfacePermissions(GetEcsNetworkInterfacePermissionsArgs.builder()
     *             .ids(&#34;example_value&#34;)
     *             .networkInterfaceId(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsNetworkInterfacePermissionId1&#34;, ids.applyValue(getEcsNetworkInterfacePermissionsResult -&gt; getEcsNetworkInterfacePermissionsResult.permissions()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsNetworkInterfacePermissionsResult> getEcsNetworkInterfacePermissions(GetEcsNetworkInterfacePermissionsArgs args) {
        return getEcsNetworkInterfacePermissions(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Network Interface Permissions of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.166.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacePermissionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsNetworkInterfacePermissions(GetEcsNetworkInterfacePermissionsArgs.builder()
     *             .ids(&#34;example_value&#34;)
     *             .networkInterfaceId(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsNetworkInterfacePermissionId1&#34;, ids.applyValue(getEcsNetworkInterfacePermissionsResult -&gt; getEcsNetworkInterfacePermissionsResult.permissions()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsNetworkInterfacePermissionsResult> getEcsNetworkInterfacePermissionsPlain(GetEcsNetworkInterfacePermissionsPlainArgs args) {
        return getEcsNetworkInterfacePermissionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Network Interface Permissions of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.166.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacePermissionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsNetworkInterfacePermissions(GetEcsNetworkInterfacePermissionsArgs.builder()
     *             .ids(&#34;example_value&#34;)
     *             .networkInterfaceId(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsNetworkInterfacePermissionId1&#34;, ids.applyValue(getEcsNetworkInterfacePermissionsResult -&gt; getEcsNetworkInterfacePermissionsResult.permissions()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsNetworkInterfacePermissionsResult> getEcsNetworkInterfacePermissions(GetEcsNetworkInterfacePermissionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsNetworkInterfacePermissions:getEcsNetworkInterfacePermissions", TypeShape.of(GetEcsNetworkInterfacePermissionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Network Interface Permissions of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.166.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacePermissionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsNetworkInterfacePermissions(GetEcsNetworkInterfacePermissionsArgs.builder()
     *             .ids(&#34;example_value&#34;)
     *             .networkInterfaceId(&#34;example_value&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsNetworkInterfacePermissionId1&#34;, ids.applyValue(getEcsNetworkInterfacePermissionsResult -&gt; getEcsNetworkInterfacePermissionsResult.permissions()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsNetworkInterfacePermissionsResult> getEcsNetworkInterfacePermissionsPlain(GetEcsNetworkInterfacePermissionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsNetworkInterfacePermissions:getEcsNetworkInterfacePermissions", TypeShape.of(GetEcsNetworkInterfacePermissionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Network Interfaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.123.1+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsNetworkInterfaces(GetEcsNetworkInterfacesArgs.builder()
     *             .ids(&#34;eni-abcd1234&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsNetworkInterfaceId&#34;, example.applyValue(getEcsNetworkInterfacesResult -&gt; getEcsNetworkInterfacesResult.interfaces()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsNetworkInterfacesResult> getEcsNetworkInterfaces() {
        return getEcsNetworkInterfaces(GetEcsNetworkInterfacesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Network Interfaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.123.1+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsNetworkInterfaces(GetEcsNetworkInterfacesArgs.builder()
     *             .ids(&#34;eni-abcd1234&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsNetworkInterfaceId&#34;, example.applyValue(getEcsNetworkInterfacesResult -&gt; getEcsNetworkInterfacesResult.interfaces()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsNetworkInterfacesResult> getEcsNetworkInterfacesPlain() {
        return getEcsNetworkInterfacesPlain(GetEcsNetworkInterfacesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Network Interfaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.123.1+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsNetworkInterfaces(GetEcsNetworkInterfacesArgs.builder()
     *             .ids(&#34;eni-abcd1234&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsNetworkInterfaceId&#34;, example.applyValue(getEcsNetworkInterfacesResult -&gt; getEcsNetworkInterfacesResult.interfaces()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsNetworkInterfacesResult> getEcsNetworkInterfaces(GetEcsNetworkInterfacesArgs args) {
        return getEcsNetworkInterfaces(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Network Interfaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.123.1+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsNetworkInterfaces(GetEcsNetworkInterfacesArgs.builder()
     *             .ids(&#34;eni-abcd1234&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsNetworkInterfaceId&#34;, example.applyValue(getEcsNetworkInterfacesResult -&gt; getEcsNetworkInterfacesResult.interfaces()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsNetworkInterfacesResult> getEcsNetworkInterfacesPlain(GetEcsNetworkInterfacesPlainArgs args) {
        return getEcsNetworkInterfacesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Network Interfaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.123.1+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsNetworkInterfaces(GetEcsNetworkInterfacesArgs.builder()
     *             .ids(&#34;eni-abcd1234&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsNetworkInterfaceId&#34;, example.applyValue(getEcsNetworkInterfacesResult -&gt; getEcsNetworkInterfacesResult.interfaces()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsNetworkInterfacesResult> getEcsNetworkInterfaces(GetEcsNetworkInterfacesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsNetworkInterfaces:getEcsNetworkInterfaces", TypeShape.of(GetEcsNetworkInterfacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Network Interfaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.123.1+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsNetworkInterfaces(GetEcsNetworkInterfacesArgs.builder()
     *             .ids(&#34;eni-abcd1234&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsNetworkInterfaceId&#34;, example.applyValue(getEcsNetworkInterfacesResult -&gt; getEcsNetworkInterfacesResult.interfaces()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsNetworkInterfacesResult> getEcsNetworkInterfacesPlain(GetEcsNetworkInterfacesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsNetworkInterfaces:getEcsNetworkInterfaces", TypeShape.of(GetEcsNetworkInterfacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Prefix Lists of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.152.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsPrefixListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsPrefixLists(GetEcsPrefixListsArgs.builder()
     *             .ids(&#34;E2RY53-xxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;outputId&#34;, example.applyValue(getEcsPrefixListsResult -&gt; getEcsPrefixListsResult.lists()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsPrefixListsResult> getEcsPrefixLists() {
        return getEcsPrefixLists(GetEcsPrefixListsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Prefix Lists of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.152.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsPrefixListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsPrefixLists(GetEcsPrefixListsArgs.builder()
     *             .ids(&#34;E2RY53-xxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;outputId&#34;, example.applyValue(getEcsPrefixListsResult -&gt; getEcsPrefixListsResult.lists()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsPrefixListsResult> getEcsPrefixListsPlain() {
        return getEcsPrefixListsPlain(GetEcsPrefixListsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Prefix Lists of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.152.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsPrefixListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsPrefixLists(GetEcsPrefixListsArgs.builder()
     *             .ids(&#34;E2RY53-xxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;outputId&#34;, example.applyValue(getEcsPrefixListsResult -&gt; getEcsPrefixListsResult.lists()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsPrefixListsResult> getEcsPrefixLists(GetEcsPrefixListsArgs args) {
        return getEcsPrefixLists(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Prefix Lists of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.152.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsPrefixListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsPrefixLists(GetEcsPrefixListsArgs.builder()
     *             .ids(&#34;E2RY53-xxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;outputId&#34;, example.applyValue(getEcsPrefixListsResult -&gt; getEcsPrefixListsResult.lists()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsPrefixListsResult> getEcsPrefixListsPlain(GetEcsPrefixListsPlainArgs args) {
        return getEcsPrefixListsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Prefix Lists of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.152.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsPrefixListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsPrefixLists(GetEcsPrefixListsArgs.builder()
     *             .ids(&#34;E2RY53-xxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;outputId&#34;, example.applyValue(getEcsPrefixListsResult -&gt; getEcsPrefixListsResult.lists()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsPrefixListsResult> getEcsPrefixLists(GetEcsPrefixListsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsPrefixLists:getEcsPrefixLists", TypeShape.of(GetEcsPrefixListsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Prefix Lists of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.152.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsPrefixListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsPrefixLists(GetEcsPrefixListsArgs.builder()
     *             .ids(&#34;E2RY53-xxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;outputId&#34;, example.applyValue(getEcsPrefixListsResult -&gt; getEcsPrefixListsResult.lists()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsPrefixListsResult> getEcsPrefixListsPlain(GetEcsPrefixListsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsPrefixLists:getEcsPrefixLists", TypeShape.of(GetEcsPrefixListsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Snapshot Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.160.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .ids(&#34;example-id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId1&#34;, ids.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .nameRegex(&#34;^my-SnapshotGroup&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId2&#34;, nameRegex.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *         final var status = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .status(&#34;accomplished&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId3&#34;, status.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *         final var instanceId = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .instanceId(&#34;example-instance_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId4&#34;, instanceId.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsSnapshotGroupsResult> getEcsSnapshotGroups() {
        return getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Snapshot Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.160.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .ids(&#34;example-id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId1&#34;, ids.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .nameRegex(&#34;^my-SnapshotGroup&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId2&#34;, nameRegex.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *         final var status = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .status(&#34;accomplished&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId3&#34;, status.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *         final var instanceId = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .instanceId(&#34;example-instance_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId4&#34;, instanceId.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsSnapshotGroupsResult> getEcsSnapshotGroupsPlain() {
        return getEcsSnapshotGroupsPlain(GetEcsSnapshotGroupsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Snapshot Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.160.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .ids(&#34;example-id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId1&#34;, ids.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .nameRegex(&#34;^my-SnapshotGroup&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId2&#34;, nameRegex.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *         final var status = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .status(&#34;accomplished&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId3&#34;, status.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *         final var instanceId = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .instanceId(&#34;example-instance_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId4&#34;, instanceId.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsSnapshotGroupsResult> getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs args) {
        return getEcsSnapshotGroups(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Snapshot Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.160.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .ids(&#34;example-id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId1&#34;, ids.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .nameRegex(&#34;^my-SnapshotGroup&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId2&#34;, nameRegex.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *         final var status = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .status(&#34;accomplished&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId3&#34;, status.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *         final var instanceId = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .instanceId(&#34;example-instance_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId4&#34;, instanceId.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsSnapshotGroupsResult> getEcsSnapshotGroupsPlain(GetEcsSnapshotGroupsPlainArgs args) {
        return getEcsSnapshotGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Snapshot Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.160.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .ids(&#34;example-id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId1&#34;, ids.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .nameRegex(&#34;^my-SnapshotGroup&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId2&#34;, nameRegex.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *         final var status = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .status(&#34;accomplished&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId3&#34;, status.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *         final var instanceId = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .instanceId(&#34;example-instance_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId4&#34;, instanceId.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsSnapshotGroupsResult> getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsSnapshotGroups:getEcsSnapshotGroups", TypeShape.of(GetEcsSnapshotGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Snapshot Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.160.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .ids(&#34;example-id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId1&#34;, ids.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .nameRegex(&#34;^my-SnapshotGroup&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId2&#34;, nameRegex.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *         final var status = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .status(&#34;accomplished&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId3&#34;, status.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *         final var instanceId = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .instanceId(&#34;example-instance_id&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsSnapshotGroupId4&#34;, instanceId.applyValue(getEcsSnapshotGroupsResult -&gt; getEcsSnapshotGroupsResult.groups()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsSnapshotGroupsResult> getEcsSnapshotGroupsPlain(GetEcsSnapshotGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsSnapshotGroups:getEcsSnapshotGroups", TypeShape.of(GetEcsSnapshotGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.120.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsSnapshots(GetEcsSnapshotsArgs.builder()
     *             .ids(&#34;s-bp1fvuxxxxxxxx&#34;)
     *             .nameRegex(&#34;tf-test&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsSnapshotId&#34;, example.applyValue(getEcsSnapshotsResult -&gt; getEcsSnapshotsResult.snapshots()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsSnapshotsResult> getEcsSnapshots() {
        return getEcsSnapshots(GetEcsSnapshotsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.120.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsSnapshots(GetEcsSnapshotsArgs.builder()
     *             .ids(&#34;s-bp1fvuxxxxxxxx&#34;)
     *             .nameRegex(&#34;tf-test&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsSnapshotId&#34;, example.applyValue(getEcsSnapshotsResult -&gt; getEcsSnapshotsResult.snapshots()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsSnapshotsResult> getEcsSnapshotsPlain() {
        return getEcsSnapshotsPlain(GetEcsSnapshotsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.120.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsSnapshots(GetEcsSnapshotsArgs.builder()
     *             .ids(&#34;s-bp1fvuxxxxxxxx&#34;)
     *             .nameRegex(&#34;tf-test&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsSnapshotId&#34;, example.applyValue(getEcsSnapshotsResult -&gt; getEcsSnapshotsResult.snapshots()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsSnapshotsResult> getEcsSnapshots(GetEcsSnapshotsArgs args) {
        return getEcsSnapshots(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.120.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsSnapshots(GetEcsSnapshotsArgs.builder()
     *             .ids(&#34;s-bp1fvuxxxxxxxx&#34;)
     *             .nameRegex(&#34;tf-test&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsSnapshotId&#34;, example.applyValue(getEcsSnapshotsResult -&gt; getEcsSnapshotsResult.snapshots()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsSnapshotsResult> getEcsSnapshotsPlain(GetEcsSnapshotsPlainArgs args) {
        return getEcsSnapshotsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.120.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsSnapshots(GetEcsSnapshotsArgs.builder()
     *             .ids(&#34;s-bp1fvuxxxxxxxx&#34;)
     *             .nameRegex(&#34;tf-test&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsSnapshotId&#34;, example.applyValue(getEcsSnapshotsResult -&gt; getEcsSnapshotsResult.snapshots()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsSnapshotsResult> getEcsSnapshots(GetEcsSnapshotsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsSnapshots:getEcsSnapshots", TypeShape.of(GetEcsSnapshotsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.120.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsSnapshots(GetEcsSnapshotsArgs.builder()
     *             .ids(&#34;s-bp1fvuxxxxxxxx&#34;)
     *             .nameRegex(&#34;tf-test&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsSnapshotId&#34;, example.applyValue(getEcsSnapshotsResult -&gt; getEcsSnapshotsResult.snapshots()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsSnapshotsResult> getEcsSnapshotsPlain(GetEcsSnapshotsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsSnapshots:getEcsSnapshots", TypeShape.of(GetEcsSnapshotsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Storage Capacity Units of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.155.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsStorageCapacityUnitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsStorageCapacityUnits();
     * 
     *         ctx.export(&#34;ecsStorageCapacityUnitId1&#34;, ids.applyValue(getEcsStorageCapacityUnitsResult -&gt; getEcsStorageCapacityUnitsResult.units()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.builder()
     *             .nameRegex(&#34;^my-StorageCapacityUnit&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsStorageCapacityUnitId2&#34;, nameRegex.applyValue(getEcsStorageCapacityUnitsResult -&gt; getEcsStorageCapacityUnitsResult.units()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsStorageCapacityUnitsResult> getEcsStorageCapacityUnits() {
        return getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Storage Capacity Units of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.155.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsStorageCapacityUnitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsStorageCapacityUnits();
     * 
     *         ctx.export(&#34;ecsStorageCapacityUnitId1&#34;, ids.applyValue(getEcsStorageCapacityUnitsResult -&gt; getEcsStorageCapacityUnitsResult.units()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.builder()
     *             .nameRegex(&#34;^my-StorageCapacityUnit&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsStorageCapacityUnitId2&#34;, nameRegex.applyValue(getEcsStorageCapacityUnitsResult -&gt; getEcsStorageCapacityUnitsResult.units()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsStorageCapacityUnitsResult> getEcsStorageCapacityUnitsPlain() {
        return getEcsStorageCapacityUnitsPlain(GetEcsStorageCapacityUnitsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Storage Capacity Units of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.155.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsStorageCapacityUnitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsStorageCapacityUnits();
     * 
     *         ctx.export(&#34;ecsStorageCapacityUnitId1&#34;, ids.applyValue(getEcsStorageCapacityUnitsResult -&gt; getEcsStorageCapacityUnitsResult.units()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.builder()
     *             .nameRegex(&#34;^my-StorageCapacityUnit&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsStorageCapacityUnitId2&#34;, nameRegex.applyValue(getEcsStorageCapacityUnitsResult -&gt; getEcsStorageCapacityUnitsResult.units()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsStorageCapacityUnitsResult> getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs args) {
        return getEcsStorageCapacityUnits(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Storage Capacity Units of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.155.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsStorageCapacityUnitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsStorageCapacityUnits();
     * 
     *         ctx.export(&#34;ecsStorageCapacityUnitId1&#34;, ids.applyValue(getEcsStorageCapacityUnitsResult -&gt; getEcsStorageCapacityUnitsResult.units()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.builder()
     *             .nameRegex(&#34;^my-StorageCapacityUnit&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsStorageCapacityUnitId2&#34;, nameRegex.applyValue(getEcsStorageCapacityUnitsResult -&gt; getEcsStorageCapacityUnitsResult.units()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsStorageCapacityUnitsResult> getEcsStorageCapacityUnitsPlain(GetEcsStorageCapacityUnitsPlainArgs args) {
        return getEcsStorageCapacityUnitsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Storage Capacity Units of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.155.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsStorageCapacityUnitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsStorageCapacityUnits();
     * 
     *         ctx.export(&#34;ecsStorageCapacityUnitId1&#34;, ids.applyValue(getEcsStorageCapacityUnitsResult -&gt; getEcsStorageCapacityUnitsResult.units()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.builder()
     *             .nameRegex(&#34;^my-StorageCapacityUnit&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsStorageCapacityUnitId2&#34;, nameRegex.applyValue(getEcsStorageCapacityUnitsResult -&gt; getEcsStorageCapacityUnitsResult.units()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEcsStorageCapacityUnitsResult> getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsStorageCapacityUnits:getEcsStorageCapacityUnits", TypeShape.of(GetEcsStorageCapacityUnitsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Storage Capacity Units of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.155.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsStorageCapacityUnitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsStorageCapacityUnits();
     * 
     *         ctx.export(&#34;ecsStorageCapacityUnitId1&#34;, ids.applyValue(getEcsStorageCapacityUnitsResult -&gt; getEcsStorageCapacityUnitsResult.units()[0].id()));
     *         final var nameRegex = EcsFunctions.getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.builder()
     *             .nameRegex(&#34;^my-StorageCapacityUnit&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;ecsStorageCapacityUnitId2&#34;, nameRegex.applyValue(getEcsStorageCapacityUnitsResult -&gt; getEcsStorageCapacityUnitsResult.units()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEcsStorageCapacityUnitsResult> getEcsStorageCapacityUnitsPlain(GetEcsStorageCapacityUnitsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsStorageCapacityUnits:getEcsStorageCapacityUnits", TypeShape.of(GetEcsStorageCapacityUnitsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Eip Addresses of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.126.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipAddressesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEipAddresses(GetEipAddressesArgs.builder()
     *             .ids(&#34;eip-bp1jvx5ki6c********&#34;)
     *             .nameRegex(&#34;the_resource_name&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEipAddressId&#34;, example.applyValue(getEipAddressesResult -&gt; getEipAddressesResult.addresses()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEipAddressesResult> getEipAddresses() {
        return getEipAddresses(GetEipAddressesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Eip Addresses of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.126.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipAddressesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEipAddresses(GetEipAddressesArgs.builder()
     *             .ids(&#34;eip-bp1jvx5ki6c********&#34;)
     *             .nameRegex(&#34;the_resource_name&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEipAddressId&#34;, example.applyValue(getEipAddressesResult -&gt; getEipAddressesResult.addresses()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEipAddressesResult> getEipAddressesPlain() {
        return getEipAddressesPlain(GetEipAddressesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Eip Addresses of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.126.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipAddressesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEipAddresses(GetEipAddressesArgs.builder()
     *             .ids(&#34;eip-bp1jvx5ki6c********&#34;)
     *             .nameRegex(&#34;the_resource_name&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEipAddressId&#34;, example.applyValue(getEipAddressesResult -&gt; getEipAddressesResult.addresses()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEipAddressesResult> getEipAddresses(GetEipAddressesArgs args) {
        return getEipAddresses(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Eip Addresses of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.126.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipAddressesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEipAddresses(GetEipAddressesArgs.builder()
     *             .ids(&#34;eip-bp1jvx5ki6c********&#34;)
     *             .nameRegex(&#34;the_resource_name&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEipAddressId&#34;, example.applyValue(getEipAddressesResult -&gt; getEipAddressesResult.addresses()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEipAddressesResult> getEipAddressesPlain(GetEipAddressesPlainArgs args) {
        return getEipAddressesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Eip Addresses of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.126.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipAddressesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEipAddresses(GetEipAddressesArgs.builder()
     *             .ids(&#34;eip-bp1jvx5ki6c********&#34;)
     *             .nameRegex(&#34;the_resource_name&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEipAddressId&#34;, example.applyValue(getEipAddressesResult -&gt; getEipAddressesResult.addresses()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEipAddressesResult> getEipAddresses(GetEipAddressesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEipAddresses:getEipAddresses", TypeShape.of(GetEipAddressesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Eip Addresses of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.126.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipAddressesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEipAddresses(GetEipAddressesArgs.builder()
     *             .ids(&#34;eip-bp1jvx5ki6c********&#34;)
     *             .nameRegex(&#34;the_resource_name&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEipAddressId&#34;, example.applyValue(getEipAddressesResult -&gt; getEipAddressesResult.addresses()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEipAddressesResult> getEipAddressesPlain(GetEipAddressesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEipAddresses:getEipAddresses", TypeShape.of(GetEipAddressesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:**  This datasource has been deprecated from version `1.126.0`. Please use new datasource alicloud_eip_addresses.
     * 
     * This data source provides a list of EIPs (Elastic IP address) owned by an Alibaba Cloud account.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var eipsDs = EcsFunctions.getEips();
     * 
     *         ctx.export(&#34;firstEipId&#34;, eipsDs.applyValue(getEipsResult -&gt; getEipsResult.eips()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * @deprecated
     * This function has been deprecated in favour of the getEipAddresses function
     * 
     */
    @Deprecated /* This function has been deprecated in favour of the getEipAddresses function */
    public static Output<GetEipsResult> getEips() {
        return getEips(GetEipsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:**  This datasource has been deprecated from version `1.126.0`. Please use new datasource alicloud_eip_addresses.
     * 
     * This data source provides a list of EIPs (Elastic IP address) owned by an Alibaba Cloud account.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var eipsDs = EcsFunctions.getEips();
     * 
     *         ctx.export(&#34;firstEipId&#34;, eipsDs.applyValue(getEipsResult -&gt; getEipsResult.eips()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * @deprecated
     * This function has been deprecated in favour of the getEipAddresses function
     * 
     */
    @Deprecated /* This function has been deprecated in favour of the getEipAddresses function */
    public static CompletableFuture<GetEipsResult> getEipsPlain() {
        return getEipsPlain(GetEipsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:**  This datasource has been deprecated from version `1.126.0`. Please use new datasource alicloud_eip_addresses.
     * 
     * This data source provides a list of EIPs (Elastic IP address) owned by an Alibaba Cloud account.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var eipsDs = EcsFunctions.getEips();
     * 
     *         ctx.export(&#34;firstEipId&#34;, eipsDs.applyValue(getEipsResult -&gt; getEipsResult.eips()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * @deprecated
     * This function has been deprecated in favour of the getEipAddresses function
     * 
     */
    @Deprecated /* This function has been deprecated in favour of the getEipAddresses function */
    public static Output<GetEipsResult> getEips(GetEipsArgs args) {
        return getEips(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:**  This datasource has been deprecated from version `1.126.0`. Please use new datasource alicloud_eip_addresses.
     * 
     * This data source provides a list of EIPs (Elastic IP address) owned by an Alibaba Cloud account.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var eipsDs = EcsFunctions.getEips();
     * 
     *         ctx.export(&#34;firstEipId&#34;, eipsDs.applyValue(getEipsResult -&gt; getEipsResult.eips()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * @deprecated
     * This function has been deprecated in favour of the getEipAddresses function
     * 
     */
    @Deprecated /* This function has been deprecated in favour of the getEipAddresses function */
    public static CompletableFuture<GetEipsResult> getEipsPlain(GetEipsPlainArgs args) {
        return getEipsPlain(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:**  This datasource has been deprecated from version `1.126.0`. Please use new datasource alicloud_eip_addresses.
     * 
     * This data source provides a list of EIPs (Elastic IP address) owned by an Alibaba Cloud account.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var eipsDs = EcsFunctions.getEips();
     * 
     *         ctx.export(&#34;firstEipId&#34;, eipsDs.applyValue(getEipsResult -&gt; getEipsResult.eips()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * @deprecated
     * This function has been deprecated in favour of the getEipAddresses function
     * 
     */
    @Deprecated /* This function has been deprecated in favour of the getEipAddresses function */
    public static Output<GetEipsResult> getEips(GetEipsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEips:getEips", TypeShape.of(GetEipsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:**  This datasource has been deprecated from version `1.126.0`. Please use new datasource alicloud_eip_addresses.
     * 
     * This data source provides a list of EIPs (Elastic IP address) owned by an Alibaba Cloud account.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var eipsDs = EcsFunctions.getEips();
     * 
     *         ctx.export(&#34;firstEipId&#34;, eipsDs.applyValue(getEipsResult -&gt; getEipsResult.eips()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * @deprecated
     * This function has been deprecated in favour of the getEipAddresses function
     * 
     */
    @Deprecated /* This function has been deprecated in favour of the getEipAddresses function */
    public static CompletableFuture<GetEipsResult> getEipsPlain(GetEipsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEips:getEips", TypeShape.of(GetEipsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides Ecs Elasticity Assurance available to the user.
     * 
     * &gt; **NOTE:** Available in 1.196.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetElasticityAssurancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getElasticityAssurances(GetElasticityAssurancesArgs.builder()
     *             .ids(alicloud_ecs_elasticity_assurance.default().id())
     *             .build());
     * 
     *         ctx.export(&#34;alicloudEcsElasticityAssuranceExampleId&#34;, default_.assurances()[0].id());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetElasticityAssurancesResult> getElasticityAssurances() {
        return getElasticityAssurances(GetElasticityAssurancesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides Ecs Elasticity Assurance available to the user.
     * 
     * &gt; **NOTE:** Available in 1.196.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetElasticityAssurancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getElasticityAssurances(GetElasticityAssurancesArgs.builder()
     *             .ids(alicloud_ecs_elasticity_assurance.default().id())
     *             .build());
     * 
     *         ctx.export(&#34;alicloudEcsElasticityAssuranceExampleId&#34;, default_.assurances()[0].id());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetElasticityAssurancesResult> getElasticityAssurancesPlain() {
        return getElasticityAssurancesPlain(GetElasticityAssurancesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides Ecs Elasticity Assurance available to the user.
     * 
     * &gt; **NOTE:** Available in 1.196.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetElasticityAssurancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getElasticityAssurances(GetElasticityAssurancesArgs.builder()
     *             .ids(alicloud_ecs_elasticity_assurance.default().id())
     *             .build());
     * 
     *         ctx.export(&#34;alicloudEcsElasticityAssuranceExampleId&#34;, default_.assurances()[0].id());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetElasticityAssurancesResult> getElasticityAssurances(GetElasticityAssurancesArgs args) {
        return getElasticityAssurances(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides Ecs Elasticity Assurance available to the user.
     * 
     * &gt; **NOTE:** Available in 1.196.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetElasticityAssurancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getElasticityAssurances(GetElasticityAssurancesArgs.builder()
     *             .ids(alicloud_ecs_elasticity_assurance.default().id())
     *             .build());
     * 
     *         ctx.export(&#34;alicloudEcsElasticityAssuranceExampleId&#34;, default_.assurances()[0].id());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetElasticityAssurancesResult> getElasticityAssurancesPlain(GetElasticityAssurancesPlainArgs args) {
        return getElasticityAssurancesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides Ecs Elasticity Assurance available to the user.
     * 
     * &gt; **NOTE:** Available in 1.196.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetElasticityAssurancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getElasticityAssurances(GetElasticityAssurancesArgs.builder()
     *             .ids(alicloud_ecs_elasticity_assurance.default().id())
     *             .build());
     * 
     *         ctx.export(&#34;alicloudEcsElasticityAssuranceExampleId&#34;, default_.assurances()[0].id());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetElasticityAssurancesResult> getElasticityAssurances(GetElasticityAssurancesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getElasticityAssurances:getElasticityAssurances", TypeShape.of(GetElasticityAssurancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides Ecs Elasticity Assurance available to the user.
     * 
     * &gt; **NOTE:** Available in 1.196.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetElasticityAssurancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getElasticityAssurances(GetElasticityAssurancesArgs.builder()
     *             .ids(alicloud_ecs_elasticity_assurance.default().id())
     *             .build());
     * 
     *         ctx.export(&#34;alicloudEcsElasticityAssuranceExampleId&#34;, default_.assurances()[0].id());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetElasticityAssurancesResult> getElasticityAssurancesPlain(GetElasticityAssurancesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getElasticityAssurances:getElasticityAssurances", TypeShape.of(GetElasticityAssurancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Hpc Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetHpcClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getHpcClusters(GetHpcClustersArgs.builder()
     *             .ids(&#34;hpc-bp1i09xxxxxxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsHpcClusterId&#34;, example.applyValue(getHpcClustersResult -&gt; getHpcClustersResult.clusters()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHpcClustersResult> getHpcClusters() {
        return getHpcClusters(GetHpcClustersArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Hpc Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetHpcClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getHpcClusters(GetHpcClustersArgs.builder()
     *             .ids(&#34;hpc-bp1i09xxxxxxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsHpcClusterId&#34;, example.applyValue(getHpcClustersResult -&gt; getHpcClustersResult.clusters()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHpcClustersResult> getHpcClustersPlain() {
        return getHpcClustersPlain(GetHpcClustersPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Hpc Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetHpcClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getHpcClusters(GetHpcClustersArgs.builder()
     *             .ids(&#34;hpc-bp1i09xxxxxxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsHpcClusterId&#34;, example.applyValue(getHpcClustersResult -&gt; getHpcClustersResult.clusters()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHpcClustersResult> getHpcClusters(GetHpcClustersArgs args) {
        return getHpcClusters(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Hpc Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetHpcClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getHpcClusters(GetHpcClustersArgs.builder()
     *             .ids(&#34;hpc-bp1i09xxxxxxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsHpcClusterId&#34;, example.applyValue(getHpcClustersResult -&gt; getHpcClustersResult.clusters()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHpcClustersResult> getHpcClustersPlain(GetHpcClustersPlainArgs args) {
        return getHpcClustersPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Hpc Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetHpcClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getHpcClusters(GetHpcClustersArgs.builder()
     *             .ids(&#34;hpc-bp1i09xxxxxxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsHpcClusterId&#34;, example.applyValue(getHpcClustersResult -&gt; getHpcClustersResult.clusters()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetHpcClustersResult> getHpcClusters(GetHpcClustersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getHpcClusters:getHpcClusters", TypeShape.of(GetHpcClustersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Hpc Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetHpcClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getHpcClusters(GetHpcClustersArgs.builder()
     *             .ids(&#34;hpc-bp1i09xxxxxxxx&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstEcsHpcClusterId&#34;, example.applyValue(getHpcClustersResult -&gt; getHpcClustersResult.clusters()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetHpcClustersResult> getHpcClustersPlain(GetHpcClustersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getHpcClusters:getHpcClusters", TypeShape.of(GetHpcClustersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available image resources. It contains user&#39;s private images, system images provided by Alibaba Cloud,
     * other public images and the ones available on the image market.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var imagesDs = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex(&#34;^centos_6&#34;)
     *             .owners(&#34;system&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstImageId&#34;, imagesDs.applyValue(getImagesResult -&gt; getImagesResult.images()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetImagesResult> getImages() {
        return getImages(GetImagesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides available image resources. It contains user&#39;s private images, system images provided by Alibaba Cloud,
     * other public images and the ones available on the image market.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var imagesDs = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex(&#34;^centos_6&#34;)
     *             .owners(&#34;system&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstImageId&#34;, imagesDs.applyValue(getImagesResult -&gt; getImagesResult.images()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetImagesResult> getImagesPlain() {
        return getImagesPlain(GetImagesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides available image resources. It contains user&#39;s private images, system images provided by Alibaba Cloud,
     * other public images and the ones available on the image market.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var imagesDs = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex(&#34;^centos_6&#34;)
     *             .owners(&#34;system&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstImageId&#34;, imagesDs.applyValue(getImagesResult -&gt; getImagesResult.images()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetImagesResult> getImages(GetImagesArgs args) {
        return getImages(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides available image resources. It contains user&#39;s private images, system images provided by Alibaba Cloud,
     * other public images and the ones available on the image market.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var imagesDs = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex(&#34;^centos_6&#34;)
     *             .owners(&#34;system&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstImageId&#34;, imagesDs.applyValue(getImagesResult -&gt; getImagesResult.images()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetImagesResult> getImagesPlain(GetImagesPlainArgs args) {
        return getImagesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides available image resources. It contains user&#39;s private images, system images provided by Alibaba Cloud,
     * other public images and the ones available on the image market.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var imagesDs = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex(&#34;^centos_6&#34;)
     *             .owners(&#34;system&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstImageId&#34;, imagesDs.applyValue(getImagesResult -&gt; getImagesResult.images()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetImagesResult> getImages(GetImagesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getImages:getImages", TypeShape.of(GetImagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available image resources. It contains user&#39;s private images, system images provided by Alibaba Cloud,
     * other public images and the ones available on the image market.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var imagesDs = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex(&#34;^centos_6&#34;)
     *             .owners(&#34;system&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstImageId&#34;, imagesDs.applyValue(getImagesResult -&gt; getImagesResult.images()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetImagesResult> getImagesPlain(GetImagesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getImages:getImages", TypeShape.of(GetImagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Operation to query the reserved keywords of an ApsaraDB RDS instance. The reserved keywords cannot be used for the usernames of accounts or the names of databases.
     * 
     * &gt; **NOTE:** Available in v1.196.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceKeywordsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var resources = EcsFunctions.getInstanceKeywords(GetInstanceKeywordsArgs.builder()
     *             .key(&#34;account&#34;)
     *             .outputFile(&#34;./classes.txt&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;accountKeywords&#34;, resources.applyValue(getInstanceKeywordsResult -&gt; getInstanceKeywordsResult.keywords()[0]));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceKeywordsResult> getInstanceKeywords(GetInstanceKeywordsArgs args) {
        return getInstanceKeywords(args, InvokeOptions.Empty);
    }
    /**
     * Operation to query the reserved keywords of an ApsaraDB RDS instance. The reserved keywords cannot be used for the usernames of accounts or the names of databases.
     * 
     * &gt; **NOTE:** Available in v1.196.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceKeywordsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var resources = EcsFunctions.getInstanceKeywords(GetInstanceKeywordsArgs.builder()
     *             .key(&#34;account&#34;)
     *             .outputFile(&#34;./classes.txt&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;accountKeywords&#34;, resources.applyValue(getInstanceKeywordsResult -&gt; getInstanceKeywordsResult.keywords()[0]));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceKeywordsResult> getInstanceKeywordsPlain(GetInstanceKeywordsPlainArgs args) {
        return getInstanceKeywordsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Operation to query the reserved keywords of an ApsaraDB RDS instance. The reserved keywords cannot be used for the usernames of accounts or the names of databases.
     * 
     * &gt; **NOTE:** Available in v1.196.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceKeywordsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var resources = EcsFunctions.getInstanceKeywords(GetInstanceKeywordsArgs.builder()
     *             .key(&#34;account&#34;)
     *             .outputFile(&#34;./classes.txt&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;accountKeywords&#34;, resources.applyValue(getInstanceKeywordsResult -&gt; getInstanceKeywordsResult.keywords()[0]));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceKeywordsResult> getInstanceKeywords(GetInstanceKeywordsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getInstanceKeywords:getInstanceKeywords", TypeShape.of(GetInstanceKeywordsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Operation to query the reserved keywords of an ApsaraDB RDS instance. The reserved keywords cannot be used for the usernames of accounts or the names of databases.
     * 
     * &gt; **NOTE:** Available in v1.196.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceKeywordsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var resources = EcsFunctions.getInstanceKeywords(GetInstanceKeywordsArgs.builder()
     *             .key(&#34;account&#34;)
     *             .outputFile(&#34;./classes.txt&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;accountKeywords&#34;, resources.applyValue(getInstanceKeywordsResult -&gt; getInstanceKeywordsResult.keywords()[0]));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceKeywordsResult> getInstanceKeywordsPlain(GetInstanceKeywordsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getInstanceKeywords:getInstanceKeywords", TypeShape.of(GetInstanceKeywordsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ECS instance type families of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available in 1.54.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypeFamiliesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getInstanceTypeFamilies(GetInstanceTypeFamiliesArgs.builder()
     *             .instanceChargeType(&#34;PrePaid&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstInstanceTypeFamilyId&#34;, default_.families()[0].id());
     *         ctx.export(&#34;instanceIds&#34;, default_.ids());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceTypeFamiliesResult> getInstanceTypeFamilies() {
        return getInstanceTypeFamilies(GetInstanceTypeFamiliesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ECS instance type families of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available in 1.54.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypeFamiliesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getInstanceTypeFamilies(GetInstanceTypeFamiliesArgs.builder()
     *             .instanceChargeType(&#34;PrePaid&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstInstanceTypeFamilyId&#34;, default_.families()[0].id());
     *         ctx.export(&#34;instanceIds&#34;, default_.ids());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceTypeFamiliesResult> getInstanceTypeFamiliesPlain() {
        return getInstanceTypeFamiliesPlain(GetInstanceTypeFamiliesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ECS instance type families of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available in 1.54.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypeFamiliesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getInstanceTypeFamilies(GetInstanceTypeFamiliesArgs.builder()
     *             .instanceChargeType(&#34;PrePaid&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstInstanceTypeFamilyId&#34;, default_.families()[0].id());
     *         ctx.export(&#34;instanceIds&#34;, default_.ids());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceTypeFamiliesResult> getInstanceTypeFamilies(GetInstanceTypeFamiliesArgs args) {
        return getInstanceTypeFamilies(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ECS instance type families of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available in 1.54.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypeFamiliesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getInstanceTypeFamilies(GetInstanceTypeFamiliesArgs.builder()
     *             .instanceChargeType(&#34;PrePaid&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstInstanceTypeFamilyId&#34;, default_.families()[0].id());
     *         ctx.export(&#34;instanceIds&#34;, default_.ids());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceTypeFamiliesResult> getInstanceTypeFamiliesPlain(GetInstanceTypeFamiliesPlainArgs args) {
        return getInstanceTypeFamiliesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ECS instance type families of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available in 1.54.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypeFamiliesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getInstanceTypeFamilies(GetInstanceTypeFamiliesArgs.builder()
     *             .instanceChargeType(&#34;PrePaid&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstInstanceTypeFamilyId&#34;, default_.families()[0].id());
     *         ctx.export(&#34;instanceIds&#34;, default_.ids());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceTypeFamiliesResult> getInstanceTypeFamilies(GetInstanceTypeFamiliesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getInstanceTypeFamilies:getInstanceTypeFamilies", TypeShape.of(GetInstanceTypeFamiliesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ECS instance type families of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available in 1.54.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypeFamiliesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getInstanceTypeFamilies(GetInstanceTypeFamiliesArgs.builder()
     *             .instanceChargeType(&#34;PrePaid&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstInstanceTypeFamilyId&#34;, default_.families()[0].id());
     *         ctx.export(&#34;instanceIds&#34;, default_.ids());
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceTypeFamiliesResult> getInstanceTypeFamiliesPlain(GetInstanceTypeFamiliesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getInstanceTypeFamilies:getInstanceTypeFamilies", TypeShape.of(GetInstanceTypeFamiliesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ECS instance types of Alibaba Cloud.
     * 
     * &gt; **NOTE:** By default, only the upgraded instance types are returned. If you want to get outdated instance types, you must set `is_outdated` to true.
     * 
     * &gt; **NOTE:** If one instance type is sold out, it will not be exported.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var typesDs = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .cpuCoreCount(1)
     *             .memorySize(2)
     *             .build());
     * 
     *         var instance = new Instance(&#34;instance&#34;, InstanceArgs.builder()        
     *             .instanceType(typesDs.applyValue(getInstanceTypesResult -&gt; getInstanceTypesResult.instanceTypes()[0].id()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceTypesResult> getInstanceTypes() {
        return getInstanceTypes(GetInstanceTypesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ECS instance types of Alibaba Cloud.
     * 
     * &gt; **NOTE:** By default, only the upgraded instance types are returned. If you want to get outdated instance types, you must set `is_outdated` to true.
     * 
     * &gt; **NOTE:** If one instance type is sold out, it will not be exported.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var typesDs = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .cpuCoreCount(1)
     *             .memorySize(2)
     *             .build());
     * 
     *         var instance = new Instance(&#34;instance&#34;, InstanceArgs.builder()        
     *             .instanceType(typesDs.applyValue(getInstanceTypesResult -&gt; getInstanceTypesResult.instanceTypes()[0].id()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceTypesResult> getInstanceTypesPlain() {
        return getInstanceTypesPlain(GetInstanceTypesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ECS instance types of Alibaba Cloud.
     * 
     * &gt; **NOTE:** By default, only the upgraded instance types are returned. If you want to get outdated instance types, you must set `is_outdated` to true.
     * 
     * &gt; **NOTE:** If one instance type is sold out, it will not be exported.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var typesDs = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .cpuCoreCount(1)
     *             .memorySize(2)
     *             .build());
     * 
     *         var instance = new Instance(&#34;instance&#34;, InstanceArgs.builder()        
     *             .instanceType(typesDs.applyValue(getInstanceTypesResult -&gt; getInstanceTypesResult.instanceTypes()[0].id()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceTypesResult> getInstanceTypes(GetInstanceTypesArgs args) {
        return getInstanceTypes(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ECS instance types of Alibaba Cloud.
     * 
     * &gt; **NOTE:** By default, only the upgraded instance types are returned. If you want to get outdated instance types, you must set `is_outdated` to true.
     * 
     * &gt; **NOTE:** If one instance type is sold out, it will not be exported.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var typesDs = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .cpuCoreCount(1)
     *             .memorySize(2)
     *             .build());
     * 
     *         var instance = new Instance(&#34;instance&#34;, InstanceArgs.builder()        
     *             .instanceType(typesDs.applyValue(getInstanceTypesResult -&gt; getInstanceTypesResult.instanceTypes()[0].id()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceTypesResult> getInstanceTypesPlain(GetInstanceTypesPlainArgs args) {
        return getInstanceTypesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ECS instance types of Alibaba Cloud.
     * 
     * &gt; **NOTE:** By default, only the upgraded instance types are returned. If you want to get outdated instance types, you must set `is_outdated` to true.
     * 
     * &gt; **NOTE:** If one instance type is sold out, it will not be exported.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var typesDs = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .cpuCoreCount(1)
     *             .memorySize(2)
     *             .build());
     * 
     *         var instance = new Instance(&#34;instance&#34;, InstanceArgs.builder()        
     *             .instanceType(typesDs.applyValue(getInstanceTypesResult -&gt; getInstanceTypesResult.instanceTypes()[0].id()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceTypesResult> getInstanceTypes(GetInstanceTypesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getInstanceTypes:getInstanceTypes", TypeShape.of(GetInstanceTypesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ECS instance types of Alibaba Cloud.
     * 
     * &gt; **NOTE:** By default, only the upgraded instance types are returned. If you want to get outdated instance types, you must set `is_outdated` to true.
     * 
     * &gt; **NOTE:** If one instance type is sold out, it will not be exported.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var typesDs = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .cpuCoreCount(1)
     *             .memorySize(2)
     *             .build());
     * 
     *         var instance = new Instance(&#34;instance&#34;, InstanceArgs.builder()        
     *             .instanceType(typesDs.applyValue(getInstanceTypesResult -&gt; getInstanceTypesResult.instanceTypes()[0].id()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceTypesResult> getInstanceTypesPlain(GetInstanceTypesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getInstanceTypes:getInstanceTypes", TypeShape.of(GetInstanceTypesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Instances data source list ECS instance resources according to their ID, name regex, image id, status and other fields.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var instancesDs = EcsFunctions.getInstances(GetInstancesArgs.builder()
     *             .nameRegex(&#34;web_server&#34;)
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstInstanceId&#34;, instancesDs.applyValue(getInstancesResult -&gt; getInstancesResult.instances()[0].id()));
     *         ctx.export(&#34;instanceIds&#34;, instancesDs.applyValue(getInstancesResult -&gt; getInstancesResult.ids()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstancesResult> getInstances() {
        return getInstances(GetInstancesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The Instances data source list ECS instance resources according to their ID, name regex, image id, status and other fields.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var instancesDs = EcsFunctions.getInstances(GetInstancesArgs.builder()
     *             .nameRegex(&#34;web_server&#34;)
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstInstanceId&#34;, instancesDs.applyValue(getInstancesResult -&gt; getInstancesResult.instances()[0].id()));
     *         ctx.export(&#34;instanceIds&#34;, instancesDs.applyValue(getInstancesResult -&gt; getInstancesResult.ids()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstancesResult> getInstancesPlain() {
        return getInstancesPlain(GetInstancesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The Instances data source list ECS instance resources according to their ID, name regex, image id, status and other fields.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var instancesDs = EcsFunctions.getInstances(GetInstancesArgs.builder()
     *             .nameRegex(&#34;web_server&#34;)
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstInstanceId&#34;, instancesDs.applyValue(getInstancesResult -&gt; getInstancesResult.instances()[0].id()));
     *         ctx.export(&#34;instanceIds&#34;, instancesDs.applyValue(getInstancesResult -&gt; getInstancesResult.ids()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstancesResult> getInstances(GetInstancesArgs args) {
        return getInstances(args, InvokeOptions.Empty);
    }
    /**
     * The Instances data source list ECS instance resources according to their ID, name regex, image id, status and other fields.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var instancesDs = EcsFunctions.getInstances(GetInstancesArgs.builder()
     *             .nameRegex(&#34;web_server&#34;)
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstInstanceId&#34;, instancesDs.applyValue(getInstancesResult -&gt; getInstancesResult.instances()[0].id()));
     *         ctx.export(&#34;instanceIds&#34;, instancesDs.applyValue(getInstancesResult -&gt; getInstancesResult.ids()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstancesResult> getInstancesPlain(GetInstancesPlainArgs args) {
        return getInstancesPlain(args, InvokeOptions.Empty);
    }
    /**
     * The Instances data source list ECS instance resources according to their ID, name regex, image id, status and other fields.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var instancesDs = EcsFunctions.getInstances(GetInstancesArgs.builder()
     *             .nameRegex(&#34;web_server&#34;)
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstInstanceId&#34;, instancesDs.applyValue(getInstancesResult -&gt; getInstancesResult.instances()[0].id()));
     *         ctx.export(&#34;instanceIds&#34;, instancesDs.applyValue(getInstancesResult -&gt; getInstancesResult.ids()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstancesResult> getInstances(GetInstancesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getInstances:getInstances", TypeShape.of(GetInstancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Instances data source list ECS instance resources according to their ID, name regex, image id, status and other fields.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var instancesDs = EcsFunctions.getInstances(GetInstancesArgs.builder()
     *             .nameRegex(&#34;web_server&#34;)
     *             .status(&#34;Running&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstInstanceId&#34;, instancesDs.applyValue(getInstancesResult -&gt; getInstancesResult.instances()[0].id()));
     *         ctx.export(&#34;instanceIds&#34;, instancesDs.applyValue(getInstancesResult -&gt; getInstancesResult.ids()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstancesResult> getInstancesPlain(GetInstancesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getInstances:getInstances", TypeShape.of(GetInstancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsKeyPairs from version 1.121.0.
     * 
     * This data source provides a list of key pairs in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         var defaultKeyPair = new KeyPair(&#34;defaultKeyPair&#34;, KeyPairArgs.builder()        
     *             .keyName(&#34;keyPairDatasource&#34;)
     *             .build());
     * 
     *         final var defaultKeyPairs = EcsFunctions.getKeyPairs(GetKeyPairsArgs.builder()
     *             .nameRegex(defaultKeyPair.keyName())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeyPairsResult> getKeyPairs() {
        return getKeyPairs(GetKeyPairsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsKeyPairs from version 1.121.0.
     * 
     * This data source provides a list of key pairs in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         var defaultKeyPair = new KeyPair(&#34;defaultKeyPair&#34;, KeyPairArgs.builder()        
     *             .keyName(&#34;keyPairDatasource&#34;)
     *             .build());
     * 
     *         final var defaultKeyPairs = EcsFunctions.getKeyPairs(GetKeyPairsArgs.builder()
     *             .nameRegex(defaultKeyPair.keyName())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKeyPairsResult> getKeyPairsPlain() {
        return getKeyPairsPlain(GetKeyPairsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsKeyPairs from version 1.121.0.
     * 
     * This data source provides a list of key pairs in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         var defaultKeyPair = new KeyPair(&#34;defaultKeyPair&#34;, KeyPairArgs.builder()        
     *             .keyName(&#34;keyPairDatasource&#34;)
     *             .build());
     * 
     *         final var defaultKeyPairs = EcsFunctions.getKeyPairs(GetKeyPairsArgs.builder()
     *             .nameRegex(defaultKeyPair.keyName())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeyPairsResult> getKeyPairs(GetKeyPairsArgs args) {
        return getKeyPairs(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsKeyPairs from version 1.121.0.
     * 
     * This data source provides a list of key pairs in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         var defaultKeyPair = new KeyPair(&#34;defaultKeyPair&#34;, KeyPairArgs.builder()        
     *             .keyName(&#34;keyPairDatasource&#34;)
     *             .build());
     * 
     *         final var defaultKeyPairs = EcsFunctions.getKeyPairs(GetKeyPairsArgs.builder()
     *             .nameRegex(defaultKeyPair.keyName())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKeyPairsResult> getKeyPairsPlain(GetKeyPairsPlainArgs args) {
        return getKeyPairsPlain(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsKeyPairs from version 1.121.0.
     * 
     * This data source provides a list of key pairs in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         var defaultKeyPair = new KeyPair(&#34;defaultKeyPair&#34;, KeyPairArgs.builder()        
     *             .keyName(&#34;keyPairDatasource&#34;)
     *             .build());
     * 
     *         final var defaultKeyPairs = EcsFunctions.getKeyPairs(GetKeyPairsArgs.builder()
     *             .nameRegex(defaultKeyPair.keyName())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeyPairsResult> getKeyPairs(GetKeyPairsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getKeyPairs:getKeyPairs", TypeShape.of(GetKeyPairsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsKeyPairs from version 1.121.0.
     * 
     * This data source provides a list of key pairs in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         var defaultKeyPair = new KeyPair(&#34;defaultKeyPair&#34;, KeyPairArgs.builder()        
     *             .keyName(&#34;keyPairDatasource&#34;)
     *             .build());
     * 
     *         final var defaultKeyPairs = EcsFunctions.getKeyPairs(GetKeyPairsArgs.builder()
     *             .nameRegex(defaultKeyPair.keyName())
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKeyPairsResult> getKeyPairsPlain(GetKeyPairsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getKeyPairs:getKeyPairs", TypeShape.of(GetKeyPairsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsNetworkInterfaces from version 1.123.1.
     * 
     * Use this data source to get a list of elastic network interfaces according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about elastic network interface and how to use it, see [Elastic Network Interface](https://www.alibabacloud.com/help/doc-detail/58496.html)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterface;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachment;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachmentArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get(&#34;name&#34;).orElse(&#34;networkInterfacesName&#34;);
     *         var vpc = new Network(&#34;vpc&#34;, NetworkArgs.builder()        
     *             .cidrBlock(&#34;192.168.0.0/24&#34;)
     *             .vpcName(name)
     *             .build());
     * 
     *         final var defaultZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation(&#34;VSwitch&#34;)
     *             .build());
     * 
     *         var vswitch = new Switch(&#34;vswitch&#34;, SwitchArgs.builder()        
     *             .availabilityZone(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
     *             .cidrBlock(&#34;192.168.0.0/24&#34;)
     *             .vpcId(vpc.id())
     *             .vswitchName(name)
     *             .build());
     * 
     *         var group = new SecurityGroup(&#34;group&#34;, SecurityGroupArgs.builder()        
     *             .vpcId(vpc.id())
     *             .build());
     * 
     *         var interface_ = new NetworkInterface(&#34;interface&#34;, NetworkInterfaceArgs.builder()        
     *             .description(&#34;Basic test&#34;)
     *             .privateIp(&#34;192.168.0.2&#34;)
     *             .securityGroups(group.id())
     *             .tags(Map.of(&#34;TF-VER&#34;, &#34;0.11.3&#34;))
     *             .vswitchId(vswitch.id())
     *             .build());
     * 
     *         var instance = new Instance(&#34;instance&#34;, InstanceArgs.builder()        
     *             .availabilityZone(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
     *             .imageId(&#34;centos_7_04_64_20G_alibase_201701015.vhd&#34;)
     *             .instanceName(name)
     *             .instanceType(&#34;ecs.e3.xlarge&#34;)
     *             .internetMaxBandwidthOut(10)
     *             .securityGroups(group.id())
     *             .systemDiskCategory(&#34;cloud_efficiency&#34;)
     *             .vswitchId(vswitch.id())
     *             .build());
     * 
     *         var attachment = new NetworkInterfaceAttachment(&#34;attachment&#34;, NetworkInterfaceAttachmentArgs.builder()        
     *             .instanceId(instance.id())
     *             .networkInterfaceId(interface_.id())
     *             .build());
     * 
     *         final var defaultNetworkInterfaces = EcsFunctions.getNetworkInterfaces(GetNetworkInterfacesArgs.builder()
     *             .ids(attachment.networkInterfaceId())
     *             .instanceId(instance.id())
     *             .nameRegex(name)
     *             .privateIp(&#34;192.168.0.2&#34;)
     *             .securityGroupId(group.id())
     *             .tags(Map.of(&#34;TF-VER&#34;, &#34;0.11.3&#34;))
     *             .type(&#34;Secondary&#34;)
     *             .vpcId(vpc.id())
     *             .vswitchId(vswitch.id())
     *             .build());
     * 
     *         ctx.export(&#34;eni0Name&#34;, defaultNetworkInterfaces.applyValue(getNetworkInterfacesResult -&gt; getNetworkInterfacesResult).applyValue(defaultNetworkInterfaces -&gt; defaultNetworkInterfaces.applyValue(getNetworkInterfacesResult -&gt; getNetworkInterfacesResult.interfaces()[0].name())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `ids` - (Optional)  A list of ENI IDs.
     * * `name_regex` - (Optional) A regex string to filter results by ENI name.
     * * `vpc_id` - (Optional) The VPC ID linked to ENIs.
     * * `vswitch_id` - (Optional) The VSwitch ID linked to ENIs.
     * * `private_ip` - (Optional) The primary private IP address of the ENI.
     * * `security_group_id` - (Optional) The security group ID linked to ENIs.
     * * `name` - (Optional) The name of the ENIs.
     * * `type` - (Optional) The type of ENIs, Only support for &#34;Primary&#34; or &#34;Secondary&#34;.
     * * `instance_id` - (Optional) The ECS instance ID that the ENI is attached to.
     * * `tags` - (Optional) A map of tags assigned to ENIs.
     * * `output_file` - (Optional) The name of output file that saves the filter results.
     * * `resource_group_id` - (Optional, ForceNew, Available in 1.57.0+) The Id of resource group which the network interface belongs.
     * 
     */
    public static Output<GetNetworkInterfacesResult> getNetworkInterfaces() {
        return getNetworkInterfaces(GetNetworkInterfacesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsNetworkInterfaces from version 1.123.1.
     * 
     * Use this data source to get a list of elastic network interfaces according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about elastic network interface and how to use it, see [Elastic Network Interface](https://www.alibabacloud.com/help/doc-detail/58496.html)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterface;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachment;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachmentArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get(&#34;name&#34;).orElse(&#34;networkInterfacesName&#34;);
     *         var vpc = new Network(&#34;vpc&#34;, NetworkArgs.builder()        
     *             .cidrBlock(&#34;192.168.0.0/24&#34;)
     *             .vpcName(name)
     *             .build());
     * 
     *         final var defaultZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation(&#34;VSwitch&#34;)
     *             .build());
     * 
     *         var vswitch = new Switch(&#34;vswitch&#34;, SwitchArgs.builder()        
     *             .availabilityZone(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
     *             .cidrBlock(&#34;192.168.0.0/24&#34;)
     *             .vpcId(vpc.id())
     *             .vswitchName(name)
     *             .build());
     * 
     *         var group = new SecurityGroup(&#34;group&#34;, SecurityGroupArgs.builder()        
     *             .vpcId(vpc.id())
     *             .build());
     * 
     *         var interface_ = new NetworkInterface(&#34;interface&#34;, NetworkInterfaceArgs.builder()        
     *             .description(&#34;Basic test&#34;)
     *             .privateIp(&#34;192.168.0.2&#34;)
     *             .securityGroups(group.id())
     *             .tags(Map.of(&#34;TF-VER&#34;, &#34;0.11.3&#34;))
     *             .vswitchId(vswitch.id())
     *             .build());
     * 
     *         var instance = new Instance(&#34;instance&#34;, InstanceArgs.builder()        
     *             .availabilityZone(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
     *             .imageId(&#34;centos_7_04_64_20G_alibase_201701015.vhd&#34;)
     *             .instanceName(name)
     *             .instanceType(&#34;ecs.e3.xlarge&#34;)
     *             .internetMaxBandwidthOut(10)
     *             .securityGroups(group.id())
     *             .systemDiskCategory(&#34;cloud_efficiency&#34;)
     *             .vswitchId(vswitch.id())
     *             .build());
     * 
     *         var attachment = new NetworkInterfaceAttachment(&#34;attachment&#34;, NetworkInterfaceAttachmentArgs.builder()        
     *             .instanceId(instance.id())
     *             .networkInterfaceId(interface_.id())
     *             .build());
     * 
     *         final var defaultNetworkInterfaces = EcsFunctions.getNetworkInterfaces(GetNetworkInterfacesArgs.builder()
     *             .ids(attachment.networkInterfaceId())
     *             .instanceId(instance.id())
     *             .nameRegex(name)
     *             .privateIp(&#34;192.168.0.2&#34;)
     *             .securityGroupId(group.id())
     *             .tags(Map.of(&#34;TF-VER&#34;, &#34;0.11.3&#34;))
     *             .type(&#34;Secondary&#34;)
     *             .vpcId(vpc.id())
     *             .vswitchId(vswitch.id())
     *             .build());
     * 
     *         ctx.export(&#34;eni0Name&#34;, defaultNetworkInterfaces.applyValue(getNetworkInterfacesResult -&gt; getNetworkInterfacesResult).applyValue(defaultNetworkInterfaces -&gt; defaultNetworkInterfaces.applyValue(getNetworkInterfacesResult -&gt; getNetworkInterfacesResult.interfaces()[0].name())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `ids` - (Optional)  A list of ENI IDs.
     * * `name_regex` - (Optional) A regex string to filter results by ENI name.
     * * `vpc_id` - (Optional) The VPC ID linked to ENIs.
     * * `vswitch_id` - (Optional) The VSwitch ID linked to ENIs.
     * * `private_ip` - (Optional) The primary private IP address of the ENI.
     * * `security_group_id` - (Optional) The security group ID linked to ENIs.
     * * `name` - (Optional) The name of the ENIs.
     * * `type` - (Optional) The type of ENIs, Only support for &#34;Primary&#34; or &#34;Secondary&#34;.
     * * `instance_id` - (Optional) The ECS instance ID that the ENI is attached to.
     * * `tags` - (Optional) A map of tags assigned to ENIs.
     * * `output_file` - (Optional) The name of output file that saves the filter results.
     * * `resource_group_id` - (Optional, ForceNew, Available in 1.57.0+) The Id of resource group which the network interface belongs.
     * 
     */
    public static CompletableFuture<GetNetworkInterfacesResult> getNetworkInterfacesPlain() {
        return getNetworkInterfacesPlain(GetNetworkInterfacesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsNetworkInterfaces from version 1.123.1.
     * 
     * Use this data source to get a list of elastic network interfaces according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about elastic network interface and how to use it, see [Elastic Network Interface](https://www.alibabacloud.com/help/doc-detail/58496.html)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterface;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachment;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachmentArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get(&#34;name&#34;).orElse(&#34;networkInterfacesName&#34;);
     *         var vpc = new Network(&#34;vpc&#34;, NetworkArgs.builder()        
     *             .cidrBlock(&#34;192.168.0.0/24&#34;)
     *             .vpcName(name)
     *             .build());
     * 
     *         final var defaultZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation(&#34;VSwitch&#34;)
     *             .build());
     * 
     *         var vswitch = new Switch(&#34;vswitch&#34;, SwitchArgs.builder()        
     *             .availabilityZone(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
     *             .cidrBlock(&#34;192.168.0.0/24&#34;)
     *             .vpcId(vpc.id())
     *             .vswitchName(name)
     *             .build());
     * 
     *         var group = new SecurityGroup(&#34;group&#34;, SecurityGroupArgs.builder()        
     *             .vpcId(vpc.id())
     *             .build());
     * 
     *         var interface_ = new NetworkInterface(&#34;interface&#34;, NetworkInterfaceArgs.builder()        
     *             .description(&#34;Basic test&#34;)
     *             .privateIp(&#34;192.168.0.2&#34;)
     *             .securityGroups(group.id())
     *             .tags(Map.of(&#34;TF-VER&#34;, &#34;0.11.3&#34;))
     *             .vswitchId(vswitch.id())
     *             .build());
     * 
     *         var instance = new Instance(&#34;instance&#34;, InstanceArgs.builder()        
     *             .availabilityZone(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
     *             .imageId(&#34;centos_7_04_64_20G_alibase_201701015.vhd&#34;)
     *             .instanceName(name)
     *             .instanceType(&#34;ecs.e3.xlarge&#34;)
     *             .internetMaxBandwidthOut(10)
     *             .securityGroups(group.id())
     *             .systemDiskCategory(&#34;cloud_efficiency&#34;)
     *             .vswitchId(vswitch.id())
     *             .build());
     * 
     *         var attachment = new NetworkInterfaceAttachment(&#34;attachment&#34;, NetworkInterfaceAttachmentArgs.builder()        
     *             .instanceId(instance.id())
     *             .networkInterfaceId(interface_.id())
     *             .build());
     * 
     *         final var defaultNetworkInterfaces = EcsFunctions.getNetworkInterfaces(GetNetworkInterfacesArgs.builder()
     *             .ids(attachment.networkInterfaceId())
     *             .instanceId(instance.id())
     *             .nameRegex(name)
     *             .privateIp(&#34;192.168.0.2&#34;)
     *             .securityGroupId(group.id())
     *             .tags(Map.of(&#34;TF-VER&#34;, &#34;0.11.3&#34;))
     *             .type(&#34;Secondary&#34;)
     *             .vpcId(vpc.id())
     *             .vswitchId(vswitch.id())
     *             .build());
     * 
     *         ctx.export(&#34;eni0Name&#34;, defaultNetworkInterfaces.applyValue(getNetworkInterfacesResult -&gt; getNetworkInterfacesResult).applyValue(defaultNetworkInterfaces -&gt; defaultNetworkInterfaces.applyValue(getNetworkInterfacesResult -&gt; getNetworkInterfacesResult.interfaces()[0].name())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `ids` - (Optional)  A list of ENI IDs.
     * * `name_regex` - (Optional) A regex string to filter results by ENI name.
     * * `vpc_id` - (Optional) The VPC ID linked to ENIs.
     * * `vswitch_id` - (Optional) The VSwitch ID linked to ENIs.
     * * `private_ip` - (Optional) The primary private IP address of the ENI.
     * * `security_group_id` - (Optional) The security group ID linked to ENIs.
     * * `name` - (Optional) The name of the ENIs.
     * * `type` - (Optional) The type of ENIs, Only support for &#34;Primary&#34; or &#34;Secondary&#34;.
     * * `instance_id` - (Optional) The ECS instance ID that the ENI is attached to.
     * * `tags` - (Optional) A map of tags assigned to ENIs.
     * * `output_file` - (Optional) The name of output file that saves the filter results.
     * * `resource_group_id` - (Optional, ForceNew, Available in 1.57.0+) The Id of resource group which the network interface belongs.
     * 
     */
    public static Output<GetNetworkInterfacesResult> getNetworkInterfaces(GetNetworkInterfacesArgs args) {
        return getNetworkInterfaces(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsNetworkInterfaces from version 1.123.1.
     * 
     * Use this data source to get a list of elastic network interfaces according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about elastic network interface and how to use it, see [Elastic Network Interface](https://www.alibabacloud.com/help/doc-detail/58496.html)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterface;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachment;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachmentArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get(&#34;name&#34;).orElse(&#34;networkInterfacesName&#34;);
     *         var vpc = new Network(&#34;vpc&#34;, NetworkArgs.builder()        
     *             .cidrBlock(&#34;192.168.0.0/24&#34;)
     *             .vpcName(name)
     *             .build());
     * 
     *         final var defaultZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation(&#34;VSwitch&#34;)
     *             .build());
     * 
     *         var vswitch = new Switch(&#34;vswitch&#34;, SwitchArgs.builder()        
     *             .availabilityZone(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
     *             .cidrBlock(&#34;192.168.0.0/24&#34;)
     *             .vpcId(vpc.id())
     *             .vswitchName(name)
     *             .build());
     * 
     *         var group = new SecurityGroup(&#34;group&#34;, SecurityGroupArgs.builder()        
     *             .vpcId(vpc.id())
     *             .build());
     * 
     *         var interface_ = new NetworkInterface(&#34;interface&#34;, NetworkInterfaceArgs.builder()        
     *             .description(&#34;Basic test&#34;)
     *             .privateIp(&#34;192.168.0.2&#34;)
     *             .securityGroups(group.id())
     *             .tags(Map.of(&#34;TF-VER&#34;, &#34;0.11.3&#34;))
     *             .vswitchId(vswitch.id())
     *             .build());
     * 
     *         var instance = new Instance(&#34;instance&#34;, InstanceArgs.builder()        
     *             .availabilityZone(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
     *             .imageId(&#34;centos_7_04_64_20G_alibase_201701015.vhd&#34;)
     *             .instanceName(name)
     *             .instanceType(&#34;ecs.e3.xlarge&#34;)
     *             .internetMaxBandwidthOut(10)
     *             .securityGroups(group.id())
     *             .systemDiskCategory(&#34;cloud_efficiency&#34;)
     *             .vswitchId(vswitch.id())
     *             .build());
     * 
     *         var attachment = new NetworkInterfaceAttachment(&#34;attachment&#34;, NetworkInterfaceAttachmentArgs.builder()        
     *             .instanceId(instance.id())
     *             .networkInterfaceId(interface_.id())
     *             .build());
     * 
     *         final var defaultNetworkInterfaces = EcsFunctions.getNetworkInterfaces(GetNetworkInterfacesArgs.builder()
     *             .ids(attachment.networkInterfaceId())
     *             .instanceId(instance.id())
     *             .nameRegex(name)
     *             .privateIp(&#34;192.168.0.2&#34;)
     *             .securityGroupId(group.id())
     *             .tags(Map.of(&#34;TF-VER&#34;, &#34;0.11.3&#34;))
     *             .type(&#34;Secondary&#34;)
     *             .vpcId(vpc.id())
     *             .vswitchId(vswitch.id())
     *             .build());
     * 
     *         ctx.export(&#34;eni0Name&#34;, defaultNetworkInterfaces.applyValue(getNetworkInterfacesResult -&gt; getNetworkInterfacesResult).applyValue(defaultNetworkInterfaces -&gt; defaultNetworkInterfaces.applyValue(getNetworkInterfacesResult -&gt; getNetworkInterfacesResult.interfaces()[0].name())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `ids` - (Optional)  A list of ENI IDs.
     * * `name_regex` - (Optional) A regex string to filter results by ENI name.
     * * `vpc_id` - (Optional) The VPC ID linked to ENIs.
     * * `vswitch_id` - (Optional) The VSwitch ID linked to ENIs.
     * * `private_ip` - (Optional) The primary private IP address of the ENI.
     * * `security_group_id` - (Optional) The security group ID linked to ENIs.
     * * `name` - (Optional) The name of the ENIs.
     * * `type` - (Optional) The type of ENIs, Only support for &#34;Primary&#34; or &#34;Secondary&#34;.
     * * `instance_id` - (Optional) The ECS instance ID that the ENI is attached to.
     * * `tags` - (Optional) A map of tags assigned to ENIs.
     * * `output_file` - (Optional) The name of output file that saves the filter results.
     * * `resource_group_id` - (Optional, ForceNew, Available in 1.57.0+) The Id of resource group which the network interface belongs.
     * 
     */
    public static CompletableFuture<GetNetworkInterfacesResult> getNetworkInterfacesPlain(GetNetworkInterfacesPlainArgs args) {
        return getNetworkInterfacesPlain(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsNetworkInterfaces from version 1.123.1.
     * 
     * Use this data source to get a list of elastic network interfaces according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about elastic network interface and how to use it, see [Elastic Network Interface](https://www.alibabacloud.com/help/doc-detail/58496.html)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterface;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachment;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachmentArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get(&#34;name&#34;).orElse(&#34;networkInterfacesName&#34;);
     *         var vpc = new Network(&#34;vpc&#34;, NetworkArgs.builder()        
     *             .cidrBlock(&#34;192.168.0.0/24&#34;)
     *             .vpcName(name)
     *             .build());
     * 
     *         final var defaultZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation(&#34;VSwitch&#34;)
     *             .build());
     * 
     *         var vswitch = new Switch(&#34;vswitch&#34;, SwitchArgs.builder()        
     *             .availabilityZone(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
     *             .cidrBlock(&#34;192.168.0.0/24&#34;)
     *             .vpcId(vpc.id())
     *             .vswitchName(name)
     *             .build());
     * 
     *         var group = new SecurityGroup(&#34;group&#34;, SecurityGroupArgs.builder()        
     *             .vpcId(vpc.id())
     *             .build());
     * 
     *         var interface_ = new NetworkInterface(&#34;interface&#34;, NetworkInterfaceArgs.builder()        
     *             .description(&#34;Basic test&#34;)
     *             .privateIp(&#34;192.168.0.2&#34;)
     *             .securityGroups(group.id())
     *             .tags(Map.of(&#34;TF-VER&#34;, &#34;0.11.3&#34;))
     *             .vswitchId(vswitch.id())
     *             .build());
     * 
     *         var instance = new Instance(&#34;instance&#34;, InstanceArgs.builder()        
     *             .availabilityZone(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
     *             .imageId(&#34;centos_7_04_64_20G_alibase_201701015.vhd&#34;)
     *             .instanceName(name)
     *             .instanceType(&#34;ecs.e3.xlarge&#34;)
     *             .internetMaxBandwidthOut(10)
     *             .securityGroups(group.id())
     *             .systemDiskCategory(&#34;cloud_efficiency&#34;)
     *             .vswitchId(vswitch.id())
     *             .build());
     * 
     *         var attachment = new NetworkInterfaceAttachment(&#34;attachment&#34;, NetworkInterfaceAttachmentArgs.builder()        
     *             .instanceId(instance.id())
     *             .networkInterfaceId(interface_.id())
     *             .build());
     * 
     *         final var defaultNetworkInterfaces = EcsFunctions.getNetworkInterfaces(GetNetworkInterfacesArgs.builder()
     *             .ids(attachment.networkInterfaceId())
     *             .instanceId(instance.id())
     *             .nameRegex(name)
     *             .privateIp(&#34;192.168.0.2&#34;)
     *             .securityGroupId(group.id())
     *             .tags(Map.of(&#34;TF-VER&#34;, &#34;0.11.3&#34;))
     *             .type(&#34;Secondary&#34;)
     *             .vpcId(vpc.id())
     *             .vswitchId(vswitch.id())
     *             .build());
     * 
     *         ctx.export(&#34;eni0Name&#34;, defaultNetworkInterfaces.applyValue(getNetworkInterfacesResult -&gt; getNetworkInterfacesResult).applyValue(defaultNetworkInterfaces -&gt; defaultNetworkInterfaces.applyValue(getNetworkInterfacesResult -&gt; getNetworkInterfacesResult.interfaces()[0].name())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `ids` - (Optional)  A list of ENI IDs.
     * * `name_regex` - (Optional) A regex string to filter results by ENI name.
     * * `vpc_id` - (Optional) The VPC ID linked to ENIs.
     * * `vswitch_id` - (Optional) The VSwitch ID linked to ENIs.
     * * `private_ip` - (Optional) The primary private IP address of the ENI.
     * * `security_group_id` - (Optional) The security group ID linked to ENIs.
     * * `name` - (Optional) The name of the ENIs.
     * * `type` - (Optional) The type of ENIs, Only support for &#34;Primary&#34; or &#34;Secondary&#34;.
     * * `instance_id` - (Optional) The ECS instance ID that the ENI is attached to.
     * * `tags` - (Optional) A map of tags assigned to ENIs.
     * * `output_file` - (Optional) The name of output file that saves the filter results.
     * * `resource_group_id` - (Optional, ForceNew, Available in 1.57.0+) The Id of resource group which the network interface belongs.
     * 
     */
    public static Output<GetNetworkInterfacesResult> getNetworkInterfaces(GetNetworkInterfacesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getNetworkInterfaces:getNetworkInterfaces", TypeShape.of(GetNetworkInterfacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsNetworkInterfaces from version 1.123.1.
     * 
     * Use this data source to get a list of elastic network interfaces according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about elastic network interface and how to use it, see [Elastic Network Interface](https://www.alibabacloud.com/help/doc-detail/58496.html)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterface;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachment;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachmentArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get(&#34;name&#34;).orElse(&#34;networkInterfacesName&#34;);
     *         var vpc = new Network(&#34;vpc&#34;, NetworkArgs.builder()        
     *             .cidrBlock(&#34;192.168.0.0/24&#34;)
     *             .vpcName(name)
     *             .build());
     * 
     *         final var defaultZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation(&#34;VSwitch&#34;)
     *             .build());
     * 
     *         var vswitch = new Switch(&#34;vswitch&#34;, SwitchArgs.builder()        
     *             .availabilityZone(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
     *             .cidrBlock(&#34;192.168.0.0/24&#34;)
     *             .vpcId(vpc.id())
     *             .vswitchName(name)
     *             .build());
     * 
     *         var group = new SecurityGroup(&#34;group&#34;, SecurityGroupArgs.builder()        
     *             .vpcId(vpc.id())
     *             .build());
     * 
     *         var interface_ = new NetworkInterface(&#34;interface&#34;, NetworkInterfaceArgs.builder()        
     *             .description(&#34;Basic test&#34;)
     *             .privateIp(&#34;192.168.0.2&#34;)
     *             .securityGroups(group.id())
     *             .tags(Map.of(&#34;TF-VER&#34;, &#34;0.11.3&#34;))
     *             .vswitchId(vswitch.id())
     *             .build());
     * 
     *         var instance = new Instance(&#34;instance&#34;, InstanceArgs.builder()        
     *             .availabilityZone(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
     *             .imageId(&#34;centos_7_04_64_20G_alibase_201701015.vhd&#34;)
     *             .instanceName(name)
     *             .instanceType(&#34;ecs.e3.xlarge&#34;)
     *             .internetMaxBandwidthOut(10)
     *             .securityGroups(group.id())
     *             .systemDiskCategory(&#34;cloud_efficiency&#34;)
     *             .vswitchId(vswitch.id())
     *             .build());
     * 
     *         var attachment = new NetworkInterfaceAttachment(&#34;attachment&#34;, NetworkInterfaceAttachmentArgs.builder()        
     *             .instanceId(instance.id())
     *             .networkInterfaceId(interface_.id())
     *             .build());
     * 
     *         final var defaultNetworkInterfaces = EcsFunctions.getNetworkInterfaces(GetNetworkInterfacesArgs.builder()
     *             .ids(attachment.networkInterfaceId())
     *             .instanceId(instance.id())
     *             .nameRegex(name)
     *             .privateIp(&#34;192.168.0.2&#34;)
     *             .securityGroupId(group.id())
     *             .tags(Map.of(&#34;TF-VER&#34;, &#34;0.11.3&#34;))
     *             .type(&#34;Secondary&#34;)
     *             .vpcId(vpc.id())
     *             .vswitchId(vswitch.id())
     *             .build());
     * 
     *         ctx.export(&#34;eni0Name&#34;, defaultNetworkInterfaces.applyValue(getNetworkInterfacesResult -&gt; getNetworkInterfacesResult).applyValue(defaultNetworkInterfaces -&gt; defaultNetworkInterfaces.applyValue(getNetworkInterfacesResult -&gt; getNetworkInterfacesResult.interfaces()[0].name())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `ids` - (Optional)  A list of ENI IDs.
     * * `name_regex` - (Optional) A regex string to filter results by ENI name.
     * * `vpc_id` - (Optional) The VPC ID linked to ENIs.
     * * `vswitch_id` - (Optional) The VSwitch ID linked to ENIs.
     * * `private_ip` - (Optional) The primary private IP address of the ENI.
     * * `security_group_id` - (Optional) The security group ID linked to ENIs.
     * * `name` - (Optional) The name of the ENIs.
     * * `type` - (Optional) The type of ENIs, Only support for &#34;Primary&#34; or &#34;Secondary&#34;.
     * * `instance_id` - (Optional) The ECS instance ID that the ENI is attached to.
     * * `tags` - (Optional) A map of tags assigned to ENIs.
     * * `output_file` - (Optional) The name of output file that saves the filter results.
     * * `resource_group_id` - (Optional, ForceNew, Available in 1.57.0+) The Id of resource group which the network interface belongs.
     * 
     */
    public static CompletableFuture<GetNetworkInterfacesResult> getNetworkInterfacesPlain(GetNetworkInterfacesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getNetworkInterfaces:getNetworkInterfaces", TypeShape.of(GetNetworkInterfacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `alicloud.ecs.getSecurityGroupRules` data source provides a collection of security permissions of a specific security group.
     * Each collection item represents a single `ingress` or `egress` permission rule.
     * The ID of the security group can be provided via a variable or the result from the other data source `alicloud.ecs.getSecurityGroups`.
     * 
     * ## Example Usage
     * 
     * The following example shows how to obtain details about a security group rule and how to pass its data to an instance at launch time.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupRulesArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var securityGroupId = config.get(&#34;securityGroupId&#34;);
     *         final var groupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex(&#34;api&#34;)
     *             .build());
     * 
     *         final var ingressRulesDs = EcsFunctions.getSecurityGroupRules(GetSecurityGroupRulesArgs.builder()
     *             .direction(&#34;ingress&#34;)
     *             .groupId(groupsDs.applyValue(getSecurityGroupsResult -&gt; getSecurityGroupsResult.groups()[0].id()))
     *             .ipProtocol(&#34;tcp&#34;)
     *             .nicType(&#34;internet&#34;)
     *             .build());
     * 
     *         // Pass port_range to the backend service
     *         var backend = new Instance(&#34;backend&#34;, InstanceArgs.builder()        
     *             .userData(String.format(&#34;config_service.sh --portrange=%s&#34;, ingressRulesDs.applyValue(getSecurityGroupRulesResult -&gt; getSecurityGroupRulesResult.rules()[0].portRange())))
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecurityGroupRulesResult> getSecurityGroupRules(GetSecurityGroupRulesArgs args) {
        return getSecurityGroupRules(args, InvokeOptions.Empty);
    }
    /**
     * The `alicloud.ecs.getSecurityGroupRules` data source provides a collection of security permissions of a specific security group.
     * Each collection item represents a single `ingress` or `egress` permission rule.
     * The ID of the security group can be provided via a variable or the result from the other data source `alicloud.ecs.getSecurityGroups`.
     * 
     * ## Example Usage
     * 
     * The following example shows how to obtain details about a security group rule and how to pass its data to an instance at launch time.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupRulesArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var securityGroupId = config.get(&#34;securityGroupId&#34;);
     *         final var groupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex(&#34;api&#34;)
     *             .build());
     * 
     *         final var ingressRulesDs = EcsFunctions.getSecurityGroupRules(GetSecurityGroupRulesArgs.builder()
     *             .direction(&#34;ingress&#34;)
     *             .groupId(groupsDs.applyValue(getSecurityGroupsResult -&gt; getSecurityGroupsResult.groups()[0].id()))
     *             .ipProtocol(&#34;tcp&#34;)
     *             .nicType(&#34;internet&#34;)
     *             .build());
     * 
     *         // Pass port_range to the backend service
     *         var backend = new Instance(&#34;backend&#34;, InstanceArgs.builder()        
     *             .userData(String.format(&#34;config_service.sh --portrange=%s&#34;, ingressRulesDs.applyValue(getSecurityGroupRulesResult -&gt; getSecurityGroupRulesResult.rules()[0].portRange())))
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSecurityGroupRulesResult> getSecurityGroupRulesPlain(GetSecurityGroupRulesPlainArgs args) {
        return getSecurityGroupRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * The `alicloud.ecs.getSecurityGroupRules` data source provides a collection of security permissions of a specific security group.
     * Each collection item represents a single `ingress` or `egress` permission rule.
     * The ID of the security group can be provided via a variable or the result from the other data source `alicloud.ecs.getSecurityGroups`.
     * 
     * ## Example Usage
     * 
     * The following example shows how to obtain details about a security group rule and how to pass its data to an instance at launch time.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupRulesArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var securityGroupId = config.get(&#34;securityGroupId&#34;);
     *         final var groupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex(&#34;api&#34;)
     *             .build());
     * 
     *         final var ingressRulesDs = EcsFunctions.getSecurityGroupRules(GetSecurityGroupRulesArgs.builder()
     *             .direction(&#34;ingress&#34;)
     *             .groupId(groupsDs.applyValue(getSecurityGroupsResult -&gt; getSecurityGroupsResult.groups()[0].id()))
     *             .ipProtocol(&#34;tcp&#34;)
     *             .nicType(&#34;internet&#34;)
     *             .build());
     * 
     *         // Pass port_range to the backend service
     *         var backend = new Instance(&#34;backend&#34;, InstanceArgs.builder()        
     *             .userData(String.format(&#34;config_service.sh --portrange=%s&#34;, ingressRulesDs.applyValue(getSecurityGroupRulesResult -&gt; getSecurityGroupRulesResult.rules()[0].portRange())))
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecurityGroupRulesResult> getSecurityGroupRules(GetSecurityGroupRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getSecurityGroupRules:getSecurityGroupRules", TypeShape.of(GetSecurityGroupRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `alicloud.ecs.getSecurityGroupRules` data source provides a collection of security permissions of a specific security group.
     * Each collection item represents a single `ingress` or `egress` permission rule.
     * The ID of the security group can be provided via a variable or the result from the other data source `alicloud.ecs.getSecurityGroups`.
     * 
     * ## Example Usage
     * 
     * The following example shows how to obtain details about a security group rule and how to pass its data to an instance at launch time.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupRulesArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var securityGroupId = config.get(&#34;securityGroupId&#34;);
     *         final var groupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex(&#34;api&#34;)
     *             .build());
     * 
     *         final var ingressRulesDs = EcsFunctions.getSecurityGroupRules(GetSecurityGroupRulesArgs.builder()
     *             .direction(&#34;ingress&#34;)
     *             .groupId(groupsDs.applyValue(getSecurityGroupsResult -&gt; getSecurityGroupsResult.groups()[0].id()))
     *             .ipProtocol(&#34;tcp&#34;)
     *             .nicType(&#34;internet&#34;)
     *             .build());
     * 
     *         // Pass port_range to the backend service
     *         var backend = new Instance(&#34;backend&#34;, InstanceArgs.builder()        
     *             .userData(String.format(&#34;config_service.sh --portrange=%s&#34;, ingressRulesDs.applyValue(getSecurityGroupRulesResult -&gt; getSecurityGroupRulesResult.rules()[0].portRange())))
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSecurityGroupRulesResult> getSecurityGroupRulesPlain(GetSecurityGroupRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getSecurityGroupRules:getSecurityGroupRules", TypeShape.of(GetSecurityGroupRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of Security Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var secGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex(&#34;^web-&#34;)
     *             .outputFile(&#34;web_access.json&#34;)
     *             .build());
     * 
     *         // In conjunction with a VPC
     *         var primaryVpcDs = new Network(&#34;primaryVpcDs&#34;);
     * 
     *         final var primarySecGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .vpcId(primaryVpcDs.id())
     *             .build());
     * 
     *         ctx.export(&#34;firstGroupId&#34;, primarySecGroupsDs.applyValue(getSecurityGroupsResult -&gt; getSecurityGroupsResult).applyValue(primarySecGroupsDs -&gt; primarySecGroupsDs.applyValue(getSecurityGroupsResult -&gt; getSecurityGroupsResult.groups()[0].id())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecurityGroupsResult> getSecurityGroups() {
        return getSecurityGroups(GetSecurityGroupsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of Security Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var secGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex(&#34;^web-&#34;)
     *             .outputFile(&#34;web_access.json&#34;)
     *             .build());
     * 
     *         // In conjunction with a VPC
     *         var primaryVpcDs = new Network(&#34;primaryVpcDs&#34;);
     * 
     *         final var primarySecGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .vpcId(primaryVpcDs.id())
     *             .build());
     * 
     *         ctx.export(&#34;firstGroupId&#34;, primarySecGroupsDs.applyValue(getSecurityGroupsResult -&gt; getSecurityGroupsResult).applyValue(primarySecGroupsDs -&gt; primarySecGroupsDs.applyValue(getSecurityGroupsResult -&gt; getSecurityGroupsResult.groups()[0].id())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSecurityGroupsResult> getSecurityGroupsPlain() {
        return getSecurityGroupsPlain(GetSecurityGroupsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of Security Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var secGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex(&#34;^web-&#34;)
     *             .outputFile(&#34;web_access.json&#34;)
     *             .build());
     * 
     *         // In conjunction with a VPC
     *         var primaryVpcDs = new Network(&#34;primaryVpcDs&#34;);
     * 
     *         final var primarySecGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .vpcId(primaryVpcDs.id())
     *             .build());
     * 
     *         ctx.export(&#34;firstGroupId&#34;, primarySecGroupsDs.applyValue(getSecurityGroupsResult -&gt; getSecurityGroupsResult).applyValue(primarySecGroupsDs -&gt; primarySecGroupsDs.applyValue(getSecurityGroupsResult -&gt; getSecurityGroupsResult.groups()[0].id())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecurityGroupsResult> getSecurityGroups(GetSecurityGroupsArgs args) {
        return getSecurityGroups(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of Security Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var secGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex(&#34;^web-&#34;)
     *             .outputFile(&#34;web_access.json&#34;)
     *             .build());
     * 
     *         // In conjunction with a VPC
     *         var primaryVpcDs = new Network(&#34;primaryVpcDs&#34;);
     * 
     *         final var primarySecGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .vpcId(primaryVpcDs.id())
     *             .build());
     * 
     *         ctx.export(&#34;firstGroupId&#34;, primarySecGroupsDs.applyValue(getSecurityGroupsResult -&gt; getSecurityGroupsResult).applyValue(primarySecGroupsDs -&gt; primarySecGroupsDs.applyValue(getSecurityGroupsResult -&gt; getSecurityGroupsResult.groups()[0].id())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSecurityGroupsResult> getSecurityGroupsPlain(GetSecurityGroupsPlainArgs args) {
        return getSecurityGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of Security Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var secGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex(&#34;^web-&#34;)
     *             .outputFile(&#34;web_access.json&#34;)
     *             .build());
     * 
     *         // In conjunction with a VPC
     *         var primaryVpcDs = new Network(&#34;primaryVpcDs&#34;);
     * 
     *         final var primarySecGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .vpcId(primaryVpcDs.id())
     *             .build());
     * 
     *         ctx.export(&#34;firstGroupId&#34;, primarySecGroupsDs.applyValue(getSecurityGroupsResult -&gt; getSecurityGroupsResult).applyValue(primarySecGroupsDs -&gt; primarySecGroupsDs.applyValue(getSecurityGroupsResult -&gt; getSecurityGroupsResult.groups()[0].id())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecurityGroupsResult> getSecurityGroups(GetSecurityGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getSecurityGroups:getSecurityGroups", TypeShape.of(GetSecurityGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of Security Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var secGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex(&#34;^web-&#34;)
     *             .outputFile(&#34;web_access.json&#34;)
     *             .build());
     * 
     *         // In conjunction with a VPC
     *         var primaryVpcDs = new Network(&#34;primaryVpcDs&#34;);
     * 
     *         final var primarySecGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .vpcId(primaryVpcDs.id())
     *             .build());
     * 
     *         ctx.export(&#34;firstGroupId&#34;, primarySecGroupsDs.applyValue(getSecurityGroupsResult -&gt; getSecurityGroupsResult).applyValue(primarySecGroupsDs -&gt; primarySecGroupsDs.applyValue(getSecurityGroupsResult -&gt; getSecurityGroupsResult.groups()[0].id())));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSecurityGroupsResult> getSecurityGroupsPlain(GetSecurityGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getSecurityGroups:getSecurityGroups", TypeShape.of(GetSecurityGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsSnapshots from version 1.120.0.
     * 
     * Use this data source to get a list of snapshot according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about snapshot and how to use it, see [Snapshot](https://www.alibabacloud.com/help/doc-detail/25460.html).
     * 
     * &gt; **NOTE:**  Available in 1.40.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var snapshots = EcsFunctions.getSnapshots(GetSnapshotsArgs.builder()
     *             .ids(&#34;s-123456890abcdef&#34;)
     *             .nameRegex(&#34;tf-testAcc-snapshot&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `instance_id` - (Optional) The specified instance ID.
     * * `disk_id` - (Optional) The specified disk ID.
     * * `encrypted` - (Optional) Queries the encrypted snapshots. Optional values: `true`: Encrypted snapshots. `false`: No encryption attribute limit. Default value: `false`.
     * * `ids` - (Optional)  A list of snapshot IDs.
     * * `name_regex` - (Optional) A regex string to filter results by snapshot name.
     * * `status` - (Optional) The specified snapshot status. Default value: `all`. Optional values:
     *   * progressing: The snapshots are being created.
     *   * accomplished: The snapshots are ready to use.
     *   * failed: The snapshot creation failed.
     *   * all: All status.
     * * `type` - (Optional) The snapshot category. Default value: `all`. Optional values:
     *   * auto: Auto snapshots.
     *   * user: Manual snapshots.
     *   * all: Auto and manual snapshots.
     * * `source_disk_type` - (Optional) The type of source disk:
     *   * System: The snapshots are created for system disks.
     *   * Data: The snapshots are created for data disks.
     * * `usage` - (Optional) The usage of the snapshot:
     *   * image: The snapshots are used to create custom images.
     *   * disk: The snapshots are used to CreateDisk.
     *   * mage_disk: The snapshots are used to create custom images and data disks.
     *   * none: The snapshots are not used yet.
     * * `tags` - (Optional) A map of tags assigned to snapshots.
     * * `output_file` - (Optional) The name of output file that saves the filter results.
     * 
     */
    public static Output<GetSnapshotsResult> getSnapshots() {
        return getSnapshots(GetSnapshotsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsSnapshots from version 1.120.0.
     * 
     * Use this data source to get a list of snapshot according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about snapshot and how to use it, see [Snapshot](https://www.alibabacloud.com/help/doc-detail/25460.html).
     * 
     * &gt; **NOTE:**  Available in 1.40.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var snapshots = EcsFunctions.getSnapshots(GetSnapshotsArgs.builder()
     *             .ids(&#34;s-123456890abcdef&#34;)
     *             .nameRegex(&#34;tf-testAcc-snapshot&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `instance_id` - (Optional) The specified instance ID.
     * * `disk_id` - (Optional) The specified disk ID.
     * * `encrypted` - (Optional) Queries the encrypted snapshots. Optional values: `true`: Encrypted snapshots. `false`: No encryption attribute limit. Default value: `false`.
     * * `ids` - (Optional)  A list of snapshot IDs.
     * * `name_regex` - (Optional) A regex string to filter results by snapshot name.
     * * `status` - (Optional) The specified snapshot status. Default value: `all`. Optional values:
     *   * progressing: The snapshots are being created.
     *   * accomplished: The snapshots are ready to use.
     *   * failed: The snapshot creation failed.
     *   * all: All status.
     * * `type` - (Optional) The snapshot category. Default value: `all`. Optional values:
     *   * auto: Auto snapshots.
     *   * user: Manual snapshots.
     *   * all: Auto and manual snapshots.
     * * `source_disk_type` - (Optional) The type of source disk:
     *   * System: The snapshots are created for system disks.
     *   * Data: The snapshots are created for data disks.
     * * `usage` - (Optional) The usage of the snapshot:
     *   * image: The snapshots are used to create custom images.
     *   * disk: The snapshots are used to CreateDisk.
     *   * mage_disk: The snapshots are used to create custom images and data disks.
     *   * none: The snapshots are not used yet.
     * * `tags` - (Optional) A map of tags assigned to snapshots.
     * * `output_file` - (Optional) The name of output file that saves the filter results.
     * 
     */
    public static CompletableFuture<GetSnapshotsResult> getSnapshotsPlain() {
        return getSnapshotsPlain(GetSnapshotsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsSnapshots from version 1.120.0.
     * 
     * Use this data source to get a list of snapshot according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about snapshot and how to use it, see [Snapshot](https://www.alibabacloud.com/help/doc-detail/25460.html).
     * 
     * &gt; **NOTE:**  Available in 1.40.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var snapshots = EcsFunctions.getSnapshots(GetSnapshotsArgs.builder()
     *             .ids(&#34;s-123456890abcdef&#34;)
     *             .nameRegex(&#34;tf-testAcc-snapshot&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `instance_id` - (Optional) The specified instance ID.
     * * `disk_id` - (Optional) The specified disk ID.
     * * `encrypted` - (Optional) Queries the encrypted snapshots. Optional values: `true`: Encrypted snapshots. `false`: No encryption attribute limit. Default value: `false`.
     * * `ids` - (Optional)  A list of snapshot IDs.
     * * `name_regex` - (Optional) A regex string to filter results by snapshot name.
     * * `status` - (Optional) The specified snapshot status. Default value: `all`. Optional values:
     *   * progressing: The snapshots are being created.
     *   * accomplished: The snapshots are ready to use.
     *   * failed: The snapshot creation failed.
     *   * all: All status.
     * * `type` - (Optional) The snapshot category. Default value: `all`. Optional values:
     *   * auto: Auto snapshots.
     *   * user: Manual snapshots.
     *   * all: Auto and manual snapshots.
     * * `source_disk_type` - (Optional) The type of source disk:
     *   * System: The snapshots are created for system disks.
     *   * Data: The snapshots are created for data disks.
     * * `usage` - (Optional) The usage of the snapshot:
     *   * image: The snapshots are used to create custom images.
     *   * disk: The snapshots are used to CreateDisk.
     *   * mage_disk: The snapshots are used to create custom images and data disks.
     *   * none: The snapshots are not used yet.
     * * `tags` - (Optional) A map of tags assigned to snapshots.
     * * `output_file` - (Optional) The name of output file that saves the filter results.
     * 
     */
    public static Output<GetSnapshotsResult> getSnapshots(GetSnapshotsArgs args) {
        return getSnapshots(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsSnapshots from version 1.120.0.
     * 
     * Use this data source to get a list of snapshot according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about snapshot and how to use it, see [Snapshot](https://www.alibabacloud.com/help/doc-detail/25460.html).
     * 
     * &gt; **NOTE:**  Available in 1.40.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var snapshots = EcsFunctions.getSnapshots(GetSnapshotsArgs.builder()
     *             .ids(&#34;s-123456890abcdef&#34;)
     *             .nameRegex(&#34;tf-testAcc-snapshot&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `instance_id` - (Optional) The specified instance ID.
     * * `disk_id` - (Optional) The specified disk ID.
     * * `encrypted` - (Optional) Queries the encrypted snapshots. Optional values: `true`: Encrypted snapshots. `false`: No encryption attribute limit. Default value: `false`.
     * * `ids` - (Optional)  A list of snapshot IDs.
     * * `name_regex` - (Optional) A regex string to filter results by snapshot name.
     * * `status` - (Optional) The specified snapshot status. Default value: `all`. Optional values:
     *   * progressing: The snapshots are being created.
     *   * accomplished: The snapshots are ready to use.
     *   * failed: The snapshot creation failed.
     *   * all: All status.
     * * `type` - (Optional) The snapshot category. Default value: `all`. Optional values:
     *   * auto: Auto snapshots.
     *   * user: Manual snapshots.
     *   * all: Auto and manual snapshots.
     * * `source_disk_type` - (Optional) The type of source disk:
     *   * System: The snapshots are created for system disks.
     *   * Data: The snapshots are created for data disks.
     * * `usage` - (Optional) The usage of the snapshot:
     *   * image: The snapshots are used to create custom images.
     *   * disk: The snapshots are used to CreateDisk.
     *   * mage_disk: The snapshots are used to create custom images and data disks.
     *   * none: The snapshots are not used yet.
     * * `tags` - (Optional) A map of tags assigned to snapshots.
     * * `output_file` - (Optional) The name of output file that saves the filter results.
     * 
     */
    public static CompletableFuture<GetSnapshotsResult> getSnapshotsPlain(GetSnapshotsPlainArgs args) {
        return getSnapshotsPlain(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsSnapshots from version 1.120.0.
     * 
     * Use this data source to get a list of snapshot according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about snapshot and how to use it, see [Snapshot](https://www.alibabacloud.com/help/doc-detail/25460.html).
     * 
     * &gt; **NOTE:**  Available in 1.40.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var snapshots = EcsFunctions.getSnapshots(GetSnapshotsArgs.builder()
     *             .ids(&#34;s-123456890abcdef&#34;)
     *             .nameRegex(&#34;tf-testAcc-snapshot&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `instance_id` - (Optional) The specified instance ID.
     * * `disk_id` - (Optional) The specified disk ID.
     * * `encrypted` - (Optional) Queries the encrypted snapshots. Optional values: `true`: Encrypted snapshots. `false`: No encryption attribute limit. Default value: `false`.
     * * `ids` - (Optional)  A list of snapshot IDs.
     * * `name_regex` - (Optional) A regex string to filter results by snapshot name.
     * * `status` - (Optional) The specified snapshot status. Default value: `all`. Optional values:
     *   * progressing: The snapshots are being created.
     *   * accomplished: The snapshots are ready to use.
     *   * failed: The snapshot creation failed.
     *   * all: All status.
     * * `type` - (Optional) The snapshot category. Default value: `all`. Optional values:
     *   * auto: Auto snapshots.
     *   * user: Manual snapshots.
     *   * all: Auto and manual snapshots.
     * * `source_disk_type` - (Optional) The type of source disk:
     *   * System: The snapshots are created for system disks.
     *   * Data: The snapshots are created for data disks.
     * * `usage` - (Optional) The usage of the snapshot:
     *   * image: The snapshots are used to create custom images.
     *   * disk: The snapshots are used to CreateDisk.
     *   * mage_disk: The snapshots are used to create custom images and data disks.
     *   * none: The snapshots are not used yet.
     * * `tags` - (Optional) A map of tags assigned to snapshots.
     * * `output_file` - (Optional) The name of output file that saves the filter results.
     * 
     */
    public static Output<GetSnapshotsResult> getSnapshots(GetSnapshotsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getSnapshots:getSnapshots", TypeShape.of(GetSnapshotsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsSnapshots from version 1.120.0.
     * 
     * Use this data source to get a list of snapshot according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about snapshot and how to use it, see [Snapshot](https://www.alibabacloud.com/help/doc-detail/25460.html).
     * 
     * &gt; **NOTE:**  Available in 1.40.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var snapshots = EcsFunctions.getSnapshots(GetSnapshotsArgs.builder()
     *             .ids(&#34;s-123456890abcdef&#34;)
     *             .nameRegex(&#34;tf-testAcc-snapshot&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `instance_id` - (Optional) The specified instance ID.
     * * `disk_id` - (Optional) The specified disk ID.
     * * `encrypted` - (Optional) Queries the encrypted snapshots. Optional values: `true`: Encrypted snapshots. `false`: No encryption attribute limit. Default value: `false`.
     * * `ids` - (Optional)  A list of snapshot IDs.
     * * `name_regex` - (Optional) A regex string to filter results by snapshot name.
     * * `status` - (Optional) The specified snapshot status. Default value: `all`. Optional values:
     *   * progressing: The snapshots are being created.
     *   * accomplished: The snapshots are ready to use.
     *   * failed: The snapshot creation failed.
     *   * all: All status.
     * * `type` - (Optional) The snapshot category. Default value: `all`. Optional values:
     *   * auto: Auto snapshots.
     *   * user: Manual snapshots.
     *   * all: Auto and manual snapshots.
     * * `source_disk_type` - (Optional) The type of source disk:
     *   * System: The snapshots are created for system disks.
     *   * Data: The snapshots are created for data disks.
     * * `usage` - (Optional) The usage of the snapshot:
     *   * image: The snapshots are used to create custom images.
     *   * disk: The snapshots are used to CreateDisk.
     *   * mage_disk: The snapshots are used to create custom images and data disks.
     *   * none: The snapshots are not used yet.
     * * `tags` - (Optional) A map of tags assigned to snapshots.
     * * `output_file` - (Optional) The name of output file that saves the filter results.
     * 
     */
    public static CompletableFuture<GetSnapshotsResult> getSnapshotsPlain(GetSnapshotsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getSnapshots:getSnapshots", TypeShape.of(GetSnapshotsResult.class), args, Utilities.withVersion(options));
    }
}
