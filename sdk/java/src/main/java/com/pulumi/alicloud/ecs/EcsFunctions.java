// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.ecs.inputs.GetActivationsArgs;
import com.pulumi.alicloud.ecs.inputs.GetActivationsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetAutoSnapshotPoliciesArgs;
import com.pulumi.alicloud.ecs.inputs.GetAutoSnapshotPoliciesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetCapacityReservationsArgs;
import com.pulumi.alicloud.ecs.inputs.GetCapacityReservationsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetCommandsArgs;
import com.pulumi.alicloud.ecs.inputs.GetCommandsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetDedicatedHostsArgs;
import com.pulumi.alicloud.ecs.inputs.GetDedicatedHostsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetDisksArgs;
import com.pulumi.alicloud.ecs.inputs.GetDisksPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsDedicatedHostClustersArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsDedicatedHostClustersPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsDeploymentSetsArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsDeploymentSetsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsDisksArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsDisksPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsImageComponentsArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsImageComponentsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsImagePipelineArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsImagePipelinePlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsInvocationsArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsInvocationsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsKeyPairsArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsKeyPairsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsLaunchTemplatesArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsLaunchTemplatesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacePermissionsArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacePermissionsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacesArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsPrefixListsArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsPrefixListsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotGroupsArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotGroupsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotsArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsStorageCapacityUnitsArgs;
import com.pulumi.alicloud.ecs.inputs.GetEcsStorageCapacityUnitsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEipAddressesArgs;
import com.pulumi.alicloud.ecs.inputs.GetEipAddressesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetEipsArgs;
import com.pulumi.alicloud.ecs.inputs.GetEipsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetElasticityAssurancesArgs;
import com.pulumi.alicloud.ecs.inputs.GetElasticityAssurancesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetHpcClustersArgs;
import com.pulumi.alicloud.ecs.inputs.GetHpcClustersPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
import com.pulumi.alicloud.ecs.inputs.GetImagesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetInstanceKeywordsArgs;
import com.pulumi.alicloud.ecs.inputs.GetInstanceKeywordsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetInstanceTypeFamiliesArgs;
import com.pulumi.alicloud.ecs.inputs.GetInstanceTypeFamiliesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetInstancesArgs;
import com.pulumi.alicloud.ecs.inputs.GetInstancesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetKeyPairsArgs;
import com.pulumi.alicloud.ecs.inputs.GetKeyPairsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetNetworkInterfacesArgs;
import com.pulumi.alicloud.ecs.inputs.GetNetworkInterfacesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupRulesArgs;
import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupRulesPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsPlainArgs;
import com.pulumi.alicloud.ecs.inputs.GetSnapshotsArgs;
import com.pulumi.alicloud.ecs.inputs.GetSnapshotsPlainArgs;
import com.pulumi.alicloud.ecs.outputs.GetActivationsResult;
import com.pulumi.alicloud.ecs.outputs.GetAutoSnapshotPoliciesResult;
import com.pulumi.alicloud.ecs.outputs.GetCapacityReservationsResult;
import com.pulumi.alicloud.ecs.outputs.GetCommandsResult;
import com.pulumi.alicloud.ecs.outputs.GetDedicatedHostsResult;
import com.pulumi.alicloud.ecs.outputs.GetDisksResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsDedicatedHostClustersResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsDeploymentSetsResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsDisksResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsImageComponentsResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsImagePipelineResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsInvocationsResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsKeyPairsResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsLaunchTemplatesResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsNetworkInterfacePermissionsResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsNetworkInterfacesResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsPrefixListsResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsSnapshotGroupsResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsSnapshotsResult;
import com.pulumi.alicloud.ecs.outputs.GetEcsStorageCapacityUnitsResult;
import com.pulumi.alicloud.ecs.outputs.GetEipAddressesResult;
import com.pulumi.alicloud.ecs.outputs.GetEipsResult;
import com.pulumi.alicloud.ecs.outputs.GetElasticityAssurancesResult;
import com.pulumi.alicloud.ecs.outputs.GetHpcClustersResult;
import com.pulumi.alicloud.ecs.outputs.GetImagesResult;
import com.pulumi.alicloud.ecs.outputs.GetInstanceKeywordsResult;
import com.pulumi.alicloud.ecs.outputs.GetInstanceTypeFamiliesResult;
import com.pulumi.alicloud.ecs.outputs.GetInstanceTypesResult;
import com.pulumi.alicloud.ecs.outputs.GetInstancesResult;
import com.pulumi.alicloud.ecs.outputs.GetKeyPairsResult;
import com.pulumi.alicloud.ecs.outputs.GetNetworkInterfacesResult;
import com.pulumi.alicloud.ecs.outputs.GetSecurityGroupRulesResult;
import com.pulumi.alicloud.ecs.outputs.GetSecurityGroupsResult;
import com.pulumi.alicloud.ecs.outputs.GetSnapshotsResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import java.util.concurrent.CompletableFuture;

public final class EcsFunctions {
    /**
     * This data source provides the Ecs Activations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.177.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetActivationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getActivations(GetActivationsArgs.builder()
     *             .build());
     * 
     *         ctx.export("ecsActivationId1", ids.activations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetActivationsResult> getActivations() {
        return getActivations(GetActivationsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Activations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.177.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetActivationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getActivations(GetActivationsArgs.builder()
     *             .build());
     * 
     *         ctx.export("ecsActivationId1", ids.activations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetActivationsResult> getActivationsPlain() {
        return getActivationsPlain(GetActivationsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Activations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.177.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetActivationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getActivations(GetActivationsArgs.builder()
     *             .build());
     * 
     *         ctx.export("ecsActivationId1", ids.activations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetActivationsResult> getActivations(GetActivationsArgs args) {
        return getActivations(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Activations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.177.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetActivationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getActivations(GetActivationsArgs.builder()
     *             .build());
     * 
     *         ctx.export("ecsActivationId1", ids.activations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetActivationsResult> getActivationsPlain(GetActivationsPlainArgs args) {
        return getActivationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Activations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.177.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetActivationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getActivations(GetActivationsArgs.builder()
     *             .build());
     * 
     *         ctx.export("ecsActivationId1", ids.activations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetActivationsResult> getActivations(GetActivationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getActivations:getActivations", TypeShape.of(GetActivationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Activations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.177.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetActivationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getActivations(GetActivationsArgs.builder()
     *             .build());
     * 
     *         ctx.export("ecsActivationId1", ids.activations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetActivationsResult> getActivations(GetActivationsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getActivations:getActivations", TypeShape.of(GetActivationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Activations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.177.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetActivationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getActivations(GetActivationsArgs.builder()
     *             .build());
     * 
     *         ctx.export("ecsActivationId1", ids.activations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetActivationsResult> getActivationsPlain(GetActivationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getActivations:getActivations", TypeShape.of(GetActivationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Auto Snapshot Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.117.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetAutoSnapshotPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.builder()
     *             .ids("sp-bp14e66xxxxxxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsAutoSnapshotPolicyId", example.policies()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAutoSnapshotPoliciesResult> getAutoSnapshotPolicies() {
        return getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Auto Snapshot Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.117.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetAutoSnapshotPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.builder()
     *             .ids("sp-bp14e66xxxxxxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsAutoSnapshotPolicyId", example.policies()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAutoSnapshotPoliciesResult> getAutoSnapshotPoliciesPlain() {
        return getAutoSnapshotPoliciesPlain(GetAutoSnapshotPoliciesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Auto Snapshot Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.117.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetAutoSnapshotPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.builder()
     *             .ids("sp-bp14e66xxxxxxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsAutoSnapshotPolicyId", example.policies()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAutoSnapshotPoliciesResult> getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs args) {
        return getAutoSnapshotPolicies(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Auto Snapshot Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.117.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetAutoSnapshotPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.builder()
     *             .ids("sp-bp14e66xxxxxxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsAutoSnapshotPolicyId", example.policies()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAutoSnapshotPoliciesResult> getAutoSnapshotPoliciesPlain(GetAutoSnapshotPoliciesPlainArgs args) {
        return getAutoSnapshotPoliciesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Auto Snapshot Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.117.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetAutoSnapshotPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.builder()
     *             .ids("sp-bp14e66xxxxxxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsAutoSnapshotPolicyId", example.policies()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAutoSnapshotPoliciesResult> getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getAutoSnapshotPolicies:getAutoSnapshotPolicies", TypeShape.of(GetAutoSnapshotPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Auto Snapshot Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.117.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetAutoSnapshotPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.builder()
     *             .ids("sp-bp14e66xxxxxxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsAutoSnapshotPolicyId", example.policies()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAutoSnapshotPoliciesResult> getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getAutoSnapshotPolicies:getAutoSnapshotPolicies", TypeShape.of(GetAutoSnapshotPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Auto Snapshot Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.117.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetAutoSnapshotPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getAutoSnapshotPolicies(GetAutoSnapshotPoliciesArgs.builder()
     *             .ids("sp-bp14e66xxxxxxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsAutoSnapshotPolicyId", example.policies()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAutoSnapshotPoliciesResult> getAutoSnapshotPoliciesPlain(GetAutoSnapshotPoliciesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getAutoSnapshotPolicies:getAutoSnapshotPolicies", TypeShape.of(GetAutoSnapshotPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides Ecs Capacity Reservation available to the user.
     * 
     * &gt; **NOTE:** Available in 1.195.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCapacityReservationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getCapacityReservations(GetCapacityReservationsArgs.builder()
     *             .ids(defaultAlicloudEcsCapacityReservation.id())
     *             .nameRegex(defaultAlicloudEcsCapacityReservation.name())
     *             .instanceType("ecs.c6.large")
     *             .platform("linux")
     *             .build());
     * 
     *         ctx.export("alicloudEcsCapacityReservationExampleId", default_.reservations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCapacityReservationsResult> getCapacityReservations() {
        return getCapacityReservations(GetCapacityReservationsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides Ecs Capacity Reservation available to the user.
     * 
     * &gt; **NOTE:** Available in 1.195.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCapacityReservationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getCapacityReservations(GetCapacityReservationsArgs.builder()
     *             .ids(defaultAlicloudEcsCapacityReservation.id())
     *             .nameRegex(defaultAlicloudEcsCapacityReservation.name())
     *             .instanceType("ecs.c6.large")
     *             .platform("linux")
     *             .build());
     * 
     *         ctx.export("alicloudEcsCapacityReservationExampleId", default_.reservations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetCapacityReservationsResult> getCapacityReservationsPlain() {
        return getCapacityReservationsPlain(GetCapacityReservationsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides Ecs Capacity Reservation available to the user.
     * 
     * &gt; **NOTE:** Available in 1.195.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCapacityReservationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getCapacityReservations(GetCapacityReservationsArgs.builder()
     *             .ids(defaultAlicloudEcsCapacityReservation.id())
     *             .nameRegex(defaultAlicloudEcsCapacityReservation.name())
     *             .instanceType("ecs.c6.large")
     *             .platform("linux")
     *             .build());
     * 
     *         ctx.export("alicloudEcsCapacityReservationExampleId", default_.reservations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCapacityReservationsResult> getCapacityReservations(GetCapacityReservationsArgs args) {
        return getCapacityReservations(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides Ecs Capacity Reservation available to the user.
     * 
     * &gt; **NOTE:** Available in 1.195.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCapacityReservationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getCapacityReservations(GetCapacityReservationsArgs.builder()
     *             .ids(defaultAlicloudEcsCapacityReservation.id())
     *             .nameRegex(defaultAlicloudEcsCapacityReservation.name())
     *             .instanceType("ecs.c6.large")
     *             .platform("linux")
     *             .build());
     * 
     *         ctx.export("alicloudEcsCapacityReservationExampleId", default_.reservations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetCapacityReservationsResult> getCapacityReservationsPlain(GetCapacityReservationsPlainArgs args) {
        return getCapacityReservationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides Ecs Capacity Reservation available to the user.
     * 
     * &gt; **NOTE:** Available in 1.195.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCapacityReservationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getCapacityReservations(GetCapacityReservationsArgs.builder()
     *             .ids(defaultAlicloudEcsCapacityReservation.id())
     *             .nameRegex(defaultAlicloudEcsCapacityReservation.name())
     *             .instanceType("ecs.c6.large")
     *             .platform("linux")
     *             .build());
     * 
     *         ctx.export("alicloudEcsCapacityReservationExampleId", default_.reservations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCapacityReservationsResult> getCapacityReservations(GetCapacityReservationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getCapacityReservations:getCapacityReservations", TypeShape.of(GetCapacityReservationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides Ecs Capacity Reservation available to the user.
     * 
     * &gt; **NOTE:** Available in 1.195.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCapacityReservationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getCapacityReservations(GetCapacityReservationsArgs.builder()
     *             .ids(defaultAlicloudEcsCapacityReservation.id())
     *             .nameRegex(defaultAlicloudEcsCapacityReservation.name())
     *             .instanceType("ecs.c6.large")
     *             .platform("linux")
     *             .build());
     * 
     *         ctx.export("alicloudEcsCapacityReservationExampleId", default_.reservations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCapacityReservationsResult> getCapacityReservations(GetCapacityReservationsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getCapacityReservations:getCapacityReservations", TypeShape.of(GetCapacityReservationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides Ecs Capacity Reservation available to the user.
     * 
     * &gt; **NOTE:** Available in 1.195.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCapacityReservationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getCapacityReservations(GetCapacityReservationsArgs.builder()
     *             .ids(defaultAlicloudEcsCapacityReservation.id())
     *             .nameRegex(defaultAlicloudEcsCapacityReservation.name())
     *             .instanceType("ecs.c6.large")
     *             .platform("linux")
     *             .build());
     * 
     *         ctx.export("alicloudEcsCapacityReservationExampleId", default_.reservations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetCapacityReservationsResult> getCapacityReservationsPlain(GetCapacityReservationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getCapacityReservations:getCapacityReservations", TypeShape.of(GetCapacityReservationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Commands of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCommandsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getCommands(GetCommandsArgs.builder()
     *             .ids("E2RY53-xxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsCommandId", example.commands()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCommandsResult> getCommands() {
        return getCommands(GetCommandsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Commands of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCommandsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getCommands(GetCommandsArgs.builder()
     *             .ids("E2RY53-xxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsCommandId", example.commands()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetCommandsResult> getCommandsPlain() {
        return getCommandsPlain(GetCommandsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Commands of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCommandsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getCommands(GetCommandsArgs.builder()
     *             .ids("E2RY53-xxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsCommandId", example.commands()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCommandsResult> getCommands(GetCommandsArgs args) {
        return getCommands(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Commands of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCommandsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getCommands(GetCommandsArgs.builder()
     *             .ids("E2RY53-xxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsCommandId", example.commands()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetCommandsResult> getCommandsPlain(GetCommandsPlainArgs args) {
        return getCommandsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Commands of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCommandsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getCommands(GetCommandsArgs.builder()
     *             .ids("E2RY53-xxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsCommandId", example.commands()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCommandsResult> getCommands(GetCommandsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getCommands:getCommands", TypeShape.of(GetCommandsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Commands of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCommandsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getCommands(GetCommandsArgs.builder()
     *             .ids("E2RY53-xxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsCommandId", example.commands()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetCommandsResult> getCommands(GetCommandsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getCommands:getCommands", TypeShape.of(GetCommandsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Commands of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetCommandsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getCommands(GetCommandsArgs.builder()
     *             .ids("E2RY53-xxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsCommandId", example.commands()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetCommandsResult> getCommandsPlain(GetCommandsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getCommands:getCommands", TypeShape.of(GetCommandsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ECS Dedicated Hosts of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.91.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.DedicatedHost;
     * import com.pulumi.alicloud.ecs.DedicatedHostArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDedicatedHostsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var default_ = new DedicatedHost("default", DedicatedHostArgs.builder()
     *             .dedicatedHostType("ddh.c5")
     *             .description("From_Terraform")
     *             .dedicatedHostName(name)
     *             .actionOnMaintenance("Migrate")
     *             .tags(Map.ofEntries(
     *                 Map.entry("Create", "TF"),
     *                 Map.entry("For", "ddh-test")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getDedicatedHosts(GetDedicatedHostsArgs.builder()
     *             .ids(default_.id())
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostId0", ids.applyValue(_ids -> _ids.hosts()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDedicatedHostsResult> getDedicatedHosts() {
        return getDedicatedHosts(GetDedicatedHostsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ECS Dedicated Hosts of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.91.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.DedicatedHost;
     * import com.pulumi.alicloud.ecs.DedicatedHostArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDedicatedHostsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var default_ = new DedicatedHost("default", DedicatedHostArgs.builder()
     *             .dedicatedHostType("ddh.c5")
     *             .description("From_Terraform")
     *             .dedicatedHostName(name)
     *             .actionOnMaintenance("Migrate")
     *             .tags(Map.ofEntries(
     *                 Map.entry("Create", "TF"),
     *                 Map.entry("For", "ddh-test")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getDedicatedHosts(GetDedicatedHostsArgs.builder()
     *             .ids(default_.id())
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostId0", ids.applyValue(_ids -> _ids.hosts()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDedicatedHostsResult> getDedicatedHostsPlain() {
        return getDedicatedHostsPlain(GetDedicatedHostsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ECS Dedicated Hosts of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.91.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.DedicatedHost;
     * import com.pulumi.alicloud.ecs.DedicatedHostArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDedicatedHostsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var default_ = new DedicatedHost("default", DedicatedHostArgs.builder()
     *             .dedicatedHostType("ddh.c5")
     *             .description("From_Terraform")
     *             .dedicatedHostName(name)
     *             .actionOnMaintenance("Migrate")
     *             .tags(Map.ofEntries(
     *                 Map.entry("Create", "TF"),
     *                 Map.entry("For", "ddh-test")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getDedicatedHosts(GetDedicatedHostsArgs.builder()
     *             .ids(default_.id())
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostId0", ids.applyValue(_ids -> _ids.hosts()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDedicatedHostsResult> getDedicatedHosts(GetDedicatedHostsArgs args) {
        return getDedicatedHosts(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ECS Dedicated Hosts of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.91.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.DedicatedHost;
     * import com.pulumi.alicloud.ecs.DedicatedHostArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDedicatedHostsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var default_ = new DedicatedHost("default", DedicatedHostArgs.builder()
     *             .dedicatedHostType("ddh.c5")
     *             .description("From_Terraform")
     *             .dedicatedHostName(name)
     *             .actionOnMaintenance("Migrate")
     *             .tags(Map.ofEntries(
     *                 Map.entry("Create", "TF"),
     *                 Map.entry("For", "ddh-test")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getDedicatedHosts(GetDedicatedHostsArgs.builder()
     *             .ids(default_.id())
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostId0", ids.applyValue(_ids -> _ids.hosts()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDedicatedHostsResult> getDedicatedHostsPlain(GetDedicatedHostsPlainArgs args) {
        return getDedicatedHostsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ECS Dedicated Hosts of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.91.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.DedicatedHost;
     * import com.pulumi.alicloud.ecs.DedicatedHostArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDedicatedHostsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var default_ = new DedicatedHost("default", DedicatedHostArgs.builder()
     *             .dedicatedHostType("ddh.c5")
     *             .description("From_Terraform")
     *             .dedicatedHostName(name)
     *             .actionOnMaintenance("Migrate")
     *             .tags(Map.ofEntries(
     *                 Map.entry("Create", "TF"),
     *                 Map.entry("For", "ddh-test")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getDedicatedHosts(GetDedicatedHostsArgs.builder()
     *             .ids(default_.id())
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostId0", ids.applyValue(_ids -> _ids.hosts()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDedicatedHostsResult> getDedicatedHosts(GetDedicatedHostsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getDedicatedHosts:getDedicatedHosts", TypeShape.of(GetDedicatedHostsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ECS Dedicated Hosts of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.91.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.DedicatedHost;
     * import com.pulumi.alicloud.ecs.DedicatedHostArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDedicatedHostsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var default_ = new DedicatedHost("default", DedicatedHostArgs.builder()
     *             .dedicatedHostType("ddh.c5")
     *             .description("From_Terraform")
     *             .dedicatedHostName(name)
     *             .actionOnMaintenance("Migrate")
     *             .tags(Map.ofEntries(
     *                 Map.entry("Create", "TF"),
     *                 Map.entry("For", "ddh-test")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getDedicatedHosts(GetDedicatedHostsArgs.builder()
     *             .ids(default_.id())
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostId0", ids.applyValue(_ids -> _ids.hosts()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDedicatedHostsResult> getDedicatedHosts(GetDedicatedHostsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getDedicatedHosts:getDedicatedHosts", TypeShape.of(GetDedicatedHostsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ECS Dedicated Hosts of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.91.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.DedicatedHost;
     * import com.pulumi.alicloud.ecs.DedicatedHostArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDedicatedHostsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         var default_ = new DedicatedHost("default", DedicatedHostArgs.builder()
     *             .dedicatedHostType("ddh.c5")
     *             .description("From_Terraform")
     *             .dedicatedHostName(name)
     *             .actionOnMaintenance("Migrate")
     *             .tags(Map.ofEntries(
     *                 Map.entry("Create", "TF"),
     *                 Map.entry("For", "ddh-test")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getDedicatedHosts(GetDedicatedHostsArgs.builder()
     *             .ids(default_.id())
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostId0", ids.applyValue(_ids -> _ids.hosts()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDedicatedHostsResult> getDedicatedHostsPlain(GetDedicatedHostsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getDedicatedHosts:getDedicatedHosts", TypeShape.of(GetDedicatedHostsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsDisks from version 1.122.0.
     * 
     * This data source provides the disks of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var disksDs = EcsFunctions.getDisks(GetDisksArgs.builder()
     *             .nameRegex("sample_disk")
     *             .build());
     * 
     *         ctx.export("firstDiskId", disksDs.disks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDisksResult> getDisks() {
        return getDisks(GetDisksArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsDisks from version 1.122.0.
     * 
     * This data source provides the disks of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var disksDs = EcsFunctions.getDisks(GetDisksArgs.builder()
     *             .nameRegex("sample_disk")
     *             .build());
     * 
     *         ctx.export("firstDiskId", disksDs.disks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDisksResult> getDisksPlain() {
        return getDisksPlain(GetDisksPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsDisks from version 1.122.0.
     * 
     * This data source provides the disks of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var disksDs = EcsFunctions.getDisks(GetDisksArgs.builder()
     *             .nameRegex("sample_disk")
     *             .build());
     * 
     *         ctx.export("firstDiskId", disksDs.disks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDisksResult> getDisks(GetDisksArgs args) {
        return getDisks(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsDisks from version 1.122.0.
     * 
     * This data source provides the disks of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var disksDs = EcsFunctions.getDisks(GetDisksArgs.builder()
     *             .nameRegex("sample_disk")
     *             .build());
     * 
     *         ctx.export("firstDiskId", disksDs.disks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDisksResult> getDisksPlain(GetDisksPlainArgs args) {
        return getDisksPlain(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsDisks from version 1.122.0.
     * 
     * This data source provides the disks of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var disksDs = EcsFunctions.getDisks(GetDisksArgs.builder()
     *             .nameRegex("sample_disk")
     *             .build());
     * 
     *         ctx.export("firstDiskId", disksDs.disks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDisksResult> getDisks(GetDisksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getDisks:getDisks", TypeShape.of(GetDisksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsDisks from version 1.122.0.
     * 
     * This data source provides the disks of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var disksDs = EcsFunctions.getDisks(GetDisksArgs.builder()
     *             .nameRegex("sample_disk")
     *             .build());
     * 
     *         ctx.export("firstDiskId", disksDs.disks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDisksResult> getDisks(GetDisksArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getDisks:getDisks", TypeShape.of(GetDisksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsDisks from version 1.122.0.
     * 
     * This data source provides the disks of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var disksDs = EcsFunctions.getDisks(GetDisksArgs.builder()
     *             .nameRegex("sample_disk")
     *             .build());
     * 
     *         ctx.export("firstDiskId", disksDs.disks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDisksResult> getDisksPlain(GetDisksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getDisks:getDisks", TypeShape.of(GetDisksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Dedicated Host Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.146.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDedicatedHostClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId1", ids.clusters()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .nameRegex("^my-DedicatedHostCluster")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId2", nameRegex.clusters()[0].id());
     *         final var zoneId = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .zoneId("example_value")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId3", zoneId.clusters()[0].id());
     *         final var clusterName = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterName("example_value")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId4", clusterName.clusters()[0].id());
     *         final var clusterIds = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterIds("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId5", clusterIds.clusters()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsDedicatedHostClustersResult> getEcsDedicatedHostClusters() {
        return getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Dedicated Host Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.146.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDedicatedHostClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId1", ids.clusters()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .nameRegex("^my-DedicatedHostCluster")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId2", nameRegex.clusters()[0].id());
     *         final var zoneId = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .zoneId("example_value")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId3", zoneId.clusters()[0].id());
     *         final var clusterName = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterName("example_value")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId4", clusterName.clusters()[0].id());
     *         final var clusterIds = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterIds("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId5", clusterIds.clusters()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsDedicatedHostClustersResult> getEcsDedicatedHostClustersPlain() {
        return getEcsDedicatedHostClustersPlain(GetEcsDedicatedHostClustersPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Dedicated Host Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.146.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDedicatedHostClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId1", ids.clusters()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .nameRegex("^my-DedicatedHostCluster")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId2", nameRegex.clusters()[0].id());
     *         final var zoneId = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .zoneId("example_value")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId3", zoneId.clusters()[0].id());
     *         final var clusterName = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterName("example_value")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId4", clusterName.clusters()[0].id());
     *         final var clusterIds = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterIds("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId5", clusterIds.clusters()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsDedicatedHostClustersResult> getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs args) {
        return getEcsDedicatedHostClusters(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Dedicated Host Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.146.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDedicatedHostClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId1", ids.clusters()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .nameRegex("^my-DedicatedHostCluster")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId2", nameRegex.clusters()[0].id());
     *         final var zoneId = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .zoneId("example_value")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId3", zoneId.clusters()[0].id());
     *         final var clusterName = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterName("example_value")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId4", clusterName.clusters()[0].id());
     *         final var clusterIds = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterIds("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId5", clusterIds.clusters()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsDedicatedHostClustersResult> getEcsDedicatedHostClustersPlain(GetEcsDedicatedHostClustersPlainArgs args) {
        return getEcsDedicatedHostClustersPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Dedicated Host Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.146.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDedicatedHostClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId1", ids.clusters()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .nameRegex("^my-DedicatedHostCluster")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId2", nameRegex.clusters()[0].id());
     *         final var zoneId = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .zoneId("example_value")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId3", zoneId.clusters()[0].id());
     *         final var clusterName = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterName("example_value")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId4", clusterName.clusters()[0].id());
     *         final var clusterIds = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterIds("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId5", clusterIds.clusters()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsDedicatedHostClustersResult> getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsDedicatedHostClusters:getEcsDedicatedHostClusters", TypeShape.of(GetEcsDedicatedHostClustersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Dedicated Host Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.146.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDedicatedHostClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId1", ids.clusters()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .nameRegex("^my-DedicatedHostCluster")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId2", nameRegex.clusters()[0].id());
     *         final var zoneId = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .zoneId("example_value")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId3", zoneId.clusters()[0].id());
     *         final var clusterName = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterName("example_value")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId4", clusterName.clusters()[0].id());
     *         final var clusterIds = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterIds("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId5", clusterIds.clusters()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsDedicatedHostClustersResult> getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsDedicatedHostClusters:getEcsDedicatedHostClusters", TypeShape.of(GetEcsDedicatedHostClustersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Dedicated Host Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.146.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDedicatedHostClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId1", ids.clusters()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .nameRegex("^my-DedicatedHostCluster")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId2", nameRegex.clusters()[0].id());
     *         final var zoneId = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .zoneId("example_value")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId3", zoneId.clusters()[0].id());
     *         final var clusterName = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterName("example_value")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId4", clusterName.clusters()[0].id());
     *         final var clusterIds = EcsFunctions.getEcsDedicatedHostClusters(GetEcsDedicatedHostClustersArgs.builder()
     *             .dedicatedHostClusterIds("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDedicatedHostClusterId5", clusterIds.clusters()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsDedicatedHostClustersResult> getEcsDedicatedHostClustersPlain(GetEcsDedicatedHostClustersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsDedicatedHostClusters:getEcsDedicatedHostClusters", TypeShape.of(GetEcsDedicatedHostClustersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Deployment Sets of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.140.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDeploymentSetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDeploymentSetId1", ids.sets()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .nameRegex("^my-DeploymentSet")
     *             .build());
     * 
     *         ctx.export("ecsDeploymentSetId2", nameRegex.sets()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsDeploymentSetsResult> getEcsDeploymentSets() {
        return getEcsDeploymentSets(GetEcsDeploymentSetsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Deployment Sets of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.140.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDeploymentSetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDeploymentSetId1", ids.sets()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .nameRegex("^my-DeploymentSet")
     *             .build());
     * 
     *         ctx.export("ecsDeploymentSetId2", nameRegex.sets()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsDeploymentSetsResult> getEcsDeploymentSetsPlain() {
        return getEcsDeploymentSetsPlain(GetEcsDeploymentSetsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Deployment Sets of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.140.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDeploymentSetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDeploymentSetId1", ids.sets()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .nameRegex("^my-DeploymentSet")
     *             .build());
     * 
     *         ctx.export("ecsDeploymentSetId2", nameRegex.sets()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsDeploymentSetsResult> getEcsDeploymentSets(GetEcsDeploymentSetsArgs args) {
        return getEcsDeploymentSets(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Deployment Sets of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.140.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDeploymentSetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDeploymentSetId1", ids.sets()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .nameRegex("^my-DeploymentSet")
     *             .build());
     * 
     *         ctx.export("ecsDeploymentSetId2", nameRegex.sets()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsDeploymentSetsResult> getEcsDeploymentSetsPlain(GetEcsDeploymentSetsPlainArgs args) {
        return getEcsDeploymentSetsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Deployment Sets of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.140.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDeploymentSetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDeploymentSetId1", ids.sets()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .nameRegex("^my-DeploymentSet")
     *             .build());
     * 
     *         ctx.export("ecsDeploymentSetId2", nameRegex.sets()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsDeploymentSetsResult> getEcsDeploymentSets(GetEcsDeploymentSetsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsDeploymentSets:getEcsDeploymentSets", TypeShape.of(GetEcsDeploymentSetsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Deployment Sets of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.140.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDeploymentSetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDeploymentSetId1", ids.sets()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .nameRegex("^my-DeploymentSet")
     *             .build());
     * 
     *         ctx.export("ecsDeploymentSetId2", nameRegex.sets()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsDeploymentSetsResult> getEcsDeploymentSets(GetEcsDeploymentSetsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsDeploymentSets:getEcsDeploymentSets", TypeShape.of(GetEcsDeploymentSetsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Deployment Sets of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.140.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDeploymentSetsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsDeploymentSetId1", ids.sets()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsDeploymentSets(GetEcsDeploymentSetsArgs.builder()
     *             .nameRegex("^my-DeploymentSet")
     *             .build());
     * 
     *         ctx.export("ecsDeploymentSetId2", nameRegex.sets()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsDeploymentSetsResult> getEcsDeploymentSetsPlain(GetEcsDeploymentSetsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsDeploymentSets:getEcsDeploymentSets", TypeShape.of(GetEcsDeploymentSetsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Disks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.122.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsDisk;
     * import com.pulumi.alicloud.ecs.EcsDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultEcsDisk = new EcsDisk("defaultEcsDisk", EcsDiskArgs.builder()
     *             .zoneId(default_.zones()[0].id())
     *             .diskName("terraform-example")
     *             .description("terraform-example")
     *             .category("cloud_efficiency")
     *             .size(30)
     *             .tags(Map.of("Name", "terraform-example"))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsDisks(GetEcsDisksArgs.builder()
     *             .ids(defaultEcsDisk.id())
     *             .build());
     * 
     *         ctx.export("ecsDiskId0", ids.applyValue(_ids -> _ids.disks()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsDisksResult> getEcsDisks() {
        return getEcsDisks(GetEcsDisksArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Disks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.122.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsDisk;
     * import com.pulumi.alicloud.ecs.EcsDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultEcsDisk = new EcsDisk("defaultEcsDisk", EcsDiskArgs.builder()
     *             .zoneId(default_.zones()[0].id())
     *             .diskName("terraform-example")
     *             .description("terraform-example")
     *             .category("cloud_efficiency")
     *             .size(30)
     *             .tags(Map.of("Name", "terraform-example"))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsDisks(GetEcsDisksArgs.builder()
     *             .ids(defaultEcsDisk.id())
     *             .build());
     * 
     *         ctx.export("ecsDiskId0", ids.applyValue(_ids -> _ids.disks()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsDisksResult> getEcsDisksPlain() {
        return getEcsDisksPlain(GetEcsDisksPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Disks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.122.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsDisk;
     * import com.pulumi.alicloud.ecs.EcsDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultEcsDisk = new EcsDisk("defaultEcsDisk", EcsDiskArgs.builder()
     *             .zoneId(default_.zones()[0].id())
     *             .diskName("terraform-example")
     *             .description("terraform-example")
     *             .category("cloud_efficiency")
     *             .size(30)
     *             .tags(Map.of("Name", "terraform-example"))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsDisks(GetEcsDisksArgs.builder()
     *             .ids(defaultEcsDisk.id())
     *             .build());
     * 
     *         ctx.export("ecsDiskId0", ids.applyValue(_ids -> _ids.disks()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsDisksResult> getEcsDisks(GetEcsDisksArgs args) {
        return getEcsDisks(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Disks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.122.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsDisk;
     * import com.pulumi.alicloud.ecs.EcsDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultEcsDisk = new EcsDisk("defaultEcsDisk", EcsDiskArgs.builder()
     *             .zoneId(default_.zones()[0].id())
     *             .diskName("terraform-example")
     *             .description("terraform-example")
     *             .category("cloud_efficiency")
     *             .size(30)
     *             .tags(Map.of("Name", "terraform-example"))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsDisks(GetEcsDisksArgs.builder()
     *             .ids(defaultEcsDisk.id())
     *             .build());
     * 
     *         ctx.export("ecsDiskId0", ids.applyValue(_ids -> _ids.disks()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsDisksResult> getEcsDisksPlain(GetEcsDisksPlainArgs args) {
        return getEcsDisksPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Disks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.122.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsDisk;
     * import com.pulumi.alicloud.ecs.EcsDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultEcsDisk = new EcsDisk("defaultEcsDisk", EcsDiskArgs.builder()
     *             .zoneId(default_.zones()[0].id())
     *             .diskName("terraform-example")
     *             .description("terraform-example")
     *             .category("cloud_efficiency")
     *             .size(30)
     *             .tags(Map.of("Name", "terraform-example"))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsDisks(GetEcsDisksArgs.builder()
     *             .ids(defaultEcsDisk.id())
     *             .build());
     * 
     *         ctx.export("ecsDiskId0", ids.applyValue(_ids -> _ids.disks()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsDisksResult> getEcsDisks(GetEcsDisksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsDisks:getEcsDisks", TypeShape.of(GetEcsDisksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Disks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.122.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsDisk;
     * import com.pulumi.alicloud.ecs.EcsDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultEcsDisk = new EcsDisk("defaultEcsDisk", EcsDiskArgs.builder()
     *             .zoneId(default_.zones()[0].id())
     *             .diskName("terraform-example")
     *             .description("terraform-example")
     *             .category("cloud_efficiency")
     *             .size(30)
     *             .tags(Map.of("Name", "terraform-example"))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsDisks(GetEcsDisksArgs.builder()
     *             .ids(defaultEcsDisk.id())
     *             .build());
     * 
     *         ctx.export("ecsDiskId0", ids.applyValue(_ids -> _ids.disks()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsDisksResult> getEcsDisks(GetEcsDisksArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsDisks:getEcsDisks", TypeShape.of(GetEcsDisksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Disks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.122.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsDisk;
     * import com.pulumi.alicloud.ecs.EcsDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var defaultEcsDisk = new EcsDisk("defaultEcsDisk", EcsDiskArgs.builder()
     *             .zoneId(default_.zones()[0].id())
     *             .diskName("terraform-example")
     *             .description("terraform-example")
     *             .category("cloud_efficiency")
     *             .size(30)
     *             .tags(Map.of("Name", "terraform-example"))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsDisks(GetEcsDisksArgs.builder()
     *             .ids(defaultEcsDisk.id())
     *             .build());
     * 
     *         ctx.export("ecsDiskId0", ids.applyValue(_ids -> _ids.disks()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsDisksResult> getEcsDisksPlain(GetEcsDisksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsDisks:getEcsDisks", TypeShape.of(GetEcsDisksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Image Components of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.159.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImageComponentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsImageComponentId1", ids.components()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .nameRegex("^my-ImageComponent")
     *             .build());
     * 
     *         ctx.export("ecsImageComponentId2", nameRegex.components()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsImageComponentsResult> getEcsImageComponents() {
        return getEcsImageComponents(GetEcsImageComponentsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Image Components of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.159.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImageComponentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsImageComponentId1", ids.components()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .nameRegex("^my-ImageComponent")
     *             .build());
     * 
     *         ctx.export("ecsImageComponentId2", nameRegex.components()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsImageComponentsResult> getEcsImageComponentsPlain() {
        return getEcsImageComponentsPlain(GetEcsImageComponentsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Image Components of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.159.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImageComponentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsImageComponentId1", ids.components()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .nameRegex("^my-ImageComponent")
     *             .build());
     * 
     *         ctx.export("ecsImageComponentId2", nameRegex.components()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsImageComponentsResult> getEcsImageComponents(GetEcsImageComponentsArgs args) {
        return getEcsImageComponents(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Image Components of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.159.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImageComponentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsImageComponentId1", ids.components()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .nameRegex("^my-ImageComponent")
     *             .build());
     * 
     *         ctx.export("ecsImageComponentId2", nameRegex.components()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsImageComponentsResult> getEcsImageComponentsPlain(GetEcsImageComponentsPlainArgs args) {
        return getEcsImageComponentsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Image Components of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.159.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImageComponentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsImageComponentId1", ids.components()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .nameRegex("^my-ImageComponent")
     *             .build());
     * 
     *         ctx.export("ecsImageComponentId2", nameRegex.components()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsImageComponentsResult> getEcsImageComponents(GetEcsImageComponentsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsImageComponents:getEcsImageComponents", TypeShape.of(GetEcsImageComponentsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Image Components of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.159.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImageComponentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsImageComponentId1", ids.components()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .nameRegex("^my-ImageComponent")
     *             .build());
     * 
     *         ctx.export("ecsImageComponentId2", nameRegex.components()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsImageComponentsResult> getEcsImageComponents(GetEcsImageComponentsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsImageComponents:getEcsImageComponents", TypeShape.of(GetEcsImageComponentsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Image Components of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.159.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImageComponentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("ecsImageComponentId1", ids.components()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsImageComponents(GetEcsImageComponentsArgs.builder()
     *             .nameRegex("^my-ImageComponent")
     *             .build());
     * 
     *         ctx.export("ecsImageComponentId2", nameRegex.components()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsImageComponentsResult> getEcsImageComponentsPlain(GetEcsImageComponentsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsImageComponents:getEcsImageComponents", TypeShape.of(GetEcsImageComponentsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Image Pipelines of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.163.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImagePipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .ids("example_value")
     *             .build());
     * 
     *         ctx.export("ecsImagePipelineId1", ids.pipelines()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .nameRegex("^my-ImagePipeline")
     *             .build());
     * 
     *         ctx.export("ecsImagePipelineId2", nameRegex.pipelines()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsImagePipelineResult> getEcsImagePipeline() {
        return getEcsImagePipeline(GetEcsImagePipelineArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Image Pipelines of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.163.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImagePipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .ids("example_value")
     *             .build());
     * 
     *         ctx.export("ecsImagePipelineId1", ids.pipelines()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .nameRegex("^my-ImagePipeline")
     *             .build());
     * 
     *         ctx.export("ecsImagePipelineId2", nameRegex.pipelines()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsImagePipelineResult> getEcsImagePipelinePlain() {
        return getEcsImagePipelinePlain(GetEcsImagePipelinePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Image Pipelines of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.163.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImagePipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .ids("example_value")
     *             .build());
     * 
     *         ctx.export("ecsImagePipelineId1", ids.pipelines()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .nameRegex("^my-ImagePipeline")
     *             .build());
     * 
     *         ctx.export("ecsImagePipelineId2", nameRegex.pipelines()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsImagePipelineResult> getEcsImagePipeline(GetEcsImagePipelineArgs args) {
        return getEcsImagePipeline(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Image Pipelines of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.163.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImagePipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .ids("example_value")
     *             .build());
     * 
     *         ctx.export("ecsImagePipelineId1", ids.pipelines()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .nameRegex("^my-ImagePipeline")
     *             .build());
     * 
     *         ctx.export("ecsImagePipelineId2", nameRegex.pipelines()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsImagePipelineResult> getEcsImagePipelinePlain(GetEcsImagePipelinePlainArgs args) {
        return getEcsImagePipelinePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Image Pipelines of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.163.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImagePipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .ids("example_value")
     *             .build());
     * 
     *         ctx.export("ecsImagePipelineId1", ids.pipelines()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .nameRegex("^my-ImagePipeline")
     *             .build());
     * 
     *         ctx.export("ecsImagePipelineId2", nameRegex.pipelines()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsImagePipelineResult> getEcsImagePipeline(GetEcsImagePipelineArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsImagePipeline:getEcsImagePipeline", TypeShape.of(GetEcsImagePipelineResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Image Pipelines of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.163.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImagePipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .ids("example_value")
     *             .build());
     * 
     *         ctx.export("ecsImagePipelineId1", ids.pipelines()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .nameRegex("^my-ImagePipeline")
     *             .build());
     * 
     *         ctx.export("ecsImagePipelineId2", nameRegex.pipelines()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsImagePipelineResult> getEcsImagePipeline(GetEcsImagePipelineArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsImagePipeline:getEcsImagePipeline", TypeShape.of(GetEcsImagePipelineResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Image Pipelines of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.163.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsImagePipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .ids("example_value")
     *             .build());
     * 
     *         ctx.export("ecsImagePipelineId1", ids.pipelines()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsImagePipeline(GetEcsImagePipelineArgs.builder()
     *             .nameRegex("^my-ImagePipeline")
     *             .build());
     * 
     *         ctx.export("ecsImagePipelineId2", nameRegex.pipelines()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsImagePipelineResult> getEcsImagePipelinePlain(GetEcsImagePipelinePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsImagePipeline:getEcsImagePipeline", TypeShape.of(GetEcsImagePipelineResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Invocations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.168.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsInvocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsInvocations(GetEcsInvocationsArgs.builder()
     *             .ids("example-id")
     *             .build());
     * 
     *         ctx.export("ecsInvocationId1", ids.invocations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsInvocationsResult> getEcsInvocations() {
        return getEcsInvocations(GetEcsInvocationsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Invocations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.168.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsInvocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsInvocations(GetEcsInvocationsArgs.builder()
     *             .ids("example-id")
     *             .build());
     * 
     *         ctx.export("ecsInvocationId1", ids.invocations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsInvocationsResult> getEcsInvocationsPlain() {
        return getEcsInvocationsPlain(GetEcsInvocationsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Invocations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.168.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsInvocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsInvocations(GetEcsInvocationsArgs.builder()
     *             .ids("example-id")
     *             .build());
     * 
     *         ctx.export("ecsInvocationId1", ids.invocations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsInvocationsResult> getEcsInvocations(GetEcsInvocationsArgs args) {
        return getEcsInvocations(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Invocations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.168.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsInvocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsInvocations(GetEcsInvocationsArgs.builder()
     *             .ids("example-id")
     *             .build());
     * 
     *         ctx.export("ecsInvocationId1", ids.invocations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsInvocationsResult> getEcsInvocationsPlain(GetEcsInvocationsPlainArgs args) {
        return getEcsInvocationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Invocations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.168.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsInvocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsInvocations(GetEcsInvocationsArgs.builder()
     *             .ids("example-id")
     *             .build());
     * 
     *         ctx.export("ecsInvocationId1", ids.invocations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsInvocationsResult> getEcsInvocations(GetEcsInvocationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsInvocations:getEcsInvocations", TypeShape.of(GetEcsInvocationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Invocations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.168.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsInvocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsInvocations(GetEcsInvocationsArgs.builder()
     *             .ids("example-id")
     *             .build());
     * 
     *         ctx.export("ecsInvocationId1", ids.invocations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsInvocationsResult> getEcsInvocations(GetEcsInvocationsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsInvocations:getEcsInvocations", TypeShape.of(GetEcsInvocationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Invocations of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.168.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsInvocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsInvocations(GetEcsInvocationsArgs.builder()
     *             .ids("example-id")
     *             .build());
     * 
     *         ctx.export("ecsInvocationId1", ids.invocations()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsInvocationsResult> getEcsInvocationsPlain(GetEcsInvocationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsInvocations:getEcsInvocations", TypeShape.of(GetEcsInvocationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Key Pairs of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.121.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.ecs.EcsKeyPair;
     * import com.pulumi.alicloud.ecs.EcsKeyPairArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .build());
     * 
     *         var defaultEcsKeyPair = new EcsKeyPair("defaultEcsKeyPair", EcsKeyPairArgs.builder()
     *             .keyPairName(name)
     *             .publicKey("ssh-rsa AAAAB3Nza12345678qwertyuudsfsg")
     *             .resourceGroupId(default_.ids()[1])
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "KeyPair")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsKeyPairs(GetEcsKeyPairsArgs.builder()
     *             .ids(defaultEcsKeyPair.id())
     *             .build());
     * 
     *         ctx.export("ecsKeyPairId0", ids.applyValue(_ids -> _ids.pairs()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsKeyPairsResult> getEcsKeyPairs() {
        return getEcsKeyPairs(GetEcsKeyPairsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Key Pairs of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.121.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.ecs.EcsKeyPair;
     * import com.pulumi.alicloud.ecs.EcsKeyPairArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .build());
     * 
     *         var defaultEcsKeyPair = new EcsKeyPair("defaultEcsKeyPair", EcsKeyPairArgs.builder()
     *             .keyPairName(name)
     *             .publicKey("ssh-rsa AAAAB3Nza12345678qwertyuudsfsg")
     *             .resourceGroupId(default_.ids()[1])
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "KeyPair")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsKeyPairs(GetEcsKeyPairsArgs.builder()
     *             .ids(defaultEcsKeyPair.id())
     *             .build());
     * 
     *         ctx.export("ecsKeyPairId0", ids.applyValue(_ids -> _ids.pairs()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsKeyPairsResult> getEcsKeyPairsPlain() {
        return getEcsKeyPairsPlain(GetEcsKeyPairsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Key Pairs of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.121.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.ecs.EcsKeyPair;
     * import com.pulumi.alicloud.ecs.EcsKeyPairArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .build());
     * 
     *         var defaultEcsKeyPair = new EcsKeyPair("defaultEcsKeyPair", EcsKeyPairArgs.builder()
     *             .keyPairName(name)
     *             .publicKey("ssh-rsa AAAAB3Nza12345678qwertyuudsfsg")
     *             .resourceGroupId(default_.ids()[1])
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "KeyPair")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsKeyPairs(GetEcsKeyPairsArgs.builder()
     *             .ids(defaultEcsKeyPair.id())
     *             .build());
     * 
     *         ctx.export("ecsKeyPairId0", ids.applyValue(_ids -> _ids.pairs()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsKeyPairsResult> getEcsKeyPairs(GetEcsKeyPairsArgs args) {
        return getEcsKeyPairs(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Key Pairs of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.121.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.ecs.EcsKeyPair;
     * import com.pulumi.alicloud.ecs.EcsKeyPairArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .build());
     * 
     *         var defaultEcsKeyPair = new EcsKeyPair("defaultEcsKeyPair", EcsKeyPairArgs.builder()
     *             .keyPairName(name)
     *             .publicKey("ssh-rsa AAAAB3Nza12345678qwertyuudsfsg")
     *             .resourceGroupId(default_.ids()[1])
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "KeyPair")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsKeyPairs(GetEcsKeyPairsArgs.builder()
     *             .ids(defaultEcsKeyPair.id())
     *             .build());
     * 
     *         ctx.export("ecsKeyPairId0", ids.applyValue(_ids -> _ids.pairs()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsKeyPairsResult> getEcsKeyPairsPlain(GetEcsKeyPairsPlainArgs args) {
        return getEcsKeyPairsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Key Pairs of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.121.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.ecs.EcsKeyPair;
     * import com.pulumi.alicloud.ecs.EcsKeyPairArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .build());
     * 
     *         var defaultEcsKeyPair = new EcsKeyPair("defaultEcsKeyPair", EcsKeyPairArgs.builder()
     *             .keyPairName(name)
     *             .publicKey("ssh-rsa AAAAB3Nza12345678qwertyuudsfsg")
     *             .resourceGroupId(default_.ids()[1])
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "KeyPair")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsKeyPairs(GetEcsKeyPairsArgs.builder()
     *             .ids(defaultEcsKeyPair.id())
     *             .build());
     * 
     *         ctx.export("ecsKeyPairId0", ids.applyValue(_ids -> _ids.pairs()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsKeyPairsResult> getEcsKeyPairs(GetEcsKeyPairsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsKeyPairs:getEcsKeyPairs", TypeShape.of(GetEcsKeyPairsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Key Pairs of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.121.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.ecs.EcsKeyPair;
     * import com.pulumi.alicloud.ecs.EcsKeyPairArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .build());
     * 
     *         var defaultEcsKeyPair = new EcsKeyPair("defaultEcsKeyPair", EcsKeyPairArgs.builder()
     *             .keyPairName(name)
     *             .publicKey("ssh-rsa AAAAB3Nza12345678qwertyuudsfsg")
     *             .resourceGroupId(default_.ids()[1])
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "KeyPair")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsKeyPairs(GetEcsKeyPairsArgs.builder()
     *             .ids(defaultEcsKeyPair.id())
     *             .build());
     * 
     *         ctx.export("ecsKeyPairId0", ids.applyValue(_ids -> _ids.pairs()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsKeyPairsResult> getEcsKeyPairs(GetEcsKeyPairsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsKeyPairs:getEcsKeyPairs", TypeShape.of(GetEcsKeyPairsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Key Pairs of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.121.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.ecs.EcsKeyPair;
     * import com.pulumi.alicloud.ecs.EcsKeyPairArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .build());
     * 
     *         var defaultEcsKeyPair = new EcsKeyPair("defaultEcsKeyPair", EcsKeyPairArgs.builder()
     *             .keyPairName(name)
     *             .publicKey("ssh-rsa AAAAB3Nza12345678qwertyuudsfsg")
     *             .resourceGroupId(default_.ids()[1])
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "KeyPair")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsKeyPairs(GetEcsKeyPairsArgs.builder()
     *             .ids(defaultEcsKeyPair.id())
     *             .build());
     * 
     *         ctx.export("ecsKeyPairId0", ids.applyValue(_ids -> _ids.pairs()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsKeyPairsResult> getEcsKeyPairsPlain(GetEcsKeyPairsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsKeyPairs:getEcsKeyPairs", TypeShape.of(GetEcsKeyPairsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Launch Templates of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.120.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.EcsLaunchTemplate;
     * import com.pulumi.alicloud.ecs.EcsLaunchTemplateArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateSystemDiskArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateNetworkInterfacesArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateDataDiskArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsLaunchTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_18.*64")
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName("terraform-example")
     *             .cidrBlock("172.17.3.0/24")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName("terraform-example")
     *             .cidrBlock("172.17.3.0/24")
     *             .vpcId(defaultNetwork.id())
     *             .zoneId(default_.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name("terraform-example")
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultEcsLaunchTemplate = new EcsLaunchTemplate("defaultEcsLaunchTemplate", EcsLaunchTemplateArgs.builder()
     *             .launchTemplateName("terraform-example")
     *             .description("terraform-example")
     *             .imageId(defaultGetImages.images()[0].id())
     *             .hostName("terraform-example")
     *             .instanceChargeType("PrePaid")
     *             .instanceName("terraform-example")
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .internetChargeType("PayByBandwidth")
     *             .internetMaxBandwidthIn(5)
     *             .internetMaxBandwidthOut(5)
     *             .ioOptimized("optimized")
     *             .keyPairName("key_pair_name")
     *             .ramRoleName("ram_role_name")
     *             .networkType("vpc")
     *             .securityEnhancementStrategy("Active")
     *             .spotPriceLimit(5.0)
     *             .spotStrategy("SpotWithPriceLimit")
     *             .securityGroupIds(defaultSecurityGroup.id())
     *             .systemDisk(EcsLaunchTemplateSystemDiskArgs.builder()
     *                 .category("cloud_ssd")
     *                 .description("Test For Terraform")
     *                 .name("terraform-example")
     *                 .size(40)
     *                 .deleteWithInstance(false)
     *                 .build())
     *             .userData("xxxxxxx")
     *             .vswitchId(defaultSwitch.id())
     *             .vpcId(defaultNetwork.id())
     *             .zoneId(default_.zones()[0].id())
     *             .templateTags(Map.ofEntries(
     *                 Map.entry("Create", "Terraform"),
     *                 Map.entry("For", "example")
     *             ))
     *             .networkInterfaces(EcsLaunchTemplateNetworkInterfacesArgs.builder()
     *                 .name("eth0")
     *                 .description("hello1")
     *                 .primaryIp("10.0.0.2")
     *                 .securityGroupId(defaultSecurityGroup.id())
     *                 .vswitchId(defaultSwitch.id())
     *                 .build())
     *             .dataDisks(            
     *                 EcsLaunchTemplateDataDiskArgs.builder()
     *                     .name("disk1")
     *                     .description("description")
     *                     .deleteWithInstance(true)
     *                     .category("cloud")
     *                     .encrypted(false)
     *                     .performanceLevel("PL0")
     *                     .size(20)
     *                     .build(),
     *                 EcsLaunchTemplateDataDiskArgs.builder()
     *                     .name("disk2")
     *                     .description("description2")
     *                     .deleteWithInstance(true)
     *                     .category("cloud")
     *                     .encrypted(false)
     *                     .performanceLevel("PL0")
     *                     .size(20)
     *                     .build())
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsLaunchTemplates(GetEcsLaunchTemplatesArgs.builder()
     *             .ids(defaultEcsLaunchTemplate.id())
     *             .build());
     * 
     *         ctx.export("ecsLaunchTemplateId0", ids.applyValue(_ids -> _ids.templates()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsLaunchTemplatesResult> getEcsLaunchTemplates() {
        return getEcsLaunchTemplates(GetEcsLaunchTemplatesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Launch Templates of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.120.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.EcsLaunchTemplate;
     * import com.pulumi.alicloud.ecs.EcsLaunchTemplateArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateSystemDiskArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateNetworkInterfacesArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateDataDiskArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsLaunchTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_18.*64")
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName("terraform-example")
     *             .cidrBlock("172.17.3.0/24")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName("terraform-example")
     *             .cidrBlock("172.17.3.0/24")
     *             .vpcId(defaultNetwork.id())
     *             .zoneId(default_.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name("terraform-example")
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultEcsLaunchTemplate = new EcsLaunchTemplate("defaultEcsLaunchTemplate", EcsLaunchTemplateArgs.builder()
     *             .launchTemplateName("terraform-example")
     *             .description("terraform-example")
     *             .imageId(defaultGetImages.images()[0].id())
     *             .hostName("terraform-example")
     *             .instanceChargeType("PrePaid")
     *             .instanceName("terraform-example")
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .internetChargeType("PayByBandwidth")
     *             .internetMaxBandwidthIn(5)
     *             .internetMaxBandwidthOut(5)
     *             .ioOptimized("optimized")
     *             .keyPairName("key_pair_name")
     *             .ramRoleName("ram_role_name")
     *             .networkType("vpc")
     *             .securityEnhancementStrategy("Active")
     *             .spotPriceLimit(5.0)
     *             .spotStrategy("SpotWithPriceLimit")
     *             .securityGroupIds(defaultSecurityGroup.id())
     *             .systemDisk(EcsLaunchTemplateSystemDiskArgs.builder()
     *                 .category("cloud_ssd")
     *                 .description("Test For Terraform")
     *                 .name("terraform-example")
     *                 .size(40)
     *                 .deleteWithInstance(false)
     *                 .build())
     *             .userData("xxxxxxx")
     *             .vswitchId(defaultSwitch.id())
     *             .vpcId(defaultNetwork.id())
     *             .zoneId(default_.zones()[0].id())
     *             .templateTags(Map.ofEntries(
     *                 Map.entry("Create", "Terraform"),
     *                 Map.entry("For", "example")
     *             ))
     *             .networkInterfaces(EcsLaunchTemplateNetworkInterfacesArgs.builder()
     *                 .name("eth0")
     *                 .description("hello1")
     *                 .primaryIp("10.0.0.2")
     *                 .securityGroupId(defaultSecurityGroup.id())
     *                 .vswitchId(defaultSwitch.id())
     *                 .build())
     *             .dataDisks(            
     *                 EcsLaunchTemplateDataDiskArgs.builder()
     *                     .name("disk1")
     *                     .description("description")
     *                     .deleteWithInstance(true)
     *                     .category("cloud")
     *                     .encrypted(false)
     *                     .performanceLevel("PL0")
     *                     .size(20)
     *                     .build(),
     *                 EcsLaunchTemplateDataDiskArgs.builder()
     *                     .name("disk2")
     *                     .description("description2")
     *                     .deleteWithInstance(true)
     *                     .category("cloud")
     *                     .encrypted(false)
     *                     .performanceLevel("PL0")
     *                     .size(20)
     *                     .build())
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsLaunchTemplates(GetEcsLaunchTemplatesArgs.builder()
     *             .ids(defaultEcsLaunchTemplate.id())
     *             .build());
     * 
     *         ctx.export("ecsLaunchTemplateId0", ids.applyValue(_ids -> _ids.templates()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsLaunchTemplatesResult> getEcsLaunchTemplatesPlain() {
        return getEcsLaunchTemplatesPlain(GetEcsLaunchTemplatesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Launch Templates of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.120.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.EcsLaunchTemplate;
     * import com.pulumi.alicloud.ecs.EcsLaunchTemplateArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateSystemDiskArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateNetworkInterfacesArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateDataDiskArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsLaunchTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_18.*64")
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName("terraform-example")
     *             .cidrBlock("172.17.3.0/24")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName("terraform-example")
     *             .cidrBlock("172.17.3.0/24")
     *             .vpcId(defaultNetwork.id())
     *             .zoneId(default_.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name("terraform-example")
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultEcsLaunchTemplate = new EcsLaunchTemplate("defaultEcsLaunchTemplate", EcsLaunchTemplateArgs.builder()
     *             .launchTemplateName("terraform-example")
     *             .description("terraform-example")
     *             .imageId(defaultGetImages.images()[0].id())
     *             .hostName("terraform-example")
     *             .instanceChargeType("PrePaid")
     *             .instanceName("terraform-example")
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .internetChargeType("PayByBandwidth")
     *             .internetMaxBandwidthIn(5)
     *             .internetMaxBandwidthOut(5)
     *             .ioOptimized("optimized")
     *             .keyPairName("key_pair_name")
     *             .ramRoleName("ram_role_name")
     *             .networkType("vpc")
     *             .securityEnhancementStrategy("Active")
     *             .spotPriceLimit(5.0)
     *             .spotStrategy("SpotWithPriceLimit")
     *             .securityGroupIds(defaultSecurityGroup.id())
     *             .systemDisk(EcsLaunchTemplateSystemDiskArgs.builder()
     *                 .category("cloud_ssd")
     *                 .description("Test For Terraform")
     *                 .name("terraform-example")
     *                 .size(40)
     *                 .deleteWithInstance(false)
     *                 .build())
     *             .userData("xxxxxxx")
     *             .vswitchId(defaultSwitch.id())
     *             .vpcId(defaultNetwork.id())
     *             .zoneId(default_.zones()[0].id())
     *             .templateTags(Map.ofEntries(
     *                 Map.entry("Create", "Terraform"),
     *                 Map.entry("For", "example")
     *             ))
     *             .networkInterfaces(EcsLaunchTemplateNetworkInterfacesArgs.builder()
     *                 .name("eth0")
     *                 .description("hello1")
     *                 .primaryIp("10.0.0.2")
     *                 .securityGroupId(defaultSecurityGroup.id())
     *                 .vswitchId(defaultSwitch.id())
     *                 .build())
     *             .dataDisks(            
     *                 EcsLaunchTemplateDataDiskArgs.builder()
     *                     .name("disk1")
     *                     .description("description")
     *                     .deleteWithInstance(true)
     *                     .category("cloud")
     *                     .encrypted(false)
     *                     .performanceLevel("PL0")
     *                     .size(20)
     *                     .build(),
     *                 EcsLaunchTemplateDataDiskArgs.builder()
     *                     .name("disk2")
     *                     .description("description2")
     *                     .deleteWithInstance(true)
     *                     .category("cloud")
     *                     .encrypted(false)
     *                     .performanceLevel("PL0")
     *                     .size(20)
     *                     .build())
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsLaunchTemplates(GetEcsLaunchTemplatesArgs.builder()
     *             .ids(defaultEcsLaunchTemplate.id())
     *             .build());
     * 
     *         ctx.export("ecsLaunchTemplateId0", ids.applyValue(_ids -> _ids.templates()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsLaunchTemplatesResult> getEcsLaunchTemplates(GetEcsLaunchTemplatesArgs args) {
        return getEcsLaunchTemplates(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Launch Templates of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.120.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.EcsLaunchTemplate;
     * import com.pulumi.alicloud.ecs.EcsLaunchTemplateArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateSystemDiskArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateNetworkInterfacesArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateDataDiskArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsLaunchTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_18.*64")
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName("terraform-example")
     *             .cidrBlock("172.17.3.0/24")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName("terraform-example")
     *             .cidrBlock("172.17.3.0/24")
     *             .vpcId(defaultNetwork.id())
     *             .zoneId(default_.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name("terraform-example")
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultEcsLaunchTemplate = new EcsLaunchTemplate("defaultEcsLaunchTemplate", EcsLaunchTemplateArgs.builder()
     *             .launchTemplateName("terraform-example")
     *             .description("terraform-example")
     *             .imageId(defaultGetImages.images()[0].id())
     *             .hostName("terraform-example")
     *             .instanceChargeType("PrePaid")
     *             .instanceName("terraform-example")
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .internetChargeType("PayByBandwidth")
     *             .internetMaxBandwidthIn(5)
     *             .internetMaxBandwidthOut(5)
     *             .ioOptimized("optimized")
     *             .keyPairName("key_pair_name")
     *             .ramRoleName("ram_role_name")
     *             .networkType("vpc")
     *             .securityEnhancementStrategy("Active")
     *             .spotPriceLimit(5.0)
     *             .spotStrategy("SpotWithPriceLimit")
     *             .securityGroupIds(defaultSecurityGroup.id())
     *             .systemDisk(EcsLaunchTemplateSystemDiskArgs.builder()
     *                 .category("cloud_ssd")
     *                 .description("Test For Terraform")
     *                 .name("terraform-example")
     *                 .size(40)
     *                 .deleteWithInstance(false)
     *                 .build())
     *             .userData("xxxxxxx")
     *             .vswitchId(defaultSwitch.id())
     *             .vpcId(defaultNetwork.id())
     *             .zoneId(default_.zones()[0].id())
     *             .templateTags(Map.ofEntries(
     *                 Map.entry("Create", "Terraform"),
     *                 Map.entry("For", "example")
     *             ))
     *             .networkInterfaces(EcsLaunchTemplateNetworkInterfacesArgs.builder()
     *                 .name("eth0")
     *                 .description("hello1")
     *                 .primaryIp("10.0.0.2")
     *                 .securityGroupId(defaultSecurityGroup.id())
     *                 .vswitchId(defaultSwitch.id())
     *                 .build())
     *             .dataDisks(            
     *                 EcsLaunchTemplateDataDiskArgs.builder()
     *                     .name("disk1")
     *                     .description("description")
     *                     .deleteWithInstance(true)
     *                     .category("cloud")
     *                     .encrypted(false)
     *                     .performanceLevel("PL0")
     *                     .size(20)
     *                     .build(),
     *                 EcsLaunchTemplateDataDiskArgs.builder()
     *                     .name("disk2")
     *                     .description("description2")
     *                     .deleteWithInstance(true)
     *                     .category("cloud")
     *                     .encrypted(false)
     *                     .performanceLevel("PL0")
     *                     .size(20)
     *                     .build())
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsLaunchTemplates(GetEcsLaunchTemplatesArgs.builder()
     *             .ids(defaultEcsLaunchTemplate.id())
     *             .build());
     * 
     *         ctx.export("ecsLaunchTemplateId0", ids.applyValue(_ids -> _ids.templates()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsLaunchTemplatesResult> getEcsLaunchTemplatesPlain(GetEcsLaunchTemplatesPlainArgs args) {
        return getEcsLaunchTemplatesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Launch Templates of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.120.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.EcsLaunchTemplate;
     * import com.pulumi.alicloud.ecs.EcsLaunchTemplateArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateSystemDiskArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateNetworkInterfacesArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateDataDiskArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsLaunchTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_18.*64")
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName("terraform-example")
     *             .cidrBlock("172.17.3.0/24")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName("terraform-example")
     *             .cidrBlock("172.17.3.0/24")
     *             .vpcId(defaultNetwork.id())
     *             .zoneId(default_.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name("terraform-example")
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultEcsLaunchTemplate = new EcsLaunchTemplate("defaultEcsLaunchTemplate", EcsLaunchTemplateArgs.builder()
     *             .launchTemplateName("terraform-example")
     *             .description("terraform-example")
     *             .imageId(defaultGetImages.images()[0].id())
     *             .hostName("terraform-example")
     *             .instanceChargeType("PrePaid")
     *             .instanceName("terraform-example")
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .internetChargeType("PayByBandwidth")
     *             .internetMaxBandwidthIn(5)
     *             .internetMaxBandwidthOut(5)
     *             .ioOptimized("optimized")
     *             .keyPairName("key_pair_name")
     *             .ramRoleName("ram_role_name")
     *             .networkType("vpc")
     *             .securityEnhancementStrategy("Active")
     *             .spotPriceLimit(5.0)
     *             .spotStrategy("SpotWithPriceLimit")
     *             .securityGroupIds(defaultSecurityGroup.id())
     *             .systemDisk(EcsLaunchTemplateSystemDiskArgs.builder()
     *                 .category("cloud_ssd")
     *                 .description("Test For Terraform")
     *                 .name("terraform-example")
     *                 .size(40)
     *                 .deleteWithInstance(false)
     *                 .build())
     *             .userData("xxxxxxx")
     *             .vswitchId(defaultSwitch.id())
     *             .vpcId(defaultNetwork.id())
     *             .zoneId(default_.zones()[0].id())
     *             .templateTags(Map.ofEntries(
     *                 Map.entry("Create", "Terraform"),
     *                 Map.entry("For", "example")
     *             ))
     *             .networkInterfaces(EcsLaunchTemplateNetworkInterfacesArgs.builder()
     *                 .name("eth0")
     *                 .description("hello1")
     *                 .primaryIp("10.0.0.2")
     *                 .securityGroupId(defaultSecurityGroup.id())
     *                 .vswitchId(defaultSwitch.id())
     *                 .build())
     *             .dataDisks(            
     *                 EcsLaunchTemplateDataDiskArgs.builder()
     *                     .name("disk1")
     *                     .description("description")
     *                     .deleteWithInstance(true)
     *                     .category("cloud")
     *                     .encrypted(false)
     *                     .performanceLevel("PL0")
     *                     .size(20)
     *                     .build(),
     *                 EcsLaunchTemplateDataDiskArgs.builder()
     *                     .name("disk2")
     *                     .description("description2")
     *                     .deleteWithInstance(true)
     *                     .category("cloud")
     *                     .encrypted(false)
     *                     .performanceLevel("PL0")
     *                     .size(20)
     *                     .build())
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsLaunchTemplates(GetEcsLaunchTemplatesArgs.builder()
     *             .ids(defaultEcsLaunchTemplate.id())
     *             .build());
     * 
     *         ctx.export("ecsLaunchTemplateId0", ids.applyValue(_ids -> _ids.templates()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsLaunchTemplatesResult> getEcsLaunchTemplates(GetEcsLaunchTemplatesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsLaunchTemplates:getEcsLaunchTemplates", TypeShape.of(GetEcsLaunchTemplatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Launch Templates of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.120.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.EcsLaunchTemplate;
     * import com.pulumi.alicloud.ecs.EcsLaunchTemplateArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateSystemDiskArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateNetworkInterfacesArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateDataDiskArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsLaunchTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_18.*64")
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName("terraform-example")
     *             .cidrBlock("172.17.3.0/24")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName("terraform-example")
     *             .cidrBlock("172.17.3.0/24")
     *             .vpcId(defaultNetwork.id())
     *             .zoneId(default_.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name("terraform-example")
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultEcsLaunchTemplate = new EcsLaunchTemplate("defaultEcsLaunchTemplate", EcsLaunchTemplateArgs.builder()
     *             .launchTemplateName("terraform-example")
     *             .description("terraform-example")
     *             .imageId(defaultGetImages.images()[0].id())
     *             .hostName("terraform-example")
     *             .instanceChargeType("PrePaid")
     *             .instanceName("terraform-example")
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .internetChargeType("PayByBandwidth")
     *             .internetMaxBandwidthIn(5)
     *             .internetMaxBandwidthOut(5)
     *             .ioOptimized("optimized")
     *             .keyPairName("key_pair_name")
     *             .ramRoleName("ram_role_name")
     *             .networkType("vpc")
     *             .securityEnhancementStrategy("Active")
     *             .spotPriceLimit(5.0)
     *             .spotStrategy("SpotWithPriceLimit")
     *             .securityGroupIds(defaultSecurityGroup.id())
     *             .systemDisk(EcsLaunchTemplateSystemDiskArgs.builder()
     *                 .category("cloud_ssd")
     *                 .description("Test For Terraform")
     *                 .name("terraform-example")
     *                 .size(40)
     *                 .deleteWithInstance(false)
     *                 .build())
     *             .userData("xxxxxxx")
     *             .vswitchId(defaultSwitch.id())
     *             .vpcId(defaultNetwork.id())
     *             .zoneId(default_.zones()[0].id())
     *             .templateTags(Map.ofEntries(
     *                 Map.entry("Create", "Terraform"),
     *                 Map.entry("For", "example")
     *             ))
     *             .networkInterfaces(EcsLaunchTemplateNetworkInterfacesArgs.builder()
     *                 .name("eth0")
     *                 .description("hello1")
     *                 .primaryIp("10.0.0.2")
     *                 .securityGroupId(defaultSecurityGroup.id())
     *                 .vswitchId(defaultSwitch.id())
     *                 .build())
     *             .dataDisks(            
     *                 EcsLaunchTemplateDataDiskArgs.builder()
     *                     .name("disk1")
     *                     .description("description")
     *                     .deleteWithInstance(true)
     *                     .category("cloud")
     *                     .encrypted(false)
     *                     .performanceLevel("PL0")
     *                     .size(20)
     *                     .build(),
     *                 EcsLaunchTemplateDataDiskArgs.builder()
     *                     .name("disk2")
     *                     .description("description2")
     *                     .deleteWithInstance(true)
     *                     .category("cloud")
     *                     .encrypted(false)
     *                     .performanceLevel("PL0")
     *                     .size(20)
     *                     .build())
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsLaunchTemplates(GetEcsLaunchTemplatesArgs.builder()
     *             .ids(defaultEcsLaunchTemplate.id())
     *             .build());
     * 
     *         ctx.export("ecsLaunchTemplateId0", ids.applyValue(_ids -> _ids.templates()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsLaunchTemplatesResult> getEcsLaunchTemplates(GetEcsLaunchTemplatesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsLaunchTemplates:getEcsLaunchTemplates", TypeShape.of(GetEcsLaunchTemplatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Launch Templates of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.120.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.EcsLaunchTemplate;
     * import com.pulumi.alicloud.ecs.EcsLaunchTemplateArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateSystemDiskArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateNetworkInterfacesArgs;
     * import com.pulumi.alicloud.ecs.inputs.EcsLaunchTemplateDataDiskArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsLaunchTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_efficiency")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_18.*64")
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName("terraform-example")
     *             .cidrBlock("172.17.3.0/24")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName("terraform-example")
     *             .cidrBlock("172.17.3.0/24")
     *             .vpcId(defaultNetwork.id())
     *             .zoneId(default_.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name("terraform-example")
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultEcsLaunchTemplate = new EcsLaunchTemplate("defaultEcsLaunchTemplate", EcsLaunchTemplateArgs.builder()
     *             .launchTemplateName("terraform-example")
     *             .description("terraform-example")
     *             .imageId(defaultGetImages.images()[0].id())
     *             .hostName("terraform-example")
     *             .instanceChargeType("PrePaid")
     *             .instanceName("terraform-example")
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .internetChargeType("PayByBandwidth")
     *             .internetMaxBandwidthIn(5)
     *             .internetMaxBandwidthOut(5)
     *             .ioOptimized("optimized")
     *             .keyPairName("key_pair_name")
     *             .ramRoleName("ram_role_name")
     *             .networkType("vpc")
     *             .securityEnhancementStrategy("Active")
     *             .spotPriceLimit(5.0)
     *             .spotStrategy("SpotWithPriceLimit")
     *             .securityGroupIds(defaultSecurityGroup.id())
     *             .systemDisk(EcsLaunchTemplateSystemDiskArgs.builder()
     *                 .category("cloud_ssd")
     *                 .description("Test For Terraform")
     *                 .name("terraform-example")
     *                 .size(40)
     *                 .deleteWithInstance(false)
     *                 .build())
     *             .userData("xxxxxxx")
     *             .vswitchId(defaultSwitch.id())
     *             .vpcId(defaultNetwork.id())
     *             .zoneId(default_.zones()[0].id())
     *             .templateTags(Map.ofEntries(
     *                 Map.entry("Create", "Terraform"),
     *                 Map.entry("For", "example")
     *             ))
     *             .networkInterfaces(EcsLaunchTemplateNetworkInterfacesArgs.builder()
     *                 .name("eth0")
     *                 .description("hello1")
     *                 .primaryIp("10.0.0.2")
     *                 .securityGroupId(defaultSecurityGroup.id())
     *                 .vswitchId(defaultSwitch.id())
     *                 .build())
     *             .dataDisks(            
     *                 EcsLaunchTemplateDataDiskArgs.builder()
     *                     .name("disk1")
     *                     .description("description")
     *                     .deleteWithInstance(true)
     *                     .category("cloud")
     *                     .encrypted(false)
     *                     .performanceLevel("PL0")
     *                     .size(20)
     *                     .build(),
     *                 EcsLaunchTemplateDataDiskArgs.builder()
     *                     .name("disk2")
     *                     .description("description2")
     *                     .deleteWithInstance(true)
     *                     .category("cloud")
     *                     .encrypted(false)
     *                     .performanceLevel("PL0")
     *                     .size(20)
     *                     .build())
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsLaunchTemplates(GetEcsLaunchTemplatesArgs.builder()
     *             .ids(defaultEcsLaunchTemplate.id())
     *             .build());
     * 
     *         ctx.export("ecsLaunchTemplateId0", ids.applyValue(_ids -> _ids.templates()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsLaunchTemplatesResult> getEcsLaunchTemplatesPlain(GetEcsLaunchTemplatesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsLaunchTemplates:getEcsLaunchTemplates", TypeShape.of(GetEcsLaunchTemplatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Network Interface Permissions of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.166.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacePermissionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsNetworkInterfacePermissions(GetEcsNetworkInterfacePermissionsArgs.builder()
     *             .ids("example_value")
     *             .networkInterfaceId("example_value")
     *             .build());
     * 
     *         ctx.export("ecsNetworkInterfacePermissionId1", ids.permissions()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsNetworkInterfacePermissionsResult> getEcsNetworkInterfacePermissions(GetEcsNetworkInterfacePermissionsArgs args) {
        return getEcsNetworkInterfacePermissions(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Network Interface Permissions of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.166.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacePermissionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsNetworkInterfacePermissions(GetEcsNetworkInterfacePermissionsArgs.builder()
     *             .ids("example_value")
     *             .networkInterfaceId("example_value")
     *             .build());
     * 
     *         ctx.export("ecsNetworkInterfacePermissionId1", ids.permissions()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsNetworkInterfacePermissionsResult> getEcsNetworkInterfacePermissionsPlain(GetEcsNetworkInterfacePermissionsPlainArgs args) {
        return getEcsNetworkInterfacePermissionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Network Interface Permissions of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.166.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacePermissionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsNetworkInterfacePermissions(GetEcsNetworkInterfacePermissionsArgs.builder()
     *             .ids("example_value")
     *             .networkInterfaceId("example_value")
     *             .build());
     * 
     *         ctx.export("ecsNetworkInterfacePermissionId1", ids.permissions()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsNetworkInterfacePermissionsResult> getEcsNetworkInterfacePermissions(GetEcsNetworkInterfacePermissionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsNetworkInterfacePermissions:getEcsNetworkInterfacePermissions", TypeShape.of(GetEcsNetworkInterfacePermissionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Network Interface Permissions of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.166.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacePermissionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsNetworkInterfacePermissions(GetEcsNetworkInterfacePermissionsArgs.builder()
     *             .ids("example_value")
     *             .networkInterfaceId("example_value")
     *             .build());
     * 
     *         ctx.export("ecsNetworkInterfacePermissionId1", ids.permissions()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsNetworkInterfacePermissionsResult> getEcsNetworkInterfacePermissions(GetEcsNetworkInterfacePermissionsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsNetworkInterfacePermissions:getEcsNetworkInterfacePermissions", TypeShape.of(GetEcsNetworkInterfacePermissionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Network Interface Permissions of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.166.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacePermissionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsNetworkInterfacePermissions(GetEcsNetworkInterfacePermissionsArgs.builder()
     *             .ids("example_value")
     *             .networkInterfaceId("example_value")
     *             .build());
     * 
     *         ctx.export("ecsNetworkInterfacePermissionId1", ids.permissions()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsNetworkInterfacePermissionsResult> getEcsNetworkInterfacePermissionsPlain(GetEcsNetworkInterfacePermissionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsNetworkInterfacePermissions:getEcsNetworkInterfacePermissions", TypeShape.of(GetEcsNetworkInterfacePermissionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Network Interfaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.123.1.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsNetworkInterfaces(GetEcsNetworkInterfacesArgs.builder()
     *             .nameRegex("eni-ipv6")
     *             .build());
     * 
     *         ctx.export("firstEcsNetworkInterfaceId", example.interfaces()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsNetworkInterfacesResult> getEcsNetworkInterfaces() {
        return getEcsNetworkInterfaces(GetEcsNetworkInterfacesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Network Interfaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.123.1.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsNetworkInterfaces(GetEcsNetworkInterfacesArgs.builder()
     *             .nameRegex("eni-ipv6")
     *             .build());
     * 
     *         ctx.export("firstEcsNetworkInterfaceId", example.interfaces()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsNetworkInterfacesResult> getEcsNetworkInterfacesPlain() {
        return getEcsNetworkInterfacesPlain(GetEcsNetworkInterfacesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Network Interfaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.123.1.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsNetworkInterfaces(GetEcsNetworkInterfacesArgs.builder()
     *             .nameRegex("eni-ipv6")
     *             .build());
     * 
     *         ctx.export("firstEcsNetworkInterfaceId", example.interfaces()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsNetworkInterfacesResult> getEcsNetworkInterfaces(GetEcsNetworkInterfacesArgs args) {
        return getEcsNetworkInterfaces(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Network Interfaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.123.1.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsNetworkInterfaces(GetEcsNetworkInterfacesArgs.builder()
     *             .nameRegex("eni-ipv6")
     *             .build());
     * 
     *         ctx.export("firstEcsNetworkInterfaceId", example.interfaces()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsNetworkInterfacesResult> getEcsNetworkInterfacesPlain(GetEcsNetworkInterfacesPlainArgs args) {
        return getEcsNetworkInterfacesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Network Interfaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.123.1.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsNetworkInterfaces(GetEcsNetworkInterfacesArgs.builder()
     *             .nameRegex("eni-ipv6")
     *             .build());
     * 
     *         ctx.export("firstEcsNetworkInterfaceId", example.interfaces()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsNetworkInterfacesResult> getEcsNetworkInterfaces(GetEcsNetworkInterfacesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsNetworkInterfaces:getEcsNetworkInterfaces", TypeShape.of(GetEcsNetworkInterfacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Network Interfaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.123.1.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsNetworkInterfaces(GetEcsNetworkInterfacesArgs.builder()
     *             .nameRegex("eni-ipv6")
     *             .build());
     * 
     *         ctx.export("firstEcsNetworkInterfaceId", example.interfaces()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsNetworkInterfacesResult> getEcsNetworkInterfaces(GetEcsNetworkInterfacesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsNetworkInterfaces:getEcsNetworkInterfaces", TypeShape.of(GetEcsNetworkInterfacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Network Interfaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.123.1.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsNetworkInterfaces(GetEcsNetworkInterfacesArgs.builder()
     *             .nameRegex("eni-ipv6")
     *             .build());
     * 
     *         ctx.export("firstEcsNetworkInterfaceId", example.interfaces()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsNetworkInterfacesResult> getEcsNetworkInterfacesPlain(GetEcsNetworkInterfacesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsNetworkInterfaces:getEcsNetworkInterfaces", TypeShape.of(GetEcsNetworkInterfacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Prefix Lists of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.152.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsPrefixListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsPrefixLists(GetEcsPrefixListsArgs.builder()
     *             .ids("E2RY53-xxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("outputId", example.lists()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsPrefixListsResult> getEcsPrefixLists() {
        return getEcsPrefixLists(GetEcsPrefixListsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Prefix Lists of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.152.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsPrefixListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsPrefixLists(GetEcsPrefixListsArgs.builder()
     *             .ids("E2RY53-xxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("outputId", example.lists()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsPrefixListsResult> getEcsPrefixListsPlain() {
        return getEcsPrefixListsPlain(GetEcsPrefixListsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Prefix Lists of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.152.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsPrefixListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsPrefixLists(GetEcsPrefixListsArgs.builder()
     *             .ids("E2RY53-xxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("outputId", example.lists()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsPrefixListsResult> getEcsPrefixLists(GetEcsPrefixListsArgs args) {
        return getEcsPrefixLists(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Prefix Lists of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.152.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsPrefixListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsPrefixLists(GetEcsPrefixListsArgs.builder()
     *             .ids("E2RY53-xxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("outputId", example.lists()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsPrefixListsResult> getEcsPrefixListsPlain(GetEcsPrefixListsPlainArgs args) {
        return getEcsPrefixListsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Prefix Lists of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.152.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsPrefixListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsPrefixLists(GetEcsPrefixListsArgs.builder()
     *             .ids("E2RY53-xxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("outputId", example.lists()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsPrefixListsResult> getEcsPrefixLists(GetEcsPrefixListsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsPrefixLists:getEcsPrefixLists", TypeShape.of(GetEcsPrefixListsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Prefix Lists of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.152.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsPrefixListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsPrefixLists(GetEcsPrefixListsArgs.builder()
     *             .ids("E2RY53-xxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("outputId", example.lists()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsPrefixListsResult> getEcsPrefixLists(GetEcsPrefixListsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsPrefixLists:getEcsPrefixLists", TypeShape.of(GetEcsPrefixListsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Prefix Lists of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.152.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsPrefixListsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEcsPrefixLists(GetEcsPrefixListsArgs.builder()
     *             .ids("E2RY53-xxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("outputId", example.lists()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsPrefixListsResult> getEcsPrefixListsPlain(GetEcsPrefixListsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsPrefixLists:getEcsPrefixLists", TypeShape.of(GetEcsPrefixListsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Snapshot Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.160.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .ids("example-id")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId1", ids.groups()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .nameRegex("^my-SnapshotGroup")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId2", nameRegex.groups()[0].id());
     *         final var status = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .status("accomplished")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId3", status.groups()[0].id());
     *         final var instanceId = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .instanceId("example-instance_id")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId4", instanceId.groups()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsSnapshotGroupsResult> getEcsSnapshotGroups() {
        return getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Snapshot Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.160.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .ids("example-id")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId1", ids.groups()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .nameRegex("^my-SnapshotGroup")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId2", nameRegex.groups()[0].id());
     *         final var status = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .status("accomplished")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId3", status.groups()[0].id());
     *         final var instanceId = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .instanceId("example-instance_id")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId4", instanceId.groups()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsSnapshotGroupsResult> getEcsSnapshotGroupsPlain() {
        return getEcsSnapshotGroupsPlain(GetEcsSnapshotGroupsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Snapshot Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.160.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .ids("example-id")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId1", ids.groups()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .nameRegex("^my-SnapshotGroup")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId2", nameRegex.groups()[0].id());
     *         final var status = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .status("accomplished")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId3", status.groups()[0].id());
     *         final var instanceId = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .instanceId("example-instance_id")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId4", instanceId.groups()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsSnapshotGroupsResult> getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs args) {
        return getEcsSnapshotGroups(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Snapshot Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.160.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .ids("example-id")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId1", ids.groups()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .nameRegex("^my-SnapshotGroup")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId2", nameRegex.groups()[0].id());
     *         final var status = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .status("accomplished")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId3", status.groups()[0].id());
     *         final var instanceId = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .instanceId("example-instance_id")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId4", instanceId.groups()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsSnapshotGroupsResult> getEcsSnapshotGroupsPlain(GetEcsSnapshotGroupsPlainArgs args) {
        return getEcsSnapshotGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Snapshot Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.160.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .ids("example-id")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId1", ids.groups()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .nameRegex("^my-SnapshotGroup")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId2", nameRegex.groups()[0].id());
     *         final var status = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .status("accomplished")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId3", status.groups()[0].id());
     *         final var instanceId = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .instanceId("example-instance_id")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId4", instanceId.groups()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsSnapshotGroupsResult> getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsSnapshotGroups:getEcsSnapshotGroups", TypeShape.of(GetEcsSnapshotGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Snapshot Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.160.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .ids("example-id")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId1", ids.groups()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .nameRegex("^my-SnapshotGroup")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId2", nameRegex.groups()[0].id());
     *         final var status = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .status("accomplished")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId3", status.groups()[0].id());
     *         final var instanceId = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .instanceId("example-instance_id")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId4", instanceId.groups()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsSnapshotGroupsResult> getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsSnapshotGroups:getEcsSnapshotGroups", TypeShape.of(GetEcsSnapshotGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Snapshot Groups of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.160.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .ids("example-id")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId1", ids.groups()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .nameRegex("^my-SnapshotGroup")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId2", nameRegex.groups()[0].id());
     *         final var status = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .status("accomplished")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId3", status.groups()[0].id());
     *         final var instanceId = EcsFunctions.getEcsSnapshotGroups(GetEcsSnapshotGroupsArgs.builder()
     *             .instanceId("example-instance_id")
     *             .build());
     * 
     *         ctx.export("ecsSnapshotGroupId4", instanceId.groups()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsSnapshotGroupsResult> getEcsSnapshotGroupsPlain(GetEcsSnapshotGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsSnapshotGroups:getEcsSnapshotGroups", TypeShape.of(GetEcsSnapshotGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.120.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.alicloud.ecs.inputs.InstanceDataDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsDisk;
     * import com.pulumi.alicloud.ecs.EcsDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsDiskAttachment;
     * import com.pulumi.alicloud.ecs.EcsDiskAttachmentArgs;
     * import com.pulumi.alicloud.ecs.EcsSnapshot;
     * import com.pulumi.alicloud.ecs.EcsSnapshotArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .status("OK")
     *             .build());
     * 
     *         final var defaultGetZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_essd")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(defaultGetZones.zones()[0].id())
     *             .imageId(defaultGetImages.images()[0].id())
     *             .systemDiskCategory("cloud_essd")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("192.168.192.0/24")
     *             .zoneId(defaultGetZones.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultInstance = new Instance("defaultInstance", InstanceArgs.builder()
     *             .imageId(defaultGetImages.images()[0].id())
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .securityGroups(defaultSecurityGroup.stream().map(element -> element.id()).collect(toList()))
     *             .internetChargeType("PayByTraffic")
     *             .internetMaxBandwidthOut(10)
     *             .availabilityZone(defaultGetInstanceTypes.instanceTypes()[0].availabilityZones()[0])
     *             .instanceChargeType("PostPaid")
     *             .systemDiskCategory("cloud_essd")
     *             .vswitchId(defaultSwitch.id())
     *             .instanceName(name)
     *             .dataDisks(InstanceDataDiskArgs.builder()
     *                 .category("cloud_essd")
     *                 .size(20)
     *                 .build())
     *             .build());
     * 
     *         var defaultEcsDisk = new EcsDisk("defaultEcsDisk", EcsDiskArgs.builder()
     *             .diskName(name)
     *             .zoneId(defaultGetInstanceTypes.instanceTypes()[0].availabilityZones()[0])
     *             .category("cloud_essd")
     *             .size(500)
     *             .build());
     * 
     *         var defaultEcsDiskAttachment = new EcsDiskAttachment("defaultEcsDiskAttachment", EcsDiskAttachmentArgs.builder()
     *             .diskId(defaultEcsDisk.id())
     *             .instanceId(defaultInstance.id())
     *             .build());
     * 
     *         var defaultEcsSnapshot = new EcsSnapshot("defaultEcsSnapshot", EcsSnapshotArgs.builder()
     *             .diskId(defaultEcsDiskAttachment.diskId())
     *             .category("standard")
     *             .retentionDays(20)
     *             .snapshotName(name)
     *             .description(name)
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Snapshot")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsSnapshots(GetEcsSnapshotsArgs.builder()
     *             .ids(defaultEcsSnapshot.id())
     *             .build());
     * 
     *         ctx.export("ecsSnapshotsId0", ids.applyValue(_ids -> _ids.snapshots()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsSnapshotsResult> getEcsSnapshots() {
        return getEcsSnapshots(GetEcsSnapshotsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.120.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.alicloud.ecs.inputs.InstanceDataDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsDisk;
     * import com.pulumi.alicloud.ecs.EcsDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsDiskAttachment;
     * import com.pulumi.alicloud.ecs.EcsDiskAttachmentArgs;
     * import com.pulumi.alicloud.ecs.EcsSnapshot;
     * import com.pulumi.alicloud.ecs.EcsSnapshotArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .status("OK")
     *             .build());
     * 
     *         final var defaultGetZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_essd")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(defaultGetZones.zones()[0].id())
     *             .imageId(defaultGetImages.images()[0].id())
     *             .systemDiskCategory("cloud_essd")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("192.168.192.0/24")
     *             .zoneId(defaultGetZones.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultInstance = new Instance("defaultInstance", InstanceArgs.builder()
     *             .imageId(defaultGetImages.images()[0].id())
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .securityGroups(defaultSecurityGroup.stream().map(element -> element.id()).collect(toList()))
     *             .internetChargeType("PayByTraffic")
     *             .internetMaxBandwidthOut(10)
     *             .availabilityZone(defaultGetInstanceTypes.instanceTypes()[0].availabilityZones()[0])
     *             .instanceChargeType("PostPaid")
     *             .systemDiskCategory("cloud_essd")
     *             .vswitchId(defaultSwitch.id())
     *             .instanceName(name)
     *             .dataDisks(InstanceDataDiskArgs.builder()
     *                 .category("cloud_essd")
     *                 .size(20)
     *                 .build())
     *             .build());
     * 
     *         var defaultEcsDisk = new EcsDisk("defaultEcsDisk", EcsDiskArgs.builder()
     *             .diskName(name)
     *             .zoneId(defaultGetInstanceTypes.instanceTypes()[0].availabilityZones()[0])
     *             .category("cloud_essd")
     *             .size(500)
     *             .build());
     * 
     *         var defaultEcsDiskAttachment = new EcsDiskAttachment("defaultEcsDiskAttachment", EcsDiskAttachmentArgs.builder()
     *             .diskId(defaultEcsDisk.id())
     *             .instanceId(defaultInstance.id())
     *             .build());
     * 
     *         var defaultEcsSnapshot = new EcsSnapshot("defaultEcsSnapshot", EcsSnapshotArgs.builder()
     *             .diskId(defaultEcsDiskAttachment.diskId())
     *             .category("standard")
     *             .retentionDays(20)
     *             .snapshotName(name)
     *             .description(name)
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Snapshot")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsSnapshots(GetEcsSnapshotsArgs.builder()
     *             .ids(defaultEcsSnapshot.id())
     *             .build());
     * 
     *         ctx.export("ecsSnapshotsId0", ids.applyValue(_ids -> _ids.snapshots()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsSnapshotsResult> getEcsSnapshotsPlain() {
        return getEcsSnapshotsPlain(GetEcsSnapshotsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.120.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.alicloud.ecs.inputs.InstanceDataDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsDisk;
     * import com.pulumi.alicloud.ecs.EcsDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsDiskAttachment;
     * import com.pulumi.alicloud.ecs.EcsDiskAttachmentArgs;
     * import com.pulumi.alicloud.ecs.EcsSnapshot;
     * import com.pulumi.alicloud.ecs.EcsSnapshotArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .status("OK")
     *             .build());
     * 
     *         final var defaultGetZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_essd")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(defaultGetZones.zones()[0].id())
     *             .imageId(defaultGetImages.images()[0].id())
     *             .systemDiskCategory("cloud_essd")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("192.168.192.0/24")
     *             .zoneId(defaultGetZones.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultInstance = new Instance("defaultInstance", InstanceArgs.builder()
     *             .imageId(defaultGetImages.images()[0].id())
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .securityGroups(defaultSecurityGroup.stream().map(element -> element.id()).collect(toList()))
     *             .internetChargeType("PayByTraffic")
     *             .internetMaxBandwidthOut(10)
     *             .availabilityZone(defaultGetInstanceTypes.instanceTypes()[0].availabilityZones()[0])
     *             .instanceChargeType("PostPaid")
     *             .systemDiskCategory("cloud_essd")
     *             .vswitchId(defaultSwitch.id())
     *             .instanceName(name)
     *             .dataDisks(InstanceDataDiskArgs.builder()
     *                 .category("cloud_essd")
     *                 .size(20)
     *                 .build())
     *             .build());
     * 
     *         var defaultEcsDisk = new EcsDisk("defaultEcsDisk", EcsDiskArgs.builder()
     *             .diskName(name)
     *             .zoneId(defaultGetInstanceTypes.instanceTypes()[0].availabilityZones()[0])
     *             .category("cloud_essd")
     *             .size(500)
     *             .build());
     * 
     *         var defaultEcsDiskAttachment = new EcsDiskAttachment("defaultEcsDiskAttachment", EcsDiskAttachmentArgs.builder()
     *             .diskId(defaultEcsDisk.id())
     *             .instanceId(defaultInstance.id())
     *             .build());
     * 
     *         var defaultEcsSnapshot = new EcsSnapshot("defaultEcsSnapshot", EcsSnapshotArgs.builder()
     *             .diskId(defaultEcsDiskAttachment.diskId())
     *             .category("standard")
     *             .retentionDays(20)
     *             .snapshotName(name)
     *             .description(name)
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Snapshot")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsSnapshots(GetEcsSnapshotsArgs.builder()
     *             .ids(defaultEcsSnapshot.id())
     *             .build());
     * 
     *         ctx.export("ecsSnapshotsId0", ids.applyValue(_ids -> _ids.snapshots()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsSnapshotsResult> getEcsSnapshots(GetEcsSnapshotsArgs args) {
        return getEcsSnapshots(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.120.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.alicloud.ecs.inputs.InstanceDataDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsDisk;
     * import com.pulumi.alicloud.ecs.EcsDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsDiskAttachment;
     * import com.pulumi.alicloud.ecs.EcsDiskAttachmentArgs;
     * import com.pulumi.alicloud.ecs.EcsSnapshot;
     * import com.pulumi.alicloud.ecs.EcsSnapshotArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .status("OK")
     *             .build());
     * 
     *         final var defaultGetZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_essd")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(defaultGetZones.zones()[0].id())
     *             .imageId(defaultGetImages.images()[0].id())
     *             .systemDiskCategory("cloud_essd")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("192.168.192.0/24")
     *             .zoneId(defaultGetZones.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultInstance = new Instance("defaultInstance", InstanceArgs.builder()
     *             .imageId(defaultGetImages.images()[0].id())
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .securityGroups(defaultSecurityGroup.stream().map(element -> element.id()).collect(toList()))
     *             .internetChargeType("PayByTraffic")
     *             .internetMaxBandwidthOut(10)
     *             .availabilityZone(defaultGetInstanceTypes.instanceTypes()[0].availabilityZones()[0])
     *             .instanceChargeType("PostPaid")
     *             .systemDiskCategory("cloud_essd")
     *             .vswitchId(defaultSwitch.id())
     *             .instanceName(name)
     *             .dataDisks(InstanceDataDiskArgs.builder()
     *                 .category("cloud_essd")
     *                 .size(20)
     *                 .build())
     *             .build());
     * 
     *         var defaultEcsDisk = new EcsDisk("defaultEcsDisk", EcsDiskArgs.builder()
     *             .diskName(name)
     *             .zoneId(defaultGetInstanceTypes.instanceTypes()[0].availabilityZones()[0])
     *             .category("cloud_essd")
     *             .size(500)
     *             .build());
     * 
     *         var defaultEcsDiskAttachment = new EcsDiskAttachment("defaultEcsDiskAttachment", EcsDiskAttachmentArgs.builder()
     *             .diskId(defaultEcsDisk.id())
     *             .instanceId(defaultInstance.id())
     *             .build());
     * 
     *         var defaultEcsSnapshot = new EcsSnapshot("defaultEcsSnapshot", EcsSnapshotArgs.builder()
     *             .diskId(defaultEcsDiskAttachment.diskId())
     *             .category("standard")
     *             .retentionDays(20)
     *             .snapshotName(name)
     *             .description(name)
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Snapshot")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsSnapshots(GetEcsSnapshotsArgs.builder()
     *             .ids(defaultEcsSnapshot.id())
     *             .build());
     * 
     *         ctx.export("ecsSnapshotsId0", ids.applyValue(_ids -> _ids.snapshots()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsSnapshotsResult> getEcsSnapshotsPlain(GetEcsSnapshotsPlainArgs args) {
        return getEcsSnapshotsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.120.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.alicloud.ecs.inputs.InstanceDataDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsDisk;
     * import com.pulumi.alicloud.ecs.EcsDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsDiskAttachment;
     * import com.pulumi.alicloud.ecs.EcsDiskAttachmentArgs;
     * import com.pulumi.alicloud.ecs.EcsSnapshot;
     * import com.pulumi.alicloud.ecs.EcsSnapshotArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .status("OK")
     *             .build());
     * 
     *         final var defaultGetZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_essd")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(defaultGetZones.zones()[0].id())
     *             .imageId(defaultGetImages.images()[0].id())
     *             .systemDiskCategory("cloud_essd")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("192.168.192.0/24")
     *             .zoneId(defaultGetZones.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultInstance = new Instance("defaultInstance", InstanceArgs.builder()
     *             .imageId(defaultGetImages.images()[0].id())
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .securityGroups(defaultSecurityGroup.stream().map(element -> element.id()).collect(toList()))
     *             .internetChargeType("PayByTraffic")
     *             .internetMaxBandwidthOut(10)
     *             .availabilityZone(defaultGetInstanceTypes.instanceTypes()[0].availabilityZones()[0])
     *             .instanceChargeType("PostPaid")
     *             .systemDiskCategory("cloud_essd")
     *             .vswitchId(defaultSwitch.id())
     *             .instanceName(name)
     *             .dataDisks(InstanceDataDiskArgs.builder()
     *                 .category("cloud_essd")
     *                 .size(20)
     *                 .build())
     *             .build());
     * 
     *         var defaultEcsDisk = new EcsDisk("defaultEcsDisk", EcsDiskArgs.builder()
     *             .diskName(name)
     *             .zoneId(defaultGetInstanceTypes.instanceTypes()[0].availabilityZones()[0])
     *             .category("cloud_essd")
     *             .size(500)
     *             .build());
     * 
     *         var defaultEcsDiskAttachment = new EcsDiskAttachment("defaultEcsDiskAttachment", EcsDiskAttachmentArgs.builder()
     *             .diskId(defaultEcsDisk.id())
     *             .instanceId(defaultInstance.id())
     *             .build());
     * 
     *         var defaultEcsSnapshot = new EcsSnapshot("defaultEcsSnapshot", EcsSnapshotArgs.builder()
     *             .diskId(defaultEcsDiskAttachment.diskId())
     *             .category("standard")
     *             .retentionDays(20)
     *             .snapshotName(name)
     *             .description(name)
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Snapshot")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsSnapshots(GetEcsSnapshotsArgs.builder()
     *             .ids(defaultEcsSnapshot.id())
     *             .build());
     * 
     *         ctx.export("ecsSnapshotsId0", ids.applyValue(_ids -> _ids.snapshots()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsSnapshotsResult> getEcsSnapshots(GetEcsSnapshotsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsSnapshots:getEcsSnapshots", TypeShape.of(GetEcsSnapshotsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.120.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.alicloud.ecs.inputs.InstanceDataDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsDisk;
     * import com.pulumi.alicloud.ecs.EcsDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsDiskAttachment;
     * import com.pulumi.alicloud.ecs.EcsDiskAttachmentArgs;
     * import com.pulumi.alicloud.ecs.EcsSnapshot;
     * import com.pulumi.alicloud.ecs.EcsSnapshotArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .status("OK")
     *             .build());
     * 
     *         final var defaultGetZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_essd")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(defaultGetZones.zones()[0].id())
     *             .imageId(defaultGetImages.images()[0].id())
     *             .systemDiskCategory("cloud_essd")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("192.168.192.0/24")
     *             .zoneId(defaultGetZones.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultInstance = new Instance("defaultInstance", InstanceArgs.builder()
     *             .imageId(defaultGetImages.images()[0].id())
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .securityGroups(defaultSecurityGroup.stream().map(element -> element.id()).collect(toList()))
     *             .internetChargeType("PayByTraffic")
     *             .internetMaxBandwidthOut(10)
     *             .availabilityZone(defaultGetInstanceTypes.instanceTypes()[0].availabilityZones()[0])
     *             .instanceChargeType("PostPaid")
     *             .systemDiskCategory("cloud_essd")
     *             .vswitchId(defaultSwitch.id())
     *             .instanceName(name)
     *             .dataDisks(InstanceDataDiskArgs.builder()
     *                 .category("cloud_essd")
     *                 .size(20)
     *                 .build())
     *             .build());
     * 
     *         var defaultEcsDisk = new EcsDisk("defaultEcsDisk", EcsDiskArgs.builder()
     *             .diskName(name)
     *             .zoneId(defaultGetInstanceTypes.instanceTypes()[0].availabilityZones()[0])
     *             .category("cloud_essd")
     *             .size(500)
     *             .build());
     * 
     *         var defaultEcsDiskAttachment = new EcsDiskAttachment("defaultEcsDiskAttachment", EcsDiskAttachmentArgs.builder()
     *             .diskId(defaultEcsDisk.id())
     *             .instanceId(defaultInstance.id())
     *             .build());
     * 
     *         var defaultEcsSnapshot = new EcsSnapshot("defaultEcsSnapshot", EcsSnapshotArgs.builder()
     *             .diskId(defaultEcsDiskAttachment.diskId())
     *             .category("standard")
     *             .retentionDays(20)
     *             .snapshotName(name)
     *             .description(name)
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Snapshot")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsSnapshots(GetEcsSnapshotsArgs.builder()
     *             .ids(defaultEcsSnapshot.id())
     *             .build());
     * 
     *         ctx.export("ecsSnapshotsId0", ids.applyValue(_ids -> _ids.snapshots()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsSnapshotsResult> getEcsSnapshots(GetEcsSnapshotsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsSnapshots:getEcsSnapshots", TypeShape.of(GetEcsSnapshotsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.120.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
     * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.alicloud.ecs.inputs.InstanceDataDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsDisk;
     * import com.pulumi.alicloud.ecs.EcsDiskArgs;
     * import com.pulumi.alicloud.ecs.EcsDiskAttachment;
     * import com.pulumi.alicloud.ecs.EcsDiskAttachmentArgs;
     * import com.pulumi.alicloud.ecs.EcsSnapshot;
     * import com.pulumi.alicloud.ecs.EcsSnapshotArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
     *             .status("OK")
     *             .build());
     * 
     *         final var defaultGetZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableDiskCategory("cloud_essd")
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(defaultGetZones.zones()[0].id())
     *             .imageId(defaultGetImages.images()[0].id())
     *             .systemDiskCategory("cloud_essd")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("192.168.192.0/24")
     *             .zoneId(defaultGetZones.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultInstance = new Instance("defaultInstance", InstanceArgs.builder()
     *             .imageId(defaultGetImages.images()[0].id())
     *             .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *             .securityGroups(defaultSecurityGroup.stream().map(element -> element.id()).collect(toList()))
     *             .internetChargeType("PayByTraffic")
     *             .internetMaxBandwidthOut(10)
     *             .availabilityZone(defaultGetInstanceTypes.instanceTypes()[0].availabilityZones()[0])
     *             .instanceChargeType("PostPaid")
     *             .systemDiskCategory("cloud_essd")
     *             .vswitchId(defaultSwitch.id())
     *             .instanceName(name)
     *             .dataDisks(InstanceDataDiskArgs.builder()
     *                 .category("cloud_essd")
     *                 .size(20)
     *                 .build())
     *             .build());
     * 
     *         var defaultEcsDisk = new EcsDisk("defaultEcsDisk", EcsDiskArgs.builder()
     *             .diskName(name)
     *             .zoneId(defaultGetInstanceTypes.instanceTypes()[0].availabilityZones()[0])
     *             .category("cloud_essd")
     *             .size(500)
     *             .build());
     * 
     *         var defaultEcsDiskAttachment = new EcsDiskAttachment("defaultEcsDiskAttachment", EcsDiskAttachmentArgs.builder()
     *             .diskId(defaultEcsDisk.id())
     *             .instanceId(defaultInstance.id())
     *             .build());
     * 
     *         var defaultEcsSnapshot = new EcsSnapshot("defaultEcsSnapshot", EcsSnapshotArgs.builder()
     *             .diskId(defaultEcsDiskAttachment.diskId())
     *             .category("standard")
     *             .retentionDays(20)
     *             .snapshotName(name)
     *             .description(name)
     *             .tags(Map.ofEntries(
     *                 Map.entry("Created", "TF"),
     *                 Map.entry("For", "Snapshot")
     *             ))
     *             .build());
     * 
     *         final var ids = EcsFunctions.getEcsSnapshots(GetEcsSnapshotsArgs.builder()
     *             .ids(defaultEcsSnapshot.id())
     *             .build());
     * 
     *         ctx.export("ecsSnapshotsId0", ids.applyValue(_ids -> _ids.snapshots()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsSnapshotsResult> getEcsSnapshotsPlain(GetEcsSnapshotsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsSnapshots:getEcsSnapshots", TypeShape.of(GetEcsSnapshotsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Storage Capacity Units of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.155.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsStorageCapacityUnitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.builder()
     *             .build());
     * 
     *         ctx.export("ecsStorageCapacityUnitId1", ids.units()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.builder()
     *             .nameRegex("^my-StorageCapacityUnit")
     *             .build());
     * 
     *         ctx.export("ecsStorageCapacityUnitId2", nameRegex.units()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsStorageCapacityUnitsResult> getEcsStorageCapacityUnits() {
        return getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Storage Capacity Units of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.155.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsStorageCapacityUnitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.builder()
     *             .build());
     * 
     *         ctx.export("ecsStorageCapacityUnitId1", ids.units()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.builder()
     *             .nameRegex("^my-StorageCapacityUnit")
     *             .build());
     * 
     *         ctx.export("ecsStorageCapacityUnitId2", nameRegex.units()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsStorageCapacityUnitsResult> getEcsStorageCapacityUnitsPlain() {
        return getEcsStorageCapacityUnitsPlain(GetEcsStorageCapacityUnitsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Storage Capacity Units of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.155.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsStorageCapacityUnitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.builder()
     *             .build());
     * 
     *         ctx.export("ecsStorageCapacityUnitId1", ids.units()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.builder()
     *             .nameRegex("^my-StorageCapacityUnit")
     *             .build());
     * 
     *         ctx.export("ecsStorageCapacityUnitId2", nameRegex.units()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsStorageCapacityUnitsResult> getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs args) {
        return getEcsStorageCapacityUnits(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Storage Capacity Units of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.155.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsStorageCapacityUnitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.builder()
     *             .build());
     * 
     *         ctx.export("ecsStorageCapacityUnitId1", ids.units()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.builder()
     *             .nameRegex("^my-StorageCapacityUnit")
     *             .build());
     * 
     *         ctx.export("ecsStorageCapacityUnitId2", nameRegex.units()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsStorageCapacityUnitsResult> getEcsStorageCapacityUnitsPlain(GetEcsStorageCapacityUnitsPlainArgs args) {
        return getEcsStorageCapacityUnitsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Storage Capacity Units of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.155.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsStorageCapacityUnitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.builder()
     *             .build());
     * 
     *         ctx.export("ecsStorageCapacityUnitId1", ids.units()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.builder()
     *             .nameRegex("^my-StorageCapacityUnit")
     *             .build());
     * 
     *         ctx.export("ecsStorageCapacityUnitId2", nameRegex.units()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsStorageCapacityUnitsResult> getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsStorageCapacityUnits:getEcsStorageCapacityUnits", TypeShape.of(GetEcsStorageCapacityUnitsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Storage Capacity Units of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.155.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsStorageCapacityUnitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.builder()
     *             .build());
     * 
     *         ctx.export("ecsStorageCapacityUnitId1", ids.units()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.builder()
     *             .nameRegex("^my-StorageCapacityUnit")
     *             .build());
     * 
     *         ctx.export("ecsStorageCapacityUnitId2", nameRegex.units()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEcsStorageCapacityUnitsResult> getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEcsStorageCapacityUnits:getEcsStorageCapacityUnits", TypeShape.of(GetEcsStorageCapacityUnitsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Storage Capacity Units of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.155.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEcsStorageCapacityUnitsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = EcsFunctions.getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.builder()
     *             .build());
     * 
     *         ctx.export("ecsStorageCapacityUnitId1", ids.units()[0].id());
     *         final var nameRegex = EcsFunctions.getEcsStorageCapacityUnits(GetEcsStorageCapacityUnitsArgs.builder()
     *             .nameRegex("^my-StorageCapacityUnit")
     *             .build());
     * 
     *         ctx.export("ecsStorageCapacityUnitId2", nameRegex.units()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEcsStorageCapacityUnitsResult> getEcsStorageCapacityUnitsPlain(GetEcsStorageCapacityUnitsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEcsStorageCapacityUnits:getEcsStorageCapacityUnits", TypeShape.of(GetEcsStorageCapacityUnitsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Eip Addresses of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.126.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipAddressesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEipAddresses(GetEipAddressesArgs.builder()
     *             .ids("eip-bp1jvx5ki6c********")
     *             .nameRegex("the_resource_name")
     *             .build());
     * 
     *         ctx.export("firstEipAddressId", example.addresses()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEipAddressesResult> getEipAddresses() {
        return getEipAddresses(GetEipAddressesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Eip Addresses of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.126.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipAddressesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEipAddresses(GetEipAddressesArgs.builder()
     *             .ids("eip-bp1jvx5ki6c********")
     *             .nameRegex("the_resource_name")
     *             .build());
     * 
     *         ctx.export("firstEipAddressId", example.addresses()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEipAddressesResult> getEipAddressesPlain() {
        return getEipAddressesPlain(GetEipAddressesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Eip Addresses of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.126.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipAddressesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEipAddresses(GetEipAddressesArgs.builder()
     *             .ids("eip-bp1jvx5ki6c********")
     *             .nameRegex("the_resource_name")
     *             .build());
     * 
     *         ctx.export("firstEipAddressId", example.addresses()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEipAddressesResult> getEipAddresses(GetEipAddressesArgs args) {
        return getEipAddresses(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Eip Addresses of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.126.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipAddressesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEipAddresses(GetEipAddressesArgs.builder()
     *             .ids("eip-bp1jvx5ki6c********")
     *             .nameRegex("the_resource_name")
     *             .build());
     * 
     *         ctx.export("firstEipAddressId", example.addresses()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEipAddressesResult> getEipAddressesPlain(GetEipAddressesPlainArgs args) {
        return getEipAddressesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Eip Addresses of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.126.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipAddressesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEipAddresses(GetEipAddressesArgs.builder()
     *             .ids("eip-bp1jvx5ki6c********")
     *             .nameRegex("the_resource_name")
     *             .build());
     * 
     *         ctx.export("firstEipAddressId", example.addresses()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEipAddressesResult> getEipAddresses(GetEipAddressesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEipAddresses:getEipAddresses", TypeShape.of(GetEipAddressesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Eip Addresses of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.126.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipAddressesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEipAddresses(GetEipAddressesArgs.builder()
     *             .ids("eip-bp1jvx5ki6c********")
     *             .nameRegex("the_resource_name")
     *             .build());
     * 
     *         ctx.export("firstEipAddressId", example.addresses()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetEipAddressesResult> getEipAddresses(GetEipAddressesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEipAddresses:getEipAddresses", TypeShape.of(GetEipAddressesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Eip Addresses of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.126.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipAddressesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getEipAddresses(GetEipAddressesArgs.builder()
     *             .ids("eip-bp1jvx5ki6c********")
     *             .nameRegex("the_resource_name")
     *             .build());
     * 
     *         ctx.export("firstEipAddressId", example.addresses()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetEipAddressesResult> getEipAddressesPlain(GetEipAddressesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEipAddresses:getEipAddresses", TypeShape.of(GetEipAddressesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:**  This datasource has been deprecated from version `1.126.0`. Please use new datasource alicloud_eip_addresses.
     * 
     * This data source provides a list of EIPs (Elastic IP address) owned by an Alibaba Cloud account.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var eipsDs = EcsFunctions.getEips(GetEipsArgs.builder()
     *             .build());
     * 
     *         ctx.export("firstEipId", eipsDs.eips()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     * @deprecated
     * This function has been deprecated in favour of the getEipAddresses function
     * 
     */
    @Deprecated /* This function has been deprecated in favour of the getEipAddresses function */
    public static Output<GetEipsResult> getEips() {
        return getEips(GetEipsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:**  This datasource has been deprecated from version `1.126.0`. Please use new datasource alicloud_eip_addresses.
     * 
     * This data source provides a list of EIPs (Elastic IP address) owned by an Alibaba Cloud account.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var eipsDs = EcsFunctions.getEips(GetEipsArgs.builder()
     *             .build());
     * 
     *         ctx.export("firstEipId", eipsDs.eips()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     * @deprecated
     * This function has been deprecated in favour of the getEipAddresses function
     * 
     */
    @Deprecated /* This function has been deprecated in favour of the getEipAddresses function */
    public static CompletableFuture<GetEipsResult> getEipsPlain() {
        return getEipsPlain(GetEipsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:**  This datasource has been deprecated from version `1.126.0`. Please use new datasource alicloud_eip_addresses.
     * 
     * This data source provides a list of EIPs (Elastic IP address) owned by an Alibaba Cloud account.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var eipsDs = EcsFunctions.getEips(GetEipsArgs.builder()
     *             .build());
     * 
     *         ctx.export("firstEipId", eipsDs.eips()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     * @deprecated
     * This function has been deprecated in favour of the getEipAddresses function
     * 
     */
    @Deprecated /* This function has been deprecated in favour of the getEipAddresses function */
    public static Output<GetEipsResult> getEips(GetEipsArgs args) {
        return getEips(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:**  This datasource has been deprecated from version `1.126.0`. Please use new datasource alicloud_eip_addresses.
     * 
     * This data source provides a list of EIPs (Elastic IP address) owned by an Alibaba Cloud account.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var eipsDs = EcsFunctions.getEips(GetEipsArgs.builder()
     *             .build());
     * 
     *         ctx.export("firstEipId", eipsDs.eips()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     * @deprecated
     * This function has been deprecated in favour of the getEipAddresses function
     * 
     */
    @Deprecated /* This function has been deprecated in favour of the getEipAddresses function */
    public static CompletableFuture<GetEipsResult> getEipsPlain(GetEipsPlainArgs args) {
        return getEipsPlain(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:**  This datasource has been deprecated from version `1.126.0`. Please use new datasource alicloud_eip_addresses.
     * 
     * This data source provides a list of EIPs (Elastic IP address) owned by an Alibaba Cloud account.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var eipsDs = EcsFunctions.getEips(GetEipsArgs.builder()
     *             .build());
     * 
     *         ctx.export("firstEipId", eipsDs.eips()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     * @deprecated
     * This function has been deprecated in favour of the getEipAddresses function
     * 
     */
    @Deprecated /* This function has been deprecated in favour of the getEipAddresses function */
    public static Output<GetEipsResult> getEips(GetEipsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEips:getEips", TypeShape.of(GetEipsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:**  This datasource has been deprecated from version `1.126.0`. Please use new datasource alicloud_eip_addresses.
     * 
     * This data source provides a list of EIPs (Elastic IP address) owned by an Alibaba Cloud account.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var eipsDs = EcsFunctions.getEips(GetEipsArgs.builder()
     *             .build());
     * 
     *         ctx.export("firstEipId", eipsDs.eips()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     * @deprecated
     * This function has been deprecated in favour of the getEipAddresses function
     * 
     */
    @Deprecated /* This function has been deprecated in favour of the getEipAddresses function */
    public static Output<GetEipsResult> getEips(GetEipsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getEips:getEips", TypeShape.of(GetEipsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:**  This datasource has been deprecated from version `1.126.0`. Please use new datasource alicloud_eip_addresses.
     * 
     * This data source provides a list of EIPs (Elastic IP address) owned by an Alibaba Cloud account.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetEipsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var eipsDs = EcsFunctions.getEips(GetEipsArgs.builder()
     *             .build());
     * 
     *         ctx.export("firstEipId", eipsDs.eips()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     * @deprecated
     * This function has been deprecated in favour of the getEipAddresses function
     * 
     */
    @Deprecated /* This function has been deprecated in favour of the getEipAddresses function */
    public static CompletableFuture<GetEipsResult> getEipsPlain(GetEipsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getEips:getEips", TypeShape.of(GetEipsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides Ecs Elasticity Assurance available to the user.
     * 
     * &gt; **NOTE:** Available in 1.196.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetElasticityAssurancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getElasticityAssurances(GetElasticityAssurancesArgs.builder()
     *             .ids(defaultAlicloudEcsElasticityAssurance.id())
     *             .build());
     * 
     *         ctx.export("alicloudEcsElasticityAssuranceExampleId", default_.assurances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetElasticityAssurancesResult> getElasticityAssurances() {
        return getElasticityAssurances(GetElasticityAssurancesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides Ecs Elasticity Assurance available to the user.
     * 
     * &gt; **NOTE:** Available in 1.196.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetElasticityAssurancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getElasticityAssurances(GetElasticityAssurancesArgs.builder()
     *             .ids(defaultAlicloudEcsElasticityAssurance.id())
     *             .build());
     * 
     *         ctx.export("alicloudEcsElasticityAssuranceExampleId", default_.assurances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetElasticityAssurancesResult> getElasticityAssurancesPlain() {
        return getElasticityAssurancesPlain(GetElasticityAssurancesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides Ecs Elasticity Assurance available to the user.
     * 
     * &gt; **NOTE:** Available in 1.196.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetElasticityAssurancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getElasticityAssurances(GetElasticityAssurancesArgs.builder()
     *             .ids(defaultAlicloudEcsElasticityAssurance.id())
     *             .build());
     * 
     *         ctx.export("alicloudEcsElasticityAssuranceExampleId", default_.assurances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetElasticityAssurancesResult> getElasticityAssurances(GetElasticityAssurancesArgs args) {
        return getElasticityAssurances(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides Ecs Elasticity Assurance available to the user.
     * 
     * &gt; **NOTE:** Available in 1.196.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetElasticityAssurancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getElasticityAssurances(GetElasticityAssurancesArgs.builder()
     *             .ids(defaultAlicloudEcsElasticityAssurance.id())
     *             .build());
     * 
     *         ctx.export("alicloudEcsElasticityAssuranceExampleId", default_.assurances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetElasticityAssurancesResult> getElasticityAssurancesPlain(GetElasticityAssurancesPlainArgs args) {
        return getElasticityAssurancesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides Ecs Elasticity Assurance available to the user.
     * 
     * &gt; **NOTE:** Available in 1.196.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetElasticityAssurancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getElasticityAssurances(GetElasticityAssurancesArgs.builder()
     *             .ids(defaultAlicloudEcsElasticityAssurance.id())
     *             .build());
     * 
     *         ctx.export("alicloudEcsElasticityAssuranceExampleId", default_.assurances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetElasticityAssurancesResult> getElasticityAssurances(GetElasticityAssurancesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getElasticityAssurances:getElasticityAssurances", TypeShape.of(GetElasticityAssurancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides Ecs Elasticity Assurance available to the user.
     * 
     * &gt; **NOTE:** Available in 1.196.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetElasticityAssurancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getElasticityAssurances(GetElasticityAssurancesArgs.builder()
     *             .ids(defaultAlicloudEcsElasticityAssurance.id())
     *             .build());
     * 
     *         ctx.export("alicloudEcsElasticityAssuranceExampleId", default_.assurances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetElasticityAssurancesResult> getElasticityAssurances(GetElasticityAssurancesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getElasticityAssurances:getElasticityAssurances", TypeShape.of(GetElasticityAssurancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides Ecs Elasticity Assurance available to the user.
     * 
     * &gt; **NOTE:** Available in 1.196.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetElasticityAssurancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getElasticityAssurances(GetElasticityAssurancesArgs.builder()
     *             .ids(defaultAlicloudEcsElasticityAssurance.id())
     *             .build());
     * 
     *         ctx.export("alicloudEcsElasticityAssuranceExampleId", default_.assurances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetElasticityAssurancesResult> getElasticityAssurancesPlain(GetElasticityAssurancesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getElasticityAssurances:getElasticityAssurances", TypeShape.of(GetElasticityAssurancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Hpc Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetHpcClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getHpcClusters(GetHpcClustersArgs.builder()
     *             .ids("hpc-bp1i09xxxxxxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsHpcClusterId", example.clusters()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetHpcClustersResult> getHpcClusters() {
        return getHpcClusters(GetHpcClustersArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Hpc Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetHpcClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getHpcClusters(GetHpcClustersArgs.builder()
     *             .ids("hpc-bp1i09xxxxxxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsHpcClusterId", example.clusters()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetHpcClustersResult> getHpcClustersPlain() {
        return getHpcClustersPlain(GetHpcClustersPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Hpc Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetHpcClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getHpcClusters(GetHpcClustersArgs.builder()
     *             .ids("hpc-bp1i09xxxxxxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsHpcClusterId", example.clusters()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetHpcClustersResult> getHpcClusters(GetHpcClustersArgs args) {
        return getHpcClusters(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Hpc Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetHpcClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getHpcClusters(GetHpcClustersArgs.builder()
     *             .ids("hpc-bp1i09xxxxxxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsHpcClusterId", example.clusters()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetHpcClustersResult> getHpcClustersPlain(GetHpcClustersPlainArgs args) {
        return getHpcClustersPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ecs Hpc Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetHpcClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getHpcClusters(GetHpcClustersArgs.builder()
     *             .ids("hpc-bp1i09xxxxxxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsHpcClusterId", example.clusters()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetHpcClustersResult> getHpcClusters(GetHpcClustersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getHpcClusters:getHpcClusters", TypeShape.of(GetHpcClustersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Hpc Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetHpcClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getHpcClusters(GetHpcClustersArgs.builder()
     *             .ids("hpc-bp1i09xxxxxxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsHpcClusterId", example.clusters()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetHpcClustersResult> getHpcClusters(GetHpcClustersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getHpcClusters:getHpcClusters", TypeShape.of(GetHpcClustersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ecs Hpc Clusters of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.116.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetHpcClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = EcsFunctions.getHpcClusters(GetHpcClustersArgs.builder()
     *             .ids("hpc-bp1i09xxxxxxxx")
     *             .nameRegex("tf-testAcc")
     *             .build());
     * 
     *         ctx.export("firstEcsHpcClusterId", example.clusters()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetHpcClustersResult> getHpcClustersPlain(GetHpcClustersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getHpcClusters:getHpcClusters", TypeShape.of(GetHpcClustersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available image resources. It contains user&#39;s private images, system images provided by Alibaba Cloud,
     * other public images and the ones available on the image market.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var imagesDs = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .owners("system")
     *             .nameRegex("^centos_6")
     *             .build());
     * 
     *         ctx.export("firstImageId", imagesDs.images()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetImagesResult> getImages() {
        return getImages(GetImagesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides available image resources. It contains user&#39;s private images, system images provided by Alibaba Cloud,
     * other public images and the ones available on the image market.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var imagesDs = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .owners("system")
     *             .nameRegex("^centos_6")
     *             .build());
     * 
     *         ctx.export("firstImageId", imagesDs.images()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetImagesResult> getImagesPlain() {
        return getImagesPlain(GetImagesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides available image resources. It contains user&#39;s private images, system images provided by Alibaba Cloud,
     * other public images and the ones available on the image market.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var imagesDs = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .owners("system")
     *             .nameRegex("^centos_6")
     *             .build());
     * 
     *         ctx.export("firstImageId", imagesDs.images()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetImagesResult> getImages(GetImagesArgs args) {
        return getImages(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides available image resources. It contains user&#39;s private images, system images provided by Alibaba Cloud,
     * other public images and the ones available on the image market.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var imagesDs = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .owners("system")
     *             .nameRegex("^centos_6")
     *             .build());
     * 
     *         ctx.export("firstImageId", imagesDs.images()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetImagesResult> getImagesPlain(GetImagesPlainArgs args) {
        return getImagesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides available image resources. It contains user&#39;s private images, system images provided by Alibaba Cloud,
     * other public images and the ones available on the image market.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var imagesDs = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .owners("system")
     *             .nameRegex("^centos_6")
     *             .build());
     * 
     *         ctx.export("firstImageId", imagesDs.images()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetImagesResult> getImages(GetImagesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getImages:getImages", TypeShape.of(GetImagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available image resources. It contains user&#39;s private images, system images provided by Alibaba Cloud,
     * other public images and the ones available on the image market.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var imagesDs = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .owners("system")
     *             .nameRegex("^centos_6")
     *             .build());
     * 
     *         ctx.export("firstImageId", imagesDs.images()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetImagesResult> getImages(GetImagesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getImages:getImages", TypeShape.of(GetImagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides available image resources. It contains user&#39;s private images, system images provided by Alibaba Cloud,
     * other public images and the ones available on the image market.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var imagesDs = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .owners("system")
     *             .nameRegex("^centos_6")
     *             .build());
     * 
     *         ctx.export("firstImageId", imagesDs.images()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetImagesResult> getImagesPlain(GetImagesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getImages:getImages", TypeShape.of(GetImagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Operation to query the reserved keywords of an ApsaraDB RDS instance. The reserved keywords cannot be used for the usernames of accounts or the names of databases.
     * 
     * &gt; **NOTE:** Available in v1.196.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceKeywordsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var resources = EcsFunctions.getInstanceKeywords(GetInstanceKeywordsArgs.builder()
     *             .key("account")
     *             .outputFile("./classes.txt")
     *             .build());
     * 
     *         ctx.export("accountKeywords", resources.keywords()[0]);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInstanceKeywordsResult> getInstanceKeywords(GetInstanceKeywordsArgs args) {
        return getInstanceKeywords(args, InvokeOptions.Empty);
    }
    /**
     * Operation to query the reserved keywords of an ApsaraDB RDS instance. The reserved keywords cannot be used for the usernames of accounts or the names of databases.
     * 
     * &gt; **NOTE:** Available in v1.196.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceKeywordsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var resources = EcsFunctions.getInstanceKeywords(GetInstanceKeywordsArgs.builder()
     *             .key("account")
     *             .outputFile("./classes.txt")
     *             .build());
     * 
     *         ctx.export("accountKeywords", resources.keywords()[0]);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetInstanceKeywordsResult> getInstanceKeywordsPlain(GetInstanceKeywordsPlainArgs args) {
        return getInstanceKeywordsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Operation to query the reserved keywords of an ApsaraDB RDS instance. The reserved keywords cannot be used for the usernames of accounts or the names of databases.
     * 
     * &gt; **NOTE:** Available in v1.196.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceKeywordsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var resources = EcsFunctions.getInstanceKeywords(GetInstanceKeywordsArgs.builder()
     *             .key("account")
     *             .outputFile("./classes.txt")
     *             .build());
     * 
     *         ctx.export("accountKeywords", resources.keywords()[0]);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInstanceKeywordsResult> getInstanceKeywords(GetInstanceKeywordsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getInstanceKeywords:getInstanceKeywords", TypeShape.of(GetInstanceKeywordsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Operation to query the reserved keywords of an ApsaraDB RDS instance. The reserved keywords cannot be used for the usernames of accounts or the names of databases.
     * 
     * &gt; **NOTE:** Available in v1.196.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceKeywordsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var resources = EcsFunctions.getInstanceKeywords(GetInstanceKeywordsArgs.builder()
     *             .key("account")
     *             .outputFile("./classes.txt")
     *             .build());
     * 
     *         ctx.export("accountKeywords", resources.keywords()[0]);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInstanceKeywordsResult> getInstanceKeywords(GetInstanceKeywordsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getInstanceKeywords:getInstanceKeywords", TypeShape.of(GetInstanceKeywordsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Operation to query the reserved keywords of an ApsaraDB RDS instance. The reserved keywords cannot be used for the usernames of accounts or the names of databases.
     * 
     * &gt; **NOTE:** Available in v1.196.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceKeywordsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var resources = EcsFunctions.getInstanceKeywords(GetInstanceKeywordsArgs.builder()
     *             .key("account")
     *             .outputFile("./classes.txt")
     *             .build());
     * 
     *         ctx.export("accountKeywords", resources.keywords()[0]);
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetInstanceKeywordsResult> getInstanceKeywordsPlain(GetInstanceKeywordsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getInstanceKeywords:getInstanceKeywords", TypeShape.of(GetInstanceKeywordsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ECS instance type families of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available in 1.54.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypeFamiliesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getInstanceTypeFamilies(GetInstanceTypeFamiliesArgs.builder()
     *             .instanceChargeType("PrePaid")
     *             .build());
     * 
     *         ctx.export("firstInstanceTypeFamilyId", default_.families()[0].id());
     *         ctx.export("instanceIds", default_.ids());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInstanceTypeFamiliesResult> getInstanceTypeFamilies() {
        return getInstanceTypeFamilies(GetInstanceTypeFamiliesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ECS instance type families of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available in 1.54.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypeFamiliesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getInstanceTypeFamilies(GetInstanceTypeFamiliesArgs.builder()
     *             .instanceChargeType("PrePaid")
     *             .build());
     * 
     *         ctx.export("firstInstanceTypeFamilyId", default_.families()[0].id());
     *         ctx.export("instanceIds", default_.ids());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetInstanceTypeFamiliesResult> getInstanceTypeFamiliesPlain() {
        return getInstanceTypeFamiliesPlain(GetInstanceTypeFamiliesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ECS instance type families of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available in 1.54.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypeFamiliesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getInstanceTypeFamilies(GetInstanceTypeFamiliesArgs.builder()
     *             .instanceChargeType("PrePaid")
     *             .build());
     * 
     *         ctx.export("firstInstanceTypeFamilyId", default_.families()[0].id());
     *         ctx.export("instanceIds", default_.ids());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInstanceTypeFamiliesResult> getInstanceTypeFamilies(GetInstanceTypeFamiliesArgs args) {
        return getInstanceTypeFamilies(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ECS instance type families of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available in 1.54.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypeFamiliesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getInstanceTypeFamilies(GetInstanceTypeFamiliesArgs.builder()
     *             .instanceChargeType("PrePaid")
     *             .build());
     * 
     *         ctx.export("firstInstanceTypeFamilyId", default_.families()[0].id());
     *         ctx.export("instanceIds", default_.ids());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetInstanceTypeFamiliesResult> getInstanceTypeFamiliesPlain(GetInstanceTypeFamiliesPlainArgs args) {
        return getInstanceTypeFamiliesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ECS instance type families of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available in 1.54.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypeFamiliesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getInstanceTypeFamilies(GetInstanceTypeFamiliesArgs.builder()
     *             .instanceChargeType("PrePaid")
     *             .build());
     * 
     *         ctx.export("firstInstanceTypeFamilyId", default_.families()[0].id());
     *         ctx.export("instanceIds", default_.ids());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInstanceTypeFamiliesResult> getInstanceTypeFamilies(GetInstanceTypeFamiliesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getInstanceTypeFamilies:getInstanceTypeFamilies", TypeShape.of(GetInstanceTypeFamiliesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ECS instance type families of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available in 1.54.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypeFamiliesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getInstanceTypeFamilies(GetInstanceTypeFamiliesArgs.builder()
     *             .instanceChargeType("PrePaid")
     *             .build());
     * 
     *         ctx.export("firstInstanceTypeFamilyId", default_.families()[0].id());
     *         ctx.export("instanceIds", default_.ids());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInstanceTypeFamiliesResult> getInstanceTypeFamilies(GetInstanceTypeFamiliesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getInstanceTypeFamilies:getInstanceTypeFamilies", TypeShape.of(GetInstanceTypeFamiliesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ECS instance type families of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available in 1.54.0+
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypeFamiliesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = EcsFunctions.getInstanceTypeFamilies(GetInstanceTypeFamiliesArgs.builder()
     *             .instanceChargeType("PrePaid")
     *             .build());
     * 
     *         ctx.export("firstInstanceTypeFamilyId", default_.families()[0].id());
     *         ctx.export("instanceIds", default_.ids());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetInstanceTypeFamiliesResult> getInstanceTypeFamiliesPlain(GetInstanceTypeFamiliesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getInstanceTypeFamilies:getInstanceTypeFamilies", TypeShape.of(GetInstanceTypeFamiliesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ECS instance types of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available since v1.0.0.
     * 
     * &gt; **NOTE:** By default, only the upgraded instance types are returned. If you want to get outdated instance types, you must set `isOutdated` to true.
     * 
     * &gt; **NOTE:** If one instance type is sold out, it will not be exported.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.EcsNetworkInterface;
     * import com.pulumi.alicloud.ecs.EcsNetworkInterfaceArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.codegen.internal.KeyedValue;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         // Declare the data source
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_[0-9]+_[0-9]+_x64*")
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("192.168.192.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultEcsNetworkInterface = new EcsNetworkInterface("defaultEcsNetworkInterface", EcsNetworkInterfaceArgs.builder()
     *             .networkInterfaceName(name)
     *             .vswitchId(defaultSwitch.id())
     *             .securityGroupIds(defaultSecurityGroup.id())
     *             .build());
     * 
     *         for (var i = 0; i < 14; i++) {
     *             new Instance("defaultInstance-" + i, InstanceArgs.builder()
     *                 .imageId(defaultGetImages.images()[0].id())
     *                 .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *                 .instanceName(name)
     *                 .securityGroups(defaultSecurityGroup.stream().map(element -> element.id()).collect(toList()))
     *                 .internetChargeType("PayByTraffic")
     *                 .internetMaxBandwidthOut(10)
     *                 .availabilityZone(default_.zones()[0].id())
     *                 .instanceChargeType("PostPaid")
     *                 .systemDiskCategory("cloud_efficiency")
     *                 .vswitchId(defaultSwitch.id())
     *                 .build());
     * 
     *         
     * }
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInstanceTypesResult> getInstanceTypes() {
        return getInstanceTypes(GetInstanceTypesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ECS instance types of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available since v1.0.0.
     * 
     * &gt; **NOTE:** By default, only the upgraded instance types are returned. If you want to get outdated instance types, you must set `isOutdated` to true.
     * 
     * &gt; **NOTE:** If one instance type is sold out, it will not be exported.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.EcsNetworkInterface;
     * import com.pulumi.alicloud.ecs.EcsNetworkInterfaceArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.codegen.internal.KeyedValue;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         // Declare the data source
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_[0-9]+_[0-9]+_x64*")
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("192.168.192.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultEcsNetworkInterface = new EcsNetworkInterface("defaultEcsNetworkInterface", EcsNetworkInterfaceArgs.builder()
     *             .networkInterfaceName(name)
     *             .vswitchId(defaultSwitch.id())
     *             .securityGroupIds(defaultSecurityGroup.id())
     *             .build());
     * 
     *         for (var i = 0; i < 14; i++) {
     *             new Instance("defaultInstance-" + i, InstanceArgs.builder()
     *                 .imageId(defaultGetImages.images()[0].id())
     *                 .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *                 .instanceName(name)
     *                 .securityGroups(defaultSecurityGroup.stream().map(element -> element.id()).collect(toList()))
     *                 .internetChargeType("PayByTraffic")
     *                 .internetMaxBandwidthOut(10)
     *                 .availabilityZone(default_.zones()[0].id())
     *                 .instanceChargeType("PostPaid")
     *                 .systemDiskCategory("cloud_efficiency")
     *                 .vswitchId(defaultSwitch.id())
     *                 .build());
     * 
     *         
     * }
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetInstanceTypesResult> getInstanceTypesPlain() {
        return getInstanceTypesPlain(GetInstanceTypesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ECS instance types of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available since v1.0.0.
     * 
     * &gt; **NOTE:** By default, only the upgraded instance types are returned. If you want to get outdated instance types, you must set `isOutdated` to true.
     * 
     * &gt; **NOTE:** If one instance type is sold out, it will not be exported.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.EcsNetworkInterface;
     * import com.pulumi.alicloud.ecs.EcsNetworkInterfaceArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.codegen.internal.KeyedValue;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         // Declare the data source
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_[0-9]+_[0-9]+_x64*")
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("192.168.192.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultEcsNetworkInterface = new EcsNetworkInterface("defaultEcsNetworkInterface", EcsNetworkInterfaceArgs.builder()
     *             .networkInterfaceName(name)
     *             .vswitchId(defaultSwitch.id())
     *             .securityGroupIds(defaultSecurityGroup.id())
     *             .build());
     * 
     *         for (var i = 0; i < 14; i++) {
     *             new Instance("defaultInstance-" + i, InstanceArgs.builder()
     *                 .imageId(defaultGetImages.images()[0].id())
     *                 .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *                 .instanceName(name)
     *                 .securityGroups(defaultSecurityGroup.stream().map(element -> element.id()).collect(toList()))
     *                 .internetChargeType("PayByTraffic")
     *                 .internetMaxBandwidthOut(10)
     *                 .availabilityZone(default_.zones()[0].id())
     *                 .instanceChargeType("PostPaid")
     *                 .systemDiskCategory("cloud_efficiency")
     *                 .vswitchId(defaultSwitch.id())
     *                 .build());
     * 
     *         
     * }
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInstanceTypesResult> getInstanceTypes(GetInstanceTypesArgs args) {
        return getInstanceTypes(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ECS instance types of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available since v1.0.0.
     * 
     * &gt; **NOTE:** By default, only the upgraded instance types are returned. If you want to get outdated instance types, you must set `isOutdated` to true.
     * 
     * &gt; **NOTE:** If one instance type is sold out, it will not be exported.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.EcsNetworkInterface;
     * import com.pulumi.alicloud.ecs.EcsNetworkInterfaceArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.codegen.internal.KeyedValue;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         // Declare the data source
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_[0-9]+_[0-9]+_x64*")
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("192.168.192.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultEcsNetworkInterface = new EcsNetworkInterface("defaultEcsNetworkInterface", EcsNetworkInterfaceArgs.builder()
     *             .networkInterfaceName(name)
     *             .vswitchId(defaultSwitch.id())
     *             .securityGroupIds(defaultSecurityGroup.id())
     *             .build());
     * 
     *         for (var i = 0; i < 14; i++) {
     *             new Instance("defaultInstance-" + i, InstanceArgs.builder()
     *                 .imageId(defaultGetImages.images()[0].id())
     *                 .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *                 .instanceName(name)
     *                 .securityGroups(defaultSecurityGroup.stream().map(element -> element.id()).collect(toList()))
     *                 .internetChargeType("PayByTraffic")
     *                 .internetMaxBandwidthOut(10)
     *                 .availabilityZone(default_.zones()[0].id())
     *                 .instanceChargeType("PostPaid")
     *                 .systemDiskCategory("cloud_efficiency")
     *                 .vswitchId(defaultSwitch.id())
     *                 .build());
     * 
     *         
     * }
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetInstanceTypesResult> getInstanceTypesPlain(GetInstanceTypesPlainArgs args) {
        return getInstanceTypesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the ECS instance types of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available since v1.0.0.
     * 
     * &gt; **NOTE:** By default, only the upgraded instance types are returned. If you want to get outdated instance types, you must set `isOutdated` to true.
     * 
     * &gt; **NOTE:** If one instance type is sold out, it will not be exported.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.EcsNetworkInterface;
     * import com.pulumi.alicloud.ecs.EcsNetworkInterfaceArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.codegen.internal.KeyedValue;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         // Declare the data source
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_[0-9]+_[0-9]+_x64*")
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("192.168.192.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultEcsNetworkInterface = new EcsNetworkInterface("defaultEcsNetworkInterface", EcsNetworkInterfaceArgs.builder()
     *             .networkInterfaceName(name)
     *             .vswitchId(defaultSwitch.id())
     *             .securityGroupIds(defaultSecurityGroup.id())
     *             .build());
     * 
     *         for (var i = 0; i < 14; i++) {
     *             new Instance("defaultInstance-" + i, InstanceArgs.builder()
     *                 .imageId(defaultGetImages.images()[0].id())
     *                 .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *                 .instanceName(name)
     *                 .securityGroups(defaultSecurityGroup.stream().map(element -> element.id()).collect(toList()))
     *                 .internetChargeType("PayByTraffic")
     *                 .internetMaxBandwidthOut(10)
     *                 .availabilityZone(default_.zones()[0].id())
     *                 .instanceChargeType("PostPaid")
     *                 .systemDiskCategory("cloud_efficiency")
     *                 .vswitchId(defaultSwitch.id())
     *                 .build());
     * 
     *         
     * }
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInstanceTypesResult> getInstanceTypes(GetInstanceTypesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getInstanceTypes:getInstanceTypes", TypeShape.of(GetInstanceTypesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ECS instance types of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available since v1.0.0.
     * 
     * &gt; **NOTE:** By default, only the upgraded instance types are returned. If you want to get outdated instance types, you must set `isOutdated` to true.
     * 
     * &gt; **NOTE:** If one instance type is sold out, it will not be exported.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.EcsNetworkInterface;
     * import com.pulumi.alicloud.ecs.EcsNetworkInterfaceArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.codegen.internal.KeyedValue;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         // Declare the data source
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_[0-9]+_[0-9]+_x64*")
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("192.168.192.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultEcsNetworkInterface = new EcsNetworkInterface("defaultEcsNetworkInterface", EcsNetworkInterfaceArgs.builder()
     *             .networkInterfaceName(name)
     *             .vswitchId(defaultSwitch.id())
     *             .securityGroupIds(defaultSecurityGroup.id())
     *             .build());
     * 
     *         for (var i = 0; i < 14; i++) {
     *             new Instance("defaultInstance-" + i, InstanceArgs.builder()
     *                 .imageId(defaultGetImages.images()[0].id())
     *                 .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *                 .instanceName(name)
     *                 .securityGroups(defaultSecurityGroup.stream().map(element -> element.id()).collect(toList()))
     *                 .internetChargeType("PayByTraffic")
     *                 .internetMaxBandwidthOut(10)
     *                 .availabilityZone(default_.zones()[0].id())
     *                 .instanceChargeType("PostPaid")
     *                 .systemDiskCategory("cloud_efficiency")
     *                 .vswitchId(defaultSwitch.id())
     *                 .build());
     * 
     *         
     * }
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInstanceTypesResult> getInstanceTypes(GetInstanceTypesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getInstanceTypes:getInstanceTypes", TypeShape.of(GetInstanceTypesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the ECS instance types of Alibaba Cloud.
     * 
     * &gt; **NOTE:** Available since v1.0.0.
     * 
     * &gt; **NOTE:** By default, only the upgraded instance types are returned. If you want to get outdated instance types, you must set `isOutdated` to true.
     * 
     * &gt; **NOTE:** If one instance type is sold out, it will not be exported.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.ecs.EcsNetworkInterface;
     * import com.pulumi.alicloud.ecs.EcsNetworkInterfaceArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.codegen.internal.KeyedValue;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-example");
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         // Declare the data source
     *         final var defaultGetInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .instanceTypeFamily("ecs.sn1ne")
     *             .build());
     * 
     *         final var defaultGetImages = EcsFunctions.getImages(GetImagesArgs.builder()
     *             .nameRegex("^ubuntu_[0-9]+_[0-9]+_x64*")
     *             .mostRecent(true)
     *             .owners("system")
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .vpcId(defaultNetwork.id())
     *             .cidrBlock("192.168.192.0/24")
     *             .zoneId(default_.zones()[0].id())
     *             .build());
     * 
     *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultEcsNetworkInterface = new EcsNetworkInterface("defaultEcsNetworkInterface", EcsNetworkInterfaceArgs.builder()
     *             .networkInterfaceName(name)
     *             .vswitchId(defaultSwitch.id())
     *             .securityGroupIds(defaultSecurityGroup.id())
     *             .build());
     * 
     *         for (var i = 0; i < 14; i++) {
     *             new Instance("defaultInstance-" + i, InstanceArgs.builder()
     *                 .imageId(defaultGetImages.images()[0].id())
     *                 .instanceType(defaultGetInstanceTypes.instanceTypes()[0].id())
     *                 .instanceName(name)
     *                 .securityGroups(defaultSecurityGroup.stream().map(element -> element.id()).collect(toList()))
     *                 .internetChargeType("PayByTraffic")
     *                 .internetMaxBandwidthOut(10)
     *                 .availabilityZone(default_.zones()[0].id())
     *                 .instanceChargeType("PostPaid")
     *                 .systemDiskCategory("cloud_efficiency")
     *                 .vswitchId(defaultSwitch.id())
     *                 .build());
     * 
     *         
     * }
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetInstanceTypesResult> getInstanceTypesPlain(GetInstanceTypesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getInstanceTypes:getInstanceTypes", TypeShape.of(GetInstanceTypesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Instances data source list ECS instance resources according to their ID, name regex, image id, status and other fields.
     * 
     * &gt; **NOTE:** Available since v1.7.0.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var instancesDs = EcsFunctions.getInstances(GetInstancesArgs.builder()
     *             .nameRegex("web_server")
     *             .status("Running")
     *             .build());
     * 
     *         ctx.export("firstInstanceId", instancesDs.instances()[0].id());
     *         ctx.export("instanceIds", instancesDs.ids());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInstancesResult> getInstances() {
        return getInstances(GetInstancesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The Instances data source list ECS instance resources according to their ID, name regex, image id, status and other fields.
     * 
     * &gt; **NOTE:** Available since v1.7.0.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var instancesDs = EcsFunctions.getInstances(GetInstancesArgs.builder()
     *             .nameRegex("web_server")
     *             .status("Running")
     *             .build());
     * 
     *         ctx.export("firstInstanceId", instancesDs.instances()[0].id());
     *         ctx.export("instanceIds", instancesDs.ids());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetInstancesResult> getInstancesPlain() {
        return getInstancesPlain(GetInstancesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The Instances data source list ECS instance resources according to their ID, name regex, image id, status and other fields.
     * 
     * &gt; **NOTE:** Available since v1.7.0.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var instancesDs = EcsFunctions.getInstances(GetInstancesArgs.builder()
     *             .nameRegex("web_server")
     *             .status("Running")
     *             .build());
     * 
     *         ctx.export("firstInstanceId", instancesDs.instances()[0].id());
     *         ctx.export("instanceIds", instancesDs.ids());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInstancesResult> getInstances(GetInstancesArgs args) {
        return getInstances(args, InvokeOptions.Empty);
    }
    /**
     * The Instances data source list ECS instance resources according to their ID, name regex, image id, status and other fields.
     * 
     * &gt; **NOTE:** Available since v1.7.0.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var instancesDs = EcsFunctions.getInstances(GetInstancesArgs.builder()
     *             .nameRegex("web_server")
     *             .status("Running")
     *             .build());
     * 
     *         ctx.export("firstInstanceId", instancesDs.instances()[0].id());
     *         ctx.export("instanceIds", instancesDs.ids());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetInstancesResult> getInstancesPlain(GetInstancesPlainArgs args) {
        return getInstancesPlain(args, InvokeOptions.Empty);
    }
    /**
     * The Instances data source list ECS instance resources according to their ID, name regex, image id, status and other fields.
     * 
     * &gt; **NOTE:** Available since v1.7.0.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var instancesDs = EcsFunctions.getInstances(GetInstancesArgs.builder()
     *             .nameRegex("web_server")
     *             .status("Running")
     *             .build());
     * 
     *         ctx.export("firstInstanceId", instancesDs.instances()[0].id());
     *         ctx.export("instanceIds", instancesDs.ids());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInstancesResult> getInstances(GetInstancesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getInstances:getInstances", TypeShape.of(GetInstancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Instances data source list ECS instance resources according to their ID, name regex, image id, status and other fields.
     * 
     * &gt; **NOTE:** Available since v1.7.0.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var instancesDs = EcsFunctions.getInstances(GetInstancesArgs.builder()
     *             .nameRegex("web_server")
     *             .status("Running")
     *             .build());
     * 
     *         ctx.export("firstInstanceId", instancesDs.instances()[0].id());
     *         ctx.export("instanceIds", instancesDs.ids());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInstancesResult> getInstances(GetInstancesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getInstances:getInstances", TypeShape.of(GetInstancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Instances data source list ECS instance resources according to their ID, name regex, image id, status and other fields.
     * 
     * &gt; **NOTE:** Available since v1.7.0.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var instancesDs = EcsFunctions.getInstances(GetInstancesArgs.builder()
     *             .nameRegex("web_server")
     *             .status("Running")
     *             .build());
     * 
     *         ctx.export("firstInstanceId", instancesDs.instances()[0].id());
     *         ctx.export("instanceIds", instancesDs.ids());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetInstancesResult> getInstancesPlain(GetInstancesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getInstances:getInstances", TypeShape.of(GetInstancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsKeyPairs from version 1.121.0.
     * 
     * This data source provides a list of key pairs in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyName("keyPairDatasource")
     *             .build());
     * 
     *         final var default = EcsFunctions.getKeyPairs(GetKeyPairsArgs.builder()
     *             .nameRegex(defaultKeyPair.keyName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetKeyPairsResult> getKeyPairs() {
        return getKeyPairs(GetKeyPairsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsKeyPairs from version 1.121.0.
     * 
     * This data source provides a list of key pairs in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyName("keyPairDatasource")
     *             .build());
     * 
     *         final var default = EcsFunctions.getKeyPairs(GetKeyPairsArgs.builder()
     *             .nameRegex(defaultKeyPair.keyName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetKeyPairsResult> getKeyPairsPlain() {
        return getKeyPairsPlain(GetKeyPairsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsKeyPairs from version 1.121.0.
     * 
     * This data source provides a list of key pairs in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyName("keyPairDatasource")
     *             .build());
     * 
     *         final var default = EcsFunctions.getKeyPairs(GetKeyPairsArgs.builder()
     *             .nameRegex(defaultKeyPair.keyName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetKeyPairsResult> getKeyPairs(GetKeyPairsArgs args) {
        return getKeyPairs(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsKeyPairs from version 1.121.0.
     * 
     * This data source provides a list of key pairs in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyName("keyPairDatasource")
     *             .build());
     * 
     *         final var default = EcsFunctions.getKeyPairs(GetKeyPairsArgs.builder()
     *             .nameRegex(defaultKeyPair.keyName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetKeyPairsResult> getKeyPairsPlain(GetKeyPairsPlainArgs args) {
        return getKeyPairsPlain(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsKeyPairs from version 1.121.0.
     * 
     * This data source provides a list of key pairs in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyName("keyPairDatasource")
     *             .build());
     * 
     *         final var default = EcsFunctions.getKeyPairs(GetKeyPairsArgs.builder()
     *             .nameRegex(defaultKeyPair.keyName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetKeyPairsResult> getKeyPairs(GetKeyPairsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getKeyPairs:getKeyPairs", TypeShape.of(GetKeyPairsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsKeyPairs from version 1.121.0.
     * 
     * This data source provides a list of key pairs in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyName("keyPairDatasource")
     *             .build());
     * 
     *         final var default = EcsFunctions.getKeyPairs(GetKeyPairsArgs.builder()
     *             .nameRegex(defaultKeyPair.keyName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetKeyPairsResult> getKeyPairs(GetKeyPairsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getKeyPairs:getKeyPairs", TypeShape.of(GetKeyPairsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsKeyPairs from version 1.121.0.
     * 
     * This data source provides a list of key pairs in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.KeyPair;
     * import com.pulumi.alicloud.ecs.KeyPairArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetKeyPairsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         var defaultKeyPair = new KeyPair("defaultKeyPair", KeyPairArgs.builder()
     *             .keyName("keyPairDatasource")
     *             .build());
     * 
     *         final var default = EcsFunctions.getKeyPairs(GetKeyPairsArgs.builder()
     *             .nameRegex(defaultKeyPair.keyName())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetKeyPairsResult> getKeyPairsPlain(GetKeyPairsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getKeyPairs:getKeyPairs", TypeShape.of(GetKeyPairsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsNetworkInterfaces from version 1.123.1.
     * 
     * Use this data source to get a list of elastic network interfaces according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about elastic network interface and how to use it, see [Elastic Network Interface](https://www.alibabacloud.com/help/doc-detail/58496.html)
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterface;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachment;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachmentArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("networkInterfacesName");
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/24")
     *             .build());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .cidrBlock("192.168.0.0/24")
     *             .availabilityZone(default_.zones()[0].id())
     *             .vpcId(vpc.id())
     *             .build());
     * 
     *         var group = new SecurityGroup("group", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(vpc.id())
     *             .build());
     * 
     *         var interface_ = new NetworkInterface("interface", NetworkInterfaceArgs.builder()
     *             .name(String.format("%s%d", name))
     *             .vswitchId(vswitch.id())
     *             .securityGroups(group.id())
     *             .description("Basic test")
     *             .privateIp("192.168.0.2")
     *             .tags(Map.of("TF-VER", "0.11.3"))
     *             .build());
     * 
     *         var instance = new Instance("instance", InstanceArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .securityGroups(group.id())
     *             .instanceType("ecs.e3.xlarge")
     *             .systemDiskCategory("cloud_efficiency")
     *             .imageId("centos_7_04_64_20G_alibase_201701015.vhd")
     *             .instanceName(name)
     *             .vswitchId(vswitch.id())
     *             .internetMaxBandwidthOut(10)
     *             .build());
     * 
     *         var attachment = new NetworkInterfaceAttachment("attachment", NetworkInterfaceAttachmentArgs.builder()
     *             .instanceId(instance.id())
     *             .networkInterfaceId(interface_.id())
     *             .build());
     * 
     *         final var defaultGetNetworkInterfaces = EcsFunctions.getNetworkInterfaces(GetNetworkInterfacesArgs.builder()
     *             .ids(attachment.networkInterfaceId())
     *             .nameRegex(name)
     *             .tags(Map.of("TF-VER", "0.11.3"))
     *             .vpcId(vpc.id())
     *             .vswitchId(vswitch.id())
     *             .privateIp("192.168.0.2")
     *             .securityGroupId(group.id())
     *             .type("Secondary")
     *             .instanceId(instance.id())
     *             .build());
     * 
     *         ctx.export("eni0Name", defaultGetNetworkInterfaces.applyValue(_defaultGetNetworkInterfaces -> _defaultGetNetworkInterfaces.interfaces()[0].name()));
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `ids` - (Optional)  A list of ENI IDs.
     * * `nameRegex` - (Optional) A regex string to filter results by ENI name.
     * * `vpcId` - (Optional) The VPC ID linked to ENIs.
     * * `vswitchId` - (Optional) The vSwitch ID linked to ENIs.
     * * `privateIp` - (Optional) The primary private IP address of the ENI.
     * * `securityGroupId` - (Optional) The security group ID linked to ENIs.
     * * `name` - (Optional) The name of the ENIs.
     * * `type` - (Optional) The type of ENIs, Only support for &#34;Primary&#34; or &#34;Secondary&#34;.
     * * `instanceId` - (Optional) The ECS instance ID that the ENI is attached to.
     * * `tags` - (Optional) A map of tags assigned to ENIs.
     * * `outputFile` - (Optional) The name of output file that saves the filter results.
     * * `resourceGroupId` - (Optional, ForceNew, Available in 1.57.0+) The Id of resource group which the network interface belongs.
     * 
     */
    public static Output<GetNetworkInterfacesResult> getNetworkInterfaces() {
        return getNetworkInterfaces(GetNetworkInterfacesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsNetworkInterfaces from version 1.123.1.
     * 
     * Use this data source to get a list of elastic network interfaces according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about elastic network interface and how to use it, see [Elastic Network Interface](https://www.alibabacloud.com/help/doc-detail/58496.html)
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterface;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachment;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachmentArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("networkInterfacesName");
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/24")
     *             .build());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .cidrBlock("192.168.0.0/24")
     *             .availabilityZone(default_.zones()[0].id())
     *             .vpcId(vpc.id())
     *             .build());
     * 
     *         var group = new SecurityGroup("group", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(vpc.id())
     *             .build());
     * 
     *         var interface_ = new NetworkInterface("interface", NetworkInterfaceArgs.builder()
     *             .name(String.format("%s%d", name))
     *             .vswitchId(vswitch.id())
     *             .securityGroups(group.id())
     *             .description("Basic test")
     *             .privateIp("192.168.0.2")
     *             .tags(Map.of("TF-VER", "0.11.3"))
     *             .build());
     * 
     *         var instance = new Instance("instance", InstanceArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .securityGroups(group.id())
     *             .instanceType("ecs.e3.xlarge")
     *             .systemDiskCategory("cloud_efficiency")
     *             .imageId("centos_7_04_64_20G_alibase_201701015.vhd")
     *             .instanceName(name)
     *             .vswitchId(vswitch.id())
     *             .internetMaxBandwidthOut(10)
     *             .build());
     * 
     *         var attachment = new NetworkInterfaceAttachment("attachment", NetworkInterfaceAttachmentArgs.builder()
     *             .instanceId(instance.id())
     *             .networkInterfaceId(interface_.id())
     *             .build());
     * 
     *         final var defaultGetNetworkInterfaces = EcsFunctions.getNetworkInterfaces(GetNetworkInterfacesArgs.builder()
     *             .ids(attachment.networkInterfaceId())
     *             .nameRegex(name)
     *             .tags(Map.of("TF-VER", "0.11.3"))
     *             .vpcId(vpc.id())
     *             .vswitchId(vswitch.id())
     *             .privateIp("192.168.0.2")
     *             .securityGroupId(group.id())
     *             .type("Secondary")
     *             .instanceId(instance.id())
     *             .build());
     * 
     *         ctx.export("eni0Name", defaultGetNetworkInterfaces.applyValue(_defaultGetNetworkInterfaces -> _defaultGetNetworkInterfaces.interfaces()[0].name()));
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `ids` - (Optional)  A list of ENI IDs.
     * * `nameRegex` - (Optional) A regex string to filter results by ENI name.
     * * `vpcId` - (Optional) The VPC ID linked to ENIs.
     * * `vswitchId` - (Optional) The vSwitch ID linked to ENIs.
     * * `privateIp` - (Optional) The primary private IP address of the ENI.
     * * `securityGroupId` - (Optional) The security group ID linked to ENIs.
     * * `name` - (Optional) The name of the ENIs.
     * * `type` - (Optional) The type of ENIs, Only support for &#34;Primary&#34; or &#34;Secondary&#34;.
     * * `instanceId` - (Optional) The ECS instance ID that the ENI is attached to.
     * * `tags` - (Optional) A map of tags assigned to ENIs.
     * * `outputFile` - (Optional) The name of output file that saves the filter results.
     * * `resourceGroupId` - (Optional, ForceNew, Available in 1.57.0+) The Id of resource group which the network interface belongs.
     * 
     */
    public static CompletableFuture<GetNetworkInterfacesResult> getNetworkInterfacesPlain() {
        return getNetworkInterfacesPlain(GetNetworkInterfacesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsNetworkInterfaces from version 1.123.1.
     * 
     * Use this data source to get a list of elastic network interfaces according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about elastic network interface and how to use it, see [Elastic Network Interface](https://www.alibabacloud.com/help/doc-detail/58496.html)
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterface;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachment;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachmentArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("networkInterfacesName");
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/24")
     *             .build());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .cidrBlock("192.168.0.0/24")
     *             .availabilityZone(default_.zones()[0].id())
     *             .vpcId(vpc.id())
     *             .build());
     * 
     *         var group = new SecurityGroup("group", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(vpc.id())
     *             .build());
     * 
     *         var interface_ = new NetworkInterface("interface", NetworkInterfaceArgs.builder()
     *             .name(String.format("%s%d", name))
     *             .vswitchId(vswitch.id())
     *             .securityGroups(group.id())
     *             .description("Basic test")
     *             .privateIp("192.168.0.2")
     *             .tags(Map.of("TF-VER", "0.11.3"))
     *             .build());
     * 
     *         var instance = new Instance("instance", InstanceArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .securityGroups(group.id())
     *             .instanceType("ecs.e3.xlarge")
     *             .systemDiskCategory("cloud_efficiency")
     *             .imageId("centos_7_04_64_20G_alibase_201701015.vhd")
     *             .instanceName(name)
     *             .vswitchId(vswitch.id())
     *             .internetMaxBandwidthOut(10)
     *             .build());
     * 
     *         var attachment = new NetworkInterfaceAttachment("attachment", NetworkInterfaceAttachmentArgs.builder()
     *             .instanceId(instance.id())
     *             .networkInterfaceId(interface_.id())
     *             .build());
     * 
     *         final var defaultGetNetworkInterfaces = EcsFunctions.getNetworkInterfaces(GetNetworkInterfacesArgs.builder()
     *             .ids(attachment.networkInterfaceId())
     *             .nameRegex(name)
     *             .tags(Map.of("TF-VER", "0.11.3"))
     *             .vpcId(vpc.id())
     *             .vswitchId(vswitch.id())
     *             .privateIp("192.168.0.2")
     *             .securityGroupId(group.id())
     *             .type("Secondary")
     *             .instanceId(instance.id())
     *             .build());
     * 
     *         ctx.export("eni0Name", defaultGetNetworkInterfaces.applyValue(_defaultGetNetworkInterfaces -> _defaultGetNetworkInterfaces.interfaces()[0].name()));
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `ids` - (Optional)  A list of ENI IDs.
     * * `nameRegex` - (Optional) A regex string to filter results by ENI name.
     * * `vpcId` - (Optional) The VPC ID linked to ENIs.
     * * `vswitchId` - (Optional) The vSwitch ID linked to ENIs.
     * * `privateIp` - (Optional) The primary private IP address of the ENI.
     * * `securityGroupId` - (Optional) The security group ID linked to ENIs.
     * * `name` - (Optional) The name of the ENIs.
     * * `type` - (Optional) The type of ENIs, Only support for &#34;Primary&#34; or &#34;Secondary&#34;.
     * * `instanceId` - (Optional) The ECS instance ID that the ENI is attached to.
     * * `tags` - (Optional) A map of tags assigned to ENIs.
     * * `outputFile` - (Optional) The name of output file that saves the filter results.
     * * `resourceGroupId` - (Optional, ForceNew, Available in 1.57.0+) The Id of resource group which the network interface belongs.
     * 
     */
    public static Output<GetNetworkInterfacesResult> getNetworkInterfaces(GetNetworkInterfacesArgs args) {
        return getNetworkInterfaces(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsNetworkInterfaces from version 1.123.1.
     * 
     * Use this data source to get a list of elastic network interfaces according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about elastic network interface and how to use it, see [Elastic Network Interface](https://www.alibabacloud.com/help/doc-detail/58496.html)
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterface;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachment;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachmentArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("networkInterfacesName");
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/24")
     *             .build());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .cidrBlock("192.168.0.0/24")
     *             .availabilityZone(default_.zones()[0].id())
     *             .vpcId(vpc.id())
     *             .build());
     * 
     *         var group = new SecurityGroup("group", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(vpc.id())
     *             .build());
     * 
     *         var interface_ = new NetworkInterface("interface", NetworkInterfaceArgs.builder()
     *             .name(String.format("%s%d", name))
     *             .vswitchId(vswitch.id())
     *             .securityGroups(group.id())
     *             .description("Basic test")
     *             .privateIp("192.168.0.2")
     *             .tags(Map.of("TF-VER", "0.11.3"))
     *             .build());
     * 
     *         var instance = new Instance("instance", InstanceArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .securityGroups(group.id())
     *             .instanceType("ecs.e3.xlarge")
     *             .systemDiskCategory("cloud_efficiency")
     *             .imageId("centos_7_04_64_20G_alibase_201701015.vhd")
     *             .instanceName(name)
     *             .vswitchId(vswitch.id())
     *             .internetMaxBandwidthOut(10)
     *             .build());
     * 
     *         var attachment = new NetworkInterfaceAttachment("attachment", NetworkInterfaceAttachmentArgs.builder()
     *             .instanceId(instance.id())
     *             .networkInterfaceId(interface_.id())
     *             .build());
     * 
     *         final var defaultGetNetworkInterfaces = EcsFunctions.getNetworkInterfaces(GetNetworkInterfacesArgs.builder()
     *             .ids(attachment.networkInterfaceId())
     *             .nameRegex(name)
     *             .tags(Map.of("TF-VER", "0.11.3"))
     *             .vpcId(vpc.id())
     *             .vswitchId(vswitch.id())
     *             .privateIp("192.168.0.2")
     *             .securityGroupId(group.id())
     *             .type("Secondary")
     *             .instanceId(instance.id())
     *             .build());
     * 
     *         ctx.export("eni0Name", defaultGetNetworkInterfaces.applyValue(_defaultGetNetworkInterfaces -> _defaultGetNetworkInterfaces.interfaces()[0].name()));
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `ids` - (Optional)  A list of ENI IDs.
     * * `nameRegex` - (Optional) A regex string to filter results by ENI name.
     * * `vpcId` - (Optional) The VPC ID linked to ENIs.
     * * `vswitchId` - (Optional) The vSwitch ID linked to ENIs.
     * * `privateIp` - (Optional) The primary private IP address of the ENI.
     * * `securityGroupId` - (Optional) The security group ID linked to ENIs.
     * * `name` - (Optional) The name of the ENIs.
     * * `type` - (Optional) The type of ENIs, Only support for &#34;Primary&#34; or &#34;Secondary&#34;.
     * * `instanceId` - (Optional) The ECS instance ID that the ENI is attached to.
     * * `tags` - (Optional) A map of tags assigned to ENIs.
     * * `outputFile` - (Optional) The name of output file that saves the filter results.
     * * `resourceGroupId` - (Optional, ForceNew, Available in 1.57.0+) The Id of resource group which the network interface belongs.
     * 
     */
    public static CompletableFuture<GetNetworkInterfacesResult> getNetworkInterfacesPlain(GetNetworkInterfacesPlainArgs args) {
        return getNetworkInterfacesPlain(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsNetworkInterfaces from version 1.123.1.
     * 
     * Use this data source to get a list of elastic network interfaces according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about elastic network interface and how to use it, see [Elastic Network Interface](https://www.alibabacloud.com/help/doc-detail/58496.html)
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterface;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachment;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachmentArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("networkInterfacesName");
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/24")
     *             .build());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .cidrBlock("192.168.0.0/24")
     *             .availabilityZone(default_.zones()[0].id())
     *             .vpcId(vpc.id())
     *             .build());
     * 
     *         var group = new SecurityGroup("group", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(vpc.id())
     *             .build());
     * 
     *         var interface_ = new NetworkInterface("interface", NetworkInterfaceArgs.builder()
     *             .name(String.format("%s%d", name))
     *             .vswitchId(vswitch.id())
     *             .securityGroups(group.id())
     *             .description("Basic test")
     *             .privateIp("192.168.0.2")
     *             .tags(Map.of("TF-VER", "0.11.3"))
     *             .build());
     * 
     *         var instance = new Instance("instance", InstanceArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .securityGroups(group.id())
     *             .instanceType("ecs.e3.xlarge")
     *             .systemDiskCategory("cloud_efficiency")
     *             .imageId("centos_7_04_64_20G_alibase_201701015.vhd")
     *             .instanceName(name)
     *             .vswitchId(vswitch.id())
     *             .internetMaxBandwidthOut(10)
     *             .build());
     * 
     *         var attachment = new NetworkInterfaceAttachment("attachment", NetworkInterfaceAttachmentArgs.builder()
     *             .instanceId(instance.id())
     *             .networkInterfaceId(interface_.id())
     *             .build());
     * 
     *         final var defaultGetNetworkInterfaces = EcsFunctions.getNetworkInterfaces(GetNetworkInterfacesArgs.builder()
     *             .ids(attachment.networkInterfaceId())
     *             .nameRegex(name)
     *             .tags(Map.of("TF-VER", "0.11.3"))
     *             .vpcId(vpc.id())
     *             .vswitchId(vswitch.id())
     *             .privateIp("192.168.0.2")
     *             .securityGroupId(group.id())
     *             .type("Secondary")
     *             .instanceId(instance.id())
     *             .build());
     * 
     *         ctx.export("eni0Name", defaultGetNetworkInterfaces.applyValue(_defaultGetNetworkInterfaces -> _defaultGetNetworkInterfaces.interfaces()[0].name()));
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `ids` - (Optional)  A list of ENI IDs.
     * * `nameRegex` - (Optional) A regex string to filter results by ENI name.
     * * `vpcId` - (Optional) The VPC ID linked to ENIs.
     * * `vswitchId` - (Optional) The vSwitch ID linked to ENIs.
     * * `privateIp` - (Optional) The primary private IP address of the ENI.
     * * `securityGroupId` - (Optional) The security group ID linked to ENIs.
     * * `name` - (Optional) The name of the ENIs.
     * * `type` - (Optional) The type of ENIs, Only support for &#34;Primary&#34; or &#34;Secondary&#34;.
     * * `instanceId` - (Optional) The ECS instance ID that the ENI is attached to.
     * * `tags` - (Optional) A map of tags assigned to ENIs.
     * * `outputFile` - (Optional) The name of output file that saves the filter results.
     * * `resourceGroupId` - (Optional, ForceNew, Available in 1.57.0+) The Id of resource group which the network interface belongs.
     * 
     */
    public static Output<GetNetworkInterfacesResult> getNetworkInterfaces(GetNetworkInterfacesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getNetworkInterfaces:getNetworkInterfaces", TypeShape.of(GetNetworkInterfacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsNetworkInterfaces from version 1.123.1.
     * 
     * Use this data source to get a list of elastic network interfaces according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about elastic network interface and how to use it, see [Elastic Network Interface](https://www.alibabacloud.com/help/doc-detail/58496.html)
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterface;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachment;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachmentArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("networkInterfacesName");
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/24")
     *             .build());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .cidrBlock("192.168.0.0/24")
     *             .availabilityZone(default_.zones()[0].id())
     *             .vpcId(vpc.id())
     *             .build());
     * 
     *         var group = new SecurityGroup("group", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(vpc.id())
     *             .build());
     * 
     *         var interface_ = new NetworkInterface("interface", NetworkInterfaceArgs.builder()
     *             .name(String.format("%s%d", name))
     *             .vswitchId(vswitch.id())
     *             .securityGroups(group.id())
     *             .description("Basic test")
     *             .privateIp("192.168.0.2")
     *             .tags(Map.of("TF-VER", "0.11.3"))
     *             .build());
     * 
     *         var instance = new Instance("instance", InstanceArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .securityGroups(group.id())
     *             .instanceType("ecs.e3.xlarge")
     *             .systemDiskCategory("cloud_efficiency")
     *             .imageId("centos_7_04_64_20G_alibase_201701015.vhd")
     *             .instanceName(name)
     *             .vswitchId(vswitch.id())
     *             .internetMaxBandwidthOut(10)
     *             .build());
     * 
     *         var attachment = new NetworkInterfaceAttachment("attachment", NetworkInterfaceAttachmentArgs.builder()
     *             .instanceId(instance.id())
     *             .networkInterfaceId(interface_.id())
     *             .build());
     * 
     *         final var defaultGetNetworkInterfaces = EcsFunctions.getNetworkInterfaces(GetNetworkInterfacesArgs.builder()
     *             .ids(attachment.networkInterfaceId())
     *             .nameRegex(name)
     *             .tags(Map.of("TF-VER", "0.11.3"))
     *             .vpcId(vpc.id())
     *             .vswitchId(vswitch.id())
     *             .privateIp("192.168.0.2")
     *             .securityGroupId(group.id())
     *             .type("Secondary")
     *             .instanceId(instance.id())
     *             .build());
     * 
     *         ctx.export("eni0Name", defaultGetNetworkInterfaces.applyValue(_defaultGetNetworkInterfaces -> _defaultGetNetworkInterfaces.interfaces()[0].name()));
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `ids` - (Optional)  A list of ENI IDs.
     * * `nameRegex` - (Optional) A regex string to filter results by ENI name.
     * * `vpcId` - (Optional) The VPC ID linked to ENIs.
     * * `vswitchId` - (Optional) The vSwitch ID linked to ENIs.
     * * `privateIp` - (Optional) The primary private IP address of the ENI.
     * * `securityGroupId` - (Optional) The security group ID linked to ENIs.
     * * `name` - (Optional) The name of the ENIs.
     * * `type` - (Optional) The type of ENIs, Only support for &#34;Primary&#34; or &#34;Secondary&#34;.
     * * `instanceId` - (Optional) The ECS instance ID that the ENI is attached to.
     * * `tags` - (Optional) A map of tags assigned to ENIs.
     * * `outputFile` - (Optional) The name of output file that saves the filter results.
     * * `resourceGroupId` - (Optional, ForceNew, Available in 1.57.0+) The Id of resource group which the network interface belongs.
     * 
     */
    public static Output<GetNetworkInterfacesResult> getNetworkInterfaces(GetNetworkInterfacesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getNetworkInterfaces:getNetworkInterfaces", TypeShape.of(GetNetworkInterfacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsNetworkInterfaces from version 1.123.1.
     * 
     * Use this data source to get a list of elastic network interfaces according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about elastic network interface and how to use it, see [Elastic Network Interface](https://www.alibabacloud.com/help/doc-detail/58496.html)
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.AlicloudFunctions;
     * import com.pulumi.alicloud.inputs.GetZonesArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.ecs.SecurityGroup;
     * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterface;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachment;
     * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachmentArgs;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetNetworkInterfacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("networkInterfacesName");
     *         var vpc = new Network("vpc", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("192.168.0.0/24")
     *             .build());
     * 
     *         final var default = AlicloudFunctions.getZones(GetZonesArgs.builder()
     *             .availableResourceCreation("VSwitch")
     *             .build());
     * 
     *         var vswitch = new Switch("vswitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .cidrBlock("192.168.0.0/24")
     *             .availabilityZone(default_.zones()[0].id())
     *             .vpcId(vpc.id())
     *             .build());
     * 
     *         var group = new SecurityGroup("group", SecurityGroupArgs.builder()
     *             .name(name)
     *             .vpcId(vpc.id())
     *             .build());
     * 
     *         var interface_ = new NetworkInterface("interface", NetworkInterfaceArgs.builder()
     *             .name(String.format("%s%d", name))
     *             .vswitchId(vswitch.id())
     *             .securityGroups(group.id())
     *             .description("Basic test")
     *             .privateIp("192.168.0.2")
     *             .tags(Map.of("TF-VER", "0.11.3"))
     *             .build());
     * 
     *         var instance = new Instance("instance", InstanceArgs.builder()
     *             .availabilityZone(default_.zones()[0].id())
     *             .securityGroups(group.id())
     *             .instanceType("ecs.e3.xlarge")
     *             .systemDiskCategory("cloud_efficiency")
     *             .imageId("centos_7_04_64_20G_alibase_201701015.vhd")
     *             .instanceName(name)
     *             .vswitchId(vswitch.id())
     *             .internetMaxBandwidthOut(10)
     *             .build());
     * 
     *         var attachment = new NetworkInterfaceAttachment("attachment", NetworkInterfaceAttachmentArgs.builder()
     *             .instanceId(instance.id())
     *             .networkInterfaceId(interface_.id())
     *             .build());
     * 
     *         final var defaultGetNetworkInterfaces = EcsFunctions.getNetworkInterfaces(GetNetworkInterfacesArgs.builder()
     *             .ids(attachment.networkInterfaceId())
     *             .nameRegex(name)
     *             .tags(Map.of("TF-VER", "0.11.3"))
     *             .vpcId(vpc.id())
     *             .vswitchId(vswitch.id())
     *             .privateIp("192.168.0.2")
     *             .securityGroupId(group.id())
     *             .type("Secondary")
     *             .instanceId(instance.id())
     *             .build());
     * 
     *         ctx.export("eni0Name", defaultGetNetworkInterfaces.applyValue(_defaultGetNetworkInterfaces -> _defaultGetNetworkInterfaces.interfaces()[0].name()));
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `ids` - (Optional)  A list of ENI IDs.
     * * `nameRegex` - (Optional) A regex string to filter results by ENI name.
     * * `vpcId` - (Optional) The VPC ID linked to ENIs.
     * * `vswitchId` - (Optional) The vSwitch ID linked to ENIs.
     * * `privateIp` - (Optional) The primary private IP address of the ENI.
     * * `securityGroupId` - (Optional) The security group ID linked to ENIs.
     * * `name` - (Optional) The name of the ENIs.
     * * `type` - (Optional) The type of ENIs, Only support for &#34;Primary&#34; or &#34;Secondary&#34;.
     * * `instanceId` - (Optional) The ECS instance ID that the ENI is attached to.
     * * `tags` - (Optional) A map of tags assigned to ENIs.
     * * `outputFile` - (Optional) The name of output file that saves the filter results.
     * * `resourceGroupId` - (Optional, ForceNew, Available in 1.57.0+) The Id of resource group which the network interface belongs.
     * 
     */
    public static CompletableFuture<GetNetworkInterfacesResult> getNetworkInterfacesPlain(GetNetworkInterfacesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getNetworkInterfaces:getNetworkInterfaces", TypeShape.of(GetNetworkInterfacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `alicloud.ecs.getSecurityGroupRules` data source provides a collection of security permissions of a specific security group.
     * Each collection item represents a single `ingress` or `egress` permission rule.
     * The ID of the security group can be provided via a variable or the result from the other data source `alicloud.ecs.getSecurityGroups`.
     * 
     * ## Example Usage
     * 
     * The following example shows how to obtain details about a security group rule and how to pass its data to an instance at launch time.
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupRulesArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var securityGroupId = config.get("securityGroupId");
     *         // Or get it from the alicloud_security_groups data source.
     *         // Please note that the data source arguments must be enough to filter results to one security group.
     *         final var groupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex("api")
     *             .build());
     * 
     *         // Filter the security group rule by group
     *         final var ingressRulesDs = EcsFunctions.getSecurityGroupRules(GetSecurityGroupRulesArgs.builder()
     *             .groupId(groupsDs.groups()[0].id())
     *             .nicType("internet")
     *             .direction("ingress")
     *             .ipProtocol("tcp")
     *             .build());
     * 
     *         // Pass port_range to the backend service
     *         var backend = new Instance("backend", InstanceArgs.builder()
     *             .userData(String.format("config_service.sh --portrange=%s", ingressRulesDs.rules()[0].portRange()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSecurityGroupRulesResult> getSecurityGroupRules(GetSecurityGroupRulesArgs args) {
        return getSecurityGroupRules(args, InvokeOptions.Empty);
    }
    /**
     * The `alicloud.ecs.getSecurityGroupRules` data source provides a collection of security permissions of a specific security group.
     * Each collection item represents a single `ingress` or `egress` permission rule.
     * The ID of the security group can be provided via a variable or the result from the other data source `alicloud.ecs.getSecurityGroups`.
     * 
     * ## Example Usage
     * 
     * The following example shows how to obtain details about a security group rule and how to pass its data to an instance at launch time.
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupRulesArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var securityGroupId = config.get("securityGroupId");
     *         // Or get it from the alicloud_security_groups data source.
     *         // Please note that the data source arguments must be enough to filter results to one security group.
     *         final var groupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex("api")
     *             .build());
     * 
     *         // Filter the security group rule by group
     *         final var ingressRulesDs = EcsFunctions.getSecurityGroupRules(GetSecurityGroupRulesArgs.builder()
     *             .groupId(groupsDs.groups()[0].id())
     *             .nicType("internet")
     *             .direction("ingress")
     *             .ipProtocol("tcp")
     *             .build());
     * 
     *         // Pass port_range to the backend service
     *         var backend = new Instance("backend", InstanceArgs.builder()
     *             .userData(String.format("config_service.sh --portrange=%s", ingressRulesDs.rules()[0].portRange()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSecurityGroupRulesResult> getSecurityGroupRulesPlain(GetSecurityGroupRulesPlainArgs args) {
        return getSecurityGroupRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * The `alicloud.ecs.getSecurityGroupRules` data source provides a collection of security permissions of a specific security group.
     * Each collection item represents a single `ingress` or `egress` permission rule.
     * The ID of the security group can be provided via a variable or the result from the other data source `alicloud.ecs.getSecurityGroups`.
     * 
     * ## Example Usage
     * 
     * The following example shows how to obtain details about a security group rule and how to pass its data to an instance at launch time.
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupRulesArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var securityGroupId = config.get("securityGroupId");
     *         // Or get it from the alicloud_security_groups data source.
     *         // Please note that the data source arguments must be enough to filter results to one security group.
     *         final var groupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex("api")
     *             .build());
     * 
     *         // Filter the security group rule by group
     *         final var ingressRulesDs = EcsFunctions.getSecurityGroupRules(GetSecurityGroupRulesArgs.builder()
     *             .groupId(groupsDs.groups()[0].id())
     *             .nicType("internet")
     *             .direction("ingress")
     *             .ipProtocol("tcp")
     *             .build());
     * 
     *         // Pass port_range to the backend service
     *         var backend = new Instance("backend", InstanceArgs.builder()
     *             .userData(String.format("config_service.sh --portrange=%s", ingressRulesDs.rules()[0].portRange()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSecurityGroupRulesResult> getSecurityGroupRules(GetSecurityGroupRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getSecurityGroupRules:getSecurityGroupRules", TypeShape.of(GetSecurityGroupRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `alicloud.ecs.getSecurityGroupRules` data source provides a collection of security permissions of a specific security group.
     * Each collection item represents a single `ingress` or `egress` permission rule.
     * The ID of the security group can be provided via a variable or the result from the other data source `alicloud.ecs.getSecurityGroups`.
     * 
     * ## Example Usage
     * 
     * The following example shows how to obtain details about a security group rule and how to pass its data to an instance at launch time.
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupRulesArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var securityGroupId = config.get("securityGroupId");
     *         // Or get it from the alicloud_security_groups data source.
     *         // Please note that the data source arguments must be enough to filter results to one security group.
     *         final var groupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex("api")
     *             .build());
     * 
     *         // Filter the security group rule by group
     *         final var ingressRulesDs = EcsFunctions.getSecurityGroupRules(GetSecurityGroupRulesArgs.builder()
     *             .groupId(groupsDs.groups()[0].id())
     *             .nicType("internet")
     *             .direction("ingress")
     *             .ipProtocol("tcp")
     *             .build());
     * 
     *         // Pass port_range to the backend service
     *         var backend = new Instance("backend", InstanceArgs.builder()
     *             .userData(String.format("config_service.sh --portrange=%s", ingressRulesDs.rules()[0].portRange()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSecurityGroupRulesResult> getSecurityGroupRules(GetSecurityGroupRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getSecurityGroupRules:getSecurityGroupRules", TypeShape.of(GetSecurityGroupRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `alicloud.ecs.getSecurityGroupRules` data source provides a collection of security permissions of a specific security group.
     * Each collection item represents a single `ingress` or `egress` permission rule.
     * The ID of the security group can be provided via a variable or the result from the other data source `alicloud.ecs.getSecurityGroups`.
     * 
     * ## Example Usage
     * 
     * The following example shows how to obtain details about a security group rule and how to pass its data to an instance at launch time.
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupRulesArgs;
     * import com.pulumi.alicloud.ecs.Instance;
     * import com.pulumi.alicloud.ecs.InstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var securityGroupId = config.get("securityGroupId");
     *         // Or get it from the alicloud_security_groups data source.
     *         // Please note that the data source arguments must be enough to filter results to one security group.
     *         final var groupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex("api")
     *             .build());
     * 
     *         // Filter the security group rule by group
     *         final var ingressRulesDs = EcsFunctions.getSecurityGroupRules(GetSecurityGroupRulesArgs.builder()
     *             .groupId(groupsDs.groups()[0].id())
     *             .nicType("internet")
     *             .direction("ingress")
     *             .ipProtocol("tcp")
     *             .build());
     * 
     *         // Pass port_range to the backend service
     *         var backend = new Instance("backend", InstanceArgs.builder()
     *             .userData(String.format("config_service.sh --portrange=%s", ingressRulesDs.rules()[0].portRange()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSecurityGroupRulesResult> getSecurityGroupRulesPlain(GetSecurityGroupRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getSecurityGroupRules:getSecurityGroupRules", TypeShape.of(GetSecurityGroupRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of Security Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Filter security groups and print the results into a file
     *         final var secGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex("^web-")
     *             .outputFile("web_access.json")
     *             .build());
     * 
     *         // In conjunction with a VPC
     *         var primaryVpcDs = new Network("primaryVpcDs");
     * 
     *         final var primarySecGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .vpcId(primaryVpcDs.id())
     *             .build());
     * 
     *         ctx.export("firstGroupId", primarySecGroupsDs.applyValue(_primarySecGroupsDs -> _primarySecGroupsDs.groups()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSecurityGroupsResult> getSecurityGroups() {
        return getSecurityGroups(GetSecurityGroupsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of Security Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Filter security groups and print the results into a file
     *         final var secGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex("^web-")
     *             .outputFile("web_access.json")
     *             .build());
     * 
     *         // In conjunction with a VPC
     *         var primaryVpcDs = new Network("primaryVpcDs");
     * 
     *         final var primarySecGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .vpcId(primaryVpcDs.id())
     *             .build());
     * 
     *         ctx.export("firstGroupId", primarySecGroupsDs.applyValue(_primarySecGroupsDs -> _primarySecGroupsDs.groups()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSecurityGroupsResult> getSecurityGroupsPlain() {
        return getSecurityGroupsPlain(GetSecurityGroupsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of Security Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Filter security groups and print the results into a file
     *         final var secGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex("^web-")
     *             .outputFile("web_access.json")
     *             .build());
     * 
     *         // In conjunction with a VPC
     *         var primaryVpcDs = new Network("primaryVpcDs");
     * 
     *         final var primarySecGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .vpcId(primaryVpcDs.id())
     *             .build());
     * 
     *         ctx.export("firstGroupId", primarySecGroupsDs.applyValue(_primarySecGroupsDs -> _primarySecGroupsDs.groups()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSecurityGroupsResult> getSecurityGroups(GetSecurityGroupsArgs args) {
        return getSecurityGroups(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of Security Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Filter security groups and print the results into a file
     *         final var secGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex("^web-")
     *             .outputFile("web_access.json")
     *             .build());
     * 
     *         // In conjunction with a VPC
     *         var primaryVpcDs = new Network("primaryVpcDs");
     * 
     *         final var primarySecGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .vpcId(primaryVpcDs.id())
     *             .build());
     * 
     *         ctx.export("firstGroupId", primarySecGroupsDs.applyValue(_primarySecGroupsDs -> _primarySecGroupsDs.groups()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSecurityGroupsResult> getSecurityGroupsPlain(GetSecurityGroupsPlainArgs args) {
        return getSecurityGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of Security Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Filter security groups and print the results into a file
     *         final var secGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex("^web-")
     *             .outputFile("web_access.json")
     *             .build());
     * 
     *         // In conjunction with a VPC
     *         var primaryVpcDs = new Network("primaryVpcDs");
     * 
     *         final var primarySecGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .vpcId(primaryVpcDs.id())
     *             .build());
     * 
     *         ctx.export("firstGroupId", primarySecGroupsDs.applyValue(_primarySecGroupsDs -> _primarySecGroupsDs.groups()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSecurityGroupsResult> getSecurityGroups(GetSecurityGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getSecurityGroups:getSecurityGroups", TypeShape.of(GetSecurityGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of Security Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Filter security groups and print the results into a file
     *         final var secGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex("^web-")
     *             .outputFile("web_access.json")
     *             .build());
     * 
     *         // In conjunction with a VPC
     *         var primaryVpcDs = new Network("primaryVpcDs");
     * 
     *         final var primarySecGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .vpcId(primaryVpcDs.id())
     *             .build());
     * 
     *         ctx.export("firstGroupId", primarySecGroupsDs.applyValue(_primarySecGroupsDs -> _primarySecGroupsDs.groups()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSecurityGroupsResult> getSecurityGroups(GetSecurityGroupsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getSecurityGroups:getSecurityGroups", TypeShape.of(GetSecurityGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of Security Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSecurityGroupsArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Filter security groups and print the results into a file
     *         final var secGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .nameRegex("^web-")
     *             .outputFile("web_access.json")
     *             .build());
     * 
     *         // In conjunction with a VPC
     *         var primaryVpcDs = new Network("primaryVpcDs");
     * 
     *         final var primarySecGroupsDs = EcsFunctions.getSecurityGroups(GetSecurityGroupsArgs.builder()
     *             .vpcId(primaryVpcDs.id())
     *             .build());
     * 
     *         ctx.export("firstGroupId", primarySecGroupsDs.applyValue(_primarySecGroupsDs -> _primarySecGroupsDs.groups()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSecurityGroupsResult> getSecurityGroupsPlain(GetSecurityGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getSecurityGroups:getSecurityGroups", TypeShape.of(GetSecurityGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsSnapshots from version 1.120.0.
     * 
     * Use this data source to get a list of snapshot according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about snapshot and how to use it, see [Snapshot](https://www.alibabacloud.com/help/doc-detail/25460.html).
     * 
     * &gt; **NOTE:**  Available in 1.40.0+.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var snapshots = EcsFunctions.getSnapshots(GetSnapshotsArgs.builder()
     *             .ids("s-123456890abcdef")
     *             .nameRegex("tf-testAcc-snapshot")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `instanceId` - (Optional) The specified instance ID.
     * * `diskId` - (Optional) The specified disk ID.
     * * `encrypted` - (Optional) Queries the encrypted snapshots. Optional values: `true`: Encrypted snapshots. `false`: No encryption attribute limit. Default value: `false`.
     * * `ids` - (Optional)  A list of snapshot IDs.
     * * `nameRegex` - (Optional) A regex string to filter results by snapshot name.
     * * `status` - (Optional) The specified snapshot status. Default value: `all`. Optional values:
     *   * progressing: The snapshots are being created.
     *   * accomplished: The snapshots are ready to use.
     *   * failed: The snapshot creation failed.
     *   * all: All status.
     * * `type` - (Optional) The snapshot category. Default value: `all`. Optional values:
     *   * auto: Auto snapshots.
     *   * user: Manual snapshots.
     *   * all: Auto and manual snapshots.
     * * `sourceDiskType` - (Optional) The type of source disk:
     *   * System: The snapshots are created for system disks.
     *   * Data: The snapshots are created for data disks.
     * * `usage` - (Optional) The usage of the snapshot:
     *   * image: The snapshots are used to create custom images.
     *   * disk: The snapshots are used to CreateDisk.
     *   * mage_disk: The snapshots are used to create custom images and data disks.
     *   * none: The snapshots are not used yet.
     * * `tags` - (Optional) A map of tags assigned to snapshots.
     * * `outputFile` - (Optional) The name of output file that saves the filter results.
     * 
     */
    public static Output<GetSnapshotsResult> getSnapshots() {
        return getSnapshots(GetSnapshotsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsSnapshots from version 1.120.0.
     * 
     * Use this data source to get a list of snapshot according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about snapshot and how to use it, see [Snapshot](https://www.alibabacloud.com/help/doc-detail/25460.html).
     * 
     * &gt; **NOTE:**  Available in 1.40.0+.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var snapshots = EcsFunctions.getSnapshots(GetSnapshotsArgs.builder()
     *             .ids("s-123456890abcdef")
     *             .nameRegex("tf-testAcc-snapshot")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `instanceId` - (Optional) The specified instance ID.
     * * `diskId` - (Optional) The specified disk ID.
     * * `encrypted` - (Optional) Queries the encrypted snapshots. Optional values: `true`: Encrypted snapshots. `false`: No encryption attribute limit. Default value: `false`.
     * * `ids` - (Optional)  A list of snapshot IDs.
     * * `nameRegex` - (Optional) A regex string to filter results by snapshot name.
     * * `status` - (Optional) The specified snapshot status. Default value: `all`. Optional values:
     *   * progressing: The snapshots are being created.
     *   * accomplished: The snapshots are ready to use.
     *   * failed: The snapshot creation failed.
     *   * all: All status.
     * * `type` - (Optional) The snapshot category. Default value: `all`. Optional values:
     *   * auto: Auto snapshots.
     *   * user: Manual snapshots.
     *   * all: Auto and manual snapshots.
     * * `sourceDiskType` - (Optional) The type of source disk:
     *   * System: The snapshots are created for system disks.
     *   * Data: The snapshots are created for data disks.
     * * `usage` - (Optional) The usage of the snapshot:
     *   * image: The snapshots are used to create custom images.
     *   * disk: The snapshots are used to CreateDisk.
     *   * mage_disk: The snapshots are used to create custom images and data disks.
     *   * none: The snapshots are not used yet.
     * * `tags` - (Optional) A map of tags assigned to snapshots.
     * * `outputFile` - (Optional) The name of output file that saves the filter results.
     * 
     */
    public static CompletableFuture<GetSnapshotsResult> getSnapshotsPlain() {
        return getSnapshotsPlain(GetSnapshotsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsSnapshots from version 1.120.0.
     * 
     * Use this data source to get a list of snapshot according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about snapshot and how to use it, see [Snapshot](https://www.alibabacloud.com/help/doc-detail/25460.html).
     * 
     * &gt; **NOTE:**  Available in 1.40.0+.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var snapshots = EcsFunctions.getSnapshots(GetSnapshotsArgs.builder()
     *             .ids("s-123456890abcdef")
     *             .nameRegex("tf-testAcc-snapshot")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `instanceId` - (Optional) The specified instance ID.
     * * `diskId` - (Optional) The specified disk ID.
     * * `encrypted` - (Optional) Queries the encrypted snapshots. Optional values: `true`: Encrypted snapshots. `false`: No encryption attribute limit. Default value: `false`.
     * * `ids` - (Optional)  A list of snapshot IDs.
     * * `nameRegex` - (Optional) A regex string to filter results by snapshot name.
     * * `status` - (Optional) The specified snapshot status. Default value: `all`. Optional values:
     *   * progressing: The snapshots are being created.
     *   * accomplished: The snapshots are ready to use.
     *   * failed: The snapshot creation failed.
     *   * all: All status.
     * * `type` - (Optional) The snapshot category. Default value: `all`. Optional values:
     *   * auto: Auto snapshots.
     *   * user: Manual snapshots.
     *   * all: Auto and manual snapshots.
     * * `sourceDiskType` - (Optional) The type of source disk:
     *   * System: The snapshots are created for system disks.
     *   * Data: The snapshots are created for data disks.
     * * `usage` - (Optional) The usage of the snapshot:
     *   * image: The snapshots are used to create custom images.
     *   * disk: The snapshots are used to CreateDisk.
     *   * mage_disk: The snapshots are used to create custom images and data disks.
     *   * none: The snapshots are not used yet.
     * * `tags` - (Optional) A map of tags assigned to snapshots.
     * * `outputFile` - (Optional) The name of output file that saves the filter results.
     * 
     */
    public static Output<GetSnapshotsResult> getSnapshots(GetSnapshotsArgs args) {
        return getSnapshots(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsSnapshots from version 1.120.0.
     * 
     * Use this data source to get a list of snapshot according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about snapshot and how to use it, see [Snapshot](https://www.alibabacloud.com/help/doc-detail/25460.html).
     * 
     * &gt; **NOTE:**  Available in 1.40.0+.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var snapshots = EcsFunctions.getSnapshots(GetSnapshotsArgs.builder()
     *             .ids("s-123456890abcdef")
     *             .nameRegex("tf-testAcc-snapshot")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `instanceId` - (Optional) The specified instance ID.
     * * `diskId` - (Optional) The specified disk ID.
     * * `encrypted` - (Optional) Queries the encrypted snapshots. Optional values: `true`: Encrypted snapshots. `false`: No encryption attribute limit. Default value: `false`.
     * * `ids` - (Optional)  A list of snapshot IDs.
     * * `nameRegex` - (Optional) A regex string to filter results by snapshot name.
     * * `status` - (Optional) The specified snapshot status. Default value: `all`. Optional values:
     *   * progressing: The snapshots are being created.
     *   * accomplished: The snapshots are ready to use.
     *   * failed: The snapshot creation failed.
     *   * all: All status.
     * * `type` - (Optional) The snapshot category. Default value: `all`. Optional values:
     *   * auto: Auto snapshots.
     *   * user: Manual snapshots.
     *   * all: Auto and manual snapshots.
     * * `sourceDiskType` - (Optional) The type of source disk:
     *   * System: The snapshots are created for system disks.
     *   * Data: The snapshots are created for data disks.
     * * `usage` - (Optional) The usage of the snapshot:
     *   * image: The snapshots are used to create custom images.
     *   * disk: The snapshots are used to CreateDisk.
     *   * mage_disk: The snapshots are used to create custom images and data disks.
     *   * none: The snapshots are not used yet.
     * * `tags` - (Optional) A map of tags assigned to snapshots.
     * * `outputFile` - (Optional) The name of output file that saves the filter results.
     * 
     */
    public static CompletableFuture<GetSnapshotsResult> getSnapshotsPlain(GetSnapshotsPlainArgs args) {
        return getSnapshotsPlain(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsSnapshots from version 1.120.0.
     * 
     * Use this data source to get a list of snapshot according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about snapshot and how to use it, see [Snapshot](https://www.alibabacloud.com/help/doc-detail/25460.html).
     * 
     * &gt; **NOTE:**  Available in 1.40.0+.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var snapshots = EcsFunctions.getSnapshots(GetSnapshotsArgs.builder()
     *             .ids("s-123456890abcdef")
     *             .nameRegex("tf-testAcc-snapshot")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `instanceId` - (Optional) The specified instance ID.
     * * `diskId` - (Optional) The specified disk ID.
     * * `encrypted` - (Optional) Queries the encrypted snapshots. Optional values: `true`: Encrypted snapshots. `false`: No encryption attribute limit. Default value: `false`.
     * * `ids` - (Optional)  A list of snapshot IDs.
     * * `nameRegex` - (Optional) A regex string to filter results by snapshot name.
     * * `status` - (Optional) The specified snapshot status. Default value: `all`. Optional values:
     *   * progressing: The snapshots are being created.
     *   * accomplished: The snapshots are ready to use.
     *   * failed: The snapshot creation failed.
     *   * all: All status.
     * * `type` - (Optional) The snapshot category. Default value: `all`. Optional values:
     *   * auto: Auto snapshots.
     *   * user: Manual snapshots.
     *   * all: Auto and manual snapshots.
     * * `sourceDiskType` - (Optional) The type of source disk:
     *   * System: The snapshots are created for system disks.
     *   * Data: The snapshots are created for data disks.
     * * `usage` - (Optional) The usage of the snapshot:
     *   * image: The snapshots are used to create custom images.
     *   * disk: The snapshots are used to CreateDisk.
     *   * mage_disk: The snapshots are used to create custom images and data disks.
     *   * none: The snapshots are not used yet.
     * * `tags` - (Optional) A map of tags assigned to snapshots.
     * * `outputFile` - (Optional) The name of output file that saves the filter results.
     * 
     */
    public static Output<GetSnapshotsResult> getSnapshots(GetSnapshotsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getSnapshots:getSnapshots", TypeShape.of(GetSnapshotsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsSnapshots from version 1.120.0.
     * 
     * Use this data source to get a list of snapshot according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about snapshot and how to use it, see [Snapshot](https://www.alibabacloud.com/help/doc-detail/25460.html).
     * 
     * &gt; **NOTE:**  Available in 1.40.0+.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var snapshots = EcsFunctions.getSnapshots(GetSnapshotsArgs.builder()
     *             .ids("s-123456890abcdef")
     *             .nameRegex("tf-testAcc-snapshot")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `instanceId` - (Optional) The specified instance ID.
     * * `diskId` - (Optional) The specified disk ID.
     * * `encrypted` - (Optional) Queries the encrypted snapshots. Optional values: `true`: Encrypted snapshots. `false`: No encryption attribute limit. Default value: `false`.
     * * `ids` - (Optional)  A list of snapshot IDs.
     * * `nameRegex` - (Optional) A regex string to filter results by snapshot name.
     * * `status` - (Optional) The specified snapshot status. Default value: `all`. Optional values:
     *   * progressing: The snapshots are being created.
     *   * accomplished: The snapshots are ready to use.
     *   * failed: The snapshot creation failed.
     *   * all: All status.
     * * `type` - (Optional) The snapshot category. Default value: `all`. Optional values:
     *   * auto: Auto snapshots.
     *   * user: Manual snapshots.
     *   * all: Auto and manual snapshots.
     * * `sourceDiskType` - (Optional) The type of source disk:
     *   * System: The snapshots are created for system disks.
     *   * Data: The snapshots are created for data disks.
     * * `usage` - (Optional) The usage of the snapshot:
     *   * image: The snapshots are used to create custom images.
     *   * disk: The snapshots are used to CreateDisk.
     *   * mage_disk: The snapshots are used to create custom images and data disks.
     *   * none: The snapshots are not used yet.
     * * `tags` - (Optional) A map of tags assigned to snapshots.
     * * `outputFile` - (Optional) The name of output file that saves the filter results.
     * 
     */
    public static Output<GetSnapshotsResult> getSnapshots(GetSnapshotsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:ecs/getSnapshots:getSnapshots", TypeShape.of(GetSnapshotsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **DEPRECATED:** This datasource has been renamed to alicloud.ecs.getEcsSnapshots from version 1.120.0.
     * 
     * Use this data source to get a list of snapshot according to the specified filters in an Alibaba Cloud account.
     * 
     * For information about snapshot and how to use it, see [Snapshot](https://www.alibabacloud.com/help/doc-detail/25460.html).
     * 
     * &gt; **NOTE:**  Available in 1.40.0+.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ecs.EcsFunctions;
     * import com.pulumi.alicloud.ecs.inputs.GetSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var snapshots = EcsFunctions.getSnapshots(GetSnapshotsArgs.builder()
     *             .ids("s-123456890abcdef")
     *             .nameRegex("tf-testAcc-snapshot")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     * ## Argument Reference
     * 
     * The following arguments are supported:
     * 
     * * `instanceId` - (Optional) The specified instance ID.
     * * `diskId` - (Optional) The specified disk ID.
     * * `encrypted` - (Optional) Queries the encrypted snapshots. Optional values: `true`: Encrypted snapshots. `false`: No encryption attribute limit. Default value: `false`.
     * * `ids` - (Optional)  A list of snapshot IDs.
     * * `nameRegex` - (Optional) A regex string to filter results by snapshot name.
     * * `status` - (Optional) The specified snapshot status. Default value: `all`. Optional values:
     *   * progressing: The snapshots are being created.
     *   * accomplished: The snapshots are ready to use.
     *   * failed: The snapshot creation failed.
     *   * all: All status.
     * * `type` - (Optional) The snapshot category. Default value: `all`. Optional values:
     *   * auto: Auto snapshots.
     *   * user: Manual snapshots.
     *   * all: Auto and manual snapshots.
     * * `sourceDiskType` - (Optional) The type of source disk:
     *   * System: The snapshots are created for system disks.
     *   * Data: The snapshots are created for data disks.
     * * `usage` - (Optional) The usage of the snapshot:
     *   * image: The snapshots are used to create custom images.
     *   * disk: The snapshots are used to CreateDisk.
     *   * mage_disk: The snapshots are used to create custom images and data disks.
     *   * none: The snapshots are not used yet.
     * * `tags` - (Optional) A map of tags assigned to snapshots.
     * * `outputFile` - (Optional) The name of output file that saves the filter results.
     * 
     */
    public static CompletableFuture<GetSnapshotsResult> getSnapshotsPlain(GetSnapshotsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ecs/getSnapshots:getSnapshots", TypeShape.of(GetSnapshotsResult.class), args, Utilities.withVersion(options));
    }
}
