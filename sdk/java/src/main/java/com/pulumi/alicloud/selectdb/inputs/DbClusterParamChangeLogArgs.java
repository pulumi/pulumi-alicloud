// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.selectdb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DbClusterParamChangeLogArgs extends com.pulumi.resources.ResourceArgs {

    public static final DbClusterParamChangeLogArgs Empty = new DbClusterParamChangeLogArgs();

    /**
     * The id of parameter change.
     * 
     */
    @Import(name="configId")
    private @Nullable Output<Integer> configId;

    /**
     * @return The id of parameter change.
     * 
     */
    public Optional<Output<Integer>> configId() {
        return Optional.ofNullable(this.configId);
    }

    /**
     * When the parameter change is created.
     * 
     */
    @Import(name="gmtCreated")
    private @Nullable Output<String> gmtCreated;

    /**
     * @return When the parameter change is created.
     * 
     */
    public Optional<Output<String>> gmtCreated() {
        return Optional.ofNullable(this.gmtCreated);
    }

    /**
     * When the parameter change is modified.
     * 
     */
    @Import(name="gmtModified")
    private @Nullable Output<String> gmtModified;

    /**
     * @return When the parameter change is modified.
     * 
     */
    public Optional<Output<String>> gmtModified() {
        return Optional.ofNullable(this.gmtModified);
    }

    /**
     * Whether the parameter changing is applied.
     * 
     */
    @Import(name="isApplied")
    private @Nullable Output<Boolean> isApplied;

    /**
     * @return Whether the parameter changing is applied.
     * 
     */
    public Optional<Output<Boolean>> isApplied() {
        return Optional.ofNullable(this.isApplied);
    }

    /**
     * Changed parameter name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Changed parameter name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The new value of parameter.
     * 
     */
    @Import(name="newValue")
    private @Nullable Output<String> newValue;

    /**
     * @return The new value of parameter.
     * 
     */
    public Optional<Output<String>> newValue() {
        return Optional.ofNullable(this.newValue);
    }

    /**
     * The old value of parameter.
     * 
     */
    @Import(name="oldValue")
    private @Nullable Output<String> oldValue;

    /**
     * @return The old value of parameter.
     * 
     */
    public Optional<Output<String>> oldValue() {
        return Optional.ofNullable(this.oldValue);
    }

    private DbClusterParamChangeLogArgs() {}

    private DbClusterParamChangeLogArgs(DbClusterParamChangeLogArgs $) {
        this.configId = $.configId;
        this.gmtCreated = $.gmtCreated;
        this.gmtModified = $.gmtModified;
        this.isApplied = $.isApplied;
        this.name = $.name;
        this.newValue = $.newValue;
        this.oldValue = $.oldValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DbClusterParamChangeLogArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DbClusterParamChangeLogArgs $;

        public Builder() {
            $ = new DbClusterParamChangeLogArgs();
        }

        public Builder(DbClusterParamChangeLogArgs defaults) {
            $ = new DbClusterParamChangeLogArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId The id of parameter change.
         * 
         * @return builder
         * 
         */
        public Builder configId(@Nullable Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId The id of parameter change.
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param gmtCreated When the parameter change is created.
         * 
         * @return builder
         * 
         */
        public Builder gmtCreated(@Nullable Output<String> gmtCreated) {
            $.gmtCreated = gmtCreated;
            return this;
        }

        /**
         * @param gmtCreated When the parameter change is created.
         * 
         * @return builder
         * 
         */
        public Builder gmtCreated(String gmtCreated) {
            return gmtCreated(Output.of(gmtCreated));
        }

        /**
         * @param gmtModified When the parameter change is modified.
         * 
         * @return builder
         * 
         */
        public Builder gmtModified(@Nullable Output<String> gmtModified) {
            $.gmtModified = gmtModified;
            return this;
        }

        /**
         * @param gmtModified When the parameter change is modified.
         * 
         * @return builder
         * 
         */
        public Builder gmtModified(String gmtModified) {
            return gmtModified(Output.of(gmtModified));
        }

        /**
         * @param isApplied Whether the parameter changing is applied.
         * 
         * @return builder
         * 
         */
        public Builder isApplied(@Nullable Output<Boolean> isApplied) {
            $.isApplied = isApplied;
            return this;
        }

        /**
         * @param isApplied Whether the parameter changing is applied.
         * 
         * @return builder
         * 
         */
        public Builder isApplied(Boolean isApplied) {
            return isApplied(Output.of(isApplied));
        }

        /**
         * @param name Changed parameter name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Changed parameter name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param newValue The new value of parameter.
         * 
         * @return builder
         * 
         */
        public Builder newValue(@Nullable Output<String> newValue) {
            $.newValue = newValue;
            return this;
        }

        /**
         * @param newValue The new value of parameter.
         * 
         * @return builder
         * 
         */
        public Builder newValue(String newValue) {
            return newValue(Output.of(newValue));
        }

        /**
         * @param oldValue The old value of parameter.
         * 
         * @return builder
         * 
         */
        public Builder oldValue(@Nullable Output<String> oldValue) {
            $.oldValue = oldValue;
            return this;
        }

        /**
         * @param oldValue The old value of parameter.
         * 
         * @return builder
         * 
         */
        public Builder oldValue(String oldValue) {
            return oldValue(Output.of(oldValue));
        }

        public DbClusterParamChangeLogArgs build() {
            return $;
        }
    }

}
