// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nlb;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.nlb.ListenerArgs;
import com.pulumi.alicloud.nlb.inputs.ListenerState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a NLB Listener resource.
 * 
 * For information about NLB Listener and how to use it, see [What is Listener](https://www.alibabacloud.com/help/en/server-load-balancer/latest/api-nlb-2022-04-30-createlistener).
 * 
 * &gt; **NOTE:** Available since v1.191.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
 * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
 * import com.pulumi.alicloud.nlb.NlbFunctions;
 * import com.pulumi.alicloud.nlb.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.ecs.SecurityGroup;
 * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
 * import com.pulumi.alicloud.nlb.LoadBalancer;
 * import com.pulumi.alicloud.nlb.LoadBalancerArgs;
 * import com.pulumi.alicloud.nlb.inputs.LoadBalancerZoneMappingArgs;
 * import com.pulumi.alicloud.nlb.ServerGroup;
 * import com.pulumi.alicloud.nlb.ServerGroupArgs;
 * import com.pulumi.alicloud.nlb.inputs.ServerGroupHealthCheckArgs;
 * import com.pulumi.alicloud.nlb.Listener;
 * import com.pulumi.alicloud.nlb.ListenerArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("tf-example");
 *         final var default = ResourcemanagerFunctions.getResourceGroups();
 * 
 *         final var defaultGetZones = NlbFunctions.getZones();
 * 
 *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()        
 *             .vpcName(name)
 *             .cidrBlock("10.4.0.0/16")
 *             .build());
 * 
 *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()        
 *             .vswitchName(name)
 *             .cidrBlock("10.4.0.0/24")
 *             .vpcId(defaultNetwork.id())
 *             .zoneId(defaultGetZones.applyValue(getZonesResult -> getZonesResult.zones()[0].id()))
 *             .build());
 * 
 *         var default1 = new Switch("default1", SwitchArgs.builder()        
 *             .vswitchName(name)
 *             .cidrBlock("10.4.1.0/24")
 *             .vpcId(defaultNetwork.id())
 *             .zoneId(defaultGetZones.applyValue(getZonesResult -> getZonesResult.zones()[1].id()))
 *             .build());
 * 
 *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()        
 *             .name(name)
 *             .vpcId(defaultNetwork.id())
 *             .build());
 * 
 *         var defaultLoadBalancer = new LoadBalancer("defaultLoadBalancer", LoadBalancerArgs.builder()        
 *             .loadBalancerName(name)
 *             .resourceGroupId(default_.ids()[0])
 *             .loadBalancerType("Network")
 *             .addressType("Internet")
 *             .addressIpVersion("Ipv4")
 *             .vpcId(defaultNetwork.id())
 *             .tags(Map.ofEntries(
 *                 Map.entry("Created", "TF"),
 *                 Map.entry("For", "example")
 *             ))
 *             .zoneMappings(            
 *                 LoadBalancerZoneMappingArgs.builder()
 *                     .vswitchId(defaultSwitch.id())
 *                     .zoneId(defaultGetZones.applyValue(getZonesResult -> getZonesResult.zones()[0].id()))
 *                     .build(),
 *                 LoadBalancerZoneMappingArgs.builder()
 *                     .vswitchId(default1.id())
 *                     .zoneId(defaultGetZones.applyValue(getZonesResult -> getZonesResult.zones()[1].id()))
 *                     .build())
 *             .build());
 * 
 *         var defaultServerGroup = new ServerGroup("defaultServerGroup", ServerGroupArgs.builder()        
 *             .resourceGroupId(default_.ids()[0])
 *             .serverGroupName(name)
 *             .serverGroupType("Instance")
 *             .vpcId(defaultNetwork.id())
 *             .scheduler("Wrr")
 *             .protocol("TCP")
 *             .connectionDrainEnabled(true)
 *             .connectionDrainTimeout(60)
 *             .addressIpVersion("Ipv4")
 *             .healthCheck(ServerGroupHealthCheckArgs.builder()
 *                 .healthCheckEnabled(true)
 *                 .healthCheckType("TCP")
 *                 .healthCheckConnectPort(0)
 *                 .healthyThreshold(2)
 *                 .unhealthyThreshold(2)
 *                 .healthCheckConnectTimeout(5)
 *                 .healthCheckInterval(10)
 *                 .httpCheckMethod("GET")
 *                 .healthCheckHttpCodes(                
 *                     "http_2xx",
 *                     "http_3xx",
 *                     "http_4xx")
 *                 .build())
 *             .tags(Map.ofEntries(
 *                 Map.entry("Created", "TF"),
 *                 Map.entry("For", "example")
 *             ))
 *             .build());
 * 
 *         var defaultListener = new Listener("defaultListener", ListenerArgs.builder()        
 *             .listenerProtocol("TCP")
 *             .listenerPort("80")
 *             .listenerDescription(name)
 *             .loadBalancerId(defaultLoadBalancer.id())
 *             .serverGroupId(defaultServerGroup.id())
 *             .idleTimeout("900")
 *             .proxyProtocolEnabled("true")
 *             .cps("10000")
 *             .mss("0")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * NLB Listener can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:nlb/listener:Listener example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:nlb/listener:Listener")
public class Listener extends com.pulumi.resources.CustomResource {
    /**
     * Whether ALPN is turned on. Value:
     * - **true**: on.
     * - **false**: closed.
     * 
     */
    @Export(name="alpnEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> alpnEnabled;

    /**
     * @return Whether ALPN is turned on. Value:
     * - **true**: on.
     * - **false**: closed.
     * 
     */
    public Output<Boolean> alpnEnabled() {
        return this.alpnEnabled;
    }
    /**
     * ALPN policy. Value:
     * - **HTTP1Only**
     * - **HTTP2Only**
     * - **HTTP2Preferred**
     * - **HTTP2Optional**.
     * 
     */
    @Export(name="alpnPolicy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> alpnPolicy;

    /**
     * @return ALPN policy. Value:
     * - **HTTP1Only**
     * - **HTTP2Only**
     * - **HTTP2Preferred**
     * - **HTTP2Optional**.
     * 
     */
    public Output<Optional<String>> alpnPolicy() {
        return Codegen.optional(this.alpnPolicy);
    }
    /**
     * CA certificate list information. Currently, only one CA certificate can be added.
     * &gt; **NOTE:**  This parameter only takes effect for TCPSSL listeners.
     * 
     */
    @Export(name="caCertificateIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> caCertificateIds;

    /**
     * @return CA certificate list information. Currently, only one CA certificate can be added.
     * &gt; **NOTE:**  This parameter only takes effect for TCPSSL listeners.
     * 
     */
    public Output<Optional<List<String>>> caCertificateIds() {
        return Codegen.optional(this.caCertificateIds);
    }
    /**
     * Whether to start two-way authentication. Value:
     * - **true**: start.
     * - **false**: closed.
     * 
     */
    @Export(name="caEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> caEnabled;

    /**
     * @return Whether to start two-way authentication. Value:
     * - **true**: start.
     * - **false**: closed.
     * 
     */
    public Output<Boolean> caEnabled() {
        return this.caEnabled;
    }
    /**
     * Server certificate list information. Currently, only one server certificate can be added.
     * &gt; **NOTE:**  This parameter only takes effect for TCPSSL listeners.
     * 
     */
    @Export(name="certificateIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> certificateIds;

    /**
     * @return Server certificate list information. Currently, only one server certificate can be added.
     * &gt; **NOTE:**  This parameter only takes effect for TCPSSL listeners.
     * 
     */
    public Output<Optional<List<String>>> certificateIds() {
        return Codegen.optional(this.certificateIds);
    }
    /**
     * The new connection speed limit for a network-based load balancing instance per second. Valid values: **0** ~ **1000000**. **0** indicates unlimited speed.
     * 
     */
    @Export(name="cps", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> cps;

    /**
     * @return The new connection speed limit for a network-based load balancing instance per second. Valid values: **0** ~ **1000000**. **0** indicates unlimited speed.
     * 
     */
    public Output<Optional<Integer>> cps() {
        return Codegen.optional(this.cps);
    }
    /**
     * Full port listening end port. Valid values: **0** ~ **65535 * *. The value of the end port is less than the start port.
     * 
     */
    @Export(name="endPort", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> endPort;

    /**
     * @return Full port listening end port. Valid values: **0** ~ **65535 * *. The value of the end port is less than the start port.
     * 
     */
    public Output<Optional<Integer>> endPort() {
        return Codegen.optional(this.endPort);
    }
    /**
     * Connection idle timeout time. Unit: seconds. Valid values: **1** ~ **900**.
     * 
     */
    @Export(name="idleTimeout", refs={Integer.class}, tree="[0]")
    private Output<Integer> idleTimeout;

    /**
     * @return Connection idle timeout time. Unit: seconds. Valid values: **1** ~ **900**.
     * 
     */
    public Output<Integer> idleTimeout() {
        return this.idleTimeout;
    }
    /**
     * Custom listener name.The length is limited to 2 to 256 characters, supports Chinese and English letters, and can include numbers, commas (,), half-width periods (.), half-width semicolons (;), forward slashes (/), at({@literal @}), underscores (_), and dashes (-).
     * 
     */
    @Export(name="listenerDescription", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> listenerDescription;

    /**
     * @return Custom listener name.The length is limited to 2 to 256 characters, supports Chinese and English letters, and can include numbers, commas (,), half-width periods (.), half-width semicolons (;), forward slashes (/), at({@literal @}), underscores (_), and dashes (-).
     * 
     */
    public Output<Optional<String>> listenerDescription() {
        return Codegen.optional(this.listenerDescription);
    }
    /**
     * Listening port. Valid values: **0** ~ **65535 * *. **0**: indicates that full port listening is used. When set to **0**, you must configure **StartPort** and **EndPort**.
     * 
     */
    @Export(name="listenerPort", refs={Integer.class}, tree="[0]")
    private Output<Integer> listenerPort;

    /**
     * @return Listening port. Valid values: **0** ~ **65535 * *. **0**: indicates that full port listening is used. When set to **0**, you must configure **StartPort** and **EndPort**.
     * 
     */
    public Output<Integer> listenerPort() {
        return this.listenerPort;
    }
    /**
     * The listening protocol. Valid values: **TCP**, **UDP**, or **TCPSSL**.
     * 
     */
    @Export(name="listenerProtocol", refs={String.class}, tree="[0]")
    private Output<String> listenerProtocol;

    /**
     * @return The listening protocol. Valid values: **TCP**, **UDP**, or **TCPSSL**.
     * 
     */
    public Output<String> listenerProtocol() {
        return this.listenerProtocol;
    }
    /**
     * The ID of the network-based server load balancer instance.
     * 
     */
    @Export(name="loadBalancerId", refs={String.class}, tree="[0]")
    private Output<String> loadBalancerId;

    /**
     * @return The ID of the network-based server load balancer instance.
     * 
     */
    public Output<String> loadBalancerId() {
        return this.loadBalancerId;
    }
    /**
     * The maximum segment size of the TCP message. Unit: Bytes. Valid values: **0** ~ **1500**. **0** indicates that the MSS value of the TCP message is not modified.
     * &gt; **NOTE:**  only TCP and TCPSSL listeners support this field value.
     * 
     */
    @Export(name="mss", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> mss;

    /**
     * @return The maximum segment size of the TCP message. Unit: Bytes. Valid values: **0** ~ **1500**. **0** indicates that the MSS value of the TCP message is not modified.
     * &gt; **NOTE:**  only TCP and TCPSSL listeners support this field value.
     * 
     */
    public Output<Optional<Integer>> mss() {
        return Codegen.optional(this.mss);
    }
    /**
     * Whether to enable the Proxy Protocol to carry the source address of the client to the backend server. Value:
     * - **true**: on.
     * - **false**: closed.
     * 
     */
    @Export(name="proxyProtocolEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> proxyProtocolEnabled;

    /**
     * @return Whether to enable the Proxy Protocol to carry the source address of the client to the backend server. Value:
     * - **true**: on.
     * - **false**: closed.
     * 
     */
    public Output<Boolean> proxyProtocolEnabled() {
        return this.proxyProtocolEnabled;
    }
    /**
     * Whether to turn on the second-level monitoring function. Value:
     * - **true**: on.
     * - **false**: closed.
     * 
     */
    @Export(name="secSensorEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> secSensorEnabled;

    /**
     * @return Whether to turn on the second-level monitoring function. Value:
     * - **true**: on.
     * - **false**: closed.
     * 
     */
    public Output<Boolean> secSensorEnabled() {
        return this.secSensorEnabled;
    }
    /**
     * Security policy ID. Support system security policies and custom security policies. Valid values: **tls_cipher_policy_1_0**, **tls_cipher_policy_1_1**, **tls_cipher_policy_1_2**, **tls_cipher_policy_1_2_strict**, or **tls_cipher_policy_1_2_strict_with_1_3**.
     * &gt; **NOTE:**  This parameter only takes effect for TCPSSL listeners.
     * 
     */
    @Export(name="securityPolicyId", refs={String.class}, tree="[0]")
    private Output<String> securityPolicyId;

    /**
     * @return Security policy ID. Support system security policies and custom security policies. Valid values: **tls_cipher_policy_1_0**, **tls_cipher_policy_1_1**, **tls_cipher_policy_1_2**, **tls_cipher_policy_1_2_strict**, or **tls_cipher_policy_1_2_strict_with_1_3**.
     * &gt; **NOTE:**  This parameter only takes effect for TCPSSL listeners.
     * 
     */
    public Output<String> securityPolicyId() {
        return this.securityPolicyId;
    }
    /**
     * The ID of the server group.
     * 
     */
    @Export(name="serverGroupId", refs={String.class}, tree="[0]")
    private Output<String> serverGroupId;

    /**
     * @return The ID of the server group.
     * 
     */
    public Output<String> serverGroupId() {
        return this.serverGroupId;
    }
    /**
     * Full Port listens to the starting port. Valid values: **0** ~ **65535**.
     * 
     */
    @Export(name="startPort", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> startPort;

    /**
     * @return Full Port listens to the starting port. Valid values: **0** ~ **65535**.
     * 
     */
    public Output<Optional<Integer>> startPort() {
        return Codegen.optional(this.startPort);
    }
    /**
     * The status of the resource.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the resource.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The tag of the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> tags;

    /**
     * @return The tag of the resource.
     * 
     */
    public Output<Optional<Map<String,Object>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Listener(String name) {
        this(name, ListenerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Listener(String name, ListenerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Listener(String name, ListenerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:nlb/listener:Listener", name, args == null ? ListenerArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Listener(String name, Output<String> id, @Nullable ListenerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:nlb/listener:Listener", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Listener get(String name, Output<String> id, @Nullable ListenerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Listener(name, id, state, options);
    }
}
