// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nlb;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.nlb.ListenerArgs;
import com.pulumi.alicloud.nlb.inputs.ListenerState;
import com.pulumi.alicloud.nlb.outputs.ListenerProxyProtocolConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Network Load Balancer (NLB) Listener resource.
 * 
 * For information about Network Load Balancer (NLB) Listener and how to use it, see [What is Listener](https://www.alibabacloud.com/help/en/server-load-balancer/latest/api-nlb-2022-04-30-createlistener).
 * 
 * &gt; **NOTE:** Available since v1.191.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
 * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
 * import com.pulumi.alicloud.nlb.NlbFunctions;
 * import com.pulumi.alicloud.nlb.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.ecs.SecurityGroup;
 * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
 * import com.pulumi.alicloud.nlb.LoadBalancer;
 * import com.pulumi.alicloud.nlb.LoadBalancerArgs;
 * import com.pulumi.alicloud.nlb.inputs.LoadBalancerZoneMappingArgs;
 * import com.pulumi.alicloud.nlb.ServerGroup;
 * import com.pulumi.alicloud.nlb.ServerGroupArgs;
 * import com.pulumi.alicloud.nlb.inputs.ServerGroupHealthCheckArgs;
 * import com.pulumi.alicloud.nlb.Listener;
 * import com.pulumi.alicloud.nlb.ListenerArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("tf-example");
 *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
 *             .build());
 * 
 *         final var defaultGetZones = NlbFunctions.getZones(GetZonesArgs.builder()
 *             .build());
 * 
 *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
 *             .vpcName(name)
 *             .cidrBlock("10.4.0.0/16")
 *             .build());
 * 
 *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
 *             .vswitchName(name)
 *             .cidrBlock("10.4.0.0/24")
 *             .vpcId(defaultNetwork.id())
 *             .zoneId(defaultGetZones.zones()[0].id())
 *             .build());
 * 
 *         var default1 = new Switch("default1", SwitchArgs.builder()
 *             .vswitchName(name)
 *             .cidrBlock("10.4.1.0/24")
 *             .vpcId(defaultNetwork.id())
 *             .zoneId(defaultGetZones.zones()[1].id())
 *             .build());
 * 
 *         var defaultSecurityGroup = new SecurityGroup("defaultSecurityGroup", SecurityGroupArgs.builder()
 *             .name(name)
 *             .vpcId(defaultNetwork.id())
 *             .build());
 * 
 *         var defaultLoadBalancer = new LoadBalancer("defaultLoadBalancer", LoadBalancerArgs.builder()
 *             .loadBalancerName(name)
 *             .resourceGroupId(default_.ids()[0])
 *             .loadBalancerType("Network")
 *             .addressType("Internet")
 *             .addressIpVersion("Ipv4")
 *             .vpcId(defaultNetwork.id())
 *             .tags(Map.ofEntries(
 *                 Map.entry("Created", "TF"),
 *                 Map.entry("For", "example")
 *             ))
 *             .zoneMappings(            
 *                 LoadBalancerZoneMappingArgs.builder()
 *                     .vswitchId(defaultSwitch.id())
 *                     .zoneId(defaultGetZones.zones()[0].id())
 *                     .build(),
 *                 LoadBalancerZoneMappingArgs.builder()
 *                     .vswitchId(default1.id())
 *                     .zoneId(defaultGetZones.zones()[1].id())
 *                     .build())
 *             .build());
 * 
 *         var defaultServerGroup = new ServerGroup("defaultServerGroup", ServerGroupArgs.builder()
 *             .resourceGroupId(default_.ids()[0])
 *             .serverGroupName(name)
 *             .serverGroupType("Instance")
 *             .vpcId(defaultNetwork.id())
 *             .scheduler("Wrr")
 *             .protocol("TCP")
 *             .connectionDrainEnabled(true)
 *             .connectionDrainTimeout(60)
 *             .addressIpVersion("Ipv4")
 *             .healthCheck(ServerGroupHealthCheckArgs.builder()
 *                 .healthCheckEnabled(true)
 *                 .healthCheckType("TCP")
 *                 .healthCheckConnectPort(0)
 *                 .healthyThreshold(2)
 *                 .unhealthyThreshold(2)
 *                 .healthCheckConnectTimeout(5)
 *                 .healthCheckInterval(10)
 *                 .httpCheckMethod("GET")
 *                 .healthCheckHttpCodes(                
 *                     "http_2xx",
 *                     "http_3xx",
 *                     "http_4xx")
 *                 .build())
 *             .tags(Map.ofEntries(
 *                 Map.entry("Created", "TF"),
 *                 Map.entry("For", "example")
 *             ))
 *             .build());
 * 
 *         var defaultListener = new Listener("defaultListener", ListenerArgs.builder()
 *             .listenerProtocol("TCP")
 *             .listenerPort(80)
 *             .listenerDescription(name)
 *             .loadBalancerId(defaultLoadBalancer.id())
 *             .serverGroupId(defaultServerGroup.id())
 *             .idleTimeout(900)
 *             .proxyProtocolEnabled(true)
 *             .cps(10000)
 *             .mss(0)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Network Load Balancer (NLB) Listener can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:nlb/listener:Listener example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:nlb/listener:Listener")
public class Listener extends com.pulumi.resources.CustomResource {
    /**
     * Specifies whether to enable Application-Layer Protocol Negotiation (ALPN). Valid values:
     * 
     */
    @Export(name="alpnEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> alpnEnabled;

    /**
     * @return Specifies whether to enable Application-Layer Protocol Negotiation (ALPN). Valid values:
     * 
     */
    public Output<Boolean> alpnEnabled() {
        return this.alpnEnabled;
    }
    /**
     * The ALPN policy. Valid values:
     * - `HTTP1Only`: uses only HTTP 1.x. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
     * - `HTTP2Only`: uses only HTTP 2.0.
     * - `HTTP2Optional`: preferentially uses HTTP 1.x over HTTP 2.0. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0, and the priority of HTTP 1.0 is higher than the priority of HTTP 2.0.
     * - `HTTP2Preferred`: preferentially uses HTTP 2.0 over HTTP 1.x. The priority of HTTP 2.0 is higher than the priority of HTTP 1.1, and the priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
     * 
     * &gt; **NOTE:**  This parameter is required if AlpnEnabled is set to true.
     * 
     * &gt; **NOTE:**  Effective only for TCPSSL listener.
     * 
     */
    @Export(name="alpnPolicy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> alpnPolicy;

    /**
     * @return The ALPN policy. Valid values:
     * - `HTTP1Only`: uses only HTTP 1.x. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
     * - `HTTP2Only`: uses only HTTP 2.0.
     * - `HTTP2Optional`: preferentially uses HTTP 1.x over HTTP 2.0. The priority of HTTP 1.1 is higher than the priority of HTTP 1.0, and the priority of HTTP 1.0 is higher than the priority of HTTP 2.0.
     * - `HTTP2Preferred`: preferentially uses HTTP 2.0 over HTTP 1.x. The priority of HTTP 2.0 is higher than the priority of HTTP 1.1, and the priority of HTTP 1.1 is higher than the priority of HTTP 1.0.
     * 
     * &gt; **NOTE:**  This parameter is required if AlpnEnabled is set to true.
     * 
     * &gt; **NOTE:**  Effective only for TCPSSL listener.
     * 
     */
    public Output<Optional<String>> alpnPolicy() {
        return Codegen.optional(this.alpnPolicy);
    }
    /**
     * The list of certificate authority (CA) certificates. This parameter takes effect only for listeners that use SSL over TCP.
     * 
     * &gt; **NOTE:**  Only one CA certificate is supported.
     * 
     */
    @Export(name="caCertificateIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> caCertificateIds;

    /**
     * @return The list of certificate authority (CA) certificates. This parameter takes effect only for listeners that use SSL over TCP.
     * 
     * &gt; **NOTE:**  Only one CA certificate is supported.
     * 
     */
    public Output<Optional<List<String>>> caCertificateIds() {
        return Codegen.optional(this.caCertificateIds);
    }
    /**
     * Specifies whether to enable mutual authentication. Valid values:
     * 
     */
    @Export(name="caEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> caEnabled;

    /**
     * @return Specifies whether to enable mutual authentication. Valid values:
     * 
     */
    public Output<Boolean> caEnabled() {
        return this.caEnabled;
    }
    /**
     * The list of server certificates. This parameter takes effect only for listeners that use SSL over TCP.
     * 
     * &gt; **NOTE:**  This parameter takes effect only for TCPSSL listeners.
     * 
     */
    @Export(name="certificateIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> certificateIds;

    /**
     * @return The list of server certificates. This parameter takes effect only for listeners that use SSL over TCP.
     * 
     * &gt; **NOTE:**  This parameter takes effect only for TCPSSL listeners.
     * 
     */
    public Output<Optional<List<String>>> certificateIds() {
        return Codegen.optional(this.certificateIds);
    }
    /**
     * The maximum number of connections that can be created per second on the NLB instance. Valid values: `0` to `1000000`. `0` specifies that the number of connections is unlimited.
     * 
     */
    @Export(name="cps", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> cps;

    /**
     * @return The maximum number of connections that can be created per second on the NLB instance. Valid values: `0` to `1000000`. `0` specifies that the number of connections is unlimited.
     * 
     */
    public Output<Optional<Integer>> cps() {
        return Codegen.optional(this.cps);
    }
    /**
     * The last port in the listener port range. Valid values: `0` to `65535`. The number of the last port must be greater than the number of the first port.
     * 
     * &gt; **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
     * 
     */
    @Export(name="endPort", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> endPort;

    /**
     * @return The last port in the listener port range. Valid values: `0` to `65535`. The number of the last port must be greater than the number of the first port.
     * 
     * &gt; **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
     * 
     */
    public Output<Optional<Integer>> endPort() {
        return Codegen.optional(this.endPort);
    }
    /**
     * The timeout period of idle connections. Unit: seconds. Valid values: `1` to `900`. Default value: `900`.
     * 
     */
    @Export(name="idleTimeout", refs={Integer.class}, tree="[0]")
    private Output<Integer> idleTimeout;

    /**
     * @return The timeout period of idle connections. Unit: seconds. Valid values: `1` to `900`. Default value: `900`.
     * 
     */
    public Output<Integer> idleTimeout() {
        return this.idleTimeout;
    }
    /**
     * Enter a name for the listener.
     * The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs ({@literal @}), underscores (\_), and hyphens (-).
     * 
     */
    @Export(name="listenerDescription", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> listenerDescription;

    /**
     * @return Enter a name for the listener.
     * The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs ({@literal @}), underscores (\_), and hyphens (-).
     * 
     */
    public Output<Optional<String>> listenerDescription() {
        return Codegen.optional(this.listenerDescription);
    }
    /**
     * The listener port. Valid values: `0` to `65535`.
     * If you set the value to `0`, the listener listens by port range. If you set the value to `0`, you must specify `StartPort` and `EndPort`.
     * 
     */
    @Export(name="listenerPort", refs={Integer.class}, tree="[0]")
    private Output<Integer> listenerPort;

    /**
     * @return The listener port. Valid values: `0` to `65535`.
     * If you set the value to `0`, the listener listens by port range. If you set the value to `0`, you must specify `StartPort` and `EndPort`.
     * 
     */
    public Output<Integer> listenerPort() {
        return this.listenerPort;
    }
    /**
     * The listening protocol. Valid values: `TCP`, `UDP`, and `TCPSSL`.
     * 
     */
    @Export(name="listenerProtocol", refs={String.class}, tree="[0]")
    private Output<String> listenerProtocol;

    /**
     * @return The listening protocol. Valid values: `TCP`, `UDP`, and `TCPSSL`.
     * 
     */
    public Output<String> listenerProtocol() {
        return this.listenerProtocol;
    }
    /**
     * The ID of the Network Load Balancer (NLB) instance.
     * 
     */
    @Export(name="loadBalancerId", refs={String.class}, tree="[0]")
    private Output<String> loadBalancerId;

    /**
     * @return The ID of the Network Load Balancer (NLB) instance.
     * 
     */
    public Output<String> loadBalancerId() {
        return this.loadBalancerId;
    }
    /**
     * The maximum size of a TCP segment. Unit: bytes. Valid values: `0` to `1500`. `0` specifies that the maximum segment size remains unchanged.
     * 
     * &gt; **NOTE:**  This parameter is supported only by TCP listeners and listeners that use SSL over TCP.
     * 
     */
    @Export(name="mss", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> mss;

    /**
     * @return The maximum size of a TCP segment. Unit: bytes. Valid values: `0` to `1500`. `0` specifies that the maximum segment size remains unchanged.
     * 
     * &gt; **NOTE:**  This parameter is supported only by TCP listeners and listeners that use SSL over TCP.
     * 
     */
    public Output<Optional<Integer>> mss() {
        return Codegen.optional(this.mss);
    }
    /**
     * The Proxy Protocol is used to carry the VpcId, PrivateLinkEpId, and PrivateLinkEpsId information to the backend server for configuration. See `proxy_protocol_config` below.
     * 
     */
    @Export(name="proxyProtocolConfig", refs={ListenerProxyProtocolConfig.class}, tree="[0]")
    private Output<ListenerProxyProtocolConfig> proxyProtocolConfig;

    /**
     * @return The Proxy Protocol is used to carry the VpcId, PrivateLinkEpId, and PrivateLinkEpsId information to the backend server for configuration. See `proxy_protocol_config` below.
     * 
     */
    public Output<ListenerProxyProtocolConfig> proxyProtocolConfig() {
        return this.proxyProtocolConfig;
    }
    /**
     * Specifies whether to use the Proxy protocol to pass client IP addresses to backend servers. Valid values:
     * 
     */
    @Export(name="proxyProtocolEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> proxyProtocolEnabled;

    /**
     * @return Specifies whether to use the Proxy protocol to pass client IP addresses to backend servers. Valid values:
     * 
     */
    public Output<Boolean> proxyProtocolEnabled() {
        return this.proxyProtocolEnabled;
    }
    /**
     * The ID of the region where the Network Load Balancer (NLB) instance is deployed.
     * You can call the [DescribeRegions](https://www.alibabacloud.com/help/en/doc-detail/443657.html) operation to query the most recent region list.
     * 
     */
    @Export(name="regionId", refs={String.class}, tree="[0]")
    private Output<String> regionId;

    /**
     * @return The ID of the region where the Network Load Balancer (NLB) instance is deployed.
     * You can call the [DescribeRegions](https://www.alibabacloud.com/help/en/doc-detail/443657.html) operation to query the most recent region list.
     * 
     */
    public Output<String> regionId() {
        return this.regionId;
    }
    /**
     * Specifies whether to enable fine-grained monitoring. Valid values:
     * 
     */
    @Export(name="secSensorEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> secSensorEnabled;

    /**
     * @return Specifies whether to enable fine-grained monitoring. Valid values:
     * 
     */
    public Output<Boolean> secSensorEnabled() {
        return this.secSensorEnabled;
    }
    /**
     * The security policy ID. System security policies and custom security policies are supported.
     * 
     * Valid values: `tls_cipher_policy\_1\_0` (default), `tls_cipher_policy\_1\_1`, `tls_cipher_policy\_1\_2`, `tls_cipher_policy\_1\_2\_strict`, and `tls_cipher_policy\_1\_2\_strict_with\_1\_3`.
     * 
     * &gt; **NOTE:**  This parameter takes effect only for listeners that use SSL over TCP.
     * 
     */
    @Export(name="securityPolicyId", refs={String.class}, tree="[0]")
    private Output<String> securityPolicyId;

    /**
     * @return The security policy ID. System security policies and custom security policies are supported.
     * 
     * Valid values: `tls_cipher_policy\_1\_0` (default), `tls_cipher_policy\_1\_1`, `tls_cipher_policy\_1\_2`, `tls_cipher_policy\_1\_2\_strict`, and `tls_cipher_policy\_1\_2\_strict_with\_1\_3`.
     * 
     * &gt; **NOTE:**  This parameter takes effect only for listeners that use SSL over TCP.
     * 
     */
    public Output<String> securityPolicyId() {
        return this.securityPolicyId;
    }
    /**
     * The ID of the server group.
     * 
     */
    @Export(name="serverGroupId", refs={String.class}, tree="[0]")
    private Output<String> serverGroupId;

    /**
     * @return The ID of the server group.
     * 
     */
    public Output<String> serverGroupId() {
        return this.serverGroupId;
    }
    /**
     * The first port in the listener port range. Valid values: `0` to `65535`.
     * 
     * &gt; **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
     * 
     */
    @Export(name="startPort", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> startPort;

    /**
     * @return The first port in the listener port range. Valid values: `0` to `65535`.
     * 
     * &gt; **NOTE:**  This parameter is required when `ListenerPort` is set to `0`.
     * 
     */
    public Output<Optional<Integer>> startPort() {
        return Codegen.optional(this.startPort);
    }
    /**
     * The status of the resource. Valid values: `Running`, `Stopped`. When you want to enable this instance, you can set the property value to `Running`;
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the resource. Valid values: `Running`, `Stopped`. When you want to enable this instance, you can set the property value to `Running`;
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The tag of the resource
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return The tag of the resource
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Listener(java.lang.String name) {
        this(name, ListenerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Listener(java.lang.String name, ListenerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Listener(java.lang.String name, ListenerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:nlb/listener:Listener", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Listener(java.lang.String name, Output<java.lang.String> id, @Nullable ListenerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:nlb/listener:Listener", name, state, makeResourceOptions(options, id), false);
    }

    private static ListenerArgs makeArgs(ListenerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ListenerArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Listener get(java.lang.String name, Output<java.lang.String> id, @Nullable ListenerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Listener(name, id, state, options);
    }
}
