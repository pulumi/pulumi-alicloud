// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTrafficMirrorFiltersFilter {
    /**
     * @return The ID of the Traffic Mirror Filter.
     * 
     */
    private String id;
    /**
     * @return The state of the filter. Valid values:`Creating`, `Created`, `Modifying` and `Deleting`. `Creating`: The filter is being created. `Created`: The filter is created. `Modifying`: The filter is being modified. `Deleting`: The filter is being deleted.
     * 
     */
    private String status;
    /**
     * @return The description of the filter.
     * 
     */
    private String trafficMirrorFilterDescription;
    /**
     * @return The ID of the filter.
     * 
     */
    private String trafficMirrorFilterId;
    /**
     * @return The name of the filter.
     * 
     */
    private String trafficMirrorFilterName;

    private GetTrafficMirrorFiltersFilter() {}
    /**
     * @return The ID of the Traffic Mirror Filter.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The state of the filter. Valid values:`Creating`, `Created`, `Modifying` and `Deleting`. `Creating`: The filter is being created. `Created`: The filter is created. `Modifying`: The filter is being modified. `Deleting`: The filter is being deleted.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The description of the filter.
     * 
     */
    public String trafficMirrorFilterDescription() {
        return this.trafficMirrorFilterDescription;
    }
    /**
     * @return The ID of the filter.
     * 
     */
    public String trafficMirrorFilterId() {
        return this.trafficMirrorFilterId;
    }
    /**
     * @return The name of the filter.
     * 
     */
    public String trafficMirrorFilterName() {
        return this.trafficMirrorFilterName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTrafficMirrorFiltersFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String status;
        private String trafficMirrorFilterDescription;
        private String trafficMirrorFilterId;
        private String trafficMirrorFilterName;
        public Builder() {}
        public Builder(GetTrafficMirrorFiltersFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.status = defaults.status;
    	      this.trafficMirrorFilterDescription = defaults.trafficMirrorFilterDescription;
    	      this.trafficMirrorFilterId = defaults.trafficMirrorFilterId;
    	      this.trafficMirrorFilterName = defaults.trafficMirrorFilterName;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder trafficMirrorFilterDescription(String trafficMirrorFilterDescription) {
            this.trafficMirrorFilterDescription = Objects.requireNonNull(trafficMirrorFilterDescription);
            return this;
        }
        @CustomType.Setter
        public Builder trafficMirrorFilterId(String trafficMirrorFilterId) {
            this.trafficMirrorFilterId = Objects.requireNonNull(trafficMirrorFilterId);
            return this;
        }
        @CustomType.Setter
        public Builder trafficMirrorFilterName(String trafficMirrorFilterName) {
            this.trafficMirrorFilterName = Objects.requireNonNull(trafficMirrorFilterName);
            return this;
        }
        public GetTrafficMirrorFiltersFilter build() {
            final var o = new GetTrafficMirrorFiltersFilter();
            o.id = id;
            o.status = status;
            o.trafficMirrorFilterDescription = trafficMirrorFilterDescription;
            o.trafficMirrorFilterId = trafficMirrorFilterId;
            o.trafficMirrorFilterName = trafficMirrorFilterName;
            return o;
        }
    }
}
