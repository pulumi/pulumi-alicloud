// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.arms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAddonReleasesRelease {
    /**
     * @return The name of the add-on.
     * 
     */
    private String addonName;
    /**
     * @return The name of the Addon Release.
     * 
     */
    private String addonReleaseName;
    /**
     * @return The version of the add-on.
     * 
     */
    private String addonVersion;
    /**
     * @return The number of alert rules.
     * 
     */
    private Integer alertRuleCount;
    /**
     * @return The language.
     * 
     */
    private String aliyunLang;
    /**
     * @return The time when the add-on was created.
     * 
     */
    private String createTime;
    /**
     * @return The number of dashboards.
     * 
     */
    private Integer dashboardCount;
    /**
     * @return The environment ID.
     * 
     */
    private String environmentId;
    /**
     * @return The number of exporters.
     * 
     */
    private Integer exporterCount;
    /**
     * @return The ID of the Addon Release. It formats as `&lt;environment_id&gt;:&lt;addon_release_name&gt;`.
     * 
     */
    private String id;
    /**
     * @return The region ID.
     * 
     */
    private String regionId;

    private GetAddonReleasesRelease() {}
    /**
     * @return The name of the add-on.
     * 
     */
    public String addonName() {
        return this.addonName;
    }
    /**
     * @return The name of the Addon Release.
     * 
     */
    public String addonReleaseName() {
        return this.addonReleaseName;
    }
    /**
     * @return The version of the add-on.
     * 
     */
    public String addonVersion() {
        return this.addonVersion;
    }
    /**
     * @return The number of alert rules.
     * 
     */
    public Integer alertRuleCount() {
        return this.alertRuleCount;
    }
    /**
     * @return The language.
     * 
     */
    public String aliyunLang() {
        return this.aliyunLang;
    }
    /**
     * @return The time when the add-on was created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The number of dashboards.
     * 
     */
    public Integer dashboardCount() {
        return this.dashboardCount;
    }
    /**
     * @return The environment ID.
     * 
     */
    public String environmentId() {
        return this.environmentId;
    }
    /**
     * @return The number of exporters.
     * 
     */
    public Integer exporterCount() {
        return this.exporterCount;
    }
    /**
     * @return The ID of the Addon Release. It formats as `&lt;environment_id&gt;:&lt;addon_release_name&gt;`.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The region ID.
     * 
     */
    public String regionId() {
        return this.regionId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAddonReleasesRelease defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String addonName;
        private String addonReleaseName;
        private String addonVersion;
        private Integer alertRuleCount;
        private String aliyunLang;
        private String createTime;
        private Integer dashboardCount;
        private String environmentId;
        private Integer exporterCount;
        private String id;
        private String regionId;
        public Builder() {}
        public Builder(GetAddonReleasesRelease defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addonName = defaults.addonName;
    	      this.addonReleaseName = defaults.addonReleaseName;
    	      this.addonVersion = defaults.addonVersion;
    	      this.alertRuleCount = defaults.alertRuleCount;
    	      this.aliyunLang = defaults.aliyunLang;
    	      this.createTime = defaults.createTime;
    	      this.dashboardCount = defaults.dashboardCount;
    	      this.environmentId = defaults.environmentId;
    	      this.exporterCount = defaults.exporterCount;
    	      this.id = defaults.id;
    	      this.regionId = defaults.regionId;
        }

        @CustomType.Setter
        public Builder addonName(String addonName) {
            if (addonName == null) {
              throw new MissingRequiredPropertyException("GetAddonReleasesRelease", "addonName");
            }
            this.addonName = addonName;
            return this;
        }
        @CustomType.Setter
        public Builder addonReleaseName(String addonReleaseName) {
            if (addonReleaseName == null) {
              throw new MissingRequiredPropertyException("GetAddonReleasesRelease", "addonReleaseName");
            }
            this.addonReleaseName = addonReleaseName;
            return this;
        }
        @CustomType.Setter
        public Builder addonVersion(String addonVersion) {
            if (addonVersion == null) {
              throw new MissingRequiredPropertyException("GetAddonReleasesRelease", "addonVersion");
            }
            this.addonVersion = addonVersion;
            return this;
        }
        @CustomType.Setter
        public Builder alertRuleCount(Integer alertRuleCount) {
            if (alertRuleCount == null) {
              throw new MissingRequiredPropertyException("GetAddonReleasesRelease", "alertRuleCount");
            }
            this.alertRuleCount = alertRuleCount;
            return this;
        }
        @CustomType.Setter
        public Builder aliyunLang(String aliyunLang) {
            if (aliyunLang == null) {
              throw new MissingRequiredPropertyException("GetAddonReleasesRelease", "aliyunLang");
            }
            this.aliyunLang = aliyunLang;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetAddonReleasesRelease", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder dashboardCount(Integer dashboardCount) {
            if (dashboardCount == null) {
              throw new MissingRequiredPropertyException("GetAddonReleasesRelease", "dashboardCount");
            }
            this.dashboardCount = dashboardCount;
            return this;
        }
        @CustomType.Setter
        public Builder environmentId(String environmentId) {
            if (environmentId == null) {
              throw new MissingRequiredPropertyException("GetAddonReleasesRelease", "environmentId");
            }
            this.environmentId = environmentId;
            return this;
        }
        @CustomType.Setter
        public Builder exporterCount(Integer exporterCount) {
            if (exporterCount == null) {
              throw new MissingRequiredPropertyException("GetAddonReleasesRelease", "exporterCount");
            }
            this.exporterCount = exporterCount;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAddonReleasesRelease", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder regionId(String regionId) {
            if (regionId == null) {
              throw new MissingRequiredPropertyException("GetAddonReleasesRelease", "regionId");
            }
            this.regionId = regionId;
            return this;
        }
        public GetAddonReleasesRelease build() {
            final var _resultValue = new GetAddonReleasesRelease();
            _resultValue.addonName = addonName;
            _resultValue.addonReleaseName = addonReleaseName;
            _resultValue.addonVersion = addonVersion;
            _resultValue.alertRuleCount = alertRuleCount;
            _resultValue.aliyunLang = aliyunLang;
            _resultValue.createTime = createTime;
            _resultValue.dashboardCount = dashboardCount;
            _resultValue.environmentId = environmentId;
            _resultValue.exporterCount = exporterCount;
            _resultValue.id = id;
            _resultValue.regionId = regionId;
            return _resultValue;
        }
    }
}
