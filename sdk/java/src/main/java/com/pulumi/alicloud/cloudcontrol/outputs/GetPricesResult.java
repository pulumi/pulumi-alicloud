// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudcontrol.outputs;

import com.pulumi.alicloud.cloudcontrol.outputs.GetPricesPrice;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPricesResult {
    private @Nullable Map<String,String> desireAttributes;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String outputFile;
    /**
     * @return A list of Price Entries. Each element contains the following attributes:
     * 
     */
    private List<GetPricesPrice> prices;
    private String product;
    private String resourceCode;

    private GetPricesResult() {}
    public Map<String,String> desireAttributes() {
        return this.desireAttributes == null ? Map.of() : this.desireAttributes;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return A list of Price Entries. Each element contains the following attributes:
     * 
     */
    public List<GetPricesPrice> prices() {
        return this.prices;
    }
    public String product() {
        return this.product;
    }
    public String resourceCode() {
        return this.resourceCode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPricesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,String> desireAttributes;
        private String id;
        private @Nullable String outputFile;
        private List<GetPricesPrice> prices;
        private String product;
        private String resourceCode;
        public Builder() {}
        public Builder(GetPricesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.desireAttributes = defaults.desireAttributes;
    	      this.id = defaults.id;
    	      this.outputFile = defaults.outputFile;
    	      this.prices = defaults.prices;
    	      this.product = defaults.product;
    	      this.resourceCode = defaults.resourceCode;
        }

        @CustomType.Setter
        public Builder desireAttributes(@Nullable Map<String,String> desireAttributes) {

            this.desireAttributes = desireAttributes;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPricesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder prices(List<GetPricesPrice> prices) {
            if (prices == null) {
              throw new MissingRequiredPropertyException("GetPricesResult", "prices");
            }
            this.prices = prices;
            return this;
        }
        public Builder prices(GetPricesPrice... prices) {
            return prices(List.of(prices));
        }
        @CustomType.Setter
        public Builder product(String product) {
            if (product == null) {
              throw new MissingRequiredPropertyException("GetPricesResult", "product");
            }
            this.product = product;
            return this;
        }
        @CustomType.Setter
        public Builder resourceCode(String resourceCode) {
            if (resourceCode == null) {
              throw new MissingRequiredPropertyException("GetPricesResult", "resourceCode");
            }
            this.resourceCode = resourceCode;
            return this;
        }
        public GetPricesResult build() {
            final var _resultValue = new GetPricesResult();
            _resultValue.desireAttributes = desireAttributes;
            _resultValue.id = id;
            _resultValue.outputFile = outputFile;
            _resultValue.prices = prices;
            _resultValue.product = product;
            _resultValue.resourceCode = resourceCode;
            return _resultValue;
        }
    }
}
