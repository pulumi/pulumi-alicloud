// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListenerQuicConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ListenerQuicConfigArgs Empty = new ListenerQuicConfigArgs();

    /**
     * There Is a Need to Correlate the QuIC Listener ID. The Https Listener, in Effect at the Time. quicupgradeenabled True When Required.
     * 
     */
    @Import(name="quicListenerId")
    private @Nullable Output<String> quicListenerId;

    /**
     * @return There Is a Need to Correlate the QuIC Listener ID. The Https Listener, in Effect at the Time. quicupgradeenabled True When Required.
     * 
     */
    public Optional<Output<String>> quicListenerId() {
        return Optional.ofNullable(this.quicListenerId);
    }

    /**
     * Indicates Whether to Enable the QuIC Upgrade
     * 
     */
    @Import(name="quicUpgradeEnabled")
    private @Nullable Output<Boolean> quicUpgradeEnabled;

    /**
     * @return Indicates Whether to Enable the QuIC Upgrade
     * 
     */
    public Optional<Output<Boolean>> quicUpgradeEnabled() {
        return Optional.ofNullable(this.quicUpgradeEnabled);
    }

    private ListenerQuicConfigArgs() {}

    private ListenerQuicConfigArgs(ListenerQuicConfigArgs $) {
        this.quicListenerId = $.quicListenerId;
        this.quicUpgradeEnabled = $.quicUpgradeEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListenerQuicConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListenerQuicConfigArgs $;

        public Builder() {
            $ = new ListenerQuicConfigArgs();
        }

        public Builder(ListenerQuicConfigArgs defaults) {
            $ = new ListenerQuicConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param quicListenerId There Is a Need to Correlate the QuIC Listener ID. The Https Listener, in Effect at the Time. quicupgradeenabled True When Required.
         * 
         * @return builder
         * 
         */
        public Builder quicListenerId(@Nullable Output<String> quicListenerId) {
            $.quicListenerId = quicListenerId;
            return this;
        }

        /**
         * @param quicListenerId There Is a Need to Correlate the QuIC Listener ID. The Https Listener, in Effect at the Time. quicupgradeenabled True When Required.
         * 
         * @return builder
         * 
         */
        public Builder quicListenerId(String quicListenerId) {
            return quicListenerId(Output.of(quicListenerId));
        }

        /**
         * @param quicUpgradeEnabled Indicates Whether to Enable the QuIC Upgrade
         * 
         * @return builder
         * 
         */
        public Builder quicUpgradeEnabled(@Nullable Output<Boolean> quicUpgradeEnabled) {
            $.quicUpgradeEnabled = quicUpgradeEnabled;
            return this;
        }

        /**
         * @param quicUpgradeEnabled Indicates Whether to Enable the QuIC Upgrade
         * 
         * @return builder
         * 
         */
        public Builder quicUpgradeEnabled(Boolean quicUpgradeEnabled) {
            return quicUpgradeEnabled(Output.of(quicUpgradeEnabled));
        }

        public ListenerQuicConfigArgs build() {
            return $;
        }
    }

}
