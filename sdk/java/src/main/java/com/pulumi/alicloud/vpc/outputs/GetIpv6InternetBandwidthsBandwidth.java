// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIpv6InternetBandwidthsBandwidth {
    /**
     * @return The amount of Internet bandwidth resources of the IPv6 address, Unit: `Mbit/s`.
     * 
     */
    private Integer bandwidth;
    /**
     * @return The ID of the Ipv6 Internet Bandwidth.
     * 
     */
    private String id;
    /**
     * @return The metering method of the Internet bandwidth resources of the IPv6 gateway.
     * 
     */
    private String internetChargeType;
    /**
     * @return The ID of the IPv6 address.
     * 
     */
    private String ipv6AddressId;
    /**
     * @return The ID of the IPv6 gateway.
     * 
     */
    private String ipv6GatewayId;
    /**
     * @return The ID of the Ipv6 Internet Bandwidth.
     * 
     */
    private String ipv6InternetBandwidthId;
    /**
     * @return The payment type of the resource.
     * 
     */
    private String paymentType;
    /**
     * @return The status of the resource. Valid values: `Normal`, `FinancialLocked` and `SecurityLocked`.
     * 
     */
    private String status;

    private GetIpv6InternetBandwidthsBandwidth() {}
    /**
     * @return The amount of Internet bandwidth resources of the IPv6 address, Unit: `Mbit/s`.
     * 
     */
    public Integer bandwidth() {
        return this.bandwidth;
    }
    /**
     * @return The ID of the Ipv6 Internet Bandwidth.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The metering method of the Internet bandwidth resources of the IPv6 gateway.
     * 
     */
    public String internetChargeType() {
        return this.internetChargeType;
    }
    /**
     * @return The ID of the IPv6 address.
     * 
     */
    public String ipv6AddressId() {
        return this.ipv6AddressId;
    }
    /**
     * @return The ID of the IPv6 gateway.
     * 
     */
    public String ipv6GatewayId() {
        return this.ipv6GatewayId;
    }
    /**
     * @return The ID of the Ipv6 Internet Bandwidth.
     * 
     */
    public String ipv6InternetBandwidthId() {
        return this.ipv6InternetBandwidthId;
    }
    /**
     * @return The payment type of the resource.
     * 
     */
    public String paymentType() {
        return this.paymentType;
    }
    /**
     * @return The status of the resource. Valid values: `Normal`, `FinancialLocked` and `SecurityLocked`.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIpv6InternetBandwidthsBandwidth defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer bandwidth;
        private String id;
        private String internetChargeType;
        private String ipv6AddressId;
        private String ipv6GatewayId;
        private String ipv6InternetBandwidthId;
        private String paymentType;
        private String status;
        public Builder() {}
        public Builder(GetIpv6InternetBandwidthsBandwidth defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandwidth = defaults.bandwidth;
    	      this.id = defaults.id;
    	      this.internetChargeType = defaults.internetChargeType;
    	      this.ipv6AddressId = defaults.ipv6AddressId;
    	      this.ipv6GatewayId = defaults.ipv6GatewayId;
    	      this.ipv6InternetBandwidthId = defaults.ipv6InternetBandwidthId;
    	      this.paymentType = defaults.paymentType;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder bandwidth(Integer bandwidth) {
            if (bandwidth == null) {
              throw new MissingRequiredPropertyException("GetIpv6InternetBandwidthsBandwidth", "bandwidth");
            }
            this.bandwidth = bandwidth;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIpv6InternetBandwidthsBandwidth", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder internetChargeType(String internetChargeType) {
            if (internetChargeType == null) {
              throw new MissingRequiredPropertyException("GetIpv6InternetBandwidthsBandwidth", "internetChargeType");
            }
            this.internetChargeType = internetChargeType;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6AddressId(String ipv6AddressId) {
            if (ipv6AddressId == null) {
              throw new MissingRequiredPropertyException("GetIpv6InternetBandwidthsBandwidth", "ipv6AddressId");
            }
            this.ipv6AddressId = ipv6AddressId;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6GatewayId(String ipv6GatewayId) {
            if (ipv6GatewayId == null) {
              throw new MissingRequiredPropertyException("GetIpv6InternetBandwidthsBandwidth", "ipv6GatewayId");
            }
            this.ipv6GatewayId = ipv6GatewayId;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6InternetBandwidthId(String ipv6InternetBandwidthId) {
            if (ipv6InternetBandwidthId == null) {
              throw new MissingRequiredPropertyException("GetIpv6InternetBandwidthsBandwidth", "ipv6InternetBandwidthId");
            }
            this.ipv6InternetBandwidthId = ipv6InternetBandwidthId;
            return this;
        }
        @CustomType.Setter
        public Builder paymentType(String paymentType) {
            if (paymentType == null) {
              throw new MissingRequiredPropertyException("GetIpv6InternetBandwidthsBandwidth", "paymentType");
            }
            this.paymentType = paymentType;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetIpv6InternetBandwidthsBandwidth", "status");
            }
            this.status = status;
            return this;
        }
        public GetIpv6InternetBandwidthsBandwidth build() {
            final var _resultValue = new GetIpv6InternetBandwidthsBandwidth();
            _resultValue.bandwidth = bandwidth;
            _resultValue.id = id;
            _resultValue.internetChargeType = internetChargeType;
            _resultValue.ipv6AddressId = ipv6AddressId;
            _resultValue.ipv6GatewayId = ipv6GatewayId;
            _resultValue.ipv6InternetBandwidthId = ipv6InternetBandwidthId;
            _resultValue.paymentType = paymentType;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
