// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oos.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTemplatesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTemplatesPlainArgs Empty = new GetTemplatesPlainArgs();

    /**
     * The category of template.
     * 
     */
    @Import(name="category")
    private @Nullable String category;

    /**
     * @return The category of template.
     * 
     */
    public Optional<String> category() {
        return Optional.ofNullable(this.category);
    }

    /**
     * The creator of the template.
     * 
     */
    @Import(name="createdBy")
    private @Nullable String createdBy;

    /**
     * @return The creator of the template.
     * 
     */
    public Optional<String> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * The template whose creation time is less than or equal to the specified time. The format is: YYYY-MM-DDThh:mm::ssZ.
     * 
     */
    @Import(name="createdDate")
    private @Nullable String createdDate;

    /**
     * @return The template whose creation time is less than or equal to the specified time. The format is: YYYY-MM-DDThh:mm::ssZ.
     * 
     */
    public Optional<String> createdDate() {
        return Optional.ofNullable(this.createdDate);
    }

    /**
     * Create a template whose time is greater than or equal to the specified time. The format is: YYYY-MM-DDThh:mm:ssZ.
     * 
     */
    @Import(name="createdDateAfter")
    private @Nullable String createdDateAfter;

    /**
     * @return Create a template whose time is greater than or equal to the specified time. The format is: YYYY-MM-DDThh:mm:ssZ.
     * 
     */
    public Optional<String> createdDateAfter() {
        return Optional.ofNullable(this.createdDateAfter);
    }

    /**
     * Is it triggered successfully.
     * 
     */
    @Import(name="hasTrigger")
    private @Nullable Boolean hasTrigger;

    /**
     * @return Is it triggered successfully.
     * 
     */
    public Optional<Boolean> hasTrigger() {
        return Optional.ofNullable(this.hasTrigger);
    }

    /**
     * A list of OOS Template ids. Each element in the list is same as template_name.
     * 
     */
    @Import(name="ids")
    private @Nullable List<String> ids;

    /**
     * @return A list of OOS Template ids. Each element in the list is same as template_name.
     * 
     */
    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * A regex string to filter the results by the template_name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable String nameRegex;

    /**
     * @return A regex string to filter the results by the template_name.
     * 
     */
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The sharing type of the template. Valid values: `Private`, `Public`.
     * 
     */
    @Import(name="shareType")
    private @Nullable String shareType;

    /**
     * @return The sharing type of the template. Valid values: `Private`, `Public`.
     * 
     */
    public Optional<String> shareType() {
        return Optional.ofNullable(this.shareType);
    }

    /**
     * Sort field. Valid values: `TotalExecutionCount`, `Popularity`, `TemplateName` and `CreatedDate`. Default to `TotalExecutionCount`.
     * 
     */
    @Import(name="sortField")
    private @Nullable String sortField;

    /**
     * @return Sort field. Valid values: `TotalExecutionCount`, `Popularity`, `TemplateName` and `CreatedDate`. Default to `TotalExecutionCount`.
     * 
     */
    public Optional<String> sortField() {
        return Optional.ofNullable(this.sortField);
    }

    /**
     * Sort order. Valid values: `Ascending`, `Descending`. Default to `Descending`
     * 
     */
    @Import(name="sortOrder")
    private @Nullable String sortOrder;

    /**
     * @return Sort order. Valid values: `Ascending`, `Descending`. Default to `Descending`
     * 
     */
    public Optional<String> sortOrder() {
        return Optional.ofNullable(this.sortOrder);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The format of the template. Valid values: `JSON`, `YAML`.
     * 
     */
    @Import(name="templateFormat")
    private @Nullable String templateFormat;

    /**
     * @return The format of the template. Valid values: `JSON`, `YAML`.
     * 
     */
    public Optional<String> templateFormat() {
        return Optional.ofNullable(this.templateFormat);
    }

    /**
     * The type of OOS Template.
     * 
     */
    @Import(name="templateType")
    private @Nullable String templateType;

    /**
     * @return The type of OOS Template.
     * 
     */
    public Optional<String> templateType() {
        return Optional.ofNullable(this.templateType);
    }

    private GetTemplatesPlainArgs() {}

    private GetTemplatesPlainArgs(GetTemplatesPlainArgs $) {
        this.category = $.category;
        this.createdBy = $.createdBy;
        this.createdDate = $.createdDate;
        this.createdDateAfter = $.createdDateAfter;
        this.hasTrigger = $.hasTrigger;
        this.ids = $.ids;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.shareType = $.shareType;
        this.sortField = $.sortField;
        this.sortOrder = $.sortOrder;
        this.tags = $.tags;
        this.templateFormat = $.templateFormat;
        this.templateType = $.templateType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTemplatesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTemplatesPlainArgs $;

        public Builder() {
            $ = new GetTemplatesPlainArgs();
        }

        public Builder(GetTemplatesPlainArgs defaults) {
            $ = new GetTemplatesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param category The category of template.
         * 
         * @return builder
         * 
         */
        public Builder category(@Nullable String category) {
            $.category = category;
            return this;
        }

        /**
         * @param createdBy The creator of the template.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(@Nullable String createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        /**
         * @param createdDate The template whose creation time is less than or equal to the specified time. The format is: YYYY-MM-DDThh:mm::ssZ.
         * 
         * @return builder
         * 
         */
        public Builder createdDate(@Nullable String createdDate) {
            $.createdDate = createdDate;
            return this;
        }

        /**
         * @param createdDateAfter Create a template whose time is greater than or equal to the specified time. The format is: YYYY-MM-DDThh:mm:ssZ.
         * 
         * @return builder
         * 
         */
        public Builder createdDateAfter(@Nullable String createdDateAfter) {
            $.createdDateAfter = createdDateAfter;
            return this;
        }

        /**
         * @param hasTrigger Is it triggered successfully.
         * 
         * @return builder
         * 
         */
        public Builder hasTrigger(@Nullable Boolean hasTrigger) {
            $.hasTrigger = hasTrigger;
            return this;
        }

        /**
         * @param ids A list of OOS Template ids. Each element in the list is same as template_name.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of OOS Template ids. Each element in the list is same as template_name.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param nameRegex A regex string to filter the results by the template_name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable String nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param shareType The sharing type of the template. Valid values: `Private`, `Public`.
         * 
         * @return builder
         * 
         */
        public Builder shareType(@Nullable String shareType) {
            $.shareType = shareType;
            return this;
        }

        /**
         * @param sortField Sort field. Valid values: `TotalExecutionCount`, `Popularity`, `TemplateName` and `CreatedDate`. Default to `TotalExecutionCount`.
         * 
         * @return builder
         * 
         */
        public Builder sortField(@Nullable String sortField) {
            $.sortField = sortField;
            return this;
        }

        /**
         * @param sortOrder Sort order. Valid values: `Ascending`, `Descending`. Default to `Descending`
         * 
         * @return builder
         * 
         */
        public Builder sortOrder(@Nullable String sortOrder) {
            $.sortOrder = sortOrder;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param templateFormat The format of the template. Valid values: `JSON`, `YAML`.
         * 
         * @return builder
         * 
         */
        public Builder templateFormat(@Nullable String templateFormat) {
            $.templateFormat = templateFormat;
            return this;
        }

        /**
         * @param templateType The type of OOS Template.
         * 
         * @return builder
         * 
         */
        public Builder templateType(@Nullable String templateType) {
            $.templateType = templateType;
            return this;
        }

        public GetTemplatesPlainArgs build() {
            return $;
        }
    }

}
