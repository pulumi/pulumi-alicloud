// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sae.inputs;

import com.pulumi.alicloud.sae.inputs.ApplicationScalingRuleScalingRuleMetricMetricArgs;
import com.pulumi.alicloud.sae.inputs.ApplicationScalingRuleScalingRuleMetricScaleDownRulesArgs;
import com.pulumi.alicloud.sae.inputs.ApplicationScalingRuleScalingRuleMetricScaleUpRulesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationScalingRuleScalingRuleMetricArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationScalingRuleScalingRuleMetricArgs Empty = new ApplicationScalingRuleScalingRuleMetricArgs();

    /**
     * Maximum number of instances applied.
     * 
     */
    @Import(name="maxReplicas")
    private @Nullable Output<Integer> maxReplicas;

    /**
     * @return Maximum number of instances applied.
     * 
     */
    public Optional<Output<Integer>> maxReplicas() {
        return Optional.ofNullable(this.maxReplicas);
    }

    /**
     * Indicator rule configuration. See `metrics` below.
     * 
     */
    @Import(name="metrics")
    private @Nullable Output<List<ApplicationScalingRuleScalingRuleMetricMetricArgs>> metrics;

    /**
     * @return Indicator rule configuration. See `metrics` below.
     * 
     */
    public Optional<Output<List<ApplicationScalingRuleScalingRuleMetricMetricArgs>>> metrics() {
        return Optional.ofNullable(this.metrics);
    }

    /**
     * Minimum number of instances applied.
     * 
     */
    @Import(name="minReplicas")
    private @Nullable Output<Integer> minReplicas;

    /**
     * @return Minimum number of instances applied.
     * 
     */
    public Optional<Output<Integer>> minReplicas() {
        return Optional.ofNullable(this.minReplicas);
    }

    /**
     * Apply shrink rules. See `scale_down_rules` below.
     * 
     */
    @Import(name="scaleDownRules")
    private @Nullable Output<ApplicationScalingRuleScalingRuleMetricScaleDownRulesArgs> scaleDownRules;

    /**
     * @return Apply shrink rules. See `scale_down_rules` below.
     * 
     */
    public Optional<Output<ApplicationScalingRuleScalingRuleMetricScaleDownRulesArgs>> scaleDownRules() {
        return Optional.ofNullable(this.scaleDownRules);
    }

    /**
     * Apply expansion rules. See `scale_up_rules` below.
     * 
     */
    @Import(name="scaleUpRules")
    private @Nullable Output<ApplicationScalingRuleScalingRuleMetricScaleUpRulesArgs> scaleUpRules;

    /**
     * @return Apply expansion rules. See `scale_up_rules` below.
     * 
     */
    public Optional<Output<ApplicationScalingRuleScalingRuleMetricScaleUpRulesArgs>> scaleUpRules() {
        return Optional.ofNullable(this.scaleUpRules);
    }

    private ApplicationScalingRuleScalingRuleMetricArgs() {}

    private ApplicationScalingRuleScalingRuleMetricArgs(ApplicationScalingRuleScalingRuleMetricArgs $) {
        this.maxReplicas = $.maxReplicas;
        this.metrics = $.metrics;
        this.minReplicas = $.minReplicas;
        this.scaleDownRules = $.scaleDownRules;
        this.scaleUpRules = $.scaleUpRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationScalingRuleScalingRuleMetricArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationScalingRuleScalingRuleMetricArgs $;

        public Builder() {
            $ = new ApplicationScalingRuleScalingRuleMetricArgs();
        }

        public Builder(ApplicationScalingRuleScalingRuleMetricArgs defaults) {
            $ = new ApplicationScalingRuleScalingRuleMetricArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxReplicas Maximum number of instances applied.
         * 
         * @return builder
         * 
         */
        public Builder maxReplicas(@Nullable Output<Integer> maxReplicas) {
            $.maxReplicas = maxReplicas;
            return this;
        }

        /**
         * @param maxReplicas Maximum number of instances applied.
         * 
         * @return builder
         * 
         */
        public Builder maxReplicas(Integer maxReplicas) {
            return maxReplicas(Output.of(maxReplicas));
        }

        /**
         * @param metrics Indicator rule configuration. See `metrics` below.
         * 
         * @return builder
         * 
         */
        public Builder metrics(@Nullable Output<List<ApplicationScalingRuleScalingRuleMetricMetricArgs>> metrics) {
            $.metrics = metrics;
            return this;
        }

        /**
         * @param metrics Indicator rule configuration. See `metrics` below.
         * 
         * @return builder
         * 
         */
        public Builder metrics(List<ApplicationScalingRuleScalingRuleMetricMetricArgs> metrics) {
            return metrics(Output.of(metrics));
        }

        /**
         * @param metrics Indicator rule configuration. See `metrics` below.
         * 
         * @return builder
         * 
         */
        public Builder metrics(ApplicationScalingRuleScalingRuleMetricMetricArgs... metrics) {
            return metrics(List.of(metrics));
        }

        /**
         * @param minReplicas Minimum number of instances applied.
         * 
         * @return builder
         * 
         */
        public Builder minReplicas(@Nullable Output<Integer> minReplicas) {
            $.minReplicas = minReplicas;
            return this;
        }

        /**
         * @param minReplicas Minimum number of instances applied.
         * 
         * @return builder
         * 
         */
        public Builder minReplicas(Integer minReplicas) {
            return minReplicas(Output.of(minReplicas));
        }

        /**
         * @param scaleDownRules Apply shrink rules. See `scale_down_rules` below.
         * 
         * @return builder
         * 
         */
        public Builder scaleDownRules(@Nullable Output<ApplicationScalingRuleScalingRuleMetricScaleDownRulesArgs> scaleDownRules) {
            $.scaleDownRules = scaleDownRules;
            return this;
        }

        /**
         * @param scaleDownRules Apply shrink rules. See `scale_down_rules` below.
         * 
         * @return builder
         * 
         */
        public Builder scaleDownRules(ApplicationScalingRuleScalingRuleMetricScaleDownRulesArgs scaleDownRules) {
            return scaleDownRules(Output.of(scaleDownRules));
        }

        /**
         * @param scaleUpRules Apply expansion rules. See `scale_up_rules` below.
         * 
         * @return builder
         * 
         */
        public Builder scaleUpRules(@Nullable Output<ApplicationScalingRuleScalingRuleMetricScaleUpRulesArgs> scaleUpRules) {
            $.scaleUpRules = scaleUpRules;
            return this;
        }

        /**
         * @param scaleUpRules Apply expansion rules. See `scale_up_rules` below.
         * 
         * @return builder
         * 
         */
        public Builder scaleUpRules(ApplicationScalingRuleScalingRuleMetricScaleUpRulesArgs scaleUpRules) {
            return scaleUpRules(Output.of(scaleUpRules));
        }

        public ApplicationScalingRuleScalingRuleMetricArgs build() {
            return $;
        }
    }

}
