// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.oss.BucketArgs;
import com.pulumi.alicloud.oss.inputs.BucketState;
import com.pulumi.alicloud.oss.outputs.BucketAccessMonitor;
import com.pulumi.alicloud.oss.outputs.BucketCorsRule;
import com.pulumi.alicloud.oss.outputs.BucketLifecycleRule;
import com.pulumi.alicloud.oss.outputs.BucketLogging;
import com.pulumi.alicloud.oss.outputs.BucketRefererConfig;
import com.pulumi.alicloud.oss.outputs.BucketServerSideEncryptionRule;
import com.pulumi.alicloud.oss.outputs.BucketTransferAcceleration;
import com.pulumi.alicloud.oss.outputs.BucketVersioning;
import com.pulumi.alicloud.oss.outputs.BucketWebsite;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a resource to create a oss bucket and set its attribution.
 * 
 * &gt; **NOTE:** The bucket namespace is shared by all users of the OSS system. Please set bucket name as unique as possible.
 * 
 * &gt; **NOTE:** Available since v1.2.0.
 * 
 * ## Example Usage
 * 
 * Private Bucket
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.oss.Bucket;
 * import com.pulumi.alicloud.oss.BucketArgs;
 * import com.pulumi.alicloud.oss.BucketAcl;
 * import com.pulumi.alicloud.oss.BucketAclArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Integer("default", IntegerArgs.builder()
 *             .max(99999)
 *             .min(10000)
 *             .build());
 * 
 *         var bucket_acl = new Bucket("bucket-acl", BucketArgs.builder()
 *             .bucket(String.format("example-value-%s", default_.result()))
 *             .build());
 * 
 *         var bucket_aclBucketAcl = new BucketAcl("bucket-aclBucketAcl", BucketAclArgs.builder()
 *             .bucket(bucket_acl.bucket())
 *             .acl("private")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * Static Website
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.oss.Bucket;
 * import com.pulumi.alicloud.oss.BucketArgs;
 * import com.pulumi.alicloud.oss.inputs.BucketWebsiteArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Integer("default", IntegerArgs.builder()
 *             .max(99999)
 *             .min(10000)
 *             .build());
 * 
 *         var bucket_website = new Bucket("bucket-website", BucketArgs.builder()
 *             .bucket(String.format("example-value-%s", default_.result()))
 *             .website(BucketWebsiteArgs.builder()
 *                 .indexDocument("index.html")
 *                 .errorDocument("error.html")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * Enable Logging
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.oss.Bucket;
 * import com.pulumi.alicloud.oss.BucketArgs;
 * import com.pulumi.alicloud.oss.BucketAcl;
 * import com.pulumi.alicloud.oss.BucketAclArgs;
 * import com.pulumi.alicloud.oss.inputs.BucketLoggingArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Integer("default", IntegerArgs.builder()
 *             .max(99999)
 *             .min(10000)
 *             .build());
 * 
 *         var bucket_target = new Bucket("bucket-target", BucketArgs.builder()
 *             .bucket(String.format("example-value-%s", default_.result()))
 *             .build());
 * 
 *         var bucket_targetBucketAcl = new BucketAcl("bucket-targetBucketAcl", BucketAclArgs.builder()
 *             .bucket(bucket_target.bucket())
 *             .acl("public-read")
 *             .build());
 * 
 *         var bucket_logging = new Bucket("bucket-logging", BucketArgs.builder()
 *             .bucket(String.format("example-logging-%s", default_.result()))
 *             .logging(BucketLoggingArgs.builder()
 *                 .targetBucket(bucket_target.id())
 *                 .targetPrefix("log/")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * Referer configuration
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.oss.Bucket;
 * import com.pulumi.alicloud.oss.BucketArgs;
 * import com.pulumi.alicloud.oss.inputs.BucketRefererConfigArgs;
 * import com.pulumi.alicloud.oss.BucketAcl;
 * import com.pulumi.alicloud.oss.BucketAclArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Integer("default", IntegerArgs.builder()
 *             .max(99999)
 *             .min(10000)
 *             .build());
 * 
 *         var bucket_referer = new Bucket("bucket-referer", BucketArgs.builder()
 *             .bucket(String.format("example-value-%s", default_.result()))
 *             .refererConfig(BucketRefererConfigArgs.builder()
 *                 .allowEmpty(false)
 *                 .referers(                
 *                     "http://www.aliyun.com",
 *                     "https://www.aliyun.com")
 *                 .build())
 *             .build());
 * 
 *         var defaultBucketAcl = new BucketAcl("defaultBucketAcl", BucketAclArgs.builder()
 *             .bucket(bucket_referer.bucket())
 *             .acl("private")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * Set lifecycle rule
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.oss.Bucket;
 * import com.pulumi.alicloud.oss.BucketArgs;
 * import com.pulumi.alicloud.oss.inputs.BucketLifecycleRuleArgs;
 * import com.pulumi.alicloud.oss.BucketAcl;
 * import com.pulumi.alicloud.oss.BucketAclArgs;
 * import com.pulumi.alicloud.oss.inputs.BucketVersioningArgs;
 * import com.pulumi.alicloud.oss.inputs.BucketAccessMonitorArgs;
 * import com.pulumi.std.StdFunctions;
 * import com.pulumi.std.inputs.FormatArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Integer("default", IntegerArgs.builder()
 *             .max(99999)
 *             .min(10000)
 *             .build());
 * 
 *         var bucket_lifecycle1 = new Bucket("bucket-lifecycle1", BucketArgs.builder()
 *             .bucket(String.format("example-lifecycle1-%s", default_.result()))
 *             .lifecycleRules(            
 *                 BucketLifecycleRuleArgs.builder()
 *                     .id("rule-days")
 *                     .prefix("path1/")
 *                     .enabled(true)
 *                     .expirations(BucketLifecycleRuleExpirationArgs.builder()
 *                         .days(365)
 *                         .build())
 *                     .build(),
 *                 BucketLifecycleRuleArgs.builder()
 *                     .id("rule-date")
 *                     .prefix("path2/")
 *                     .enabled(true)
 *                     .expirations(BucketLifecycleRuleExpirationArgs.builder()
 *                         .date("2018-01-12")
 *                         .build())
 *                     .build())
 *             .build());
 * 
 *         var bucket_lifecycle1BucketAcl = new BucketAcl("bucket-lifecycle1BucketAcl", BucketAclArgs.builder()
 *             .bucket(bucket_lifecycle1.bucket())
 *             .acl("public-read")
 *             .build());
 * 
 *         var bucket_lifecycle2 = new Bucket("bucket-lifecycle2", BucketArgs.builder()
 *             .bucket(String.format("example-lifecycle2-%s", default_.result()))
 *             .lifecycleRules(BucketLifecycleRuleArgs.builder()
 *                 .id("rule-days-transition")
 *                 .prefix("path3/")
 *                 .enabled(true)
 *                 .transitions(                
 *                     BucketLifecycleRuleTransitionArgs.builder()
 *                         .days(3)
 *                         .storageClass("IA")
 *                         .build(),
 *                     BucketLifecycleRuleTransitionArgs.builder()
 *                         .days(30)
 *                         .storageClass("Archive")
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *         var bucket_lifecycle2BucketAcl = new BucketAcl("bucket-lifecycle2BucketAcl", BucketAclArgs.builder()
 *             .bucket(bucket_lifecycle2.bucket())
 *             .acl("public-read")
 *             .build());
 * 
 *         var bucket_lifecycle3 = new Bucket("bucket-lifecycle3", BucketArgs.builder()
 *             .bucket(String.format("example-lifecycle3-%s", default_.result()))
 *             .lifecycleRules(BucketLifecycleRuleArgs.builder()
 *                 .id("rule-days-transition")
 *                 .prefix("path3/")
 *                 .enabled(true)
 *                 .transitions(                
 *                     BucketLifecycleRuleTransitionArgs.builder()
 *                         .createdBeforeDate("2022-11-11")
 *                         .storageClass("IA")
 *                         .build(),
 *                     BucketLifecycleRuleTransitionArgs.builder()
 *                         .createdBeforeDate("2021-11-11")
 *                         .storageClass("Archive")
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *         var bucket_lifecycle3BucketAcl = new BucketAcl("bucket-lifecycle3BucketAcl", BucketAclArgs.builder()
 *             .bucket(bucket_lifecycle3.bucket())
 *             .acl("public-read")
 *             .build());
 * 
 *         var bucket_lifecycle4 = new Bucket("bucket-lifecycle4", BucketArgs.builder()
 *             .bucket(String.format("example-lifecycle4-%s", default_.result()))
 *             .lifecycleRules(BucketLifecycleRuleArgs.builder()
 *                 .id("rule-abort-multipart-upload")
 *                 .prefix("path3/")
 *                 .enabled(true)
 *                 .abortMultipartUploads(BucketLifecycleRuleAbortMultipartUploadArgs.builder()
 *                     .days(128)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var bucket_lifecycle4BucketAcl = new BucketAcl("bucket-lifecycle4BucketAcl", BucketAclArgs.builder()
 *             .bucket(bucket_lifecycle4.bucket())
 *             .acl("public-read")
 *             .build());
 * 
 *         var bucket_versioning_lifecycle = new Bucket("bucket-versioning-lifecycle", BucketArgs.builder()
 *             .bucket(String.format("example-lifecycle5-%s", default_.result()))
 *             .versioning(BucketVersioningArgs.builder()
 *                 .status("Enabled")
 *                 .build())
 *             .lifecycleRules(BucketLifecycleRuleArgs.builder()
 *                 .id("rule-versioning")
 *                 .prefix("path1/")
 *                 .enabled(true)
 *                 .expirations(BucketLifecycleRuleExpirationArgs.builder()
 *                     .expiredObjectDeleteMarker(true)
 *                     .build())
 *                 .noncurrentVersionExpirations(BucketLifecycleRuleNoncurrentVersionExpirationArgs.builder()
 *                     .days(240)
 *                     .build())
 *                 .noncurrentVersionTransitions(                
 *                     BucketLifecycleRuleNoncurrentVersionTransitionArgs.builder()
 *                         .days(180)
 *                         .storageClass("Archive")
 *                         .build(),
 *                     BucketLifecycleRuleNoncurrentVersionTransitionArgs.builder()
 *                         .days(60)
 *                         .storageClass("IA")
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *         var bucket_versioning_lifecycleBucketAcl = new BucketAcl("bucket-versioning-lifecycleBucketAcl", BucketAclArgs.builder()
 *             .bucket(bucket_versioning_lifecycle.bucket())
 *             .acl("private")
 *             .build());
 * 
 *         var bucket_access_monitor_lifecycle = new Bucket("bucket-access-monitor-lifecycle", BucketArgs.builder()
 *             .bucket(StdFunctions.format(FormatArgs.builder()
 *                 .input("example-lifecycle6-%s")
 *                 .args(default_.result())
 *                 .build()).result())
 *             .accessMonitor(BucketAccessMonitorArgs.builder()
 *                 .status("Enabled")
 *                 .build())
 *             .lifecycleRules(BucketLifecycleRuleArgs.builder()
 *                 .id("rule-days-transition")
 *                 .prefix("path/")
 *                 .enabled(true)
 *                 .transitions(BucketLifecycleRuleTransitionArgs.builder()
 *                     .days(30)
 *                     .storageClass("IA")
 *                     .isAccessTime(true)
 *                     .returnToStdWhenVisit(true)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var bucket_access_monitor_lifecycleBucketAcl = new BucketAcl("bucket-access-monitor-lifecycleBucketAcl", BucketAclArgs.builder()
 *             .bucket(bucket_access_monitor_lifecycle.bucket())
 *             .acl("private")
 *             .build());
 * 
 *         var bucket_tag_lifecycle = new Bucket("bucket-tag-lifecycle", BucketArgs.builder()
 *             .bucket(StdFunctions.format(FormatArgs.builder()
 *                 .input("example-lifecycle7-%s")
 *                 .args(default_.result())
 *                 .build()).result())
 *             .lifecycleRules(BucketLifecycleRuleArgs.builder()
 *                 .id("rule-days-transition")
 *                 .prefix("path/")
 *                 .enabled(true)
 *                 .transitions(BucketLifecycleRuleTransitionArgs.builder()
 *                     .createdBeforeDate("2022-11-11")
 *                     .storageClass("IA")
 *                     .build())
 *                 .build())
 *             .tags(Map.ofEntries(
 *                 Map.entry("Created", "TF"),
 *                 Map.entry("For", "example")
 *             ))
 *             .build());
 * 
 *         var bucket_tag_lifecycleBucketAcl = new BucketAcl("bucket-tag-lifecycleBucketAcl", BucketAclArgs.builder()
 *             .bucket(bucket_tag_lifecycle.bucket())
 *             .acl("private")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * Set bucket policy
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.oss.Bucket;
 * import com.pulumi.alicloud.oss.BucketArgs;
 * import com.pulumi.alicloud.oss.BucketAcl;
 * import com.pulumi.alicloud.oss.BucketAclArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Integer("default", IntegerArgs.builder()
 *             .max(99999)
 *             .min(10000)
 *             .build());
 * 
 *         var bucket_policy = new Bucket("bucket-policy", BucketArgs.builder()
 *             .bucket(String.format("example-policy-%s", default_.result()))
 *             .policy("""
 *   {\"Statement\":
 *       [{\"Action\":
 *           [\"oss:PutObject\", \"oss:GetObject\", \"oss:DeleteBucket\"],
 *         \"Effect\":\"Allow\",
 *         \"Resource\":
 *             [\"acs:oss:*:*:*\"]}],
 *    \"Version\":\"1\"}
 *             """)
 *             .build());
 * 
 *         var defaultBucketAcl = new BucketAcl("defaultBucketAcl", BucketAclArgs.builder()
 *             .bucket(bucket_policy.bucket())
 *             .acl("private")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * IA Bucket
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.oss.Bucket;
 * import com.pulumi.alicloud.oss.BucketArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Integer("default", IntegerArgs.builder()
 *             .max(99999)
 *             .min(10000)
 *             .build());
 * 
 *         var defaultBucket = new Bucket("defaultBucket", BucketArgs.builder()
 *             .bucket(String.format("example-%s", default_.result()))
 *             .storageClass("IA")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * Set bucket server-side encryption rule
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.oss.Bucket;
 * import com.pulumi.alicloud.oss.BucketArgs;
 * import com.pulumi.alicloud.oss.inputs.BucketServerSideEncryptionRuleArgs;
 * import com.pulumi.alicloud.oss.BucketAcl;
 * import com.pulumi.alicloud.oss.BucketAclArgs;
 * import com.pulumi.alicloud.kms.Key;
 * import com.pulumi.alicloud.kms.KeyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Integer("default", IntegerArgs.builder()
 *             .max(99999)
 *             .min(10000)
 *             .build());
 * 
 *         var bucket_sserule = new Bucket("bucket-sserule", BucketArgs.builder()
 *             .bucket(String.format("terraform-example-%s", default_.result()))
 *             .serverSideEncryptionRule(BucketServerSideEncryptionRuleArgs.builder()
 *                 .sseAlgorithm("AES256")
 *                 .build())
 *             .build());
 * 
 *         var bucket_sseruleBucketAcl = new BucketAcl("bucket-sseruleBucketAcl", BucketAclArgs.builder()
 *             .bucket(bucket_sserule.bucket())
 *             .acl("private")
 *             .build());
 * 
 *         var kms = new Key("kms", KeyArgs.builder()
 *             .description("terraform-example")
 *             .pendingWindowInDays(7)
 *             .status("Enabled")
 *             .build());
 * 
 *         var bucket_kms = new Bucket("bucket-kms", BucketArgs.builder()
 *             .bucket(String.format("terraform-example-kms-%s", default_.result()))
 *             .serverSideEncryptionRule(BucketServerSideEncryptionRuleArgs.builder()
 *                 .sseAlgorithm("KMS")
 *                 .kmsMasterKeyId(kms.id())
 *                 .build())
 *             .build());
 * 
 *         var bucket_kmsBucketAcl = new BucketAcl("bucket-kmsBucketAcl", BucketAclArgs.builder()
 *             .bucket(bucket_kms.bucket())
 *             .acl("private")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * Set bucket tags
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.oss.Bucket;
 * import com.pulumi.alicloud.oss.BucketArgs;
 * import com.pulumi.alicloud.oss.BucketAcl;
 * import com.pulumi.alicloud.oss.BucketAclArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Integer("default", IntegerArgs.builder()
 *             .max(99999)
 *             .min(10000)
 *             .build());
 * 
 *         var bucket_tags = new Bucket("bucket-tags", BucketArgs.builder()
 *             .bucket(String.format("terraform-example-%s", default_.result()))
 *             .tags(Map.ofEntries(
 *                 Map.entry("key1", "value1"),
 *                 Map.entry("key2", "value2")
 *             ))
 *             .build());
 * 
 *         var bucket_tagsBucketAcl = new BucketAcl("bucket-tagsBucketAcl", BucketAclArgs.builder()
 *             .bucket(bucket_tags.bucket())
 *             .acl("private")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * Enable bucket versioning
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.oss.Bucket;
 * import com.pulumi.alicloud.oss.BucketArgs;
 * import com.pulumi.alicloud.oss.inputs.BucketVersioningArgs;
 * import com.pulumi.alicloud.oss.BucketAcl;
 * import com.pulumi.alicloud.oss.BucketAclArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Integer("default", IntegerArgs.builder()
 *             .max(99999)
 *             .min(10000)
 *             .build());
 * 
 *         var bucket_versioning = new Bucket("bucket-versioning", BucketArgs.builder()
 *             .bucket(String.format("terraform-example-%s", default_.result()))
 *             .versioning(BucketVersioningArgs.builder()
 *                 .status("Enabled")
 *                 .build())
 *             .build());
 * 
 *         var defaultBucketAcl = new BucketAcl("defaultBucketAcl", BucketAclArgs.builder()
 *             .bucket(bucket_versioning.bucket())
 *             .acl("private")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * Set bucket redundancy type
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.oss.Bucket;
 * import com.pulumi.alicloud.oss.BucketArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Integer("default", IntegerArgs.builder()
 *             .max(99999)
 *             .min(10000)
 *             .build());
 * 
 *         var bucket_redundancytype = new Bucket("bucket-redundancytype", BucketArgs.builder()
 *             .bucket(String.format("terraform-example-%s", default_.result()))
 *             .redundancyType("ZRS")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * Set bucket accelerate configuration
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.oss.Bucket;
 * import com.pulumi.alicloud.oss.BucketArgs;
 * import com.pulumi.alicloud.oss.inputs.BucketTransferAccelerationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Integer("default", IntegerArgs.builder()
 *             .max(99999)
 *             .min(10000)
 *             .build());
 * 
 *         var bucket_accelerate = new Bucket("bucket-accelerate", BucketArgs.builder()
 *             .bucket(String.format("terraform-example-%s", default_.result()))
 *             .transferAcceleration(BucketTransferAccelerationArgs.builder()
 *                 .enabled(false)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * Set bucket resource group id
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.resourcemanager.ResourcemanagerFunctions;
 * import com.pulumi.alicloud.resourcemanager.inputs.GetResourceGroupsArgs;
 * import com.pulumi.alicloud.oss.Bucket;
 * import com.pulumi.alicloud.oss.BucketArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var defaultInteger = new Integer("defaultInteger", IntegerArgs.builder()
 *             .max(99999)
 *             .min(10000)
 *             .build());
 * 
 *         final var default = ResourcemanagerFunctions.getResourceGroups(GetResourceGroupsArgs.builder()
 *             .nameRegex("default")
 *             .build());
 * 
 *         var bucket_accelerate = new Bucket("bucket-accelerate", BucketArgs.builder()
 *             .bucket(String.format("terraform-example-%s", defaultInteger.result()))
 *             .resourceGroupId(default_.groups()[0].id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * OSS bucket can be imported using the bucket name, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:oss/bucket:Bucket bucket bucket-12345678
 * ```
 * 
 */
@ResourceType(type="alicloud:oss/bucket:Bucket")
public class Bucket extends com.pulumi.resources.CustomResource {
    /**
     * A access monitor status of a bucket. See `access_monitor` below.
     * 
     */
    @Export(name="accessMonitor", refs={BucketAccessMonitor.class}, tree="[0]")
    private Output<BucketAccessMonitor> accessMonitor;

    /**
     * @return A access monitor status of a bucket. See `access_monitor` below.
     * 
     */
    public Output<BucketAccessMonitor> accessMonitor() {
        return this.accessMonitor;
    }
    /**
     * The [canned ACL](https://www.alibabacloud.com/help/doc-detail/31898.htm) to apply. Can be &#34;private&#34;, &#34;public-read&#34; and &#34;public-read-write&#34;. This property has been deprecated since 1.220.0, please use the resource `alicloud.oss.BucketAcl` instead.
     * 
     * @deprecated
     * Field &#39;acl&#39; has been deprecated since provider version 1.220.0. New resource &#39;alicloud_oss_bucket_acl&#39; instead.
     * 
     */
    @Deprecated /* Field 'acl' has been deprecated since provider version 1.220.0. New resource 'alicloud_oss_bucket_acl' instead. */
    @Export(name="acl", refs={String.class}, tree="[0]")
    private Output<String> acl;

    /**
     * @return The [canned ACL](https://www.alibabacloud.com/help/doc-detail/31898.htm) to apply. Can be &#34;private&#34;, &#34;public-read&#34; and &#34;public-read-write&#34;. This property has been deprecated since 1.220.0, please use the resource `alicloud.oss.BucketAcl` instead.
     * 
     */
    public Output<String> acl() {
        return this.acl;
    }
    @Export(name="bucket", refs={String.class}, tree="[0]")
    private Output<String> bucket;

    public Output<String> bucket() {
        return this.bucket;
    }
    /**
     * A rule of  [Cross-Origin Resource Sharing](https://www.alibabacloud.com/help/doc-detail/31903.htm). The items of core rule are no more than 10 for every OSS bucket. See `cors_rule` below.
     * 
     */
    @Export(name="corsRules", refs={List.class,BucketCorsRule.class}, tree="[0,1]")
    private Output</* @Nullable */ List<BucketCorsRule>> corsRules;

    /**
     * @return A rule of  [Cross-Origin Resource Sharing](https://www.alibabacloud.com/help/doc-detail/31903.htm). The items of core rule are no more than 10 for every OSS bucket. See `cors_rule` below.
     * 
     */
    public Output<Optional<List<BucketCorsRule>>> corsRules() {
        return Codegen.optional(this.corsRules);
    }
    /**
     * The creation date of the bucket.
     * 
     */
    @Export(name="creationDate", refs={String.class}, tree="[0]")
    private Output<String> creationDate;

    /**
     * @return The creation date of the bucket.
     * 
     */
    public Output<String> creationDate() {
        return this.creationDate;
    }
    /**
     * The extranet access endpoint of the bucket.
     * 
     */
    @Export(name="extranetEndpoint", refs={String.class}, tree="[0]")
    private Output<String> extranetEndpoint;

    /**
     * @return The extranet access endpoint of the bucket.
     * 
     */
    public Output<String> extranetEndpoint() {
        return this.extranetEndpoint;
    }
    /**
     * A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without error. These objects are not recoverable. Defaults to &#34;false&#34;.
     * 
     */
    @Export(name="forceDestroy", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> forceDestroy;

    /**
     * @return A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without error. These objects are not recoverable. Defaults to &#34;false&#34;.
     * 
     */
    public Output<Optional<Boolean>> forceDestroy() {
        return Codegen.optional(this.forceDestroy);
    }
    /**
     * The intranet access endpoint of the bucket.
     * 
     */
    @Export(name="intranetEndpoint", refs={String.class}, tree="[0]")
    private Output<String> intranetEndpoint;

    /**
     * @return The intranet access endpoint of the bucket.
     * 
     */
    public Output<String> intranetEndpoint() {
        return this.intranetEndpoint;
    }
    /**
     * A boolean that indicates lifecycle rules allow prefix overlap.
     * 
     */
    @Export(name="lifecycleRuleAllowSameActionOverlap", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> lifecycleRuleAllowSameActionOverlap;

    /**
     * @return A boolean that indicates lifecycle rules allow prefix overlap.
     * 
     */
    public Output<Optional<Boolean>> lifecycleRuleAllowSameActionOverlap() {
        return Codegen.optional(this.lifecycleRuleAllowSameActionOverlap);
    }
    /**
     * A configuration of [object lifecycle management](https://www.alibabacloud.com/help/doc-detail/31904.htm). See `lifecycle_rule` below.
     * 
     */
    @Export(name="lifecycleRules", refs={List.class,BucketLifecycleRule.class}, tree="[0,1]")
    private Output</* @Nullable */ List<BucketLifecycleRule>> lifecycleRules;

    /**
     * @return A configuration of [object lifecycle management](https://www.alibabacloud.com/help/doc-detail/31904.htm). See `lifecycle_rule` below.
     * 
     */
    public Output<Optional<List<BucketLifecycleRule>>> lifecycleRules() {
        return Codegen.optional(this.lifecycleRules);
    }
    /**
     * The location of the bucket.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The location of the bucket.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * A Settings of [bucket logging](https://www.alibabacloud.com/help/doc-detail/31900.htm). See `logging` below.
     * 
     */
    @Export(name="logging", refs={BucketLogging.class}, tree="[0]")
    private Output</* @Nullable */ BucketLogging> logging;

    /**
     * @return A Settings of [bucket logging](https://www.alibabacloud.com/help/doc-detail/31900.htm). See `logging` below.
     * 
     */
    public Output<Optional<BucketLogging>> logging() {
        return Codegen.optional(this.logging);
    }
    /**
     * The flag of using logging enable container. Defaults true.
     * 
     * @deprecated
     * Deprecated from 1.37.0. When `logging` is set, the bucket logging will be able.
     * 
     */
    @Deprecated /* Deprecated from 1.37.0. When `logging` is set, the bucket logging will be able. */
    @Export(name="loggingIsenable", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> loggingIsenable;

    /**
     * @return The flag of using logging enable container. Defaults true.
     * 
     */
    public Output<Optional<Boolean>> loggingIsenable() {
        return Codegen.optional(this.loggingIsenable);
    }
    /**
     * The bucket owner.
     * 
     */
    @Export(name="owner", refs={String.class}, tree="[0]")
    private Output<String> owner;

    /**
     * @return The bucket owner.
     * 
     */
    public Output<String> owner() {
        return this.owner;
    }
    /**
     * Json format text of bucket policy [bucket policy management](https://www.alibabacloud.com/help/doc-detail/100680.htm). This property has been deprecated since 1.220.0, please use the resource `alicloud.oss.BucketPolicy` instead.
     * 
     */
    @Export(name="policy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> policy;

    /**
     * @return Json format text of bucket policy [bucket policy management](https://www.alibabacloud.com/help/doc-detail/100680.htm). This property has been deprecated since 1.220.0, please use the resource `alicloud.oss.BucketPolicy` instead.
     * 
     */
    public Output<Optional<String>> policy() {
        return Codegen.optional(this.policy);
    }
    /**
     * The [redundancy type](https://www.alibabacloud.com/help/doc-detail/90589.htm) to enable. Can be &#34;LRS&#34;, and &#34;ZRS&#34;. Defaults to &#34;LRS&#34;.
     * 
     */
    @Export(name="redundancyType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> redundancyType;

    /**
     * @return The [redundancy type](https://www.alibabacloud.com/help/doc-detail/90589.htm) to enable. Can be &#34;LRS&#34;, and &#34;ZRS&#34;. Defaults to &#34;LRS&#34;.
     * 
     */
    public Output<Optional<String>> redundancyType() {
        return Codegen.optional(this.redundancyType);
    }
    /**
     * The configuration of [referer](https://www.alibabacloud.com/help/doc-detail/31901.htm). This property has been deprecated since 1.220.0, please use the resource `alicloud.oss.BucketReferer` instead. See `referer_config` below.
     * 
     */
    @Export(name="refererConfig", refs={BucketRefererConfig.class}, tree="[0]")
    private Output</* @Nullable */ BucketRefererConfig> refererConfig;

    /**
     * @return The configuration of [referer](https://www.alibabacloud.com/help/doc-detail/31901.htm). This property has been deprecated since 1.220.0, please use the resource `alicloud.oss.BucketReferer` instead. See `referer_config` below.
     * 
     */
    public Output<Optional<BucketRefererConfig>> refererConfig() {
        return Codegen.optional(this.refererConfig);
    }
    /**
     * The ID of the resource group to which the bucket belongs.
     * 
     */
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group to which the bucket belongs.
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * A configuration of server-side encryption. See `server_side_encryption_rule` below.
     * 
     */
    @Export(name="serverSideEncryptionRule", refs={BucketServerSideEncryptionRule.class}, tree="[0]")
    private Output</* @Nullable */ BucketServerSideEncryptionRule> serverSideEncryptionRule;

    /**
     * @return A configuration of server-side encryption. See `server_side_encryption_rule` below.
     * 
     */
    public Output<Optional<BucketServerSideEncryptionRule>> serverSideEncryptionRule() {
        return Codegen.optional(this.serverSideEncryptionRule);
    }
    /**
     * The [storage class](https://www.alibabacloud.com/help/doc-detail/51374.htm) to apply. Can be &#34;Standard&#34;, &#34;IA&#34;, &#34;Archive&#34;, &#34;ColdArchive&#34; and &#34;DeepColdArchive&#34;. Defaults to &#34;Standard&#34;. &#34;ColdArchive&#34; is available since 1.203.0. &#34;DeepColdArchive&#34; is available since 1.209.0.
     * 
     */
    @Export(name="storageClass", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storageClass;

    /**
     * @return The [storage class](https://www.alibabacloud.com/help/doc-detail/51374.htm) to apply. Can be &#34;Standard&#34;, &#34;IA&#34;, &#34;Archive&#34;, &#34;ColdArchive&#34; and &#34;DeepColdArchive&#34;. Defaults to &#34;Standard&#34;. &#34;ColdArchive&#34; is available since 1.203.0. &#34;DeepColdArchive&#34; is available since 1.209.0.
     * 
     */
    public Output<Optional<String>> storageClass() {
        return Codegen.optional(this.storageClass);
    }
    /**
     * A mapping of tags to assign to the bucket. The items are no more than 10 for a bucket.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the bucket. The items are no more than 10 for a bucket.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * A transfer acceleration status of a bucket. See `transfer_acceleration` below.
     * 
     */
    @Export(name="transferAcceleration", refs={BucketTransferAcceleration.class}, tree="[0]")
    private Output</* @Nullable */ BucketTransferAcceleration> transferAcceleration;

    /**
     * @return A transfer acceleration status of a bucket. See `transfer_acceleration` below.
     * 
     */
    public Output<Optional<BucketTransferAcceleration>> transferAcceleration() {
        return Codegen.optional(this.transferAcceleration);
    }
    /**
     * A state of versioning. See `versioning` below.
     * 
     */
    @Export(name="versioning", refs={BucketVersioning.class}, tree="[0]")
    private Output</* @Nullable */ BucketVersioning> versioning;

    /**
     * @return A state of versioning. See `versioning` below.
     * 
     */
    public Output<Optional<BucketVersioning>> versioning() {
        return Codegen.optional(this.versioning);
    }
    /**
     * A website configuration. See `website` below.
     * 
     */
    @Export(name="website", refs={BucketWebsite.class}, tree="[0]")
    private Output</* @Nullable */ BucketWebsite> website;

    /**
     * @return A website configuration. See `website` below.
     * 
     */
    public Output<Optional<BucketWebsite>> website() {
        return Codegen.optional(this.website);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Bucket(java.lang.String name) {
        this(name, BucketArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Bucket(java.lang.String name, @Nullable BucketArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Bucket(java.lang.String name, @Nullable BucketArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:oss/bucket:Bucket", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Bucket(java.lang.String name, Output<java.lang.String> id, @Nullable BucketState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:oss/bucket:Bucket", name, state, makeResourceOptions(options, id), false);
    }

    private static BucketArgs makeArgs(@Nullable BucketArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? BucketArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Bucket get(java.lang.String name, Output<java.lang.String> id, @Nullable BucketState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Bucket(name, id, state, options);
    }
}
