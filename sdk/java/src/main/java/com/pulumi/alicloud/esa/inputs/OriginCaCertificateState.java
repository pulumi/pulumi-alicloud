// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OriginCaCertificateState extends com.pulumi.resources.ResourceArgs {

    public static final OriginCaCertificateState Empty = new OriginCaCertificateState();

    /**
     * Certificate content.
     * 
     */
    @Import(name="certificate")
    private @Nullable Output<String> certificate;

    /**
     * @return Certificate content.
     * 
     */
    public Optional<Output<String>> certificate() {
        return Optional.ofNullable(this.certificate);
    }

    /**
     * Creation time.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Creation time.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The certificate name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The certificate name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * OriginCaCertificate Id
     * 
     */
    @Import(name="originCaCertificateId")
    private @Nullable Output<String> originCaCertificateId;

    /**
     * @return OriginCaCertificate Id
     * 
     */
    public Optional<Output<String>> originCaCertificateId() {
        return Optional.ofNullable(this.originCaCertificateId);
    }

    /**
     * Site Id
     * 
     */
    @Import(name="siteId")
    private @Nullable Output<Integer> siteId;

    /**
     * @return Site Id
     * 
     */
    public Optional<Output<Integer>> siteId() {
        return Optional.ofNullable(this.siteId);
    }

    /**
     * Certificate status.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Certificate status.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private OriginCaCertificateState() {}

    private OriginCaCertificateState(OriginCaCertificateState $) {
        this.certificate = $.certificate;
        this.createTime = $.createTime;
        this.name = $.name;
        this.originCaCertificateId = $.originCaCertificateId;
        this.siteId = $.siteId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OriginCaCertificateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OriginCaCertificateState $;

        public Builder() {
            $ = new OriginCaCertificateState();
        }

        public Builder(OriginCaCertificateState defaults) {
            $ = new OriginCaCertificateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificate Certificate content.
         * 
         * @return builder
         * 
         */
        public Builder certificate(@Nullable Output<String> certificate) {
            $.certificate = certificate;
            return this;
        }

        /**
         * @param certificate Certificate content.
         * 
         * @return builder
         * 
         */
        public Builder certificate(String certificate) {
            return certificate(Output.of(certificate));
        }

        /**
         * @param createTime Creation time.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Creation time.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param name The certificate name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The certificate name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param originCaCertificateId OriginCaCertificate Id
         * 
         * @return builder
         * 
         */
        public Builder originCaCertificateId(@Nullable Output<String> originCaCertificateId) {
            $.originCaCertificateId = originCaCertificateId;
            return this;
        }

        /**
         * @param originCaCertificateId OriginCaCertificate Id
         * 
         * @return builder
         * 
         */
        public Builder originCaCertificateId(String originCaCertificateId) {
            return originCaCertificateId(Output.of(originCaCertificateId));
        }

        /**
         * @param siteId Site Id
         * 
         * @return builder
         * 
         */
        public Builder siteId(@Nullable Output<Integer> siteId) {
            $.siteId = siteId;
            return this;
        }

        /**
         * @param siteId Site Id
         * 
         * @return builder
         * 
         */
        public Builder siteId(Integer siteId) {
            return siteId(Output.of(siteId));
        }

        /**
         * @param status Certificate status.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Certificate status.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public OriginCaCertificateState build() {
            return $;
        }
    }

}
