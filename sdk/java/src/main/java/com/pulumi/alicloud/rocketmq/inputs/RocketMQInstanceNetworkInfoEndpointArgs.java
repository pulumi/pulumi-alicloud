// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rocketmq.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RocketMQInstanceNetworkInfoEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final RocketMQInstanceNetworkInfoEndpointArgs Empty = new RocketMQInstanceNetworkInfoEndpointArgs();

    /**
     * Access point type.
     * 
     */
    @Import(name="endpointType")
    private @Nullable Output<String> endpointType;

    /**
     * @return Access point type.
     * 
     */
    public Optional<Output<String>> endpointType() {
        return Optional.ofNullable(this.endpointType);
    }

    /**
     * Access point address.
     * 
     */
    @Import(name="endpointUrl")
    private @Nullable Output<String> endpointUrl;

    /**
     * @return Access point address.
     * 
     */
    public Optional<Output<String>> endpointUrl() {
        return Optional.ofNullable(this.endpointUrl);
    }

    /**
     * White list of access addresses.
     * 
     */
    @Import(name="ipWhiteLists")
    private @Nullable Output<List<String>> ipWhiteLists;

    /**
     * @return White list of access addresses.
     * 
     */
    public Optional<Output<List<String>>> ipWhiteLists() {
        return Optional.ofNullable(this.ipWhiteLists);
    }

    private RocketMQInstanceNetworkInfoEndpointArgs() {}

    private RocketMQInstanceNetworkInfoEndpointArgs(RocketMQInstanceNetworkInfoEndpointArgs $) {
        this.endpointType = $.endpointType;
        this.endpointUrl = $.endpointUrl;
        this.ipWhiteLists = $.ipWhiteLists;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RocketMQInstanceNetworkInfoEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RocketMQInstanceNetworkInfoEndpointArgs $;

        public Builder() {
            $ = new RocketMQInstanceNetworkInfoEndpointArgs();
        }

        public Builder(RocketMQInstanceNetworkInfoEndpointArgs defaults) {
            $ = new RocketMQInstanceNetworkInfoEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endpointType Access point type.
         * 
         * @return builder
         * 
         */
        public Builder endpointType(@Nullable Output<String> endpointType) {
            $.endpointType = endpointType;
            return this;
        }

        /**
         * @param endpointType Access point type.
         * 
         * @return builder
         * 
         */
        public Builder endpointType(String endpointType) {
            return endpointType(Output.of(endpointType));
        }

        /**
         * @param endpointUrl Access point address.
         * 
         * @return builder
         * 
         */
        public Builder endpointUrl(@Nullable Output<String> endpointUrl) {
            $.endpointUrl = endpointUrl;
            return this;
        }

        /**
         * @param endpointUrl Access point address.
         * 
         * @return builder
         * 
         */
        public Builder endpointUrl(String endpointUrl) {
            return endpointUrl(Output.of(endpointUrl));
        }

        /**
         * @param ipWhiteLists White list of access addresses.
         * 
         * @return builder
         * 
         */
        public Builder ipWhiteLists(@Nullable Output<List<String>> ipWhiteLists) {
            $.ipWhiteLists = ipWhiteLists;
            return this;
        }

        /**
         * @param ipWhiteLists White list of access addresses.
         * 
         * @return builder
         * 
         */
        public Builder ipWhiteLists(List<String> ipWhiteLists) {
            return ipWhiteLists(Output.of(ipWhiteLists));
        }

        /**
         * @param ipWhiteLists White list of access addresses.
         * 
         * @return builder
         * 
         */
        public Builder ipWhiteLists(String... ipWhiteLists) {
            return ipWhiteLists(List.of(ipWhiteLists));
        }

        public RocketMQInstanceNetworkInfoEndpointArgs build() {
            return $;
        }
    }

}
