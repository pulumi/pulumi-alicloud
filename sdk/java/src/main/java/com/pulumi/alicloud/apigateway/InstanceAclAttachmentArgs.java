// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.apigateway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class InstanceAclAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceAclAttachmentArgs Empty = new InstanceAclAttachmentArgs();

    /**
     * The ID of the ACL to attach.
     * 
     */
    @Import(name="aclId", required=true)
    private Output<String> aclId;

    /**
     * @return The ID of the ACL to attach.
     * 
     */
    public Output<String> aclId() {
        return this.aclId;
    }

    /**
     * The type of the ACL. Valid values: `white`, `black`.
     * 
     */
    @Import(name="aclType", required=true)
    private Output<String> aclType;

    /**
     * @return The type of the ACL. Valid values: `white`, `black`.
     * 
     */
    public Output<String> aclType() {
        return this.aclType;
    }

    /**
     * The ID of the API Gateway instance that the ACL will be attached to.
     * 
     */
    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    /**
     * @return The ID of the API Gateway instance that the ACL will be attached to.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }

    private InstanceAclAttachmentArgs() {}

    private InstanceAclAttachmentArgs(InstanceAclAttachmentArgs $) {
        this.aclId = $.aclId;
        this.aclType = $.aclType;
        this.instanceId = $.instanceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceAclAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceAclAttachmentArgs $;

        public Builder() {
            $ = new InstanceAclAttachmentArgs();
        }

        public Builder(InstanceAclAttachmentArgs defaults) {
            $ = new InstanceAclAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aclId The ID of the ACL to attach.
         * 
         * @return builder
         * 
         */
        public Builder aclId(Output<String> aclId) {
            $.aclId = aclId;
            return this;
        }

        /**
         * @param aclId The ID of the ACL to attach.
         * 
         * @return builder
         * 
         */
        public Builder aclId(String aclId) {
            return aclId(Output.of(aclId));
        }

        /**
         * @param aclType The type of the ACL. Valid values: `white`, `black`.
         * 
         * @return builder
         * 
         */
        public Builder aclType(Output<String> aclType) {
            $.aclType = aclType;
            return this;
        }

        /**
         * @param aclType The type of the ACL. Valid values: `white`, `black`.
         * 
         * @return builder
         * 
         */
        public Builder aclType(String aclType) {
            return aclType(Output.of(aclType));
        }

        /**
         * @param instanceId The ID of the API Gateway instance that the ACL will be attached to.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The ID of the API Gateway instance that the ACL will be attached to.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        public InstanceAclAttachmentArgs build() {
            if ($.aclId == null) {
                throw new MissingRequiredPropertyException("InstanceAclAttachmentArgs", "aclId");
            }
            if ($.aclType == null) {
                throw new MissingRequiredPropertyException("InstanceAclAttachmentArgs", "aclType");
            }
            if ($.instanceId == null) {
                throw new MissingRequiredPropertyException("InstanceAclAttachmentArgs", "instanceId");
            }
            return $;
        }
    }

}
