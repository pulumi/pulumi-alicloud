// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ddos;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.ddos.BasicThresholdArgs;
import com.pulumi.alicloud.ddos.inputs.BasicThresholdState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a Ddos Basic Threshold resource.
 * 
 * For information about Ddos Basic Threshold and how to use it, see [What is Threshold](https://www.alibabacloud.com/help/en/ddos-protection/latest/describe-ip-ddosthreshold).
 * 
 * &gt; **NOTE:** Available since v1.183.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.ecs.EcsFunctions;
 * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
 * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.ecs.SecurityGroup;
 * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
 * import com.pulumi.alicloud.ecs.Instance;
 * import com.pulumi.alicloud.ecs.InstanceArgs;
 * import com.pulumi.alicloud.ddos.BasicThreshold;
 * import com.pulumi.alicloud.ddos.BasicThresholdArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get(&#34;name&#34;).orElse(&#34;tf-example&#34;);
 *         final var defaultZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
 *             .availableDiskCategory(&#34;cloud_efficiency&#34;)
 *             .availableResourceCreation(&#34;VSwitch&#34;)
 *             .build());
 * 
 *         final var defaultInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
 *             .availabilityZone(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
 *             .instanceTypeFamily(&#34;ecs.sn1ne&#34;)
 *             .build());
 * 
 *         final var defaultImages = EcsFunctions.getImages(GetImagesArgs.builder()
 *             .nameRegex(&#34;^ubuntu_[0-9]+_[0-9]+_x64*&#34;)
 *             .mostRecent(true)
 *             .owners(&#34;system&#34;)
 *             .build());
 * 
 *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
 *             .vpcName(name)
 *             .cidrBlock(&#34;192.168.0.0/16&#34;)
 *             .build());
 * 
 *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
 *             .vswitchName(name)
 *             .vpcId(defaultNetwork.id())
 *             .cidrBlock(&#34;192.168.192.0/24&#34;)
 *             .zoneId(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.ids()[0]))
 *             .build());
 * 
 *         var defaultSecurityGroup = new SecurityGroup(&#34;defaultSecurityGroup&#34;, SecurityGroupArgs.builder()        
 *             .vpcId(defaultNetwork.id())
 *             .build());
 * 
 *         var defaultInstance = new Instance(&#34;defaultInstance&#34;, InstanceArgs.builder()        
 *             .imageId(defaultImages.applyValue(getImagesResult -&gt; getImagesResult.images()[0].id()))
 *             .instanceType(defaultInstanceTypes.applyValue(getInstanceTypesResult -&gt; getInstanceTypesResult.instanceTypes()[0].id()))
 *             .instanceName(name)
 *             .securityGroups(defaultSecurityGroup.stream().map(element -&gt; element.id()).collect(toList()))
 *             .internetChargeType(&#34;PayByTraffic&#34;)
 *             .internetMaxBandwidthOut(&#34;10&#34;)
 *             .availabilityZone(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
 *             .instanceChargeType(&#34;PostPaid&#34;)
 *             .systemDiskCategory(&#34;cloud_efficiency&#34;)
 *             .vswitchId(defaultSwitch.id())
 *             .build());
 * 
 *         var example = new BasicThreshold(&#34;example&#34;, BasicThresholdArgs.builder()        
 *             .instanceType(&#34;ecs&#34;)
 *             .instanceId(defaultInstance.id())
 *             .internetIp(defaultInstance.publicIp())
 *             .bps(100)
 *             .pps(60000)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Ddos Basic Threshold can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:ddos/basicThreshold:BasicThreshold example &lt;instance_type&gt;:&lt;instance_id&gt;:&lt;internet_ip&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:ddos/basicThreshold:BasicThreshold")
public class BasicThreshold extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the traffic scrubbing threshold. Unit: Mbit/s. The traffic scrubbing threshold cannot exceed the peak inbound or outbound Internet traffic, whichever is larger, of the asset.
     * 
     */
    @Export(name="bps", refs={Integer.class}, tree="[0]")
    private Output<Integer> bps;

    /**
     * @return Specifies the traffic scrubbing threshold. Unit: Mbit/s. The traffic scrubbing threshold cannot exceed the peak inbound or outbound Internet traffic, whichever is larger, of the asset.
     * 
     */
    public Output<Integer> bps() {
        return this.bps;
    }
    /**
     * The ID of the instance.
     * 
     */
    @Export(name="instanceId", refs={String.class}, tree="[0]")
    private Output<String> instanceId;

    /**
     * @return The ID of the instance.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }
    /**
     * The type of the Instance. Valid values: `ecs`,`slb`,`eip`.
     * 
     */
    @Export(name="instanceType", refs={String.class}, tree="[0]")
    private Output<String> instanceType;

    /**
     * @return The type of the Instance. Valid values: `ecs`,`slb`,`eip`.
     * 
     */
    public Output<String> instanceType() {
        return this.instanceType;
    }
    /**
     * The IP address of the public IP address asset.
     * 
     */
    @Export(name="internetIp", refs={String.class}, tree="[0]")
    private Output<String> internetIp;

    /**
     * @return The IP address of the public IP address asset.
     * 
     */
    public Output<String> internetIp() {
        return this.internetIp;
    }
    /**
     * Maximum flow cleaning threshold. Unit: Mbps.
     * 
     */
    @Export(name="maxBps", refs={Integer.class}, tree="[0]")
    private Output<Integer> maxBps;

    /**
     * @return Maximum flow cleaning threshold. Unit: Mbps.
     * 
     */
    public Output<Integer> maxBps() {
        return this.maxBps;
    }
    /**
     * The maximum number of messages cleaning threshold. Unit: pps.
     * 
     */
    @Export(name="maxPps", refs={Integer.class}, tree="[0]")
    private Output<Integer> maxPps;

    /**
     * @return The maximum number of messages cleaning threshold. Unit: pps.
     * 
     */
    public Output<Integer> maxPps() {
        return this.maxPps;
    }
    /**
     * The current message number cleaning threshold. Unit: pps.
     * 
     */
    @Export(name="pps", refs={Integer.class}, tree="[0]")
    private Output<Integer> pps;

    /**
     * @return The current message number cleaning threshold. Unit: pps.
     * 
     */
    public Output<Integer> pps() {
        return this.pps;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BasicThreshold(String name) {
        this(name, BasicThresholdArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BasicThreshold(String name, BasicThresholdArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BasicThreshold(String name, BasicThresholdArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ddos/basicThreshold:BasicThreshold", name, args == null ? BasicThresholdArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private BasicThreshold(String name, Output<String> id, @Nullable BasicThresholdState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ddos/basicThreshold:BasicThreshold", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BasicThreshold get(String name, Output<String> id, @Nullable BasicThresholdState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BasicThreshold(name, id, state, options);
    }
}
