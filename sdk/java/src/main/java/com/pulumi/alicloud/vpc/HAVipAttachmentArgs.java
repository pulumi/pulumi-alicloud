// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HAVipAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final HAVipAttachmentArgs Empty = new HAVipAttachmentArgs();

    /**
     * Specifies whether to forcefully disassociate the HAVIP from the ECS instance or ENI. Default value: `False`. Valid values: `True` and `False`.
     * 
     */
    @Import(name="force")
    private @Nullable Output<String> force;

    /**
     * @return Specifies whether to forcefully disassociate the HAVIP from the ECS instance or ENI. Default value: `False`. Valid values: `True` and `False`.
     * 
     */
    public Optional<Output<String>> force() {
        return Optional.ofNullable(this.force);
    }

    /**
     * The havip_id of the havip attachment, the field can&#39;t be changed.
     * 
     */
    @Import(name="havipId", required=true)
    private Output<String> havipId;

    /**
     * @return The havip_id of the havip attachment, the field can&#39;t be changed.
     * 
     */
    public Output<String> havipId() {
        return this.havipId;
    }

    /**
     * The instance_id of the havip attachment, the field can&#39;t be changed.
     * 
     */
    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    /**
     * @return The instance_id of the havip attachment, the field can&#39;t be changed.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }

    /**
     * The Type of instance to bind HaVip to. Valid values: `EcsInstance` and `NetworkInterface`. When the HaVip instance is bound to a resilient NIC, the resilient NIC instance must be filled in.
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    /**
     * @return The Type of instance to bind HaVip to. Valid values: `EcsInstance` and `NetworkInterface`. When the HaVip instance is bound to a resilient NIC, the resilient NIC instance must be filled in.
     * 
     */
    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    private HAVipAttachmentArgs() {}

    private HAVipAttachmentArgs(HAVipAttachmentArgs $) {
        this.force = $.force;
        this.havipId = $.havipId;
        this.instanceId = $.instanceId;
        this.instanceType = $.instanceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HAVipAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HAVipAttachmentArgs $;

        public Builder() {
            $ = new HAVipAttachmentArgs();
        }

        public Builder(HAVipAttachmentArgs defaults) {
            $ = new HAVipAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param force Specifies whether to forcefully disassociate the HAVIP from the ECS instance or ENI. Default value: `False`. Valid values: `True` and `False`.
         * 
         * @return builder
         * 
         */
        public Builder force(@Nullable Output<String> force) {
            $.force = force;
            return this;
        }

        /**
         * @param force Specifies whether to forcefully disassociate the HAVIP from the ECS instance or ENI. Default value: `False`. Valid values: `True` and `False`.
         * 
         * @return builder
         * 
         */
        public Builder force(String force) {
            return force(Output.of(force));
        }

        /**
         * @param havipId The havip_id of the havip attachment, the field can&#39;t be changed.
         * 
         * @return builder
         * 
         */
        public Builder havipId(Output<String> havipId) {
            $.havipId = havipId;
            return this;
        }

        /**
         * @param havipId The havip_id of the havip attachment, the field can&#39;t be changed.
         * 
         * @return builder
         * 
         */
        public Builder havipId(String havipId) {
            return havipId(Output.of(havipId));
        }

        /**
         * @param instanceId The instance_id of the havip attachment, the field can&#39;t be changed.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The instance_id of the havip attachment, the field can&#39;t be changed.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param instanceType The Type of instance to bind HaVip to. Valid values: `EcsInstance` and `NetworkInterface`. When the HaVip instance is bound to a resilient NIC, the resilient NIC instance must be filled in.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType The Type of instance to bind HaVip to. Valid values: `EcsInstance` and `NetworkInterface`. When the HaVip instance is bound to a resilient NIC, the resilient NIC instance must be filled in.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        public HAVipAttachmentArgs build() {
            $.havipId = Objects.requireNonNull($.havipId, "expected parameter 'havipId' to be non-null");
            $.instanceId = Objects.requireNonNull($.instanceId, "expected parameter 'instanceId' to be non-null");
            return $;
        }
    }

}
