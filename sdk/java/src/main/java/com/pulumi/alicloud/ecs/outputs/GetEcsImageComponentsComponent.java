// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetEcsImageComponentsComponent {
    /**
     * @return The type of the image component.
     * 
     */
    private String componentType;
    /**
     * @return The content of the image component.
     * 
     */
    private String content;
    /**
     * @return The time when the image component was created.
     * 
     */
    private String createTime;
    /**
     * @return The description of the image component.
     * 
     */
    private String description;
    /**
     * @return The ID of the Image Component.
     * 
     */
    private String id;
    /**
     * @return The ID of the image component.
     * 
     */
    private String imageComponentId;
    /**
     * @return The name of the image component.
     * 
     */
    private String imageComponentName;
    /**
     * @return The type of the image component.
     * 
     */
    private String owner;
    /**
     * @return The ID of the resource group.
     * 
     */
    private String resourceGroupId;
    /**
     * @return The operating system type supported by the image component.
     * 
     */
    private String systemType;
    /**
     * @return List of label key-value pairs.
     * 
     */
    private Map<String,Object> tags;

    private GetEcsImageComponentsComponent() {}
    /**
     * @return The type of the image component.
     * 
     */
    public String componentType() {
        return this.componentType;
    }
    /**
     * @return The content of the image component.
     * 
     */
    public String content() {
        return this.content;
    }
    /**
     * @return The time when the image component was created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The description of the image component.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The ID of the Image Component.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the image component.
     * 
     */
    public String imageComponentId() {
        return this.imageComponentId;
    }
    /**
     * @return The name of the image component.
     * 
     */
    public String imageComponentName() {
        return this.imageComponentName;
    }
    /**
     * @return The type of the image component.
     * 
     */
    public String owner() {
        return this.owner;
    }
    /**
     * @return The ID of the resource group.
     * 
     */
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * @return The operating system type supported by the image component.
     * 
     */
    public String systemType() {
        return this.systemType;
    }
    /**
     * @return List of label key-value pairs.
     * 
     */
    public Map<String,Object> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEcsImageComponentsComponent defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String componentType;
        private String content;
        private String createTime;
        private String description;
        private String id;
        private String imageComponentId;
        private String imageComponentName;
        private String owner;
        private String resourceGroupId;
        private String systemType;
        private Map<String,Object> tags;
        public Builder() {}
        public Builder(GetEcsImageComponentsComponent defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.componentType = defaults.componentType;
    	      this.content = defaults.content;
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.imageComponentId = defaults.imageComponentId;
    	      this.imageComponentName = defaults.imageComponentName;
    	      this.owner = defaults.owner;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.systemType = defaults.systemType;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder componentType(String componentType) {
            this.componentType = Objects.requireNonNull(componentType);
            return this;
        }
        @CustomType.Setter
        public Builder content(String content) {
            this.content = Objects.requireNonNull(content);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder imageComponentId(String imageComponentId) {
            this.imageComponentId = Objects.requireNonNull(imageComponentId);
            return this;
        }
        @CustomType.Setter
        public Builder imageComponentName(String imageComponentName) {
            this.imageComponentName = Objects.requireNonNull(imageComponentName);
            return this;
        }
        @CustomType.Setter
        public Builder owner(String owner) {
            this.owner = Objects.requireNonNull(owner);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupId(String resourceGroupId) {
            this.resourceGroupId = Objects.requireNonNull(resourceGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder systemType(String systemType) {
            this.systemType = Objects.requireNonNull(systemType);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,Object> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public GetEcsImageComponentsComponent build() {
            final var o = new GetEcsImageComponentsComponent();
            o.componentType = componentType;
            o.content = content;
            o.createTime = createTime;
            o.description = description;
            o.id = id;
            o.imageComponentId = imageComponentId;
            o.imageComponentName = imageComponentName;
            o.owner = owner;
            o.resourceGroupId = resourceGroupId;
            o.systemType = systemType;
            o.tags = tags;
            return o;
        }
    }
}
