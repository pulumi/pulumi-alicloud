// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.bastionhost.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetHostAccountsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetHostAccountsArgs Empty = new GetHostAccountsArgs();

    /**
     * Specify the new hosting account&#39;s name, support the longest 128 characters.
     * 
     */
    @Import(name="hostAccountName")
    private @Nullable Output<String> hostAccountName;

    /**
     * @return Specify the new hosting account&#39;s name, support the longest 128 characters.
     * 
     */
    public Optional<Output<String>> hostAccountName() {
        return Optional.ofNullable(this.hostAccountName);
    }

    /**
     * Specifies the database where you want to create your hosting account&#39;s host ID.
     * 
     */
    @Import(name="hostId", required=true)
    private Output<String> hostId;

    /**
     * @return Specifies the database where you want to create your hosting account&#39;s host ID.
     * 
     */
    public Output<String> hostId() {
        return this.hostId;
    }

    /**
     * A list of Host Account IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of Host Account IDs.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * Specifies the database where you want to create your hosting account&#39;s host bastion host ID of.
     * 
     */
    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    /**
     * @return Specifies the database where you want to create your hosting account&#39;s host bastion host ID of.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }

    /**
     * A regex string to filter results by Host Account name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    /**
     * @return A regex string to filter results by Host Account name.
     * 
     */
    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * Specify the new hosting account of the agreement name. Valid values: USING SSH and RDP.
     * 
     */
    @Import(name="protocolName")
    private @Nullable Output<String> protocolName;

    /**
     * @return Specify the new hosting account of the agreement name. Valid values: USING SSH and RDP.
     * 
     */
    public Optional<Output<String>> protocolName() {
        return Optional.ofNullable(this.protocolName);
    }

    private GetHostAccountsArgs() {}

    private GetHostAccountsArgs(GetHostAccountsArgs $) {
        this.hostAccountName = $.hostAccountName;
        this.hostId = $.hostId;
        this.ids = $.ids;
        this.instanceId = $.instanceId;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.protocolName = $.protocolName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetHostAccountsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetHostAccountsArgs $;

        public Builder() {
            $ = new GetHostAccountsArgs();
        }

        public Builder(GetHostAccountsArgs defaults) {
            $ = new GetHostAccountsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostAccountName Specify the new hosting account&#39;s name, support the longest 128 characters.
         * 
         * @return builder
         * 
         */
        public Builder hostAccountName(@Nullable Output<String> hostAccountName) {
            $.hostAccountName = hostAccountName;
            return this;
        }

        /**
         * @param hostAccountName Specify the new hosting account&#39;s name, support the longest 128 characters.
         * 
         * @return builder
         * 
         */
        public Builder hostAccountName(String hostAccountName) {
            return hostAccountName(Output.of(hostAccountName));
        }

        /**
         * @param hostId Specifies the database where you want to create your hosting account&#39;s host ID.
         * 
         * @return builder
         * 
         */
        public Builder hostId(Output<String> hostId) {
            $.hostId = hostId;
            return this;
        }

        /**
         * @param hostId Specifies the database where you want to create your hosting account&#39;s host ID.
         * 
         * @return builder
         * 
         */
        public Builder hostId(String hostId) {
            return hostId(Output.of(hostId));
        }

        /**
         * @param ids A list of Host Account IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Host Account IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of Host Account IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param instanceId Specifies the database where you want to create your hosting account&#39;s host bastion host ID of.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId Specifies the database where you want to create your hosting account&#39;s host bastion host ID of.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param nameRegex A regex string to filter results by Host Account name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param nameRegex A regex string to filter results by Host Account name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        /**
         * @param protocolName Specify the new hosting account of the agreement name. Valid values: USING SSH and RDP.
         * 
         * @return builder
         * 
         */
        public Builder protocolName(@Nullable Output<String> protocolName) {
            $.protocolName = protocolName;
            return this;
        }

        /**
         * @param protocolName Specify the new hosting account of the agreement name. Valid values: USING SSH and RDP.
         * 
         * @return builder
         * 
         */
        public Builder protocolName(String protocolName) {
            return protocolName(Output.of(protocolName));
        }

        public GetHostAccountsArgs build() {
            if ($.hostId == null) {
                throw new MissingRequiredPropertyException("GetHostAccountsArgs", "hostId");
            }
            if ($.instanceId == null) {
                throw new MissingRequiredPropertyException("GetHostAccountsArgs", "instanceId");
            }
            return $;
        }
    }

}
