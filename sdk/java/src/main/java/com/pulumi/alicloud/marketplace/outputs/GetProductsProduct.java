// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.marketplace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetProductsProduct {
    /**
     * @return The Category ID of products.
     * 
     */
    private Integer categoryId;
    /**
     * @return The code of the product.
     * 
     */
    private String code;
    /**
     * @return The delivery date of the product.
     * 
     */
    private String deliveryDate;
    /**
     * @return The delivery way of the product.
     * 
     */
    private String deliveryWay;
    /**
     * @return The image URL of the product.
     * 
     */
    private String imageUrl;
    /**
     * @return The name of the product.
     * 
     */
    private String name;
    /**
     * @return The operation system of the product.
     * 
     */
    private String operationSystem;
    /**
     * @return The rating information of the product.
     * 
     */
    private String score;
    /**
     * @return The short description of the product.
     * 
     */
    private String shortDescription;
    /**
     * @return The suggested price of the product.
     * 
     */
    private String suggestedPrice;
    /**
     * @return The supplier id of the product.
     * 
     */
    private Integer supplierId;
    /**
     * @return The supplier name of the product.
     * 
     */
    private String supplierName;
    /**
     * @return The tags of the product.
     * 
     */
    private String tags;
    /**
     * @return The detail page URL of the product.
     * 
     */
    private String targetUrl;
    /**
     * @return The warranty date of the product.
     * 
     */
    private String warrantyDate;

    private GetProductsProduct() {}
    /**
     * @return The Category ID of products.
     * 
     */
    public Integer categoryId() {
        return this.categoryId;
    }
    /**
     * @return The code of the product.
     * 
     */
    public String code() {
        return this.code;
    }
    /**
     * @return The delivery date of the product.
     * 
     */
    public String deliveryDate() {
        return this.deliveryDate;
    }
    /**
     * @return The delivery way of the product.
     * 
     */
    public String deliveryWay() {
        return this.deliveryWay;
    }
    /**
     * @return The image URL of the product.
     * 
     */
    public String imageUrl() {
        return this.imageUrl;
    }
    /**
     * @return The name of the product.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The operation system of the product.
     * 
     */
    public String operationSystem() {
        return this.operationSystem;
    }
    /**
     * @return The rating information of the product.
     * 
     */
    public String score() {
        return this.score;
    }
    /**
     * @return The short description of the product.
     * 
     */
    public String shortDescription() {
        return this.shortDescription;
    }
    /**
     * @return The suggested price of the product.
     * 
     */
    public String suggestedPrice() {
        return this.suggestedPrice;
    }
    /**
     * @return The supplier id of the product.
     * 
     */
    public Integer supplierId() {
        return this.supplierId;
    }
    /**
     * @return The supplier name of the product.
     * 
     */
    public String supplierName() {
        return this.supplierName;
    }
    /**
     * @return The tags of the product.
     * 
     */
    public String tags() {
        return this.tags;
    }
    /**
     * @return The detail page URL of the product.
     * 
     */
    public String targetUrl() {
        return this.targetUrl;
    }
    /**
     * @return The warranty date of the product.
     * 
     */
    public String warrantyDate() {
        return this.warrantyDate;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProductsProduct defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer categoryId;
        private String code;
        private String deliveryDate;
        private String deliveryWay;
        private String imageUrl;
        private String name;
        private String operationSystem;
        private String score;
        private String shortDescription;
        private String suggestedPrice;
        private Integer supplierId;
        private String supplierName;
        private String tags;
        private String targetUrl;
        private String warrantyDate;
        public Builder() {}
        public Builder(GetProductsProduct defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.categoryId = defaults.categoryId;
    	      this.code = defaults.code;
    	      this.deliveryDate = defaults.deliveryDate;
    	      this.deliveryWay = defaults.deliveryWay;
    	      this.imageUrl = defaults.imageUrl;
    	      this.name = defaults.name;
    	      this.operationSystem = defaults.operationSystem;
    	      this.score = defaults.score;
    	      this.shortDescription = defaults.shortDescription;
    	      this.suggestedPrice = defaults.suggestedPrice;
    	      this.supplierId = defaults.supplierId;
    	      this.supplierName = defaults.supplierName;
    	      this.tags = defaults.tags;
    	      this.targetUrl = defaults.targetUrl;
    	      this.warrantyDate = defaults.warrantyDate;
        }

        @CustomType.Setter
        public Builder categoryId(Integer categoryId) {
            if (categoryId == null) {
              throw new MissingRequiredPropertyException("GetProductsProduct", "categoryId");
            }
            this.categoryId = categoryId;
            return this;
        }
        @CustomType.Setter
        public Builder code(String code) {
            if (code == null) {
              throw new MissingRequiredPropertyException("GetProductsProduct", "code");
            }
            this.code = code;
            return this;
        }
        @CustomType.Setter
        public Builder deliveryDate(String deliveryDate) {
            if (deliveryDate == null) {
              throw new MissingRequiredPropertyException("GetProductsProduct", "deliveryDate");
            }
            this.deliveryDate = deliveryDate;
            return this;
        }
        @CustomType.Setter
        public Builder deliveryWay(String deliveryWay) {
            if (deliveryWay == null) {
              throw new MissingRequiredPropertyException("GetProductsProduct", "deliveryWay");
            }
            this.deliveryWay = deliveryWay;
            return this;
        }
        @CustomType.Setter
        public Builder imageUrl(String imageUrl) {
            if (imageUrl == null) {
              throw new MissingRequiredPropertyException("GetProductsProduct", "imageUrl");
            }
            this.imageUrl = imageUrl;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetProductsProduct", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder operationSystem(String operationSystem) {
            if (operationSystem == null) {
              throw new MissingRequiredPropertyException("GetProductsProduct", "operationSystem");
            }
            this.operationSystem = operationSystem;
            return this;
        }
        @CustomType.Setter
        public Builder score(String score) {
            if (score == null) {
              throw new MissingRequiredPropertyException("GetProductsProduct", "score");
            }
            this.score = score;
            return this;
        }
        @CustomType.Setter
        public Builder shortDescription(String shortDescription) {
            if (shortDescription == null) {
              throw new MissingRequiredPropertyException("GetProductsProduct", "shortDescription");
            }
            this.shortDescription = shortDescription;
            return this;
        }
        @CustomType.Setter
        public Builder suggestedPrice(String suggestedPrice) {
            if (suggestedPrice == null) {
              throw new MissingRequiredPropertyException("GetProductsProduct", "suggestedPrice");
            }
            this.suggestedPrice = suggestedPrice;
            return this;
        }
        @CustomType.Setter
        public Builder supplierId(Integer supplierId) {
            if (supplierId == null) {
              throw new MissingRequiredPropertyException("GetProductsProduct", "supplierId");
            }
            this.supplierId = supplierId;
            return this;
        }
        @CustomType.Setter
        public Builder supplierName(String supplierName) {
            if (supplierName == null) {
              throw new MissingRequiredPropertyException("GetProductsProduct", "supplierName");
            }
            this.supplierName = supplierName;
            return this;
        }
        @CustomType.Setter
        public Builder tags(String tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetProductsProduct", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder targetUrl(String targetUrl) {
            if (targetUrl == null) {
              throw new MissingRequiredPropertyException("GetProductsProduct", "targetUrl");
            }
            this.targetUrl = targetUrl;
            return this;
        }
        @CustomType.Setter
        public Builder warrantyDate(String warrantyDate) {
            if (warrantyDate == null) {
              throw new MissingRequiredPropertyException("GetProductsProduct", "warrantyDate");
            }
            this.warrantyDate = warrantyDate;
            return this;
        }
        public GetProductsProduct build() {
            final var _resultValue = new GetProductsProduct();
            _resultValue.categoryId = categoryId;
            _resultValue.code = code;
            _resultValue.deliveryDate = deliveryDate;
            _resultValue.deliveryWay = deliveryWay;
            _resultValue.imageUrl = imageUrl;
            _resultValue.name = name;
            _resultValue.operationSystem = operationSystem;
            _resultValue.score = score;
            _resultValue.shortDescription = shortDescription;
            _resultValue.suggestedPrice = suggestedPrice;
            _resultValue.supplierId = supplierId;
            _resultValue.supplierName = supplierName;
            _resultValue.tags = tags;
            _resultValue.targetUrl = targetUrl;
            _resultValue.warrantyDate = warrantyDate;
            return _resultValue;
        }
    }
}
