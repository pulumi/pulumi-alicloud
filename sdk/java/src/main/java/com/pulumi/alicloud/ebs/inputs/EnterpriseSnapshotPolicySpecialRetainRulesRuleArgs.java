// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ebs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnterpriseSnapshotPolicySpecialRetainRulesRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnterpriseSnapshotPolicySpecialRetainRulesRuleArgs Empty = new EnterpriseSnapshotPolicySpecialRetainRulesRuleArgs();

    /**
     * The cycle unit of the special reserved snapshot. If the value is set to WEEKS, the first snapshot of each week is reserved. The retention time is determined by TimeUnit and TimeInterval. The value range is:
     * - WEEKS
     * - MONTHS
     * - YEARS.
     * 
     */
    @Import(name="specialPeriodUnit")
    private @Nullable Output<String> specialPeriodUnit;

    /**
     * @return The cycle unit of the special reserved snapshot. If the value is set to WEEKS, the first snapshot of each week is reserved. The retention time is determined by TimeUnit and TimeInterval. The value range is:
     * - WEEKS
     * - MONTHS
     * - YEARS.
     * 
     */
    public Optional<Output<String>> specialPeriodUnit() {
        return Optional.ofNullable(this.specialPeriodUnit);
    }

    /**
     * Time unit.
     * 
     */
    @Import(name="timeInterval")
    private @Nullable Output<Integer> timeInterval;

    /**
     * @return Time unit.
     * 
     */
    public Optional<Output<Integer>> timeInterval() {
        return Optional.ofNullable(this.timeInterval);
    }

    /**
     * Time-based retention.
     * 
     */
    @Import(name="timeUnit")
    private @Nullable Output<String> timeUnit;

    /**
     * @return Time-based retention.
     * 
     */
    public Optional<Output<String>> timeUnit() {
        return Optional.ofNullable(this.timeUnit);
    }

    private EnterpriseSnapshotPolicySpecialRetainRulesRuleArgs() {}

    private EnterpriseSnapshotPolicySpecialRetainRulesRuleArgs(EnterpriseSnapshotPolicySpecialRetainRulesRuleArgs $) {
        this.specialPeriodUnit = $.specialPeriodUnit;
        this.timeInterval = $.timeInterval;
        this.timeUnit = $.timeUnit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnterpriseSnapshotPolicySpecialRetainRulesRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnterpriseSnapshotPolicySpecialRetainRulesRuleArgs $;

        public Builder() {
            $ = new EnterpriseSnapshotPolicySpecialRetainRulesRuleArgs();
        }

        public Builder(EnterpriseSnapshotPolicySpecialRetainRulesRuleArgs defaults) {
            $ = new EnterpriseSnapshotPolicySpecialRetainRulesRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param specialPeriodUnit The cycle unit of the special reserved snapshot. If the value is set to WEEKS, the first snapshot of each week is reserved. The retention time is determined by TimeUnit and TimeInterval. The value range is:
         * - WEEKS
         * - MONTHS
         * - YEARS.
         * 
         * @return builder
         * 
         */
        public Builder specialPeriodUnit(@Nullable Output<String> specialPeriodUnit) {
            $.specialPeriodUnit = specialPeriodUnit;
            return this;
        }

        /**
         * @param specialPeriodUnit The cycle unit of the special reserved snapshot. If the value is set to WEEKS, the first snapshot of each week is reserved. The retention time is determined by TimeUnit and TimeInterval. The value range is:
         * - WEEKS
         * - MONTHS
         * - YEARS.
         * 
         * @return builder
         * 
         */
        public Builder specialPeriodUnit(String specialPeriodUnit) {
            return specialPeriodUnit(Output.of(specialPeriodUnit));
        }

        /**
         * @param timeInterval Time unit.
         * 
         * @return builder
         * 
         */
        public Builder timeInterval(@Nullable Output<Integer> timeInterval) {
            $.timeInterval = timeInterval;
            return this;
        }

        /**
         * @param timeInterval Time unit.
         * 
         * @return builder
         * 
         */
        public Builder timeInterval(Integer timeInterval) {
            return timeInterval(Output.of(timeInterval));
        }

        /**
         * @param timeUnit Time-based retention.
         * 
         * @return builder
         * 
         */
        public Builder timeUnit(@Nullable Output<String> timeUnit) {
            $.timeUnit = timeUnit;
            return this;
        }

        /**
         * @param timeUnit Time-based retention.
         * 
         * @return builder
         * 
         */
        public Builder timeUnit(String timeUnit) {
            return timeUnit(Output.of(timeUnit));
        }

        public EnterpriseSnapshotPolicySpecialRetainRulesRuleArgs build() {
            return $;
        }
    }

}
