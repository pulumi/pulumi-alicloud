// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPublicIpAddressPoolsPool {
    /**
     * @return The time when the Vpc Public Ip Address Pool was created. The time is displayed in YYYY-MM-DDThh:mm:ssZ format.
     * 
     */
    private String createTime;
    /**
     * @return The description of the Vpc Public Ip Address Pool.
     * 
     */
    private String description;
    /**
     * @return The ID of the Vpc Public Ip Address Pool.
     * 
     */
    private String id;
    /**
     * @return Indicates whether the Vpc Public Ip Address Pool has idle IP addresses.
     * 
     */
    private Boolean ipAddressRemaining;
    /**
     * @return The Internet service provider.
     * 
     */
    private String isp;
    /**
     * @return The ID of the Vpc Public Ip Address Pool.
     * 
     */
    private String publicIpAddressPoolId;
    /**
     * @return The name of the Vpc Public Ip Address Pool.
     * 
     */
    private String publicIpAddressPoolName;
    /**
     * @return The region ID of the Vpc Public Ip Address Pool.
     * 
     */
    private String regionId;
    /**
     * @return The status of the Vpc Public Ip Address Pool.
     * 
     */
    private String status;
    /**
     * @return The total number of IP addresses in the Vpc Public Ip Address Pool.
     * 
     */
    private Integer totalIpNum;
    /**
     * @return The number of occupied IP addresses in the Vpc Public Ip Address Pool.
     * 
     */
    private Integer usedIpNum;
    /**
     * @return The user type.
     * 
     */
    private String userType;

    private GetPublicIpAddressPoolsPool() {}
    /**
     * @return The time when the Vpc Public Ip Address Pool was created. The time is displayed in YYYY-MM-DDThh:mm:ssZ format.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The description of the Vpc Public Ip Address Pool.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The ID of the Vpc Public Ip Address Pool.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates whether the Vpc Public Ip Address Pool has idle IP addresses.
     * 
     */
    public Boolean ipAddressRemaining() {
        return this.ipAddressRemaining;
    }
    /**
     * @return The Internet service provider.
     * 
     */
    public String isp() {
        return this.isp;
    }
    /**
     * @return The ID of the Vpc Public Ip Address Pool.
     * 
     */
    public String publicIpAddressPoolId() {
        return this.publicIpAddressPoolId;
    }
    /**
     * @return The name of the Vpc Public Ip Address Pool.
     * 
     */
    public String publicIpAddressPoolName() {
        return this.publicIpAddressPoolName;
    }
    /**
     * @return The region ID of the Vpc Public Ip Address Pool.
     * 
     */
    public String regionId() {
        return this.regionId;
    }
    /**
     * @return The status of the Vpc Public Ip Address Pool.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The total number of IP addresses in the Vpc Public Ip Address Pool.
     * 
     */
    public Integer totalIpNum() {
        return this.totalIpNum;
    }
    /**
     * @return The number of occupied IP addresses in the Vpc Public Ip Address Pool.
     * 
     */
    public Integer usedIpNum() {
        return this.usedIpNum;
    }
    /**
     * @return The user type.
     * 
     */
    public String userType() {
        return this.userType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPublicIpAddressPoolsPool defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String description;
        private String id;
        private Boolean ipAddressRemaining;
        private String isp;
        private String publicIpAddressPoolId;
        private String publicIpAddressPoolName;
        private String regionId;
        private String status;
        private Integer totalIpNum;
        private Integer usedIpNum;
        private String userType;
        public Builder() {}
        public Builder(GetPublicIpAddressPoolsPool defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.ipAddressRemaining = defaults.ipAddressRemaining;
    	      this.isp = defaults.isp;
    	      this.publicIpAddressPoolId = defaults.publicIpAddressPoolId;
    	      this.publicIpAddressPoolName = defaults.publicIpAddressPoolName;
    	      this.regionId = defaults.regionId;
    	      this.status = defaults.status;
    	      this.totalIpNum = defaults.totalIpNum;
    	      this.usedIpNum = defaults.usedIpNum;
    	      this.userType = defaults.userType;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ipAddressRemaining(Boolean ipAddressRemaining) {
            this.ipAddressRemaining = Objects.requireNonNull(ipAddressRemaining);
            return this;
        }
        @CustomType.Setter
        public Builder isp(String isp) {
            this.isp = Objects.requireNonNull(isp);
            return this;
        }
        @CustomType.Setter
        public Builder publicIpAddressPoolId(String publicIpAddressPoolId) {
            this.publicIpAddressPoolId = Objects.requireNonNull(publicIpAddressPoolId);
            return this;
        }
        @CustomType.Setter
        public Builder publicIpAddressPoolName(String publicIpAddressPoolName) {
            this.publicIpAddressPoolName = Objects.requireNonNull(publicIpAddressPoolName);
            return this;
        }
        @CustomType.Setter
        public Builder regionId(String regionId) {
            this.regionId = Objects.requireNonNull(regionId);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder totalIpNum(Integer totalIpNum) {
            this.totalIpNum = Objects.requireNonNull(totalIpNum);
            return this;
        }
        @CustomType.Setter
        public Builder usedIpNum(Integer usedIpNum) {
            this.usedIpNum = Objects.requireNonNull(usedIpNum);
            return this;
        }
        @CustomType.Setter
        public Builder userType(String userType) {
            this.userType = Objects.requireNonNull(userType);
            return this;
        }
        public GetPublicIpAddressPoolsPool build() {
            final var _resultValue = new GetPublicIpAddressPoolsPool();
            _resultValue.createTime = createTime;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.ipAddressRemaining = ipAddressRemaining;
            _resultValue.isp = isp;
            _resultValue.publicIpAddressPoolId = publicIpAddressPoolId;
            _resultValue.publicIpAddressPoolName = publicIpAddressPoolName;
            _resultValue.regionId = regionId;
            _resultValue.status = status;
            _resultValue.totalIpNum = totalIpNum;
            _resultValue.usedIpNum = usedIpNum;
            _resultValue.userType = userType;
            return _resultValue;
        }
    }
}
