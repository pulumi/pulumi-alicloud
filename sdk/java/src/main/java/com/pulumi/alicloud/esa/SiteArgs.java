// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SiteArgs extends com.pulumi.resources.ResourceArgs {

    public static final SiteArgs Empty = new SiteArgs();

    /**
     * The DNS setup. Valid values:
     * - `NS`
     * - `CNAME`
     * 
     */
    @Import(name="accessType")
    private @Nullable Output<String> accessType;

    /**
     * @return The DNS setup. Valid values:
     * - `NS`
     * - `CNAME`
     * 
     */
    public Optional<Output<String>> accessType() {
        return Optional.ofNullable(this.accessType);
    }

    /**
     * Add visitor geolocation header. Value range:
     * 
     */
    @Import(name="addClientGeolocationHeader")
    private @Nullable Output<String> addClientGeolocationHeader;

    /**
     * @return Add visitor geolocation header. Value range:
     * 
     */
    public Optional<Output<String>> addClientGeolocationHeader() {
        return Optional.ofNullable(this.addClientGeolocationHeader);
    }

    /**
     * Add the &#34;ali-real-client-ip&#34; header containing the real client IP. Value range:
     * 
     */
    @Import(name="addRealClientIpHeader")
    private @Nullable Output<String> addRealClientIpHeader;

    /**
     * @return Add the &#34;ali-real-client-ip&#34; header containing the real client IP. Value range:
     * 
     */
    public Optional<Output<String>> addRealClientIpHeader() {
        return Optional.ofNullable(this.addRealClientIpHeader);
    }

    /**
     * Multi-level cache architecture mode. Possible values:
     * 
     */
    @Import(name="cacheArchitectureMode")
    private @Nullable Output<String> cacheArchitectureMode;

    /**
     * @return Multi-level cache architecture mode. Possible values:
     * 
     */
    public Optional<Output<String>> cacheArchitectureMode() {
        return Optional.ofNullable(this.cacheArchitectureMode);
    }

    /**
     * Site cache hold switch. Value:
     * 
     */
    @Import(name="cacheReserveEnable")
    private @Nullable Output<String> cacheReserveEnable;

    /**
     * @return Site cache hold switch. Value:
     * 
     */
    public Optional<Output<String>> cacheReserveEnable() {
        return Optional.ofNullable(this.cacheReserveEnable);
    }

    /**
     * The ID of the cache instance.
     * 
     */
    @Import(name="cacheReserveInstanceId")
    private @Nullable Output<String> cacheReserveInstanceId;

    /**
     * @return The ID of the cache instance.
     * 
     */
    public Optional<Output<String>> cacheReserveInstanceId() {
        return Optional.ofNullable(this.cacheReserveInstanceId);
    }

    /**
     * Whether the custom CacheTag name ignores case. Value range:
     * 
     */
    @Import(name="caseInsensitive")
    private @Nullable Output<String> caseInsensitive;

    /**
     * @return Whether the custom CacheTag name ignores case. Value range:
     * 
     */
    public Optional<Output<String>> caseInsensitive() {
        return Optional.ofNullable(this.caseInsensitive);
    }

    /**
     * The service location. Valid values:
     * 
     */
    @Import(name="coverage")
    private @Nullable Output<String> coverage;

    /**
     * @return The service location. Valid values:
     * 
     */
    public Optional<Output<String>> coverage() {
        return Optional.ofNullable(this.coverage);
    }

    /**
     * Whether to enable mainland China network access optimization, the default is off. Value range:
     * 
     */
    @Import(name="crossBorderOptimization")
    private @Nullable Output<String> crossBorderOptimization;

    /**
     * @return Whether to enable mainland China network access optimization, the default is off. Value range:
     * 
     */
    public Optional<Output<String>> crossBorderOptimization() {
        return Optional.ofNullable(this.crossBorderOptimization);
    }

    /**
     * Development mode configuration function switch. Value range:
     * 
     */
    @Import(name="developmentMode")
    private @Nullable Output<String> developmentMode;

    /**
     * @return Development mode configuration function switch. Value range:
     * 
     */
    public Optional<Output<String>> developmentMode() {
        return Optional.ofNullable(this.developmentMode);
    }

    /**
     * CNAME flattening mode. Possible values:
     * 
     */
    @Import(name="flattenMode")
    private @Nullable Output<String> flattenMode;

    /**
     * @return CNAME flattening mode. Possible values:
     * 
     */
    public Optional<Output<String>> flattenMode() {
        return Optional.ofNullable(this.flattenMode);
    }

    /**
     * The ID of the associated package instance.
     * 
     */
    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    /**
     * @return The ID of the associated package instance.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }

    /**
     * Specifies whether to enable IPv6. Valid values:
     * 
     */
    @Import(name="ipv6Enable")
    private @Nullable Output<String> ipv6Enable;

    /**
     * @return Specifies whether to enable IPv6. Valid values:
     * 
     */
    public Optional<Output<String>> ipv6Enable() {
        return Optional.ofNullable(this.ipv6Enable);
    }

    /**
     * The region in which Ipv6 is enabled. The default value is x.x:
     * - &#39;x.x&#39;: Global.
     * - &#39;Cn.cn &#39;: Mainland China.
     * 
     */
    @Import(name="ipv6Region")
    private @Nullable Output<String> ipv6Region;

    /**
     * @return The region in which Ipv6 is enabled. The default value is x.x:
     * - &#39;x.x&#39;: Global.
     * - &#39;Cn.cn &#39;: Mainland China.
     * 
     */
    public Optional<Output<String>> ipv6Region() {
        return Optional.ofNullable(this.ipv6Region);
    }

    /**
     * The ID of the resource group
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * Release the search engine crawler configuration. Value:
     * 
     */
    @Import(name="seoBypass")
    private @Nullable Output<String> seoBypass;

    /**
     * @return Release the search engine crawler configuration. Value:
     * 
     */
    public Optional<Output<String>> seoBypass() {
        return Optional.ofNullable(this.seoBypass);
    }

    /**
     * The website name.
     * 
     */
    @Import(name="siteName", required=true)
    private Output<String> siteName;

    /**
     * @return The website name.
     * 
     */
    public Output<String> siteName() {
        return this.siteName;
    }

    /**
     * Specifies whether to enable site hold.After you enable site hold, other accounts cannot add your website domain or its subdomains to ESA. Valid values:
     * 
     */
    @Import(name="siteNameExclusive")
    private @Nullable Output<String> siteNameExclusive;

    /**
     * @return Specifies whether to enable site hold.After you enable site hold, other accounts cannot add your website domain or its subdomains to ESA. Valid values:
     * 
     */
    public Optional<Output<String>> siteNameExclusive() {
        return Optional.ofNullable(this.siteNameExclusive);
    }

    /**
     * The version number of the site. For sites with version management enabled, you can use this parameter to specify the site version for which the configuration will take effect, defaulting to version 0.
     * 
     */
    @Import(name="siteVersion")
    private @Nullable Output<Integer> siteVersion;

    /**
     * @return The version number of the site. For sites with version management enabled, you can use this parameter to specify the site version for which the configuration will take effect, defaulting to version 0.
     * 
     */
    public Optional<Output<Integer>> siteVersion() {
        return Optional.ofNullable(this.siteVersion);
    }

    /**
     * Custom CacheTag name.
     * 
     */
    @Import(name="tagName")
    private @Nullable Output<String> tagName;

    /**
     * @return Custom CacheTag name.
     * 
     */
    public Optional<Output<String>> tagName() {
        return Optional.ofNullable(this.tagName);
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Version management enabled. When true, version management is turned on for the table site.
     * 
     */
    @Import(name="versionManagement")
    private @Nullable Output<Boolean> versionManagement;

    /**
     * @return Version management enabled. When true, version management is turned on for the table site.
     * 
     */
    public Optional<Output<Boolean>> versionManagement() {
        return Optional.ofNullable(this.versionManagement);
    }

    private SiteArgs() {}

    private SiteArgs(SiteArgs $) {
        this.accessType = $.accessType;
        this.addClientGeolocationHeader = $.addClientGeolocationHeader;
        this.addRealClientIpHeader = $.addRealClientIpHeader;
        this.cacheArchitectureMode = $.cacheArchitectureMode;
        this.cacheReserveEnable = $.cacheReserveEnable;
        this.cacheReserveInstanceId = $.cacheReserveInstanceId;
        this.caseInsensitive = $.caseInsensitive;
        this.coverage = $.coverage;
        this.crossBorderOptimization = $.crossBorderOptimization;
        this.developmentMode = $.developmentMode;
        this.flattenMode = $.flattenMode;
        this.instanceId = $.instanceId;
        this.ipv6Enable = $.ipv6Enable;
        this.ipv6Region = $.ipv6Region;
        this.resourceGroupId = $.resourceGroupId;
        this.seoBypass = $.seoBypass;
        this.siteName = $.siteName;
        this.siteNameExclusive = $.siteNameExclusive;
        this.siteVersion = $.siteVersion;
        this.tagName = $.tagName;
        this.tags = $.tags;
        this.versionManagement = $.versionManagement;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SiteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SiteArgs $;

        public Builder() {
            $ = new SiteArgs();
        }

        public Builder(SiteArgs defaults) {
            $ = new SiteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessType The DNS setup. Valid values:
         * - `NS`
         * - `CNAME`
         * 
         * @return builder
         * 
         */
        public Builder accessType(@Nullable Output<String> accessType) {
            $.accessType = accessType;
            return this;
        }

        /**
         * @param accessType The DNS setup. Valid values:
         * - `NS`
         * - `CNAME`
         * 
         * @return builder
         * 
         */
        public Builder accessType(String accessType) {
            return accessType(Output.of(accessType));
        }

        /**
         * @param addClientGeolocationHeader Add visitor geolocation header. Value range:
         * 
         * @return builder
         * 
         */
        public Builder addClientGeolocationHeader(@Nullable Output<String> addClientGeolocationHeader) {
            $.addClientGeolocationHeader = addClientGeolocationHeader;
            return this;
        }

        /**
         * @param addClientGeolocationHeader Add visitor geolocation header. Value range:
         * 
         * @return builder
         * 
         */
        public Builder addClientGeolocationHeader(String addClientGeolocationHeader) {
            return addClientGeolocationHeader(Output.of(addClientGeolocationHeader));
        }

        /**
         * @param addRealClientIpHeader Add the &#34;ali-real-client-ip&#34; header containing the real client IP. Value range:
         * 
         * @return builder
         * 
         */
        public Builder addRealClientIpHeader(@Nullable Output<String> addRealClientIpHeader) {
            $.addRealClientIpHeader = addRealClientIpHeader;
            return this;
        }

        /**
         * @param addRealClientIpHeader Add the &#34;ali-real-client-ip&#34; header containing the real client IP. Value range:
         * 
         * @return builder
         * 
         */
        public Builder addRealClientIpHeader(String addRealClientIpHeader) {
            return addRealClientIpHeader(Output.of(addRealClientIpHeader));
        }

        /**
         * @param cacheArchitectureMode Multi-level cache architecture mode. Possible values:
         * 
         * @return builder
         * 
         */
        public Builder cacheArchitectureMode(@Nullable Output<String> cacheArchitectureMode) {
            $.cacheArchitectureMode = cacheArchitectureMode;
            return this;
        }

        /**
         * @param cacheArchitectureMode Multi-level cache architecture mode. Possible values:
         * 
         * @return builder
         * 
         */
        public Builder cacheArchitectureMode(String cacheArchitectureMode) {
            return cacheArchitectureMode(Output.of(cacheArchitectureMode));
        }

        /**
         * @param cacheReserveEnable Site cache hold switch. Value:
         * 
         * @return builder
         * 
         */
        public Builder cacheReserveEnable(@Nullable Output<String> cacheReserveEnable) {
            $.cacheReserveEnable = cacheReserveEnable;
            return this;
        }

        /**
         * @param cacheReserveEnable Site cache hold switch. Value:
         * 
         * @return builder
         * 
         */
        public Builder cacheReserveEnable(String cacheReserveEnable) {
            return cacheReserveEnable(Output.of(cacheReserveEnable));
        }

        /**
         * @param cacheReserveInstanceId The ID of the cache instance.
         * 
         * @return builder
         * 
         */
        public Builder cacheReserveInstanceId(@Nullable Output<String> cacheReserveInstanceId) {
            $.cacheReserveInstanceId = cacheReserveInstanceId;
            return this;
        }

        /**
         * @param cacheReserveInstanceId The ID of the cache instance.
         * 
         * @return builder
         * 
         */
        public Builder cacheReserveInstanceId(String cacheReserveInstanceId) {
            return cacheReserveInstanceId(Output.of(cacheReserveInstanceId));
        }

        /**
         * @param caseInsensitive Whether the custom CacheTag name ignores case. Value range:
         * 
         * @return builder
         * 
         */
        public Builder caseInsensitive(@Nullable Output<String> caseInsensitive) {
            $.caseInsensitive = caseInsensitive;
            return this;
        }

        /**
         * @param caseInsensitive Whether the custom CacheTag name ignores case. Value range:
         * 
         * @return builder
         * 
         */
        public Builder caseInsensitive(String caseInsensitive) {
            return caseInsensitive(Output.of(caseInsensitive));
        }

        /**
         * @param coverage The service location. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder coverage(@Nullable Output<String> coverage) {
            $.coverage = coverage;
            return this;
        }

        /**
         * @param coverage The service location. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder coverage(String coverage) {
            return coverage(Output.of(coverage));
        }

        /**
         * @param crossBorderOptimization Whether to enable mainland China network access optimization, the default is off. Value range:
         * 
         * @return builder
         * 
         */
        public Builder crossBorderOptimization(@Nullable Output<String> crossBorderOptimization) {
            $.crossBorderOptimization = crossBorderOptimization;
            return this;
        }

        /**
         * @param crossBorderOptimization Whether to enable mainland China network access optimization, the default is off. Value range:
         * 
         * @return builder
         * 
         */
        public Builder crossBorderOptimization(String crossBorderOptimization) {
            return crossBorderOptimization(Output.of(crossBorderOptimization));
        }

        /**
         * @param developmentMode Development mode configuration function switch. Value range:
         * 
         * @return builder
         * 
         */
        public Builder developmentMode(@Nullable Output<String> developmentMode) {
            $.developmentMode = developmentMode;
            return this;
        }

        /**
         * @param developmentMode Development mode configuration function switch. Value range:
         * 
         * @return builder
         * 
         */
        public Builder developmentMode(String developmentMode) {
            return developmentMode(Output.of(developmentMode));
        }

        /**
         * @param flattenMode CNAME flattening mode. Possible values:
         * 
         * @return builder
         * 
         */
        public Builder flattenMode(@Nullable Output<String> flattenMode) {
            $.flattenMode = flattenMode;
            return this;
        }

        /**
         * @param flattenMode CNAME flattening mode. Possible values:
         * 
         * @return builder
         * 
         */
        public Builder flattenMode(String flattenMode) {
            return flattenMode(Output.of(flattenMode));
        }

        /**
         * @param instanceId The ID of the associated package instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The ID of the associated package instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param ipv6Enable Specifies whether to enable IPv6. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder ipv6Enable(@Nullable Output<String> ipv6Enable) {
            $.ipv6Enable = ipv6Enable;
            return this;
        }

        /**
         * @param ipv6Enable Specifies whether to enable IPv6. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder ipv6Enable(String ipv6Enable) {
            return ipv6Enable(Output.of(ipv6Enable));
        }

        /**
         * @param ipv6Region The region in which Ipv6 is enabled. The default value is x.x:
         * - &#39;x.x&#39;: Global.
         * - &#39;Cn.cn &#39;: Mainland China.
         * 
         * @return builder
         * 
         */
        public Builder ipv6Region(@Nullable Output<String> ipv6Region) {
            $.ipv6Region = ipv6Region;
            return this;
        }

        /**
         * @param ipv6Region The region in which Ipv6 is enabled. The default value is x.x:
         * - &#39;x.x&#39;: Global.
         * - &#39;Cn.cn &#39;: Mainland China.
         * 
         * @return builder
         * 
         */
        public Builder ipv6Region(String ipv6Region) {
            return ipv6Region(Output.of(ipv6Region));
        }

        /**
         * @param resourceGroupId The ID of the resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param seoBypass Release the search engine crawler configuration. Value:
         * 
         * @return builder
         * 
         */
        public Builder seoBypass(@Nullable Output<String> seoBypass) {
            $.seoBypass = seoBypass;
            return this;
        }

        /**
         * @param seoBypass Release the search engine crawler configuration. Value:
         * 
         * @return builder
         * 
         */
        public Builder seoBypass(String seoBypass) {
            return seoBypass(Output.of(seoBypass));
        }

        /**
         * @param siteName The website name.
         * 
         * @return builder
         * 
         */
        public Builder siteName(Output<String> siteName) {
            $.siteName = siteName;
            return this;
        }

        /**
         * @param siteName The website name.
         * 
         * @return builder
         * 
         */
        public Builder siteName(String siteName) {
            return siteName(Output.of(siteName));
        }

        /**
         * @param siteNameExclusive Specifies whether to enable site hold.After you enable site hold, other accounts cannot add your website domain or its subdomains to ESA. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder siteNameExclusive(@Nullable Output<String> siteNameExclusive) {
            $.siteNameExclusive = siteNameExclusive;
            return this;
        }

        /**
         * @param siteNameExclusive Specifies whether to enable site hold.After you enable site hold, other accounts cannot add your website domain or its subdomains to ESA. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder siteNameExclusive(String siteNameExclusive) {
            return siteNameExclusive(Output.of(siteNameExclusive));
        }

        /**
         * @param siteVersion The version number of the site. For sites with version management enabled, you can use this parameter to specify the site version for which the configuration will take effect, defaulting to version 0.
         * 
         * @return builder
         * 
         */
        public Builder siteVersion(@Nullable Output<Integer> siteVersion) {
            $.siteVersion = siteVersion;
            return this;
        }

        /**
         * @param siteVersion The version number of the site. For sites with version management enabled, you can use this parameter to specify the site version for which the configuration will take effect, defaulting to version 0.
         * 
         * @return builder
         * 
         */
        public Builder siteVersion(Integer siteVersion) {
            return siteVersion(Output.of(siteVersion));
        }

        /**
         * @param tagName Custom CacheTag name.
         * 
         * @return builder
         * 
         */
        public Builder tagName(@Nullable Output<String> tagName) {
            $.tagName = tagName;
            return this;
        }

        /**
         * @param tagName Custom CacheTag name.
         * 
         * @return builder
         * 
         */
        public Builder tagName(String tagName) {
            return tagName(Output.of(tagName));
        }

        /**
         * @param tags Resource tags
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param versionManagement Version management enabled. When true, version management is turned on for the table site.
         * 
         * @return builder
         * 
         */
        public Builder versionManagement(@Nullable Output<Boolean> versionManagement) {
            $.versionManagement = versionManagement;
            return this;
        }

        /**
         * @param versionManagement Version management enabled. When true, version management is turned on for the table site.
         * 
         * @return builder
         * 
         */
        public Builder versionManagement(Boolean versionManagement) {
            return versionManagement(Output.of(versionManagement));
        }

        public SiteArgs build() {
            if ($.instanceId == null) {
                throw new MissingRequiredPropertyException("SiteArgs", "instanceId");
            }
            if ($.siteName == null) {
                throw new MissingRequiredPropertyException("SiteArgs", "siteName");
            }
            return $;
        }
    }

}
