// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.log.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertGroupConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertGroupConfigurationArgs Empty = new AlertGroupConfigurationArgs();

    @Import(name="fields")
    private @Nullable Output<List<String>> fields;

    public Optional<Output<List<String>>> fields() {
        return Optional.ofNullable(this.fields);
    }

    /**
     * including FixedRate,Hourly,Daily,Weekly,Cron.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return including FixedRate,Hourly,Daily,Weekly,Cron.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private AlertGroupConfigurationArgs() {}

    private AlertGroupConfigurationArgs(AlertGroupConfigurationArgs $) {
        this.fields = $.fields;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertGroupConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertGroupConfigurationArgs $;

        public Builder() {
            $ = new AlertGroupConfigurationArgs();
        }

        public Builder(AlertGroupConfigurationArgs defaults) {
            $ = new AlertGroupConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder fields(@Nullable Output<List<String>> fields) {
            $.fields = fields;
            return this;
        }

        public Builder fields(List<String> fields) {
            return fields(Output.of(fields));
        }

        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }

        /**
         * @param type including FixedRate,Hourly,Daily,Weekly,Cron.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type including FixedRate,Hourly,Daily,Weekly,Cron.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AlertGroupConfigurationArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("AlertGroupConfigurationArgs", "type");
            }
            return $;
        }
    }

}
