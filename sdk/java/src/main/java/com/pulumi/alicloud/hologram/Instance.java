// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.hologram;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.hologram.InstanceArgs;
import com.pulumi.alicloud.hologram.inputs.InstanceState;
import com.pulumi.alicloud.hologram.outputs.InstanceEndpoint;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * Hologram Instance can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:hologram/instance:Instance example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:hologram/instance:Instance")
public class Instance extends com.pulumi.resources.CustomResource {
    /**
     * Whether to pay automatically. The default value is true. Value:
     * - true: automatic payment
     * - false: only generate orders, not pay
     * &gt; **NOTE:**  The default value is true. If the balance of your payment method is insufficient, you can set the parameter AutoPay to false, and an unpaid order will be generated. You can log in to the user Center to pay by yourself.
     * 
     */
    @Export(name="autoPay", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autoPay;

    /**
     * @return Whether to pay automatically. The default value is true. Value:
     * - true: automatic payment
     * - false: only generate orders, not pay
     * &gt; **NOTE:**  The default value is true. If the balance of your payment method is insufficient, you can set the parameter AutoPay to false, and an unpaid order will be generated. You can log in to the user Center to pay by yourself.
     * 
     */
    public Output<Optional<Boolean>> autoPay() {
        return Codegen.optional(this.autoPay);
    }
    /**
     * Instance low-frequency storage space. Unit: GB.
     * &gt; **NOTE:**  PayAsYouGo (PostPaid) instances ignore this parameter.
     * 
     */
    @Export(name="coldStorageSize", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> coldStorageSize;

    /**
     * @return Instance low-frequency storage space. Unit: GB.
     * &gt; **NOTE:**  PayAsYouGo (PostPaid) instances ignore this parameter.
     * 
     */
    public Output<Optional<Integer>> coldStorageSize() {
        return Codegen.optional(this.coldStorageSize);
    }
    /**
     * Instance specifications. Value:
     * - 8 cores 32 GB (number of compute nodes: 1)
     * - 16 cores 64 GB (number of compute nodes: 1)
     * - 32 core 128 GB (number of compute nodes: 2)
     * - 64 core 256 GB (number of compute nodes: 4)
     * - 96 core 384 GB (number of computing nodes: 6)
     * - 128 core 512 GB (number of compute nodes: 8)
     * &gt; **NOTE:** Just fill in the audit number. Please submit a work order application for purchasing 1024 or above specifications. Shared instance types do not need to specify specifications. The specification of - 8 core 32GB (number of computing nodes: 1) is only for experience use and cannot be used for production.
     * 
     */
    @Export(name="cpu", refs={Integer.class}, tree="[0]")
    private Output<Integer> cpu;

    /**
     * @return Instance specifications. Value:
     * - 8 cores 32 GB (number of compute nodes: 1)
     * - 16 cores 64 GB (number of compute nodes: 1)
     * - 32 core 128 GB (number of compute nodes: 2)
     * - 64 core 256 GB (number of compute nodes: 4)
     * - 96 core 384 GB (number of computing nodes: 6)
     * - 128 core 512 GB (number of compute nodes: 8)
     * &gt; **NOTE:** Just fill in the audit number. Please submit a work order application for purchasing 1024 or above specifications. Shared instance types do not need to specify specifications. The specification of - 8 core 32GB (number of computing nodes: 1) is only for experience use and cannot be used for production.
     * 
     */
    public Output<Integer> cpu() {
        return this.cpu;
    }
    /**
     * The creation time of the resource.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The creation time of the resource.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The buying cycle. Buy for 2 months. If the Payment type is PayAsYouGo (PostPaid), you do not need to specify it.
     * 
     */
    @Export(name="duration", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> duration;

    /**
     * @return The buying cycle. Buy for 2 months. If the Payment type is PayAsYouGo (PostPaid), you do not need to specify it.
     * 
     */
    public Output<Optional<Integer>> duration() {
        return Codegen.optional(this.duration);
    }
    /**
     * List of domain names. See `endpoints` below.
     * 
     */
    @Export(name="endpoints", refs={List.class,InstanceEndpoint.class}, tree="[0,1]")
    private Output<List<InstanceEndpoint>> endpoints;

    /**
     * @return List of domain names. See `endpoints` below.
     * 
     */
    public Output<List<InstanceEndpoint>> endpoints() {
        return this.endpoints;
    }
    /**
     * Number of gateway nodes.
     * 
     */
    @Export(name="gatewayCount", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> gatewayCount;

    /**
     * @return Number of gateway nodes.
     * 
     */
    public Output<Optional<Integer>> gatewayCount() {
        return Codegen.optional(this.gatewayCount);
    }
    /**
     * Initialize the database and split multiple database names &#34;,&#34;.
     * 
     */
    @Export(name="initialDatabases", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> initialDatabases;

    /**
     * @return Initialize the database and split multiple database names &#34;,&#34;.
     * 
     */
    public Output<Optional<String>> initialDatabases() {
        return Codegen.optional(this.initialDatabases);
    }
    /**
     * The name of the resource.
     * 
     */
    @Export(name="instanceName", refs={String.class}, tree="[0]")
    private Output<String> instanceName;

    /**
     * @return The name of the resource.
     * 
     */
    public Output<String> instanceName() {
        return this.instanceName;
    }
    /**
     * The instance type. Value:
     * - Standard: Universal.
     * - Follower: Read-only slave instance.
     * - Warehouse: calculation group type.
     * - Shared: Shared.
     * 
     */
    @Export(name="instanceType", refs={String.class}, tree="[0]")
    private Output<String> instanceType;

    /**
     * @return The instance type. Value:
     * - Standard: Universal.
     * - Follower: Read-only slave instance.
     * - Warehouse: calculation group type.
     * - Shared: Shared.
     * 
     */
    public Output<String> instanceType() {
        return this.instanceType;
    }
    /**
     * The ID of the primary instance.
     * 
     */
    @Export(name="leaderInstanceId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> leaderInstanceId;

    /**
     * @return The ID of the primary instance.
     * 
     */
    public Output<Optional<String>> leaderInstanceId() {
        return Codegen.optional(this.leaderInstanceId);
    }
    /**
     * The payment type of the resource.
     * 
     */
    @Export(name="paymentType", refs={String.class}, tree="[0]")
    private Output<String> paymentType;

    /**
     * @return The payment type of the resource.
     * 
     */
    public Output<String> paymentType() {
        return this.paymentType;
    }
    /**
     * Billing cycle. Value:
     * - Month: monthly billing
     * - Hour: hourly billing
     * &gt; **NOTE:**  Subscription instances (PrePaid) only supports Month. PayAsYouGo instances (PostPaid) only supports Hour. The Shared type is automatically set to Hour without specifying it.
     * 
     */
    @Export(name="pricingCycle", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> pricingCycle;

    /**
     * @return Billing cycle. Value:
     * - Month: monthly billing
     * - Hour: hourly billing
     * &gt; **NOTE:**  Subscription instances (PrePaid) only supports Month. PayAsYouGo instances (PostPaid) only supports Hour. The Shared type is automatically set to Hour without specifying it.
     * 
     */
    public Output<Optional<String>> pricingCycle() {
        return Codegen.optional(this.pricingCycle);
    }
    /**
     * The ID of the resource group.
     * 
     */
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group.
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * Change matching type. Value:
     * - UPGRADE: UPGRADE
     * - DOWNGRADE: Downgrading
     * &gt; **NOTE:** The upgrade specification cannot be less than the original specification. A blank field indicates that the original specification remains unchanged. On this basis, at least one specification is larger than the original specification. The downgrading specification cannot be greater than the original specification. A blank field indicates that the original specification remains unchanged. On this basis, at least one specification is smaller than the original specification.
     * 
     */
    @Export(name="scaleType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> scaleType;

    /**
     * @return Change matching type. Value:
     * - UPGRADE: UPGRADE
     * - DOWNGRADE: Downgrading
     * &gt; **NOTE:** The upgrade specification cannot be less than the original specification. A blank field indicates that the original specification remains unchanged. On this basis, at least one specification is larger than the original specification. The downgrading specification cannot be greater than the original specification. A blank field indicates that the original specification remains unchanged. On this basis, at least one specification is smaller than the original specification.
     * 
     */
    public Output<Optional<String>> scaleType() {
        return Codegen.optional(this.scaleType);
    }
    /**
     * The status of the resource.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the resource.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The standard storage space of the instance. Unit: GB.
     * &gt; **NOTE:**  PayAsYouGo instances (PostPaid) ignore this parameter.
     * 
     */
    @Export(name="storageSize", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> storageSize;

    /**
     * @return The standard storage space of the instance. Unit: GB.
     * &gt; **NOTE:**  PayAsYouGo instances (PostPaid) ignore this parameter.
     * 
     */
    public Output<Optional<Integer>> storageSize() {
        return Codegen.optional(this.storageSize);
    }
    /**
     * Instance tag.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> tags;

    /**
     * @return Instance tag.
     * 
     */
    public Output<Optional<Map<String,Object>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The zone Id. Refer to &#34;Instructions for Use&#34;.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return The zone Id. Refer to &#34;Instructions for Use&#34;.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Instance(String name) {
        this(name, InstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Instance(String name, InstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Instance(String name, InstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:hologram/instance:Instance", name, args == null ? InstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Instance(String name, Output<String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:hologram/instance:Instance", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Instance get(String name, Output<String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Instance(name, id, state, options);
    }
}
