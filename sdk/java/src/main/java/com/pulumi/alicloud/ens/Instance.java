// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ens;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.ens.InstanceArgs;
import com.pulumi.alicloud.ens.inputs.InstanceState;
import com.pulumi.alicloud.ens.outputs.InstanceDataDisk;
import com.pulumi.alicloud.ens.outputs.InstanceSystemDisk;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * ENS Instance can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:ens/instance:Instance example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:ens/instance:Instance")
public class Instance extends com.pulumi.resources.CustomResource {
    /**
     * Whether to automatically renew, default to False, this parameter is invalid when paying by volume.
     * 
     */
    @Export(name="autoRenew", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autoRenew;

    /**
     * @return Whether to automatically renew, default to False, this parameter is invalid when paying by volume.
     * 
     */
    public Output<Optional<Boolean>> autoRenew() {
        return Codegen.optional(this.autoRenew);
    }
    /**
     * Operator, required for regional level scheduling, invalid for node level scheduling.
     * 
     */
    @Export(name="carrier", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> carrier;

    /**
     * @return Operator, required for regional level scheduling, invalid for node level scheduling.
     * 
     */
    public Output<Optional<String>> carrier() {
        return Codegen.optional(this.carrier);
    }
    /**
     * Data disk specifications. See `data_disk` below.
     * 
     */
    @Export(name="dataDisks", refs={List.class,InstanceDataDisk.class}, tree="[0,1]")
    private Output</* @Nullable */ List<InstanceDataDisk>> dataDisks;

    /**
     * @return Data disk specifications. See `data_disk` below.
     * 
     */
    public Output<Optional<List<InstanceDataDisk>>> dataDisks() {
        return Codegen.optional(this.dataDisks);
    }
    /**
     * Node id. When ScheduleAreaLevel is Region, EnsRegionId is required. When ScheduleAreaLevel is Big, Middle, Small, EnsRegionId is not required.
     * 
     */
    @Export(name="ensRegionId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ensRegionId;

    /**
     * @return Node id. When ScheduleAreaLevel is Region, EnsRegionId is required. When ScheduleAreaLevel is Big, Middle, Small, EnsRegionId is not required.
     * 
     */
    public Output<Optional<String>> ensRegionId() {
        return Codegen.optional(this.ensRegionId);
    }
    /**
     * Host Name.
     * 
     */
    @Export(name="hostName", refs={String.class}, tree="[0]")
    private Output<String> hostName;

    /**
     * @return Host Name.
     * 
     */
    public Output<String> hostName() {
        return this.hostName;
    }
    /**
     * The Image Id field. If InstanceType is arm_bmi, the image Id is a non-required parameter. If instanceType is another specification value, the image Id is a required parameter.
     * 
     */
    @Export(name="imageId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> imageId;

    /**
     * @return The Image Id field. If InstanceType is arm_bmi, the image Id is a non-required parameter. If instanceType is another specification value, the image Id is a required parameter.
     * 
     */
    public Output<Optional<String>> imageId() {
        return Codegen.optional(this.imageId);
    }
    /**
     * Instance billing strategy, instance: instance granularity (prepaid method currently does not support instance), user: by user dimension (not transferred or prepaid method supports user).
     * 
     */
    @Export(name="instanceChargeStrategy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> instanceChargeStrategy;

    /**
     * @return Instance billing strategy, instance: instance granularity (prepaid method currently does not support instance), user: by user dimension (not transferred or prepaid method supports user).
     * 
     */
    public Output<Optional<String>> instanceChargeStrategy() {
        return Codegen.optional(this.instanceChargeStrategy);
    }
    /**
     * The instance name. It must be 2 to 128 characters in length and must start with an uppercase or lowercase letter or a Chinese character. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), periods (.), or hyphens (-). The default value is the InstanceId of the instance.
     * 
     */
    @Export(name="instanceName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> instanceName;

    /**
     * @return The instance name. It must be 2 to 128 characters in length and must start with an uppercase or lowercase letter or a Chinese character. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), periods (.), or hyphens (-). The default value is the InstanceId of the instance.
     * 
     */
    public Output<Optional<String>> instanceName() {
        return Codegen.optional(this.instanceName);
    }
    /**
     * Instance specifications type.
     * 
     */
    @Export(name="instanceType", refs={String.class}, tree="[0]")
    private Output<String> instanceType;

    /**
     * @return Instance specifications type.
     * 
     */
    public Output<String> instanceType() {
        return this.instanceType;
    }
    /**
     * Instance Charge type.it could be BandwidthByDay, 95BandwidthByMonth, PayByBandwidth4thMonth.
     * 
     */
    @Export(name="internetChargeType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> internetChargeType;

    /**
     * @return Instance Charge type.it could be BandwidthByDay, 95BandwidthByMonth, PayByBandwidth4thMonth.
     * 
     */
    public Output<Optional<String>> internetChargeType() {
        return Codegen.optional(this.internetChargeType);
    }
    /**
     * The maximum public network bandwidth.
     * 
     */
    @Export(name="internetMaxBandwidthOut", refs={Integer.class}, tree="[0]")
    private Output<Integer> internetMaxBandwidthOut;

    /**
     * @return The maximum public network bandwidth.
     * 
     */
    public Output<Integer> internetMaxBandwidthOut() {
        return this.internetMaxBandwidthOut;
    }
    /**
     * Region code, required for regional level scheduling, invalid for node level scheduling.
     * 
     */
    @Export(name="netDistrictCode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> netDistrictCode;

    /**
     * @return Region code, required for regional level scheduling, invalid for node level scheduling.
     * 
     */
    public Output<Optional<String>> netDistrictCode() {
        return Codegen.optional(this.netDistrictCode);
    }
    /**
     * The password of the instance。It is 8 to 30 characters in length and must contain three types of characters: uppercase and lowercase letters, numbers, and special symbols. The following special symbols can be set: &#39;&#39;&#39;()&#39;~! @#$%^&amp; *-_+ =|{}[]:;&#39;,.? /&#39;&#39;&#39;.
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> password;

    /**
     * @return The password of the instance。It is 8 to 30 characters in length and must contain three types of characters: uppercase and lowercase letters, numbers, and special symbols. The following special symbols can be set: &#39;&#39;&#39;()&#39;~! @#$%^&amp; *-_+ =|{}[]:;&#39;,.? /&#39;&#39;&#39;.
     * 
     */
    public Output<Optional<String>> password() {
        return Codegen.optional(this.password);
    }
    /**
     * Whether to use image preset password prompt: Password and KeyPairNamePasswordInherit must be passed.
     * 
     */
    @Export(name="passwordInherit", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> passwordInherit;

    /**
     * @return Whether to use image preset password prompt: Password and KeyPairNamePasswordInherit must be passed.
     * 
     */
    public Output<Optional<Boolean>> passwordInherit() {
        return Codegen.optional(this.passwordInherit);
    }
    /**
     * Instance payment method, Subscription: prepaid, monthly package; PayAsYouGo: Pay as you go.
     * 
     */
    @Export(name="paymentType", refs={String.class}, tree="[0]")
    private Output<String> paymentType;

    /**
     * @return Instance payment method, Subscription: prepaid, monthly package; PayAsYouGo: Pay as you go.
     * 
     */
    public Output<String> paymentType() {
        return this.paymentType;
    }
    /**
     * The duration of purchasing resources. If PeriodUnit is not specified, it defaults to purchasing on a monthly basis. Currently, only days and months are supported. If PeriodUnit=Day, Period can only be 3. If PeriodUnit=Monthc, then Period can be 1-9,12.
     * 
     */
    @Export(name="period", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> period;

    /**
     * @return The duration of purchasing resources. If PeriodUnit is not specified, it defaults to purchasing on a monthly basis. Currently, only days and months are supported. If PeriodUnit=Day, Period can only be 3. If PeriodUnit=Monthc, then Period can be 1-9,12.
     * 
     */
    public Output<Optional<Integer>> period() {
        return Codegen.optional(this.period);
    }
    /**
     * The unit of time for purchasing resources. If PeriodUnit is not specified, it defaults to purchasing by Month. Currently, only days and months are supported. If PeriodUnit=Day, Period can only be 3. If PeriodUnit=Month, then Period can be 1-9,12.
     * 
     */
    @Export(name="periodUnit", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> periodUnit;

    /**
     * @return The unit of time for purchasing resources. If PeriodUnit is not specified, it defaults to purchasing by Month. Currently, only days and months are supported. If PeriodUnit=Day, Period can only be 3. If PeriodUnit=Month, then Period can be 1-9,12.
     * 
     */
    public Output<Optional<String>> periodUnit() {
        return Codegen.optional(this.periodUnit);
    }
    /**
     * Whether to allocate public IP. Value：true (default): can be assigned，false: cannot be assigned.
     * 
     */
    @Export(name="publicIpIdentification", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> publicIpIdentification;

    /**
     * @return Whether to allocate public IP. Value：true (default): can be assigned，false: cannot be assigned.
     * 
     */
    public Output<Optional<Boolean>> publicIpIdentification() {
        return Codegen.optional(this.publicIpIdentification);
    }
    /**
     * Number of instances.
     * 
     */
    @Export(name="quantity", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> quantity;

    /**
     * @return Number of instances.
     * 
     */
    public Output<Optional<String>> quantity() {
        return Codegen.optional(this.quantity);
    }
    /**
     * Scheduling level, which is used to perform node level or regional scheduling.
     * 
     */
    @Export(name="scheduleAreaLevel", refs={String.class}, tree="[0]")
    private Output<String> scheduleAreaLevel;

    /**
     * @return Scheduling level, which is used to perform node level or regional scheduling.
     * 
     */
    public Output<String> scheduleAreaLevel() {
        return this.scheduleAreaLevel;
    }
    /**
     * Dispatch price strategy. If left blank, it defaults to prioritizing low prices. Values: PriceLowPriority (priority high price), PriceLowPriority (priority low price).
     * 
     */
    @Export(name="schedulingPriceStrategy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> schedulingPriceStrategy;

    /**
     * @return Dispatch price strategy. If left blank, it defaults to prioritizing low prices. Values: PriceLowPriority (priority high price), PriceLowPriority (priority low price).
     * 
     */
    public Output<Optional<String>> schedulingPriceStrategy() {
        return Codegen.optional(this.schedulingPriceStrategy);
    }
    /**
     * When scheduling at the node level, it is Concentrate. When scheduling at the regional level, it is selected according to customer needs. Concentrate: Centralized; Disperse: Disperse.
     * 
     */
    @Export(name="schedulingStrategy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> schedulingStrategy;

    /**
     * @return When scheduling at the node level, it is Concentrate. When scheduling at the regional level, it is selected according to customer needs. Concentrate: Centralized; Disperse: Disperse.
     * 
     */
    public Output<Optional<String>> schedulingStrategy() {
        return Codegen.optional(this.schedulingStrategy);
    }
    /**
     * the status of the resource.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return the status of the resource.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The field representing the system disk specification. SystemDisk is a non-required parameter when InstanceType is x86_pm,x86_bmi,x86_bm,pc_bmi, or arm_bmi. SystemDisk is a required parameter when instanceType is other specification families. See `system_disk` below.
     * 
     */
    @Export(name="systemDisk", refs={InstanceSystemDisk.class}, tree="[0]")
    private Output</* @Nullable */ InstanceSystemDisk> systemDisk;

    /**
     * @return The field representing the system disk specification. SystemDisk is a non-required parameter when InstanceType is x86_pm,x86_bmi,x86_bm,pc_bmi, or arm_bmi. SystemDisk is a required parameter when instanceType is other specification families. See `system_disk` below.
     * 
     */
    public Output<Optional<InstanceSystemDisk>> systemDisk() {
        return Codegen.optional(this.systemDisk);
    }
    /**
     * Specifies whether to automatically append sequential suffixes to the hostnames specified by the HostName parameter and instance names specified by the InstanceName parameter when you create multiple instances at a time. The sequential suffix ranges from 001 to 999. Valid values:  true false Default value: false.
     * 
     */
    @Export(name="uniqueSuffix", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> uniqueSuffix;

    /**
     * @return Specifies whether to automatically append sequential suffixes to the hostnames specified by the HostName parameter and instance names specified by the InstanceName parameter when you create multiple instances at a time. The sequential suffix ranges from 001 to 999. Valid values:  true false Default value: false.
     * 
     */
    public Output<Optional<Boolean>> uniqueSuffix() {
        return Codegen.optional(this.uniqueSuffix);
    }
    /**
     * User defined data, with a maximum support of 16KB. You can input UserData information. UserData encoded in Base64 format.
     * 
     */
    @Export(name="userData", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userData;

    /**
     * @return User defined data, with a maximum support of 16KB. You can input UserData information. UserData encoded in Base64 format.
     * 
     */
    public Output<Optional<String>> userData() {
        return Codegen.optional(this.userData);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Instance(String name) {
        this(name, InstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Instance(String name, InstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Instance(String name, InstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ens/instance:Instance", name, args == null ? InstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Instance(String name, Output<String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ens/instance:Instance", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "password"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Instance get(String name, Output<String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Instance(name, id, state, options);
    }
}
