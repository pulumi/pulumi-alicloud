// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rocketmq.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceState extends com.pulumi.resources.ResourceArgs {

    public static final InstanceState Empty = new InstanceState();

    /**
     * Two instances on a single account in the same region cannot have the same name. The length must be 3 to 64 characters. Chinese characters, English letters digits and hyphen are allowed.
     * 
     */
    @Import(name="instanceName")
    private @Nullable Output<String> instanceName;

    /**
     * @return Two instances on a single account in the same region cannot have the same name. The length must be 3 to 64 characters. Chinese characters, English letters digits and hyphen are allowed.
     * 
     */
    public Optional<Output<String>> instanceName() {
        return Optional.ofNullable(this.instanceName);
    }

    /**
     * The status of instance. 1 represents the platinum edition instance is in deployment. 2 represents the postpaid edition instance are overdue. 5 represents the postpaid or platinum edition instance is in service. 7 represents the platinum version instance is in upgrade and the service is available.
     * 
     */
    @Import(name="instanceStatus")
    private @Nullable Output<Integer> instanceStatus;

    /**
     * @return The status of instance. 1 represents the platinum edition instance is in deployment. 2 represents the postpaid edition instance are overdue. 5 represents the postpaid or platinum edition instance is in service. 7 represents the platinum version instance is in upgrade and the service is available.
     * 
     */
    public Optional<Output<Integer>> instanceStatus() {
        return Optional.ofNullable(this.instanceStatus);
    }

    /**
     * The edition of instance. 1 represents the postPaid edition, and 2 represents the platinum edition.
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<Integer> instanceType;

    /**
     * @return The edition of instance. 1 represents the postPaid edition, and 2 represents the platinum edition.
     * 
     */
    public Optional<Output<Integer>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * Replaced by `instanceName` after version 1.97.0.
     * 
     * @deprecated
     * Field &#39;name&#39; has been deprecated from version 1.97.0. Use &#39;instance_name&#39; instead.
     * 
     */
    @Deprecated /* Field 'name' has been deprecated from version 1.97.0. Use 'instance_name' instead. */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Replaced by `instanceName` after version 1.97.0.
     * 
     * @deprecated
     * Field &#39;name&#39; has been deprecated from version 1.97.0. Use &#39;instance_name&#39; instead.
     * 
     */
    @Deprecated /* Field 'name' has been deprecated from version 1.97.0. Use 'instance_name' instead. */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Platinum edition instance expiration time.
     * 
     */
    @Import(name="releaseTime")
    private @Nullable Output<String> releaseTime;

    /**
     * @return Platinum edition instance expiration time.
     * 
     */
    public Optional<Output<String>> releaseTime() {
        return Optional.ofNullable(this.releaseTime);
    }

    /**
     * This attribute is a concise description of instance. The length cannot exceed 128.
     * 
     */
    @Import(name="remark")
    private @Nullable Output<String> remark;

    /**
     * @return This attribute is a concise description of instance. The length cannot exceed 128.
     * 
     */
    public Optional<Output<String>> remark() {
        return Optional.ofNullable(this.remark);
    }

    /**
     * The status of instance. 1 represents the platinum edition instance is in deployment. 2 represents the postpaid edition instance are overdue. 5 represents the postpaid or platinum edition instance is in service. 7 represents the platinum version instance is in upgrade and the service is available.
     * 
     */
    @Import(name="status")
    private @Nullable Output<Integer> status;

    /**
     * @return The status of instance. 1 represents the platinum edition instance is in deployment. 2 represents the postpaid edition instance are overdue. 5 represents the postpaid or platinum edition instance is in service. 7 represents the platinum version instance is in upgrade and the service is available.
     * 
     */
    public Optional<Output<Integer>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * A mapping of tags to assign to the resource.
     * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private InstanceState() {}

    private InstanceState(InstanceState $) {
        this.instanceName = $.instanceName;
        this.instanceStatus = $.instanceStatus;
        this.instanceType = $.instanceType;
        this.name = $.name;
        this.releaseTime = $.releaseTime;
        this.remark = $.remark;
        this.status = $.status;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceState $;

        public Builder() {
            $ = new InstanceState();
        }

        public Builder(InstanceState defaults) {
            $ = new InstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param instanceName Two instances on a single account in the same region cannot have the same name. The length must be 3 to 64 characters. Chinese characters, English letters digits and hyphen are allowed.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(@Nullable Output<String> instanceName) {
            $.instanceName = instanceName;
            return this;
        }

        /**
         * @param instanceName Two instances on a single account in the same region cannot have the same name. The length must be 3 to 64 characters. Chinese characters, English letters digits and hyphen are allowed.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(String instanceName) {
            return instanceName(Output.of(instanceName));
        }

        /**
         * @param instanceStatus The status of instance. 1 represents the platinum edition instance is in deployment. 2 represents the postpaid edition instance are overdue. 5 represents the postpaid or platinum edition instance is in service. 7 represents the platinum version instance is in upgrade and the service is available.
         * 
         * @return builder
         * 
         */
        public Builder instanceStatus(@Nullable Output<Integer> instanceStatus) {
            $.instanceStatus = instanceStatus;
            return this;
        }

        /**
         * @param instanceStatus The status of instance. 1 represents the platinum edition instance is in deployment. 2 represents the postpaid edition instance are overdue. 5 represents the postpaid or platinum edition instance is in service. 7 represents the platinum version instance is in upgrade and the service is available.
         * 
         * @return builder
         * 
         */
        public Builder instanceStatus(Integer instanceStatus) {
            return instanceStatus(Output.of(instanceStatus));
        }

        /**
         * @param instanceType The edition of instance. 1 represents the postPaid edition, and 2 represents the platinum edition.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<Integer> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType The edition of instance. 1 represents the postPaid edition, and 2 represents the platinum edition.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(Integer instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param name Replaced by `instanceName` after version 1.97.0.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;name&#39; has been deprecated from version 1.97.0. Use &#39;instance_name&#39; instead.
         * 
         */
        @Deprecated /* Field 'name' has been deprecated from version 1.97.0. Use 'instance_name' instead. */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Replaced by `instanceName` after version 1.97.0.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;name&#39; has been deprecated from version 1.97.0. Use &#39;instance_name&#39; instead.
         * 
         */
        @Deprecated /* Field 'name' has been deprecated from version 1.97.0. Use 'instance_name' instead. */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param releaseTime Platinum edition instance expiration time.
         * 
         * @return builder
         * 
         */
        public Builder releaseTime(@Nullable Output<String> releaseTime) {
            $.releaseTime = releaseTime;
            return this;
        }

        /**
         * @param releaseTime Platinum edition instance expiration time.
         * 
         * @return builder
         * 
         */
        public Builder releaseTime(String releaseTime) {
            return releaseTime(Output.of(releaseTime));
        }

        /**
         * @param remark This attribute is a concise description of instance. The length cannot exceed 128.
         * 
         * @return builder
         * 
         */
        public Builder remark(@Nullable Output<String> remark) {
            $.remark = remark;
            return this;
        }

        /**
         * @param remark This attribute is a concise description of instance. The length cannot exceed 128.
         * 
         * @return builder
         * 
         */
        public Builder remark(String remark) {
            return remark(Output.of(remark));
        }

        /**
         * @param status The status of instance. 1 represents the platinum edition instance is in deployment. 2 represents the postpaid edition instance are overdue. 5 represents the postpaid or platinum edition instance is in service. 7 represents the platinum version instance is in upgrade and the service is available.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<Integer> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of instance. 1 represents the platinum edition instance is in deployment. 2 represents the postpaid edition instance are overdue. 5 represents the postpaid or platinum edition instance is in service. 7 represents the platinum version instance is in upgrade and the service is available.
         * 
         * @return builder
         * 
         */
        public Builder status(Integer status) {
            return status(Output.of(status));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
         * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
         * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public InstanceState build() {
            return $;
        }
    }

}
