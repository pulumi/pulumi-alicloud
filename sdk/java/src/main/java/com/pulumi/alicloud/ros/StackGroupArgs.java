// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ros;

import com.pulumi.alicloud.ros.inputs.StackGroupAutoDeploymentArgs;
import com.pulumi.alicloud.ros.inputs.StackGroupParameterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StackGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final StackGroupArgs Empty = new StackGroupArgs();

    /**
     * The name of the RAM role that you specify for the administrator account in ROS when you create the self-managed stack group. If you do not specify this parameter, the default value AliyunROSStackGroupAdministrationRole is used. You can use the administrator role in ROS to assume the execution role AliyunROSStackGroupExecutionRole to perform operations on the stacks that correspond to stack instances in the stack group.
     * 
     */
    @Import(name="administrationRoleName")
    private @Nullable Output<String> administrationRoleName;

    /**
     * @return The name of the RAM role that you specify for the administrator account in ROS when you create the self-managed stack group. If you do not specify this parameter, the default value AliyunROSStackGroupAdministrationRole is used. You can use the administrator role in ROS to assume the execution role AliyunROSStackGroupExecutionRole to perform operations on the stacks that correspond to stack instances in the stack group.
     * 
     */
    public Optional<Output<String>> administrationRoleName() {
        return Optional.ofNullable(this.administrationRoleName);
    }

    /**
     * Automatic deployment setting information. Description
     * This parameter is required only if the PermissionModel is SERVICE_MANAGED. See `autoDeployment` below.
     * 
     */
    @Import(name="autoDeployment")
    private @Nullable Output<StackGroupAutoDeploymentArgs> autoDeployment;

    /**
     * @return Automatic deployment setting information. Description
     * This parameter is required only if the PermissionModel is SERVICE_MANAGED. See `autoDeployment` below.
     * 
     */
    public Optional<Output<StackGroupAutoDeploymentArgs>> autoDeployment() {
        return Optional.ofNullable(this.autoDeployment);
    }

    /**
     * The list of resource stack group options. The maximum length is 1.
     * 
     */
    @Import(name="capabilities")
    private @Nullable Output<List<String>> capabilities;

    /**
     * @return The list of resource stack group options. The maximum length is 1.
     * 
     */
    public Optional<Output<List<String>>> capabilities() {
        return Optional.ofNullable(this.capabilities);
    }

    /**
     * The description of the stack group.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the stack group.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the RAM role that you specify for the execution account when you create the self-managed stack group. You can use the administrator role AliyunROSStackGroupAdministrationRole to assume the execution role. If you do not specify this parameter, the default value AliyunROSStackGroupExecutionRole is used. You can use this role in ROS to perform operations on the stacks that correspond to stack instances in the stack group.
     * 
     */
    @Import(name="executionRoleName")
    private @Nullable Output<String> executionRoleName;

    /**
     * @return The name of the RAM role that you specify for the execution account when you create the self-managed stack group. You can use the administrator role AliyunROSStackGroupAdministrationRole to assume the execution role. If you do not specify this parameter, the default value AliyunROSStackGroupExecutionRole is used. You can use this role in ROS to perform operations on the stacks that correspond to stack instances in the stack group.
     * 
     */
    public Optional<Output<String>> executionRoleName() {
        return Optional.ofNullable(this.executionRoleName);
    }

    /**
     * Parameters See `parameters` below.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<List<StackGroupParameterArgs>> parameters;

    /**
     * @return Parameters See `parameters` below.
     * 
     */
    public Optional<Output<List<StackGroupParameterArgs>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * The permission model.
     * 
     */
    @Import(name="permissionModel")
    private @Nullable Output<String> permissionModel;

    /**
     * @return The permission model.
     * 
     */
    public Optional<Output<String>> permissionModel() {
        return Optional.ofNullable(this.permissionModel);
    }

    /**
     * The ID of the resource group.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * StackGroupName
     * 
     */
    @Import(name="stackGroupName", required=true)
    private Output<String> stackGroupName;

    /**
     * @return StackGroupName
     * 
     */
    public Output<String> stackGroupName() {
        return this.stackGroupName;
    }

    /**
     * The label of the resource stack group.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The label of the resource stack group.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The template body.
     * 
     */
    @Import(name="templateBody")
    private @Nullable Output<String> templateBody;

    /**
     * @return The template body.
     * 
     */
    public Optional<Output<String>> templateBody() {
        return Optional.ofNullable(this.templateBody);
    }

    /**
     * The ID of the template.
     * 
     */
    @Import(name="templateId")
    private @Nullable Output<String> templateId;

    /**
     * @return The ID of the template.
     * 
     */
    public Optional<Output<String>> templateId() {
        return Optional.ofNullable(this.templateId);
    }

    /**
     * The location of the file that contains the template body. The URL must point to the template (1 to 524,288 bytes) located in the HTTP Web server (HTTP or HTTPS) or Alibaba Cloud OSS bucket. The URL of the OSS bucket, such as oss:// ros/template/demo or oss:// ros/template/demo? RegionId = cn-hangzhou. If the OSS region is not specified, the RegionId of the interface is the same by default.
     * 
     * &gt; **NOTE:** You must and can specify only one of the parameters of TemplateBody, TemplateURL, or TemplateId.
     * 
     */
    @Import(name="templateUrl")
    private @Nullable Output<String> templateUrl;

    /**
     * @return The location of the file that contains the template body. The URL must point to the template (1 to 524,288 bytes) located in the HTTP Web server (HTTP or HTTPS) or Alibaba Cloud OSS bucket. The URL of the OSS bucket, such as oss:// ros/template/demo or oss:// ros/template/demo? RegionId = cn-hangzhou. If the OSS region is not specified, the RegionId of the interface is the same by default.
     * 
     * &gt; **NOTE:** You must and can specify only one of the parameters of TemplateBody, TemplateURL, or TemplateId.
     * 
     */
    public Optional<Output<String>> templateUrl() {
        return Optional.ofNullable(this.templateUrl);
    }

    /**
     * The version of the template.
     * 
     */
    @Import(name="templateVersion")
    private @Nullable Output<String> templateVersion;

    /**
     * @return The version of the template.
     * 
     */
    public Optional<Output<String>> templateVersion() {
        return Optional.ofNullable(this.templateVersion);
    }

    private StackGroupArgs() {}

    private StackGroupArgs(StackGroupArgs $) {
        this.administrationRoleName = $.administrationRoleName;
        this.autoDeployment = $.autoDeployment;
        this.capabilities = $.capabilities;
        this.description = $.description;
        this.executionRoleName = $.executionRoleName;
        this.parameters = $.parameters;
        this.permissionModel = $.permissionModel;
        this.resourceGroupId = $.resourceGroupId;
        this.stackGroupName = $.stackGroupName;
        this.tags = $.tags;
        this.templateBody = $.templateBody;
        this.templateId = $.templateId;
        this.templateUrl = $.templateUrl;
        this.templateVersion = $.templateVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StackGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StackGroupArgs $;

        public Builder() {
            $ = new StackGroupArgs();
        }

        public Builder(StackGroupArgs defaults) {
            $ = new StackGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param administrationRoleName The name of the RAM role that you specify for the administrator account in ROS when you create the self-managed stack group. If you do not specify this parameter, the default value AliyunROSStackGroupAdministrationRole is used. You can use the administrator role in ROS to assume the execution role AliyunROSStackGroupExecutionRole to perform operations on the stacks that correspond to stack instances in the stack group.
         * 
         * @return builder
         * 
         */
        public Builder administrationRoleName(@Nullable Output<String> administrationRoleName) {
            $.administrationRoleName = administrationRoleName;
            return this;
        }

        /**
         * @param administrationRoleName The name of the RAM role that you specify for the administrator account in ROS when you create the self-managed stack group. If you do not specify this parameter, the default value AliyunROSStackGroupAdministrationRole is used. You can use the administrator role in ROS to assume the execution role AliyunROSStackGroupExecutionRole to perform operations on the stacks that correspond to stack instances in the stack group.
         * 
         * @return builder
         * 
         */
        public Builder administrationRoleName(String administrationRoleName) {
            return administrationRoleName(Output.of(administrationRoleName));
        }

        /**
         * @param autoDeployment Automatic deployment setting information. Description
         * This parameter is required only if the PermissionModel is SERVICE_MANAGED. See `autoDeployment` below.
         * 
         * @return builder
         * 
         */
        public Builder autoDeployment(@Nullable Output<StackGroupAutoDeploymentArgs> autoDeployment) {
            $.autoDeployment = autoDeployment;
            return this;
        }

        /**
         * @param autoDeployment Automatic deployment setting information. Description
         * This parameter is required only if the PermissionModel is SERVICE_MANAGED. See `autoDeployment` below.
         * 
         * @return builder
         * 
         */
        public Builder autoDeployment(StackGroupAutoDeploymentArgs autoDeployment) {
            return autoDeployment(Output.of(autoDeployment));
        }

        /**
         * @param capabilities The list of resource stack group options. The maximum length is 1.
         * 
         * @return builder
         * 
         */
        public Builder capabilities(@Nullable Output<List<String>> capabilities) {
            $.capabilities = capabilities;
            return this;
        }

        /**
         * @param capabilities The list of resource stack group options. The maximum length is 1.
         * 
         * @return builder
         * 
         */
        public Builder capabilities(List<String> capabilities) {
            return capabilities(Output.of(capabilities));
        }

        /**
         * @param capabilities The list of resource stack group options. The maximum length is 1.
         * 
         * @return builder
         * 
         */
        public Builder capabilities(String... capabilities) {
            return capabilities(List.of(capabilities));
        }

        /**
         * @param description The description of the stack group.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the stack group.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param executionRoleName The name of the RAM role that you specify for the execution account when you create the self-managed stack group. You can use the administrator role AliyunROSStackGroupAdministrationRole to assume the execution role. If you do not specify this parameter, the default value AliyunROSStackGroupExecutionRole is used. You can use this role in ROS to perform operations on the stacks that correspond to stack instances in the stack group.
         * 
         * @return builder
         * 
         */
        public Builder executionRoleName(@Nullable Output<String> executionRoleName) {
            $.executionRoleName = executionRoleName;
            return this;
        }

        /**
         * @param executionRoleName The name of the RAM role that you specify for the execution account when you create the self-managed stack group. You can use the administrator role AliyunROSStackGroupAdministrationRole to assume the execution role. If you do not specify this parameter, the default value AliyunROSStackGroupExecutionRole is used. You can use this role in ROS to perform operations on the stacks that correspond to stack instances in the stack group.
         * 
         * @return builder
         * 
         */
        public Builder executionRoleName(String executionRoleName) {
            return executionRoleName(Output.of(executionRoleName));
        }

        /**
         * @param parameters Parameters See `parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<List<StackGroupParameterArgs>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Parameters See `parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder parameters(List<StackGroupParameterArgs> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param parameters Parameters See `parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder parameters(StackGroupParameterArgs... parameters) {
            return parameters(List.of(parameters));
        }

        /**
         * @param permissionModel The permission model.
         * 
         * @return builder
         * 
         */
        public Builder permissionModel(@Nullable Output<String> permissionModel) {
            $.permissionModel = permissionModel;
            return this;
        }

        /**
         * @param permissionModel The permission model.
         * 
         * @return builder
         * 
         */
        public Builder permissionModel(String permissionModel) {
            return permissionModel(Output.of(permissionModel));
        }

        /**
         * @param resourceGroupId The ID of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param stackGroupName StackGroupName
         * 
         * @return builder
         * 
         */
        public Builder stackGroupName(Output<String> stackGroupName) {
            $.stackGroupName = stackGroupName;
            return this;
        }

        /**
         * @param stackGroupName StackGroupName
         * 
         * @return builder
         * 
         */
        public Builder stackGroupName(String stackGroupName) {
            return stackGroupName(Output.of(stackGroupName));
        }

        /**
         * @param tags The label of the resource stack group.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The label of the resource stack group.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param templateBody The template body.
         * 
         * @return builder
         * 
         */
        public Builder templateBody(@Nullable Output<String> templateBody) {
            $.templateBody = templateBody;
            return this;
        }

        /**
         * @param templateBody The template body.
         * 
         * @return builder
         * 
         */
        public Builder templateBody(String templateBody) {
            return templateBody(Output.of(templateBody));
        }

        /**
         * @param templateId The ID of the template.
         * 
         * @return builder
         * 
         */
        public Builder templateId(@Nullable Output<String> templateId) {
            $.templateId = templateId;
            return this;
        }

        /**
         * @param templateId The ID of the template.
         * 
         * @return builder
         * 
         */
        public Builder templateId(String templateId) {
            return templateId(Output.of(templateId));
        }

        /**
         * @param templateUrl The location of the file that contains the template body. The URL must point to the template (1 to 524,288 bytes) located in the HTTP Web server (HTTP or HTTPS) or Alibaba Cloud OSS bucket. The URL of the OSS bucket, such as oss:// ros/template/demo or oss:// ros/template/demo? RegionId = cn-hangzhou. If the OSS region is not specified, the RegionId of the interface is the same by default.
         * 
         * &gt; **NOTE:** You must and can specify only one of the parameters of TemplateBody, TemplateURL, or TemplateId.
         * 
         * @return builder
         * 
         */
        public Builder templateUrl(@Nullable Output<String> templateUrl) {
            $.templateUrl = templateUrl;
            return this;
        }

        /**
         * @param templateUrl The location of the file that contains the template body. The URL must point to the template (1 to 524,288 bytes) located in the HTTP Web server (HTTP or HTTPS) or Alibaba Cloud OSS bucket. The URL of the OSS bucket, such as oss:// ros/template/demo or oss:// ros/template/demo? RegionId = cn-hangzhou. If the OSS region is not specified, the RegionId of the interface is the same by default.
         * 
         * &gt; **NOTE:** You must and can specify only one of the parameters of TemplateBody, TemplateURL, or TemplateId.
         * 
         * @return builder
         * 
         */
        public Builder templateUrl(String templateUrl) {
            return templateUrl(Output.of(templateUrl));
        }

        /**
         * @param templateVersion The version of the template.
         * 
         * @return builder
         * 
         */
        public Builder templateVersion(@Nullable Output<String> templateVersion) {
            $.templateVersion = templateVersion;
            return this;
        }

        /**
         * @param templateVersion The version of the template.
         * 
         * @return builder
         * 
         */
        public Builder templateVersion(String templateVersion) {
            return templateVersion(Output.of(templateVersion));
        }

        public StackGroupArgs build() {
            if ($.stackGroupName == null) {
                throw new MissingRequiredPropertyException("StackGroupArgs", "stackGroupName");
            }
            return $;
        }
    }

}
