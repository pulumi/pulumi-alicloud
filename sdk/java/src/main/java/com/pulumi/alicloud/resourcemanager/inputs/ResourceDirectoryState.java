// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.resourcemanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourceDirectoryState extends com.pulumi.resources.ResourceArgs {

    public static final ResourceDirectoryState Empty = new ResourceDirectoryState();

    /**
     * The time when the resource directory was created
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The time when the resource directory was created
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The ID of the master account
     * 
     */
    @Import(name="masterAccountId")
    private @Nullable Output<String> masterAccountId;

    /**
     * @return The ID of the master account
     * 
     */
    public Optional<Output<String>> masterAccountId() {
        return Optional.ofNullable(this.masterAccountId);
    }

    /**
     * The name of the master account
     * 
     */
    @Import(name="masterAccountName")
    private @Nullable Output<String> masterAccountName;

    /**
     * @return The name of the master account
     * 
     */
    public Optional<Output<String>> masterAccountName() {
        return Optional.ofNullable(this.masterAccountName);
    }

    /**
     * The status of the Member Display Name Synchronization feature. Valid values:
     * - Enabled
     * - Disabled
     * 
     */
    @Import(name="memberAccountDisplayNameSyncStatus")
    private @Nullable Output<String> memberAccountDisplayNameSyncStatus;

    /**
     * @return The status of the Member Display Name Synchronization feature. Valid values:
     * - Enabled
     * - Disabled
     * 
     */
    public Optional<Output<String>> memberAccountDisplayNameSyncStatus() {
        return Optional.ofNullable(this.memberAccountDisplayNameSyncStatus);
    }

    /**
     * The status of the member deletion feature. Valid values:
     * - Enabled: The feature is enabled. You can call the DeleteAccount operation to delete members of the resource account type.
     * - Disabled: The feature is disabled. You cannot delete members of the resource account type.
     * 
     */
    @Import(name="memberDeletionStatus")
    private @Nullable Output<String> memberDeletionStatus;

    /**
     * @return The status of the member deletion feature. Valid values:
     * - Enabled: The feature is enabled. You can call the DeleteAccount operation to delete members of the resource account type.
     * - Disabled: The feature is disabled. You cannot delete members of the resource account type.
     * 
     */
    public Optional<Output<String>> memberDeletionStatus() {
        return Optional.ofNullable(this.memberDeletionStatus);
    }

    /**
     * The ID of the root folder
     * 
     */
    @Import(name="rootFolderId")
    private @Nullable Output<String> rootFolderId;

    /**
     * @return The ID of the root folder
     * 
     */
    public Optional<Output<String>> rootFolderId() {
        return Optional.ofNullable(this.rootFolderId);
    }

    /**
     * ScpStatus
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return ScpStatus
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private ResourceDirectoryState() {}

    private ResourceDirectoryState(ResourceDirectoryState $) {
        this.createTime = $.createTime;
        this.masterAccountId = $.masterAccountId;
        this.masterAccountName = $.masterAccountName;
        this.memberAccountDisplayNameSyncStatus = $.memberAccountDisplayNameSyncStatus;
        this.memberDeletionStatus = $.memberDeletionStatus;
        this.rootFolderId = $.rootFolderId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceDirectoryState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceDirectoryState $;

        public Builder() {
            $ = new ResourceDirectoryState();
        }

        public Builder(ResourceDirectoryState defaults) {
            $ = new ResourceDirectoryState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime The time when the resource directory was created
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The time when the resource directory was created
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param masterAccountId The ID of the master account
         * 
         * @return builder
         * 
         */
        public Builder masterAccountId(@Nullable Output<String> masterAccountId) {
            $.masterAccountId = masterAccountId;
            return this;
        }

        /**
         * @param masterAccountId The ID of the master account
         * 
         * @return builder
         * 
         */
        public Builder masterAccountId(String masterAccountId) {
            return masterAccountId(Output.of(masterAccountId));
        }

        /**
         * @param masterAccountName The name of the master account
         * 
         * @return builder
         * 
         */
        public Builder masterAccountName(@Nullable Output<String> masterAccountName) {
            $.masterAccountName = masterAccountName;
            return this;
        }

        /**
         * @param masterAccountName The name of the master account
         * 
         * @return builder
         * 
         */
        public Builder masterAccountName(String masterAccountName) {
            return masterAccountName(Output.of(masterAccountName));
        }

        /**
         * @param memberAccountDisplayNameSyncStatus The status of the Member Display Name Synchronization feature. Valid values:
         * - Enabled
         * - Disabled
         * 
         * @return builder
         * 
         */
        public Builder memberAccountDisplayNameSyncStatus(@Nullable Output<String> memberAccountDisplayNameSyncStatus) {
            $.memberAccountDisplayNameSyncStatus = memberAccountDisplayNameSyncStatus;
            return this;
        }

        /**
         * @param memberAccountDisplayNameSyncStatus The status of the Member Display Name Synchronization feature. Valid values:
         * - Enabled
         * - Disabled
         * 
         * @return builder
         * 
         */
        public Builder memberAccountDisplayNameSyncStatus(String memberAccountDisplayNameSyncStatus) {
            return memberAccountDisplayNameSyncStatus(Output.of(memberAccountDisplayNameSyncStatus));
        }

        /**
         * @param memberDeletionStatus The status of the member deletion feature. Valid values:
         * - Enabled: The feature is enabled. You can call the DeleteAccount operation to delete members of the resource account type.
         * - Disabled: The feature is disabled. You cannot delete members of the resource account type.
         * 
         * @return builder
         * 
         */
        public Builder memberDeletionStatus(@Nullable Output<String> memberDeletionStatus) {
            $.memberDeletionStatus = memberDeletionStatus;
            return this;
        }

        /**
         * @param memberDeletionStatus The status of the member deletion feature. Valid values:
         * - Enabled: The feature is enabled. You can call the DeleteAccount operation to delete members of the resource account type.
         * - Disabled: The feature is disabled. You cannot delete members of the resource account type.
         * 
         * @return builder
         * 
         */
        public Builder memberDeletionStatus(String memberDeletionStatus) {
            return memberDeletionStatus(Output.of(memberDeletionStatus));
        }

        /**
         * @param rootFolderId The ID of the root folder
         * 
         * @return builder
         * 
         */
        public Builder rootFolderId(@Nullable Output<String> rootFolderId) {
            $.rootFolderId = rootFolderId;
            return this;
        }

        /**
         * @param rootFolderId The ID of the root folder
         * 
         * @return builder
         * 
         */
        public Builder rootFolderId(String rootFolderId) {
            return rootFolderId(Output.of(rootFolderId));
        }

        /**
         * @param status ScpStatus
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status ScpStatus
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public ResourceDirectoryState build() {
            return $;
        }
    }

}
