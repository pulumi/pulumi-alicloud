// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.schedulerx;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.schedulerx.inputs.GetNamespacesArgs;
import com.pulumi.alicloud.schedulerx.inputs.GetNamespacesPlainArgs;
import com.pulumi.alicloud.schedulerx.outputs.GetNamespacesResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class SchedulerxFunctions {
    /**
     * This data source provides the Schedulerx Namespaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.173.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.schedulerx.SchedulerxFunctions;
     * import com.pulumi.alicloud.schedulerx.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SchedulerxFunctions.getNamespaces();
     * 
     *         ctx.export(&#34;schedulerxNamespaceId1&#34;, ids.applyValue(getNamespacesResult -&gt; getNamespacesResult.namespaces()[0].id()));
     *         final var nameRegex = SchedulerxFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .nameRegex(&#34;^my-Namespace&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;schedulerxNamespaceId2&#34;, nameRegex.applyValue(getNamespacesResult -&gt; getNamespacesResult.namespaces()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNamespacesResult> getNamespaces() {
        return getNamespaces(GetNamespacesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Schedulerx Namespaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.173.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.schedulerx.SchedulerxFunctions;
     * import com.pulumi.alicloud.schedulerx.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SchedulerxFunctions.getNamespaces();
     * 
     *         ctx.export(&#34;schedulerxNamespaceId1&#34;, ids.applyValue(getNamespacesResult -&gt; getNamespacesResult.namespaces()[0].id()));
     *         final var nameRegex = SchedulerxFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .nameRegex(&#34;^my-Namespace&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;schedulerxNamespaceId2&#34;, nameRegex.applyValue(getNamespacesResult -&gt; getNamespacesResult.namespaces()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNamespacesResult> getNamespacesPlain() {
        return getNamespacesPlain(GetNamespacesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Schedulerx Namespaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.173.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.schedulerx.SchedulerxFunctions;
     * import com.pulumi.alicloud.schedulerx.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SchedulerxFunctions.getNamespaces();
     * 
     *         ctx.export(&#34;schedulerxNamespaceId1&#34;, ids.applyValue(getNamespacesResult -&gt; getNamespacesResult.namespaces()[0].id()));
     *         final var nameRegex = SchedulerxFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .nameRegex(&#34;^my-Namespace&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;schedulerxNamespaceId2&#34;, nameRegex.applyValue(getNamespacesResult -&gt; getNamespacesResult.namespaces()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNamespacesResult> getNamespaces(GetNamespacesArgs args) {
        return getNamespaces(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Schedulerx Namespaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.173.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.schedulerx.SchedulerxFunctions;
     * import com.pulumi.alicloud.schedulerx.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SchedulerxFunctions.getNamespaces();
     * 
     *         ctx.export(&#34;schedulerxNamespaceId1&#34;, ids.applyValue(getNamespacesResult -&gt; getNamespacesResult.namespaces()[0].id()));
     *         final var nameRegex = SchedulerxFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .nameRegex(&#34;^my-Namespace&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;schedulerxNamespaceId2&#34;, nameRegex.applyValue(getNamespacesResult -&gt; getNamespacesResult.namespaces()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNamespacesResult> getNamespacesPlain(GetNamespacesPlainArgs args) {
        return getNamespacesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Schedulerx Namespaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.173.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.schedulerx.SchedulerxFunctions;
     * import com.pulumi.alicloud.schedulerx.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SchedulerxFunctions.getNamespaces();
     * 
     *         ctx.export(&#34;schedulerxNamespaceId1&#34;, ids.applyValue(getNamespacesResult -&gt; getNamespacesResult.namespaces()[0].id()));
     *         final var nameRegex = SchedulerxFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .nameRegex(&#34;^my-Namespace&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;schedulerxNamespaceId2&#34;, nameRegex.applyValue(getNamespacesResult -&gt; getNamespacesResult.namespaces()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNamespacesResult> getNamespaces(GetNamespacesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:schedulerx/getNamespaces:getNamespaces", TypeShape.of(GetNamespacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Schedulerx Namespaces of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.173.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.schedulerx.SchedulerxFunctions;
     * import com.pulumi.alicloud.schedulerx.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SchedulerxFunctions.getNamespaces();
     * 
     *         ctx.export(&#34;schedulerxNamespaceId1&#34;, ids.applyValue(getNamespacesResult -&gt; getNamespacesResult.namespaces()[0].id()));
     *         final var nameRegex = SchedulerxFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .nameRegex(&#34;^my-Namespace&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;schedulerxNamespaceId2&#34;, nameRegex.applyValue(getNamespacesResult -&gt; getNamespacesResult.namespaces()[0].id()));
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNamespacesResult> getNamespacesPlain(GetNamespacesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:schedulerx/getNamespaces:getNamespaces", TypeShape.of(GetNamespacesResult.class), args, Utilities.withVersion(options));
    }
}
