// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ros.outputs;

import com.pulumi.alicloud.ros.outputs.GetStackInstancesInstance;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetStackInstancesResult {
    private @Nullable Boolean enableDetails;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<String> ids;
    private List<GetStackInstancesInstance> instances;
    private @Nullable String outputFile;
    private String stackGroupName;
    private @Nullable String stackInstanceAccountId;
    private @Nullable String stackInstanceRegionId;
    private @Nullable String status;

    private GetStackInstancesResult() {}
    public Optional<Boolean> enableDetails() {
        return Optional.ofNullable(this.enableDetails);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    public List<GetStackInstancesInstance> instances() {
        return this.instances;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public String stackGroupName() {
        return this.stackGroupName;
    }
    public Optional<String> stackInstanceAccountId() {
        return Optional.ofNullable(this.stackInstanceAccountId);
    }
    public Optional<String> stackInstanceRegionId() {
        return Optional.ofNullable(this.stackInstanceRegionId);
    }
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStackInstancesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enableDetails;
        private String id;
        private List<String> ids;
        private List<GetStackInstancesInstance> instances;
        private @Nullable String outputFile;
        private String stackGroupName;
        private @Nullable String stackInstanceAccountId;
        private @Nullable String stackInstanceRegionId;
        private @Nullable String status;
        public Builder() {}
        public Builder(GetStackInstancesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableDetails = defaults.enableDetails;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.instances = defaults.instances;
    	      this.outputFile = defaults.outputFile;
    	      this.stackGroupName = defaults.stackGroupName;
    	      this.stackInstanceAccountId = defaults.stackInstanceAccountId;
    	      this.stackInstanceRegionId = defaults.stackInstanceRegionId;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder enableDetails(@Nullable Boolean enableDetails) {
            this.enableDetails = enableDetails;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder instances(List<GetStackInstancesInstance> instances) {
            this.instances = Objects.requireNonNull(instances);
            return this;
        }
        public Builder instances(GetStackInstancesInstance... instances) {
            return instances(List.of(instances));
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder stackGroupName(String stackGroupName) {
            this.stackGroupName = Objects.requireNonNull(stackGroupName);
            return this;
        }
        @CustomType.Setter
        public Builder stackInstanceAccountId(@Nullable String stackInstanceAccountId) {
            this.stackInstanceAccountId = stackInstanceAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder stackInstanceRegionId(@Nullable String stackInstanceRegionId) {
            this.stackInstanceRegionId = stackInstanceRegionId;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public GetStackInstancesResult build() {
            final var o = new GetStackInstancesResult();
            o.enableDetails = enableDetails;
            o.id = id;
            o.ids = ids;
            o.instances = instances;
            o.outputFile = outputFile;
            o.stackGroupName = stackGroupName;
            o.stackInstanceAccountId = stackInstanceAccountId;
            o.stackInstanceRegionId = stackInstanceRegionId;
            o.status = status;
            return o;
        }
    }
}
