// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ens;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NatGatewayArgs extends com.pulumi.resources.ResourceArgs {

    public static final NatGatewayArgs Empty = new NatGatewayArgs();

    /**
     * The ID of the ENS node.
     * 
     */
    @Import(name="ensRegionId", required=true)
    private Output<String> ensRegionId;

    /**
     * @return The ID of the ENS node.
     * 
     */
    public Output<String> ensRegionId() {
        return this.ensRegionId;
    }

    /**
     * NAT specifications. Value: `enat.default`.
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    /**
     * @return NAT specifications. Value: `enat.default`.
     * 
     */
    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * The name of the NAT gateway. The length is 1 to 128 characters, but it cannot start with &#39;http:// &#39;or &#39;https.
     * 
     */
    @Import(name="natName")
    private @Nullable Output<String> natName;

    /**
     * @return The name of the NAT gateway. The length is 1 to 128 characters, but it cannot start with &#39;http:// &#39;or &#39;https.
     * 
     */
    public Optional<Output<String>> natName() {
        return Optional.ofNullable(this.natName);
    }

    /**
     * The network ID.
     * 
     */
    @Import(name="networkId", required=true)
    private Output<String> networkId;

    /**
     * @return The network ID.
     * 
     */
    public Output<String> networkId() {
        return this.networkId;
    }

    /**
     * The vSwitch ID.
     * 
     */
    @Import(name="vswitchId", required=true)
    private Output<String> vswitchId;

    /**
     * @return The vSwitch ID.
     * 
     */
    public Output<String> vswitchId() {
        return this.vswitchId;
    }

    private NatGatewayArgs() {}

    private NatGatewayArgs(NatGatewayArgs $) {
        this.ensRegionId = $.ensRegionId;
        this.instanceType = $.instanceType;
        this.natName = $.natName;
        this.networkId = $.networkId;
        this.vswitchId = $.vswitchId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NatGatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NatGatewayArgs $;

        public Builder() {
            $ = new NatGatewayArgs();
        }

        public Builder(NatGatewayArgs defaults) {
            $ = new NatGatewayArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ensRegionId The ID of the ENS node.
         * 
         * @return builder
         * 
         */
        public Builder ensRegionId(Output<String> ensRegionId) {
            $.ensRegionId = ensRegionId;
            return this;
        }

        /**
         * @param ensRegionId The ID of the ENS node.
         * 
         * @return builder
         * 
         */
        public Builder ensRegionId(String ensRegionId) {
            return ensRegionId(Output.of(ensRegionId));
        }

        /**
         * @param instanceType NAT specifications. Value: `enat.default`.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType NAT specifications. Value: `enat.default`.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param natName The name of the NAT gateway. The length is 1 to 128 characters, but it cannot start with &#39;http:// &#39;or &#39;https.
         * 
         * @return builder
         * 
         */
        public Builder natName(@Nullable Output<String> natName) {
            $.natName = natName;
            return this;
        }

        /**
         * @param natName The name of the NAT gateway. The length is 1 to 128 characters, but it cannot start with &#39;http:// &#39;or &#39;https.
         * 
         * @return builder
         * 
         */
        public Builder natName(String natName) {
            return natName(Output.of(natName));
        }

        /**
         * @param networkId The network ID.
         * 
         * @return builder
         * 
         */
        public Builder networkId(Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId The network ID.
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        /**
         * @param vswitchId The vSwitch ID.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId The vSwitch ID.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        public NatGatewayArgs build() {
            if ($.ensRegionId == null) {
                throw new MissingRequiredPropertyException("NatGatewayArgs", "ensRegionId");
            }
            if ($.networkId == null) {
                throw new MissingRequiredPropertyException("NatGatewayArgs", "networkId");
            }
            if ($.vswitchId == null) {
                throw new MissingRequiredPropertyException("NatGatewayArgs", "vswitchId");
            }
            return $;
        }
    }

}
