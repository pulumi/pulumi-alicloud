// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IpamIpamScopeState extends com.pulumi.resources.ResourceArgs {

    public static final IpamIpamScopeState Empty = new IpamIpamScopeState();

    /**
     * The creation time of the resource.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time of the resource.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The id of the Ipam instance.
     * 
     */
    @Import(name="ipamId")
    private @Nullable Output<String> ipamId;

    /**
     * @return The id of the Ipam instance.
     * 
     */
    public Optional<Output<String>> ipamId() {
        return Optional.ofNullable(this.ipamId);
    }

    /**
     * The description of the IPAM&#39;s scope of action.
     * 
     * It must be 2 to 256 characters in length and must start with a lowercase letter, but cannot start with &#39;http:// &#39;or &#39;https. If it is not filled in, it is empty. The default value is empty.
     * 
     */
    @Import(name="ipamScopeDescription")
    private @Nullable Output<String> ipamScopeDescription;

    /**
     * @return The description of the IPAM&#39;s scope of action.
     * 
     * It must be 2 to 256 characters in length and must start with a lowercase letter, but cannot start with &#39;http:// &#39;or &#39;https. If it is not filled in, it is empty. The default value is empty.
     * 
     */
    public Optional<Output<String>> ipamScopeDescription() {
        return Optional.ofNullable(this.ipamScopeDescription);
    }

    /**
     * The name of the resource.
     * 
     */
    @Import(name="ipamScopeName")
    private @Nullable Output<String> ipamScopeName;

    /**
     * @return The name of the resource.
     * 
     */
    public Optional<Output<String>> ipamScopeName() {
        return Optional.ofNullable(this.ipamScopeName);
    }

    /**
     * IPAM scope of action type:
     * `private`.
     * 
     * &gt; **NOTE:**  Currently, only the role scope of the private network is supported.
     * 
     */
    @Import(name="ipamScopeType")
    private @Nullable Output<String> ipamScopeType;

    /**
     * @return IPAM scope of action type:
     * `private`.
     * 
     * &gt; **NOTE:**  Currently, only the role scope of the private network is supported.
     * 
     */
    public Optional<Output<String>> ipamScopeType() {
        return Optional.ofNullable(this.ipamScopeType);
    }

    /**
     * The region ID of the resource.
     * 
     */
    @Import(name="regionId")
    private @Nullable Output<String> regionId;

    /**
     * @return The region ID of the resource.
     * 
     */
    public Optional<Output<String>> regionId() {
        return Optional.ofNullable(this.regionId);
    }

    /**
     * The ID of the resource group.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The status of the resource.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The tag of the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The tag of the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private IpamIpamScopeState() {}

    private IpamIpamScopeState(IpamIpamScopeState $) {
        this.createTime = $.createTime;
        this.ipamId = $.ipamId;
        this.ipamScopeDescription = $.ipamScopeDescription;
        this.ipamScopeName = $.ipamScopeName;
        this.ipamScopeType = $.ipamScopeType;
        this.regionId = $.regionId;
        this.resourceGroupId = $.resourceGroupId;
        this.status = $.status;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IpamIpamScopeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IpamIpamScopeState $;

        public Builder() {
            $ = new IpamIpamScopeState();
        }

        public Builder(IpamIpamScopeState defaults) {
            $ = new IpamIpamScopeState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime The creation time of the resource.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the resource.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param ipamId The id of the Ipam instance.
         * 
         * @return builder
         * 
         */
        public Builder ipamId(@Nullable Output<String> ipamId) {
            $.ipamId = ipamId;
            return this;
        }

        /**
         * @param ipamId The id of the Ipam instance.
         * 
         * @return builder
         * 
         */
        public Builder ipamId(String ipamId) {
            return ipamId(Output.of(ipamId));
        }

        /**
         * @param ipamScopeDescription The description of the IPAM&#39;s scope of action.
         * 
         * It must be 2 to 256 characters in length and must start with a lowercase letter, but cannot start with &#39;http:// &#39;or &#39;https. If it is not filled in, it is empty. The default value is empty.
         * 
         * @return builder
         * 
         */
        public Builder ipamScopeDescription(@Nullable Output<String> ipamScopeDescription) {
            $.ipamScopeDescription = ipamScopeDescription;
            return this;
        }

        /**
         * @param ipamScopeDescription The description of the IPAM&#39;s scope of action.
         * 
         * It must be 2 to 256 characters in length and must start with a lowercase letter, but cannot start with &#39;http:// &#39;or &#39;https. If it is not filled in, it is empty. The default value is empty.
         * 
         * @return builder
         * 
         */
        public Builder ipamScopeDescription(String ipamScopeDescription) {
            return ipamScopeDescription(Output.of(ipamScopeDescription));
        }

        /**
         * @param ipamScopeName The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder ipamScopeName(@Nullable Output<String> ipamScopeName) {
            $.ipamScopeName = ipamScopeName;
            return this;
        }

        /**
         * @param ipamScopeName The name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder ipamScopeName(String ipamScopeName) {
            return ipamScopeName(Output.of(ipamScopeName));
        }

        /**
         * @param ipamScopeType IPAM scope of action type:
         * `private`.
         * 
         * &gt; **NOTE:**  Currently, only the role scope of the private network is supported.
         * 
         * @return builder
         * 
         */
        public Builder ipamScopeType(@Nullable Output<String> ipamScopeType) {
            $.ipamScopeType = ipamScopeType;
            return this;
        }

        /**
         * @param ipamScopeType IPAM scope of action type:
         * `private`.
         * 
         * &gt; **NOTE:**  Currently, only the role scope of the private network is supported.
         * 
         * @return builder
         * 
         */
        public Builder ipamScopeType(String ipamScopeType) {
            return ipamScopeType(Output.of(ipamScopeType));
        }

        /**
         * @param regionId The region ID of the resource.
         * 
         * @return builder
         * 
         */
        public Builder regionId(@Nullable Output<String> regionId) {
            $.regionId = regionId;
            return this;
        }

        /**
         * @param regionId The region ID of the resource.
         * 
         * @return builder
         * 
         */
        public Builder regionId(String regionId) {
            return regionId(Output.of(regionId));
        }

        /**
         * @param resourceGroupId The ID of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param status The status of the resource.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags The tag of the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tag of the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public IpamIpamScopeState build() {
            return $;
        }
    }

}
