// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oos.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetTemplatesTemplate {
    /**
     * @return The category of template.
     * 
     */
    private String category;
    /**
     * @return The creator of the template.
     * 
     */
    private String createdBy;
    /**
     * @return The template whose creation time is less than or equal to the specified time. The format is: YYYY-MM-DDThh:mm::ssZ.
     * 
     */
    private String createdDate;
    /**
     * @return Description of the OOS Template.
     * 
     */
    private String description;
    /**
     * @return Is it triggered successfully.
     * 
     */
    private Boolean hasTrigger;
    /**
     * @return ID of the OOS Template. The value is same as template_name.
     * 
     */
    private String id;
    /**
     * @return The sharing type of the template. Valid values: `Private`, `Public`.
     * 
     */
    private String shareType;
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    private Map<String,Object> tags;
    /**
     * @return The format of the template. Valid values: `JSON`, `YAML`.
     * 
     */
    private String templateFormat;
    /**
     * @return ID of the OOS Template resource.
     * 
     */
    private String templateId;
    /**
     * @return Name of the OOS Template.
     * 
     */
    private String templateName;
    /**
     * @return The type of OOS Template.
     * 
     */
    private String templateType;
    /**
     * @return Version of the OOS Template.
     * 
     */
    private String templateVersion;
    /**
     * @return The user who updated the template.
     * 
     */
    private String updatedBy;
    /**
     * @return The time when the template was updated.
     * 
     */
    private String updatedDate;

    private GetTemplatesTemplate() {}
    /**
     * @return The category of template.
     * 
     */
    public String category() {
        return this.category;
    }
    /**
     * @return The creator of the template.
     * 
     */
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return The template whose creation time is less than or equal to the specified time. The format is: YYYY-MM-DDThh:mm::ssZ.
     * 
     */
    public String createdDate() {
        return this.createdDate;
    }
    /**
     * @return Description of the OOS Template.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Is it triggered successfully.
     * 
     */
    public Boolean hasTrigger() {
        return this.hasTrigger;
    }
    /**
     * @return ID of the OOS Template. The value is same as template_name.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The sharing type of the template. Valid values: `Private`, `Public`.
     * 
     */
    public String shareType() {
        return this.shareType;
    }
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Map<String,Object> tags() {
        return this.tags;
    }
    /**
     * @return The format of the template. Valid values: `JSON`, `YAML`.
     * 
     */
    public String templateFormat() {
        return this.templateFormat;
    }
    /**
     * @return ID of the OOS Template resource.
     * 
     */
    public String templateId() {
        return this.templateId;
    }
    /**
     * @return Name of the OOS Template.
     * 
     */
    public String templateName() {
        return this.templateName;
    }
    /**
     * @return The type of OOS Template.
     * 
     */
    public String templateType() {
        return this.templateType;
    }
    /**
     * @return Version of the OOS Template.
     * 
     */
    public String templateVersion() {
        return this.templateVersion;
    }
    /**
     * @return The user who updated the template.
     * 
     */
    public String updatedBy() {
        return this.updatedBy;
    }
    /**
     * @return The time when the template was updated.
     * 
     */
    public String updatedDate() {
        return this.updatedDate;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTemplatesTemplate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String category;
        private String createdBy;
        private String createdDate;
        private String description;
        private Boolean hasTrigger;
        private String id;
        private String shareType;
        private Map<String,Object> tags;
        private String templateFormat;
        private String templateId;
        private String templateName;
        private String templateType;
        private String templateVersion;
        private String updatedBy;
        private String updatedDate;
        public Builder() {}
        public Builder(GetTemplatesTemplate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.category = defaults.category;
    	      this.createdBy = defaults.createdBy;
    	      this.createdDate = defaults.createdDate;
    	      this.description = defaults.description;
    	      this.hasTrigger = defaults.hasTrigger;
    	      this.id = defaults.id;
    	      this.shareType = defaults.shareType;
    	      this.tags = defaults.tags;
    	      this.templateFormat = defaults.templateFormat;
    	      this.templateId = defaults.templateId;
    	      this.templateName = defaults.templateName;
    	      this.templateType = defaults.templateType;
    	      this.templateVersion = defaults.templateVersion;
    	      this.updatedBy = defaults.updatedBy;
    	      this.updatedDate = defaults.updatedDate;
        }

        @CustomType.Setter
        public Builder category(String category) {
            if (category == null) {
              throw new MissingRequiredPropertyException("GetTemplatesTemplate", "category");
            }
            this.category = category;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            if (createdBy == null) {
              throw new MissingRequiredPropertyException("GetTemplatesTemplate", "createdBy");
            }
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder createdDate(String createdDate) {
            if (createdDate == null) {
              throw new MissingRequiredPropertyException("GetTemplatesTemplate", "createdDate");
            }
            this.createdDate = createdDate;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetTemplatesTemplate", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder hasTrigger(Boolean hasTrigger) {
            if (hasTrigger == null) {
              throw new MissingRequiredPropertyException("GetTemplatesTemplate", "hasTrigger");
            }
            this.hasTrigger = hasTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTemplatesTemplate", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder shareType(String shareType) {
            if (shareType == null) {
              throw new MissingRequiredPropertyException("GetTemplatesTemplate", "shareType");
            }
            this.shareType = shareType;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,Object> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetTemplatesTemplate", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder templateFormat(String templateFormat) {
            if (templateFormat == null) {
              throw new MissingRequiredPropertyException("GetTemplatesTemplate", "templateFormat");
            }
            this.templateFormat = templateFormat;
            return this;
        }
        @CustomType.Setter
        public Builder templateId(String templateId) {
            if (templateId == null) {
              throw new MissingRequiredPropertyException("GetTemplatesTemplate", "templateId");
            }
            this.templateId = templateId;
            return this;
        }
        @CustomType.Setter
        public Builder templateName(String templateName) {
            if (templateName == null) {
              throw new MissingRequiredPropertyException("GetTemplatesTemplate", "templateName");
            }
            this.templateName = templateName;
            return this;
        }
        @CustomType.Setter
        public Builder templateType(String templateType) {
            if (templateType == null) {
              throw new MissingRequiredPropertyException("GetTemplatesTemplate", "templateType");
            }
            this.templateType = templateType;
            return this;
        }
        @CustomType.Setter
        public Builder templateVersion(String templateVersion) {
            if (templateVersion == null) {
              throw new MissingRequiredPropertyException("GetTemplatesTemplate", "templateVersion");
            }
            this.templateVersion = templateVersion;
            return this;
        }
        @CustomType.Setter
        public Builder updatedBy(String updatedBy) {
            if (updatedBy == null) {
              throw new MissingRequiredPropertyException("GetTemplatesTemplate", "updatedBy");
            }
            this.updatedBy = updatedBy;
            return this;
        }
        @CustomType.Setter
        public Builder updatedDate(String updatedDate) {
            if (updatedDate == null) {
              throw new MissingRequiredPropertyException("GetTemplatesTemplate", "updatedDate");
            }
            this.updatedDate = updatedDate;
            return this;
        }
        public GetTemplatesTemplate build() {
            final var _resultValue = new GetTemplatesTemplate();
            _resultValue.category = category;
            _resultValue.createdBy = createdBy;
            _resultValue.createdDate = createdDate;
            _resultValue.description = description;
            _resultValue.hasTrigger = hasTrigger;
            _resultValue.id = id;
            _resultValue.shareType = shareType;
            _resultValue.tags = tags;
            _resultValue.templateFormat = templateFormat;
            _resultValue.templateId = templateId;
            _resultValue.templateName = templateName;
            _resultValue.templateType = templateType;
            _resultValue.templateVersion = templateVersion;
            _resultValue.updatedBy = updatedBy;
            _resultValue.updatedDate = updatedDate;
            return _resultValue;
        }
    }
}
