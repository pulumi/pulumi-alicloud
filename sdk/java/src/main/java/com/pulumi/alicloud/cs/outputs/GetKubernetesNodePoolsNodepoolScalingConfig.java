// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetKubernetesNodePoolsNodepoolScalingConfig {
    /**
     * @return Peak EIP bandwidth. Its valid value range [1~500] in Mbps. It works if `is_bond_eip=true`. Default to `5`.
     * 
     */
    private Integer eipBandwidth;
    /**
     * @return EIP billing type. `PayByBandwidth`: Charged at fixed bandwidth. `PayByTraffic`: Billed as used traffic. Default: `PayByBandwidth`. It works if `is_bond_eip=true`, conflict with `internetChargeType`. EIP and public network IP can only choose one.
     * 
     */
    private String eipInternetChargeType;
    /**
     * @return Whether to enable automatic scaling. Value:- `true`: enables the node pool auto-scaling function.- `false`: Auto scaling is not enabled. When the value is false, other `autoScaling` configuration parameters do not take effect.
     * 
     */
    private Boolean enable;
    /**
     * @return Whether to bind EIP for an instance. Default: `false`.
     * 
     */
    private Boolean isBondEip;
    /**
     * @return Max number of instances in a auto scaling group, its valid value range [0~1000]. `maxSize` has to be greater than `minSize`.
     * 
     */
    private Integer maxSize;
    /**
     * @return Min number of instances in a auto scaling group, its valid value range [0~1000].
     * 
     */
    private Integer minSize;
    /**
     * @return Instance classification, not required. Vaild value: `cpu`, `gpu`, `gpushare` and `spot`. Default: `cpu`. The actual instance type is determined by `instanceTypes`.
     * 
     */
    private String type;

    private GetKubernetesNodePoolsNodepoolScalingConfig() {}
    /**
     * @return Peak EIP bandwidth. Its valid value range [1~500] in Mbps. It works if `is_bond_eip=true`. Default to `5`.
     * 
     */
    public Integer eipBandwidth() {
        return this.eipBandwidth;
    }
    /**
     * @return EIP billing type. `PayByBandwidth`: Charged at fixed bandwidth. `PayByTraffic`: Billed as used traffic. Default: `PayByBandwidth`. It works if `is_bond_eip=true`, conflict with `internetChargeType`. EIP and public network IP can only choose one.
     * 
     */
    public String eipInternetChargeType() {
        return this.eipInternetChargeType;
    }
    /**
     * @return Whether to enable automatic scaling. Value:- `true`: enables the node pool auto-scaling function.- `false`: Auto scaling is not enabled. When the value is false, other `autoScaling` configuration parameters do not take effect.
     * 
     */
    public Boolean enable() {
        return this.enable;
    }
    /**
     * @return Whether to bind EIP for an instance. Default: `false`.
     * 
     */
    public Boolean isBondEip() {
        return this.isBondEip;
    }
    /**
     * @return Max number of instances in a auto scaling group, its valid value range [0~1000]. `maxSize` has to be greater than `minSize`.
     * 
     */
    public Integer maxSize() {
        return this.maxSize;
    }
    /**
     * @return Min number of instances in a auto scaling group, its valid value range [0~1000].
     * 
     */
    public Integer minSize() {
        return this.minSize;
    }
    /**
     * @return Instance classification, not required. Vaild value: `cpu`, `gpu`, `gpushare` and `spot`. Default: `cpu`. The actual instance type is determined by `instanceTypes`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKubernetesNodePoolsNodepoolScalingConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer eipBandwidth;
        private String eipInternetChargeType;
        private Boolean enable;
        private Boolean isBondEip;
        private Integer maxSize;
        private Integer minSize;
        private String type;
        public Builder() {}
        public Builder(GetKubernetesNodePoolsNodepoolScalingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eipBandwidth = defaults.eipBandwidth;
    	      this.eipInternetChargeType = defaults.eipInternetChargeType;
    	      this.enable = defaults.enable;
    	      this.isBondEip = defaults.isBondEip;
    	      this.maxSize = defaults.maxSize;
    	      this.minSize = defaults.minSize;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder eipBandwidth(Integer eipBandwidth) {
            if (eipBandwidth == null) {
              throw new MissingRequiredPropertyException("GetKubernetesNodePoolsNodepoolScalingConfig", "eipBandwidth");
            }
            this.eipBandwidth = eipBandwidth;
            return this;
        }
        @CustomType.Setter
        public Builder eipInternetChargeType(String eipInternetChargeType) {
            if (eipInternetChargeType == null) {
              throw new MissingRequiredPropertyException("GetKubernetesNodePoolsNodepoolScalingConfig", "eipInternetChargeType");
            }
            this.eipInternetChargeType = eipInternetChargeType;
            return this;
        }
        @CustomType.Setter
        public Builder enable(Boolean enable) {
            if (enable == null) {
              throw new MissingRequiredPropertyException("GetKubernetesNodePoolsNodepoolScalingConfig", "enable");
            }
            this.enable = enable;
            return this;
        }
        @CustomType.Setter
        public Builder isBondEip(Boolean isBondEip) {
            if (isBondEip == null) {
              throw new MissingRequiredPropertyException("GetKubernetesNodePoolsNodepoolScalingConfig", "isBondEip");
            }
            this.isBondEip = isBondEip;
            return this;
        }
        @CustomType.Setter
        public Builder maxSize(Integer maxSize) {
            if (maxSize == null) {
              throw new MissingRequiredPropertyException("GetKubernetesNodePoolsNodepoolScalingConfig", "maxSize");
            }
            this.maxSize = maxSize;
            return this;
        }
        @CustomType.Setter
        public Builder minSize(Integer minSize) {
            if (minSize == null) {
              throw new MissingRequiredPropertyException("GetKubernetesNodePoolsNodepoolScalingConfig", "minSize");
            }
            this.minSize = minSize;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetKubernetesNodePoolsNodepoolScalingConfig", "type");
            }
            this.type = type;
            return this;
        }
        public GetKubernetesNodePoolsNodepoolScalingConfig build() {
            final var _resultValue = new GetKubernetesNodePoolsNodepoolScalingConfig();
            _resultValue.eipBandwidth = eipBandwidth;
            _resultValue.eipInternetChargeType = eipInternetChargeType;
            _resultValue.enable = enable;
            _resultValue.isBondEip = isBondEip;
            _resultValue.maxSize = maxSize;
            _resultValue.minSize = minSize;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
