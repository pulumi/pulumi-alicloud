// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAssetsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAssetsPlainArgs Empty = new GetAssetsPlainArgs();

    /**
     * Set the conditions for searching assets. This parameter is in JSON format. Note the case when you enter the parameter. **NOTE:** You can search for assets by using conditions such as the instance ID, instance name, VPC ID, region, and public IP address of the asset.
     * 
     */
    @Import(name="criteria")
    private @Nullable String criteria;

    /**
     * @return Set the conditions for searching assets. This parameter is in JSON format. Note the case when you enter the parameter. **NOTE:** You can search for assets by using conditions such as the instance ID, instance name, VPC ID, region, and public IP address of the asset.
     * 
     */
    public Optional<String> criteria() {
        return Optional.ofNullable(this.criteria);
    }

    /**
     * A list of Asset IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable List<String> ids;

    /**
     * @return A list of Asset IDs.
     * 
     */
    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * Set asset importance. Value:
     * - **2**: Significant assets
     * - **1**: General assets
     * - **0**: Test asset
     * 
     */
    @Import(name="importance")
    private @Nullable Integer importance;

    /**
     * @return Set asset importance. Value:
     * - **2**: Significant assets
     * - **1**: General assets
     * - **0**: Test asset
     * 
     */
    public Optional<Integer> importance() {
        return Optional.ofNullable(this.importance);
    }

    /**
     * Set the logical relationship between multiple search conditions. The default value is **OR**. Valid values:
     * - **OR**: indicates that the relationship between multiple search conditions is **OR**.
     * - **AND**: indicates that the relationship between multiple search conditions is **AND**.
     * 
     */
    @Import(name="logicalExp")
    private @Nullable String logicalExp;

    /**
     * @return Set the logical relationship between multiple search conditions. The default value is **OR**. Valid values:
     * - **OR**: indicates that the relationship between multiple search conditions is **OR**.
     * - **AND**: indicates that the relationship between multiple search conditions is **AND**.
     * 
     */
    public Optional<String> logicalExp() {
        return Optional.ofNullable(this.logicalExp);
    }

    /**
     * The type of asset to query. Value:
     * - **ecs**: server.
     * - **cloud_product**: Cloud product.
     * 
     */
    @Import(name="machineTypes")
    private @Nullable String machineTypes;

    /**
     * @return The type of asset to query. Value:
     * - **ecs**: server.
     * - **cloud_product**: Cloud product.
     * 
     */
    public Optional<String> machineTypes() {
        return Optional.ofNullable(this.machineTypes);
    }

    /**
     * Specifies whether to internationalize the name of the default group. Default value: false
     * 
     */
    @Import(name="noGroupTrace")
    private @Nullable Boolean noGroupTrace;

    /**
     * @return Specifies whether to internationalize the name of the default group. Default value: false
     * 
     */
    public Optional<Boolean> noGroupTrace() {
        return Optional.ofNullable(this.noGroupTrace);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    @Import(name="pageNumber")
    private @Nullable Integer pageNumber;

    public Optional<Integer> pageNumber() {
        return Optional.ofNullable(this.pageNumber);
    }

    @Import(name="pageSize")
    private @Nullable Integer pageSize;

    public Optional<Integer> pageSize() {
        return Optional.ofNullable(this.pageSize);
    }

    private GetAssetsPlainArgs() {}

    private GetAssetsPlainArgs(GetAssetsPlainArgs $) {
        this.criteria = $.criteria;
        this.ids = $.ids;
        this.importance = $.importance;
        this.logicalExp = $.logicalExp;
        this.machineTypes = $.machineTypes;
        this.noGroupTrace = $.noGroupTrace;
        this.outputFile = $.outputFile;
        this.pageNumber = $.pageNumber;
        this.pageSize = $.pageSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAssetsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAssetsPlainArgs $;

        public Builder() {
            $ = new GetAssetsPlainArgs();
        }

        public Builder(GetAssetsPlainArgs defaults) {
            $ = new GetAssetsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param criteria Set the conditions for searching assets. This parameter is in JSON format. Note the case when you enter the parameter. **NOTE:** You can search for assets by using conditions such as the instance ID, instance name, VPC ID, region, and public IP address of the asset.
         * 
         * @return builder
         * 
         */
        public Builder criteria(@Nullable String criteria) {
            $.criteria = criteria;
            return this;
        }

        /**
         * @param ids A list of Asset IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Asset IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param importance Set asset importance. Value:
         * - **2**: Significant assets
         * - **1**: General assets
         * - **0**: Test asset
         * 
         * @return builder
         * 
         */
        public Builder importance(@Nullable Integer importance) {
            $.importance = importance;
            return this;
        }

        /**
         * @param logicalExp Set the logical relationship between multiple search conditions. The default value is **OR**. Valid values:
         * - **OR**: indicates that the relationship between multiple search conditions is **OR**.
         * - **AND**: indicates that the relationship between multiple search conditions is **AND**.
         * 
         * @return builder
         * 
         */
        public Builder logicalExp(@Nullable String logicalExp) {
            $.logicalExp = logicalExp;
            return this;
        }

        /**
         * @param machineTypes The type of asset to query. Value:
         * - **ecs**: server.
         * - **cloud_product**: Cloud product.
         * 
         * @return builder
         * 
         */
        public Builder machineTypes(@Nullable String machineTypes) {
            $.machineTypes = machineTypes;
            return this;
        }

        /**
         * @param noGroupTrace Specifies whether to internationalize the name of the default group. Default value: false
         * 
         * @return builder
         * 
         */
        public Builder noGroupTrace(@Nullable Boolean noGroupTrace) {
            $.noGroupTrace = noGroupTrace;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        public Builder pageNumber(@Nullable Integer pageNumber) {
            $.pageNumber = pageNumber;
            return this;
        }

        public Builder pageSize(@Nullable Integer pageSize) {
            $.pageSize = pageSize;
            return this;
        }

        public GetAssetsPlainArgs build() {
            return $;
        }
    }

}
