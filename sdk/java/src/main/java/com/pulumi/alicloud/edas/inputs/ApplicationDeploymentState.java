// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.edas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationDeploymentState extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationDeploymentState Empty = new ApplicationDeploymentState();

    /**
     * The ID of the application that you want to deploy.
     * 
     */
    @Import(name="appId")
    private @Nullable Output<String> appId;

    /**
     * @return The ID of the application that you want to deploy.
     * 
     */
    public Optional<Output<String>> appId() {
        return Optional.ofNullable(this.appId);
    }

    /**
     * The ID of the instance group where the application is going to be deployed. Set this parameter to all if you want to deploy the application to all groups.
     * 
     */
    @Import(name="groupId")
    private @Nullable Output<String> groupId;

    /**
     * @return The ID of the instance group where the application is going to be deployed. Set this parameter to all if you want to deploy the application to all groups.
     * 
     */
    public Optional<Output<String>> groupId() {
        return Optional.ofNullable(this.groupId);
    }

    /**
     * Last package version deployed.
     * 
     */
    @Import(name="lastPackageVersion")
    private @Nullable Output<String> lastPackageVersion;

    /**
     * @return Last package version deployed.
     * 
     */
    public Optional<Output<String>> lastPackageVersion() {
        return Optional.ofNullable(this.lastPackageVersion);
    }

    /**
     * The version of the application that you want to deploy. It must be unique for every application. The length cannot exceed 64 characters. We recommended you to use a timestamp.
     * 
     */
    @Import(name="packageVersion")
    private @Nullable Output<String> packageVersion;

    /**
     * @return The version of the application that you want to deploy. It must be unique for every application. The length cannot exceed 64 characters. We recommended you to use a timestamp.
     * 
     */
    public Optional<Output<String>> packageVersion() {
        return Optional.ofNullable(this.packageVersion);
    }

    /**
     * The address to store the uploaded web application (WAR) package for application deployment. This parameter is required when the deployType parameter is set as url.
     * 
     */
    @Import(name="warUrl")
    private @Nullable Output<String> warUrl;

    /**
     * @return The address to store the uploaded web application (WAR) package for application deployment. This parameter is required when the deployType parameter is set as url.
     * 
     */
    public Optional<Output<String>> warUrl() {
        return Optional.ofNullable(this.warUrl);
    }

    private ApplicationDeploymentState() {}

    private ApplicationDeploymentState(ApplicationDeploymentState $) {
        this.appId = $.appId;
        this.groupId = $.groupId;
        this.lastPackageVersion = $.lastPackageVersion;
        this.packageVersion = $.packageVersion;
        this.warUrl = $.warUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationDeploymentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationDeploymentState $;

        public Builder() {
            $ = new ApplicationDeploymentState();
        }

        public Builder(ApplicationDeploymentState defaults) {
            $ = new ApplicationDeploymentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param appId The ID of the application that you want to deploy.
         * 
         * @return builder
         * 
         */
        public Builder appId(@Nullable Output<String> appId) {
            $.appId = appId;
            return this;
        }

        /**
         * @param appId The ID of the application that you want to deploy.
         * 
         * @return builder
         * 
         */
        public Builder appId(String appId) {
            return appId(Output.of(appId));
        }

        /**
         * @param groupId The ID of the instance group where the application is going to be deployed. Set this parameter to all if you want to deploy the application to all groups.
         * 
         * @return builder
         * 
         */
        public Builder groupId(@Nullable Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId The ID of the instance group where the application is going to be deployed. Set this parameter to all if you want to deploy the application to all groups.
         * 
         * @return builder
         * 
         */
        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param lastPackageVersion Last package version deployed.
         * 
         * @return builder
         * 
         */
        public Builder lastPackageVersion(@Nullable Output<String> lastPackageVersion) {
            $.lastPackageVersion = lastPackageVersion;
            return this;
        }

        /**
         * @param lastPackageVersion Last package version deployed.
         * 
         * @return builder
         * 
         */
        public Builder lastPackageVersion(String lastPackageVersion) {
            return lastPackageVersion(Output.of(lastPackageVersion));
        }

        /**
         * @param packageVersion The version of the application that you want to deploy. It must be unique for every application. The length cannot exceed 64 characters. We recommended you to use a timestamp.
         * 
         * @return builder
         * 
         */
        public Builder packageVersion(@Nullable Output<String> packageVersion) {
            $.packageVersion = packageVersion;
            return this;
        }

        /**
         * @param packageVersion The version of the application that you want to deploy. It must be unique for every application. The length cannot exceed 64 characters. We recommended you to use a timestamp.
         * 
         * @return builder
         * 
         */
        public Builder packageVersion(String packageVersion) {
            return packageVersion(Output.of(packageVersion));
        }

        /**
         * @param warUrl The address to store the uploaded web application (WAR) package for application deployment. This parameter is required when the deployType parameter is set as url.
         * 
         * @return builder
         * 
         */
        public Builder warUrl(@Nullable Output<String> warUrl) {
            $.warUrl = warUrl;
            return this;
        }

        /**
         * @param warUrl The address to store the uploaded web application (WAR) package for application deployment. This parameter is required when the deployType parameter is set as url.
         * 
         * @return builder
         * 
         */
        public Builder warUrl(String warUrl) {
            return warUrl(Output.of(warUrl));
        }

        public ApplicationDeploymentState build() {
            return $;
        }
    }

}
