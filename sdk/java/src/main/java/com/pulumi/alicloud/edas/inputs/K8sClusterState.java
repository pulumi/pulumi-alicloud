// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.edas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class K8sClusterState extends com.pulumi.resources.ResourceArgs {

    public static final K8sClusterState Empty = new K8sClusterState();

    /**
     * The import status of cluster:
     * `1`: success.
     * `2`: failed.
     * `3`: importing.
     * `4`: deleted.
     * 
     */
    @Import(name="clusterImportStatus")
    private @Nullable Output<Integer> clusterImportStatus;

    /**
     * @return The import status of cluster:
     * `1`: success.
     * `2`: failed.
     * `3`: importing.
     * `4`: deleted.
     * 
     */
    public Optional<Output<Integer>> clusterImportStatus() {
        return Optional.ofNullable(this.clusterImportStatus);
    }

    /**
     * The name of the cluster that you want to create.
     * 
     */
    @Import(name="clusterName")
    private @Nullable Output<String> clusterName;

    /**
     * @return The name of the cluster that you want to create.
     * 
     */
    public Optional<Output<String>> clusterName() {
        return Optional.ofNullable(this.clusterName);
    }

    /**
     * The type of the cluster that you want to create. Valid values only: 5: K8s cluster.
     * 
     */
    @Import(name="clusterType")
    private @Nullable Output<Integer> clusterType;

    /**
     * @return The type of the cluster that you want to create. Valid values only: 5: K8s cluster.
     * 
     */
    public Optional<Output<Integer>> clusterType() {
        return Optional.ofNullable(this.clusterType);
    }

    /**
     * The ID of the alicloud container service kubernetes cluster that you want to import.
     * 
     */
    @Import(name="csClusterId")
    private @Nullable Output<String> csClusterId;

    /**
     * @return The ID of the alicloud container service kubernetes cluster that you want to import.
     * 
     */
    public Optional<Output<String>> csClusterId() {
        return Optional.ofNullable(this.csClusterId);
    }

    /**
     * The ID of the namespace where you want to import. You can call the [ListUserDefineRegion](https://www.alibabacloud.com/help/en/doc-detail/149377.htm?spm=a2c63.p38356.879954.34.331054faK2yNvC#doc-api-Edas-ListUserDefineRegion) operation to query the namespace ID.
     * 
     */
    @Import(name="namespaceId")
    private @Nullable Output<String> namespaceId;

    /**
     * @return The ID of the namespace where you want to import. You can call the [ListUserDefineRegion](https://www.alibabacloud.com/help/en/doc-detail/149377.htm?spm=a2c63.p38356.879954.34.331054faK2yNvC#doc-api-Edas-ListUserDefineRegion) operation to query the namespace ID.
     * 
     */
    public Optional<Output<String>> namespaceId() {
        return Optional.ofNullable(this.namespaceId);
    }

    /**
     * The network type of the cluster that you want to create. Valid values: 1: classic network. 2: VPC.
     * 
     */
    @Import(name="networkMode")
    private @Nullable Output<Integer> networkMode;

    /**
     * @return The network type of the cluster that you want to create. Valid values: 1: classic network. 2: VPC.
     * 
     */
    public Optional<Output<Integer>> networkMode() {
        return Optional.ofNullable(this.networkMode);
    }

    /**
     * The ID of the Virtual Private Cloud (VPC) for the cluster.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The ID of the Virtual Private Cloud (VPC) for the cluster.
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private K8sClusterState() {}

    private K8sClusterState(K8sClusterState $) {
        this.clusterImportStatus = $.clusterImportStatus;
        this.clusterName = $.clusterName;
        this.clusterType = $.clusterType;
        this.csClusterId = $.csClusterId;
        this.namespaceId = $.namespaceId;
        this.networkMode = $.networkMode;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(K8sClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private K8sClusterState $;

        public Builder() {
            $ = new K8sClusterState();
        }

        public Builder(K8sClusterState defaults) {
            $ = new K8sClusterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterImportStatus The import status of cluster:
         * `1`: success.
         * `2`: failed.
         * `3`: importing.
         * `4`: deleted.
         * 
         * @return builder
         * 
         */
        public Builder clusterImportStatus(@Nullable Output<Integer> clusterImportStatus) {
            $.clusterImportStatus = clusterImportStatus;
            return this;
        }

        /**
         * @param clusterImportStatus The import status of cluster:
         * `1`: success.
         * `2`: failed.
         * `3`: importing.
         * `4`: deleted.
         * 
         * @return builder
         * 
         */
        public Builder clusterImportStatus(Integer clusterImportStatus) {
            return clusterImportStatus(Output.of(clusterImportStatus));
        }

        /**
         * @param clusterName The name of the cluster that you want to create.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(@Nullable Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterName The name of the cluster that you want to create.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        /**
         * @param clusterType The type of the cluster that you want to create. Valid values only: 5: K8s cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterType(@Nullable Output<Integer> clusterType) {
            $.clusterType = clusterType;
            return this;
        }

        /**
         * @param clusterType The type of the cluster that you want to create. Valid values only: 5: K8s cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterType(Integer clusterType) {
            return clusterType(Output.of(clusterType));
        }

        /**
         * @param csClusterId The ID of the alicloud container service kubernetes cluster that you want to import.
         * 
         * @return builder
         * 
         */
        public Builder csClusterId(@Nullable Output<String> csClusterId) {
            $.csClusterId = csClusterId;
            return this;
        }

        /**
         * @param csClusterId The ID of the alicloud container service kubernetes cluster that you want to import.
         * 
         * @return builder
         * 
         */
        public Builder csClusterId(String csClusterId) {
            return csClusterId(Output.of(csClusterId));
        }

        /**
         * @param namespaceId The ID of the namespace where you want to import. You can call the [ListUserDefineRegion](https://www.alibabacloud.com/help/en/doc-detail/149377.htm?spm=a2c63.p38356.879954.34.331054faK2yNvC#doc-api-Edas-ListUserDefineRegion) operation to query the namespace ID.
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(@Nullable Output<String> namespaceId) {
            $.namespaceId = namespaceId;
            return this;
        }

        /**
         * @param namespaceId The ID of the namespace where you want to import. You can call the [ListUserDefineRegion](https://www.alibabacloud.com/help/en/doc-detail/149377.htm?spm=a2c63.p38356.879954.34.331054faK2yNvC#doc-api-Edas-ListUserDefineRegion) operation to query the namespace ID.
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(String namespaceId) {
            return namespaceId(Output.of(namespaceId));
        }

        /**
         * @param networkMode The network type of the cluster that you want to create. Valid values: 1: classic network. 2: VPC.
         * 
         * @return builder
         * 
         */
        public Builder networkMode(@Nullable Output<Integer> networkMode) {
            $.networkMode = networkMode;
            return this;
        }

        /**
         * @param networkMode The network type of the cluster that you want to create. Valid values: 1: classic network. 2: VPC.
         * 
         * @return builder
         * 
         */
        public Builder networkMode(Integer networkMode) {
            return networkMode(Output.of(networkMode));
        }

        /**
         * @param vpcId The ID of the Virtual Private Cloud (VPC) for the cluster.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The ID of the Virtual Private Cloud (VPC) for the cluster.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public K8sClusterState build() {
            return $;
        }
    }

}
