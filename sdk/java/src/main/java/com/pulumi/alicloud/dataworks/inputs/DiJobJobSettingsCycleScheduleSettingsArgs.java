// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dataworks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DiJobJobSettingsCycleScheduleSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DiJobJobSettingsCycleScheduleSettingsArgs Empty = new DiJobJobSettingsCycleScheduleSettingsArgs();

    /**
     * The type of synchronization that requires periodic scheduling. Value range:
     * 
     * Full: Full
     * 
     * OfflineIncremental: offline increment
     * 
     */
    @Import(name="cycleMigrationType")
    private @Nullable Output<String> cycleMigrationType;

    /**
     * @return The type of synchronization that requires periodic scheduling. Value range:
     * 
     * Full: Full
     * 
     * OfflineIncremental: offline increment
     * 
     */
    public Optional<Output<String>> cycleMigrationType() {
        return Optional.ofNullable(this.cycleMigrationType);
    }

    /**
     * Scheduling Parameters
     * 
     */
    @Import(name="scheduleParameters")
    private @Nullable Output<String> scheduleParameters;

    /**
     * @return Scheduling Parameters
     * 
     */
    public Optional<Output<String>> scheduleParameters() {
        return Optional.ofNullable(this.scheduleParameters);
    }

    private DiJobJobSettingsCycleScheduleSettingsArgs() {}

    private DiJobJobSettingsCycleScheduleSettingsArgs(DiJobJobSettingsCycleScheduleSettingsArgs $) {
        this.cycleMigrationType = $.cycleMigrationType;
        this.scheduleParameters = $.scheduleParameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiJobJobSettingsCycleScheduleSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiJobJobSettingsCycleScheduleSettingsArgs $;

        public Builder() {
            $ = new DiJobJobSettingsCycleScheduleSettingsArgs();
        }

        public Builder(DiJobJobSettingsCycleScheduleSettingsArgs defaults) {
            $ = new DiJobJobSettingsCycleScheduleSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cycleMigrationType The type of synchronization that requires periodic scheduling. Value range:
         * 
         * Full: Full
         * 
         * OfflineIncremental: offline increment
         * 
         * @return builder
         * 
         */
        public Builder cycleMigrationType(@Nullable Output<String> cycleMigrationType) {
            $.cycleMigrationType = cycleMigrationType;
            return this;
        }

        /**
         * @param cycleMigrationType The type of synchronization that requires periodic scheduling. Value range:
         * 
         * Full: Full
         * 
         * OfflineIncremental: offline increment
         * 
         * @return builder
         * 
         */
        public Builder cycleMigrationType(String cycleMigrationType) {
            return cycleMigrationType(Output.of(cycleMigrationType));
        }

        /**
         * @param scheduleParameters Scheduling Parameters
         * 
         * @return builder
         * 
         */
        public Builder scheduleParameters(@Nullable Output<String> scheduleParameters) {
            $.scheduleParameters = scheduleParameters;
            return this;
        }

        /**
         * @param scheduleParameters Scheduling Parameters
         * 
         * @return builder
         * 
         */
        public Builder scheduleParameters(String scheduleParameters) {
            return scheduleParameters(Output.of(scheduleParameters));
        }

        public DiJobJobSettingsCycleScheduleSettingsArgs build() {
            return $;
        }
    }

}
