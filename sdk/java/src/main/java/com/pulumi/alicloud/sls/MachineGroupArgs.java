// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sls;

import com.pulumi.alicloud.sls.inputs.MachineGroupGroupAttributeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MachineGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final MachineGroupArgs Empty = new MachineGroupArgs();

    /**
     * Properties of machine groups. For details, please refer to the groupAttribute parameter description in the following table. See `group_attribute` below.
     * 
     */
    @Import(name="groupAttribute")
    private @Nullable Output<MachineGroupGroupAttributeArgs> groupAttribute;

    /**
     * @return Properties of machine groups. For details, please refer to the groupAttribute parameter description in the following table. See `group_attribute` below.
     * 
     */
    public Optional<Output<MachineGroupGroupAttributeArgs>> groupAttribute() {
        return Optional.ofNullable(this.groupAttribute);
    }

    /**
     * Machine Group name
     * 
     */
    @Import(name="groupName", required=true)
    private Output<String> groupName;

    /**
     * @return Machine Group name
     * 
     */
    public Output<String> groupName() {
        return this.groupName;
    }

    /**
     * Machine group type, optional value is empty.
     * 
     */
    @Import(name="groupType")
    private @Nullable Output<String> groupType;

    /**
     * @return Machine group type, optional value is empty.
     * 
     */
    public Optional<Output<String>> groupType() {
        return Optional.ofNullable(this.groupType);
    }

    /**
     * Machine identification type.
     * - ip: ip address Machine Group.
     * - userdefined: user-defined identity Machine Group.
     * 
     */
    @Import(name="machineIdentifyType", required=true)
    private Output<String> machineIdentifyType;

    /**
     * @return Machine identification type.
     * - ip: ip address Machine Group.
     * - userdefined: user-defined identity Machine Group.
     * 
     */
    public Output<String> machineIdentifyType() {
        return this.machineIdentifyType;
    }

    /**
     * The identification information of the machine group.
     * - If machineidentifiytype is configured to ip, enter the ip address of the server.
     * - If machineidentifiytype is configured to userdefined, enter a custom identifier here.
     * 
     */
    @Import(name="machineLists", required=true)
    private Output<List<String>> machineLists;

    /**
     * @return The identification information of the machine group.
     * - If machineidentifiytype is configured to ip, enter the ip address of the server.
     * - If machineidentifiytype is configured to userdefined, enter a custom identifier here.
     * 
     */
    public Output<List<String>> machineLists() {
        return this.machineLists;
    }

    /**
     * Project name
     * 
     */
    @Import(name="projectName", required=true)
    private Output<String> projectName;

    /**
     * @return Project name
     * 
     */
    public Output<String> projectName() {
        return this.projectName;
    }

    private MachineGroupArgs() {}

    private MachineGroupArgs(MachineGroupArgs $) {
        this.groupAttribute = $.groupAttribute;
        this.groupName = $.groupName;
        this.groupType = $.groupType;
        this.machineIdentifyType = $.machineIdentifyType;
        this.machineLists = $.machineLists;
        this.projectName = $.projectName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MachineGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MachineGroupArgs $;

        public Builder() {
            $ = new MachineGroupArgs();
        }

        public Builder(MachineGroupArgs defaults) {
            $ = new MachineGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupAttribute Properties of machine groups. For details, please refer to the groupAttribute parameter description in the following table. See `group_attribute` below.
         * 
         * @return builder
         * 
         */
        public Builder groupAttribute(@Nullable Output<MachineGroupGroupAttributeArgs> groupAttribute) {
            $.groupAttribute = groupAttribute;
            return this;
        }

        /**
         * @param groupAttribute Properties of machine groups. For details, please refer to the groupAttribute parameter description in the following table. See `group_attribute` below.
         * 
         * @return builder
         * 
         */
        public Builder groupAttribute(MachineGroupGroupAttributeArgs groupAttribute) {
            return groupAttribute(Output.of(groupAttribute));
        }

        /**
         * @param groupName Machine Group name
         * 
         * @return builder
         * 
         */
        public Builder groupName(Output<String> groupName) {
            $.groupName = groupName;
            return this;
        }

        /**
         * @param groupName Machine Group name
         * 
         * @return builder
         * 
         */
        public Builder groupName(String groupName) {
            return groupName(Output.of(groupName));
        }

        /**
         * @param groupType Machine group type, optional value is empty.
         * 
         * @return builder
         * 
         */
        public Builder groupType(@Nullable Output<String> groupType) {
            $.groupType = groupType;
            return this;
        }

        /**
         * @param groupType Machine group type, optional value is empty.
         * 
         * @return builder
         * 
         */
        public Builder groupType(String groupType) {
            return groupType(Output.of(groupType));
        }

        /**
         * @param machineIdentifyType Machine identification type.
         * - ip: ip address Machine Group.
         * - userdefined: user-defined identity Machine Group.
         * 
         * @return builder
         * 
         */
        public Builder machineIdentifyType(Output<String> machineIdentifyType) {
            $.machineIdentifyType = machineIdentifyType;
            return this;
        }

        /**
         * @param machineIdentifyType Machine identification type.
         * - ip: ip address Machine Group.
         * - userdefined: user-defined identity Machine Group.
         * 
         * @return builder
         * 
         */
        public Builder machineIdentifyType(String machineIdentifyType) {
            return machineIdentifyType(Output.of(machineIdentifyType));
        }

        /**
         * @param machineLists The identification information of the machine group.
         * - If machineidentifiytype is configured to ip, enter the ip address of the server.
         * - If machineidentifiytype is configured to userdefined, enter a custom identifier here.
         * 
         * @return builder
         * 
         */
        public Builder machineLists(Output<List<String>> machineLists) {
            $.machineLists = machineLists;
            return this;
        }

        /**
         * @param machineLists The identification information of the machine group.
         * - If machineidentifiytype is configured to ip, enter the ip address of the server.
         * - If machineidentifiytype is configured to userdefined, enter a custom identifier here.
         * 
         * @return builder
         * 
         */
        public Builder machineLists(List<String> machineLists) {
            return machineLists(Output.of(machineLists));
        }

        /**
         * @param machineLists The identification information of the machine group.
         * - If machineidentifiytype is configured to ip, enter the ip address of the server.
         * - If machineidentifiytype is configured to userdefined, enter a custom identifier here.
         * 
         * @return builder
         * 
         */
        public Builder machineLists(String... machineLists) {
            return machineLists(List.of(machineLists));
        }

        /**
         * @param projectName Project name
         * 
         * @return builder
         * 
         */
        public Builder projectName(Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param projectName Project name
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        public MachineGroupArgs build() {
            if ($.groupName == null) {
                throw new MissingRequiredPropertyException("MachineGroupArgs", "groupName");
            }
            if ($.machineIdentifyType == null) {
                throw new MissingRequiredPropertyException("MachineGroupArgs", "machineIdentifyType");
            }
            if ($.machineLists == null) {
                throw new MissingRequiredPropertyException("MachineGroupArgs", "machineLists");
            }
            if ($.projectName == null) {
                throw new MissingRequiredPropertyException("MachineGroupArgs", "projectName");
            }
            return $;
        }
    }

}
