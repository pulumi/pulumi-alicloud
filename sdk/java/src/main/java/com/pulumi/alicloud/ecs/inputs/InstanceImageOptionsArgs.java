// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceImageOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceImageOptionsArgs Empty = new InstanceImageOptionsArgs();

    /**
     * Whether to allow the instance logging in with the ecs-user user.
     * 
     */
    @Import(name="loginAsNonRoot")
    private @Nullable Output<Boolean> loginAsNonRoot;

    /**
     * @return Whether to allow the instance logging in with the ecs-user user.
     * 
     */
    public Optional<Output<Boolean>> loginAsNonRoot() {
        return Optional.ofNullable(this.loginAsNonRoot);
    }

    private InstanceImageOptionsArgs() {}

    private InstanceImageOptionsArgs(InstanceImageOptionsArgs $) {
        this.loginAsNonRoot = $.loginAsNonRoot;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceImageOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceImageOptionsArgs $;

        public Builder() {
            $ = new InstanceImageOptionsArgs();
        }

        public Builder(InstanceImageOptionsArgs defaults) {
            $ = new InstanceImageOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param loginAsNonRoot Whether to allow the instance logging in with the ecs-user user.
         * 
         * @return builder
         * 
         */
        public Builder loginAsNonRoot(@Nullable Output<Boolean> loginAsNonRoot) {
            $.loginAsNonRoot = loginAsNonRoot;
            return this;
        }

        /**
         * @param loginAsNonRoot Whether to allow the instance logging in with the ecs-user user.
         * 
         * @return builder
         * 
         */
        public Builder loginAsNonRoot(Boolean loginAsNonRoot) {
            return loginAsNonRoot(Output.of(loginAsNonRoot));
        }

        public InstanceImageOptionsArgs build() {
            return $;
        }
    }

}
