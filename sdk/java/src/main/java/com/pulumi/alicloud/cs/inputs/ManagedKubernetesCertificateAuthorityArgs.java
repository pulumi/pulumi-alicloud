// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedKubernetesCertificateAuthorityArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedKubernetesCertificateAuthorityArgs Empty = new ManagedKubernetesCertificateAuthorityArgs();

    /**
     * The path of client certificate, like `~/.kube/client-cert.pem`.
     * 
     */
    @Import(name="clientCert")
    private @Nullable Output<String> clientCert;

    /**
     * @return The path of client certificate, like `~/.kube/client-cert.pem`.
     * 
     */
    public Optional<Output<String>> clientCert() {
        return Optional.ofNullable(this.clientCert);
    }

    /**
     * The path of client key, like `~/.kube/client-key.pem`.
     * 
     */
    @Import(name="clientKey")
    private @Nullable Output<String> clientKey;

    /**
     * @return The path of client key, like `~/.kube/client-key.pem`.
     * 
     */
    public Optional<Output<String>> clientKey() {
        return Optional.ofNullable(this.clientKey);
    }

    /**
     * The base64 encoded cluster certificate data required to communicate with your cluster. Add this to the certificate-authority-data section of the kubeconfig file for your cluster.
     * 
     */
    @Import(name="clusterCert")
    private @Nullable Output<String> clusterCert;

    /**
     * @return The base64 encoded cluster certificate data required to communicate with your cluster. Add this to the certificate-authority-data section of the kubeconfig file for your cluster.
     * 
     */
    public Optional<Output<String>> clusterCert() {
        return Optional.ofNullable(this.clusterCert);
    }

    private ManagedKubernetesCertificateAuthorityArgs() {}

    private ManagedKubernetesCertificateAuthorityArgs(ManagedKubernetesCertificateAuthorityArgs $) {
        this.clientCert = $.clientCert;
        this.clientKey = $.clientKey;
        this.clusterCert = $.clusterCert;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedKubernetesCertificateAuthorityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedKubernetesCertificateAuthorityArgs $;

        public Builder() {
            $ = new ManagedKubernetesCertificateAuthorityArgs();
        }

        public Builder(ManagedKubernetesCertificateAuthorityArgs defaults) {
            $ = new ManagedKubernetesCertificateAuthorityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientCert The path of client certificate, like `~/.kube/client-cert.pem`.
         * 
         * @return builder
         * 
         */
        public Builder clientCert(@Nullable Output<String> clientCert) {
            $.clientCert = clientCert;
            return this;
        }

        /**
         * @param clientCert The path of client certificate, like `~/.kube/client-cert.pem`.
         * 
         * @return builder
         * 
         */
        public Builder clientCert(String clientCert) {
            return clientCert(Output.of(clientCert));
        }

        /**
         * @param clientKey The path of client key, like `~/.kube/client-key.pem`.
         * 
         * @return builder
         * 
         */
        public Builder clientKey(@Nullable Output<String> clientKey) {
            $.clientKey = clientKey;
            return this;
        }

        /**
         * @param clientKey The path of client key, like `~/.kube/client-key.pem`.
         * 
         * @return builder
         * 
         */
        public Builder clientKey(String clientKey) {
            return clientKey(Output.of(clientKey));
        }

        /**
         * @param clusterCert The base64 encoded cluster certificate data required to communicate with your cluster. Add this to the certificate-authority-data section of the kubeconfig file for your cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterCert(@Nullable Output<String> clusterCert) {
            $.clusterCert = clusterCert;
            return this;
        }

        /**
         * @param clusterCert The base64 encoded cluster certificate data required to communicate with your cluster. Add this to the certificate-authority-data section of the kubeconfig file for your cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterCert(String clusterCert) {
            return clusterCert(Output.of(clusterCert));
        }

        public ManagedKubernetesCertificateAuthorityArgs build() {
            return $;
        }
    }

}
