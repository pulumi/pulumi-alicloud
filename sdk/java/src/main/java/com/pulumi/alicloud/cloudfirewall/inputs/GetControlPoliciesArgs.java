// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudfirewall.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetControlPoliciesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetControlPoliciesArgs Empty = new GetControlPoliciesArgs();

    /**
     * The action that Cloud Firewall performs on the traffic. Valid values: `accept`, `drop`, `log`.
     * 
     */
    @Import(name="aclAction")
    private @Nullable Output<String> aclAction;

    /**
     * @return The action that Cloud Firewall performs on the traffic. Valid values: `accept`, `drop`, `log`.
     * 
     */
    public Optional<Output<String>> aclAction() {
        return Optional.ofNullable(this.aclAction);
    }

    /**
     * The unique ID of the access control policy.
     * 
     */
    @Import(name="aclUuid")
    private @Nullable Output<String> aclUuid;

    /**
     * @return The unique ID of the access control policy.
     * 
     */
    public Optional<Output<String>> aclUuid() {
        return Optional.ofNullable(this.aclUuid);
    }

    /**
     * The description of the access control policy.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the access control policy.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The destination address defined in the access control policy.
     * 
     */
    @Import(name="destination")
    private @Nullable Output<String> destination;

    /**
     * @return The destination address defined in the access control policy.
     * 
     */
    public Optional<Output<String>> destination() {
        return Optional.ofNullable(this.destination);
    }

    /**
     * The direction of the traffic to which the access control policy applies. Valid values: `in`, `out`.
     * 
     */
    @Import(name="direction", required=true)
    private Output<String> direction;

    /**
     * @return The direction of the traffic to which the access control policy applies. Valid values: `in`, `out`.
     * 
     */
    public Output<String> direction() {
        return this.direction;
    }

    /**
     * The IP version of the address in the access control policy.
     * 
     */
    @Import(name="ipVersion")
    private @Nullable Output<String> ipVersion;

    /**
     * @return The IP version of the address in the access control policy.
     * 
     */
    public Optional<Output<String>> ipVersion() {
        return Optional.ofNullable(this.ipVersion);
    }

    /**
     * The language of the content within the response. Valid values: `en`, `zh`.
     * 
     */
    @Import(name="lang")
    private @Nullable Output<String> lang;

    /**
     * @return The language of the content within the response. Valid values: `en`, `zh`.
     * 
     */
    public Optional<Output<String>> lang() {
        return Optional.ofNullable(this.lang);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The type of the protocol in the access control policy. Valid values: If `direction` is  `in`, the valid value is `ANY`. If `direction` is `out`, the valid values are `ANY`, `TCP`, `UDP`, `ICMP`.
     * 
     */
    @Import(name="proto")
    private @Nullable Output<String> proto;

    /**
     * @return The type of the protocol in the access control policy. Valid values: If `direction` is  `in`, the valid value is `ANY`. If `direction` is `out`, the valid values are `ANY`, `TCP`, `UDP`, `ICMP`.
     * 
     */
    public Optional<Output<String>> proto() {
        return Optional.ofNullable(this.proto);
    }

    /**
     * The source address in the access control policy.
     * 
     */
    @Import(name="source")
    private @Nullable Output<String> source;

    /**
     * @return The source address in the access control policy.
     * 
     */
    public Optional<Output<String>> source() {
        return Optional.ofNullable(this.source);
    }

    private GetControlPoliciesArgs() {}

    private GetControlPoliciesArgs(GetControlPoliciesArgs $) {
        this.aclAction = $.aclAction;
        this.aclUuid = $.aclUuid;
        this.description = $.description;
        this.destination = $.destination;
        this.direction = $.direction;
        this.ipVersion = $.ipVersion;
        this.lang = $.lang;
        this.outputFile = $.outputFile;
        this.proto = $.proto;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetControlPoliciesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetControlPoliciesArgs $;

        public Builder() {
            $ = new GetControlPoliciesArgs();
        }

        public Builder(GetControlPoliciesArgs defaults) {
            $ = new GetControlPoliciesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aclAction The action that Cloud Firewall performs on the traffic. Valid values: `accept`, `drop`, `log`.
         * 
         * @return builder
         * 
         */
        public Builder aclAction(@Nullable Output<String> aclAction) {
            $.aclAction = aclAction;
            return this;
        }

        /**
         * @param aclAction The action that Cloud Firewall performs on the traffic. Valid values: `accept`, `drop`, `log`.
         * 
         * @return builder
         * 
         */
        public Builder aclAction(String aclAction) {
            return aclAction(Output.of(aclAction));
        }

        /**
         * @param aclUuid The unique ID of the access control policy.
         * 
         * @return builder
         * 
         */
        public Builder aclUuid(@Nullable Output<String> aclUuid) {
            $.aclUuid = aclUuid;
            return this;
        }

        /**
         * @param aclUuid The unique ID of the access control policy.
         * 
         * @return builder
         * 
         */
        public Builder aclUuid(String aclUuid) {
            return aclUuid(Output.of(aclUuid));
        }

        /**
         * @param description The description of the access control policy.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the access control policy.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param destination The destination address defined in the access control policy.
         * 
         * @return builder
         * 
         */
        public Builder destination(@Nullable Output<String> destination) {
            $.destination = destination;
            return this;
        }

        /**
         * @param destination The destination address defined in the access control policy.
         * 
         * @return builder
         * 
         */
        public Builder destination(String destination) {
            return destination(Output.of(destination));
        }

        /**
         * @param direction The direction of the traffic to which the access control policy applies. Valid values: `in`, `out`.
         * 
         * @return builder
         * 
         */
        public Builder direction(Output<String> direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param direction The direction of the traffic to which the access control policy applies. Valid values: `in`, `out`.
         * 
         * @return builder
         * 
         */
        public Builder direction(String direction) {
            return direction(Output.of(direction));
        }

        /**
         * @param ipVersion The IP version of the address in the access control policy.
         * 
         * @return builder
         * 
         */
        public Builder ipVersion(@Nullable Output<String> ipVersion) {
            $.ipVersion = ipVersion;
            return this;
        }

        /**
         * @param ipVersion The IP version of the address in the access control policy.
         * 
         * @return builder
         * 
         */
        public Builder ipVersion(String ipVersion) {
            return ipVersion(Output.of(ipVersion));
        }

        /**
         * @param lang The language of the content within the response. Valid values: `en`, `zh`.
         * 
         * @return builder
         * 
         */
        public Builder lang(@Nullable Output<String> lang) {
            $.lang = lang;
            return this;
        }

        /**
         * @param lang The language of the content within the response. Valid values: `en`, `zh`.
         * 
         * @return builder
         * 
         */
        public Builder lang(String lang) {
            return lang(Output.of(lang));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        /**
         * @param proto The type of the protocol in the access control policy. Valid values: If `direction` is  `in`, the valid value is `ANY`. If `direction` is `out`, the valid values are `ANY`, `TCP`, `UDP`, `ICMP`.
         * 
         * @return builder
         * 
         */
        public Builder proto(@Nullable Output<String> proto) {
            $.proto = proto;
            return this;
        }

        /**
         * @param proto The type of the protocol in the access control policy. Valid values: If `direction` is  `in`, the valid value is `ANY`. If `direction` is `out`, the valid values are `ANY`, `TCP`, `UDP`, `ICMP`.
         * 
         * @return builder
         * 
         */
        public Builder proto(String proto) {
            return proto(Output.of(proto));
        }

        /**
         * @param source The source address in the access control policy.
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source The source address in the access control policy.
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        public GetControlPoliciesArgs build() {
            if ($.direction == null) {
                throw new MissingRequiredPropertyException("GetControlPoliciesArgs", "direction");
            }
            return $;
        }
    }

}
