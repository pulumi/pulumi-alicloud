// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eds;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserArgs Empty = new UserArgs();

    /**
     * The email of the user email.
     * 
     */
    @Import(name="email", required=true)
    private Output<String> email;

    /**
     * @return The email of the user email.
     * 
     */
    public Output<String> email() {
        return this.email;
    }

    /**
     * The Username. The custom setting is composed of lowercase letters, numbers and underscores, and the length is 3~24 characters.
     * 
     */
    @Import(name="endUserId", required=true)
    private Output<String> endUserId;

    /**
     * @return The Username. The custom setting is composed of lowercase letters, numbers and underscores, and the length is 3~24 characters.
     * 
     */
    public Output<String> endUserId() {
        return this.endUserId;
    }

    /**
     * The password of the user password.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return The password of the user password.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * The phone of the mobile phone number.
     * 
     */
    @Import(name="phone")
    private @Nullable Output<String> phone;

    /**
     * @return The phone of the mobile phone number.
     * 
     */
    public Optional<Output<String>> phone() {
        return Optional.ofNullable(this.phone);
    }

    /**
     * The status of the resource. Valid values: `Unlocked`, `Locked`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource. Valid values: `Unlocked`, `Locked`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private UserArgs() {}

    private UserArgs(UserArgs $) {
        this.email = $.email;
        this.endUserId = $.endUserId;
        this.password = $.password;
        this.phone = $.phone;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserArgs $;

        public Builder() {
            $ = new UserArgs();
        }

        public Builder(UserArgs defaults) {
            $ = new UserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param email The email of the user email.
         * 
         * @return builder
         * 
         */
        public Builder email(Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email The email of the user email.
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param endUserId The Username. The custom setting is composed of lowercase letters, numbers and underscores, and the length is 3~24 characters.
         * 
         * @return builder
         * 
         */
        public Builder endUserId(Output<String> endUserId) {
            $.endUserId = endUserId;
            return this;
        }

        /**
         * @param endUserId The Username. The custom setting is composed of lowercase letters, numbers and underscores, and the length is 3~24 characters.
         * 
         * @return builder
         * 
         */
        public Builder endUserId(String endUserId) {
            return endUserId(Output.of(endUserId));
        }

        /**
         * @param password The password of the user password.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The password of the user password.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param phone The phone of the mobile phone number.
         * 
         * @return builder
         * 
         */
        public Builder phone(@Nullable Output<String> phone) {
            $.phone = phone;
            return this;
        }

        /**
         * @param phone The phone of the mobile phone number.
         * 
         * @return builder
         * 
         */
        public Builder phone(String phone) {
            return phone(Output.of(phone));
        }

        /**
         * @param status The status of the resource. Valid values: `Unlocked`, `Locked`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource. Valid values: `Unlocked`, `Locked`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public UserArgs build() {
            if ($.email == null) {
                throw new MissingRequiredPropertyException("UserArgs", "email");
            }
            if ($.endUserId == null) {
                throw new MissingRequiredPropertyException("UserArgs", "endUserId");
            }
            return $;
        }
    }

}
