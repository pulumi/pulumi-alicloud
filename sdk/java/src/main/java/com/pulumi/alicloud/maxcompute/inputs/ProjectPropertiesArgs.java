// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.maxcompute.inputs;

import com.pulumi.alicloud.maxcompute.inputs.ProjectPropertiesEncryptionArgs;
import com.pulumi.alicloud.maxcompute.inputs.ProjectPropertiesTableLifecycleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectPropertiesArgs Empty = new ProjectPropertiesArgs();

    /**
     * Whether to allow full table scan. Default: `false`.
     * 
     */
    @Import(name="allowFullScan")
    private @Nullable Output<Boolean> allowFullScan;

    /**
     * @return Whether to allow full table scan. Default: `false`.
     * 
     */
    public Optional<Output<Boolean>> allowFullScan() {
        return Optional.ofNullable(this.allowFullScan);
    }

    /**
     * Whether to turn on Decimal2.0.
     * 
     */
    @Import(name="enableDecimal2")
    private @Nullable Output<Boolean> enableDecimal2;

    /**
     * @return Whether to turn on Decimal2.0.
     * 
     */
    public Optional<Output<Boolean>> enableDecimal2() {
        return Optional.ofNullable(this.enableDecimal2);
    }

    /**
     * Enable multi-AZ storage disaster tolerance. Valid values: `true`, `false`.
     * 
     */
    @Import(name="enableDr")
    private @Nullable Output<Boolean> enableDr;

    /**
     * @return Enable multi-AZ storage disaster tolerance. Valid values: `true`, `false`.
     * 
     */
    public Optional<Output<Boolean>> enableDr() {
        return Optional.ofNullable(this.enableDr);
    }

    /**
     * Storage encryption. For details, see [Storage Encryption](https://www.alibabacloud.com/help/en/maxcompute/security-and-compliance/storage-encryption)
     * &gt; **NOTE :**:
     * To enable storage encryption, you need to modify the parameters of the basic attributes of the MaxCompute project. This operation permission is authenticated by RAM, and you need to have the Super_Administrator role permission of the corresponding project.
     * 
     * To configure the permissions and IP whitelist parameters of the MaxCompute project, you must have the management permissions (Admin) of the corresponding project, including Super_Administrator, Admin, or custom management permissions. For more information, see the project management permissions list.
     * 
     * You can turn on storage encryption only for projects that have not turned on storage encryption. For projects that have turned on storage encryption, you cannot turn off storage encryption or change the encryption algorithm. See `encryption` below.
     * 
     */
    @Import(name="encryption")
    private @Nullable Output<ProjectPropertiesEncryptionArgs> encryption;

    /**
     * @return Storage encryption. For details, see [Storage Encryption](https://www.alibabacloud.com/help/en/maxcompute/security-and-compliance/storage-encryption)
     * &gt; **NOTE :**:
     * To enable storage encryption, you need to modify the parameters of the basic attributes of the MaxCompute project. This operation permission is authenticated by RAM, and you need to have the Super_Administrator role permission of the corresponding project.
     * 
     * To configure the permissions and IP whitelist parameters of the MaxCompute project, you must have the management permissions (Admin) of the corresponding project, including Super_Administrator, Admin, or custom management permissions. For more information, see the project management permissions list.
     * 
     * You can turn on storage encryption only for projects that have not turned on storage encryption. For projects that have turned on storage encryption, you cannot turn off storage encryption or change the encryption algorithm. See `encryption` below.
     * 
     */
    public Optional<Output<ProjectPropertiesEncryptionArgs>> encryption() {
        return Optional.ofNullable(this.encryption);
    }

    /**
     * Set the number of days to retain backup data. During this time, you can restore the current version to any backup version. The value range of days is [0,30], and the default value is 1. 0 means backup is turned off.
     * The effective policy after adjusting the backup cycle is:
     * Extend the backup cycle: The new backup cycle takes effect on the same day.
     * Shorten the backup cycle: The system will automatically delete backup data that has exceeded the retention cycle.
     * 
     */
    @Import(name="retentionDays")
    private @Nullable Output<Integer> retentionDays;

    /**
     * @return Set the number of days to retain backup data. During this time, you can restore the current version to any backup version. The value range of days is [0,30], and the default value is 1. 0 means backup is turned off.
     * The effective policy after adjusting the backup cycle is:
     * Extend the backup cycle: The new backup cycle takes effect on the same day.
     * Shorten the backup cycle: The system will automatically delete backup data that has exceeded the retention cycle.
     * 
     */
    public Optional<Output<Integer>> retentionDays() {
        return Optional.ofNullable(this.retentionDays);
    }

    /**
     * Set the maximum threshold for single SQL Consumption, that is, set the ODPS. SQL. metering.value.max attribute. For more information, see [Consumption control](https://www.alibabacloud.com/help/en/maxcompute/product-overview/consumption-control).
     * Unit: scan volume (GB)* complexity.
     * 
     */
    @Import(name="sqlMeteringMax")
    private @Nullable Output<String> sqlMeteringMax;

    /**
     * @return Set the maximum threshold for single SQL Consumption, that is, set the ODPS. SQL. metering.value.max attribute. For more information, see [Consumption control](https://www.alibabacloud.com/help/en/maxcompute/product-overview/consumption-control).
     * Unit: scan volume (GB)* complexity.
     * 
     */
    public Optional<Output<String>> sqlMeteringMax() {
        return Optional.ofNullable(this.sqlMeteringMax);
    }

    /**
     * Set whether the lifecycle of the table in the project needs to be configured, that is, set the ODPS. table.lifecycle property, See `table_lifecycle` below.
     * 
     */
    @Import(name="tableLifecycle")
    private @Nullable Output<ProjectPropertiesTableLifecycleArgs> tableLifecycle;

    /**
     * @return Set whether the lifecycle of the table in the project needs to be configured, that is, set the ODPS. table.lifecycle property, See `table_lifecycle` below.
     * 
     */
    public Optional<Output<ProjectPropertiesTableLifecycleArgs>> tableLifecycle() {
        return Optional.ofNullable(this.tableLifecycle);
    }

    /**
     * Project time zone, example value: Asia/Shanghai
     * 
     */
    @Import(name="timezone")
    private @Nullable Output<String> timezone;

    /**
     * @return Project time zone, example value: Asia/Shanghai
     * 
     */
    public Optional<Output<String>> timezone() {
        return Optional.ofNullable(this.timezone);
    }

    /**
     * Data type version. Value:(1/2/hive)
     * 1: The original MaxCompute type system.
     * 2: New type system introduced by MaxCompute 2.0.
     * hive: the type system of the Hive compatibility mode introduced by MaxCompute 2.0.
     * 
     */
    @Import(name="typeSystem")
    private @Nullable Output<String> typeSystem;

    /**
     * @return Data type version. Value:(1/2/hive)
     * 1: The original MaxCompute type system.
     * 2: New type system introduced by MaxCompute 2.0.
     * hive: the type system of the Hive compatibility mode introduced by MaxCompute 2.0.
     * 
     */
    public Optional<Output<String>> typeSystem() {
        return Optional.ofNullable(this.typeSystem);
    }

    private ProjectPropertiesArgs() {}

    private ProjectPropertiesArgs(ProjectPropertiesArgs $) {
        this.allowFullScan = $.allowFullScan;
        this.enableDecimal2 = $.enableDecimal2;
        this.enableDr = $.enableDr;
        this.encryption = $.encryption;
        this.retentionDays = $.retentionDays;
        this.sqlMeteringMax = $.sqlMeteringMax;
        this.tableLifecycle = $.tableLifecycle;
        this.timezone = $.timezone;
        this.typeSystem = $.typeSystem;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectPropertiesArgs $;

        public Builder() {
            $ = new ProjectPropertiesArgs();
        }

        public Builder(ProjectPropertiesArgs defaults) {
            $ = new ProjectPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowFullScan Whether to allow full table scan. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder allowFullScan(@Nullable Output<Boolean> allowFullScan) {
            $.allowFullScan = allowFullScan;
            return this;
        }

        /**
         * @param allowFullScan Whether to allow full table scan. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder allowFullScan(Boolean allowFullScan) {
            return allowFullScan(Output.of(allowFullScan));
        }

        /**
         * @param enableDecimal2 Whether to turn on Decimal2.0.
         * 
         * @return builder
         * 
         */
        public Builder enableDecimal2(@Nullable Output<Boolean> enableDecimal2) {
            $.enableDecimal2 = enableDecimal2;
            return this;
        }

        /**
         * @param enableDecimal2 Whether to turn on Decimal2.0.
         * 
         * @return builder
         * 
         */
        public Builder enableDecimal2(Boolean enableDecimal2) {
            return enableDecimal2(Output.of(enableDecimal2));
        }

        /**
         * @param enableDr Enable multi-AZ storage disaster tolerance. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder enableDr(@Nullable Output<Boolean> enableDr) {
            $.enableDr = enableDr;
            return this;
        }

        /**
         * @param enableDr Enable multi-AZ storage disaster tolerance. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder enableDr(Boolean enableDr) {
            return enableDr(Output.of(enableDr));
        }

        /**
         * @param encryption Storage encryption. For details, see [Storage Encryption](https://www.alibabacloud.com/help/en/maxcompute/security-and-compliance/storage-encryption)
         * &gt; **NOTE :**:
         * To enable storage encryption, you need to modify the parameters of the basic attributes of the MaxCompute project. This operation permission is authenticated by RAM, and you need to have the Super_Administrator role permission of the corresponding project.
         * 
         * To configure the permissions and IP whitelist parameters of the MaxCompute project, you must have the management permissions (Admin) of the corresponding project, including Super_Administrator, Admin, or custom management permissions. For more information, see the project management permissions list.
         * 
         * You can turn on storage encryption only for projects that have not turned on storage encryption. For projects that have turned on storage encryption, you cannot turn off storage encryption or change the encryption algorithm. See `encryption` below.
         * 
         * @return builder
         * 
         */
        public Builder encryption(@Nullable Output<ProjectPropertiesEncryptionArgs> encryption) {
            $.encryption = encryption;
            return this;
        }

        /**
         * @param encryption Storage encryption. For details, see [Storage Encryption](https://www.alibabacloud.com/help/en/maxcompute/security-and-compliance/storage-encryption)
         * &gt; **NOTE :**:
         * To enable storage encryption, you need to modify the parameters of the basic attributes of the MaxCompute project. This operation permission is authenticated by RAM, and you need to have the Super_Administrator role permission of the corresponding project.
         * 
         * To configure the permissions and IP whitelist parameters of the MaxCompute project, you must have the management permissions (Admin) of the corresponding project, including Super_Administrator, Admin, or custom management permissions. For more information, see the project management permissions list.
         * 
         * You can turn on storage encryption only for projects that have not turned on storage encryption. For projects that have turned on storage encryption, you cannot turn off storage encryption or change the encryption algorithm. See `encryption` below.
         * 
         * @return builder
         * 
         */
        public Builder encryption(ProjectPropertiesEncryptionArgs encryption) {
            return encryption(Output.of(encryption));
        }

        /**
         * @param retentionDays Set the number of days to retain backup data. During this time, you can restore the current version to any backup version. The value range of days is [0,30], and the default value is 1. 0 means backup is turned off.
         * The effective policy after adjusting the backup cycle is:
         * Extend the backup cycle: The new backup cycle takes effect on the same day.
         * Shorten the backup cycle: The system will automatically delete backup data that has exceeded the retention cycle.
         * 
         * @return builder
         * 
         */
        public Builder retentionDays(@Nullable Output<Integer> retentionDays) {
            $.retentionDays = retentionDays;
            return this;
        }

        /**
         * @param retentionDays Set the number of days to retain backup data. During this time, you can restore the current version to any backup version. The value range of days is [0,30], and the default value is 1. 0 means backup is turned off.
         * The effective policy after adjusting the backup cycle is:
         * Extend the backup cycle: The new backup cycle takes effect on the same day.
         * Shorten the backup cycle: The system will automatically delete backup data that has exceeded the retention cycle.
         * 
         * @return builder
         * 
         */
        public Builder retentionDays(Integer retentionDays) {
            return retentionDays(Output.of(retentionDays));
        }

        /**
         * @param sqlMeteringMax Set the maximum threshold for single SQL Consumption, that is, set the ODPS. SQL. metering.value.max attribute. For more information, see [Consumption control](https://www.alibabacloud.com/help/en/maxcompute/product-overview/consumption-control).
         * Unit: scan volume (GB)* complexity.
         * 
         * @return builder
         * 
         */
        public Builder sqlMeteringMax(@Nullable Output<String> sqlMeteringMax) {
            $.sqlMeteringMax = sqlMeteringMax;
            return this;
        }

        /**
         * @param sqlMeteringMax Set the maximum threshold for single SQL Consumption, that is, set the ODPS. SQL. metering.value.max attribute. For more information, see [Consumption control](https://www.alibabacloud.com/help/en/maxcompute/product-overview/consumption-control).
         * Unit: scan volume (GB)* complexity.
         * 
         * @return builder
         * 
         */
        public Builder sqlMeteringMax(String sqlMeteringMax) {
            return sqlMeteringMax(Output.of(sqlMeteringMax));
        }

        /**
         * @param tableLifecycle Set whether the lifecycle of the table in the project needs to be configured, that is, set the ODPS. table.lifecycle property, See `table_lifecycle` below.
         * 
         * @return builder
         * 
         */
        public Builder tableLifecycle(@Nullable Output<ProjectPropertiesTableLifecycleArgs> tableLifecycle) {
            $.tableLifecycle = tableLifecycle;
            return this;
        }

        /**
         * @param tableLifecycle Set whether the lifecycle of the table in the project needs to be configured, that is, set the ODPS. table.lifecycle property, See `table_lifecycle` below.
         * 
         * @return builder
         * 
         */
        public Builder tableLifecycle(ProjectPropertiesTableLifecycleArgs tableLifecycle) {
            return tableLifecycle(Output.of(tableLifecycle));
        }

        /**
         * @param timezone Project time zone, example value: Asia/Shanghai
         * 
         * @return builder
         * 
         */
        public Builder timezone(@Nullable Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        /**
         * @param timezone Project time zone, example value: Asia/Shanghai
         * 
         * @return builder
         * 
         */
        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        /**
         * @param typeSystem Data type version. Value:(1/2/hive)
         * 1: The original MaxCompute type system.
         * 2: New type system introduced by MaxCompute 2.0.
         * hive: the type system of the Hive compatibility mode introduced by MaxCompute 2.0.
         * 
         * @return builder
         * 
         */
        public Builder typeSystem(@Nullable Output<String> typeSystem) {
            $.typeSystem = typeSystem;
            return this;
        }

        /**
         * @param typeSystem Data type version. Value:(1/2/hive)
         * 1: The original MaxCompute type system.
         * 2: New type system introduced by MaxCompute 2.0.
         * hive: the type system of the Hive compatibility mode introduced by MaxCompute 2.0.
         * 
         * @return builder
         * 
         */
        public Builder typeSystem(String typeSystem) {
            return typeSystem(Output.of(typeSystem));
        }

        public ProjectPropertiesArgs build() {
            return $;
        }
    }

}
