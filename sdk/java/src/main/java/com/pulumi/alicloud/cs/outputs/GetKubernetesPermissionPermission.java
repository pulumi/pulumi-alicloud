// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetKubernetesPermissionPermission {
    /**
     * @return ndicates whether the permissions are granted to the cluster owner. Valid values `0`, `1`.
     * * `is_ram_role` -Indicates whether the permissions are granted to the RAM role. Valid values `0`,`1`.
     * 
     */
    private @Nullable Boolean isOwner;
    private @Nullable Boolean isRamRole;
    /**
     * @return The permission settings to manage ACK clusters.
     * 
     */
    private String resourceId;
    /**
     * @return The authorization type. Valid values `cluster`, `namespace` and `console`.
     * 
     */
    private String resourceType;
    /**
     * @return The name of the predefined role. If a custom role is assigned, the value is the name of the assigined custom role.
     * 
     */
    private String roleName;
    /**
     * @return The predefined role. Valid values `admin`,`ops`,`dev`,`restricted` and `custom`.
     * 
     */
    private @Nullable String roleType;

    private GetKubernetesPermissionPermission() {}
    /**
     * @return ndicates whether the permissions are granted to the cluster owner. Valid values `0`, `1`.
     * * `is_ram_role` -Indicates whether the permissions are granted to the RAM role. Valid values `0`,`1`.
     * 
     */
    public Optional<Boolean> isOwner() {
        return Optional.ofNullable(this.isOwner);
    }
    public Optional<Boolean> isRamRole() {
        return Optional.ofNullable(this.isRamRole);
    }
    /**
     * @return The permission settings to manage ACK clusters.
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }
    /**
     * @return The authorization type. Valid values `cluster`, `namespace` and `console`.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }
    /**
     * @return The name of the predefined role. If a custom role is assigned, the value is the name of the assigined custom role.
     * 
     */
    public String roleName() {
        return this.roleName;
    }
    /**
     * @return The predefined role. Valid values `admin`,`ops`,`dev`,`restricted` and `custom`.
     * 
     */
    public Optional<String> roleType() {
        return Optional.ofNullable(this.roleType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKubernetesPermissionPermission defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean isOwner;
        private @Nullable Boolean isRamRole;
        private String resourceId;
        private String resourceType;
        private String roleName;
        private @Nullable String roleType;
        public Builder() {}
        public Builder(GetKubernetesPermissionPermission defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isOwner = defaults.isOwner;
    	      this.isRamRole = defaults.isRamRole;
    	      this.resourceId = defaults.resourceId;
    	      this.resourceType = defaults.resourceType;
    	      this.roleName = defaults.roleName;
    	      this.roleType = defaults.roleType;
        }

        @CustomType.Setter
        public Builder isOwner(@Nullable Boolean isOwner) {
            this.isOwner = isOwner;
            return this;
        }
        @CustomType.Setter
        public Builder isRamRole(@Nullable Boolean isRamRole) {
            this.isRamRole = isRamRole;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(String resourceId) {
            this.resourceId = Objects.requireNonNull(resourceId);
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            this.resourceType = Objects.requireNonNull(resourceType);
            return this;
        }
        @CustomType.Setter
        public Builder roleName(String roleName) {
            this.roleName = Objects.requireNonNull(roleName);
            return this;
        }
        @CustomType.Setter
        public Builder roleType(@Nullable String roleType) {
            this.roleType = roleType;
            return this;
        }
        public GetKubernetesPermissionPermission build() {
            final var o = new GetKubernetesPermissionPermission();
            o.isOwner = isOwner;
            o.isRamRole = isRamRole;
            o.resourceId = resourceId;
            o.resourceType = resourceType;
            o.roleName = roleName;
            o.roleType = roleType;
            return o;
        }
    }
}
