// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetKubernetesPermissionPermission {
    /**
     * @return Indicates whether the permissions are granted to the cluster owner. Valid values `false`, `true`.
     * 
     */
    private Boolean isOwner;
    /**
     * @return Indicates whether the permissions are granted to the RAM role. Valid values `false`, `true`.
     * 
     */
    private Boolean isRamRole;
    /**
     * @return The permission settings to manage ACK clusters.
     * 
     */
    private String resourceId;
    /**
     * @return The authorization type. Valid values `cluster`, `namespace` and `console`.
     * 
     */
    private String resourceType;
    /**
     * @return The name of the predefined role. If a custom role is assigned, the value is the name of the assigined custom role.
     * 
     */
    private String roleName;
    /**
     * @return The predefined role. Valid values `admin`,`ops`,`dev`,`restricted` and `custom`.
     * 
     */
    private String roleType;

    private GetKubernetesPermissionPermission() {}
    /**
     * @return Indicates whether the permissions are granted to the cluster owner. Valid values `false`, `true`.
     * 
     */
    public Boolean isOwner() {
        return this.isOwner;
    }
    /**
     * @return Indicates whether the permissions are granted to the RAM role. Valid values `false`, `true`.
     * 
     */
    public Boolean isRamRole() {
        return this.isRamRole;
    }
    /**
     * @return The permission settings to manage ACK clusters.
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }
    /**
     * @return The authorization type. Valid values `cluster`, `namespace` and `console`.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }
    /**
     * @return The name of the predefined role. If a custom role is assigned, the value is the name of the assigined custom role.
     * 
     */
    public String roleName() {
        return this.roleName;
    }
    /**
     * @return The predefined role. Valid values `admin`,`ops`,`dev`,`restricted` and `custom`.
     * 
     */
    public String roleType() {
        return this.roleType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKubernetesPermissionPermission defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean isOwner;
        private Boolean isRamRole;
        private String resourceId;
        private String resourceType;
        private String roleName;
        private String roleType;
        public Builder() {}
        public Builder(GetKubernetesPermissionPermission defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isOwner = defaults.isOwner;
    	      this.isRamRole = defaults.isRamRole;
    	      this.resourceId = defaults.resourceId;
    	      this.resourceType = defaults.resourceType;
    	      this.roleName = defaults.roleName;
    	      this.roleType = defaults.roleType;
        }

        @CustomType.Setter
        public Builder isOwner(Boolean isOwner) {
            if (isOwner == null) {
              throw new MissingRequiredPropertyException("GetKubernetesPermissionPermission", "isOwner");
            }
            this.isOwner = isOwner;
            return this;
        }
        @CustomType.Setter
        public Builder isRamRole(Boolean isRamRole) {
            if (isRamRole == null) {
              throw new MissingRequiredPropertyException("GetKubernetesPermissionPermission", "isRamRole");
            }
            this.isRamRole = isRamRole;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(String resourceId) {
            if (resourceId == null) {
              throw new MissingRequiredPropertyException("GetKubernetesPermissionPermission", "resourceId");
            }
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            if (resourceType == null) {
              throw new MissingRequiredPropertyException("GetKubernetesPermissionPermission", "resourceType");
            }
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder roleName(String roleName) {
            if (roleName == null) {
              throw new MissingRequiredPropertyException("GetKubernetesPermissionPermission", "roleName");
            }
            this.roleName = roleName;
            return this;
        }
        @CustomType.Setter
        public Builder roleType(String roleType) {
            if (roleType == null) {
              throw new MissingRequiredPropertyException("GetKubernetesPermissionPermission", "roleType");
            }
            this.roleType = roleType;
            return this;
        }
        public GetKubernetesPermissionPermission build() {
            final var _resultValue = new GetKubernetesPermissionPermission();
            _resultValue.isOwner = isOwner;
            _resultValue.isRamRole = isRamRole;
            _resultValue.resourceId = resourceId;
            _resultValue.resourceType = resourceType;
            _resultValue.roleName = roleName;
            _resultValue.roleType = roleType;
            return _resultValue;
        }
    }
}
