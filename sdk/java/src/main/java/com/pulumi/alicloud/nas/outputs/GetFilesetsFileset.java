// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFilesetsFileset {
    /**
     * @return The time when Fileset was created.
     * 
     */
    private String createTime;
    /**
     * @return Description of Fileset.
     * 
     */
    private String description;
    /**
     * @return The ID of the file system.
     * 
     */
    private String fileSystemId;
    /**
     * @return The path of Fileset.
     * 
     */
    private String fileSystemPath;
    /**
     * @return The first ID of the resource.
     * 
     */
    private String filesetId;
    /**
     * @return The ID of the Fileset.
     * 
     */
    private String id;
    /**
     * @return The status of the fileset.
     * 
     */
    private String status;
    /**
     * @return The latest update time of Fileset.
     * 
     */
    private String updateTime;

    private GetFilesetsFileset() {}
    /**
     * @return The time when Fileset was created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Description of Fileset.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The ID of the file system.
     * 
     */
    public String fileSystemId() {
        return this.fileSystemId;
    }
    /**
     * @return The path of Fileset.
     * 
     */
    public String fileSystemPath() {
        return this.fileSystemPath;
    }
    /**
     * @return The first ID of the resource.
     * 
     */
    public String filesetId() {
        return this.filesetId;
    }
    /**
     * @return The ID of the Fileset.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The status of the fileset.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The latest update time of Fileset.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFilesetsFileset defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String description;
        private String fileSystemId;
        private String fileSystemPath;
        private String filesetId;
        private String id;
        private String status;
        private String updateTime;
        public Builder() {}
        public Builder(GetFilesetsFileset defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.fileSystemId = defaults.fileSystemId;
    	      this.fileSystemPath = defaults.fileSystemPath;
    	      this.filesetId = defaults.filesetId;
    	      this.id = defaults.id;
    	      this.status = defaults.status;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetFilesetsFileset", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetFilesetsFileset", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemId(String fileSystemId) {
            if (fileSystemId == null) {
              throw new MissingRequiredPropertyException("GetFilesetsFileset", "fileSystemId");
            }
            this.fileSystemId = fileSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemPath(String fileSystemPath) {
            if (fileSystemPath == null) {
              throw new MissingRequiredPropertyException("GetFilesetsFileset", "fileSystemPath");
            }
            this.fileSystemPath = fileSystemPath;
            return this;
        }
        @CustomType.Setter
        public Builder filesetId(String filesetId) {
            if (filesetId == null) {
              throw new MissingRequiredPropertyException("GetFilesetsFileset", "filesetId");
            }
            this.filesetId = filesetId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFilesetsFileset", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetFilesetsFileset", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            if (updateTime == null) {
              throw new MissingRequiredPropertyException("GetFilesetsFileset", "updateTime");
            }
            this.updateTime = updateTime;
            return this;
        }
        public GetFilesetsFileset build() {
            final var _resultValue = new GetFilesetsFileset();
            _resultValue.createTime = createTime;
            _resultValue.description = description;
            _resultValue.fileSystemId = fileSystemId;
            _resultValue.fileSystemPath = fileSystemPath;
            _resultValue.filesetId = filesetId;
            _resultValue.id = id;
            _resultValue.status = status;
            _resultValue.updateTime = updateTime;
            return _resultValue;
        }
    }
}
