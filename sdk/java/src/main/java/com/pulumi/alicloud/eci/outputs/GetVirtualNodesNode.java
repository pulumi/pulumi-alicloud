// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eci.outputs;

import com.pulumi.alicloud.eci.outputs.GetVirtualNodesNodeEvent;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetVirtualNodesNode {
    /**
     * @return The Number of CPU.
     * 
     */
    private Integer cpu;
    /**
     * @return The creation time of the virtual node.
     * 
     */
    private String createTime;
    /**
     * @return The ENI instance ID.
     * 
     */
    private String eniInstanceId;
    /**
     * @return The event list.
     * 
     */
    private List<GetVirtualNodesNodeEvent> events;
    /**
     * @return The ID of the Virtual Node.
     * 
     */
    private String id;
    /**
     * @return The IP address of a public network.
     * 
     */
    private String internetIp;
    /**
     * @return The private IP address of the RDS instance.
     * 
     */
    private String intranetIp;
    /**
     * @return The memory size.
     * 
     */
    private Integer memory;
    /**
     * @return The ram role.
     * 
     */
    private String ramRoleName;
    /**
     * @return The resource group ID.
     * 
     */
    private String resourceGroupId;
    /**
     * @return The security group ID.
     * 
     */
    private String securityGroupId;
    /**
     * @return The Status of the virtual node.
     * 
     */
    private String status;
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    private Map<String,Object> tags;
    /**
     * @return Of the virtual node number.
     * 
     */
    private String virtualNodeId;
    /**
     * @return The name of the virtual node.
     * 
     */
    private String virtualNodeName;
    private String vpcId;
    /**
     * @return The vswitch id.
     * 
     */
    private String vswitchId;
    /**
     * @return The Zone.
     * 
     */
    private String zoneId;

    private GetVirtualNodesNode() {}
    /**
     * @return The Number of CPU.
     * 
     */
    public Integer cpu() {
        return this.cpu;
    }
    /**
     * @return The creation time of the virtual node.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The ENI instance ID.
     * 
     */
    public String eniInstanceId() {
        return this.eniInstanceId;
    }
    /**
     * @return The event list.
     * 
     */
    public List<GetVirtualNodesNodeEvent> events() {
        return this.events;
    }
    /**
     * @return The ID of the Virtual Node.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The IP address of a public network.
     * 
     */
    public String internetIp() {
        return this.internetIp;
    }
    /**
     * @return The private IP address of the RDS instance.
     * 
     */
    public String intranetIp() {
        return this.intranetIp;
    }
    /**
     * @return The memory size.
     * 
     */
    public Integer memory() {
        return this.memory;
    }
    /**
     * @return The ram role.
     * 
     */
    public String ramRoleName() {
        return this.ramRoleName;
    }
    /**
     * @return The resource group ID.
     * 
     */
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * @return The security group ID.
     * 
     */
    public String securityGroupId() {
        return this.securityGroupId;
    }
    /**
     * @return The Status of the virtual node.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Map<String,Object> tags() {
        return this.tags;
    }
    /**
     * @return Of the virtual node number.
     * 
     */
    public String virtualNodeId() {
        return this.virtualNodeId;
    }
    /**
     * @return The name of the virtual node.
     * 
     */
    public String virtualNodeName() {
        return this.virtualNodeName;
    }
    public String vpcId() {
        return this.vpcId;
    }
    /**
     * @return The vswitch id.
     * 
     */
    public String vswitchId() {
        return this.vswitchId;
    }
    /**
     * @return The Zone.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualNodesNode defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer cpu;
        private String createTime;
        private String eniInstanceId;
        private List<GetVirtualNodesNodeEvent> events;
        private String id;
        private String internetIp;
        private String intranetIp;
        private Integer memory;
        private String ramRoleName;
        private String resourceGroupId;
        private String securityGroupId;
        private String status;
        private Map<String,Object> tags;
        private String virtualNodeId;
        private String virtualNodeName;
        private String vpcId;
        private String vswitchId;
        private String zoneId;
        public Builder() {}
        public Builder(GetVirtualNodesNode defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpu = defaults.cpu;
    	      this.createTime = defaults.createTime;
    	      this.eniInstanceId = defaults.eniInstanceId;
    	      this.events = defaults.events;
    	      this.id = defaults.id;
    	      this.internetIp = defaults.internetIp;
    	      this.intranetIp = defaults.intranetIp;
    	      this.memory = defaults.memory;
    	      this.ramRoleName = defaults.ramRoleName;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.securityGroupId = defaults.securityGroupId;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.virtualNodeId = defaults.virtualNodeId;
    	      this.virtualNodeName = defaults.virtualNodeName;
    	      this.vpcId = defaults.vpcId;
    	      this.vswitchId = defaults.vswitchId;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder cpu(Integer cpu) {
            if (cpu == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodesNode", "cpu");
            }
            this.cpu = cpu;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodesNode", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder eniInstanceId(String eniInstanceId) {
            if (eniInstanceId == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodesNode", "eniInstanceId");
            }
            this.eniInstanceId = eniInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder events(List<GetVirtualNodesNodeEvent> events) {
            if (events == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodesNode", "events");
            }
            this.events = events;
            return this;
        }
        public Builder events(GetVirtualNodesNodeEvent... events) {
            return events(List.of(events));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodesNode", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder internetIp(String internetIp) {
            if (internetIp == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodesNode", "internetIp");
            }
            this.internetIp = internetIp;
            return this;
        }
        @CustomType.Setter
        public Builder intranetIp(String intranetIp) {
            if (intranetIp == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodesNode", "intranetIp");
            }
            this.intranetIp = intranetIp;
            return this;
        }
        @CustomType.Setter
        public Builder memory(Integer memory) {
            if (memory == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodesNode", "memory");
            }
            this.memory = memory;
            return this;
        }
        @CustomType.Setter
        public Builder ramRoleName(String ramRoleName) {
            if (ramRoleName == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodesNode", "ramRoleName");
            }
            this.ramRoleName = ramRoleName;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupId(String resourceGroupId) {
            if (resourceGroupId == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodesNode", "resourceGroupId");
            }
            this.resourceGroupId = resourceGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupId(String securityGroupId) {
            if (securityGroupId == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodesNode", "securityGroupId");
            }
            this.securityGroupId = securityGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodesNode", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,Object> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodesNode", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder virtualNodeId(String virtualNodeId) {
            if (virtualNodeId == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodesNode", "virtualNodeId");
            }
            this.virtualNodeId = virtualNodeId;
            return this;
        }
        @CustomType.Setter
        public Builder virtualNodeName(String virtualNodeName) {
            if (virtualNodeName == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodesNode", "virtualNodeName");
            }
            this.virtualNodeName = virtualNodeName;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            if (vpcId == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodesNode", "vpcId");
            }
            this.vpcId = vpcId;
            return this;
        }
        @CustomType.Setter
        public Builder vswitchId(String vswitchId) {
            if (vswitchId == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodesNode", "vswitchId");
            }
            this.vswitchId = vswitchId;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetVirtualNodesNode", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetVirtualNodesNode build() {
            final var _resultValue = new GetVirtualNodesNode();
            _resultValue.cpu = cpu;
            _resultValue.createTime = createTime;
            _resultValue.eniInstanceId = eniInstanceId;
            _resultValue.events = events;
            _resultValue.id = id;
            _resultValue.internetIp = internetIp;
            _resultValue.intranetIp = intranetIp;
            _resultValue.memory = memory;
            _resultValue.ramRoleName = ramRoleName;
            _resultValue.resourceGroupId = resourceGroupId;
            _resultValue.securityGroupId = securityGroupId;
            _resultValue.status = status;
            _resultValue.tags = tags;
            _resultValue.virtualNodeId = virtualNodeId;
            _resultValue.virtualNodeName = virtualNodeName;
            _resultValue.vpcId = vpcId;
            _resultValue.vswitchId = vswitchId;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
