// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.bp.outputs;

import com.pulumi.alicloud.bp.outputs.GetStudioApplicationsApplication;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetStudioApplicationsResult {
    /**
     * @return A list of Cloud Architect Design Tools (BPStudio) Applications. Each element contains the following attributes:
     * 
     */
    private List<GetStudioApplicationsApplication> applications;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<String> ids;
    private @Nullable String keyword;
    private @Nullable Integer maxResults;
    private @Nullable String nameRegex;
    /**
     * @return A list of Application names.
     * 
     */
    private List<String> names;
    private @Nullable Integer orderType;
    private @Nullable String outputFile;
    /**
     * @return The ID of the resource group.
     * 
     */
    private @Nullable String resourceGroupId;
    /**
     * @return The status of the Application.
     * 
     */
    private @Nullable String status;

    private GetStudioApplicationsResult() {}
    /**
     * @return A list of Cloud Architect Design Tools (BPStudio) Applications. Each element contains the following attributes:
     * 
     */
    public List<GetStudioApplicationsApplication> applications() {
        return this.applications;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> keyword() {
        return Optional.ofNullable(this.keyword);
    }
    public Optional<Integer> maxResults() {
        return Optional.ofNullable(this.maxResults);
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    /**
     * @return A list of Application names.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    public Optional<Integer> orderType() {
        return Optional.ofNullable(this.orderType);
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return The ID of the resource group.
     * 
     */
    public Optional<String> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }
    /**
     * @return The status of the Application.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStudioApplicationsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetStudioApplicationsApplication> applications;
        private String id;
        private List<String> ids;
        private @Nullable String keyword;
        private @Nullable Integer maxResults;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable Integer orderType;
        private @Nullable String outputFile;
        private @Nullable String resourceGroupId;
        private @Nullable String status;
        public Builder() {}
        public Builder(GetStudioApplicationsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applications = defaults.applications;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.keyword = defaults.keyword;
    	      this.maxResults = defaults.maxResults;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.orderType = defaults.orderType;
    	      this.outputFile = defaults.outputFile;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder applications(List<GetStudioApplicationsApplication> applications) {
            if (applications == null) {
              throw new MissingRequiredPropertyException("GetStudioApplicationsResult", "applications");
            }
            this.applications = applications;
            return this;
        }
        public Builder applications(GetStudioApplicationsApplication... applications) {
            return applications(List.of(applications));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetStudioApplicationsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            if (ids == null) {
              throw new MissingRequiredPropertyException("GetStudioApplicationsResult", "ids");
            }
            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder keyword(@Nullable String keyword) {

            this.keyword = keyword;
            return this;
        }
        @CustomType.Setter
        public Builder maxResults(@Nullable Integer maxResults) {

            this.maxResults = maxResults;
            return this;
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {

            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder names(List<String> names) {
            if (names == null) {
              throw new MissingRequiredPropertyException("GetStudioApplicationsResult", "names");
            }
            this.names = names;
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder orderType(@Nullable Integer orderType) {

            this.orderType = orderType;
            return this;
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupId(@Nullable String resourceGroupId) {

            this.resourceGroupId = resourceGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        public GetStudioApplicationsResult build() {
            final var _resultValue = new GetStudioApplicationsResult();
            _resultValue.applications = applications;
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.keyword = keyword;
            _resultValue.maxResults = maxResults;
            _resultValue.nameRegex = nameRegex;
            _resultValue.names = names;
            _resultValue.orderType = orderType;
            _resultValue.outputFile = outputFile;
            _resultValue.resourceGroupId = resourceGroupId;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
