// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ram;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.ram.inputs.GetAccountAliasArgs;
import com.pulumi.alicloud.ram.inputs.GetAccountAliasPlainArgs;
import com.pulumi.alicloud.ram.inputs.GetAccountAliasesArgs;
import com.pulumi.alicloud.ram.inputs.GetAccountAliasesPlainArgs;
import com.pulumi.alicloud.ram.inputs.GetGroupsArgs;
import com.pulumi.alicloud.ram.inputs.GetGroupsPlainArgs;
import com.pulumi.alicloud.ram.inputs.GetPoliciesArgs;
import com.pulumi.alicloud.ram.inputs.GetPoliciesPlainArgs;
import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentPlainArgs;
import com.pulumi.alicloud.ram.inputs.GetRolesArgs;
import com.pulumi.alicloud.ram.inputs.GetRolesPlainArgs;
import com.pulumi.alicloud.ram.inputs.GetSamlProvidersArgs;
import com.pulumi.alicloud.ram.inputs.GetSamlProvidersPlainArgs;
import com.pulumi.alicloud.ram.inputs.GetUsersArgs;
import com.pulumi.alicloud.ram.inputs.GetUsersPlainArgs;
import com.pulumi.alicloud.ram.outputs.GetAccountAliasResult;
import com.pulumi.alicloud.ram.outputs.GetAccountAliasesResult;
import com.pulumi.alicloud.ram.outputs.GetGroupsResult;
import com.pulumi.alicloud.ram.outputs.GetPoliciesResult;
import com.pulumi.alicloud.ram.outputs.GetPolicyDocumentResult;
import com.pulumi.alicloud.ram.outputs.GetRolesResult;
import com.pulumi.alicloud.ram.outputs.GetSamlProvidersResult;
import com.pulumi.alicloud.ram.outputs.GetUsersResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class RamFunctions {
    public static Output<GetAccountAliasResult> getAccountAlias() {
        return getAccountAlias(GetAccountAliasArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAccountAliasResult> getAccountAliasPlain() {
        return getAccountAliasPlain(GetAccountAliasPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetAccountAliasResult> getAccountAlias(GetAccountAliasArgs args) {
        return getAccountAlias(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAccountAliasResult> getAccountAliasPlain(GetAccountAliasPlainArgs args) {
        return getAccountAliasPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetAccountAliasResult> getAccountAlias(GetAccountAliasArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ram/getAccountAlias:getAccountAlias", TypeShape.of(GetAccountAliasResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetAccountAliasResult> getAccountAliasPlain(GetAccountAliasPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ram/getAccountAlias:getAccountAlias", TypeShape.of(GetAccountAliasResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetAccountAliasesResult> getAccountAliases() {
        return getAccountAliases(GetAccountAliasesArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAccountAliasesResult> getAccountAliasesPlain() {
        return getAccountAliasesPlain(GetAccountAliasesPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetAccountAliasesResult> getAccountAliases(GetAccountAliasesArgs args) {
        return getAccountAliases(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAccountAliasesResult> getAccountAliasesPlain(GetAccountAliasesPlainArgs args) {
        return getAccountAliasesPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetAccountAliasesResult> getAccountAliases(GetAccountAliasesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ram/getAccountAliases:getAccountAliases", TypeShape.of(GetAccountAliasesResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetAccountAliasesResult> getAccountAliasesPlain(GetAccountAliasesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ram/getAccountAliases:getAccountAliases", TypeShape.of(GetAccountAliasesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of RAM Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var groupsDs = RamFunctions.getGroups(GetGroupsArgs.builder()
     *             .nameRegex(&#34;^group[0-9]*&#34;)
     *             .outputFile(&#34;groups.txt&#34;)
     *             .userName(&#34;user1&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstGroupName&#34;, groupsDs.applyValue(getGroupsResult -&gt; getGroupsResult.groups()[0].name()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGroupsResult> getGroups() {
        return getGroups(GetGroupsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of RAM Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var groupsDs = RamFunctions.getGroups(GetGroupsArgs.builder()
     *             .nameRegex(&#34;^group[0-9]*&#34;)
     *             .outputFile(&#34;groups.txt&#34;)
     *             .userName(&#34;user1&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstGroupName&#34;, groupsDs.applyValue(getGroupsResult -&gt; getGroupsResult.groups()[0].name()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGroupsResult> getGroupsPlain() {
        return getGroupsPlain(GetGroupsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of RAM Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var groupsDs = RamFunctions.getGroups(GetGroupsArgs.builder()
     *             .nameRegex(&#34;^group[0-9]*&#34;)
     *             .outputFile(&#34;groups.txt&#34;)
     *             .userName(&#34;user1&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstGroupName&#34;, groupsDs.applyValue(getGroupsResult -&gt; getGroupsResult.groups()[0].name()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGroupsResult> getGroups(GetGroupsArgs args) {
        return getGroups(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of RAM Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var groupsDs = RamFunctions.getGroups(GetGroupsArgs.builder()
     *             .nameRegex(&#34;^group[0-9]*&#34;)
     *             .outputFile(&#34;groups.txt&#34;)
     *             .userName(&#34;user1&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstGroupName&#34;, groupsDs.applyValue(getGroupsResult -&gt; getGroupsResult.groups()[0].name()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGroupsResult> getGroupsPlain(GetGroupsPlainArgs args) {
        return getGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of RAM Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var groupsDs = RamFunctions.getGroups(GetGroupsArgs.builder()
     *             .nameRegex(&#34;^group[0-9]*&#34;)
     *             .outputFile(&#34;groups.txt&#34;)
     *             .userName(&#34;user1&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstGroupName&#34;, groupsDs.applyValue(getGroupsResult -&gt; getGroupsResult.groups()[0].name()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGroupsResult> getGroups(GetGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ram/getGroups:getGroups", TypeShape.of(GetGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of RAM Groups in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var groupsDs = RamFunctions.getGroups(GetGroupsArgs.builder()
     *             .nameRegex(&#34;^group[0-9]*&#34;)
     *             .outputFile(&#34;groups.txt&#34;)
     *             .userName(&#34;user1&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstGroupName&#34;, groupsDs.applyValue(getGroupsResult -&gt; getGroupsResult.groups()[0].name()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGroupsResult> getGroupsPlain(GetGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ram/getGroups:getGroups", TypeShape.of(GetGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of RAM policies in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policiesDs = RamFunctions.getPolicies(GetPoliciesArgs.builder()
     *             .groupName(&#34;group1&#34;)
     *             .outputFile(&#34;policies.txt&#34;)
     *             .type(&#34;System&#34;)
     *             .userName(&#34;user1&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstPolicyName&#34;, policiesDs.applyValue(getPoliciesResult -&gt; getPoliciesResult.policies()[0].name()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPoliciesResult> getPolicies() {
        return getPolicies(GetPoliciesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of RAM policies in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policiesDs = RamFunctions.getPolicies(GetPoliciesArgs.builder()
     *             .groupName(&#34;group1&#34;)
     *             .outputFile(&#34;policies.txt&#34;)
     *             .type(&#34;System&#34;)
     *             .userName(&#34;user1&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstPolicyName&#34;, policiesDs.applyValue(getPoliciesResult -&gt; getPoliciesResult.policies()[0].name()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPoliciesResult> getPoliciesPlain() {
        return getPoliciesPlain(GetPoliciesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of RAM policies in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policiesDs = RamFunctions.getPolicies(GetPoliciesArgs.builder()
     *             .groupName(&#34;group1&#34;)
     *             .outputFile(&#34;policies.txt&#34;)
     *             .type(&#34;System&#34;)
     *             .userName(&#34;user1&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstPolicyName&#34;, policiesDs.applyValue(getPoliciesResult -&gt; getPoliciesResult.policies()[0].name()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPoliciesResult> getPolicies(GetPoliciesArgs args) {
        return getPolicies(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of RAM policies in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policiesDs = RamFunctions.getPolicies(GetPoliciesArgs.builder()
     *             .groupName(&#34;group1&#34;)
     *             .outputFile(&#34;policies.txt&#34;)
     *             .type(&#34;System&#34;)
     *             .userName(&#34;user1&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstPolicyName&#34;, policiesDs.applyValue(getPoliciesResult -&gt; getPoliciesResult.policies()[0].name()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPoliciesResult> getPoliciesPlain(GetPoliciesPlainArgs args) {
        return getPoliciesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of RAM policies in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policiesDs = RamFunctions.getPolicies(GetPoliciesArgs.builder()
     *             .groupName(&#34;group1&#34;)
     *             .outputFile(&#34;policies.txt&#34;)
     *             .type(&#34;System&#34;)
     *             .userName(&#34;user1&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstPolicyName&#34;, policiesDs.applyValue(getPoliciesResult -&gt; getPoliciesResult.policies()[0].name()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPoliciesResult> getPolicies(GetPoliciesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ram/getPolicies:getPolicies", TypeShape.of(GetPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of RAM policies in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policiesDs = RamFunctions.getPolicies(GetPoliciesArgs.builder()
     *             .groupName(&#34;group1&#34;)
     *             .outputFile(&#34;policies.txt&#34;)
     *             .type(&#34;System&#34;)
     *             .userName(&#34;user1&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstPolicyName&#34;, policiesDs.applyValue(getPoliciesResult -&gt; getPoliciesResult.policies()[0].name()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPoliciesResult> getPoliciesPlain(GetPoliciesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ram/getPolicies:getPolicies", TypeShape.of(GetPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source Generates a RAM policy document of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.184.0+.
     * 
     * ## Example Usage
     * ### Basic Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Policy;
     * import com.pulumi.alicloud.ram.PolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var basicExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .version(&#34;1&#34;)
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;oss:*&#34;)
     *                 .resources(                
     *                     &#34;acs:oss:*:*:myphotos&#34;,
     *                     &#34;acs:oss:*:*:myphotos/*&#34;)
     *                 .build())
     *             .build());
     * 
     *         var default_ = new Policy(&#34;default&#34;, PolicyArgs.builder()        
     *             .policyName(&#34;tf-example&#34;)
     *             .policyDocument(basicExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.basic_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Multiple Condition Keys and Values
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Policy;
     * import com.pulumi.alicloud.ram.PolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var multipleCondition = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .version(&#34;1&#34;)
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(                    
     *                         &#34;oss:ListBuckets&#34;,
     *                         &#34;oss:GetBucketStat&#34;,
     *                         &#34;oss:GetBucketInfo&#34;,
     *                         &#34;oss:GetBucketTagging&#34;,
     *                         &#34;oss:GetBucketAcl&#34;)
     *                     .resources(&#34;acs:oss:*:*:*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(                    
     *                         &#34;oss:GetObject&#34;,
     *                         &#34;oss:GetObjectAcl&#34;)
     *                     .resources(&#34;acs:oss:*:*:myphotos/hangzhou/2015/*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(&#34;oss:ListObjects&#34;)
     *                     .resources(&#34;acs:oss:*:*:myphotos&#34;)
     *                     .conditions(                    
     *                         GetPolicyDocumentStatementConditionArgs.builder()
     *                             .operator(&#34;StringLike&#34;)
     *                             .variable(&#34;oss:Delimiter&#34;)
     *                             .values(&#34;/&#34;)
     *                             .build(),
     *                         GetPolicyDocumentStatementConditionArgs.builder()
     *                             .operator(&#34;StringLike&#34;)
     *                             .variable(&#34;oss:Prefix&#34;)
     *                             .values(                            
     *                                 &#34;&#34;,
     *                                 &#34;hangzhou/&#34;,
     *                                 &#34;hangzhou/2015/*&#34;)
     *                             .build())
     *                     .build())
     *             .build());
     * 
     *         var policy = new Policy(&#34;policy&#34;, PolicyArgs.builder()        
     *             .policyName(&#34;tf-example-condition&#34;)
     *             .policyDocument(multipleCondition.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.multiple_condition.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with RAM Principal
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Role;
     * import com.pulumi.alicloud.ram.RoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ramExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
     *                     .entity(&#34;RAM&#34;)
     *                     .identifiers(&#34;acs:ram::123456789012****:root&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var role = new Role(&#34;role&#34;, RoleArgs.builder()        
     *             .document(ramExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.ram_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with Service Principal
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Role;
     * import com.pulumi.alicloud.ram.RoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var serviceExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
     *                     .entity(&#34;Service&#34;)
     *                     .identifiers(&#34;ecs.aliyuncs.com&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var role = new Role(&#34;role&#34;, RoleArgs.builder()        
     *             .document(serviceExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.service_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with Federated Principal
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Role;
     * import com.pulumi.alicloud.ram.RoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var federatedExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
     *                     .entity(&#34;Federated&#34;)
     *                     .identifiers(&#34;acs:ram::123456789012****:saml-provider/testprovider&#34;)
     *                     .build())
     *                 .conditions(GetPolicyDocumentStatementConditionArgs.builder()
     *                     .operator(&#34;StringEquals&#34;)
     *                     .variable(&#34;saml:recipient&#34;)
     *                     .values(&#34;https://signin.aliyun.com/saml-role/sso&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var role = new Role(&#34;role&#34;, RoleArgs.builder()        
     *             .document(federatedExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.federated_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPolicyDocumentResult> getPolicyDocument() {
        return getPolicyDocument(GetPolicyDocumentArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source Generates a RAM policy document of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.184.0+.
     * 
     * ## Example Usage
     * ### Basic Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Policy;
     * import com.pulumi.alicloud.ram.PolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var basicExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .version(&#34;1&#34;)
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;oss:*&#34;)
     *                 .resources(                
     *                     &#34;acs:oss:*:*:myphotos&#34;,
     *                     &#34;acs:oss:*:*:myphotos/*&#34;)
     *                 .build())
     *             .build());
     * 
     *         var default_ = new Policy(&#34;default&#34;, PolicyArgs.builder()        
     *             .policyName(&#34;tf-example&#34;)
     *             .policyDocument(basicExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.basic_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Multiple Condition Keys and Values
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Policy;
     * import com.pulumi.alicloud.ram.PolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var multipleCondition = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .version(&#34;1&#34;)
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(                    
     *                         &#34;oss:ListBuckets&#34;,
     *                         &#34;oss:GetBucketStat&#34;,
     *                         &#34;oss:GetBucketInfo&#34;,
     *                         &#34;oss:GetBucketTagging&#34;,
     *                         &#34;oss:GetBucketAcl&#34;)
     *                     .resources(&#34;acs:oss:*:*:*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(                    
     *                         &#34;oss:GetObject&#34;,
     *                         &#34;oss:GetObjectAcl&#34;)
     *                     .resources(&#34;acs:oss:*:*:myphotos/hangzhou/2015/*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(&#34;oss:ListObjects&#34;)
     *                     .resources(&#34;acs:oss:*:*:myphotos&#34;)
     *                     .conditions(                    
     *                         GetPolicyDocumentStatementConditionArgs.builder()
     *                             .operator(&#34;StringLike&#34;)
     *                             .variable(&#34;oss:Delimiter&#34;)
     *                             .values(&#34;/&#34;)
     *                             .build(),
     *                         GetPolicyDocumentStatementConditionArgs.builder()
     *                             .operator(&#34;StringLike&#34;)
     *                             .variable(&#34;oss:Prefix&#34;)
     *                             .values(                            
     *                                 &#34;&#34;,
     *                                 &#34;hangzhou/&#34;,
     *                                 &#34;hangzhou/2015/*&#34;)
     *                             .build())
     *                     .build())
     *             .build());
     * 
     *         var policy = new Policy(&#34;policy&#34;, PolicyArgs.builder()        
     *             .policyName(&#34;tf-example-condition&#34;)
     *             .policyDocument(multipleCondition.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.multiple_condition.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with RAM Principal
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Role;
     * import com.pulumi.alicloud.ram.RoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ramExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
     *                     .entity(&#34;RAM&#34;)
     *                     .identifiers(&#34;acs:ram::123456789012****:root&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var role = new Role(&#34;role&#34;, RoleArgs.builder()        
     *             .document(ramExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.ram_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with Service Principal
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Role;
     * import com.pulumi.alicloud.ram.RoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var serviceExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
     *                     .entity(&#34;Service&#34;)
     *                     .identifiers(&#34;ecs.aliyuncs.com&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var role = new Role(&#34;role&#34;, RoleArgs.builder()        
     *             .document(serviceExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.service_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with Federated Principal
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Role;
     * import com.pulumi.alicloud.ram.RoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var federatedExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
     *                     .entity(&#34;Federated&#34;)
     *                     .identifiers(&#34;acs:ram::123456789012****:saml-provider/testprovider&#34;)
     *                     .build())
     *                 .conditions(GetPolicyDocumentStatementConditionArgs.builder()
     *                     .operator(&#34;StringEquals&#34;)
     *                     .variable(&#34;saml:recipient&#34;)
     *                     .values(&#34;https://signin.aliyun.com/saml-role/sso&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var role = new Role(&#34;role&#34;, RoleArgs.builder()        
     *             .document(federatedExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.federated_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPolicyDocumentResult> getPolicyDocumentPlain() {
        return getPolicyDocumentPlain(GetPolicyDocumentPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source Generates a RAM policy document of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.184.0+.
     * 
     * ## Example Usage
     * ### Basic Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Policy;
     * import com.pulumi.alicloud.ram.PolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var basicExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .version(&#34;1&#34;)
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;oss:*&#34;)
     *                 .resources(                
     *                     &#34;acs:oss:*:*:myphotos&#34;,
     *                     &#34;acs:oss:*:*:myphotos/*&#34;)
     *                 .build())
     *             .build());
     * 
     *         var default_ = new Policy(&#34;default&#34;, PolicyArgs.builder()        
     *             .policyName(&#34;tf-example&#34;)
     *             .policyDocument(basicExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.basic_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Multiple Condition Keys and Values
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Policy;
     * import com.pulumi.alicloud.ram.PolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var multipleCondition = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .version(&#34;1&#34;)
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(                    
     *                         &#34;oss:ListBuckets&#34;,
     *                         &#34;oss:GetBucketStat&#34;,
     *                         &#34;oss:GetBucketInfo&#34;,
     *                         &#34;oss:GetBucketTagging&#34;,
     *                         &#34;oss:GetBucketAcl&#34;)
     *                     .resources(&#34;acs:oss:*:*:*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(                    
     *                         &#34;oss:GetObject&#34;,
     *                         &#34;oss:GetObjectAcl&#34;)
     *                     .resources(&#34;acs:oss:*:*:myphotos/hangzhou/2015/*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(&#34;oss:ListObjects&#34;)
     *                     .resources(&#34;acs:oss:*:*:myphotos&#34;)
     *                     .conditions(                    
     *                         GetPolicyDocumentStatementConditionArgs.builder()
     *                             .operator(&#34;StringLike&#34;)
     *                             .variable(&#34;oss:Delimiter&#34;)
     *                             .values(&#34;/&#34;)
     *                             .build(),
     *                         GetPolicyDocumentStatementConditionArgs.builder()
     *                             .operator(&#34;StringLike&#34;)
     *                             .variable(&#34;oss:Prefix&#34;)
     *                             .values(                            
     *                                 &#34;&#34;,
     *                                 &#34;hangzhou/&#34;,
     *                                 &#34;hangzhou/2015/*&#34;)
     *                             .build())
     *                     .build())
     *             .build());
     * 
     *         var policy = new Policy(&#34;policy&#34;, PolicyArgs.builder()        
     *             .policyName(&#34;tf-example-condition&#34;)
     *             .policyDocument(multipleCondition.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.multiple_condition.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with RAM Principal
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Role;
     * import com.pulumi.alicloud.ram.RoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ramExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
     *                     .entity(&#34;RAM&#34;)
     *                     .identifiers(&#34;acs:ram::123456789012****:root&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var role = new Role(&#34;role&#34;, RoleArgs.builder()        
     *             .document(ramExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.ram_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with Service Principal
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Role;
     * import com.pulumi.alicloud.ram.RoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var serviceExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
     *                     .entity(&#34;Service&#34;)
     *                     .identifiers(&#34;ecs.aliyuncs.com&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var role = new Role(&#34;role&#34;, RoleArgs.builder()        
     *             .document(serviceExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.service_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with Federated Principal
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Role;
     * import com.pulumi.alicloud.ram.RoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var federatedExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
     *                     .entity(&#34;Federated&#34;)
     *                     .identifiers(&#34;acs:ram::123456789012****:saml-provider/testprovider&#34;)
     *                     .build())
     *                 .conditions(GetPolicyDocumentStatementConditionArgs.builder()
     *                     .operator(&#34;StringEquals&#34;)
     *                     .variable(&#34;saml:recipient&#34;)
     *                     .values(&#34;https://signin.aliyun.com/saml-role/sso&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var role = new Role(&#34;role&#34;, RoleArgs.builder()        
     *             .document(federatedExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.federated_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPolicyDocumentResult> getPolicyDocument(GetPolicyDocumentArgs args) {
        return getPolicyDocument(args, InvokeOptions.Empty);
    }
    /**
     * This data source Generates a RAM policy document of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.184.0+.
     * 
     * ## Example Usage
     * ### Basic Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Policy;
     * import com.pulumi.alicloud.ram.PolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var basicExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .version(&#34;1&#34;)
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;oss:*&#34;)
     *                 .resources(                
     *                     &#34;acs:oss:*:*:myphotos&#34;,
     *                     &#34;acs:oss:*:*:myphotos/*&#34;)
     *                 .build())
     *             .build());
     * 
     *         var default_ = new Policy(&#34;default&#34;, PolicyArgs.builder()        
     *             .policyName(&#34;tf-example&#34;)
     *             .policyDocument(basicExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.basic_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Multiple Condition Keys and Values
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Policy;
     * import com.pulumi.alicloud.ram.PolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var multipleCondition = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .version(&#34;1&#34;)
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(                    
     *                         &#34;oss:ListBuckets&#34;,
     *                         &#34;oss:GetBucketStat&#34;,
     *                         &#34;oss:GetBucketInfo&#34;,
     *                         &#34;oss:GetBucketTagging&#34;,
     *                         &#34;oss:GetBucketAcl&#34;)
     *                     .resources(&#34;acs:oss:*:*:*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(                    
     *                         &#34;oss:GetObject&#34;,
     *                         &#34;oss:GetObjectAcl&#34;)
     *                     .resources(&#34;acs:oss:*:*:myphotos/hangzhou/2015/*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(&#34;oss:ListObjects&#34;)
     *                     .resources(&#34;acs:oss:*:*:myphotos&#34;)
     *                     .conditions(                    
     *                         GetPolicyDocumentStatementConditionArgs.builder()
     *                             .operator(&#34;StringLike&#34;)
     *                             .variable(&#34;oss:Delimiter&#34;)
     *                             .values(&#34;/&#34;)
     *                             .build(),
     *                         GetPolicyDocumentStatementConditionArgs.builder()
     *                             .operator(&#34;StringLike&#34;)
     *                             .variable(&#34;oss:Prefix&#34;)
     *                             .values(                            
     *                                 &#34;&#34;,
     *                                 &#34;hangzhou/&#34;,
     *                                 &#34;hangzhou/2015/*&#34;)
     *                             .build())
     *                     .build())
     *             .build());
     * 
     *         var policy = new Policy(&#34;policy&#34;, PolicyArgs.builder()        
     *             .policyName(&#34;tf-example-condition&#34;)
     *             .policyDocument(multipleCondition.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.multiple_condition.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with RAM Principal
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Role;
     * import com.pulumi.alicloud.ram.RoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ramExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
     *                     .entity(&#34;RAM&#34;)
     *                     .identifiers(&#34;acs:ram::123456789012****:root&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var role = new Role(&#34;role&#34;, RoleArgs.builder()        
     *             .document(ramExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.ram_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with Service Principal
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Role;
     * import com.pulumi.alicloud.ram.RoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var serviceExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
     *                     .entity(&#34;Service&#34;)
     *                     .identifiers(&#34;ecs.aliyuncs.com&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var role = new Role(&#34;role&#34;, RoleArgs.builder()        
     *             .document(serviceExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.service_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with Federated Principal
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Role;
     * import com.pulumi.alicloud.ram.RoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var federatedExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
     *                     .entity(&#34;Federated&#34;)
     *                     .identifiers(&#34;acs:ram::123456789012****:saml-provider/testprovider&#34;)
     *                     .build())
     *                 .conditions(GetPolicyDocumentStatementConditionArgs.builder()
     *                     .operator(&#34;StringEquals&#34;)
     *                     .variable(&#34;saml:recipient&#34;)
     *                     .values(&#34;https://signin.aliyun.com/saml-role/sso&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var role = new Role(&#34;role&#34;, RoleArgs.builder()        
     *             .document(federatedExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.federated_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPolicyDocumentResult> getPolicyDocumentPlain(GetPolicyDocumentPlainArgs args) {
        return getPolicyDocumentPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source Generates a RAM policy document of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.184.0+.
     * 
     * ## Example Usage
     * ### Basic Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Policy;
     * import com.pulumi.alicloud.ram.PolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var basicExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .version(&#34;1&#34;)
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;oss:*&#34;)
     *                 .resources(                
     *                     &#34;acs:oss:*:*:myphotos&#34;,
     *                     &#34;acs:oss:*:*:myphotos/*&#34;)
     *                 .build())
     *             .build());
     * 
     *         var default_ = new Policy(&#34;default&#34;, PolicyArgs.builder()        
     *             .policyName(&#34;tf-example&#34;)
     *             .policyDocument(basicExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.basic_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Multiple Condition Keys and Values
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Policy;
     * import com.pulumi.alicloud.ram.PolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var multipleCondition = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .version(&#34;1&#34;)
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(                    
     *                         &#34;oss:ListBuckets&#34;,
     *                         &#34;oss:GetBucketStat&#34;,
     *                         &#34;oss:GetBucketInfo&#34;,
     *                         &#34;oss:GetBucketTagging&#34;,
     *                         &#34;oss:GetBucketAcl&#34;)
     *                     .resources(&#34;acs:oss:*:*:*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(                    
     *                         &#34;oss:GetObject&#34;,
     *                         &#34;oss:GetObjectAcl&#34;)
     *                     .resources(&#34;acs:oss:*:*:myphotos/hangzhou/2015/*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(&#34;oss:ListObjects&#34;)
     *                     .resources(&#34;acs:oss:*:*:myphotos&#34;)
     *                     .conditions(                    
     *                         GetPolicyDocumentStatementConditionArgs.builder()
     *                             .operator(&#34;StringLike&#34;)
     *                             .variable(&#34;oss:Delimiter&#34;)
     *                             .values(&#34;/&#34;)
     *                             .build(),
     *                         GetPolicyDocumentStatementConditionArgs.builder()
     *                             .operator(&#34;StringLike&#34;)
     *                             .variable(&#34;oss:Prefix&#34;)
     *                             .values(                            
     *                                 &#34;&#34;,
     *                                 &#34;hangzhou/&#34;,
     *                                 &#34;hangzhou/2015/*&#34;)
     *                             .build())
     *                     .build())
     *             .build());
     * 
     *         var policy = new Policy(&#34;policy&#34;, PolicyArgs.builder()        
     *             .policyName(&#34;tf-example-condition&#34;)
     *             .policyDocument(multipleCondition.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.multiple_condition.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with RAM Principal
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Role;
     * import com.pulumi.alicloud.ram.RoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ramExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
     *                     .entity(&#34;RAM&#34;)
     *                     .identifiers(&#34;acs:ram::123456789012****:root&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var role = new Role(&#34;role&#34;, RoleArgs.builder()        
     *             .document(ramExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.ram_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with Service Principal
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Role;
     * import com.pulumi.alicloud.ram.RoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var serviceExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
     *                     .entity(&#34;Service&#34;)
     *                     .identifiers(&#34;ecs.aliyuncs.com&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var role = new Role(&#34;role&#34;, RoleArgs.builder()        
     *             .document(serviceExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.service_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with Federated Principal
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Role;
     * import com.pulumi.alicloud.ram.RoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var federatedExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
     *                     .entity(&#34;Federated&#34;)
     *                     .identifiers(&#34;acs:ram::123456789012****:saml-provider/testprovider&#34;)
     *                     .build())
     *                 .conditions(GetPolicyDocumentStatementConditionArgs.builder()
     *                     .operator(&#34;StringEquals&#34;)
     *                     .variable(&#34;saml:recipient&#34;)
     *                     .values(&#34;https://signin.aliyun.com/saml-role/sso&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var role = new Role(&#34;role&#34;, RoleArgs.builder()        
     *             .document(federatedExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.federated_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPolicyDocumentResult> getPolicyDocument(GetPolicyDocumentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ram/getPolicyDocument:getPolicyDocument", TypeShape.of(GetPolicyDocumentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source Generates a RAM policy document of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.184.0+.
     * 
     * ## Example Usage
     * ### Basic Example
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Policy;
     * import com.pulumi.alicloud.ram.PolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var basicExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .version(&#34;1&#34;)
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;oss:*&#34;)
     *                 .resources(                
     *                     &#34;acs:oss:*:*:myphotos&#34;,
     *                     &#34;acs:oss:*:*:myphotos/*&#34;)
     *                 .build())
     *             .build());
     * 
     *         var default_ = new Policy(&#34;default&#34;, PolicyArgs.builder()        
     *             .policyName(&#34;tf-example&#34;)
     *             .policyDocument(basicExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.basic_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Multiple Condition Keys and Values
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Policy;
     * import com.pulumi.alicloud.ram.PolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var multipleCondition = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .version(&#34;1&#34;)
     *             .statements(            
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(                    
     *                         &#34;oss:ListBuckets&#34;,
     *                         &#34;oss:GetBucketStat&#34;,
     *                         &#34;oss:GetBucketInfo&#34;,
     *                         &#34;oss:GetBucketTagging&#34;,
     *                         &#34;oss:GetBucketAcl&#34;)
     *                     .resources(&#34;acs:oss:*:*:*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(                    
     *                         &#34;oss:GetObject&#34;,
     *                         &#34;oss:GetObjectAcl&#34;)
     *                     .resources(&#34;acs:oss:*:*:myphotos/hangzhou/2015/*&#34;)
     *                     .build(),
     *                 GetPolicyDocumentStatementArgs.builder()
     *                     .effect(&#34;Allow&#34;)
     *                     .actions(&#34;oss:ListObjects&#34;)
     *                     .resources(&#34;acs:oss:*:*:myphotos&#34;)
     *                     .conditions(                    
     *                         GetPolicyDocumentStatementConditionArgs.builder()
     *                             .operator(&#34;StringLike&#34;)
     *                             .variable(&#34;oss:Delimiter&#34;)
     *                             .values(&#34;/&#34;)
     *                             .build(),
     *                         GetPolicyDocumentStatementConditionArgs.builder()
     *                             .operator(&#34;StringLike&#34;)
     *                             .variable(&#34;oss:Prefix&#34;)
     *                             .values(                            
     *                                 &#34;&#34;,
     *                                 &#34;hangzhou/&#34;,
     *                                 &#34;hangzhou/2015/*&#34;)
     *                             .build())
     *                     .build())
     *             .build());
     * 
     *         var policy = new Policy(&#34;policy&#34;, PolicyArgs.builder()        
     *             .policyName(&#34;tf-example-condition&#34;)
     *             .policyDocument(multipleCondition.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.multiple_condition.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with RAM Principal
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Role;
     * import com.pulumi.alicloud.ram.RoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ramExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
     *                     .entity(&#34;RAM&#34;)
     *                     .identifiers(&#34;acs:ram::123456789012****:root&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var role = new Role(&#34;role&#34;, RoleArgs.builder()        
     *             .document(ramExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.ram_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with Service Principal
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Role;
     * import com.pulumi.alicloud.ram.RoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var serviceExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
     *                     .entity(&#34;Service&#34;)
     *                     .identifiers(&#34;ecs.aliyuncs.com&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var role = new Role(&#34;role&#34;, RoleArgs.builder()        
     *             .document(serviceExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.service_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * ### Example Assume-Role Policy with Federated Principal
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetPolicyDocumentArgs;
     * import com.pulumi.alicloud.ram.Role;
     * import com.pulumi.alicloud.ram.RoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var federatedExample = RamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
     *             .statements(GetPolicyDocumentStatementArgs.builder()
     *                 .effect(&#34;Allow&#34;)
     *                 .actions(&#34;sts:AssumeRole&#34;)
     *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
     *                     .entity(&#34;Federated&#34;)
     *                     .identifiers(&#34;acs:ram::123456789012****:saml-provider/testprovider&#34;)
     *                     .build())
     *                 .conditions(GetPolicyDocumentStatementConditionArgs.builder()
     *                     .operator(&#34;StringEquals&#34;)
     *                     .variable(&#34;saml:recipient&#34;)
     *                     .values(&#34;https://signin.aliyun.com/saml-role/sso&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var role = new Role(&#34;role&#34;, RoleArgs.builder()        
     *             .document(federatedExample.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.document()))
     *             .force(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     * `data.alicloud_ram_policy_document.federated_example.document` will evaluate to:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPolicyDocumentResult> getPolicyDocumentPlain(GetPolicyDocumentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ram/getPolicyDocument:getPolicyDocument", TypeShape.of(GetPolicyDocumentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of RAM Roles in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var rolesDs = RamFunctions.getRoles(GetRolesArgs.builder()
     *             .nameRegex(&#34;.*test.*&#34;)
     *             .outputFile(&#34;roles.txt&#34;)
     *             .policyName(&#34;AliyunACSDefaultAccess&#34;)
     *             .policyType(&#34;Custom&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstRoleId&#34;, rolesDs.applyValue(getRolesResult -&gt; getRolesResult.roles()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRolesResult> getRoles() {
        return getRoles(GetRolesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of RAM Roles in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var rolesDs = RamFunctions.getRoles(GetRolesArgs.builder()
     *             .nameRegex(&#34;.*test.*&#34;)
     *             .outputFile(&#34;roles.txt&#34;)
     *             .policyName(&#34;AliyunACSDefaultAccess&#34;)
     *             .policyType(&#34;Custom&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstRoleId&#34;, rolesDs.applyValue(getRolesResult -&gt; getRolesResult.roles()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain() {
        return getRolesPlain(GetRolesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of RAM Roles in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var rolesDs = RamFunctions.getRoles(GetRolesArgs.builder()
     *             .nameRegex(&#34;.*test.*&#34;)
     *             .outputFile(&#34;roles.txt&#34;)
     *             .policyName(&#34;AliyunACSDefaultAccess&#34;)
     *             .policyType(&#34;Custom&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstRoleId&#34;, rolesDs.applyValue(getRolesResult -&gt; getRolesResult.roles()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRolesResult> getRoles(GetRolesArgs args) {
        return getRoles(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of RAM Roles in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var rolesDs = RamFunctions.getRoles(GetRolesArgs.builder()
     *             .nameRegex(&#34;.*test.*&#34;)
     *             .outputFile(&#34;roles.txt&#34;)
     *             .policyName(&#34;AliyunACSDefaultAccess&#34;)
     *             .policyType(&#34;Custom&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstRoleId&#34;, rolesDs.applyValue(getRolesResult -&gt; getRolesResult.roles()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain(GetRolesPlainArgs args) {
        return getRolesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of RAM Roles in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var rolesDs = RamFunctions.getRoles(GetRolesArgs.builder()
     *             .nameRegex(&#34;.*test.*&#34;)
     *             .outputFile(&#34;roles.txt&#34;)
     *             .policyName(&#34;AliyunACSDefaultAccess&#34;)
     *             .policyType(&#34;Custom&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstRoleId&#34;, rolesDs.applyValue(getRolesResult -&gt; getRolesResult.roles()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRolesResult> getRoles(GetRolesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ram/getRoles:getRoles", TypeShape.of(GetRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of RAM Roles in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var rolesDs = RamFunctions.getRoles(GetRolesArgs.builder()
     *             .nameRegex(&#34;.*test.*&#34;)
     *             .outputFile(&#34;roles.txt&#34;)
     *             .policyName(&#34;AliyunACSDefaultAccess&#34;)
     *             .policyType(&#34;Custom&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstRoleId&#34;, rolesDs.applyValue(getRolesResult -&gt; getRolesResult.roles()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain(GetRolesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ram/getRoles:getRoles", TypeShape.of(GetRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ram Saml Providers of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.114.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetSamlProvidersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = RamFunctions.getSamlProviders(GetSamlProvidersArgs.builder()
     *             .ids(&#34;samlProviderName&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstRamSamlProviderId&#34;, example.applyValue(getSamlProvidersResult -&gt; getSamlProvidersResult.providers()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSamlProvidersResult> getSamlProviders() {
        return getSamlProviders(GetSamlProvidersArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ram Saml Providers of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.114.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetSamlProvidersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = RamFunctions.getSamlProviders(GetSamlProvidersArgs.builder()
     *             .ids(&#34;samlProviderName&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstRamSamlProviderId&#34;, example.applyValue(getSamlProvidersResult -&gt; getSamlProvidersResult.providers()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSamlProvidersResult> getSamlProvidersPlain() {
        return getSamlProvidersPlain(GetSamlProvidersPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ram Saml Providers of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.114.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetSamlProvidersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = RamFunctions.getSamlProviders(GetSamlProvidersArgs.builder()
     *             .ids(&#34;samlProviderName&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstRamSamlProviderId&#34;, example.applyValue(getSamlProvidersResult -&gt; getSamlProvidersResult.providers()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSamlProvidersResult> getSamlProviders(GetSamlProvidersArgs args) {
        return getSamlProviders(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ram Saml Providers of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.114.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetSamlProvidersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = RamFunctions.getSamlProviders(GetSamlProvidersArgs.builder()
     *             .ids(&#34;samlProviderName&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstRamSamlProviderId&#34;, example.applyValue(getSamlProvidersResult -&gt; getSamlProvidersResult.providers()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSamlProvidersResult> getSamlProvidersPlain(GetSamlProvidersPlainArgs args) {
        return getSamlProvidersPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Ram Saml Providers of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.114.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetSamlProvidersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = RamFunctions.getSamlProviders(GetSamlProvidersArgs.builder()
     *             .ids(&#34;samlProviderName&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstRamSamlProviderId&#34;, example.applyValue(getSamlProvidersResult -&gt; getSamlProvidersResult.providers()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSamlProvidersResult> getSamlProviders(GetSamlProvidersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ram/getSamlProviders:getSamlProviders", TypeShape.of(GetSamlProvidersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Ram Saml Providers of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.114.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetSamlProvidersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = RamFunctions.getSamlProviders(GetSamlProvidersArgs.builder()
     *             .ids(&#34;samlProviderName&#34;)
     *             .nameRegex(&#34;tf-testAcc&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstRamSamlProviderId&#34;, example.applyValue(getSamlProvidersResult -&gt; getSamlProvidersResult.providers()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSamlProvidersResult> getSamlProvidersPlain(GetSamlProvidersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ram/getSamlProviders:getSamlProviders", TypeShape.of(GetSamlProvidersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of RAM users in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var usersDs = RamFunctions.getUsers(GetUsersArgs.builder()
     *             .outputFile(&#34;users.txt&#34;)
     *             .groupName(&#34;group1&#34;)
     *             .policyName(&#34;AliyunACSDefaultAccess&#34;)
     *             .policyType(&#34;Custom&#34;)
     *             .nameRegex(&#34;^user&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstUserId&#34;, usersDs.applyValue(getUsersResult -&gt; getUsersResult.users()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUsersResult> getUsers() {
        return getUsers(GetUsersArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of RAM users in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var usersDs = RamFunctions.getUsers(GetUsersArgs.builder()
     *             .outputFile(&#34;users.txt&#34;)
     *             .groupName(&#34;group1&#34;)
     *             .policyName(&#34;AliyunACSDefaultAccess&#34;)
     *             .policyType(&#34;Custom&#34;)
     *             .nameRegex(&#34;^user&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstUserId&#34;, usersDs.applyValue(getUsersResult -&gt; getUsersResult.users()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain() {
        return getUsersPlain(GetUsersPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of RAM users in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var usersDs = RamFunctions.getUsers(GetUsersArgs.builder()
     *             .outputFile(&#34;users.txt&#34;)
     *             .groupName(&#34;group1&#34;)
     *             .policyName(&#34;AliyunACSDefaultAccess&#34;)
     *             .policyType(&#34;Custom&#34;)
     *             .nameRegex(&#34;^user&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstUserId&#34;, usersDs.applyValue(getUsersResult -&gt; getUsersResult.users()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUsersResult> getUsers(GetUsersArgs args) {
        return getUsers(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of RAM users in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var usersDs = RamFunctions.getUsers(GetUsersArgs.builder()
     *             .outputFile(&#34;users.txt&#34;)
     *             .groupName(&#34;group1&#34;)
     *             .policyName(&#34;AliyunACSDefaultAccess&#34;)
     *             .policyType(&#34;Custom&#34;)
     *             .nameRegex(&#34;^user&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstUserId&#34;, usersDs.applyValue(getUsersResult -&gt; getUsersResult.users()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain(GetUsersPlainArgs args) {
        return getUsersPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides a list of RAM users in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var usersDs = RamFunctions.getUsers(GetUsersArgs.builder()
     *             .outputFile(&#34;users.txt&#34;)
     *             .groupName(&#34;group1&#34;)
     *             .policyName(&#34;AliyunACSDefaultAccess&#34;)
     *             .policyType(&#34;Custom&#34;)
     *             .nameRegex(&#34;^user&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstUserId&#34;, usersDs.applyValue(getUsersResult -&gt; getUsersResult.users()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUsersResult> getUsers(GetUsersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:ram/getUsers:getUsers", TypeShape.of(GetUsersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides a list of RAM users in an Alibaba Cloud account according to the specified filters.
     * 
     * &gt; **NOTE:** Available since v1.0.0+.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.ram.RamFunctions;
     * import com.pulumi.alicloud.ram.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var usersDs = RamFunctions.getUsers(GetUsersArgs.builder()
     *             .outputFile(&#34;users.txt&#34;)
     *             .groupName(&#34;group1&#34;)
     *             .policyName(&#34;AliyunACSDefaultAccess&#34;)
     *             .policyType(&#34;Custom&#34;)
     *             .nameRegex(&#34;^user&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;firstUserId&#34;, usersDs.applyValue(getUsersResult -&gt; getUsersResult.users()[0].id()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain(GetUsersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:ram/getUsers:getUsers", TypeShape.of(GetUsersResult.class), args, Utilities.withVersion(options));
    }
}
