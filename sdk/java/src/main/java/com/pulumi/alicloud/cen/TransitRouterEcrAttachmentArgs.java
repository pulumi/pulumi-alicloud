// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransitRouterEcrAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransitRouterEcrAttachmentArgs Empty = new TransitRouterEcrAttachmentArgs();

    /**
     * CenId
     * 
     */
    @Import(name="cenId")
    private @Nullable Output<String> cenId;

    /**
     * @return CenId
     * 
     */
    public Optional<Output<String>> cenId() {
        return Optional.ofNullable(this.cenId);
    }

    /**
     * EcrId
     * 
     */
    @Import(name="ecrId", required=true)
    private Output<String> ecrId;

    /**
     * @return EcrId
     * 
     */
    public Output<String> ecrId() {
        return this.ecrId;
    }

    /**
     * EcrOwnerId
     * 
     */
    @Import(name="ecrOwnerId")
    private @Nullable Output<Integer> ecrOwnerId;

    /**
     * @return EcrOwnerId
     * 
     */
    public Optional<Output<Integer>> ecrOwnerId() {
        return Optional.ofNullable(this.ecrOwnerId);
    }

    /**
     * The tag of the resource
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    /**
     * @return The tag of the resource
     * 
     */
    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * TransitRouterAttachmentDescription
     * 
     */
    @Import(name="transitRouterAttachmentDescription")
    private @Nullable Output<String> transitRouterAttachmentDescription;

    /**
     * @return TransitRouterAttachmentDescription
     * 
     */
    public Optional<Output<String>> transitRouterAttachmentDescription() {
        return Optional.ofNullable(this.transitRouterAttachmentDescription);
    }

    /**
     * TransitRouterAttachmentName
     * 
     */
    @Import(name="transitRouterEcrAttachmentName")
    private @Nullable Output<String> transitRouterEcrAttachmentName;

    /**
     * @return TransitRouterAttachmentName
     * 
     */
    public Optional<Output<String>> transitRouterEcrAttachmentName() {
        return Optional.ofNullable(this.transitRouterEcrAttachmentName);
    }

    /**
     * TransitRouterId
     * 
     */
    @Import(name="transitRouterId")
    private @Nullable Output<String> transitRouterId;

    /**
     * @return TransitRouterId
     * 
     */
    public Optional<Output<String>> transitRouterId() {
        return Optional.ofNullable(this.transitRouterId);
    }

    private TransitRouterEcrAttachmentArgs() {}

    private TransitRouterEcrAttachmentArgs(TransitRouterEcrAttachmentArgs $) {
        this.cenId = $.cenId;
        this.ecrId = $.ecrId;
        this.ecrOwnerId = $.ecrOwnerId;
        this.tags = $.tags;
        this.transitRouterAttachmentDescription = $.transitRouterAttachmentDescription;
        this.transitRouterEcrAttachmentName = $.transitRouterEcrAttachmentName;
        this.transitRouterId = $.transitRouterId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransitRouterEcrAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransitRouterEcrAttachmentArgs $;

        public Builder() {
            $ = new TransitRouterEcrAttachmentArgs();
        }

        public Builder(TransitRouterEcrAttachmentArgs defaults) {
            $ = new TransitRouterEcrAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cenId CenId
         * 
         * @return builder
         * 
         */
        public Builder cenId(@Nullable Output<String> cenId) {
            $.cenId = cenId;
            return this;
        }

        /**
         * @param cenId CenId
         * 
         * @return builder
         * 
         */
        public Builder cenId(String cenId) {
            return cenId(Output.of(cenId));
        }

        /**
         * @param ecrId EcrId
         * 
         * @return builder
         * 
         */
        public Builder ecrId(Output<String> ecrId) {
            $.ecrId = ecrId;
            return this;
        }

        /**
         * @param ecrId EcrId
         * 
         * @return builder
         * 
         */
        public Builder ecrId(String ecrId) {
            return ecrId(Output.of(ecrId));
        }

        /**
         * @param ecrOwnerId EcrOwnerId
         * 
         * @return builder
         * 
         */
        public Builder ecrOwnerId(@Nullable Output<Integer> ecrOwnerId) {
            $.ecrOwnerId = ecrOwnerId;
            return this;
        }

        /**
         * @param ecrOwnerId EcrOwnerId
         * 
         * @return builder
         * 
         */
        public Builder ecrOwnerId(Integer ecrOwnerId) {
            return ecrOwnerId(Output.of(ecrOwnerId));
        }

        /**
         * @param tags The tag of the resource
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tag of the resource
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param transitRouterAttachmentDescription TransitRouterAttachmentDescription
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentDescription(@Nullable Output<String> transitRouterAttachmentDescription) {
            $.transitRouterAttachmentDescription = transitRouterAttachmentDescription;
            return this;
        }

        /**
         * @param transitRouterAttachmentDescription TransitRouterAttachmentDescription
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentDescription(String transitRouterAttachmentDescription) {
            return transitRouterAttachmentDescription(Output.of(transitRouterAttachmentDescription));
        }

        /**
         * @param transitRouterEcrAttachmentName TransitRouterAttachmentName
         * 
         * @return builder
         * 
         */
        public Builder transitRouterEcrAttachmentName(@Nullable Output<String> transitRouterEcrAttachmentName) {
            $.transitRouterEcrAttachmentName = transitRouterEcrAttachmentName;
            return this;
        }

        /**
         * @param transitRouterEcrAttachmentName TransitRouterAttachmentName
         * 
         * @return builder
         * 
         */
        public Builder transitRouterEcrAttachmentName(String transitRouterEcrAttachmentName) {
            return transitRouterEcrAttachmentName(Output.of(transitRouterEcrAttachmentName));
        }

        /**
         * @param transitRouterId TransitRouterId
         * 
         * @return builder
         * 
         */
        public Builder transitRouterId(@Nullable Output<String> transitRouterId) {
            $.transitRouterId = transitRouterId;
            return this;
        }

        /**
         * @param transitRouterId TransitRouterId
         * 
         * @return builder
         * 
         */
        public Builder transitRouterId(String transitRouterId) {
            return transitRouterId(Output.of(transitRouterId));
        }

        public TransitRouterEcrAttachmentArgs build() {
            if ($.ecrId == null) {
                throw new MissingRequiredPropertyException("TransitRouterEcrAttachmentArgs", "ecrId");
            }
            return $;
        }
    }

}
