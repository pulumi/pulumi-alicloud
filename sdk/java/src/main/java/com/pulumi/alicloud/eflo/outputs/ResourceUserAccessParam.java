// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eflo.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ResourceUserAccessParam {
    /**
     * @return Access keys are important credentials for authentication.
     * 
     */
    private String accessId;
    /**
     * @return A Secret Key is a Secret credential paired with an access Key to verify a user&#39;s identity and protect the security of an interface.
     * 
     */
    private String accessKey;
    /**
     * @return An Endpoint is a network address for accessing a service or API, usually a URL to a specific service instance.
     * 
     */
    private String endpoint;
    /**
     * @return A Workspace generally refers to a separate space created by a user on a particular computing environment or platform.
     * 
     */
    private String workspaceId;

    private ResourceUserAccessParam() {}
    /**
     * @return Access keys are important credentials for authentication.
     * 
     */
    public String accessId() {
        return this.accessId;
    }
    /**
     * @return A Secret Key is a Secret credential paired with an access Key to verify a user&#39;s identity and protect the security of an interface.
     * 
     */
    public String accessKey() {
        return this.accessKey;
    }
    /**
     * @return An Endpoint is a network address for accessing a service or API, usually a URL to a specific service instance.
     * 
     */
    public String endpoint() {
        return this.endpoint;
    }
    /**
     * @return A Workspace generally refers to a separate space created by a user on a particular computing environment or platform.
     * 
     */
    public String workspaceId() {
        return this.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourceUserAccessParam defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessId;
        private String accessKey;
        private String endpoint;
        private String workspaceId;
        public Builder() {}
        public Builder(ResourceUserAccessParam defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessId = defaults.accessId;
    	      this.accessKey = defaults.accessKey;
    	      this.endpoint = defaults.endpoint;
    	      this.workspaceId = defaults.workspaceId;
        }

        @CustomType.Setter
        public Builder accessId(String accessId) {
            if (accessId == null) {
              throw new MissingRequiredPropertyException("ResourceUserAccessParam", "accessId");
            }
            this.accessId = accessId;
            return this;
        }
        @CustomType.Setter
        public Builder accessKey(String accessKey) {
            if (accessKey == null) {
              throw new MissingRequiredPropertyException("ResourceUserAccessParam", "accessKey");
            }
            this.accessKey = accessKey;
            return this;
        }
        @CustomType.Setter
        public Builder endpoint(String endpoint) {
            if (endpoint == null) {
              throw new MissingRequiredPropertyException("ResourceUserAccessParam", "endpoint");
            }
            this.endpoint = endpoint;
            return this;
        }
        @CustomType.Setter
        public Builder workspaceId(String workspaceId) {
            if (workspaceId == null) {
              throw new MissingRequiredPropertyException("ResourceUserAccessParam", "workspaceId");
            }
            this.workspaceId = workspaceId;
            return this;
        }
        public ResourceUserAccessParam build() {
            final var _resultValue = new ResourceUserAccessParam();
            _resultValue.accessId = accessId;
            _resultValue.accessKey = accessKey;
            _resultValue.endpoint = endpoint;
            _resultValue.workspaceId = workspaceId;
            return _resultValue;
        }
    }
}
