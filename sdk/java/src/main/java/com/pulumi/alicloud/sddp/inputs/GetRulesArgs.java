// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sddp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRulesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRulesArgs Empty = new GetRulesArgs();

    /**
     * Sensitive Data Identification Rules for the Type of. Valid values:
     * 
     */
    @Import(name="category")
    private @Nullable Output<Integer> category;

    /**
     * @return Sensitive Data Identification Rules for the Type of. Valid values:
     * 
     */
    public Optional<Output<Integer>> category() {
        return Optional.ofNullable(this.category);
    }

    /**
     * The Content Classification.
     * 
     */
    @Import(name="contentCategory")
    private @Nullable Output<String> contentCategory;

    /**
     * @return The Content Classification.
     * 
     */
    public Optional<Output<String>> contentCategory() {
        return Optional.ofNullable(this.contentCategory);
    }

    /**
     * Sensitive Data Identification Rules of Type. Valid values:
     * 
     */
    @Import(name="customType")
    private @Nullable Output<Integer> customType;

    /**
     * @return Sensitive Data Identification Rules of Type. Valid values:
     * 
     */
    public Optional<Output<Integer>> customType() {
        return Optional.ofNullable(this.customType);
    }

    @Import(name="enableDetails")
    private @Nullable Output<Boolean> enableDetails;

    public Optional<Output<Boolean>> enableDetails() {
        return Optional.ofNullable(this.enableDetails);
    }

    /**
     * A list of Rule IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of Rule IDs.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * The name of rule.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of rule.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A regex string to filter results by Rule name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    /**
     * @return A regex string to filter results by Rule name.
     * 
     */
    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * Product ID. Valid values:
     * 
     */
    @Import(name="productId")
    private @Nullable Output<String> productId;

    /**
     * @return Product ID. Valid values:
     * 
     */
    public Optional<Output<String>> productId() {
        return Optional.ofNullable(this.productId);
    }

    /**
     * Sensitive Data Identification Rules of Risk Level ID. Valid values:
     * 
     */
    @Import(name="riskLevelId")
    private @Nullable Output<String> riskLevelId;

    /**
     * @return Sensitive Data Identification Rules of Risk Level ID. Valid values:
     * 
     */
    public Optional<Output<String>> riskLevelId() {
        return Optional.ofNullable(this.riskLevelId);
    }

    /**
     * Rule Type.
     * 
     */
    @Import(name="ruleType")
    private @Nullable Output<Integer> ruleType;

    /**
     * @return Rule Type.
     * 
     */
    public Optional<Output<Integer>> ruleType() {
        return Optional.ofNullable(this.ruleType);
    }

    /**
     * Sensitive Data Identification Rules Detection State of.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Sensitive Data Identification Rules Detection State of.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The Level of Risk. Valid values:
     * 
     */
    @Import(name="warnLevel")
    private @Nullable Output<Integer> warnLevel;

    /**
     * @return The Level of Risk. Valid values:
     * 
     */
    public Optional<Output<Integer>> warnLevel() {
        return Optional.ofNullable(this.warnLevel);
    }

    private GetRulesArgs() {}

    private GetRulesArgs(GetRulesArgs $) {
        this.category = $.category;
        this.contentCategory = $.contentCategory;
        this.customType = $.customType;
        this.enableDetails = $.enableDetails;
        this.ids = $.ids;
        this.name = $.name;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.productId = $.productId;
        this.riskLevelId = $.riskLevelId;
        this.ruleType = $.ruleType;
        this.status = $.status;
        this.warnLevel = $.warnLevel;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRulesArgs $;

        public Builder() {
            $ = new GetRulesArgs();
        }

        public Builder(GetRulesArgs defaults) {
            $ = new GetRulesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param category Sensitive Data Identification Rules for the Type of. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder category(@Nullable Output<Integer> category) {
            $.category = category;
            return this;
        }

        /**
         * @param category Sensitive Data Identification Rules for the Type of. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder category(Integer category) {
            return category(Output.of(category));
        }

        /**
         * @param contentCategory The Content Classification.
         * 
         * @return builder
         * 
         */
        public Builder contentCategory(@Nullable Output<String> contentCategory) {
            $.contentCategory = contentCategory;
            return this;
        }

        /**
         * @param contentCategory The Content Classification.
         * 
         * @return builder
         * 
         */
        public Builder contentCategory(String contentCategory) {
            return contentCategory(Output.of(contentCategory));
        }

        /**
         * @param customType Sensitive Data Identification Rules of Type. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder customType(@Nullable Output<Integer> customType) {
            $.customType = customType;
            return this;
        }

        /**
         * @param customType Sensitive Data Identification Rules of Type. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder customType(Integer customType) {
            return customType(Output.of(customType));
        }

        public Builder enableDetails(@Nullable Output<Boolean> enableDetails) {
            $.enableDetails = enableDetails;
            return this;
        }

        public Builder enableDetails(Boolean enableDetails) {
            return enableDetails(Output.of(enableDetails));
        }

        /**
         * @param ids A list of Rule IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Rule IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of Rule IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param name The name of rule.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of rule.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nameRegex A regex string to filter results by Rule name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param nameRegex A regex string to filter results by Rule name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        /**
         * @param productId Product ID. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder productId(@Nullable Output<String> productId) {
            $.productId = productId;
            return this;
        }

        /**
         * @param productId Product ID. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder productId(String productId) {
            return productId(Output.of(productId));
        }

        /**
         * @param riskLevelId Sensitive Data Identification Rules of Risk Level ID. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder riskLevelId(@Nullable Output<String> riskLevelId) {
            $.riskLevelId = riskLevelId;
            return this;
        }

        /**
         * @param riskLevelId Sensitive Data Identification Rules of Risk Level ID. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder riskLevelId(String riskLevelId) {
            return riskLevelId(Output.of(riskLevelId));
        }

        /**
         * @param ruleType Rule Type.
         * 
         * @return builder
         * 
         */
        public Builder ruleType(@Nullable Output<Integer> ruleType) {
            $.ruleType = ruleType;
            return this;
        }

        /**
         * @param ruleType Rule Type.
         * 
         * @return builder
         * 
         */
        public Builder ruleType(Integer ruleType) {
            return ruleType(Output.of(ruleType));
        }

        /**
         * @param status Sensitive Data Identification Rules Detection State of.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Sensitive Data Identification Rules Detection State of.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param warnLevel The Level of Risk. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder warnLevel(@Nullable Output<Integer> warnLevel) {
            $.warnLevel = warnLevel;
            return this;
        }

        /**
         * @param warnLevel The Level of Risk. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder warnLevel(Integer warnLevel) {
            return warnLevel(Output.of(warnLevel));
        }

        public GetRulesArgs build() {
            return $;
        }
    }

}
