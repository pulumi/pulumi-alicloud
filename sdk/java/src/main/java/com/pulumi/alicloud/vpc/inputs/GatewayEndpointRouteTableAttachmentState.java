// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewayEndpointRouteTableAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final GatewayEndpointRouteTableAttachmentState Empty = new GatewayEndpointRouteTableAttachmentState();

    /**
     * The ID of the gateway endpoint instance to which you want to associate the route table.
     * 
     */
    @Import(name="gatewayEndpointId")
    private @Nullable Output<String> gatewayEndpointId;

    /**
     * @return The ID of the gateway endpoint instance to which you want to associate the route table.
     * 
     */
    public Optional<Output<String>> gatewayEndpointId() {
        return Optional.ofNullable(this.gatewayEndpointId);
    }

    /**
     * Routing table ID.
     * 
     */
    @Import(name="routeTableId")
    private @Nullable Output<String> routeTableId;

    /**
     * @return Routing table ID.
     * 
     */
    public Optional<Output<String>> routeTableId() {
        return Optional.ofNullable(this.routeTableId);
    }

    /**
     * Status of the gateway endpoint.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Status of the gateway endpoint.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private GatewayEndpointRouteTableAttachmentState() {}

    private GatewayEndpointRouteTableAttachmentState(GatewayEndpointRouteTableAttachmentState $) {
        this.gatewayEndpointId = $.gatewayEndpointId;
        this.routeTableId = $.routeTableId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayEndpointRouteTableAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayEndpointRouteTableAttachmentState $;

        public Builder() {
            $ = new GatewayEndpointRouteTableAttachmentState();
        }

        public Builder(GatewayEndpointRouteTableAttachmentState defaults) {
            $ = new GatewayEndpointRouteTableAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param gatewayEndpointId The ID of the gateway endpoint instance to which you want to associate the route table.
         * 
         * @return builder
         * 
         */
        public Builder gatewayEndpointId(@Nullable Output<String> gatewayEndpointId) {
            $.gatewayEndpointId = gatewayEndpointId;
            return this;
        }

        /**
         * @param gatewayEndpointId The ID of the gateway endpoint instance to which you want to associate the route table.
         * 
         * @return builder
         * 
         */
        public Builder gatewayEndpointId(String gatewayEndpointId) {
            return gatewayEndpointId(Output.of(gatewayEndpointId));
        }

        /**
         * @param routeTableId Routing table ID.
         * 
         * @return builder
         * 
         */
        public Builder routeTableId(@Nullable Output<String> routeTableId) {
            $.routeTableId = routeTableId;
            return this;
        }

        /**
         * @param routeTableId Routing table ID.
         * 
         * @return builder
         * 
         */
        public Builder routeTableId(String routeTableId) {
            return routeTableId(Output.of(routeTableId));
        }

        /**
         * @param status Status of the gateway endpoint.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Status of the gateway endpoint.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public GatewayEndpointRouteTableAttachmentState build() {
            return $;
        }
    }

}
