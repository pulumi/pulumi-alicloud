// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nas.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFileSystemsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFileSystemsPlainArgs Empty = new GetFileSystemsPlainArgs();

    /**
     * A regex string to filter the results by the ：FileSystem description.
     * 
     */
    @Import(name="descriptionRegex")
    private @Nullable String descriptionRegex;

    /**
     * @return A regex string to filter the results by the ：FileSystem description.
     * 
     */
    public Optional<String> descriptionRegex() {
        return Optional.ofNullable(this.descriptionRegex);
    }

    /**
     * A list of FileSystemId.
     * 
     */
    @Import(name="ids")
    private @Nullable List<String> ids;

    /**
     * @return A list of FileSystemId.
     * 
     */
    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The protocol type of the file system.
     * Valid values:
     * `NFS`,
     * `SMB` (Available when the `file_system_type` is `standard`).
     * 
     */
    @Import(name="protocolType")
    private @Nullable String protocolType;

    /**
     * @return The protocol type of the file system.
     * Valid values:
     * `NFS`,
     * `SMB` (Available when the `file_system_type` is `standard`).
     * 
     */
    public Optional<String> protocolType() {
        return Optional.ofNullable(this.protocolType);
    }

    /**
     * The storage type of the file system.
     * * Valid values:
     * * `Performance` (Available when the `file_system_type` is `standard`)
     * * `Capacity` (Available when the `file_system_type` is `standard`)
     * 
     */
    @Import(name="storageType")
    private @Nullable String storageType;

    /**
     * @return The storage type of the file system.
     * * Valid values:
     * * `Performance` (Available when the `file_system_type` is `standard`)
     * * `Capacity` (Available when the `file_system_type` is `standard`)
     * 
     */
    public Optional<String> storageType() {
        return Optional.ofNullable(this.storageType);
    }

    private GetFileSystemsPlainArgs() {}

    private GetFileSystemsPlainArgs(GetFileSystemsPlainArgs $) {
        this.descriptionRegex = $.descriptionRegex;
        this.ids = $.ids;
        this.outputFile = $.outputFile;
        this.protocolType = $.protocolType;
        this.storageType = $.storageType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFileSystemsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFileSystemsPlainArgs $;

        public Builder() {
            $ = new GetFileSystemsPlainArgs();
        }

        public Builder(GetFileSystemsPlainArgs defaults) {
            $ = new GetFileSystemsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param descriptionRegex A regex string to filter the results by the ：FileSystem description.
         * 
         * @return builder
         * 
         */
        public Builder descriptionRegex(@Nullable String descriptionRegex) {
            $.descriptionRegex = descriptionRegex;
            return this;
        }

        /**
         * @param ids A list of FileSystemId.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of FileSystemId.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param protocolType The protocol type of the file system.
         * Valid values:
         * `NFS`,
         * `SMB` (Available when the `file_system_type` is `standard`).
         * 
         * @return builder
         * 
         */
        public Builder protocolType(@Nullable String protocolType) {
            $.protocolType = protocolType;
            return this;
        }

        /**
         * @param storageType The storage type of the file system.
         * * Valid values:
         * * `Performance` (Available when the `file_system_type` is `standard`)
         * * `Capacity` (Available when the `file_system_type` is `standard`)
         * 
         * @return builder
         * 
         */
        public Builder storageType(@Nullable String storageType) {
            $.storageType = storageType;
            return this;
        }

        public GetFileSystemsPlainArgs build() {
            return $;
        }
    }

}
