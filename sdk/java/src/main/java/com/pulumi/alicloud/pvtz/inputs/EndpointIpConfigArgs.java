// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.pvtz.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EndpointIpConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final EndpointIpConfigArgs Empty = new EndpointIpConfigArgs();

    /**
     * The Subnet mask.
     * 
     */
    @Import(name="cidrBlock", required=true)
    private Output<String> cidrBlock;

    /**
     * @return The Subnet mask.
     * 
     */
    public Output<String> cidrBlock() {
        return this.cidrBlock;
    }

    /**
     * The IP address within the parameter range of the subnet mask.  It is recommended to use the IP address assigned by the system.
     * 
     */
    @Import(name="ip")
    private @Nullable Output<String> ip;

    /**
     * @return The IP address within the parameter range of the subnet mask.  It is recommended to use the IP address assigned by the system.
     * 
     */
    public Optional<Output<String>> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
     * The Vswitch id.
     * 
     */
    @Import(name="vswitchId", required=true)
    private Output<String> vswitchId;

    /**
     * @return The Vswitch id.
     * 
     */
    public Output<String> vswitchId() {
        return this.vswitchId;
    }

    /**
     * The Zone ID.
     * 
     */
    @Import(name="zoneId", required=true)
    private Output<String> zoneId;

    /**
     * @return The Zone ID.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    private EndpointIpConfigArgs() {}

    private EndpointIpConfigArgs(EndpointIpConfigArgs $) {
        this.cidrBlock = $.cidrBlock;
        this.ip = $.ip;
        this.vswitchId = $.vswitchId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EndpointIpConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EndpointIpConfigArgs $;

        public Builder() {
            $ = new EndpointIpConfigArgs();
        }

        public Builder(EndpointIpConfigArgs defaults) {
            $ = new EndpointIpConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidrBlock The Subnet mask.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlock(Output<String> cidrBlock) {
            $.cidrBlock = cidrBlock;
            return this;
        }

        /**
         * @param cidrBlock The Subnet mask.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlock(String cidrBlock) {
            return cidrBlock(Output.of(cidrBlock));
        }

        /**
         * @param ip The IP address within the parameter range of the subnet mask.  It is recommended to use the IP address assigned by the system.
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip The IP address within the parameter range of the subnet mask.  It is recommended to use the IP address assigned by the system.
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param vswitchId The Vswitch id.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId The Vswitch id.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        /**
         * @param zoneId The Zone ID.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The Zone ID.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public EndpointIpConfigArgs build() {
            if ($.cidrBlock == null) {
                throw new MissingRequiredPropertyException("EndpointIpConfigArgs", "cidrBlock");
            }
            if ($.vswitchId == null) {
                throw new MissingRequiredPropertyException("EndpointIpConfigArgs", "vswitchId");
            }
            if ($.zoneId == null) {
                throw new MissingRequiredPropertyException("EndpointIpConfigArgs", "zoneId");
            }
            return $;
        }
    }

}
