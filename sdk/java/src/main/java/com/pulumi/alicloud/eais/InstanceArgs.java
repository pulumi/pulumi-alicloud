// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eais;

import com.pulumi.alicloud.eais.inputs.InstanceEnvironmentVarArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceArgs Empty = new InstanceArgs();

    /**
     * EAIS instance category, valid values: `eais`, `jupyter`, `ei`, default is `eais`.
     * 
     */
    @Import(name="category")
    private @Nullable Output<String> category;

    /**
     * @return EAIS instance category, valid values: `eais`, `jupyter`, `ei`, default is `eais`.
     * 
     */
    public Optional<Output<String>> category() {
        return Optional.ofNullable(this.category);
    }

    /**
     * Setting environment variables in eais instance on Initialization See `environment_var` below.
     * 
     */
    @Import(name="environmentVars")
    private @Nullable Output<List<InstanceEnvironmentVarArgs>> environmentVars;

    /**
     * @return Setting environment variables in eais instance on Initialization See `environment_var` below.
     * 
     */
    public Optional<Output<List<InstanceEnvironmentVarArgs>>> environmentVars() {
        return Optional.ofNullable(this.environmentVars);
    }

    /**
     * Whether to force the deletion when the instance status does not meet the deletion conditions.
     * 
     * @deprecated
     * Field &#39;force&#39; is deprecated and will be removed in a future release.
     * 
     */
    @Deprecated /* Field 'force' is deprecated and will be removed in a future release. */
    @Import(name="force")
    private @Nullable Output<Boolean> force;

    /**
     * @return Whether to force the deletion when the instance status does not meet the deletion conditions.
     * 
     * @deprecated
     * Field &#39;force&#39; is deprecated and will be removed in a future release.
     * 
     */
    @Deprecated /* Field 'force' is deprecated and will be removed in a future release. */
    public Optional<Output<Boolean>> force() {
        return Optional.ofNullable(this.force);
    }

    /**
     * EAIS instance image.
     * 
     */
    @Import(name="image")
    private @Nullable Output<String> image;

    /**
     * @return EAIS instance image.
     * 
     */
    public Optional<Output<String>> image() {
        return Optional.ofNullable(this.image);
    }

    /**
     * Name of the instance
     * 
     */
    @Import(name="instanceName")
    private @Nullable Output<String> instanceName;

    /**
     * @return Name of the instance
     * 
     */
    public Optional<Output<String>> instanceName() {
        return Optional.ofNullable(this.instanceName);
    }

    /**
     * EAIS instance type
     * 
     */
    @Import(name="instanceType", required=true)
    private Output<String> instanceType;

    /**
     * @return EAIS instance type
     * 
     */
    public Output<String> instanceType() {
        return this.instanceType;
    }

    /**
     * The ID of the resource group
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * Security group ID
     * 
     */
    @Import(name="securityGroupId", required=true)
    private Output<String> securityGroupId;

    /**
     * @return Security group ID
     * 
     */
    public Output<String> securityGroupId() {
        return this.securityGroupId;
    }

    /**
     * The status of the resource
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Switch ID.
     * 
     */
    @Import(name="vswitchId", required=true)
    private Output<String> vswitchId;

    /**
     * @return Switch ID.
     * 
     */
    public Output<String> vswitchId() {
        return this.vswitchId;
    }

    private InstanceArgs() {}

    private InstanceArgs(InstanceArgs $) {
        this.category = $.category;
        this.environmentVars = $.environmentVars;
        this.force = $.force;
        this.image = $.image;
        this.instanceName = $.instanceName;
        this.instanceType = $.instanceType;
        this.resourceGroupId = $.resourceGroupId;
        this.securityGroupId = $.securityGroupId;
        this.status = $.status;
        this.tags = $.tags;
        this.vswitchId = $.vswitchId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceArgs $;

        public Builder() {
            $ = new InstanceArgs();
        }

        public Builder(InstanceArgs defaults) {
            $ = new InstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param category EAIS instance category, valid values: `eais`, `jupyter`, `ei`, default is `eais`.
         * 
         * @return builder
         * 
         */
        public Builder category(@Nullable Output<String> category) {
            $.category = category;
            return this;
        }

        /**
         * @param category EAIS instance category, valid values: `eais`, `jupyter`, `ei`, default is `eais`.
         * 
         * @return builder
         * 
         */
        public Builder category(String category) {
            return category(Output.of(category));
        }

        /**
         * @param environmentVars Setting environment variables in eais instance on Initialization See `environment_var` below.
         * 
         * @return builder
         * 
         */
        public Builder environmentVars(@Nullable Output<List<InstanceEnvironmentVarArgs>> environmentVars) {
            $.environmentVars = environmentVars;
            return this;
        }

        /**
         * @param environmentVars Setting environment variables in eais instance on Initialization See `environment_var` below.
         * 
         * @return builder
         * 
         */
        public Builder environmentVars(List<InstanceEnvironmentVarArgs> environmentVars) {
            return environmentVars(Output.of(environmentVars));
        }

        /**
         * @param environmentVars Setting environment variables in eais instance on Initialization See `environment_var` below.
         * 
         * @return builder
         * 
         */
        public Builder environmentVars(InstanceEnvironmentVarArgs... environmentVars) {
            return environmentVars(List.of(environmentVars));
        }

        /**
         * @param force Whether to force the deletion when the instance status does not meet the deletion conditions.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;force&#39; is deprecated and will be removed in a future release.
         * 
         */
        @Deprecated /* Field 'force' is deprecated and will be removed in a future release. */
        public Builder force(@Nullable Output<Boolean> force) {
            $.force = force;
            return this;
        }

        /**
         * @param force Whether to force the deletion when the instance status does not meet the deletion conditions.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;force&#39; is deprecated and will be removed in a future release.
         * 
         */
        @Deprecated /* Field 'force' is deprecated and will be removed in a future release. */
        public Builder force(Boolean force) {
            return force(Output.of(force));
        }

        /**
         * @param image EAIS instance image.
         * 
         * @return builder
         * 
         */
        public Builder image(@Nullable Output<String> image) {
            $.image = image;
            return this;
        }

        /**
         * @param image EAIS instance image.
         * 
         * @return builder
         * 
         */
        public Builder image(String image) {
            return image(Output.of(image));
        }

        /**
         * @param instanceName Name of the instance
         * 
         * @return builder
         * 
         */
        public Builder instanceName(@Nullable Output<String> instanceName) {
            $.instanceName = instanceName;
            return this;
        }

        /**
         * @param instanceName Name of the instance
         * 
         * @return builder
         * 
         */
        public Builder instanceName(String instanceName) {
            return instanceName(Output.of(instanceName));
        }

        /**
         * @param instanceType EAIS instance type
         * 
         * @return builder
         * 
         */
        public Builder instanceType(Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType EAIS instance type
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param resourceGroupId The ID of the resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param securityGroupId Security group ID
         * 
         * @return builder
         * 
         */
        public Builder securityGroupId(Output<String> securityGroupId) {
            $.securityGroupId = securityGroupId;
            return this;
        }

        /**
         * @param securityGroupId Security group ID
         * 
         * @return builder
         * 
         */
        public Builder securityGroupId(String securityGroupId) {
            return securityGroupId(Output.of(securityGroupId));
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags The tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param vswitchId Switch ID.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId Switch ID.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        public InstanceArgs build() {
            if ($.instanceType == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "instanceType");
            }
            if ($.securityGroupId == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "securityGroupId");
            }
            if ($.vswitchId == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "vswitchId");
            }
            return $;
        }
    }

}
