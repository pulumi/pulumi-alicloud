// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.message.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceEndpointState extends com.pulumi.resources.ResourceArgs {

    public static final ServiceEndpointState Empty = new ServiceEndpointState();

    /**
     * Specifies whether the endpoint is enabled. Valid values:
     * 
     */
    @Import(name="endpointEnabled")
    private @Nullable Output<Boolean> endpointEnabled;

    /**
     * @return Specifies whether the endpoint is enabled. Valid values:
     * 
     */
    public Optional<Output<Boolean>> endpointEnabled() {
        return Optional.ofNullable(this.endpointEnabled);
    }

    /**
     * Access point type. Value:
     * - public: indicates a public access point. (Currently only public is supported)
     * 
     */
    @Import(name="endpointType")
    private @Nullable Output<String> endpointType;

    /**
     * @return Access point type. Value:
     * - public: indicates a public access point. (Currently only public is supported)
     * 
     */
    public Optional<Output<String>> endpointType() {
        return Optional.ofNullable(this.endpointType);
    }

    private ServiceEndpointState() {}

    private ServiceEndpointState(ServiceEndpointState $) {
        this.endpointEnabled = $.endpointEnabled;
        this.endpointType = $.endpointType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceEndpointState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceEndpointState $;

        public Builder() {
            $ = new ServiceEndpointState();
        }

        public Builder(ServiceEndpointState defaults) {
            $ = new ServiceEndpointState(Objects.requireNonNull(defaults));
        }

        /**
         * @param endpointEnabled Specifies whether the endpoint is enabled. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder endpointEnabled(@Nullable Output<Boolean> endpointEnabled) {
            $.endpointEnabled = endpointEnabled;
            return this;
        }

        /**
         * @param endpointEnabled Specifies whether the endpoint is enabled. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder endpointEnabled(Boolean endpointEnabled) {
            return endpointEnabled(Output.of(endpointEnabled));
        }

        /**
         * @param endpointType Access point type. Value:
         * - public: indicates a public access point. (Currently only public is supported)
         * 
         * @return builder
         * 
         */
        public Builder endpointType(@Nullable Output<String> endpointType) {
            $.endpointType = endpointType;
            return this;
        }

        /**
         * @param endpointType Access point type. Value:
         * - public: indicates a public access point. (Currently only public is supported)
         * 
         * @return builder
         * 
         */
        public Builder endpointType(String endpointType) {
            return endpointType(Output.of(endpointType));
        }

        public ServiceEndpointState build() {
            return $;
        }
    }

}
