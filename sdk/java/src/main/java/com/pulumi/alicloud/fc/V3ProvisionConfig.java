// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.fc.V3ProvisionConfigArgs;
import com.pulumi.alicloud.fc.inputs.V3ProvisionConfigState;
import com.pulumi.alicloud.fc.outputs.V3ProvisionConfigScheduledAction;
import com.pulumi.alicloud.fc.outputs.V3ProvisionConfigTargetTrackingPolicy;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a FCV3 Provision Config resource.
 * 
 * Function Reservation Configuration.
 * 
 * For information about FCV3 Provision Config and how to use it, see [What is Provision Config](https://www.alibabacloud.com/help/en/functioncompute/fc-3-0/developer-reference/api-fc-2023-03-30-putprovisionconfig).
 * 
 * &gt; **NOTE:** Available since v1.230.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.log.Project;
 * import com.pulumi.alicloud.log.ProjectArgs;
 * import com.pulumi.alicloud.log.Store;
 * import com.pulumi.alicloud.log.StoreArgs;
 * import com.pulumi.time.Sleep;
 * import com.pulumi.time.SleepArgs;
 * import com.pulumi.alicloud.fc.V3Function;
 * import com.pulumi.alicloud.fc.V3FunctionArgs;
 * import com.pulumi.alicloud.fc.inputs.V3FunctionCodeArgs;
 * import com.pulumi.alicloud.fc.inputs.V3FunctionLogConfigArgs;
 * import com.pulumi.alicloud.fc.V3ProvisionConfig;
 * import com.pulumi.alicloud.fc.V3ProvisionConfigArgs;
 * import com.pulumi.alicloud.fc.inputs.V3ProvisionConfigTargetTrackingPolicyArgs;
 * import com.pulumi.alicloud.fc.inputs.V3ProvisionConfigScheduledActionArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-example");
 *         var default_ = new Integer("default", IntegerArgs.builder()
 *             .min(10000)
 *             .max(99999)
 *             .build());
 * 
 *         var defaultProject = new Project("defaultProject", ProjectArgs.builder()
 *             .projectName(String.format("%s-%s", name,default_.result()))
 *             .description(name)
 *             .build());
 * 
 *         var defaultStore = new Store("defaultStore", StoreArgs.builder()
 *             .projectName(defaultProject.name())
 *             .logstoreName(String.format("%s-%s", name,default_.result()))
 *             .shardCount(3)
 *             .autoSplit(true)
 *             .maxSplitShardCount(60)
 *             .appendMeta(true)
 *             .build());
 * 
 *         var wait10Minutes = new Sleep("wait10Minutes", SleepArgs.builder()
 *             .createDuration("10m")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(List.of(defaultStore))
 *                 .build());
 * 
 *         var function = new V3Function("function", V3FunctionArgs.builder()
 *             .memorySize(512)
 *             .cpu(0.5)
 *             .handler("index.handler")
 *             .functionName(String.format("%s-%s", name,default_.result()))
 *             .runtime("python3.10")
 *             .diskSize(512)
 *             .code(V3FunctionCodeArgs.builder()
 *                 .zipFile("UEsDBBQACAAIAAAAAAAAAAAAAAAAAAAAAAAIAAAAaW5kZXgucHmEkEFKxEAQRfd9ig9ZTCJOooIwDMwNXLqXnnQlaalUhU5lRj2KZ/FOXkESGR114bJ/P/7jV4b1xRq1hijtFpM1682cuNgPmgysbRulPT0fRxXnMtwrSPyeCdYRokSLnuMLJTTkbUqEvDMbxm1VdcRD6Tk+T1LW2ldB66knsYdA5iNX17ebm6tN2VnPhcswMPmREPuBacb+CiapLarAj9gT6/H97dVlCNScY3mtYvRkxdZlwDKDEnanPWVLdrdkeXEGlFEazVdfPVHaVeHc3N15CUwppwOJXeK7HshAB8NuOU7J6sP4SRXuH/EvbUfMiqMmDqv5M5FNSfAj/wgAAP//UEsHCPl//NYAAQAArwEAAFBLAQIUABQACAAIAAAAAAD5f/zWAAEAAK8BAAAIAAAAAAAAAAAAAAAAAAAAAABpbmRleC5weVBLBQYAAAAAAQABADYAAAA2AQAAAAA=")
 *                 .build())
 *             .logConfig(V3FunctionLogConfigArgs.builder()
 *                 .enableInstanceMetrics(true)
 *                 .enableRequestMetrics(true)
 *                 .project(defaultProject.projectName())
 *                 .logstore(defaultStore.logstoreName())
 *                 .logBeginRule("None")
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(wait10Minutes)
 *                 .build());
 * 
 *         var defaultV3ProvisionConfig = new V3ProvisionConfig("defaultV3ProvisionConfig", V3ProvisionConfigArgs.builder()
 *             .target(1)
 *             .targetTrackingPolicies(            
 *                 V3ProvisionConfigTargetTrackingPolicyArgs.builder()
 *                     .name("t1")
 *                     .startTime("2030-10-10T10:10:10Z")
 *                     .endTime("2035-10-10T10:10:10Z")
 *                     .minCapacity(0)
 *                     .maxCapacity(1)
 *                     .metricTarget(1.0)
 *                     .metricType("ProvisionedConcurrencyUtilization")
 *                     .build(),
 *                 V3ProvisionConfigTargetTrackingPolicyArgs.builder()
 *                     .metricTarget(1.0)
 *                     .metricType("ProvisionedConcurrencyUtilization")
 *                     .name("t2")
 *                     .startTime("2030-10-10T10:10:10Z")
 *                     .endTime("2035-10-10T10:10:10Z")
 *                     .minCapacity(0)
 *                     .maxCapacity(1)
 *                     .build(),
 *                 V3ProvisionConfigTargetTrackingPolicyArgs.builder()
 *                     .metricType("ProvisionedConcurrencyUtilization")
 *                     .timeZone("Asia/Shanghai")
 *                     .name("t3")
 *                     .startTime("2030-10-10T10:10:10")
 *                     .endTime("2035-10-10T10:10:10")
 *                     .minCapacity(0)
 *                     .maxCapacity(1)
 *                     .metricTarget(1.0)
 *                     .build())
 *             .scheduledActions(            
 *                 V3ProvisionConfigScheduledActionArgs.builder()
 *                     .target(0)
 *                     .name("s1")
 *                     .startTime("2030-10-10T10:10:10Z")
 *                     .endTime("2035-10-10T10:10:10Z")
 *                     .scheduleExpression("cron(0 0 4 * * *)")
 *                     .build(),
 *                 V3ProvisionConfigScheduledActionArgs.builder()
 *                     .name("s2")
 *                     .startTime("2030-10-10T10:10:10Z")
 *                     .endTime("2035-10-10T10:10:10Z")
 *                     .scheduleExpression("cron(0 0 6 * * *)")
 *                     .target(1)
 *                     .build(),
 *                 V3ProvisionConfigScheduledActionArgs.builder()
 *                     .startTime("2030-10-10T10:10:10")
 *                     .endTime("2035-10-10T10:10:10")
 *                     .scheduleExpression("cron(0 0 7 * * *)")
 *                     .target(0)
 *                     .timeZone("Asia/Shanghai")
 *                     .name("s3")
 *                     .build())
 *             .qualifier("LATEST")
 *             .alwaysAllocateGpu(true)
 *             .functionName(function.functionName())
 *             .alwaysAllocateCpu(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * FCV3 Provision Config can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:fc/v3ProvisionConfig:V3ProvisionConfig example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:fc/v3ProvisionConfig:V3ProvisionConfig")
public class V3ProvisionConfig extends com.pulumi.resources.CustomResource {
    /**
     * Whether the CPU is always allocated. The default value is true.
     * 
     */
    @Export(name="alwaysAllocateCpu", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> alwaysAllocateCpu;

    /**
     * @return Whether the CPU is always allocated. The default value is true.
     * 
     */
    public Output<Optional<Boolean>> alwaysAllocateCpu() {
        return Codegen.optional(this.alwaysAllocateCpu);
    }
    /**
     * Whether to always assign GPU to function instance
     * 
     */
    @Export(name="alwaysAllocateGpu", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> alwaysAllocateGpu;

    /**
     * @return Whether to always assign GPU to function instance
     * 
     */
    public Output<Optional<Boolean>> alwaysAllocateGpu() {
        return Codegen.optional(this.alwaysAllocateGpu);
    }
    /**
     * (Available since v1.234.0) Number of actual resources
     * 
     */
    @Export(name="current", refs={Integer.class}, tree="[0]")
    private Output<Integer> current;

    /**
     * @return (Available since v1.234.0) Number of actual resources
     * 
     */
    public Output<Integer> current() {
        return this.current;
    }
    /**
     * (Available since v1.234.0) Error message when a Reserved Instance creation fails
     * 
     */
    @Export(name="currentError", refs={String.class}, tree="[0]")
    private Output<String> currentError;

    /**
     * @return (Available since v1.234.0) Error message when a Reserved Instance creation fails
     * 
     */
    public Output<String> currentError() {
        return this.currentError;
    }
    /**
     * (Available since v1.234.0) Resource Description of the function
     * 
     */
    @Export(name="functionArn", refs={String.class}, tree="[0]")
    private Output<String> functionArn;

    /**
     * @return (Available since v1.234.0) Resource Description of the function
     * 
     */
    public Output<String> functionArn() {
        return this.functionArn;
    }
    /**
     * The name of the function. If this parameter is not specified, the provisioned configurations of all functions are listed.
     * 
     */
    @Export(name="functionName", refs={String.class}, tree="[0]")
    private Output<String> functionName;

    /**
     * @return The name of the function. If this parameter is not specified, the provisioned configurations of all functions are listed.
     * 
     */
    public Output<String> functionName() {
        return this.functionName;
    }
    /**
     * The function alias or LATEST.
     * 
     */
    @Export(name="qualifier", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> qualifier;

    /**
     * @return The function alias or LATEST.
     * 
     */
    public Output<Optional<String>> qualifier() {
        return Codegen.optional(this.qualifier);
    }
    /**
     * Timing policy configuration See `scheduled_actions` below.
     * 
     */
    @Export(name="scheduledActions", refs={List.class,V3ProvisionConfigScheduledAction.class}, tree="[0,1]")
    private Output</* @Nullable */ List<V3ProvisionConfigScheduledAction>> scheduledActions;

    /**
     * @return Timing policy configuration See `scheduled_actions` below.
     * 
     */
    public Output<Optional<List<V3ProvisionConfigScheduledAction>>> scheduledActions() {
        return Codegen.optional(this.scheduledActions);
    }
    /**
     * Number of reserved target resources. The value range is [0,10000].
     * 
     */
    @Export(name="target", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> target;

    /**
     * @return Number of reserved target resources. The value range is [0,10000].
     * 
     */
    public Output<Optional<Integer>> target() {
        return Codegen.optional(this.target);
    }
    /**
     * Metric tracking scaling policy configuration See `target_tracking_policies` below.
     * 
     */
    @Export(name="targetTrackingPolicies", refs={List.class,V3ProvisionConfigTargetTrackingPolicy.class}, tree="[0,1]")
    private Output</* @Nullable */ List<V3ProvisionConfigTargetTrackingPolicy>> targetTrackingPolicies;

    /**
     * @return Metric tracking scaling policy configuration See `target_tracking_policies` below.
     * 
     */
    public Output<Optional<List<V3ProvisionConfigTargetTrackingPolicy>>> targetTrackingPolicies() {
        return Codegen.optional(this.targetTrackingPolicies);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public V3ProvisionConfig(java.lang.String name) {
        this(name, V3ProvisionConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public V3ProvisionConfig(java.lang.String name, V3ProvisionConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public V3ProvisionConfig(java.lang.String name, V3ProvisionConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:fc/v3ProvisionConfig:V3ProvisionConfig", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private V3ProvisionConfig(java.lang.String name, Output<java.lang.String> id, @Nullable V3ProvisionConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:fc/v3ProvisionConfig:V3ProvisionConfig", name, state, makeResourceOptions(options, id), false);
    }

    private static V3ProvisionConfigArgs makeArgs(V3ProvisionConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? V3ProvisionConfigArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static V3ProvisionConfig get(java.lang.String name, Output<java.lang.String> id, @Nullable V3ProvisionConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new V3ProvisionConfig(name, id, state, options);
    }
}
