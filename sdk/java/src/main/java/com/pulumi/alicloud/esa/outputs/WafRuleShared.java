// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.outputs;

import com.pulumi.alicloud.esa.outputs.WafRuleSharedActions;
import com.pulumi.alicloud.esa.outputs.WafRuleSharedMatch;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WafRuleShared {
    /**
     * @return The default action executed under shared configuration.
     * 
     */
    private @Nullable String action;
    /**
     * @return Extended action configurations under shared settings. See `actions` below.
     * 
     */
    private @Nullable WafRuleSharedActions actions;
    /**
     * @return Specify the cross-domain site ID.
     * 
     */
    private @Nullable Integer crossSiteId;
    /**
     * @return The match expression used in shared configuration.
     * 
     */
    private @Nullable String expression;
    /**
     * @return Configuration of the request matching logic engine. See `match` below.
     * 
     */
    private @Nullable WafRuleSharedMatch match;
    /**
     * @return The integration mode of the Web SDK:
     * 
     */
    private @Nullable String mode;
    /**
     * @return The display name of the ruleset.
     * 
     */
    private @Nullable String name;
    /**
     * @return The target type protected by this rule: web or app.
     * 
     */
    private @Nullable String target;

    private WafRuleShared() {}
    /**
     * @return The default action executed under shared configuration.
     * 
     */
    public Optional<String> action() {
        return Optional.ofNullable(this.action);
    }
    /**
     * @return Extended action configurations under shared settings. See `actions` below.
     * 
     */
    public Optional<WafRuleSharedActions> actions() {
        return Optional.ofNullable(this.actions);
    }
    /**
     * @return Specify the cross-domain site ID.
     * 
     */
    public Optional<Integer> crossSiteId() {
        return Optional.ofNullable(this.crossSiteId);
    }
    /**
     * @return The match expression used in shared configuration.
     * 
     */
    public Optional<String> expression() {
        return Optional.ofNullable(this.expression);
    }
    /**
     * @return Configuration of the request matching logic engine. See `match` below.
     * 
     */
    public Optional<WafRuleSharedMatch> match() {
        return Optional.ofNullable(this.match);
    }
    /**
     * @return The integration mode of the Web SDK:
     * 
     */
    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }
    /**
     * @return The display name of the ruleset.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The target type protected by this rule: web or app.
     * 
     */
    public Optional<String> target() {
        return Optional.ofNullable(this.target);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WafRuleShared defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String action;
        private @Nullable WafRuleSharedActions actions;
        private @Nullable Integer crossSiteId;
        private @Nullable String expression;
        private @Nullable WafRuleSharedMatch match;
        private @Nullable String mode;
        private @Nullable String name;
        private @Nullable String target;
        public Builder() {}
        public Builder(WafRuleShared defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.actions = defaults.actions;
    	      this.crossSiteId = defaults.crossSiteId;
    	      this.expression = defaults.expression;
    	      this.match = defaults.match;
    	      this.mode = defaults.mode;
    	      this.name = defaults.name;
    	      this.target = defaults.target;
        }

        @CustomType.Setter
        public Builder action(@Nullable String action) {

            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder actions(@Nullable WafRuleSharedActions actions) {

            this.actions = actions;
            return this;
        }
        @CustomType.Setter
        public Builder crossSiteId(@Nullable Integer crossSiteId) {

            this.crossSiteId = crossSiteId;
            return this;
        }
        @CustomType.Setter
        public Builder expression(@Nullable String expression) {

            this.expression = expression;
            return this;
        }
        @CustomType.Setter
        public Builder match(@Nullable WafRuleSharedMatch match) {

            this.match = match;
            return this;
        }
        @CustomType.Setter
        public Builder mode(@Nullable String mode) {

            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder target(@Nullable String target) {

            this.target = target;
            return this;
        }
        public WafRuleShared build() {
            final var _resultValue = new WafRuleShared();
            _resultValue.action = action;
            _resultValue.actions = actions;
            _resultValue.crossSiteId = crossSiteId;
            _resultValue.expression = expression;
            _resultValue.match = match;
            _resultValue.mode = mode;
            _resultValue.name = name;
            _resultValue.target = target;
            return _resultValue;
        }
    }
}
