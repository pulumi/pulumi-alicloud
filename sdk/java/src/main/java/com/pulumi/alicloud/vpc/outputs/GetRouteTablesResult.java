// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.outputs;

import com.pulumi.alicloud.vpc.outputs.GetRouteTablesTable;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRouteTablesResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return (Optional) A list of Route Tables IDs.
     * 
     */
    private List<String> ids;
    private @Nullable String nameRegex;
    /**
     * @return A list of Route Tables names.
     * 
     */
    private List<String> names;
    private @Nullable String outputFile;
    private @Nullable Integer pageNumber;
    private @Nullable Integer pageSize;
    /**
     * @return The Id of resource group which route tables belongs.
     * 
     */
    private @Nullable String resourceGroupId;
    /**
     * @return The route table name.
     * 
     */
    private @Nullable String routeTableName;
    /**
     * @return Router Id of the route table.
     * 
     */
    private @Nullable String routerId;
    /**
     * @return The route type.
     * 
     */
    private @Nullable String routerType;
    /**
     * @return The status of route table.
     * 
     */
    private @Nullable String status;
    /**
     * @return A list of Route Tables. Each element contains the following attributes:
     * 
     */
    private List<GetRouteTablesTable> tables;
    private @Nullable Map<String,Object> tags;
    private Integer totalCount;
    /**
     * @return The VPC ID.
     * 
     */
    private @Nullable String vpcId;

    private GetRouteTablesResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (Optional) A list of Route Tables IDs.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    /**
     * @return A list of Route Tables names.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public Optional<Integer> pageNumber() {
        return Optional.ofNullable(this.pageNumber);
    }
    public Optional<Integer> pageSize() {
        return Optional.ofNullable(this.pageSize);
    }
    /**
     * @return The Id of resource group which route tables belongs.
     * 
     */
    public Optional<String> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }
    /**
     * @return The route table name.
     * 
     */
    public Optional<String> routeTableName() {
        return Optional.ofNullable(this.routeTableName);
    }
    /**
     * @return Router Id of the route table.
     * 
     */
    public Optional<String> routerId() {
        return Optional.ofNullable(this.routerId);
    }
    /**
     * @return The route type.
     * 
     */
    public Optional<String> routerType() {
        return Optional.ofNullable(this.routerType);
    }
    /**
     * @return The status of route table.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return A list of Route Tables. Each element contains the following attributes:
     * 
     */
    public List<GetRouteTablesTable> tables() {
        return this.tables;
    }
    public Map<String,Object> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Integer totalCount() {
        return this.totalCount;
    }
    /**
     * @return The VPC ID.
     * 
     */
    public Optional<String> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRouteTablesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<String> ids;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String outputFile;
        private @Nullable Integer pageNumber;
        private @Nullable Integer pageSize;
        private @Nullable String resourceGroupId;
        private @Nullable String routeTableName;
        private @Nullable String routerId;
        private @Nullable String routerType;
        private @Nullable String status;
        private List<GetRouteTablesTable> tables;
        private @Nullable Map<String,Object> tags;
        private Integer totalCount;
        private @Nullable String vpcId;
        public Builder() {}
        public Builder(GetRouteTablesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.outputFile = defaults.outputFile;
    	      this.pageNumber = defaults.pageNumber;
    	      this.pageSize = defaults.pageSize;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.routeTableName = defaults.routeTableName;
    	      this.routerId = defaults.routerId;
    	      this.routerType = defaults.routerType;
    	      this.status = defaults.status;
    	      this.tables = defaults.tables;
    	      this.tags = defaults.tags;
    	      this.totalCount = defaults.totalCount;
    	      this.vpcId = defaults.vpcId;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder names(List<String> names) {
            this.names = Objects.requireNonNull(names);
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder pageNumber(@Nullable Integer pageNumber) {
            this.pageNumber = pageNumber;
            return this;
        }
        @CustomType.Setter
        public Builder pageSize(@Nullable Integer pageSize) {
            this.pageSize = pageSize;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupId(@Nullable String resourceGroupId) {
            this.resourceGroupId = resourceGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder routeTableName(@Nullable String routeTableName) {
            this.routeTableName = routeTableName;
            return this;
        }
        @CustomType.Setter
        public Builder routerId(@Nullable String routerId) {
            this.routerId = routerId;
            return this;
        }
        @CustomType.Setter
        public Builder routerType(@Nullable String routerType) {
            this.routerType = routerType;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tables(List<GetRouteTablesTable> tables) {
            this.tables = Objects.requireNonNull(tables);
            return this;
        }
        public Builder tables(GetRouteTablesTable... tables) {
            return tables(List.of(tables));
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,Object> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder totalCount(Integer totalCount) {
            this.totalCount = Objects.requireNonNull(totalCount);
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(@Nullable String vpcId) {
            this.vpcId = vpcId;
            return this;
        }
        public GetRouteTablesResult build() {
            final var o = new GetRouteTablesResult();
            o.id = id;
            o.ids = ids;
            o.nameRegex = nameRegex;
            o.names = names;
            o.outputFile = outputFile;
            o.pageNumber = pageNumber;
            o.pageSize = pageSize;
            o.resourceGroupId = resourceGroupId;
            o.routeTableName = routeTableName;
            o.routerId = routerId;
            o.routerType = routerType;
            o.status = status;
            o.tables = tables;
            o.tags = tags;
            o.totalCount = totalCount;
            o.vpcId = vpcId;
            return o;
        }
    }
}
