// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.emrv2.outputs;

import com.pulumi.alicloud.emrv2.outputs.GetClusterInstancesInstance;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterInstancesResult {
    private String clusterId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of Cluster ecs instance IDS.
     * 
     */
    private List<String> ids;
    private @Nullable List<String> instanceStates;
    /**
     * @return A list of Emr Cluster ecs instances. Each element contains the following attributes:
     * 
     */
    private List<GetClusterInstancesInstance> instances;
    private @Nullable Integer maxResults;
    /**
     * @return A list of Cluster ecs instance names.
     * 
     */
    private List<String> names;
    private String nextToken;
    private @Nullable List<String> nodeGroupIds;
    private @Nullable List<String> nodeGroupNames;
    private @Nullable String outputFile;
    private @Nullable Map<String,String> tags;
    /**
     * @return The total count of list emr cluster ecs instances.
     * 
     */
    private Integer totalCount;

    private GetClusterInstancesResult() {}
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of Cluster ecs instance IDS.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    public List<String> instanceStates() {
        return this.instanceStates == null ? List.of() : this.instanceStates;
    }
    /**
     * @return A list of Emr Cluster ecs instances. Each element contains the following attributes:
     * 
     */
    public List<GetClusterInstancesInstance> instances() {
        return this.instances;
    }
    public Optional<Integer> maxResults() {
        return Optional.ofNullable(this.maxResults);
    }
    /**
     * @return A list of Cluster ecs instance names.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    public String nextToken() {
        return this.nextToken;
    }
    public List<String> nodeGroupIds() {
        return this.nodeGroupIds == null ? List.of() : this.nodeGroupIds;
    }
    public List<String> nodeGroupNames() {
        return this.nodeGroupNames == null ? List.of() : this.nodeGroupNames;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The total count of list emr cluster ecs instances.
     * 
     */
    public Integer totalCount() {
        return this.totalCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterInstancesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterId;
        private String id;
        private List<String> ids;
        private @Nullable List<String> instanceStates;
        private List<GetClusterInstancesInstance> instances;
        private @Nullable Integer maxResults;
        private List<String> names;
        private String nextToken;
        private @Nullable List<String> nodeGroupIds;
        private @Nullable List<String> nodeGroupNames;
        private @Nullable String outputFile;
        private @Nullable Map<String,String> tags;
        private Integer totalCount;
        public Builder() {}
        public Builder(GetClusterInstancesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterId = defaults.clusterId;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.instanceStates = defaults.instanceStates;
    	      this.instances = defaults.instances;
    	      this.maxResults = defaults.maxResults;
    	      this.names = defaults.names;
    	      this.nextToken = defaults.nextToken;
    	      this.nodeGroupIds = defaults.nodeGroupIds;
    	      this.nodeGroupNames = defaults.nodeGroupNames;
    	      this.outputFile = defaults.outputFile;
    	      this.tags = defaults.tags;
    	      this.totalCount = defaults.totalCount;
        }

        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            if (clusterId == null) {
              throw new MissingRequiredPropertyException("GetClusterInstancesResult", "clusterId");
            }
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetClusterInstancesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            if (ids == null) {
              throw new MissingRequiredPropertyException("GetClusterInstancesResult", "ids");
            }
            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder instanceStates(@Nullable List<String> instanceStates) {

            this.instanceStates = instanceStates;
            return this;
        }
        public Builder instanceStates(String... instanceStates) {
            return instanceStates(List.of(instanceStates));
        }
        @CustomType.Setter
        public Builder instances(List<GetClusterInstancesInstance> instances) {
            if (instances == null) {
              throw new MissingRequiredPropertyException("GetClusterInstancesResult", "instances");
            }
            this.instances = instances;
            return this;
        }
        public Builder instances(GetClusterInstancesInstance... instances) {
            return instances(List.of(instances));
        }
        @CustomType.Setter
        public Builder maxResults(@Nullable Integer maxResults) {

            this.maxResults = maxResults;
            return this;
        }
        @CustomType.Setter
        public Builder names(List<String> names) {
            if (names == null) {
              throw new MissingRequiredPropertyException("GetClusterInstancesResult", "names");
            }
            this.names = names;
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder nextToken(String nextToken) {
            if (nextToken == null) {
              throw new MissingRequiredPropertyException("GetClusterInstancesResult", "nextToken");
            }
            this.nextToken = nextToken;
            return this;
        }
        @CustomType.Setter
        public Builder nodeGroupIds(@Nullable List<String> nodeGroupIds) {

            this.nodeGroupIds = nodeGroupIds;
            return this;
        }
        public Builder nodeGroupIds(String... nodeGroupIds) {
            return nodeGroupIds(List.of(nodeGroupIds));
        }
        @CustomType.Setter
        public Builder nodeGroupNames(@Nullable List<String> nodeGroupNames) {

            this.nodeGroupNames = nodeGroupNames;
            return this;
        }
        public Builder nodeGroupNames(String... nodeGroupNames) {
            return nodeGroupNames(List.of(nodeGroupNames));
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {

            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder totalCount(Integer totalCount) {
            if (totalCount == null) {
              throw new MissingRequiredPropertyException("GetClusterInstancesResult", "totalCount");
            }
            this.totalCount = totalCount;
            return this;
        }
        public GetClusterInstancesResult build() {
            final var _resultValue = new GetClusterInstancesResult();
            _resultValue.clusterId = clusterId;
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.instanceStates = instanceStates;
            _resultValue.instances = instances;
            _resultValue.maxResults = maxResults;
            _resultValue.names = names;
            _resultValue.nextToken = nextToken;
            _resultValue.nodeGroupIds = nodeGroupIds;
            _resultValue.nodeGroupNames = nodeGroupNames;
            _resultValue.outputFile = outputFile;
            _resultValue.tags = tags;
            _resultValue.totalCount = totalCount;
            return _resultValue;
        }
    }
}
