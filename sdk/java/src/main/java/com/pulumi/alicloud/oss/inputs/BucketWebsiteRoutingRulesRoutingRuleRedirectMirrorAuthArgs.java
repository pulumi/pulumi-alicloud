// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorAuthArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorAuthArgs Empty = new BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorAuthArgs();

    /**
     * Mirror back-to-source source Station back-to-source AK
     * 
     */
    @Import(name="accessKeyId")
    private @Nullable Output<String> accessKeyId;

    /**
     * @return Mirror back-to-source source Station back-to-source AK
     * 
     */
    public Optional<Output<String>> accessKeyId() {
        return Optional.ofNullable(this.accessKeyId);
    }

    /**
     * Mirroring back to the source station back to the source SK will be automatically desensitized when obtaining the configuration.
     * 
     */
    @Import(name="accessKeySecret")
    private @Nullable Output<String> accessKeySecret;

    /**
     * @return Mirroring back to the source station back to the source SK will be automatically desensitized when obtaining the configuration.
     * 
     */
    public Optional<Output<String>> accessKeySecret() {
        return Optional.ofNullable(this.accessKeySecret);
    }

    /**
     * Authentication type of mirror return Source
     * 
     */
    @Import(name="authType")
    private @Nullable Output<String> authType;

    /**
     * @return Authentication type of mirror return Source
     * 
     */
    public Optional<Output<String>> authType() {
        return Optional.ofNullable(this.authType);
    }

    /**
     * Signature Region
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Signature Region
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorAuthArgs() {}

    private BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorAuthArgs(BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorAuthArgs $) {
        this.accessKeyId = $.accessKeyId;
        this.accessKeySecret = $.accessKeySecret;
        this.authType = $.authType;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorAuthArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorAuthArgs $;

        public Builder() {
            $ = new BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorAuthArgs();
        }

        public Builder(BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorAuthArgs defaults) {
            $ = new BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorAuthArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKeyId Mirror back-to-source source Station back-to-source AK
         * 
         * @return builder
         * 
         */
        public Builder accessKeyId(@Nullable Output<String> accessKeyId) {
            $.accessKeyId = accessKeyId;
            return this;
        }

        /**
         * @param accessKeyId Mirror back-to-source source Station back-to-source AK
         * 
         * @return builder
         * 
         */
        public Builder accessKeyId(String accessKeyId) {
            return accessKeyId(Output.of(accessKeyId));
        }

        /**
         * @param accessKeySecret Mirroring back to the source station back to the source SK will be automatically desensitized when obtaining the configuration.
         * 
         * @return builder
         * 
         */
        public Builder accessKeySecret(@Nullable Output<String> accessKeySecret) {
            $.accessKeySecret = accessKeySecret;
            return this;
        }

        /**
         * @param accessKeySecret Mirroring back to the source station back to the source SK will be automatically desensitized when obtaining the configuration.
         * 
         * @return builder
         * 
         */
        public Builder accessKeySecret(String accessKeySecret) {
            return accessKeySecret(Output.of(accessKeySecret));
        }

        /**
         * @param authType Authentication type of mirror return Source
         * 
         * @return builder
         * 
         */
        public Builder authType(@Nullable Output<String> authType) {
            $.authType = authType;
            return this;
        }

        /**
         * @param authType Authentication type of mirror return Source
         * 
         * @return builder
         * 
         */
        public Builder authType(String authType) {
            return authType(Output.of(authType));
        }

        /**
         * @param region Signature Region
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Signature Region
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public BucketWebsiteRoutingRulesRoutingRuleRedirectMirrorAuthArgs build() {
            return $;
        }
    }

}
