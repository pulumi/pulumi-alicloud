// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.schedulerx.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobMapTaskXattrsArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobMapTaskXattrsArgs Empty = new JobMapTaskXattrsArgs();

    /**
     * The number of threads to execute a single trigger. The default value is 5.
     * 
     */
    @Import(name="consumerSize")
    private @Nullable Output<Integer> consumerSize;

    /**
     * @return The number of threads to execute a single trigger. The default value is 5.
     * 
     */
    public Optional<Output<Integer>> consumerSize() {
        return Optional.ofNullable(this.consumerSize);
    }

    /**
     * The number of subtask distribution threads. The default value is 5.
     * 
     */
    @Import(name="dispatcherSize")
    private @Nullable Output<Integer> dispatcherSize;

    /**
     * @return The number of subtask distribution threads. The default value is 5.
     * 
     */
    public Optional<Output<Integer>> dispatcherSize() {
        return Optional.ofNullable(this.dispatcherSize);
    }

    /**
     * The number of sub-tasks pulled by a parallel task at a time. The default value is 100.
     * 
     */
    @Import(name="pageSize")
    private @Nullable Output<Integer> pageSize;

    /**
     * @return The number of sub-tasks pulled by a parallel task at a time. The default value is 100.
     * 
     */
    public Optional<Output<Integer>> pageSize() {
        return Optional.ofNullable(this.pageSize);
    }

    /**
     * The upper limit of the sub-task queue cache. The default value is 10000.
     * 
     */
    @Import(name="queueSize")
    private @Nullable Output<Integer> queueSize;

    /**
     * @return The upper limit of the sub-task queue cache. The default value is 10000.
     * 
     */
    public Optional<Output<Integer>> queueSize() {
        return Optional.ofNullable(this.queueSize);
    }

    /**
     * Subtask failure retry interval.
     * 
     */
    @Import(name="taskAttemptInterval")
    private @Nullable Output<Integer> taskAttemptInterval;

    /**
     * @return Subtask failure retry interval.
     * 
     */
    public Optional<Output<Integer>> taskAttemptInterval() {
        return Optional.ofNullable(this.taskAttemptInterval);
    }

    /**
     * The number of failed sub-task retries.
     * 
     */
    @Import(name="taskMaxAttempt")
    private @Nullable Output<Integer> taskMaxAttempt;

    /**
     * @return The number of failed sub-task retries.
     * 
     */
    public Optional<Output<Integer>> taskMaxAttempt() {
        return Optional.ofNullable(this.taskMaxAttempt);
    }

    private JobMapTaskXattrsArgs() {}

    private JobMapTaskXattrsArgs(JobMapTaskXattrsArgs $) {
        this.consumerSize = $.consumerSize;
        this.dispatcherSize = $.dispatcherSize;
        this.pageSize = $.pageSize;
        this.queueSize = $.queueSize;
        this.taskAttemptInterval = $.taskAttemptInterval;
        this.taskMaxAttempt = $.taskMaxAttempt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobMapTaskXattrsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobMapTaskXattrsArgs $;

        public Builder() {
            $ = new JobMapTaskXattrsArgs();
        }

        public Builder(JobMapTaskXattrsArgs defaults) {
            $ = new JobMapTaskXattrsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param consumerSize The number of threads to execute a single trigger. The default value is 5.
         * 
         * @return builder
         * 
         */
        public Builder consumerSize(@Nullable Output<Integer> consumerSize) {
            $.consumerSize = consumerSize;
            return this;
        }

        /**
         * @param consumerSize The number of threads to execute a single trigger. The default value is 5.
         * 
         * @return builder
         * 
         */
        public Builder consumerSize(Integer consumerSize) {
            return consumerSize(Output.of(consumerSize));
        }

        /**
         * @param dispatcherSize The number of subtask distribution threads. The default value is 5.
         * 
         * @return builder
         * 
         */
        public Builder dispatcherSize(@Nullable Output<Integer> dispatcherSize) {
            $.dispatcherSize = dispatcherSize;
            return this;
        }

        /**
         * @param dispatcherSize The number of subtask distribution threads. The default value is 5.
         * 
         * @return builder
         * 
         */
        public Builder dispatcherSize(Integer dispatcherSize) {
            return dispatcherSize(Output.of(dispatcherSize));
        }

        /**
         * @param pageSize The number of sub-tasks pulled by a parallel task at a time. The default value is 100.
         * 
         * @return builder
         * 
         */
        public Builder pageSize(@Nullable Output<Integer> pageSize) {
            $.pageSize = pageSize;
            return this;
        }

        /**
         * @param pageSize The number of sub-tasks pulled by a parallel task at a time. The default value is 100.
         * 
         * @return builder
         * 
         */
        public Builder pageSize(Integer pageSize) {
            return pageSize(Output.of(pageSize));
        }

        /**
         * @param queueSize The upper limit of the sub-task queue cache. The default value is 10000.
         * 
         * @return builder
         * 
         */
        public Builder queueSize(@Nullable Output<Integer> queueSize) {
            $.queueSize = queueSize;
            return this;
        }

        /**
         * @param queueSize The upper limit of the sub-task queue cache. The default value is 10000.
         * 
         * @return builder
         * 
         */
        public Builder queueSize(Integer queueSize) {
            return queueSize(Output.of(queueSize));
        }

        /**
         * @param taskAttemptInterval Subtask failure retry interval.
         * 
         * @return builder
         * 
         */
        public Builder taskAttemptInterval(@Nullable Output<Integer> taskAttemptInterval) {
            $.taskAttemptInterval = taskAttemptInterval;
            return this;
        }

        /**
         * @param taskAttemptInterval Subtask failure retry interval.
         * 
         * @return builder
         * 
         */
        public Builder taskAttemptInterval(Integer taskAttemptInterval) {
            return taskAttemptInterval(Output.of(taskAttemptInterval));
        }

        /**
         * @param taskMaxAttempt The number of failed sub-task retries.
         * 
         * @return builder
         * 
         */
        public Builder taskMaxAttempt(@Nullable Output<Integer> taskMaxAttempt) {
            $.taskMaxAttempt = taskMaxAttempt;
            return this;
        }

        /**
         * @param taskMaxAttempt The number of failed sub-task retries.
         * 
         * @return builder
         * 
         */
        public Builder taskMaxAttempt(Integer taskMaxAttempt) {
            return taskMaxAttempt(Output.of(taskMaxAttempt));
        }

        public JobMapTaskXattrsArgs build() {
            return $;
        }
    }

}
