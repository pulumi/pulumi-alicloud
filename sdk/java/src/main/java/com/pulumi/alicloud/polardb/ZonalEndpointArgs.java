// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.polardb;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZonalEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZonalEndpointArgs Empty = new ZonalEndpointArgs();

    /**
     * Whether the new node automatically joins the default cluster address. Valid values are `Enable`, `Disable`. When creating a new custom endpoint, default to `Enable`.
     * 
     */
    @Import(name="autoAddNewNodes")
    private @Nullable Output<String> autoAddNewNodes;

    /**
     * @return Whether the new node automatically joins the default cluster address. Valid values are `Enable`, `Disable`. When creating a new custom endpoint, default to `Enable`.
     * 
     */
    public Optional<Output<String>> autoAddNewNodes() {
        return Optional.ofNullable(this.autoAddNewNodes);
    }

    /**
     * The Id of cluster that can run database.
     * 
     */
    @Import(name="dbClusterId", required=true)
    private Output<String> dbClusterId;

    /**
     * @return The Id of cluster that can run database.
     * 
     */
    public Output<String> dbClusterId() {
        return this.dbClusterId;
    }

    /**
     * referenced from the dbClusterNodesIds attribute of alicloud_polardb_zonal_db_cluster..
     * 
     */
    @Import(name="dbClusterNodesIds", required=true)
    private Output<Map<String,String>> dbClusterNodesIds;

    /**
     * @return referenced from the dbClusterNodesIds attribute of alicloud_polardb_zonal_db_cluster..
     * 
     */
    public Output<Map<String,String>> dbClusterNodesIds() {
        return this.dbClusterNodesIds;
    }

    /**
     * The name of the endpoint.
     * 
     */
    @Import(name="dbEndpointDescription")
    private @Nullable Output<String> dbEndpointDescription;

    /**
     * @return The name of the endpoint.
     * 
     */
    public Optional<Output<String>> dbEndpointDescription() {
        return Optional.ofNullable(this.dbEndpointDescription);
    }

    /**
     * The advanced settings of the endpoint of Apsara PolarDB clusters are in JSON format. Including the settings of consistency level, transaction splitting, connection pool, and offload reads from primary node. For more details, see the [description of EndpointConfig in the Request parameters table for details](https://www.alibabacloud.com/help/doc-detail/116593.htm).
     * 
     */
    @Import(name="endpointConfig")
    private @Nullable Output<Map<String,String>> endpointConfig;

    /**
     * @return The advanced settings of the endpoint of Apsara PolarDB clusters are in JSON format. Including the settings of consistency level, transaction splitting, connection pool, and offload reads from primary node. For more details, see the [description of EndpointConfig in the Request parameters table for details](https://www.alibabacloud.com/help/doc-detail/116593.htm).
     * 
     */
    public Optional<Output<Map<String,String>>> endpointConfig() {
        return Optional.ofNullable(this.endpointConfig);
    }

    /**
     * Type of the endpoint. Valid values are `Custom`, `Cluster`, `Primary`, default to `Custom`. However when creating a new endpoint, it also only can be `Custom`.
     * 
     */
    @Import(name="endpointType")
    private @Nullable Output<String> endpointType;

    /**
     * @return Type of the endpoint. Valid values are `Custom`, `Cluster`, `Primary`, default to `Custom`. However when creating a new endpoint, it also only can be `Custom`.
     * 
     */
    public Optional<Output<String>> endpointType() {
        return Optional.ofNullable(this.endpointType);
    }

    /**
     * The network type of the endpoint address.
     * 
     */
    @Import(name="netType")
    private @Nullable Output<String> netType;

    /**
     * @return The network type of the endpoint address.
     * 
     */
    public Optional<Output<String>> netType() {
        return Optional.ofNullable(this.netType);
    }

    /**
     * The list of backend nodes for the endpoint, with the attribute values derived from the map key of db_cluster_nodes_ids.
     * 
     */
    @Import(name="nodesKeys")
    private @Nullable Output<List<String>> nodesKeys;

    /**
     * @return The list of backend nodes for the endpoint, with the attribute values derived from the map key of db_cluster_nodes_ids.
     * 
     */
    public Optional<Output<List<String>>> nodesKeys() {
        return Optional.ofNullable(this.nodesKeys);
    }

    /**
     * Read or write mode. Valid values are `ReadWrite`, `ReadOnly`. When creating a new custom endpoint, default to `ReadOnly`.
     * 
     */
    @Import(name="readWriteMode")
    private @Nullable Output<String> readWriteMode;

    /**
     * @return Read or write mode. Valid values are `ReadWrite`, `ReadOnly`. When creating a new custom endpoint, default to `ReadOnly`.
     * 
     */
    public Optional<Output<String>> readWriteMode() {
        return Optional.ofNullable(this.readWriteMode);
    }

    /**
     * The ID of ENS VPC where to use the DB.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The ID of ENS VPC where to use the DB.
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    /**
     * The ID of ENS virtual switch where to use the DB.
     * 
     */
    @Import(name="vswitchId")
    private @Nullable Output<String> vswitchId;

    /**
     * @return The ID of ENS virtual switch where to use the DB.
     * 
     */
    public Optional<Output<String>> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    private ZonalEndpointArgs() {}

    private ZonalEndpointArgs(ZonalEndpointArgs $) {
        this.autoAddNewNodes = $.autoAddNewNodes;
        this.dbClusterId = $.dbClusterId;
        this.dbClusterNodesIds = $.dbClusterNodesIds;
        this.dbEndpointDescription = $.dbEndpointDescription;
        this.endpointConfig = $.endpointConfig;
        this.endpointType = $.endpointType;
        this.netType = $.netType;
        this.nodesKeys = $.nodesKeys;
        this.readWriteMode = $.readWriteMode;
        this.vpcId = $.vpcId;
        this.vswitchId = $.vswitchId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZonalEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZonalEndpointArgs $;

        public Builder() {
            $ = new ZonalEndpointArgs();
        }

        public Builder(ZonalEndpointArgs defaults) {
            $ = new ZonalEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoAddNewNodes Whether the new node automatically joins the default cluster address. Valid values are `Enable`, `Disable`. When creating a new custom endpoint, default to `Enable`.
         * 
         * @return builder
         * 
         */
        public Builder autoAddNewNodes(@Nullable Output<String> autoAddNewNodes) {
            $.autoAddNewNodes = autoAddNewNodes;
            return this;
        }

        /**
         * @param autoAddNewNodes Whether the new node automatically joins the default cluster address. Valid values are `Enable`, `Disable`. When creating a new custom endpoint, default to `Enable`.
         * 
         * @return builder
         * 
         */
        public Builder autoAddNewNodes(String autoAddNewNodes) {
            return autoAddNewNodes(Output.of(autoAddNewNodes));
        }

        /**
         * @param dbClusterId The Id of cluster that can run database.
         * 
         * @return builder
         * 
         */
        public Builder dbClusterId(Output<String> dbClusterId) {
            $.dbClusterId = dbClusterId;
            return this;
        }

        /**
         * @param dbClusterId The Id of cluster that can run database.
         * 
         * @return builder
         * 
         */
        public Builder dbClusterId(String dbClusterId) {
            return dbClusterId(Output.of(dbClusterId));
        }

        /**
         * @param dbClusterNodesIds referenced from the dbClusterNodesIds attribute of alicloud_polardb_zonal_db_cluster..
         * 
         * @return builder
         * 
         */
        public Builder dbClusterNodesIds(Output<Map<String,String>> dbClusterNodesIds) {
            $.dbClusterNodesIds = dbClusterNodesIds;
            return this;
        }

        /**
         * @param dbClusterNodesIds referenced from the dbClusterNodesIds attribute of alicloud_polardb_zonal_db_cluster..
         * 
         * @return builder
         * 
         */
        public Builder dbClusterNodesIds(Map<String,String> dbClusterNodesIds) {
            return dbClusterNodesIds(Output.of(dbClusterNodesIds));
        }

        /**
         * @param dbEndpointDescription The name of the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder dbEndpointDescription(@Nullable Output<String> dbEndpointDescription) {
            $.dbEndpointDescription = dbEndpointDescription;
            return this;
        }

        /**
         * @param dbEndpointDescription The name of the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder dbEndpointDescription(String dbEndpointDescription) {
            return dbEndpointDescription(Output.of(dbEndpointDescription));
        }

        /**
         * @param endpointConfig The advanced settings of the endpoint of Apsara PolarDB clusters are in JSON format. Including the settings of consistency level, transaction splitting, connection pool, and offload reads from primary node. For more details, see the [description of EndpointConfig in the Request parameters table for details](https://www.alibabacloud.com/help/doc-detail/116593.htm).
         * 
         * @return builder
         * 
         */
        public Builder endpointConfig(@Nullable Output<Map<String,String>> endpointConfig) {
            $.endpointConfig = endpointConfig;
            return this;
        }

        /**
         * @param endpointConfig The advanced settings of the endpoint of Apsara PolarDB clusters are in JSON format. Including the settings of consistency level, transaction splitting, connection pool, and offload reads from primary node. For more details, see the [description of EndpointConfig in the Request parameters table for details](https://www.alibabacloud.com/help/doc-detail/116593.htm).
         * 
         * @return builder
         * 
         */
        public Builder endpointConfig(Map<String,String> endpointConfig) {
            return endpointConfig(Output.of(endpointConfig));
        }

        /**
         * @param endpointType Type of the endpoint. Valid values are `Custom`, `Cluster`, `Primary`, default to `Custom`. However when creating a new endpoint, it also only can be `Custom`.
         * 
         * @return builder
         * 
         */
        public Builder endpointType(@Nullable Output<String> endpointType) {
            $.endpointType = endpointType;
            return this;
        }

        /**
         * @param endpointType Type of the endpoint. Valid values are `Custom`, `Cluster`, `Primary`, default to `Custom`. However when creating a new endpoint, it also only can be `Custom`.
         * 
         * @return builder
         * 
         */
        public Builder endpointType(String endpointType) {
            return endpointType(Output.of(endpointType));
        }

        /**
         * @param netType The network type of the endpoint address.
         * 
         * @return builder
         * 
         */
        public Builder netType(@Nullable Output<String> netType) {
            $.netType = netType;
            return this;
        }

        /**
         * @param netType The network type of the endpoint address.
         * 
         * @return builder
         * 
         */
        public Builder netType(String netType) {
            return netType(Output.of(netType));
        }

        /**
         * @param nodesKeys The list of backend nodes for the endpoint, with the attribute values derived from the map key of db_cluster_nodes_ids.
         * 
         * @return builder
         * 
         */
        public Builder nodesKeys(@Nullable Output<List<String>> nodesKeys) {
            $.nodesKeys = nodesKeys;
            return this;
        }

        /**
         * @param nodesKeys The list of backend nodes for the endpoint, with the attribute values derived from the map key of db_cluster_nodes_ids.
         * 
         * @return builder
         * 
         */
        public Builder nodesKeys(List<String> nodesKeys) {
            return nodesKeys(Output.of(nodesKeys));
        }

        /**
         * @param nodesKeys The list of backend nodes for the endpoint, with the attribute values derived from the map key of db_cluster_nodes_ids.
         * 
         * @return builder
         * 
         */
        public Builder nodesKeys(String... nodesKeys) {
            return nodesKeys(List.of(nodesKeys));
        }

        /**
         * @param readWriteMode Read or write mode. Valid values are `ReadWrite`, `ReadOnly`. When creating a new custom endpoint, default to `ReadOnly`.
         * 
         * @return builder
         * 
         */
        public Builder readWriteMode(@Nullable Output<String> readWriteMode) {
            $.readWriteMode = readWriteMode;
            return this;
        }

        /**
         * @param readWriteMode Read or write mode. Valid values are `ReadWrite`, `ReadOnly`. When creating a new custom endpoint, default to `ReadOnly`.
         * 
         * @return builder
         * 
         */
        public Builder readWriteMode(String readWriteMode) {
            return readWriteMode(Output.of(readWriteMode));
        }

        /**
         * @param vpcId The ID of ENS VPC where to use the DB.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The ID of ENS VPC where to use the DB.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param vswitchId The ID of ENS virtual switch where to use the DB.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(@Nullable Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId The ID of ENS virtual switch where to use the DB.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        public ZonalEndpointArgs build() {
            if ($.dbClusterId == null) {
                throw new MissingRequiredPropertyException("ZonalEndpointArgs", "dbClusterId");
            }
            if ($.dbClusterNodesIds == null) {
                throw new MissingRequiredPropertyException("ZonalEndpointArgs", "dbClusterNodesIds");
            }
            return $;
        }
    }

}
