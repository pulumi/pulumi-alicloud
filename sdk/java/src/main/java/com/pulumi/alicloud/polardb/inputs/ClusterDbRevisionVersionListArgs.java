// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.polardb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterDbRevisionVersionListArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterDbRevisionVersionListArgs Empty = new ClusterDbRevisionVersionListArgs();

    /**
     * (Available since v1.216.0) The revised version Code of the database engine is used to specify the upgrade to the target version.
     * 
     */
    @Import(name="releaseNote")
    private @Nullable Output<String> releaseNote;

    /**
     * @return (Available since v1.216.0) The revised version Code of the database engine is used to specify the upgrade to the target version.
     * 
     */
    public Optional<Output<String>> releaseNote() {
        return Optional.ofNullable(this.releaseNote);
    }

    /**
     * (Available since v1.216.0) Database version release status. Valid values are `Stable`, `Old`, `HighRisk`.
     * 
     */
    @Import(name="releaseType")
    private @Nullable Output<String> releaseType;

    /**
     * @return (Available since v1.216.0) Database version release status. Valid values are `Stable`, `Old`, `HighRisk`.
     * 
     */
    public Optional<Output<String>> releaseType() {
        return Optional.ofNullable(this.releaseType);
    }

    /**
     * (Available since v1.216.0) The revised version Code of the database engine is used to specify the upgrade to the target version.
     * 
     */
    @Import(name="revisionVersionCode")
    private @Nullable Output<String> revisionVersionCode;

    /**
     * @return (Available since v1.216.0) The revised version Code of the database engine is used to specify the upgrade to the target version.
     * 
     */
    public Optional<Output<String>> revisionVersionCode() {
        return Optional.ofNullable(this.revisionVersionCode);
    }

    /**
     * (Available since v1.216.0) The revision version number of the database engine.
     * 
     */
    @Import(name="revisionVersionName")
    private @Nullable Output<String> revisionVersionName;

    /**
     * @return (Available since v1.216.0) The revision version number of the database engine.
     * 
     */
    public Optional<Output<String>> revisionVersionName() {
        return Optional.ofNullable(this.revisionVersionName);
    }

    private ClusterDbRevisionVersionListArgs() {}

    private ClusterDbRevisionVersionListArgs(ClusterDbRevisionVersionListArgs $) {
        this.releaseNote = $.releaseNote;
        this.releaseType = $.releaseType;
        this.revisionVersionCode = $.revisionVersionCode;
        this.revisionVersionName = $.revisionVersionName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterDbRevisionVersionListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterDbRevisionVersionListArgs $;

        public Builder() {
            $ = new ClusterDbRevisionVersionListArgs();
        }

        public Builder(ClusterDbRevisionVersionListArgs defaults) {
            $ = new ClusterDbRevisionVersionListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param releaseNote (Available since v1.216.0) The revised version Code of the database engine is used to specify the upgrade to the target version.
         * 
         * @return builder
         * 
         */
        public Builder releaseNote(@Nullable Output<String> releaseNote) {
            $.releaseNote = releaseNote;
            return this;
        }

        /**
         * @param releaseNote (Available since v1.216.0) The revised version Code of the database engine is used to specify the upgrade to the target version.
         * 
         * @return builder
         * 
         */
        public Builder releaseNote(String releaseNote) {
            return releaseNote(Output.of(releaseNote));
        }

        /**
         * @param releaseType (Available since v1.216.0) Database version release status. Valid values are `Stable`, `Old`, `HighRisk`.
         * 
         * @return builder
         * 
         */
        public Builder releaseType(@Nullable Output<String> releaseType) {
            $.releaseType = releaseType;
            return this;
        }

        /**
         * @param releaseType (Available since v1.216.0) Database version release status. Valid values are `Stable`, `Old`, `HighRisk`.
         * 
         * @return builder
         * 
         */
        public Builder releaseType(String releaseType) {
            return releaseType(Output.of(releaseType));
        }

        /**
         * @param revisionVersionCode (Available since v1.216.0) The revised version Code of the database engine is used to specify the upgrade to the target version.
         * 
         * @return builder
         * 
         */
        public Builder revisionVersionCode(@Nullable Output<String> revisionVersionCode) {
            $.revisionVersionCode = revisionVersionCode;
            return this;
        }

        /**
         * @param revisionVersionCode (Available since v1.216.0) The revised version Code of the database engine is used to specify the upgrade to the target version.
         * 
         * @return builder
         * 
         */
        public Builder revisionVersionCode(String revisionVersionCode) {
            return revisionVersionCode(Output.of(revisionVersionCode));
        }

        /**
         * @param revisionVersionName (Available since v1.216.0) The revision version number of the database engine.
         * 
         * @return builder
         * 
         */
        public Builder revisionVersionName(@Nullable Output<String> revisionVersionName) {
            $.revisionVersionName = revisionVersionName;
            return this;
        }

        /**
         * @param revisionVersionName (Available since v1.216.0) The revision version number of the database engine.
         * 
         * @return builder
         * 
         */
        public Builder revisionVersionName(String revisionVersionName) {
            return revisionVersionName(Output.of(revisionVersionName));
        }

        public ClusterDbRevisionVersionListArgs build() {
            return $;
        }
    }

}
