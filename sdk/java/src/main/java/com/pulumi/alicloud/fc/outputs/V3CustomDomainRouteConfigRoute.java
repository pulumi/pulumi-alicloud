// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc.outputs;

import com.pulumi.alicloud.fc.outputs.V3CustomDomainRouteConfigRouteRewriteConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class V3CustomDomainRouteConfigRoute {
    /**
     * @return Function name.
     * 
     */
    private @Nullable String functionName;
    /**
     * @return List of supported HTTP methods.
     * 
     */
    private @Nullable List<String> methods;
    /**
     * @return Route matching rule.
     * 
     */
    private @Nullable String path;
    /**
     * @return Version or Alias.
     * 
     */
    private @Nullable String qualifier;
    /**
     * @return Override Configuration. See `rewrite_config` below.
     * 
     */
    private @Nullable V3CustomDomainRouteConfigRouteRewriteConfig rewriteConfig;

    private V3CustomDomainRouteConfigRoute() {}
    /**
     * @return Function name.
     * 
     */
    public Optional<String> functionName() {
        return Optional.ofNullable(this.functionName);
    }
    /**
     * @return List of supported HTTP methods.
     * 
     */
    public List<String> methods() {
        return this.methods == null ? List.of() : this.methods;
    }
    /**
     * @return Route matching rule.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return Version or Alias.
     * 
     */
    public Optional<String> qualifier() {
        return Optional.ofNullable(this.qualifier);
    }
    /**
     * @return Override Configuration. See `rewrite_config` below.
     * 
     */
    public Optional<V3CustomDomainRouteConfigRouteRewriteConfig> rewriteConfig() {
        return Optional.ofNullable(this.rewriteConfig);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(V3CustomDomainRouteConfigRoute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String functionName;
        private @Nullable List<String> methods;
        private @Nullable String path;
        private @Nullable String qualifier;
        private @Nullable V3CustomDomainRouteConfigRouteRewriteConfig rewriteConfig;
        public Builder() {}
        public Builder(V3CustomDomainRouteConfigRoute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.functionName = defaults.functionName;
    	      this.methods = defaults.methods;
    	      this.path = defaults.path;
    	      this.qualifier = defaults.qualifier;
    	      this.rewriteConfig = defaults.rewriteConfig;
        }

        @CustomType.Setter
        public Builder functionName(@Nullable String functionName) {

            this.functionName = functionName;
            return this;
        }
        @CustomType.Setter
        public Builder methods(@Nullable List<String> methods) {

            this.methods = methods;
            return this;
        }
        public Builder methods(String... methods) {
            return methods(List.of(methods));
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {

            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder qualifier(@Nullable String qualifier) {

            this.qualifier = qualifier;
            return this;
        }
        @CustomType.Setter
        public Builder rewriteConfig(@Nullable V3CustomDomainRouteConfigRouteRewriteConfig rewriteConfig) {

            this.rewriteConfig = rewriteConfig;
            return this;
        }
        public V3CustomDomainRouteConfigRoute build() {
            final var _resultValue = new V3CustomDomainRouteConfigRoute();
            _resultValue.functionName = functionName;
            _resultValue.methods = methods;
            _resultValue.path = path;
            _resultValue.qualifier = qualifier;
            _resultValue.rewriteConfig = rewriteConfig;
            return _resultValue;
        }
    }
}
