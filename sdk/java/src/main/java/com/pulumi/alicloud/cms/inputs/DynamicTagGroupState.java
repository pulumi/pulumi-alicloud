// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.inputs;

import com.pulumi.alicloud.cms.inputs.DynamicTagGroupMatchExpressArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DynamicTagGroupState extends com.pulumi.resources.ResourceArgs {

    public static final DynamicTagGroupState Empty = new DynamicTagGroupState();

    /**
     * The alert contact groups. The alert notifications of the application group are sent to the alert contacts that belong to the specified alert contact groups.
     * 
     */
    @Import(name="contactGroupLists")
    private @Nullable Output<List<String>> contactGroupLists;

    /**
     * @return The alert contact groups. The alert notifications of the application group are sent to the alert contacts that belong to the specified alert contact groups.
     * 
     */
    public Optional<Output<List<String>>> contactGroupLists() {
        return Optional.ofNullable(this.contactGroupLists);
    }

    /**
     * The relationship between the conditional expressions for the tag values of the cloud resources. Valid values: `and`, `or`.
     * 
     */
    @Import(name="matchExpressFilterRelation")
    private @Nullable Output<String> matchExpressFilterRelation;

    /**
     * @return The relationship between the conditional expressions for the tag values of the cloud resources. Valid values: `and`, `or`.
     * 
     */
    public Optional<Output<String>> matchExpressFilterRelation() {
        return Optional.ofNullable(this.matchExpressFilterRelation);
    }

    /**
     * The conditional expressions used to create an application group based on the tag. See `match_express` below.
     * 
     */
    @Import(name="matchExpresses")
    private @Nullable Output<List<DynamicTagGroupMatchExpressArgs>> matchExpresses;

    /**
     * @return The conditional expressions used to create an application group based on the tag. See `match_express` below.
     * 
     */
    public Optional<Output<List<DynamicTagGroupMatchExpressArgs>>> matchExpresses() {
        return Optional.ofNullable(this.matchExpresses);
    }

    /**
     * The status of the Dynamic Tag Group.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the Dynamic Tag Group.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The tag keys of the cloud resources.
     * 
     */
    @Import(name="tagKey")
    private @Nullable Output<String> tagKey;

    /**
     * @return The tag keys of the cloud resources.
     * 
     */
    public Optional<Output<String>> tagKey() {
        return Optional.ofNullable(this.tagKey);
    }

    /**
     * The IDs of the alert templates.
     * 
     */
    @Import(name="templateIdLists")
    private @Nullable Output<List<String>> templateIdLists;

    /**
     * @return The IDs of the alert templates.
     * 
     */
    public Optional<Output<List<String>>> templateIdLists() {
        return Optional.ofNullable(this.templateIdLists);
    }

    private DynamicTagGroupState() {}

    private DynamicTagGroupState(DynamicTagGroupState $) {
        this.contactGroupLists = $.contactGroupLists;
        this.matchExpressFilterRelation = $.matchExpressFilterRelation;
        this.matchExpresses = $.matchExpresses;
        this.status = $.status;
        this.tagKey = $.tagKey;
        this.templateIdLists = $.templateIdLists;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DynamicTagGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DynamicTagGroupState $;

        public Builder() {
            $ = new DynamicTagGroupState();
        }

        public Builder(DynamicTagGroupState defaults) {
            $ = new DynamicTagGroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param contactGroupLists The alert contact groups. The alert notifications of the application group are sent to the alert contacts that belong to the specified alert contact groups.
         * 
         * @return builder
         * 
         */
        public Builder contactGroupLists(@Nullable Output<List<String>> contactGroupLists) {
            $.contactGroupLists = contactGroupLists;
            return this;
        }

        /**
         * @param contactGroupLists The alert contact groups. The alert notifications of the application group are sent to the alert contacts that belong to the specified alert contact groups.
         * 
         * @return builder
         * 
         */
        public Builder contactGroupLists(List<String> contactGroupLists) {
            return contactGroupLists(Output.of(contactGroupLists));
        }

        /**
         * @param contactGroupLists The alert contact groups. The alert notifications of the application group are sent to the alert contacts that belong to the specified alert contact groups.
         * 
         * @return builder
         * 
         */
        public Builder contactGroupLists(String... contactGroupLists) {
            return contactGroupLists(List.of(contactGroupLists));
        }

        /**
         * @param matchExpressFilterRelation The relationship between the conditional expressions for the tag values of the cloud resources. Valid values: `and`, `or`.
         * 
         * @return builder
         * 
         */
        public Builder matchExpressFilterRelation(@Nullable Output<String> matchExpressFilterRelation) {
            $.matchExpressFilterRelation = matchExpressFilterRelation;
            return this;
        }

        /**
         * @param matchExpressFilterRelation The relationship between the conditional expressions for the tag values of the cloud resources. Valid values: `and`, `or`.
         * 
         * @return builder
         * 
         */
        public Builder matchExpressFilterRelation(String matchExpressFilterRelation) {
            return matchExpressFilterRelation(Output.of(matchExpressFilterRelation));
        }

        /**
         * @param matchExpresses The conditional expressions used to create an application group based on the tag. See `match_express` below.
         * 
         * @return builder
         * 
         */
        public Builder matchExpresses(@Nullable Output<List<DynamicTagGroupMatchExpressArgs>> matchExpresses) {
            $.matchExpresses = matchExpresses;
            return this;
        }

        /**
         * @param matchExpresses The conditional expressions used to create an application group based on the tag. See `match_express` below.
         * 
         * @return builder
         * 
         */
        public Builder matchExpresses(List<DynamicTagGroupMatchExpressArgs> matchExpresses) {
            return matchExpresses(Output.of(matchExpresses));
        }

        /**
         * @param matchExpresses The conditional expressions used to create an application group based on the tag. See `match_express` below.
         * 
         * @return builder
         * 
         */
        public Builder matchExpresses(DynamicTagGroupMatchExpressArgs... matchExpresses) {
            return matchExpresses(List.of(matchExpresses));
        }

        /**
         * @param status The status of the Dynamic Tag Group.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the Dynamic Tag Group.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tagKey The tag keys of the cloud resources.
         * 
         * @return builder
         * 
         */
        public Builder tagKey(@Nullable Output<String> tagKey) {
            $.tagKey = tagKey;
            return this;
        }

        /**
         * @param tagKey The tag keys of the cloud resources.
         * 
         * @return builder
         * 
         */
        public Builder tagKey(String tagKey) {
            return tagKey(Output.of(tagKey));
        }

        /**
         * @param templateIdLists The IDs of the alert templates.
         * 
         * @return builder
         * 
         */
        public Builder templateIdLists(@Nullable Output<List<String>> templateIdLists) {
            $.templateIdLists = templateIdLists;
            return this;
        }

        /**
         * @param templateIdLists The IDs of the alert templates.
         * 
         * @return builder
         * 
         */
        public Builder templateIdLists(List<String> templateIdLists) {
            return templateIdLists(Output.of(templateIdLists));
        }

        /**
         * @param templateIdLists The IDs of the alert templates.
         * 
         * @return builder
         * 
         */
        public Builder templateIdLists(String... templateIdLists) {
            return templateIdLists(List.of(templateIdLists));
        }

        public DynamicTagGroupState build() {
            return $;
        }
    }

}
