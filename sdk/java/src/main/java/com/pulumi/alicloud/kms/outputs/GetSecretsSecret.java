// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.kms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSecretsSecret {
    /**
     * @return (Available in 1.124.0+) A mapping of tags to assign to the resource.
     * 
     */
    private String arn;
    /**
     * @return (Available in 1.124.0+)  The description of the secret.
     * 
     */
    private String description;
    /**
     * @return (Available in 1.124.0+)  The ID of the KMS CMK that is used to encrypt the secret value.
     * 
     */
    private String encryptionKeyId;
    /**
     * @return ID of the Kms Secret. The value is same as KMS secret_name.
     * 
     */
    private String id;
    /**
     * @return Schedule deletion time.
     * 
     */
    private String plannedDeleteTime;
    /**
     * @return (Available in 1.124.0+)  The value of the secret that you want to create.
     * 
     */
    private String secretData;
    /**
     * @return (Available in 1.124.0+)  The type of the secret data value.
     * 
     */
    private String secretDataType;
    /**
     * @return Name of the KMS Secret.
     * 
     */
    private String secretName;
    /**
     * @return (Available in 1.124.0+)  The type of the secret.
     * 
     */
    private String secretType;
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    private Map<String,Object> tags;
    /**
     * @return (Available in 1.124.0+)  The version number of the initial version.
     * 
     */
    private String versionId;
    /**
     * @return (Available in 1.124.0+)  The stage labels that mark the new secret version.
     * 
     */
    private List<String> versionStages;

    private GetSecretsSecret() {}
    /**
     * @return (Available in 1.124.0+) A mapping of tags to assign to the resource.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return (Available in 1.124.0+)  The description of the secret.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return (Available in 1.124.0+)  The ID of the KMS CMK that is used to encrypt the secret value.
     * 
     */
    public String encryptionKeyId() {
        return this.encryptionKeyId;
    }
    /**
     * @return ID of the Kms Secret. The value is same as KMS secret_name.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Schedule deletion time.
     * 
     */
    public String plannedDeleteTime() {
        return this.plannedDeleteTime;
    }
    /**
     * @return (Available in 1.124.0+)  The value of the secret that you want to create.
     * 
     */
    public String secretData() {
        return this.secretData;
    }
    /**
     * @return (Available in 1.124.0+)  The type of the secret data value.
     * 
     */
    public String secretDataType() {
        return this.secretDataType;
    }
    /**
     * @return Name of the KMS Secret.
     * 
     */
    public String secretName() {
        return this.secretName;
    }
    /**
     * @return (Available in 1.124.0+)  The type of the secret.
     * 
     */
    public String secretType() {
        return this.secretType;
    }
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Map<String,Object> tags() {
        return this.tags;
    }
    /**
     * @return (Available in 1.124.0+)  The version number of the initial version.
     * 
     */
    public String versionId() {
        return this.versionId;
    }
    /**
     * @return (Available in 1.124.0+)  The stage labels that mark the new secret version.
     * 
     */
    public List<String> versionStages() {
        return this.versionStages;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecretsSecret defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private String description;
        private String encryptionKeyId;
        private String id;
        private String plannedDeleteTime;
        private String secretData;
        private String secretDataType;
        private String secretName;
        private String secretType;
        private Map<String,Object> tags;
        private String versionId;
        private List<String> versionStages;
        public Builder() {}
        public Builder(GetSecretsSecret defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.description = defaults.description;
    	      this.encryptionKeyId = defaults.encryptionKeyId;
    	      this.id = defaults.id;
    	      this.plannedDeleteTime = defaults.plannedDeleteTime;
    	      this.secretData = defaults.secretData;
    	      this.secretDataType = defaults.secretDataType;
    	      this.secretName = defaults.secretName;
    	      this.secretType = defaults.secretType;
    	      this.tags = defaults.tags;
    	      this.versionId = defaults.versionId;
    	      this.versionStages = defaults.versionStages;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder encryptionKeyId(String encryptionKeyId) {
            this.encryptionKeyId = Objects.requireNonNull(encryptionKeyId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder plannedDeleteTime(String plannedDeleteTime) {
            this.plannedDeleteTime = Objects.requireNonNull(plannedDeleteTime);
            return this;
        }
        @CustomType.Setter
        public Builder secretData(String secretData) {
            this.secretData = Objects.requireNonNull(secretData);
            return this;
        }
        @CustomType.Setter
        public Builder secretDataType(String secretDataType) {
            this.secretDataType = Objects.requireNonNull(secretDataType);
            return this;
        }
        @CustomType.Setter
        public Builder secretName(String secretName) {
            this.secretName = Objects.requireNonNull(secretName);
            return this;
        }
        @CustomType.Setter
        public Builder secretType(String secretType) {
            this.secretType = Objects.requireNonNull(secretType);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,Object> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder versionId(String versionId) {
            this.versionId = Objects.requireNonNull(versionId);
            return this;
        }
        @CustomType.Setter
        public Builder versionStages(List<String> versionStages) {
            this.versionStages = Objects.requireNonNull(versionStages);
            return this;
        }
        public Builder versionStages(String... versionStages) {
            return versionStages(List.of(versionStages));
        }
        public GetSecretsSecret build() {
            final var o = new GetSecretsSecret();
            o.arn = arn;
            o.description = description;
            o.encryptionKeyId = encryptionKeyId;
            o.id = id;
            o.plannedDeleteTime = plannedDeleteTime;
            o.secretData = secretData;
            o.secretDataType = secretDataType;
            o.secretName = secretName;
            o.secretType = secretType;
            o.tags = tags;
            o.versionId = versionId;
            o.versionStages = versionStages;
            return o;
        }
    }
}
