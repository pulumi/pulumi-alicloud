// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventRuleFcParameterArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventRuleFcParameterArgs Empty = new EventRuleFcParameterArgs();

    /**
     * (Available since v1.211.1) The ARN of the API operation.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return (Available since v1.211.1) The ARN of the API operation.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The ID of the recipient that receives alert notifications.
     * 
     */
    @Import(name="fcParametersId")
    private @Nullable Output<String> fcParametersId;

    /**
     * @return The ID of the recipient that receives alert notifications.
     * 
     */
    public Optional<Output<String>> fcParametersId() {
        return Optional.ofNullable(this.fcParametersId);
    }

    /**
     * The name of the function.
     * 
     */
    @Import(name="functionName")
    private @Nullable Output<String> functionName;

    /**
     * @return The name of the function.
     * 
     */
    public Optional<Output<String>> functionName() {
        return Optional.ofNullable(this.functionName);
    }

    /**
     * The region where Function Compute is deployed.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region where Function Compute is deployed.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The name of the Function Compute service.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The name of the Function Compute service.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    private EventRuleFcParameterArgs() {}

    private EventRuleFcParameterArgs(EventRuleFcParameterArgs $) {
        this.arn = $.arn;
        this.fcParametersId = $.fcParametersId;
        this.functionName = $.functionName;
        this.region = $.region;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventRuleFcParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventRuleFcParameterArgs $;

        public Builder() {
            $ = new EventRuleFcParameterArgs();
        }

        public Builder(EventRuleFcParameterArgs defaults) {
            $ = new EventRuleFcParameterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn (Available since v1.211.1) The ARN of the API operation.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn (Available since v1.211.1) The ARN of the API operation.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param fcParametersId The ID of the recipient that receives alert notifications.
         * 
         * @return builder
         * 
         */
        public Builder fcParametersId(@Nullable Output<String> fcParametersId) {
            $.fcParametersId = fcParametersId;
            return this;
        }

        /**
         * @param fcParametersId The ID of the recipient that receives alert notifications.
         * 
         * @return builder
         * 
         */
        public Builder fcParametersId(String fcParametersId) {
            return fcParametersId(Output.of(fcParametersId));
        }

        /**
         * @param functionName The name of the function.
         * 
         * @return builder
         * 
         */
        public Builder functionName(@Nullable Output<String> functionName) {
            $.functionName = functionName;
            return this;
        }

        /**
         * @param functionName The name of the function.
         * 
         * @return builder
         * 
         */
        public Builder functionName(String functionName) {
            return functionName(Output.of(functionName));
        }

        /**
         * @param region The region where Function Compute is deployed.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region where Function Compute is deployed.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param serviceName The name of the Function Compute service.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the Function Compute service.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public EventRuleFcParameterArgs build() {
            return $;
        }
    }

}
