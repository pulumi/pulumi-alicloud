// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.clickhouse;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.clickhouse.inputs.GetAccountsArgs;
import com.pulumi.alicloud.clickhouse.inputs.GetAccountsPlainArgs;
import com.pulumi.alicloud.clickhouse.inputs.GetBackupPoliciesArgs;
import com.pulumi.alicloud.clickhouse.inputs.GetBackupPoliciesPlainArgs;
import com.pulumi.alicloud.clickhouse.inputs.GetDbClustersArgs;
import com.pulumi.alicloud.clickhouse.inputs.GetDbClustersPlainArgs;
import com.pulumi.alicloud.clickhouse.inputs.GetRegionsArgs;
import com.pulumi.alicloud.clickhouse.inputs.GetRegionsPlainArgs;
import com.pulumi.alicloud.clickhouse.outputs.GetAccountsResult;
import com.pulumi.alicloud.clickhouse.outputs.GetBackupPoliciesResult;
import com.pulumi.alicloud.clickhouse.outputs.GetDbClustersResult;
import com.pulumi.alicloud.clickhouse.outputs.GetRegionsResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import java.util.concurrent.CompletableFuture;

public final class ClickhouseFunctions {
    /**
     * This data source provides the Click House Accounts of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.134.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetRegionsArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.clickhouse.DbCluster;
     * import com.pulumi.alicloud.clickhouse.DbClusterArgs;
     * import com.pulumi.alicloud.clickhouse.Account;
     * import com.pulumi.alicloud.clickhouse.AccountArgs;
     * import com.pulumi.alicloud.clickhouse.inputs.GetAccountsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("oneaccountname");
     *         final var pwd = config.get("pwd").orElse("Tf-onepwd");
     *         final var type = config.get("type").orElse("Normal");
     *         final var default = ClickhouseFunctions.getRegions(GetRegionsArgs.builder()
     *             .current(true)
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("10.4.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .cidrBlock("10.4.0.0/24")
     *             .vpcId(defaultNetwork.id())
     *             .zoneId(default_.regions()[0].zoneIds()[0].zoneId())
     *             .build());
     * 
     *         var defaultDbCluster = new DbCluster("defaultDbCluster", DbClusterArgs.builder()
     *             .dbClusterVersion("22.8.5.29")
     *             .category("Basic")
     *             .dbClusterClass("S8")
     *             .dbClusterNetworkType("vpc")
     *             .dbClusterDescription(name)
     *             .dbNodeGroupCount(1)
     *             .paymentType("PayAsYouGo")
     *             .dbNodeStorage("500")
     *             .storageType("cloud_essd")
     *             .vswitchId(defaultSwitch.id())
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultAccount = new Account("defaultAccount", AccountArgs.builder()
     *             .dbClusterId(defaultDbCluster.id())
     *             .accountDescription("your_description")
     *             .accountName(name)
     *             .accountPassword(pwd)
     *             .type(type)
     *             .build());
     * 
     *         final var defaultGetAccounts = ClickhouseFunctions.getAccounts(GetAccountsArgs.builder()
     *             .ids(defaultAccount.id())
     *             .dbClusterId(defaultDbCluster.id())
     *             .build());
     * 
     *         ctx.export("accountId", defaultGetAccounts.applyValue(_defaultGetAccounts -> _defaultGetAccounts.ids()[0]));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAccountsResult> getAccounts(GetAccountsArgs args) {
        return getAccounts(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Click House Accounts of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.134.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetRegionsArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.clickhouse.DbCluster;
     * import com.pulumi.alicloud.clickhouse.DbClusterArgs;
     * import com.pulumi.alicloud.clickhouse.Account;
     * import com.pulumi.alicloud.clickhouse.AccountArgs;
     * import com.pulumi.alicloud.clickhouse.inputs.GetAccountsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("oneaccountname");
     *         final var pwd = config.get("pwd").orElse("Tf-onepwd");
     *         final var type = config.get("type").orElse("Normal");
     *         final var default = ClickhouseFunctions.getRegions(GetRegionsArgs.builder()
     *             .current(true)
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("10.4.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .cidrBlock("10.4.0.0/24")
     *             .vpcId(defaultNetwork.id())
     *             .zoneId(default_.regions()[0].zoneIds()[0].zoneId())
     *             .build());
     * 
     *         var defaultDbCluster = new DbCluster("defaultDbCluster", DbClusterArgs.builder()
     *             .dbClusterVersion("22.8.5.29")
     *             .category("Basic")
     *             .dbClusterClass("S8")
     *             .dbClusterNetworkType("vpc")
     *             .dbClusterDescription(name)
     *             .dbNodeGroupCount(1)
     *             .paymentType("PayAsYouGo")
     *             .dbNodeStorage("500")
     *             .storageType("cloud_essd")
     *             .vswitchId(defaultSwitch.id())
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultAccount = new Account("defaultAccount", AccountArgs.builder()
     *             .dbClusterId(defaultDbCluster.id())
     *             .accountDescription("your_description")
     *             .accountName(name)
     *             .accountPassword(pwd)
     *             .type(type)
     *             .build());
     * 
     *         final var defaultGetAccounts = ClickhouseFunctions.getAccounts(GetAccountsArgs.builder()
     *             .ids(defaultAccount.id())
     *             .dbClusterId(defaultDbCluster.id())
     *             .build());
     * 
     *         ctx.export("accountId", defaultGetAccounts.applyValue(_defaultGetAccounts -> _defaultGetAccounts.ids()[0]));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAccountsResult> getAccountsPlain(GetAccountsPlainArgs args) {
        return getAccountsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Click House Accounts of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.134.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetRegionsArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.clickhouse.DbCluster;
     * import com.pulumi.alicloud.clickhouse.DbClusterArgs;
     * import com.pulumi.alicloud.clickhouse.Account;
     * import com.pulumi.alicloud.clickhouse.AccountArgs;
     * import com.pulumi.alicloud.clickhouse.inputs.GetAccountsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("oneaccountname");
     *         final var pwd = config.get("pwd").orElse("Tf-onepwd");
     *         final var type = config.get("type").orElse("Normal");
     *         final var default = ClickhouseFunctions.getRegions(GetRegionsArgs.builder()
     *             .current(true)
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("10.4.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .cidrBlock("10.4.0.0/24")
     *             .vpcId(defaultNetwork.id())
     *             .zoneId(default_.regions()[0].zoneIds()[0].zoneId())
     *             .build());
     * 
     *         var defaultDbCluster = new DbCluster("defaultDbCluster", DbClusterArgs.builder()
     *             .dbClusterVersion("22.8.5.29")
     *             .category("Basic")
     *             .dbClusterClass("S8")
     *             .dbClusterNetworkType("vpc")
     *             .dbClusterDescription(name)
     *             .dbNodeGroupCount(1)
     *             .paymentType("PayAsYouGo")
     *             .dbNodeStorage("500")
     *             .storageType("cloud_essd")
     *             .vswitchId(defaultSwitch.id())
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultAccount = new Account("defaultAccount", AccountArgs.builder()
     *             .dbClusterId(defaultDbCluster.id())
     *             .accountDescription("your_description")
     *             .accountName(name)
     *             .accountPassword(pwd)
     *             .type(type)
     *             .build());
     * 
     *         final var defaultGetAccounts = ClickhouseFunctions.getAccounts(GetAccountsArgs.builder()
     *             .ids(defaultAccount.id())
     *             .dbClusterId(defaultDbCluster.id())
     *             .build());
     * 
     *         ctx.export("accountId", defaultGetAccounts.applyValue(_defaultGetAccounts -> _defaultGetAccounts.ids()[0]));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAccountsResult> getAccounts(GetAccountsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:clickhouse/getAccounts:getAccounts", TypeShape.of(GetAccountsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Click House Accounts of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.134.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetRegionsArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.clickhouse.DbCluster;
     * import com.pulumi.alicloud.clickhouse.DbClusterArgs;
     * import com.pulumi.alicloud.clickhouse.Account;
     * import com.pulumi.alicloud.clickhouse.AccountArgs;
     * import com.pulumi.alicloud.clickhouse.inputs.GetAccountsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("oneaccountname");
     *         final var pwd = config.get("pwd").orElse("Tf-onepwd");
     *         final var type = config.get("type").orElse("Normal");
     *         final var default = ClickhouseFunctions.getRegions(GetRegionsArgs.builder()
     *             .current(true)
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("10.4.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .cidrBlock("10.4.0.0/24")
     *             .vpcId(defaultNetwork.id())
     *             .zoneId(default_.regions()[0].zoneIds()[0].zoneId())
     *             .build());
     * 
     *         var defaultDbCluster = new DbCluster("defaultDbCluster", DbClusterArgs.builder()
     *             .dbClusterVersion("22.8.5.29")
     *             .category("Basic")
     *             .dbClusterClass("S8")
     *             .dbClusterNetworkType("vpc")
     *             .dbClusterDescription(name)
     *             .dbNodeGroupCount(1)
     *             .paymentType("PayAsYouGo")
     *             .dbNodeStorage("500")
     *             .storageType("cloud_essd")
     *             .vswitchId(defaultSwitch.id())
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultAccount = new Account("defaultAccount", AccountArgs.builder()
     *             .dbClusterId(defaultDbCluster.id())
     *             .accountDescription("your_description")
     *             .accountName(name)
     *             .accountPassword(pwd)
     *             .type(type)
     *             .build());
     * 
     *         final var defaultGetAccounts = ClickhouseFunctions.getAccounts(GetAccountsArgs.builder()
     *             .ids(defaultAccount.id())
     *             .dbClusterId(defaultDbCluster.id())
     *             .build());
     * 
     *         ctx.export("accountId", defaultGetAccounts.applyValue(_defaultGetAccounts -> _defaultGetAccounts.ids()[0]));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetAccountsResult> getAccounts(GetAccountsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:clickhouse/getAccounts:getAccounts", TypeShape.of(GetAccountsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Click House Accounts of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available since v1.134.0.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetRegionsArgs;
     * import com.pulumi.alicloud.vpc.Network;
     * import com.pulumi.alicloud.vpc.NetworkArgs;
     * import com.pulumi.alicloud.vpc.Switch;
     * import com.pulumi.alicloud.vpc.SwitchArgs;
     * import com.pulumi.alicloud.clickhouse.DbCluster;
     * import com.pulumi.alicloud.clickhouse.DbClusterArgs;
     * import com.pulumi.alicloud.clickhouse.Account;
     * import com.pulumi.alicloud.clickhouse.AccountArgs;
     * import com.pulumi.alicloud.clickhouse.inputs.GetAccountsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("oneaccountname");
     *         final var pwd = config.get("pwd").orElse("Tf-onepwd");
     *         final var type = config.get("type").orElse("Normal");
     *         final var default = ClickhouseFunctions.getRegions(GetRegionsArgs.builder()
     *             .current(true)
     *             .build());
     * 
     *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
     *             .vpcName(name)
     *             .cidrBlock("10.4.0.0/16")
     *             .build());
     * 
     *         var defaultSwitch = new Switch("defaultSwitch", SwitchArgs.builder()
     *             .vswitchName(name)
     *             .cidrBlock("10.4.0.0/24")
     *             .vpcId(defaultNetwork.id())
     *             .zoneId(default_.regions()[0].zoneIds()[0].zoneId())
     *             .build());
     * 
     *         var defaultDbCluster = new DbCluster("defaultDbCluster", DbClusterArgs.builder()
     *             .dbClusterVersion("22.8.5.29")
     *             .category("Basic")
     *             .dbClusterClass("S8")
     *             .dbClusterNetworkType("vpc")
     *             .dbClusterDescription(name)
     *             .dbNodeGroupCount(1)
     *             .paymentType("PayAsYouGo")
     *             .dbNodeStorage("500")
     *             .storageType("cloud_essd")
     *             .vswitchId(defaultSwitch.id())
     *             .vpcId(defaultNetwork.id())
     *             .build());
     * 
     *         var defaultAccount = new Account("defaultAccount", AccountArgs.builder()
     *             .dbClusterId(defaultDbCluster.id())
     *             .accountDescription("your_description")
     *             .accountName(name)
     *             .accountPassword(pwd)
     *             .type(type)
     *             .build());
     * 
     *         final var defaultGetAccounts = ClickhouseFunctions.getAccounts(GetAccountsArgs.builder()
     *             .ids(defaultAccount.id())
     *             .dbClusterId(defaultDbCluster.id())
     *             .build());
     * 
     *         ctx.export("accountId", defaultGetAccounts.applyValue(_defaultGetAccounts -> _defaultGetAccounts.ids()[0]));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetAccountsResult> getAccountsPlain(GetAccountsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:clickhouse/getAccounts:getAccounts", TypeShape.of(GetAccountsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Click House Backup Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.147.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetBackupPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ClickhouseFunctions.getBackupPolicies(GetBackupPoliciesArgs.builder()
     *             .dbClusterId("example_value")
     *             .build());
     * 
     *         ctx.export("clickHouseBackupPolicyId1", example.policies()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetBackupPoliciesResult> getBackupPolicies(GetBackupPoliciesArgs args) {
        return getBackupPolicies(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Click House Backup Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.147.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetBackupPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ClickhouseFunctions.getBackupPolicies(GetBackupPoliciesArgs.builder()
     *             .dbClusterId("example_value")
     *             .build());
     * 
     *         ctx.export("clickHouseBackupPolicyId1", example.policies()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetBackupPoliciesResult> getBackupPoliciesPlain(GetBackupPoliciesPlainArgs args) {
        return getBackupPoliciesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Click House Backup Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.147.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetBackupPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ClickhouseFunctions.getBackupPolicies(GetBackupPoliciesArgs.builder()
     *             .dbClusterId("example_value")
     *             .build());
     * 
     *         ctx.export("clickHouseBackupPolicyId1", example.policies()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetBackupPoliciesResult> getBackupPolicies(GetBackupPoliciesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:clickhouse/getBackupPolicies:getBackupPolicies", TypeShape.of(GetBackupPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Click House Backup Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.147.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetBackupPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ClickhouseFunctions.getBackupPolicies(GetBackupPoliciesArgs.builder()
     *             .dbClusterId("example_value")
     *             .build());
     * 
     *         ctx.export("clickHouseBackupPolicyId1", example.policies()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetBackupPoliciesResult> getBackupPolicies(GetBackupPoliciesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:clickhouse/getBackupPolicies:getBackupPolicies", TypeShape.of(GetBackupPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Click House Backup Policies of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.147.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetBackupPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ClickhouseFunctions.getBackupPolicies(GetBackupPoliciesArgs.builder()
     *             .dbClusterId("example_value")
     *             .build());
     * 
     *         ctx.export("clickHouseBackupPolicyId1", example.policies()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetBackupPoliciesResult> getBackupPoliciesPlain(GetBackupPoliciesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:clickhouse/getBackupPolicies:getBackupPolicies", TypeShape.of(GetBackupPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Click House DBCluster of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.134.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.DbCluster;
     * import com.pulumi.alicloud.clickhouse.DbClusterArgs;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetDbClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var defaultDbCluster = new DbCluster("defaultDbCluster", DbClusterArgs.builder()
     *             .dbClusterVersion("20.3.10.75")
     *             .category("Basic")
     *             .dbClusterClass("S8")
     *             .dbClusterNetworkType("vpc")
     *             .dbNodeGroupCount(1)
     *             .paymentType("PayAsYouGo")
     *             .dbNodeStorage("500")
     *             .storageType("cloud_essd")
     *             .vswitchId("your_vswitch_id")
     *             .build());
     * 
     *         final var default = ClickhouseFunctions.getDbClusters(GetDbClustersArgs.builder()
     *             .ids(defaultDbCluster.id())
     *             .build());
     * 
     *         ctx.export("dbCluster", default_.applyValue(_default_ -> _default_.ids()[0]));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDbClustersResult> getDbClusters() {
        return getDbClusters(GetDbClustersArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Click House DBCluster of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.134.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.DbCluster;
     * import com.pulumi.alicloud.clickhouse.DbClusterArgs;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetDbClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var defaultDbCluster = new DbCluster("defaultDbCluster", DbClusterArgs.builder()
     *             .dbClusterVersion("20.3.10.75")
     *             .category("Basic")
     *             .dbClusterClass("S8")
     *             .dbClusterNetworkType("vpc")
     *             .dbNodeGroupCount(1)
     *             .paymentType("PayAsYouGo")
     *             .dbNodeStorage("500")
     *             .storageType("cloud_essd")
     *             .vswitchId("your_vswitch_id")
     *             .build());
     * 
     *         final var default = ClickhouseFunctions.getDbClusters(GetDbClustersArgs.builder()
     *             .ids(defaultDbCluster.id())
     *             .build());
     * 
     *         ctx.export("dbCluster", default_.applyValue(_default_ -> _default_.ids()[0]));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDbClustersResult> getDbClustersPlain() {
        return getDbClustersPlain(GetDbClustersPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Click House DBCluster of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.134.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.DbCluster;
     * import com.pulumi.alicloud.clickhouse.DbClusterArgs;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetDbClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var defaultDbCluster = new DbCluster("defaultDbCluster", DbClusterArgs.builder()
     *             .dbClusterVersion("20.3.10.75")
     *             .category("Basic")
     *             .dbClusterClass("S8")
     *             .dbClusterNetworkType("vpc")
     *             .dbNodeGroupCount(1)
     *             .paymentType("PayAsYouGo")
     *             .dbNodeStorage("500")
     *             .storageType("cloud_essd")
     *             .vswitchId("your_vswitch_id")
     *             .build());
     * 
     *         final var default = ClickhouseFunctions.getDbClusters(GetDbClustersArgs.builder()
     *             .ids(defaultDbCluster.id())
     *             .build());
     * 
     *         ctx.export("dbCluster", default_.applyValue(_default_ -> _default_.ids()[0]));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDbClustersResult> getDbClusters(GetDbClustersArgs args) {
        return getDbClusters(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Click House DBCluster of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.134.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.DbCluster;
     * import com.pulumi.alicloud.clickhouse.DbClusterArgs;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetDbClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var defaultDbCluster = new DbCluster("defaultDbCluster", DbClusterArgs.builder()
     *             .dbClusterVersion("20.3.10.75")
     *             .category("Basic")
     *             .dbClusterClass("S8")
     *             .dbClusterNetworkType("vpc")
     *             .dbNodeGroupCount(1)
     *             .paymentType("PayAsYouGo")
     *             .dbNodeStorage("500")
     *             .storageType("cloud_essd")
     *             .vswitchId("your_vswitch_id")
     *             .build());
     * 
     *         final var default = ClickhouseFunctions.getDbClusters(GetDbClustersArgs.builder()
     *             .ids(defaultDbCluster.id())
     *             .build());
     * 
     *         ctx.export("dbCluster", default_.applyValue(_default_ -> _default_.ids()[0]));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDbClustersResult> getDbClustersPlain(GetDbClustersPlainArgs args) {
        return getDbClustersPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Click House DBCluster of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.134.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.DbCluster;
     * import com.pulumi.alicloud.clickhouse.DbClusterArgs;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetDbClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var defaultDbCluster = new DbCluster("defaultDbCluster", DbClusterArgs.builder()
     *             .dbClusterVersion("20.3.10.75")
     *             .category("Basic")
     *             .dbClusterClass("S8")
     *             .dbClusterNetworkType("vpc")
     *             .dbNodeGroupCount(1)
     *             .paymentType("PayAsYouGo")
     *             .dbNodeStorage("500")
     *             .storageType("cloud_essd")
     *             .vswitchId("your_vswitch_id")
     *             .build());
     * 
     *         final var default = ClickhouseFunctions.getDbClusters(GetDbClustersArgs.builder()
     *             .ids(defaultDbCluster.id())
     *             .build());
     * 
     *         ctx.export("dbCluster", default_.applyValue(_default_ -> _default_.ids()[0]));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDbClustersResult> getDbClusters(GetDbClustersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:clickhouse/getDbClusters:getDbClusters", TypeShape.of(GetDbClustersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Click House DBCluster of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.134.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.DbCluster;
     * import com.pulumi.alicloud.clickhouse.DbClusterArgs;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetDbClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var defaultDbCluster = new DbCluster("defaultDbCluster", DbClusterArgs.builder()
     *             .dbClusterVersion("20.3.10.75")
     *             .category("Basic")
     *             .dbClusterClass("S8")
     *             .dbClusterNetworkType("vpc")
     *             .dbNodeGroupCount(1)
     *             .paymentType("PayAsYouGo")
     *             .dbNodeStorage("500")
     *             .storageType("cloud_essd")
     *             .vswitchId("your_vswitch_id")
     *             .build());
     * 
     *         final var default = ClickhouseFunctions.getDbClusters(GetDbClustersArgs.builder()
     *             .ids(defaultDbCluster.id())
     *             .build());
     * 
     *         ctx.export("dbCluster", default_.applyValue(_default_ -> _default_.ids()[0]));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDbClustersResult> getDbClusters(GetDbClustersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:clickhouse/getDbClusters:getDbClusters", TypeShape.of(GetDbClustersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Click House DBCluster of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.134.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.DbCluster;
     * import com.pulumi.alicloud.clickhouse.DbClusterArgs;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetDbClustersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var defaultDbCluster = new DbCluster("defaultDbCluster", DbClusterArgs.builder()
     *             .dbClusterVersion("20.3.10.75")
     *             .category("Basic")
     *             .dbClusterClass("S8")
     *             .dbClusterNetworkType("vpc")
     *             .dbNodeGroupCount(1)
     *             .paymentType("PayAsYouGo")
     *             .dbNodeStorage("500")
     *             .storageType("cloud_essd")
     *             .vswitchId("your_vswitch_id")
     *             .build());
     * 
     *         final var default = ClickhouseFunctions.getDbClusters(GetDbClustersArgs.builder()
     *             .ids(defaultDbCluster.id())
     *             .build());
     * 
     *         ctx.export("dbCluster", default_.applyValue(_default_ -> _default_.ids()[0]));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDbClustersResult> getDbClustersPlain(GetDbClustersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:clickhouse/getDbClusters:getDbClusters", TypeShape.of(GetDbClustersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Click House Regions of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.138.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetRegionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default1 = ClickhouseFunctions.getRegions(GetRegionsArgs.builder()
     *             .current(true)
     *             .build());
     * 
     *         final var default2 = ClickhouseFunctions.getRegions(GetRegionsArgs.builder()
     *             .regionId("cn-hangzhou")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRegionsResult> getRegions() {
        return getRegions(GetRegionsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Click House Regions of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.138.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetRegionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default1 = ClickhouseFunctions.getRegions(GetRegionsArgs.builder()
     *             .current(true)
     *             .build());
     * 
     *         final var default2 = ClickhouseFunctions.getRegions(GetRegionsArgs.builder()
     *             .regionId("cn-hangzhou")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRegionsResult> getRegionsPlain() {
        return getRegionsPlain(GetRegionsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Click House Regions of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.138.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetRegionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default1 = ClickhouseFunctions.getRegions(GetRegionsArgs.builder()
     *             .current(true)
     *             .build());
     * 
     *         final var default2 = ClickhouseFunctions.getRegions(GetRegionsArgs.builder()
     *             .regionId("cn-hangzhou")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRegionsResult> getRegions(GetRegionsArgs args) {
        return getRegions(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Click House Regions of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.138.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetRegionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default1 = ClickhouseFunctions.getRegions(GetRegionsArgs.builder()
     *             .current(true)
     *             .build());
     * 
     *         final var default2 = ClickhouseFunctions.getRegions(GetRegionsArgs.builder()
     *             .regionId("cn-hangzhou")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRegionsResult> getRegionsPlain(GetRegionsPlainArgs args) {
        return getRegionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Click House Regions of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.138.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetRegionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default1 = ClickhouseFunctions.getRegions(GetRegionsArgs.builder()
     *             .current(true)
     *             .build());
     * 
     *         final var default2 = ClickhouseFunctions.getRegions(GetRegionsArgs.builder()
     *             .regionId("cn-hangzhou")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRegionsResult> getRegions(GetRegionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:clickhouse/getRegions:getRegions", TypeShape.of(GetRegionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Click House Regions of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.138.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetRegionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default1 = ClickhouseFunctions.getRegions(GetRegionsArgs.builder()
     *             .current(true)
     *             .build());
     * 
     *         final var default2 = ClickhouseFunctions.getRegions(GetRegionsArgs.builder()
     *             .regionId("cn-hangzhou")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetRegionsResult> getRegions(GetRegionsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:clickhouse/getRegions:getRegions", TypeShape.of(GetRegionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Click House Regions of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.138.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.clickhouse.ClickhouseFunctions;
     * import com.pulumi.alicloud.clickhouse.inputs.GetRegionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default1 = ClickhouseFunctions.getRegions(GetRegionsArgs.builder()
     *             .current(true)
     *             .build());
     * 
     *         final var default2 = ClickhouseFunctions.getRegions(GetRegionsArgs.builder()
     *             .regionId("cn-hangzhou")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetRegionsResult> getRegionsPlain(GetRegionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:clickhouse/getRegions:getRegions", TypeShape.of(GetRegionsResult.class), args, Utilities.withVersion(options));
    }
}
