// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketReplicationProgressArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketReplicationProgressArgs Empty = new BucketReplicationProgressArgs();

    /**
     * The percentage of the replicated historical data. This element is valid only when historical_object_replication is set to enabled.
     * 
     */
    @Import(name="historicalObject")
    private @Nullable Output<String> historicalObject;

    /**
     * @return The percentage of the replicated historical data. This element is valid only when historical_object_replication is set to enabled.
     * 
     */
    public Optional<Output<String>> historicalObject() {
        return Optional.ofNullable(this.historicalObject);
    }

    /**
     * The time used to distinguish new data from historical data. Data that is written to the source bucket before the time is replicated to the destination bucket as new data. The value of this element is in GMT.
     * 
     */
    @Import(name="newObject")
    private @Nullable Output<String> newObject;

    /**
     * @return The time used to distinguish new data from historical data. Data that is written to the source bucket before the time is replicated to the destination bucket as new data. The value of this element is in GMT.
     * 
     */
    public Optional<Output<String>> newObject() {
        return Optional.ofNullable(this.newObject);
    }

    private BucketReplicationProgressArgs() {}

    private BucketReplicationProgressArgs(BucketReplicationProgressArgs $) {
        this.historicalObject = $.historicalObject;
        this.newObject = $.newObject;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketReplicationProgressArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketReplicationProgressArgs $;

        public Builder() {
            $ = new BucketReplicationProgressArgs();
        }

        public Builder(BucketReplicationProgressArgs defaults) {
            $ = new BucketReplicationProgressArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param historicalObject The percentage of the replicated historical data. This element is valid only when historical_object_replication is set to enabled.
         * 
         * @return builder
         * 
         */
        public Builder historicalObject(@Nullable Output<String> historicalObject) {
            $.historicalObject = historicalObject;
            return this;
        }

        /**
         * @param historicalObject The percentage of the replicated historical data. This element is valid only when historical_object_replication is set to enabled.
         * 
         * @return builder
         * 
         */
        public Builder historicalObject(String historicalObject) {
            return historicalObject(Output.of(historicalObject));
        }

        /**
         * @param newObject The time used to distinguish new data from historical data. Data that is written to the source bucket before the time is replicated to the destination bucket as new data. The value of this element is in GMT.
         * 
         * @return builder
         * 
         */
        public Builder newObject(@Nullable Output<String> newObject) {
            $.newObject = newObject;
            return this;
        }

        /**
         * @param newObject The time used to distinguish new data from historical data. Data that is written to the source bucket before the time is replicated to the destination bucket as new data. The value of this element is in GMT.
         * 
         * @return builder
         * 
         */
        public Builder newObject(String newObject) {
            return newObject(Output.of(newObject));
        }

        public BucketReplicationProgressArgs build() {
            return $;
        }
    }

}
