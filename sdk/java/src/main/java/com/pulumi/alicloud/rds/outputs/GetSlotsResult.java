// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rds.outputs;

import com.pulumi.alicloud.rds.outputs.GetSlotsSlot;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSlotsResult {
    private String dbInstanceId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String outputFile;
    private @Nullable String resourceGroupId;
    /**
     * @return A list of Rds Replication Slots. Each element contains the following attributes:
     * 
     */
    private List<GetSlotsSlot> slots;

    private GetSlotsResult() {}
    public String dbInstanceId() {
        return this.dbInstanceId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public Optional<String> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }
    /**
     * @return A list of Rds Replication Slots. Each element contains the following attributes:
     * 
     */
    public List<GetSlotsSlot> slots() {
        return this.slots;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSlotsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dbInstanceId;
        private String id;
        private @Nullable String outputFile;
        private @Nullable String resourceGroupId;
        private List<GetSlotsSlot> slots;
        public Builder() {}
        public Builder(GetSlotsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbInstanceId = defaults.dbInstanceId;
    	      this.id = defaults.id;
    	      this.outputFile = defaults.outputFile;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.slots = defaults.slots;
        }

        @CustomType.Setter
        public Builder dbInstanceId(String dbInstanceId) {
            if (dbInstanceId == null) {
              throw new MissingRequiredPropertyException("GetSlotsResult", "dbInstanceId");
            }
            this.dbInstanceId = dbInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSlotsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupId(@Nullable String resourceGroupId) {

            this.resourceGroupId = resourceGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder slots(List<GetSlotsSlot> slots) {
            if (slots == null) {
              throw new MissingRequiredPropertyException("GetSlotsResult", "slots");
            }
            this.slots = slots;
            return this;
        }
        public Builder slots(GetSlotsSlot... slots) {
            return slots(List.of(slots));
        }
        public GetSlotsResult build() {
            final var _resultValue = new GetSlotsResult();
            _resultValue.dbInstanceId = dbInstanceId;
            _resultValue.id = id;
            _resultValue.outputFile = outputFile;
            _resultValue.resourceGroupId = resourceGroupId;
            _resultValue.slots = slots;
            return _resultValue;
        }
    }
}
