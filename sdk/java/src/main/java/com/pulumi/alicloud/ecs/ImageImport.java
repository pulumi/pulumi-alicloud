// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.ecs.ImageImportArgs;
import com.pulumi.alicloud.ecs.inputs.ImageImportState;
import com.pulumi.alicloud.ecs.outputs.ImageImportDiskDeviceMapping;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a ECS Image Import resource.
 * 
 * For information about ECS Image Import and how to use it, see [What is Image Import](https://www.alibabacloud.com/help/en/ecs/developer-reference/api-ecs-2014-05-26-importimage).
 * 
 * &gt; **NOTE:** Available since v1.69.0.
 * 
 * &gt; **NOTE:** You must upload the image file to the object storage OSS in advance.
 * 
 * &gt; **NOTE:** The region where the image is imported must be the same region as the OSS bucket where the image file is uploaded.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.oss.Bucket;
 * import com.pulumi.alicloud.oss.BucketArgs;
 * import com.pulumi.alicloud.oss.BucketObject;
 * import com.pulumi.alicloud.oss.BucketObjectArgs;
 * import com.pulumi.alicloud.ecs.ImageImport;
 * import com.pulumi.alicloud.ecs.ImageImportArgs;
 * import com.pulumi.alicloud.ecs.inputs.ImageImportDiskDeviceMappingArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("terraform-image-import-example");
 *         var default_ = new Integer("default", IntegerArgs.builder()
 *             .min(10000)
 *             .max(99999)
 *             .build());
 * 
 *         var defaultBucket = new Bucket("defaultBucket", BucketArgs.builder()
 *             .bucket(String.format("%s-%s", name,default_.result()))
 *             .build());
 * 
 *         var defaultBucketObject = new BucketObject("defaultBucketObject", BucketObjectArgs.builder()
 *             .bucket(defaultBucket.id())
 *             .key("fc/hello.zip")
 *             .content("""
 *     # -*- coding: utf-8 -*-
 *     def handler(event, context):
 *     print \"hello world\"
 *     return 'hello world'
 *             """)
 *             .build());
 * 
 *         var defaultImageImport = new ImageImport("defaultImageImport", ImageImportArgs.builder()
 *             .architecture("x86_64")
 *             .osType("linux")
 *             .platform("Ubuntu")
 *             .licenseType("Auto")
 *             .imageName(name)
 *             .description(name)
 *             .diskDeviceMappings(ImageImportDiskDeviceMappingArgs.builder()
 *                 .ossBucket(defaultBucket.id())
 *                 .ossObject(defaultBucketObject.id())
 *                 .diskImageSize(5)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ECS Image Import can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:ecs/imageImport:ImageImport example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:ecs/imageImport:ImageImport")
public class ImageImport extends com.pulumi.resources.CustomResource {
    /**
     * The architecture of the image. Default value: `x86_64`. Valid values: `x86_64`, `i386`.
     * 
     */
    @Export(name="architecture", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> architecture;

    /**
     * @return The architecture of the image. Default value: `x86_64`. Valid values: `x86_64`, `i386`.
     * 
     */
    public Output<Optional<String>> architecture() {
        return Codegen.optional(this.architecture);
    }
    /**
     * The boot mode of the image. Valid values: `BIOS`, `UEFI`.
     * 
     */
    @Export(name="bootMode", refs={String.class}, tree="[0]")
    private Output<String> bootMode;

    /**
     * @return The boot mode of the image. Valid values: `BIOS`, `UEFI`.
     * 
     */
    public Output<String> bootMode() {
        return this.bootMode;
    }
    /**
     * The description of the image. The `description` must be 2 to 256 characters in length and cannot start with http:// or https://.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the image. The `description` must be 2 to 256 characters in length and cannot start with http:// or https://.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The information about the custom image. See `disk_device_mapping` below.
     * 
     */
    @Export(name="diskDeviceMappings", refs={List.class,ImageImportDiskDeviceMapping.class}, tree="[0,1]")
    private Output<List<ImageImportDiskDeviceMapping>> diskDeviceMappings;

    /**
     * @return The information about the custom image. See `disk_device_mapping` below.
     * 
     */
    public Output<List<ImageImportDiskDeviceMapping>> diskDeviceMappings() {
        return this.diskDeviceMappings;
    }
    /**
     * The name of the image. The `image_name` must be `2` to `128` characters in length. The `image_name` must start with a letter and cannot start with acs: or aliyun. The `image_name` cannot contain http:// or https://. The `image_name` can contain letters, digits, periods (.), colons (:), underscores (_), and hyphens (-).
     * 
     */
    @Export(name="imageName", refs={String.class}, tree="[0]")
    private Output<String> imageName;

    /**
     * @return The name of the image. The `image_name` must be `2` to `128` characters in length. The `image_name` must start with a letter and cannot start with acs: or aliyun. The `image_name` cannot contain http:// or https://. The `image_name` can contain letters, digits, periods (.), colons (:), underscores (_), and hyphens (-).
     * 
     */
    public Output<String> imageName() {
        return this.imageName;
    }
    /**
     * The type of the license used to activate the operating system after the image is imported. Default value: `Auto`. Valid values: `Auto`, `Aliyun`, `BYOL`.
     * 
     */
    @Export(name="licenseType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> licenseType;

    /**
     * @return The type of the license used to activate the operating system after the image is imported. Default value: `Auto`. Valid values: `Auto`, `Aliyun`, `BYOL`.
     * 
     */
    public Output<Optional<String>> licenseType() {
        return Codegen.optional(this.licenseType);
    }
    /**
     * The type of the operating system. Default value: `linux`. Valid values: `windows`, `linux`.
     * 
     */
    @Export(name="osType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> osType;

    /**
     * @return The type of the operating system. Default value: `linux`. Valid values: `windows`, `linux`.
     * 
     */
    public Output<Optional<String>> osType() {
        return Codegen.optional(this.osType);
    }
    /**
     * The operating system platform. More valid values refer to [ImportImage OpenAPI](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/importimage).
     * &gt; **NOTE:** Before provider version 1.197.0, the default value of `platform` is `Ubuntu`.
     * 
     */
    @Export(name="platform", refs={String.class}, tree="[0]")
    private Output<String> platform;

    /**
     * @return The operating system platform. More valid values refer to [ImportImage OpenAPI](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/importimage).
     * &gt; **NOTE:** Before provider version 1.197.0, the default value of `platform` is `Ubuntu`.
     * 
     */
    public Output<String> platform() {
        return this.platform;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ImageImport(java.lang.String name) {
        this(name, ImageImportArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ImageImport(java.lang.String name, ImageImportArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ImageImport(java.lang.String name, ImageImportArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ecs/imageImport:ImageImport", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ImageImport(java.lang.String name, Output<java.lang.String> id, @Nullable ImageImportState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ecs/imageImport:ImageImport", name, state, makeResourceOptions(options, id), false);
    }

    private static ImageImportArgs makeArgs(ImageImportArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ImageImportArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ImageImport get(java.lang.String name, Output<java.lang.String> id, @Nullable ImageImportState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ImageImport(name, id, state, options);
    }
}
