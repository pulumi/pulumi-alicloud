// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc.inputs;

import com.pulumi.alicloud.fc.inputs.ServiceNasConfigMountPointArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;


public final class ServiceNasConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceNasConfigArgs Empty = new ServiceNasConfigArgs();

    /**
     * The group id of your NAS file system.
     * 
     */
    @Import(name="groupId", required=true)
    private Output<Integer> groupId;

    /**
     * @return The group id of your NAS file system.
     * 
     */
    public Output<Integer> groupId() {
        return this.groupId;
    }

    /**
     * Config the NAS mount points.See `mount_points` below.
     * 
     */
    @Import(name="mountPoints", required=true)
    private Output<List<ServiceNasConfigMountPointArgs>> mountPoints;

    /**
     * @return Config the NAS mount points.See `mount_points` below.
     * 
     */
    public Output<List<ServiceNasConfigMountPointArgs>> mountPoints() {
        return this.mountPoints;
    }

    /**
     * The user id of your NAS file system.
     * 
     */
    @Import(name="userId", required=true)
    private Output<Integer> userId;

    /**
     * @return The user id of your NAS file system.
     * 
     */
    public Output<Integer> userId() {
        return this.userId;
    }

    private ServiceNasConfigArgs() {}

    private ServiceNasConfigArgs(ServiceNasConfigArgs $) {
        this.groupId = $.groupId;
        this.mountPoints = $.mountPoints;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceNasConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceNasConfigArgs $;

        public Builder() {
            $ = new ServiceNasConfigArgs();
        }

        public Builder(ServiceNasConfigArgs defaults) {
            $ = new ServiceNasConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupId The group id of your NAS file system.
         * 
         * @return builder
         * 
         */
        public Builder groupId(Output<Integer> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId The group id of your NAS file system.
         * 
         * @return builder
         * 
         */
        public Builder groupId(Integer groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param mountPoints Config the NAS mount points.See `mount_points` below.
         * 
         * @return builder
         * 
         */
        public Builder mountPoints(Output<List<ServiceNasConfigMountPointArgs>> mountPoints) {
            $.mountPoints = mountPoints;
            return this;
        }

        /**
         * @param mountPoints Config the NAS mount points.See `mount_points` below.
         * 
         * @return builder
         * 
         */
        public Builder mountPoints(List<ServiceNasConfigMountPointArgs> mountPoints) {
            return mountPoints(Output.of(mountPoints));
        }

        /**
         * @param mountPoints Config the NAS mount points.See `mount_points` below.
         * 
         * @return builder
         * 
         */
        public Builder mountPoints(ServiceNasConfigMountPointArgs... mountPoints) {
            return mountPoints(List.of(mountPoints));
        }

        /**
         * @param userId The user id of your NAS file system.
         * 
         * @return builder
         * 
         */
        public Builder userId(Output<Integer> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId The user id of your NAS file system.
         * 
         * @return builder
         * 
         */
        public Builder userId(Integer userId) {
            return userId(Output.of(userId));
        }

        public ServiceNasConfigArgs build() {
            if ($.groupId == null) {
                throw new MissingRequiredPropertyException("ServiceNasConfigArgs", "groupId");
            }
            if ($.mountPoints == null) {
                throw new MissingRequiredPropertyException("ServiceNasConfigArgs", "mountPoints");
            }
            if ($.userId == null) {
                throw new MissingRequiredPropertyException("ServiceNasConfigArgs", "userId");
            }
            return $;
        }
    }

}
