// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ddos;

import com.pulumi.alicloud.ddos.inputs.BgpPolicyContentArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BgpPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final BgpPolicyArgs Empty = new BgpPolicyArgs();

    /**
     * Configuration Content See `content` below.
     * 
     */
    @Import(name="content")
    private @Nullable Output<BgpPolicyContentArgs> content;

    /**
     * @return Configuration Content See `content` below.
     * 
     */
    public Optional<Output<BgpPolicyContentArgs>> content() {
        return Optional.ofNullable(this.content);
    }

    /**
     * The name of the resource
     * 
     */
    @Import(name="policyName", required=true)
    private Output<String> policyName;

    /**
     * @return The name of the resource
     * 
     */
    public Output<String> policyName() {
        return this.policyName;
    }

    /**
     * Type
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private BgpPolicyArgs() {}

    private BgpPolicyArgs(BgpPolicyArgs $) {
        this.content = $.content;
        this.policyName = $.policyName;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BgpPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BgpPolicyArgs $;

        public Builder() {
            $ = new BgpPolicyArgs();
        }

        public Builder(BgpPolicyArgs defaults) {
            $ = new BgpPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param content Configuration Content See `content` below.
         * 
         * @return builder
         * 
         */
        public Builder content(@Nullable Output<BgpPolicyContentArgs> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content Configuration Content See `content` below.
         * 
         * @return builder
         * 
         */
        public Builder content(BgpPolicyContentArgs content) {
            return content(Output.of(content));
        }

        /**
         * @param policyName The name of the resource
         * 
         * @return builder
         * 
         */
        public Builder policyName(Output<String> policyName) {
            $.policyName = policyName;
            return this;
        }

        /**
         * @param policyName The name of the resource
         * 
         * @return builder
         * 
         */
        public Builder policyName(String policyName) {
            return policyName(Output.of(policyName));
        }

        /**
         * @param type Type
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public BgpPolicyArgs build() {
            if ($.policyName == null) {
                throw new MissingRequiredPropertyException("BgpPolicyArgs", "policyName");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("BgpPolicyArgs", "type");
            }
            return $;
        }
    }

}
