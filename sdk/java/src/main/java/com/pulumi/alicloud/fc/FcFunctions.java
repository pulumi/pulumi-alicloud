// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.fc.inputs.GetCustomDomainsArgs;
import com.pulumi.alicloud.fc.inputs.GetCustomDomainsPlainArgs;
import com.pulumi.alicloud.fc.inputs.GetFunctionsArgs;
import com.pulumi.alicloud.fc.inputs.GetFunctionsPlainArgs;
import com.pulumi.alicloud.fc.inputs.GetServiceArgs;
import com.pulumi.alicloud.fc.inputs.GetServicePlainArgs;
import com.pulumi.alicloud.fc.inputs.GetServicesArgs;
import com.pulumi.alicloud.fc.inputs.GetServicesPlainArgs;
import com.pulumi.alicloud.fc.inputs.GetTriggersArgs;
import com.pulumi.alicloud.fc.inputs.GetTriggersPlainArgs;
import com.pulumi.alicloud.fc.inputs.GetV3TriggersArgs;
import com.pulumi.alicloud.fc.inputs.GetV3TriggersPlainArgs;
import com.pulumi.alicloud.fc.inputs.GetZonesArgs;
import com.pulumi.alicloud.fc.inputs.GetZonesPlainArgs;
import com.pulumi.alicloud.fc.outputs.GetCustomDomainsResult;
import com.pulumi.alicloud.fc.outputs.GetFunctionsResult;
import com.pulumi.alicloud.fc.outputs.GetServiceResult;
import com.pulumi.alicloud.fc.outputs.GetServicesResult;
import com.pulumi.alicloud.fc.outputs.GetTriggersResult;
import com.pulumi.alicloud.fc.outputs.GetV3TriggersResult;
import com.pulumi.alicloud.fc.outputs.GetZonesResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import java.util.concurrent.CompletableFuture;

public final class FcFunctions {
    /**
     * This data source provides the Function Compute custom domains of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in 1.98.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetCustomDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fcDomains = FcFunctions.getCustomDomains(GetCustomDomainsArgs.builder()
     *             .nameRegex("sample_fc_custom_domain")
     *             .build());
     * 
     *         ctx.export("firstFcCustomDomainName", fcDomainsDs.domains()[0].domainName());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomDomainsResult> getCustomDomains() {
        return getCustomDomains(GetCustomDomainsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Function Compute custom domains of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in 1.98.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetCustomDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fcDomains = FcFunctions.getCustomDomains(GetCustomDomainsArgs.builder()
     *             .nameRegex("sample_fc_custom_domain")
     *             .build());
     * 
     *         ctx.export("firstFcCustomDomainName", fcDomainsDs.domains()[0].domainName());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomDomainsResult> getCustomDomainsPlain() {
        return getCustomDomainsPlain(GetCustomDomainsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Function Compute custom domains of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in 1.98.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetCustomDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fcDomains = FcFunctions.getCustomDomains(GetCustomDomainsArgs.builder()
     *             .nameRegex("sample_fc_custom_domain")
     *             .build());
     * 
     *         ctx.export("firstFcCustomDomainName", fcDomainsDs.domains()[0].domainName());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomDomainsResult> getCustomDomains(GetCustomDomainsArgs args) {
        return getCustomDomains(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Function Compute custom domains of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in 1.98.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetCustomDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fcDomains = FcFunctions.getCustomDomains(GetCustomDomainsArgs.builder()
     *             .nameRegex("sample_fc_custom_domain")
     *             .build());
     * 
     *         ctx.export("firstFcCustomDomainName", fcDomainsDs.domains()[0].domainName());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomDomainsResult> getCustomDomainsPlain(GetCustomDomainsPlainArgs args) {
        return getCustomDomainsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Function Compute custom domains of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in 1.98.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetCustomDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fcDomains = FcFunctions.getCustomDomains(GetCustomDomainsArgs.builder()
     *             .nameRegex("sample_fc_custom_domain")
     *             .build());
     * 
     *         ctx.export("firstFcCustomDomainName", fcDomainsDs.domains()[0].domainName());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomDomainsResult> getCustomDomains(GetCustomDomainsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:fc/getCustomDomains:getCustomDomains", TypeShape.of(GetCustomDomainsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Function Compute custom domains of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in 1.98.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetCustomDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fcDomains = FcFunctions.getCustomDomains(GetCustomDomainsArgs.builder()
     *             .nameRegex("sample_fc_custom_domain")
     *             .build());
     * 
     *         ctx.export("firstFcCustomDomainName", fcDomainsDs.domains()[0].domainName());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomDomainsResult> getCustomDomains(GetCustomDomainsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:fc/getCustomDomains:getCustomDomains", TypeShape.of(GetCustomDomainsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Function Compute custom domains of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in 1.98.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetCustomDomainsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fcDomains = FcFunctions.getCustomDomains(GetCustomDomainsArgs.builder()
     *             .nameRegex("sample_fc_custom_domain")
     *             .build());
     * 
     *         ctx.export("firstFcCustomDomainName", fcDomainsDs.domains()[0].domainName());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomDomainsResult> getCustomDomainsPlain(GetCustomDomainsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:fc/getCustomDomains:getCustomDomains", TypeShape.of(GetCustomDomainsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Function Compute functions of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetFunctionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var functionsDs = FcFunctions.getFunctions(GetFunctionsArgs.builder()
     *             .serviceName("sample_service")
     *             .nameRegex("sample_fc_function")
     *             .build());
     * 
     *         ctx.export("firstFcFunctionName", functionsDs.functions()[0].name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFunctionsResult> getFunctions(GetFunctionsArgs args) {
        return getFunctions(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Function Compute functions of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetFunctionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var functionsDs = FcFunctions.getFunctions(GetFunctionsArgs.builder()
     *             .serviceName("sample_service")
     *             .nameRegex("sample_fc_function")
     *             .build());
     * 
     *         ctx.export("firstFcFunctionName", functionsDs.functions()[0].name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFunctionsResult> getFunctionsPlain(GetFunctionsPlainArgs args) {
        return getFunctionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Function Compute functions of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetFunctionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var functionsDs = FcFunctions.getFunctions(GetFunctionsArgs.builder()
     *             .serviceName("sample_service")
     *             .nameRegex("sample_fc_function")
     *             .build());
     * 
     *         ctx.export("firstFcFunctionName", functionsDs.functions()[0].name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFunctionsResult> getFunctions(GetFunctionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:fc/getFunctions:getFunctions", TypeShape.of(GetFunctionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Function Compute functions of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetFunctionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var functionsDs = FcFunctions.getFunctions(GetFunctionsArgs.builder()
     *             .serviceName("sample_service")
     *             .nameRegex("sample_fc_function")
     *             .build());
     * 
     *         ctx.export("firstFcFunctionName", functionsDs.functions()[0].name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFunctionsResult> getFunctions(GetFunctionsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:fc/getFunctions:getFunctions", TypeShape.of(GetFunctionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Function Compute functions of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetFunctionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var functionsDs = FcFunctions.getFunctions(GetFunctionsArgs.builder()
     *             .serviceName("sample_service")
     *             .nameRegex("sample_fc_function")
     *             .build());
     * 
     *         ctx.export("firstFcFunctionName", functionsDs.functions()[0].name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFunctionsResult> getFunctionsPlain(GetFunctionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:fc/getFunctions:getFunctions", TypeShape.of(GetFunctionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Using this data source can open FC service automatically. If the service has been opened, it will return opened.
     * 
     * For information about FC and how to use it, see [What is FC](https://www.alibabacloud.com/help/en/functioncompute/fc/product-overview/what-is-function-compute).
     * 
     * &gt; **NOTE:** Available since v1.112.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = FcFunctions.getService(GetServiceArgs.builder()
     *             .enable("On")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceResult> getService() {
        return getService(GetServiceArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Using this data source can open FC service automatically. If the service has been opened, it will return opened.
     * 
     * For information about FC and how to use it, see [What is FC](https://www.alibabacloud.com/help/en/functioncompute/fc/product-overview/what-is-function-compute).
     * 
     * &gt; **NOTE:** Available since v1.112.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = FcFunctions.getService(GetServiceArgs.builder()
     *             .enable("On")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain() {
        return getServicePlain(GetServicePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Using this data source can open FC service automatically. If the service has been opened, it will return opened.
     * 
     * For information about FC and how to use it, see [What is FC](https://www.alibabacloud.com/help/en/functioncompute/fc/product-overview/what-is-function-compute).
     * 
     * &gt; **NOTE:** Available since v1.112.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = FcFunctions.getService(GetServiceArgs.builder()
     *             .enable("On")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args) {
        return getService(args, InvokeOptions.Empty);
    }
    /**
     * Using this data source can open FC service automatically. If the service has been opened, it will return opened.
     * 
     * For information about FC and how to use it, see [What is FC](https://www.alibabacloud.com/help/en/functioncompute/fc/product-overview/what-is-function-compute).
     * 
     * &gt; **NOTE:** Available since v1.112.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = FcFunctions.getService(GetServiceArgs.builder()
     *             .enable("On")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args) {
        return getServicePlain(args, InvokeOptions.Empty);
    }
    /**
     * Using this data source can open FC service automatically. If the service has been opened, it will return opened.
     * 
     * For information about FC and how to use it, see [What is FC](https://www.alibabacloud.com/help/en/functioncompute/fc/product-overview/what-is-function-compute).
     * 
     * &gt; **NOTE:** Available since v1.112.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = FcFunctions.getService(GetServiceArgs.builder()
     *             .enable("On")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:fc/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Using this data source can open FC service automatically. If the service has been opened, it will return opened.
     * 
     * For information about FC and how to use it, see [What is FC](https://www.alibabacloud.com/help/en/functioncompute/fc/product-overview/what-is-function-compute).
     * 
     * &gt; **NOTE:** Available since v1.112.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = FcFunctions.getService(GetServiceArgs.builder()
     *             .enable("On")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:fc/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Using this data source can open FC service automatically. If the service has been opened, it will return opened.
     * 
     * For information about FC and how to use it, see [What is FC](https://www.alibabacloud.com/help/en/functioncompute/fc/product-overview/what-is-function-compute).
     * 
     * &gt; **NOTE:** Available since v1.112.0+
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var open = FcFunctions.getService(GetServiceArgs.builder()
     *             .enable("On")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:fc/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Function Compute services of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetServicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fcServicesDs = FcFunctions.getServices(GetServicesArgs.builder()
     *             .nameRegex("sample_fc_service")
     *             .build());
     * 
     *         ctx.export("firstFcServiceName", fcServicesDs.services()[0].name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServicesResult> getServices() {
        return getServices(GetServicesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Function Compute services of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetServicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fcServicesDs = FcFunctions.getServices(GetServicesArgs.builder()
     *             .nameRegex("sample_fc_service")
     *             .build());
     * 
     *         ctx.export("firstFcServiceName", fcServicesDs.services()[0].name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServicesResult> getServicesPlain() {
        return getServicesPlain(GetServicesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Function Compute services of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetServicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fcServicesDs = FcFunctions.getServices(GetServicesArgs.builder()
     *             .nameRegex("sample_fc_service")
     *             .build());
     * 
     *         ctx.export("firstFcServiceName", fcServicesDs.services()[0].name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServicesResult> getServices(GetServicesArgs args) {
        return getServices(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Function Compute services of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetServicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fcServicesDs = FcFunctions.getServices(GetServicesArgs.builder()
     *             .nameRegex("sample_fc_service")
     *             .build());
     * 
     *         ctx.export("firstFcServiceName", fcServicesDs.services()[0].name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServicesResult> getServicesPlain(GetServicesPlainArgs args) {
        return getServicesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Function Compute services of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetServicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fcServicesDs = FcFunctions.getServices(GetServicesArgs.builder()
     *             .nameRegex("sample_fc_service")
     *             .build());
     * 
     *         ctx.export("firstFcServiceName", fcServicesDs.services()[0].name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServicesResult> getServices(GetServicesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:fc/getServices:getServices", TypeShape.of(GetServicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Function Compute services of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetServicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fcServicesDs = FcFunctions.getServices(GetServicesArgs.builder()
     *             .nameRegex("sample_fc_service")
     *             .build());
     * 
     *         ctx.export("firstFcServiceName", fcServicesDs.services()[0].name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServicesResult> getServices(GetServicesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:fc/getServices:getServices", TypeShape.of(GetServicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Function Compute services of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetServicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fcServicesDs = FcFunctions.getServices(GetServicesArgs.builder()
     *             .nameRegex("sample_fc_service")
     *             .build());
     * 
     *         ctx.export("firstFcServiceName", fcServicesDs.services()[0].name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServicesResult> getServicesPlain(GetServicesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:fc/getServices:getServices", TypeShape.of(GetServicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Function Compute triggers of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetTriggersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fcTriggersDs = FcFunctions.getTriggers(GetTriggersArgs.builder()
     *             .serviceName("sample_service")
     *             .functionName("sample_function")
     *             .nameRegex("sample_fc_trigger")
     *             .build());
     * 
     *         ctx.export("firstFcTriggerName", fcTriggersDs.triggers()[0].name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTriggersResult> getTriggers(GetTriggersArgs args) {
        return getTriggers(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Function Compute triggers of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetTriggersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fcTriggersDs = FcFunctions.getTriggers(GetTriggersArgs.builder()
     *             .serviceName("sample_service")
     *             .functionName("sample_function")
     *             .nameRegex("sample_fc_trigger")
     *             .build());
     * 
     *         ctx.export("firstFcTriggerName", fcTriggersDs.triggers()[0].name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTriggersResult> getTriggersPlain(GetTriggersPlainArgs args) {
        return getTriggersPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Function Compute triggers of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetTriggersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fcTriggersDs = FcFunctions.getTriggers(GetTriggersArgs.builder()
     *             .serviceName("sample_service")
     *             .functionName("sample_function")
     *             .nameRegex("sample_fc_trigger")
     *             .build());
     * 
     *         ctx.export("firstFcTriggerName", fcTriggersDs.triggers()[0].name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTriggersResult> getTriggers(GetTriggersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:fc/getTriggers:getTriggers", TypeShape.of(GetTriggersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Function Compute triggers of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetTriggersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fcTriggersDs = FcFunctions.getTriggers(GetTriggersArgs.builder()
     *             .serviceName("sample_service")
     *             .functionName("sample_function")
     *             .nameRegex("sample_fc_trigger")
     *             .build());
     * 
     *         ctx.export("firstFcTriggerName", fcTriggersDs.triggers()[0].name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTriggersResult> getTriggers(GetTriggersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:fc/getTriggers:getTriggers", TypeShape.of(GetTriggersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Function Compute triggers of the current Alibaba Cloud user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetTriggersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var fcTriggersDs = FcFunctions.getTriggers(GetTriggersArgs.builder()
     *             .serviceName("sample_service")
     *             .functionName("sample_function")
     *             .nameRegex("sample_fc_trigger")
     *             .build());
     * 
     *         ctx.export("firstFcTriggerName", fcTriggersDs.triggers()[0].name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTriggersResult> getTriggersPlain(GetTriggersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:fc/getTriggers:getTriggers", TypeShape.of(GetTriggersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides Fcv3 Trigger available to the user.[What is Trigger](https://next.api.alibabacloud.com/document/FC/2023-03-30/CreateTrigger)
     * 
     * &gt; **NOTE:** Available since v1.250.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.V3Function;
     * import com.pulumi.alicloud.fc.V3FunctionArgs;
     * import com.pulumi.alicloud.fc.inputs.V3FunctionCodeArgs;
     * import com.pulumi.alicloud.fc.inputs.V3FunctionLogConfigArgs;
     * import com.pulumi.alicloud.fc.V3Trigger;
     * import com.pulumi.alicloud.fc.V3TriggerArgs;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetV3TriggersArgs;
     * import static com.pulumi.codegen.internal.Serialization.*;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-exampleTriggerResourceAPI");
     *         final var functionName = config.get("functionName").orElse("terraform-exampleTriggerResourceAPI");
     *         final var triggerName = config.get("triggerName").orElse("exampleTrigger_HTTP");
     *         var function = new V3Function("function", V3FunctionArgs.builder()
     *             .memorySize(512)
     *             .cpu(0.5)
     *             .handler("index.Handler")
     *             .code(V3FunctionCodeArgs.builder()
     *                 .zipFile("UEsDBBQACAAIAAAAAAAAAAAAAAAAAAAAAAAIAAAAaW5kZXgucHmEkEFKxEAQRfd9ig9ZTCJOooIwDMwNXLqXnnQlaalUhU5lRj2KZ/FOXkESGR114bJ/P/7jV4b1xRq1hijtFpM1682cuNgPmgysbRulPT0fRxXnMtwrSPyeCdYRokSLnuMLJTTkbUqEvDMbxm1VdcRD6Tk+T1LW2ldB66knsYdA5iNX17ebm6tN2VnPhcswMPmREPuBacb+CiapLarAj9gT6/H97dVlCNScY3mtYvRkxdZlwDKDEnanPWVLdrdkeXEGlFEazVdfPVHaVeHc3N15CUwppwOJXeK7HshAB8NuOU7J6sP4SRXuH/EvbUfMiqMmDqv5M5FNSfAj/wgAAP//UEsHCPl//NYAAQAArwEAAFBLAQIUABQACAAIAAAAAAD5f/zWAAEAAK8BAAAIAAAAAAAAAAAAAAAAAAAAAABpbmRleC5weVBLBQYAAAAAAQABADYAAAA2AQAAAAA=")
     *                 .build())
     *             .functionName(name)
     *             .runtime("python3.9")
     *             .diskSize(512)
     *             .logConfig(V3FunctionLogConfigArgs.builder()
     *                 .logBeginRule("None")
     *                 .build())
     *             .build());
     * 
     *         var defaultV3Trigger = new V3Trigger("defaultV3Trigger", V3TriggerArgs.builder()
     *             .functionName(function.functionName())
     *             .triggerType("http")
     *             .triggerName("tf-exampleacceu-central-1fcv3trigger28547")
     *             .description("create")
     *             .qualifier("LATEST")
     *             .triggerConfig(serializeJson(
     *                 jsonObject(
     *                     jsonProperty("authType", "anonymous"),
     *                     jsonProperty("methods", jsonArray(
     *                         "GET", 
     *                         "POST"
     *                     ))
     *                 )))
     *             .build());
     * 
     *         final var default = FcFunctions.getV3Triggers(GetV3TriggersArgs.builder()
     *             .ids(defaultV3Trigger.id())
     *             .nameRegex(defaultV3Trigger.triggerName())
     *             .functionName(functionName)
     *             .build());
     * 
     *         ctx.export("alicloudFcv3TriggerExampleId", default_.applyValue(_default_ -> _default_.triggers()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetV3TriggersResult> getV3Triggers(GetV3TriggersArgs args) {
        return getV3Triggers(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides Fcv3 Trigger available to the user.[What is Trigger](https://next.api.alibabacloud.com/document/FC/2023-03-30/CreateTrigger)
     * 
     * &gt; **NOTE:** Available since v1.250.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.V3Function;
     * import com.pulumi.alicloud.fc.V3FunctionArgs;
     * import com.pulumi.alicloud.fc.inputs.V3FunctionCodeArgs;
     * import com.pulumi.alicloud.fc.inputs.V3FunctionLogConfigArgs;
     * import com.pulumi.alicloud.fc.V3Trigger;
     * import com.pulumi.alicloud.fc.V3TriggerArgs;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetV3TriggersArgs;
     * import static com.pulumi.codegen.internal.Serialization.*;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-exampleTriggerResourceAPI");
     *         final var functionName = config.get("functionName").orElse("terraform-exampleTriggerResourceAPI");
     *         final var triggerName = config.get("triggerName").orElse("exampleTrigger_HTTP");
     *         var function = new V3Function("function", V3FunctionArgs.builder()
     *             .memorySize(512)
     *             .cpu(0.5)
     *             .handler("index.Handler")
     *             .code(V3FunctionCodeArgs.builder()
     *                 .zipFile("UEsDBBQACAAIAAAAAAAAAAAAAAAAAAAAAAAIAAAAaW5kZXgucHmEkEFKxEAQRfd9ig9ZTCJOooIwDMwNXLqXnnQlaalUhU5lRj2KZ/FOXkESGR114bJ/P/7jV4b1xRq1hijtFpM1682cuNgPmgysbRulPT0fRxXnMtwrSPyeCdYRokSLnuMLJTTkbUqEvDMbxm1VdcRD6Tk+T1LW2ldB66knsYdA5iNX17ebm6tN2VnPhcswMPmREPuBacb+CiapLarAj9gT6/H97dVlCNScY3mtYvRkxdZlwDKDEnanPWVLdrdkeXEGlFEazVdfPVHaVeHc3N15CUwppwOJXeK7HshAB8NuOU7J6sP4SRXuH/EvbUfMiqMmDqv5M5FNSfAj/wgAAP//UEsHCPl//NYAAQAArwEAAFBLAQIUABQACAAIAAAAAAD5f/zWAAEAAK8BAAAIAAAAAAAAAAAAAAAAAAAAAABpbmRleC5weVBLBQYAAAAAAQABADYAAAA2AQAAAAA=")
     *                 .build())
     *             .functionName(name)
     *             .runtime("python3.9")
     *             .diskSize(512)
     *             .logConfig(V3FunctionLogConfigArgs.builder()
     *                 .logBeginRule("None")
     *                 .build())
     *             .build());
     * 
     *         var defaultV3Trigger = new V3Trigger("defaultV3Trigger", V3TriggerArgs.builder()
     *             .functionName(function.functionName())
     *             .triggerType("http")
     *             .triggerName("tf-exampleacceu-central-1fcv3trigger28547")
     *             .description("create")
     *             .qualifier("LATEST")
     *             .triggerConfig(serializeJson(
     *                 jsonObject(
     *                     jsonProperty("authType", "anonymous"),
     *                     jsonProperty("methods", jsonArray(
     *                         "GET", 
     *                         "POST"
     *                     ))
     *                 )))
     *             .build());
     * 
     *         final var default = FcFunctions.getV3Triggers(GetV3TriggersArgs.builder()
     *             .ids(defaultV3Trigger.id())
     *             .nameRegex(defaultV3Trigger.triggerName())
     *             .functionName(functionName)
     *             .build());
     * 
     *         ctx.export("alicloudFcv3TriggerExampleId", default_.applyValue(_default_ -> _default_.triggers()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetV3TriggersResult> getV3TriggersPlain(GetV3TriggersPlainArgs args) {
        return getV3TriggersPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides Fcv3 Trigger available to the user.[What is Trigger](https://next.api.alibabacloud.com/document/FC/2023-03-30/CreateTrigger)
     * 
     * &gt; **NOTE:** Available since v1.250.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.V3Function;
     * import com.pulumi.alicloud.fc.V3FunctionArgs;
     * import com.pulumi.alicloud.fc.inputs.V3FunctionCodeArgs;
     * import com.pulumi.alicloud.fc.inputs.V3FunctionLogConfigArgs;
     * import com.pulumi.alicloud.fc.V3Trigger;
     * import com.pulumi.alicloud.fc.V3TriggerArgs;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetV3TriggersArgs;
     * import static com.pulumi.codegen.internal.Serialization.*;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-exampleTriggerResourceAPI");
     *         final var functionName = config.get("functionName").orElse("terraform-exampleTriggerResourceAPI");
     *         final var triggerName = config.get("triggerName").orElse("exampleTrigger_HTTP");
     *         var function = new V3Function("function", V3FunctionArgs.builder()
     *             .memorySize(512)
     *             .cpu(0.5)
     *             .handler("index.Handler")
     *             .code(V3FunctionCodeArgs.builder()
     *                 .zipFile("UEsDBBQACAAIAAAAAAAAAAAAAAAAAAAAAAAIAAAAaW5kZXgucHmEkEFKxEAQRfd9ig9ZTCJOooIwDMwNXLqXnnQlaalUhU5lRj2KZ/FOXkESGR114bJ/P/7jV4b1xRq1hijtFpM1682cuNgPmgysbRulPT0fRxXnMtwrSPyeCdYRokSLnuMLJTTkbUqEvDMbxm1VdcRD6Tk+T1LW2ldB66knsYdA5iNX17ebm6tN2VnPhcswMPmREPuBacb+CiapLarAj9gT6/H97dVlCNScY3mtYvRkxdZlwDKDEnanPWVLdrdkeXEGlFEazVdfPVHaVeHc3N15CUwppwOJXeK7HshAB8NuOU7J6sP4SRXuH/EvbUfMiqMmDqv5M5FNSfAj/wgAAP//UEsHCPl//NYAAQAArwEAAFBLAQIUABQACAAIAAAAAAD5f/zWAAEAAK8BAAAIAAAAAAAAAAAAAAAAAAAAAABpbmRleC5weVBLBQYAAAAAAQABADYAAAA2AQAAAAA=")
     *                 .build())
     *             .functionName(name)
     *             .runtime("python3.9")
     *             .diskSize(512)
     *             .logConfig(V3FunctionLogConfigArgs.builder()
     *                 .logBeginRule("None")
     *                 .build())
     *             .build());
     * 
     *         var defaultV3Trigger = new V3Trigger("defaultV3Trigger", V3TriggerArgs.builder()
     *             .functionName(function.functionName())
     *             .triggerType("http")
     *             .triggerName("tf-exampleacceu-central-1fcv3trigger28547")
     *             .description("create")
     *             .qualifier("LATEST")
     *             .triggerConfig(serializeJson(
     *                 jsonObject(
     *                     jsonProperty("authType", "anonymous"),
     *                     jsonProperty("methods", jsonArray(
     *                         "GET", 
     *                         "POST"
     *                     ))
     *                 )))
     *             .build());
     * 
     *         final var default = FcFunctions.getV3Triggers(GetV3TriggersArgs.builder()
     *             .ids(defaultV3Trigger.id())
     *             .nameRegex(defaultV3Trigger.triggerName())
     *             .functionName(functionName)
     *             .build());
     * 
     *         ctx.export("alicloudFcv3TriggerExampleId", default_.applyValue(_default_ -> _default_.triggers()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetV3TriggersResult> getV3Triggers(GetV3TriggersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:fc/getV3Triggers:getV3Triggers", TypeShape.of(GetV3TriggersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides Fcv3 Trigger available to the user.[What is Trigger](https://next.api.alibabacloud.com/document/FC/2023-03-30/CreateTrigger)
     * 
     * &gt; **NOTE:** Available since v1.250.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.V3Function;
     * import com.pulumi.alicloud.fc.V3FunctionArgs;
     * import com.pulumi.alicloud.fc.inputs.V3FunctionCodeArgs;
     * import com.pulumi.alicloud.fc.inputs.V3FunctionLogConfigArgs;
     * import com.pulumi.alicloud.fc.V3Trigger;
     * import com.pulumi.alicloud.fc.V3TriggerArgs;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetV3TriggersArgs;
     * import static com.pulumi.codegen.internal.Serialization.*;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-exampleTriggerResourceAPI");
     *         final var functionName = config.get("functionName").orElse("terraform-exampleTriggerResourceAPI");
     *         final var triggerName = config.get("triggerName").orElse("exampleTrigger_HTTP");
     *         var function = new V3Function("function", V3FunctionArgs.builder()
     *             .memorySize(512)
     *             .cpu(0.5)
     *             .handler("index.Handler")
     *             .code(V3FunctionCodeArgs.builder()
     *                 .zipFile("UEsDBBQACAAIAAAAAAAAAAAAAAAAAAAAAAAIAAAAaW5kZXgucHmEkEFKxEAQRfd9ig9ZTCJOooIwDMwNXLqXnnQlaalUhU5lRj2KZ/FOXkESGR114bJ/P/7jV4b1xRq1hijtFpM1682cuNgPmgysbRulPT0fRxXnMtwrSPyeCdYRokSLnuMLJTTkbUqEvDMbxm1VdcRD6Tk+T1LW2ldB66knsYdA5iNX17ebm6tN2VnPhcswMPmREPuBacb+CiapLarAj9gT6/H97dVlCNScY3mtYvRkxdZlwDKDEnanPWVLdrdkeXEGlFEazVdfPVHaVeHc3N15CUwppwOJXeK7HshAB8NuOU7J6sP4SRXuH/EvbUfMiqMmDqv5M5FNSfAj/wgAAP//UEsHCPl//NYAAQAArwEAAFBLAQIUABQACAAIAAAAAAD5f/zWAAEAAK8BAAAIAAAAAAAAAAAAAAAAAAAAAABpbmRleC5weVBLBQYAAAAAAQABADYAAAA2AQAAAAA=")
     *                 .build())
     *             .functionName(name)
     *             .runtime("python3.9")
     *             .diskSize(512)
     *             .logConfig(V3FunctionLogConfigArgs.builder()
     *                 .logBeginRule("None")
     *                 .build())
     *             .build());
     * 
     *         var defaultV3Trigger = new V3Trigger("defaultV3Trigger", V3TriggerArgs.builder()
     *             .functionName(function.functionName())
     *             .triggerType("http")
     *             .triggerName("tf-exampleacceu-central-1fcv3trigger28547")
     *             .description("create")
     *             .qualifier("LATEST")
     *             .triggerConfig(serializeJson(
     *                 jsonObject(
     *                     jsonProperty("authType", "anonymous"),
     *                     jsonProperty("methods", jsonArray(
     *                         "GET", 
     *                         "POST"
     *                     ))
     *                 )))
     *             .build());
     * 
     *         final var default = FcFunctions.getV3Triggers(GetV3TriggersArgs.builder()
     *             .ids(defaultV3Trigger.id())
     *             .nameRegex(defaultV3Trigger.triggerName())
     *             .functionName(functionName)
     *             .build());
     * 
     *         ctx.export("alicloudFcv3TriggerExampleId", default_.applyValue(_default_ -> _default_.triggers()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetV3TriggersResult> getV3Triggers(GetV3TriggersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:fc/getV3Triggers:getV3Triggers", TypeShape.of(GetV3TriggersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides Fcv3 Trigger available to the user.[What is Trigger](https://next.api.alibabacloud.com/document/FC/2023-03-30/CreateTrigger)
     * 
     * &gt; **NOTE:** Available since v1.250.0.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.V3Function;
     * import com.pulumi.alicloud.fc.V3FunctionArgs;
     * import com.pulumi.alicloud.fc.inputs.V3FunctionCodeArgs;
     * import com.pulumi.alicloud.fc.inputs.V3FunctionLogConfigArgs;
     * import com.pulumi.alicloud.fc.V3Trigger;
     * import com.pulumi.alicloud.fc.V3TriggerArgs;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetV3TriggersArgs;
     * import static com.pulumi.codegen.internal.Serialization.*;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var config = ctx.config();
     *         final var name = config.get("name").orElse("terraform-exampleTriggerResourceAPI");
     *         final var functionName = config.get("functionName").orElse("terraform-exampleTriggerResourceAPI");
     *         final var triggerName = config.get("triggerName").orElse("exampleTrigger_HTTP");
     *         var function = new V3Function("function", V3FunctionArgs.builder()
     *             .memorySize(512)
     *             .cpu(0.5)
     *             .handler("index.Handler")
     *             .code(V3FunctionCodeArgs.builder()
     *                 .zipFile("UEsDBBQACAAIAAAAAAAAAAAAAAAAAAAAAAAIAAAAaW5kZXgucHmEkEFKxEAQRfd9ig9ZTCJOooIwDMwNXLqXnnQlaalUhU5lRj2KZ/FOXkESGR114bJ/P/7jV4b1xRq1hijtFpM1682cuNgPmgysbRulPT0fRxXnMtwrSPyeCdYRokSLnuMLJTTkbUqEvDMbxm1VdcRD6Tk+T1LW2ldB66knsYdA5iNX17ebm6tN2VnPhcswMPmREPuBacb+CiapLarAj9gT6/H97dVlCNScY3mtYvRkxdZlwDKDEnanPWVLdrdkeXEGlFEazVdfPVHaVeHc3N15CUwppwOJXeK7HshAB8NuOU7J6sP4SRXuH/EvbUfMiqMmDqv5M5FNSfAj/wgAAP//UEsHCPl//NYAAQAArwEAAFBLAQIUABQACAAIAAAAAAD5f/zWAAEAAK8BAAAIAAAAAAAAAAAAAAAAAAAAAABpbmRleC5weVBLBQYAAAAAAQABADYAAAA2AQAAAAA=")
     *                 .build())
     *             .functionName(name)
     *             .runtime("python3.9")
     *             .diskSize(512)
     *             .logConfig(V3FunctionLogConfigArgs.builder()
     *                 .logBeginRule("None")
     *                 .build())
     *             .build());
     * 
     *         var defaultV3Trigger = new V3Trigger("defaultV3Trigger", V3TriggerArgs.builder()
     *             .functionName(function.functionName())
     *             .triggerType("http")
     *             .triggerName("tf-exampleacceu-central-1fcv3trigger28547")
     *             .description("create")
     *             .qualifier("LATEST")
     *             .triggerConfig(serializeJson(
     *                 jsonObject(
     *                     jsonProperty("authType", "anonymous"),
     *                     jsonProperty("methods", jsonArray(
     *                         "GET", 
     *                         "POST"
     *                     ))
     *                 )))
     *             .build());
     * 
     *         final var default = FcFunctions.getV3Triggers(GetV3TriggersArgs.builder()
     *             .ids(defaultV3Trigger.id())
     *             .nameRegex(defaultV3Trigger.triggerName())
     *             .functionName(functionName)
     *             .build());
     * 
     *         ctx.export("alicloudFcv3TriggerExampleId", default_.applyValue(_default_ -> _default_.triggers()[0].id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetV3TriggersResult> getV3TriggersPlain(GetV3TriggersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:fc/getV3Triggers:getV3Triggers", TypeShape.of(GetV3TriggersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides availability zones for FunctionCompute that can be accessed by an Alibaba Cloud account within the region configured in the provider.
     * 
     * &gt; **NOTE:** Available in v1.74.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var zonesIds = FcFunctions.getZones(GetZonesArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZonesResult> getZones() {
        return getZones(GetZonesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides availability zones for FunctionCompute that can be accessed by an Alibaba Cloud account within the region configured in the provider.
     * 
     * &gt; **NOTE:** Available in v1.74.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var zonesIds = FcFunctions.getZones(GetZonesArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZonesResult> getZonesPlain() {
        return getZonesPlain(GetZonesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides availability zones for FunctionCompute that can be accessed by an Alibaba Cloud account within the region configured in the provider.
     * 
     * &gt; **NOTE:** Available in v1.74.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var zonesIds = FcFunctions.getZones(GetZonesArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZonesResult> getZones(GetZonesArgs args) {
        return getZones(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides availability zones for FunctionCompute that can be accessed by an Alibaba Cloud account within the region configured in the provider.
     * 
     * &gt; **NOTE:** Available in v1.74.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var zonesIds = FcFunctions.getZones(GetZonesArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZonesResult> getZonesPlain(GetZonesPlainArgs args) {
        return getZonesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides availability zones for FunctionCompute that can be accessed by an Alibaba Cloud account within the region configured in the provider.
     * 
     * &gt; **NOTE:** Available in v1.74.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var zonesIds = FcFunctions.getZones(GetZonesArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZonesResult> getZones(GetZonesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:fc/getZones:getZones", TypeShape.of(GetZonesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides availability zones for FunctionCompute that can be accessed by an Alibaba Cloud account within the region configured in the provider.
     * 
     * &gt; **NOTE:** Available in v1.74.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var zonesIds = FcFunctions.getZones(GetZonesArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZonesResult> getZones(GetZonesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:fc/getZones:getZones", TypeShape.of(GetZonesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides availability zones for FunctionCompute that can be accessed by an Alibaba Cloud account within the region configured in the provider.
     * 
     * &gt; **NOTE:** Available in v1.74.0+.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.fc.FcFunctions;
     * import com.pulumi.alicloud.fc.inputs.GetZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Declare the data source
     *         final var zonesIds = FcFunctions.getZones(GetZonesArgs.builder()
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZonesResult> getZonesPlain(GetZonesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:fc/getZones:getZones", TypeShape.of(GetZonesResult.class), args, Utilities.withVersion(options));
    }
}
