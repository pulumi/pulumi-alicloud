// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ens;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class KeyPairArgs extends com.pulumi.resources.ResourceArgs {

    public static final KeyPairArgs Empty = new KeyPairArgs();

    /**
     * The name of the key pair.
     * 
     */
    @Import(name="keyPairName", required=true)
    private Output<String> keyPairName;

    /**
     * @return The name of the key pair.
     * 
     */
    public Output<String> keyPairName() {
        return this.keyPairName;
    }

    /**
     * The version number.
     * 
     */
    @Import(name="version", required=true)
    private Output<String> version;

    /**
     * @return The version number.
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    private KeyPairArgs() {}

    private KeyPairArgs(KeyPairArgs $) {
        this.keyPairName = $.keyPairName;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyPairArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyPairArgs $;

        public Builder() {
            $ = new KeyPairArgs();
        }

        public Builder(KeyPairArgs defaults) {
            $ = new KeyPairArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyPairName The name of the key pair.
         * 
         * @return builder
         * 
         */
        public Builder keyPairName(Output<String> keyPairName) {
            $.keyPairName = keyPairName;
            return this;
        }

        /**
         * @param keyPairName The name of the key pair.
         * 
         * @return builder
         * 
         */
        public Builder keyPairName(String keyPairName) {
            return keyPairName(Output.of(keyPairName));
        }

        /**
         * @param version The version number.
         * 
         * @return builder
         * 
         */
        public Builder version(Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version number.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public KeyPairArgs build() {
            if ($.keyPairName == null) {
                throw new MissingRequiredPropertyException("KeyPairArgs", "keyPairName");
            }
            if ($.version == null) {
                throw new MissingRequiredPropertyException("KeyPairArgs", "version");
            }
            return $;
        }
    }

}
