// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dns.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class MonitorConfigIspCityNodeArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitorConfigIspCityNodeArgs Empty = new MonitorConfigIspCityNodeArgs();

    /**
     * The code of the city node to monitor.
     * 
     */
    @Import(name="cityCode", required=true)
    private Output<String> cityCode;

    /**
     * @return The code of the city node to monitor.
     * 
     */
    public Output<String> cityCode() {
        return this.cityCode;
    }

    /**
     * The code of the Internet provider service (ISP) node to monitor.
     * 
     */
    @Import(name="ispCode", required=true)
    private Output<String> ispCode;

    /**
     * @return The code of the Internet provider service (ISP) node to monitor.
     * 
     */
    public Output<String> ispCode() {
        return this.ispCode;
    }

    private MonitorConfigIspCityNodeArgs() {}

    private MonitorConfigIspCityNodeArgs(MonitorConfigIspCityNodeArgs $) {
        this.cityCode = $.cityCode;
        this.ispCode = $.ispCode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorConfigIspCityNodeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorConfigIspCityNodeArgs $;

        public Builder() {
            $ = new MonitorConfigIspCityNodeArgs();
        }

        public Builder(MonitorConfigIspCityNodeArgs defaults) {
            $ = new MonitorConfigIspCityNodeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cityCode The code of the city node to monitor.
         * 
         * @return builder
         * 
         */
        public Builder cityCode(Output<String> cityCode) {
            $.cityCode = cityCode;
            return this;
        }

        /**
         * @param cityCode The code of the city node to monitor.
         * 
         * @return builder
         * 
         */
        public Builder cityCode(String cityCode) {
            return cityCode(Output.of(cityCode));
        }

        /**
         * @param ispCode The code of the Internet provider service (ISP) node to monitor.
         * 
         * @return builder
         * 
         */
        public Builder ispCode(Output<String> ispCode) {
            $.ispCode = ispCode;
            return this;
        }

        /**
         * @param ispCode The code of the Internet provider service (ISP) node to monitor.
         * 
         * @return builder
         * 
         */
        public Builder ispCode(String ispCode) {
            return ispCode(Output.of(ispCode));
        }

        public MonitorConfigIspCityNodeArgs build() {
            if ($.cityCode == null) {
                throw new MissingRequiredPropertyException("MonitorConfigIspCityNodeArgs", "cityCode");
            }
            if ($.ispCode == null) {
                throw new MissingRequiredPropertyException("MonitorConfigIspCityNodeArgs", "ispCode");
            }
            return $;
        }
    }

}
