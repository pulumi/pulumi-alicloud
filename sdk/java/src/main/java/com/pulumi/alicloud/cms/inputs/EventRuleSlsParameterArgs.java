// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventRuleSlsParameterArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventRuleSlsParameterArgs Empty = new EventRuleSlsParameterArgs();

    /**
     * (Available since v1.211.1) The ARN of the API operation.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return (Available since v1.211.1) The ARN of the API operation.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The name of the Simple Log Service Logstore.
     * 
     */
    @Import(name="logStore")
    private @Nullable Output<String> logStore;

    /**
     * @return The name of the Simple Log Service Logstore.
     * 
     */
    public Optional<Output<String>> logStore() {
        return Optional.ofNullable(this.logStore);
    }

    /**
     * The name of the Simple Log Service project.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The name of the Simple Log Service project.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The region where Simple Log Service is deployed.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region where Simple Log Service is deployed.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The ID of the recipient that receives alert notifications.
     * 
     */
    @Import(name="slsParametersId")
    private @Nullable Output<String> slsParametersId;

    /**
     * @return The ID of the recipient that receives alert notifications.
     * 
     */
    public Optional<Output<String>> slsParametersId() {
        return Optional.ofNullable(this.slsParametersId);
    }

    private EventRuleSlsParameterArgs() {}

    private EventRuleSlsParameterArgs(EventRuleSlsParameterArgs $) {
        this.arn = $.arn;
        this.logStore = $.logStore;
        this.project = $.project;
        this.region = $.region;
        this.slsParametersId = $.slsParametersId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventRuleSlsParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventRuleSlsParameterArgs $;

        public Builder() {
            $ = new EventRuleSlsParameterArgs();
        }

        public Builder(EventRuleSlsParameterArgs defaults) {
            $ = new EventRuleSlsParameterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn (Available since v1.211.1) The ARN of the API operation.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn (Available since v1.211.1) The ARN of the API operation.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param logStore The name of the Simple Log Service Logstore.
         * 
         * @return builder
         * 
         */
        public Builder logStore(@Nullable Output<String> logStore) {
            $.logStore = logStore;
            return this;
        }

        /**
         * @param logStore The name of the Simple Log Service Logstore.
         * 
         * @return builder
         * 
         */
        public Builder logStore(String logStore) {
            return logStore(Output.of(logStore));
        }

        /**
         * @param project The name of the Simple Log Service project.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The name of the Simple Log Service project.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param region The region where Simple Log Service is deployed.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region where Simple Log Service is deployed.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param slsParametersId The ID of the recipient that receives alert notifications.
         * 
         * @return builder
         * 
         */
        public Builder slsParametersId(@Nullable Output<String> slsParametersId) {
            $.slsParametersId = slsParametersId;
            return this;
        }

        /**
         * @param slsParametersId The ID of the recipient that receives alert notifications.
         * 
         * @return builder
         * 
         */
        public Builder slsParametersId(String slsParametersId) {
            return slsParametersId(Output.of(slsParametersId));
        }

        public EventRuleSlsParameterArgs build() {
            return $;
        }
    }

}
