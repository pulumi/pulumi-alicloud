// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTransitRouterPrefixListAssociationsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTransitRouterPrefixListAssociationsPlainArgs Empty = new GetTransitRouterPrefixListAssociationsPlainArgs();

    /**
     * A list of Cen Transit Router Prefix List Association IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable List<String> ids;

    /**
     * @return A list of Cen Transit Router Prefix List Association IDs.
     * 
     */
    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The ID of the Alibaba Cloud account to which the prefix list belongs.
     * 
     */
    @Import(name="ownerUid")
    private @Nullable Integer ownerUid;

    /**
     * @return The ID of the Alibaba Cloud account to which the prefix list belongs.
     * 
     */
    public Optional<Integer> ownerUid() {
        return Optional.ofNullable(this.ownerUid);
    }

    @Import(name="pageNumber")
    private @Nullable Integer pageNumber;

    public Optional<Integer> pageNumber() {
        return Optional.ofNullable(this.pageNumber);
    }

    @Import(name="pageSize")
    private @Nullable Integer pageSize;

    public Optional<Integer> pageSize() {
        return Optional.ofNullable(this.pageSize);
    }

    /**
     * The ID of the prefix list.
     * 
     */
    @Import(name="prefixListId")
    private @Nullable String prefixListId;

    /**
     * @return The ID of the prefix list.
     * 
     */
    public Optional<String> prefixListId() {
        return Optional.ofNullable(this.prefixListId);
    }

    /**
     * The status of the prefix list.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return The status of the prefix list.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The ID of the transit router.
     * 
     */
    @Import(name="transitRouterId", required=true)
    private String transitRouterId;

    /**
     * @return The ID of the transit router.
     * 
     */
    public String transitRouterId() {
        return this.transitRouterId;
    }

    /**
     * The ID of the route table of the transit router.
     * 
     */
    @Import(name="transitRouterTableId", required=true)
    private String transitRouterTableId;

    /**
     * @return The ID of the route table of the transit router.
     * 
     */
    public String transitRouterTableId() {
        return this.transitRouterTableId;
    }

    private GetTransitRouterPrefixListAssociationsPlainArgs() {}

    private GetTransitRouterPrefixListAssociationsPlainArgs(GetTransitRouterPrefixListAssociationsPlainArgs $) {
        this.ids = $.ids;
        this.outputFile = $.outputFile;
        this.ownerUid = $.ownerUid;
        this.pageNumber = $.pageNumber;
        this.pageSize = $.pageSize;
        this.prefixListId = $.prefixListId;
        this.status = $.status;
        this.transitRouterId = $.transitRouterId;
        this.transitRouterTableId = $.transitRouterTableId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTransitRouterPrefixListAssociationsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTransitRouterPrefixListAssociationsPlainArgs $;

        public Builder() {
            $ = new GetTransitRouterPrefixListAssociationsPlainArgs();
        }

        public Builder(GetTransitRouterPrefixListAssociationsPlainArgs defaults) {
            $ = new GetTransitRouterPrefixListAssociationsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ids A list of Cen Transit Router Prefix List Association IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Cen Transit Router Prefix List Association IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param ownerUid The ID of the Alibaba Cloud account to which the prefix list belongs.
         * 
         * @return builder
         * 
         */
        public Builder ownerUid(@Nullable Integer ownerUid) {
            $.ownerUid = ownerUid;
            return this;
        }

        public Builder pageNumber(@Nullable Integer pageNumber) {
            $.pageNumber = pageNumber;
            return this;
        }

        public Builder pageSize(@Nullable Integer pageSize) {
            $.pageSize = pageSize;
            return this;
        }

        /**
         * @param prefixListId The ID of the prefix list.
         * 
         * @return builder
         * 
         */
        public Builder prefixListId(@Nullable String prefixListId) {
            $.prefixListId = prefixListId;
            return this;
        }

        /**
         * @param status The status of the prefix list.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        /**
         * @param transitRouterId The ID of the transit router.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterId(String transitRouterId) {
            $.transitRouterId = transitRouterId;
            return this;
        }

        /**
         * @param transitRouterTableId The ID of the route table of the transit router.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterTableId(String transitRouterTableId) {
            $.transitRouterTableId = transitRouterTableId;
            return this;
        }

        public GetTransitRouterPrefixListAssociationsPlainArgs build() {
            if ($.transitRouterId == null) {
                throw new MissingRequiredPropertyException("GetTransitRouterPrefixListAssociationsPlainArgs", "transitRouterId");
            }
            if ($.transitRouterTableId == null) {
                throw new MissingRequiredPropertyException("GetTransitRouterPrefixListAssociationsPlainArgs", "transitRouterTableId");
            }
            return $;
        }
    }

}
