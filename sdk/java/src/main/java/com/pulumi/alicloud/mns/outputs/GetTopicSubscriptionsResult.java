// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.mns.outputs;

import com.pulumi.alicloud.mns.outputs.GetTopicSubscriptionsSubscription;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTopicSubscriptionsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String namePrefix;
    /**
     * @return A list of subscription names.
     * 
     */
    private List<String> names;
    private @Nullable String outputFile;
    /**
     * @return A list of subscriptions. Each element contains the following attributes:
     * 
     */
    private List<GetTopicSubscriptionsSubscription> subscriptions;
    /**
     * @return The topic which The subscription belongs to was named with the name.
     * 
     */
    private String topicName;

    private GetTopicSubscriptionsResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }
    /**
     * @return A list of subscription names.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return A list of subscriptions. Each element contains the following attributes:
     * 
     */
    public List<GetTopicSubscriptionsSubscription> subscriptions() {
        return this.subscriptions;
    }
    /**
     * @return The topic which The subscription belongs to was named with the name.
     * 
     */
    public String topicName() {
        return this.topicName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTopicSubscriptionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable String namePrefix;
        private List<String> names;
        private @Nullable String outputFile;
        private List<GetTopicSubscriptionsSubscription> subscriptions;
        private String topicName;
        public Builder() {}
        public Builder(GetTopicSubscriptionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.namePrefix = defaults.namePrefix;
    	      this.names = defaults.names;
    	      this.outputFile = defaults.outputFile;
    	      this.subscriptions = defaults.subscriptions;
    	      this.topicName = defaults.topicName;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTopicSubscriptionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder namePrefix(@Nullable String namePrefix) {

            this.namePrefix = namePrefix;
            return this;
        }
        @CustomType.Setter
        public Builder names(List<String> names) {
            if (names == null) {
              throw new MissingRequiredPropertyException("GetTopicSubscriptionsResult", "names");
            }
            this.names = names;
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder subscriptions(List<GetTopicSubscriptionsSubscription> subscriptions) {
            if (subscriptions == null) {
              throw new MissingRequiredPropertyException("GetTopicSubscriptionsResult", "subscriptions");
            }
            this.subscriptions = subscriptions;
            return this;
        }
        public Builder subscriptions(GetTopicSubscriptionsSubscription... subscriptions) {
            return subscriptions(List.of(subscriptions));
        }
        @CustomType.Setter
        public Builder topicName(String topicName) {
            if (topicName == null) {
              throw new MissingRequiredPropertyException("GetTopicSubscriptionsResult", "topicName");
            }
            this.topicName = topicName;
            return this;
        }
        public GetTopicSubscriptionsResult build() {
            final var _resultValue = new GetTopicSubscriptionsResult();
            _resultValue.id = id;
            _resultValue.namePrefix = namePrefix;
            _resultValue.names = names;
            _resultValue.outputFile = outputFile;
            _resultValue.subscriptions = subscriptions;
            _resultValue.topicName = topicName;
            return _resultValue;
        }
    }
}
