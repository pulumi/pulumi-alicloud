// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ackone;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class MembershipAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final MembershipAttachmentArgs Empty = new MembershipAttachmentArgs();

    /**
     * The ID of the cluster to which the membership is being attached.
     * 
     */
    @Import(name="clusterId", required=true)
    private Output<String> clusterId;

    /**
     * @return The ID of the cluster to which the membership is being attached.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }

    /**
     * The ID of the member being attached to the cluster.
     * 
     */
    @Import(name="subClusterId", required=true)
    private Output<String> subClusterId;

    /**
     * @return The ID of the member being attached to the cluster.
     * 
     */
    public Output<String> subClusterId() {
        return this.subClusterId;
    }

    private MembershipAttachmentArgs() {}

    private MembershipAttachmentArgs(MembershipAttachmentArgs $) {
        this.clusterId = $.clusterId;
        this.subClusterId = $.subClusterId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MembershipAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MembershipAttachmentArgs $;

        public Builder() {
            $ = new MembershipAttachmentArgs();
        }

        public Builder(MembershipAttachmentArgs defaults) {
            $ = new MembershipAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId The ID of the cluster to which the membership is being attached.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The ID of the cluster to which the membership is being attached.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param subClusterId The ID of the member being attached to the cluster.
         * 
         * @return builder
         * 
         */
        public Builder subClusterId(Output<String> subClusterId) {
            $.subClusterId = subClusterId;
            return this;
        }

        /**
         * @param subClusterId The ID of the member being attached to the cluster.
         * 
         * @return builder
         * 
         */
        public Builder subClusterId(String subClusterId) {
            return subClusterId(Output.of(subClusterId));
        }

        public MembershipAttachmentArgs build() {
            if ($.clusterId == null) {
                throw new MissingRequiredPropertyException("MembershipAttachmentArgs", "clusterId");
            }
            if ($.subClusterId == null) {
                throw new MissingRequiredPropertyException("MembershipAttachmentArgs", "subClusterId");
            }
            return $;
        }
    }

}
