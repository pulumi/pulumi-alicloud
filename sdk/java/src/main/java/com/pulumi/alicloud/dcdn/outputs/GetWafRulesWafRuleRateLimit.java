// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dcdn.outputs;

import com.pulumi.alicloud.dcdn.outputs.GetWafRulesWafRuleRateLimitStatus;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWafRulesWafRuleRateLimit {
    /**
     * @return The statistical interval. Valid values: 5 to 1800. Unit: seconds.
     * 
     */
    private Integer interval;
    /**
     * @return The information about the HTTP status code.
     * 
     */
    private List<GetWafRulesWafRuleRateLimitStatus> statuses;
    /**
     * @return The subfield of the target field.
     * 
     */
    private String subKey;
    /**
     * @return The statistical field for frequency control.
     * 
     */
    private String target;
    /**
     * @return The trigger threshold of rate limiting. Valid values: 2 to 500000. Unit: requests.
     * 
     */
    private Integer threshold;
    /**
     * @return The validity period of the blacklist. Valid values: 60 to 86400. Unit: seconds.
     * 
     */
    private Integer ttl;

    private GetWafRulesWafRuleRateLimit() {}
    /**
     * @return The statistical interval. Valid values: 5 to 1800. Unit: seconds.
     * 
     */
    public Integer interval() {
        return this.interval;
    }
    /**
     * @return The information about the HTTP status code.
     * 
     */
    public List<GetWafRulesWafRuleRateLimitStatus> statuses() {
        return this.statuses;
    }
    /**
     * @return The subfield of the target field.
     * 
     */
    public String subKey() {
        return this.subKey;
    }
    /**
     * @return The statistical field for frequency control.
     * 
     */
    public String target() {
        return this.target;
    }
    /**
     * @return The trigger threshold of rate limiting. Valid values: 2 to 500000. Unit: requests.
     * 
     */
    public Integer threshold() {
        return this.threshold;
    }
    /**
     * @return The validity period of the blacklist. Valid values: 60 to 86400. Unit: seconds.
     * 
     */
    public Integer ttl() {
        return this.ttl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWafRulesWafRuleRateLimit defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer interval;
        private List<GetWafRulesWafRuleRateLimitStatus> statuses;
        private String subKey;
        private String target;
        private Integer threshold;
        private Integer ttl;
        public Builder() {}
        public Builder(GetWafRulesWafRuleRateLimit defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.interval = defaults.interval;
    	      this.statuses = defaults.statuses;
    	      this.subKey = defaults.subKey;
    	      this.target = defaults.target;
    	      this.threshold = defaults.threshold;
    	      this.ttl = defaults.ttl;
        }

        @CustomType.Setter
        public Builder interval(Integer interval) {
            this.interval = Objects.requireNonNull(interval);
            return this;
        }
        @CustomType.Setter
        public Builder statuses(List<GetWafRulesWafRuleRateLimitStatus> statuses) {
            this.statuses = Objects.requireNonNull(statuses);
            return this;
        }
        public Builder statuses(GetWafRulesWafRuleRateLimitStatus... statuses) {
            return statuses(List.of(statuses));
        }
        @CustomType.Setter
        public Builder subKey(String subKey) {
            this.subKey = Objects.requireNonNull(subKey);
            return this;
        }
        @CustomType.Setter
        public Builder target(String target) {
            this.target = Objects.requireNonNull(target);
            return this;
        }
        @CustomType.Setter
        public Builder threshold(Integer threshold) {
            this.threshold = Objects.requireNonNull(threshold);
            return this;
        }
        @CustomType.Setter
        public Builder ttl(Integer ttl) {
            this.ttl = Objects.requireNonNull(ttl);
            return this;
        }
        public GetWafRulesWafRuleRateLimit build() {
            final var o = new GetWafRulesWafRuleRateLimit();
            o.interval = interval;
            o.statuses = statuses;
            o.subKey = subKey;
            o.target = target;
            o.threshold = threshold;
            o.ttl = ttl;
            return o;
        }
    }
}
