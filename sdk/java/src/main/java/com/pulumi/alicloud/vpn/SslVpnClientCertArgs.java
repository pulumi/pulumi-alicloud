// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpn;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SslVpnClientCertArgs extends com.pulumi.resources.ResourceArgs {

    public static final SslVpnClientCertArgs Empty = new SslVpnClientCertArgs();

    /**
     * The name of the client certificate.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the client certificate.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the SSL-VPN server.
     * 
     */
    @Import(name="sslVpnServerId", required=true)
    private Output<String> sslVpnServerId;

    /**
     * @return The ID of the SSL-VPN server.
     * 
     */
    public Output<String> sslVpnServerId() {
        return this.sslVpnServerId;
    }

    private SslVpnClientCertArgs() {}

    private SslVpnClientCertArgs(SslVpnClientCertArgs $) {
        this.name = $.name;
        this.sslVpnServerId = $.sslVpnServerId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SslVpnClientCertArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SslVpnClientCertArgs $;

        public Builder() {
            $ = new SslVpnClientCertArgs();
        }

        public Builder(SslVpnClientCertArgs defaults) {
            $ = new SslVpnClientCertArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the client certificate.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the client certificate.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param sslVpnServerId The ID of the SSL-VPN server.
         * 
         * @return builder
         * 
         */
        public Builder sslVpnServerId(Output<String> sslVpnServerId) {
            $.sslVpnServerId = sslVpnServerId;
            return this;
        }

        /**
         * @param sslVpnServerId The ID of the SSL-VPN server.
         * 
         * @return builder
         * 
         */
        public Builder sslVpnServerId(String sslVpnServerId) {
            return sslVpnServerId(Output.of(sslVpnServerId));
        }

        public SslVpnClientCertArgs build() {
            if ($.sslVpnServerId == null) {
                throw new MissingRequiredPropertyException("SslVpnClientCertArgs", "sslVpnServerId");
            }
            return $;
        }
    }

}
