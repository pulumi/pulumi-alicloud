// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.databasegateway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewayArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayArgs Empty = new GatewayArgs();

    /**
     * The description of Gateway.
     * 
     */
    @Import(name="gatewayDesc")
    private @Nullable Output<String> gatewayDesc;

    /**
     * @return The description of Gateway.
     * 
     */
    public Optional<Output<String>> gatewayDesc() {
        return Optional.ofNullable(this.gatewayDesc);
    }

    /**
     * The name of the Gateway.
     * 
     */
    @Import(name="gatewayName", required=true)
    private Output<String> gatewayName;

    /**
     * @return The name of the Gateway.
     * 
     */
    public Output<String> gatewayName() {
        return this.gatewayName;
    }

    private GatewayArgs() {}

    private GatewayArgs(GatewayArgs $) {
        this.gatewayDesc = $.gatewayDesc;
        this.gatewayName = $.gatewayName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayArgs $;

        public Builder() {
            $ = new GatewayArgs();
        }

        public Builder(GatewayArgs defaults) {
            $ = new GatewayArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param gatewayDesc The description of Gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayDesc(@Nullable Output<String> gatewayDesc) {
            $.gatewayDesc = gatewayDesc;
            return this;
        }

        /**
         * @param gatewayDesc The description of Gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayDesc(String gatewayDesc) {
            return gatewayDesc(Output.of(gatewayDesc));
        }

        /**
         * @param gatewayName The name of the Gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayName(Output<String> gatewayName) {
            $.gatewayName = gatewayName;
            return this;
        }

        /**
         * @param gatewayName The name of the Gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayName(String gatewayName) {
            return gatewayName(Output.of(gatewayName));
        }

        public GatewayArgs build() {
            if ($.gatewayName == null) {
                throw new MissingRequiredPropertyException("GatewayArgs", "gatewayName");
            }
            return $;
        }
    }

}
