// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.arms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RemoteWriteState extends com.pulumi.resources.ResourceArgs {

    public static final RemoteWriteState Empty = new RemoteWriteState();

    /**
     * The ID of the Prometheus instance.
     * 
     */
    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    /**
     * @return The ID of the Prometheus instance.
     * 
     */
    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * The name of the Remote Write configuration item.
     * 
     */
    @Import(name="remoteWriteName")
    private @Nullable Output<String> remoteWriteName;

    /**
     * @return The name of the Remote Write configuration item.
     * 
     */
    public Optional<Output<String>> remoteWriteName() {
        return Optional.ofNullable(this.remoteWriteName);
    }

    /**
     * The details of the Remote Write configuration item. Specify the value in the YAML format.
     * 
     */
    @Import(name="remoteWriteYaml")
    private @Nullable Output<String> remoteWriteYaml;

    /**
     * @return The details of the Remote Write configuration item. Specify the value in the YAML format.
     * 
     */
    public Optional<Output<String>> remoteWriteYaml() {
        return Optional.ofNullable(this.remoteWriteYaml);
    }

    private RemoteWriteState() {}

    private RemoteWriteState(RemoteWriteState $) {
        this.clusterId = $.clusterId;
        this.remoteWriteName = $.remoteWriteName;
        this.remoteWriteYaml = $.remoteWriteYaml;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RemoteWriteState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RemoteWriteState $;

        public Builder() {
            $ = new RemoteWriteState();
        }

        public Builder(RemoteWriteState defaults) {
            $ = new RemoteWriteState(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId The ID of the Prometheus instance.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The ID of the Prometheus instance.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param remoteWriteName The name of the Remote Write configuration item.
         * 
         * @return builder
         * 
         */
        public Builder remoteWriteName(@Nullable Output<String> remoteWriteName) {
            $.remoteWriteName = remoteWriteName;
            return this;
        }

        /**
         * @param remoteWriteName The name of the Remote Write configuration item.
         * 
         * @return builder
         * 
         */
        public Builder remoteWriteName(String remoteWriteName) {
            return remoteWriteName(Output.of(remoteWriteName));
        }

        /**
         * @param remoteWriteYaml The details of the Remote Write configuration item. Specify the value in the YAML format.
         * 
         * @return builder
         * 
         */
        public Builder remoteWriteYaml(@Nullable Output<String> remoteWriteYaml) {
            $.remoteWriteYaml = remoteWriteYaml;
            return this;
        }

        /**
         * @param remoteWriteYaml The details of the Remote Write configuration item. Specify the value in the YAML format.
         * 
         * @return builder
         * 
         */
        public Builder remoteWriteYaml(String remoteWriteYaml) {
            return remoteWriteYaml(Output.of(remoteWriteYaml));
        }

        public RemoteWriteState build() {
            return $;
        }
    }

}
