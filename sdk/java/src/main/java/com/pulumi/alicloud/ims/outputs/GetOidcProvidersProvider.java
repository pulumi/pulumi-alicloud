// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ims.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetOidcProvidersProvider {
    /**
     * @return ARN of OIDC identity provider.
     * 
     */
    private String arn;
    /**
     * @return Client ID.
     * 
     */
    private List<String> clientIds;
    /**
     * @return Creation Time (UTC time).
     * 
     */
    private String createTime;
    /**
     * @return Description of OIDC identity provider.
     * 
     */
    private String description;
    /**
     * @return The authentication fingerprint of the HTTPS CA certificate.
     * 
     */
    private List<String> fingerprints;
    /**
     * @return The ID of the resource supplied above.
     * 
     */
    private String id;
    /**
     * @return The earliest time when an external IdP is allowed to issue an ID Token. If the iat field in the ID Token is greater than the current time, the request is rejected.Unit: hours. Value range: 1~168.
     * 
     */
    private Integer issuanceLimitTime;
    /**
     * @return The issuer URL of the OIDC identity provider.
     * 
     */
    private String issuerUrl;
    /**
     * @return The name of the OIDC identity provider.
     * 
     */
    private String oidcProviderName;
    /**
     * @return Modification Time (UTC time).
     * 
     */
    private String updateTime;

    private GetOidcProvidersProvider() {}
    /**
     * @return ARN of OIDC identity provider.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Client ID.
     * 
     */
    public List<String> clientIds() {
        return this.clientIds;
    }
    /**
     * @return Creation Time (UTC time).
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Description of OIDC identity provider.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The authentication fingerprint of the HTTPS CA certificate.
     * 
     */
    public List<String> fingerprints() {
        return this.fingerprints;
    }
    /**
     * @return The ID of the resource supplied above.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The earliest time when an external IdP is allowed to issue an ID Token. If the iat field in the ID Token is greater than the current time, the request is rejected.Unit: hours. Value range: 1~168.
     * 
     */
    public Integer issuanceLimitTime() {
        return this.issuanceLimitTime;
    }
    /**
     * @return The issuer URL of the OIDC identity provider.
     * 
     */
    public String issuerUrl() {
        return this.issuerUrl;
    }
    /**
     * @return The name of the OIDC identity provider.
     * 
     */
    public String oidcProviderName() {
        return this.oidcProviderName;
    }
    /**
     * @return Modification Time (UTC time).
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOidcProvidersProvider defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String arn;
        private List<String> clientIds;
        private String createTime;
        private String description;
        private List<String> fingerprints;
        private String id;
        private Integer issuanceLimitTime;
        private String issuerUrl;
        private String oidcProviderName;
        private String updateTime;
        public Builder() {}
        public Builder(GetOidcProvidersProvider defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.clientIds = defaults.clientIds;
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.fingerprints = defaults.fingerprints;
    	      this.id = defaults.id;
    	      this.issuanceLimitTime = defaults.issuanceLimitTime;
    	      this.issuerUrl = defaults.issuerUrl;
    	      this.oidcProviderName = defaults.oidcProviderName;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder arn(String arn) {
            if (arn == null) {
              throw new MissingRequiredPropertyException("GetOidcProvidersProvider", "arn");
            }
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder clientIds(List<String> clientIds) {
            if (clientIds == null) {
              throw new MissingRequiredPropertyException("GetOidcProvidersProvider", "clientIds");
            }
            this.clientIds = clientIds;
            return this;
        }
        public Builder clientIds(String... clientIds) {
            return clientIds(List.of(clientIds));
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetOidcProvidersProvider", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetOidcProvidersProvider", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder fingerprints(List<String> fingerprints) {
            if (fingerprints == null) {
              throw new MissingRequiredPropertyException("GetOidcProvidersProvider", "fingerprints");
            }
            this.fingerprints = fingerprints;
            return this;
        }
        public Builder fingerprints(String... fingerprints) {
            return fingerprints(List.of(fingerprints));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetOidcProvidersProvider", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder issuanceLimitTime(Integer issuanceLimitTime) {
            if (issuanceLimitTime == null) {
              throw new MissingRequiredPropertyException("GetOidcProvidersProvider", "issuanceLimitTime");
            }
            this.issuanceLimitTime = issuanceLimitTime;
            return this;
        }
        @CustomType.Setter
        public Builder issuerUrl(String issuerUrl) {
            if (issuerUrl == null) {
              throw new MissingRequiredPropertyException("GetOidcProvidersProvider", "issuerUrl");
            }
            this.issuerUrl = issuerUrl;
            return this;
        }
        @CustomType.Setter
        public Builder oidcProviderName(String oidcProviderName) {
            if (oidcProviderName == null) {
              throw new MissingRequiredPropertyException("GetOidcProvidersProvider", "oidcProviderName");
            }
            this.oidcProviderName = oidcProviderName;
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            if (updateTime == null) {
              throw new MissingRequiredPropertyException("GetOidcProvidersProvider", "updateTime");
            }
            this.updateTime = updateTime;
            return this;
        }
        public GetOidcProvidersProvider build() {
            final var _resultValue = new GetOidcProvidersProvider();
            _resultValue.arn = arn;
            _resultValue.clientIds = clientIds;
            _resultValue.createTime = createTime;
            _resultValue.description = description;
            _resultValue.fingerprints = fingerprints;
            _resultValue.id = id;
            _resultValue.issuanceLimitTime = issuanceLimitTime;
            _resultValue.issuerUrl = issuerUrl;
            _resultValue.oidcProviderName = oidcProviderName;
            _resultValue.updateTime = updateTime;
            return _resultValue;
        }
    }
}
