// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderEndpointArgs Empty = new ProviderEndpointArgs();

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom acr endpoints.
     * 
     */
    @Import(name="acr")
    private @Nullable Output<String> acr;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom acr endpoints.
     * 
     */
    public Optional<Output<String>> acr() {
        return Optional.ofNullable(this.acr);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Actiontrail endpoints.
     * 
     */
    @Import(name="actiontrail")
    private @Nullable Output<String> actiontrail;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Actiontrail endpoints.
     * 
     */
    public Optional<Output<String>> actiontrail() {
        return Optional.ofNullable(this.actiontrail);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom AnalyticDB endpoints.
     * 
     */
    @Import(name="adb")
    private @Nullable Output<String> adb;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom AnalyticDB endpoints.
     * 
     */
    public Optional<Output<String>> adb() {
        return Optional.ofNullable(this.adb);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom alb endpoints.
     * 
     */
    @Import(name="alb")
    private @Nullable Output<String> alb;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom alb endpoints.
     * 
     */
    public Optional<Output<String>> alb() {
        return Optional.ofNullable(this.alb);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom alidfs endpoints.
     * 
     */
    @Import(name="alidfs")
    private @Nullable Output<String> alidfs;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom alidfs endpoints.
     * 
     */
    public Optional<Output<String>> alidfs() {
        return Optional.ofNullable(this.alidfs);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom alidns endpoints.
     * 
     */
    @Import(name="alidns")
    private @Nullable Output<String> alidns;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom alidns endpoints.
     * 
     */
    public Optional<Output<String>> alidns() {
        return Optional.ofNullable(this.alidns);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ALIKAFKA endpoints.
     * 
     */
    @Import(name="alikafka")
    private @Nullable Output<String> alikafka;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ALIKAFKA endpoints.
     * 
     */
    public Optional<Output<String>> alikafka() {
        return Optional.ofNullable(this.alikafka);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Api Gateway endpoints.
     * 
     */
    @Import(name="apigateway")
    private @Nullable Output<String> apigateway;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Api Gateway endpoints.
     * 
     */
    public Optional<Output<String>> apigateway() {
        return Optional.ofNullable(this.apigateway);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom arms endpoints.
     * 
     */
    @Import(name="arms")
    private @Nullable Output<String> arms;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom arms endpoints.
     * 
     */
    public Optional<Output<String>> arms() {
        return Optional.ofNullable(this.arms);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom bastionhost endpoints.
     * 
     */
    @Import(name="bastionhost")
    private @Nullable Output<String> bastionhost;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom bastionhost endpoints.
     * 
     */
    public Optional<Output<String>> bastionhost() {
        return Optional.ofNullable(this.bastionhost);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom beebot endpoints.
     * 
     */
    @Import(name="beebot")
    private @Nullable Output<String> beebot;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom beebot endpoints.
     * 
     */
    public Optional<Output<String>> beebot() {
        return Optional.ofNullable(this.beebot);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom bpstudio endpoints.
     * 
     */
    @Import(name="bpstudio")
    private @Nullable Output<String> bpstudio;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom bpstudio endpoints.
     * 
     */
    public Optional<Output<String>> bpstudio() {
        return Optional.ofNullable(this.bpstudio);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom brain_industrial endpoints.
     * 
     */
    @Import(name="brainIndustrial")
    private @Nullable Output<String> brainIndustrial;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom brain_industrial endpoints.
     * 
     */
    public Optional<Output<String>> brainIndustrial() {
        return Optional.ofNullable(this.brainIndustrial);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom BSSOPENAPI endpoints.
     * 
     */
    @Import(name="bssopenapi")
    private @Nullable Output<String> bssopenapi;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom BSSOPENAPI endpoints.
     * 
     */
    public Optional<Output<String>> bssopenapi() {
        return Optional.ofNullable(this.bssopenapi);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom CAS endpoints.
     * 
     */
    @Import(name="cas")
    private @Nullable Output<String> cas;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom CAS endpoints.
     * 
     */
    public Optional<Output<String>> cas() {
        return Optional.ofNullable(this.cas);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cassandra endpoints.
     * 
     */
    @Import(name="cassandra")
    private @Nullable Output<String> cassandra;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cassandra endpoints.
     * 
     */
    public Optional<Output<String>> cassandra() {
        return Optional.ofNullable(this.cassandra);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cbn endpoints.
     * 
     */
    @Import(name="cbn")
    private @Nullable Output<String> cbn;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cbn endpoints.
     * 
     */
    public Optional<Output<String>> cbn() {
        return Optional.ofNullable(this.cbn);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cbs endpoints.
     * 
     */
    @Import(name="cbs")
    private @Nullable Output<String> cbs;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cbs endpoints.
     * 
     */
    public Optional<Output<String>> cbs() {
        return Optional.ofNullable(this.cbs);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cddc endpoints.
     * 
     */
    @Import(name="cddc")
    private @Nullable Output<String> cddc;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cddc endpoints.
     * 
     */
    public Optional<Output<String>> cddc() {
        return Optional.ofNullable(this.cddc);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom CDN endpoints.
     * 
     */
    @Import(name="cdn")
    private @Nullable Output<String> cdn;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom CDN endpoints.
     * 
     */
    public Optional<Output<String>> cdn() {
        return Optional.ofNullable(this.cdn);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cds endpoints.
     * 
     */
    @Import(name="cds")
    private @Nullable Output<String> cds;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cds endpoints.
     * 
     */
    public Optional<Output<String>> cds() {
        return Optional.ofNullable(this.cds);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom clickhouse endpoints.
     * 
     */
    @Import(name="clickhouse")
    private @Nullable Output<String> clickhouse;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom clickhouse endpoints.
     * 
     */
    public Optional<Output<String>> clickhouse() {
        return Optional.ofNullable(this.clickhouse);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cloudauth endpoints.
     * 
     */
    @Import(name="cloudauth")
    private @Nullable Output<String> cloudauth;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cloudauth endpoints.
     * 
     */
    public Optional<Output<String>> cloudauth() {
        return Optional.ofNullable(this.cloudauth);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cloudfirewall endpoints.
     * 
     */
    @Import(name="cloudfirewall")
    private @Nullable Output<String> cloudfirewall;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cloudfirewall endpoints.
     * 
     */
    public Optional<Output<String>> cloudfirewall() {
        return Optional.ofNullable(this.cloudfirewall);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cloudfw endpoints.
     * 
     */
    @Import(name="cloudfw")
    private @Nullable Output<String> cloudfw;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cloudfw endpoints.
     * 
     */
    public Optional<Output<String>> cloudfw() {
        return Optional.ofNullable(this.cloudfw);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cloudphone endpoints.
     * 
     */
    @Import(name="cloudphone")
    private @Nullable Output<String> cloudphone;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cloudphone endpoints.
     * 
     */
    public Optional<Output<String>> cloudphone() {
        return Optional.ofNullable(this.cloudphone);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cloudsso endpoints.
     * 
     */
    @Import(name="cloudsso")
    private @Nullable Output<String> cloudsso;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cloudsso endpoints.
     * 
     */
    public Optional<Output<String>> cloudsso() {
        return Optional.ofNullable(this.cloudsso);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Cloud Monitor endpoints.
     * 
     */
    @Import(name="cms")
    private @Nullable Output<String> cms;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Cloud Monitor endpoints.
     * 
     */
    public Optional<Output<String>> cms() {
        return Optional.ofNullable(this.cms);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom computenest endpoints.
     * 
     */
    @Import(name="computenest")
    private @Nullable Output<String> computenest;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom computenest endpoints.
     * 
     */
    public Optional<Output<String>> computenest() {
        return Optional.ofNullable(this.computenest);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom config endpoints.
     * 
     */
    @Import(name="config")
    private @Nullable Output<String> config;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom config endpoints.
     * 
     */
    public Optional<Output<String>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Container Registry endpoints.
     * 
     */
    @Import(name="cr")
    private @Nullable Output<String> cr;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Container Registry endpoints.
     * 
     */
    public Optional<Output<String>> cr() {
        return Optional.ofNullable(this.cr);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Container Service endpoints.
     * 
     */
    @Import(name="cs")
    private @Nullable Output<String> cs;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Container Service endpoints.
     * 
     */
    public Optional<Output<String>> cs() {
        return Optional.ofNullable(this.cs);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom das endpoints.
     * 
     */
    @Import(name="das")
    private @Nullable Output<String> das;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom das endpoints.
     * 
     */
    public Optional<Output<String>> das() {
        return Optional.ofNullable(this.das);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Datahub endpoints.
     * 
     */
    @Import(name="datahub")
    private @Nullable Output<String> datahub;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Datahub endpoints.
     * 
     */
    public Optional<Output<String>> datahub() {
        return Optional.ofNullable(this.datahub);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dataworkspublic endpoints.
     * 
     */
    @Import(name="dataworkspublic")
    private @Nullable Output<String> dataworkspublic;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dataworkspublic endpoints.
     * 
     */
    public Optional<Output<String>> dataworkspublic() {
        return Optional.ofNullable(this.dataworkspublic);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dbfs endpoints.
     * 
     */
    @Import(name="dbfs")
    private @Nullable Output<String> dbfs;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dbfs endpoints.
     * 
     */
    public Optional<Output<String>> dbfs() {
        return Optional.ofNullable(this.dbfs);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dcdn endpoints.
     * 
     */
    @Import(name="dcdn")
    private @Nullable Output<String> dcdn;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dcdn endpoints.
     * 
     */
    public Optional<Output<String>> dcdn() {
        return Optional.ofNullable(this.dcdn);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ddosbasic endpoints.
     * 
     */
    @Import(name="ddosbasic")
    private @Nullable Output<String> ddosbasic;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ddosbasic endpoints.
     * 
     */
    public Optional<Output<String>> ddosbasic() {
        return Optional.ofNullable(this.ddosbasic);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom DDOSBGP endpoints.
     * 
     */
    @Import(name="ddosbgp")
    private @Nullable Output<String> ddosbgp;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom DDOSBGP endpoints.
     * 
     */
    public Optional<Output<String>> ddosbgp() {
        return Optional.ofNullable(this.ddosbgp);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom DDOSCOO endpoints.
     * 
     */
    @Import(name="ddoscoo")
    private @Nullable Output<String> ddoscoo;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom DDOSCOO endpoints.
     * 
     */
    public Optional<Output<String>> ddoscoo() {
        return Optional.ofNullable(this.ddoscoo);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom MongoDB endpoints.
     * 
     */
    @Import(name="dds")
    private @Nullable Output<String> dds;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom MongoDB endpoints.
     * 
     */
    public Optional<Output<String>> dds() {
        return Optional.ofNullable(this.dds);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom devopsrdc endpoints.
     * 
     */
    @Import(name="devopsrdc")
    private @Nullable Output<String> devopsrdc;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom devopsrdc endpoints.
     * 
     */
    public Optional<Output<String>> devopsrdc() {
        return Optional.ofNullable(this.devopsrdc);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dg endpoints.
     * 
     */
    @Import(name="dg")
    private @Nullable Output<String> dg;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dg endpoints.
     * 
     */
    public Optional<Output<String>> dg() {
        return Optional.ofNullable(this.dg);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dm endpoints.
     * 
     */
    @Import(name="dm")
    private @Nullable Output<String> dm;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dm endpoints.
     * 
     */
    public Optional<Output<String>> dm() {
        return Optional.ofNullable(this.dm);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dms_enterprise endpoints.
     * 
     */
    @Import(name="dmsEnterprise")
    private @Nullable Output<String> dmsEnterprise;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dms_enterprise endpoints.
     * 
     */
    public Optional<Output<String>> dmsEnterprise() {
        return Optional.ofNullable(this.dmsEnterprise);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dmsenterprise endpoints.
     * 
     */
    @Import(name="dmsenterprise")
    private @Nullable Output<String> dmsenterprise;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dmsenterprise endpoints.
     * 
     */
    public Optional<Output<String>> dmsenterprise() {
        return Optional.ofNullable(this.dmsenterprise);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom DNS endpoints.
     * 
     */
    @Import(name="dns")
    private @Nullable Output<String> dns;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom DNS endpoints.
     * 
     */
    public Optional<Output<String>> dns() {
        return Optional.ofNullable(this.dns);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom DRDS endpoints.
     * 
     */
    @Import(name="drds")
    private @Nullable Output<String> drds;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom DRDS endpoints.
     * 
     */
    public Optional<Output<String>> drds() {
        return Optional.ofNullable(this.drds);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dts endpoints.
     * 
     */
    @Import(name="dts")
    private @Nullable Output<String> dts;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dts endpoints.
     * 
     */
    public Optional<Output<String>> dts() {
        return Optional.ofNullable(this.dts);
    }

    @Import(name="dysms")
    private @Nullable Output<String> dysms;

    public Optional<Output<String>> dysms() {
        return Optional.ofNullable(this.dysms);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom eais endpoints.
     * 
     */
    @Import(name="eais")
    private @Nullable Output<String> eais;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom eais endpoints.
     * 
     */
    public Optional<Output<String>> eais() {
        return Optional.ofNullable(this.eais);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ebs endpoints.
     * 
     */
    @Import(name="ebs")
    private @Nullable Output<String> ebs;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ebs endpoints.
     * 
     */
    public Optional<Output<String>> ebs() {
        return Optional.ofNullable(this.ebs);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom eci endpoints.
     * 
     */
    @Import(name="eci")
    private @Nullable Output<String> eci;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom eci endpoints.
     * 
     */
    public Optional<Output<String>> eci() {
        return Optional.ofNullable(this.eci);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ECS endpoints.
     * 
     */
    @Import(name="ecs")
    private @Nullable Output<String> ecs;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ECS endpoints.
     * 
     */
    public Optional<Output<String>> ecs() {
        return Optional.ofNullable(this.ecs);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom edas endpoints.
     * 
     */
    @Import(name="edas")
    private @Nullable Output<String> edas;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom edas endpoints.
     * 
     */
    public Optional<Output<String>> edas() {
        return Optional.ofNullable(this.edas);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom edasschedulerx endpoints.
     * 
     */
    @Import(name="edasschedulerx")
    private @Nullable Output<String> edasschedulerx;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom edasschedulerx endpoints.
     * 
     */
    public Optional<Output<String>> edasschedulerx() {
        return Optional.ofNullable(this.edasschedulerx);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom edsuser endpoints.
     * 
     */
    @Import(name="edsuser")
    private @Nullable Output<String> edsuser;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom edsuser endpoints.
     * 
     */
    public Optional<Output<String>> edsuser() {
        return Optional.ofNullable(this.edsuser);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom eflo endpoints.
     * 
     */
    @Import(name="eflo")
    private @Nullable Output<String> eflo;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom eflo endpoints.
     * 
     */
    public Optional<Output<String>> eflo() {
        return Optional.ofNullable(this.eflo);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ehpc endpoints.
     * 
     */
    @Import(name="ehpc")
    private @Nullable Output<String> ehpc;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ehpc endpoints.
     * 
     */
    public Optional<Output<String>> ehpc() {
        return Optional.ofNullable(this.ehpc);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ehs endpoints.
     * 
     */
    @Import(name="ehs")
    private @Nullable Output<String> ehs;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ehs endpoints.
     * 
     */
    public Optional<Output<String>> ehs() {
        return Optional.ofNullable(this.ehs);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom eipanycast endpoints.
     * 
     */
    @Import(name="eipanycast")
    private @Nullable Output<String> eipanycast;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom eipanycast endpoints.
     * 
     */
    public Optional<Output<String>> eipanycast() {
        return Optional.ofNullable(this.eipanycast);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Elasticsearch endpoints.
     * 
     */
    @Import(name="elasticsearch")
    private @Nullable Output<String> elasticsearch;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Elasticsearch endpoints.
     * 
     */
    public Optional<Output<String>> elasticsearch() {
        return Optional.ofNullable(this.elasticsearch);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom EMR endpoints.
     * 
     */
    @Import(name="emr")
    private @Nullable Output<String> emr;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom EMR endpoints.
     * 
     */
    public Optional<Output<String>> emr() {
        return Optional.ofNullable(this.emr);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ens endpoints.
     * 
     */
    @Import(name="ens")
    private @Nullable Output<String> ens;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ens endpoints.
     * 
     */
    public Optional<Output<String>> ens() {
        return Optional.ofNullable(this.ens);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Autoscaling endpoints.
     * 
     */
    @Import(name="ess")
    private @Nullable Output<String> ess;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Autoscaling endpoints.
     * 
     */
    public Optional<Output<String>> ess() {
        return Optional.ofNullable(this.ess);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom eventbridge_share endpoints.
     * 
     */
    @Import(name="eventbridge")
    private @Nullable Output<String> eventbridge;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom eventbridge_share endpoints.
     * 
     */
    public Optional<Output<String>> eventbridge() {
        return Optional.ofNullable(this.eventbridge);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Function Computing endpoints.
     * 
     */
    @Import(name="fc")
    private @Nullable Output<String> fc;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Function Computing endpoints.
     * 
     */
    public Optional<Output<String>> fc() {
        return Optional.ofNullable(this.fc);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom fnf endpoints.
     * 
     */
    @Import(name="fnf")
    private @Nullable Output<String> fnf;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom fnf endpoints.
     * 
     */
    public Optional<Output<String>> fnf() {
        return Optional.ofNullable(this.fnf);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ga endpoints.
     * 
     */
    @Import(name="ga")
    private @Nullable Output<String> ga;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ga endpoints.
     * 
     */
    public Optional<Output<String>> ga() {
        return Optional.ofNullable(this.ga);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom gaplus endpoints.
     * 
     */
    @Import(name="gaplus")
    private @Nullable Output<String> gaplus;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom gaplus endpoints.
     * 
     */
    public Optional<Output<String>> gaplus() {
        return Optional.ofNullable(this.gaplus);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom gds endpoints.
     * 
     */
    @Import(name="gds")
    private @Nullable Output<String> gds;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom gds endpoints.
     * 
     */
    public Optional<Output<String>> gds() {
        return Optional.ofNullable(this.gds);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom GPDB endpoints.
     * 
     */
    @Import(name="gpdb")
    private @Nullable Output<String> gpdb;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom GPDB endpoints.
     * 
     */
    public Optional<Output<String>> gpdb() {
        return Optional.ofNullable(this.gpdb);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom gwsecd endpoints.
     * 
     */
    @Import(name="gwsecd")
    private @Nullable Output<String> gwsecd;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom gwsecd endpoints.
     * 
     */
    public Optional<Output<String>> gwsecd() {
        return Optional.ofNullable(this.gwsecd);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom hbr endpoints.
     * 
     */
    @Import(name="hbr")
    private @Nullable Output<String> hbr;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom hbr endpoints.
     * 
     */
    public Optional<Output<String>> hbr() {
        return Optional.ofNullable(this.hbr);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom hcs_sgw endpoints.
     * 
     */
    @Import(name="hcsSgw")
    private @Nullable Output<String> hcsSgw;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom hcs_sgw endpoints.
     * 
     */
    public Optional<Output<String>> hcsSgw() {
        return Optional.ofNullable(this.hcsSgw);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom hitsdb endpoints.
     * 
     */
    @Import(name="hitsdb")
    private @Nullable Output<String> hitsdb;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom hitsdb endpoints.
     * 
     */
    public Optional<Output<String>> hitsdb() {
        return Optional.ofNullable(this.hitsdb);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom imm endpoints.
     * 
     */
    @Import(name="imm")
    private @Nullable Output<String> imm;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom imm endpoints.
     * 
     */
    public Optional<Output<String>> imm() {
        return Optional.ofNullable(this.imm);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom imp endpoints.
     * 
     */
    @Import(name="imp")
    private @Nullable Output<String> imp;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom imp endpoints.
     * 
     */
    public Optional<Output<String>> imp() {
        return Optional.ofNullable(this.imp);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ims endpoints.
     * 
     */
    @Import(name="ims")
    private @Nullable Output<String> ims;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ims endpoints.
     * 
     */
    public Optional<Output<String>> ims() {
        return Optional.ofNullable(this.ims);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom iot endpoints.
     * 
     */
    @Import(name="iot")
    private @Nullable Output<String> iot;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom iot endpoints.
     * 
     */
    public Optional<Output<String>> iot() {
        return Optional.ofNullable(this.iot);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom KMS endpoints.
     * 
     */
    @Import(name="kms")
    private @Nullable Output<String> kms;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom KMS endpoints.
     * 
     */
    public Optional<Output<String>> kms() {
        return Optional.ofNullable(this.kms);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom R-KVStore endpoints.
     * 
     */
    @Import(name="kvstore")
    private @Nullable Output<String> kvstore;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom R-KVStore endpoints.
     * 
     */
    public Optional<Output<String>> kvstore() {
        return Optional.ofNullable(this.kvstore);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Location Service endpoints.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Location Service endpoints.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Log Service endpoints.
     * 
     */
    @Import(name="log")
    private @Nullable Output<String> log;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Log Service endpoints.
     * 
     */
    public Optional<Output<String>> log() {
        return Optional.ofNullable(this.log);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Market Place endpoints.
     * 
     */
    @Import(name="market")
    private @Nullable Output<String> market;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Market Place endpoints.
     * 
     */
    public Optional<Output<String>> market() {
        return Optional.ofNullable(this.market);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom MaxCompute endpoints.
     * 
     */
    @Import(name="maxcompute")
    private @Nullable Output<String> maxcompute;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom MaxCompute endpoints.
     * 
     */
    public Optional<Output<String>> maxcompute() {
        return Optional.ofNullable(this.maxcompute);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom mhub endpoints.
     * 
     */
    @Import(name="mhub")
    private @Nullable Output<String> mhub;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom mhub endpoints.
     * 
     */
    public Optional<Output<String>> mhub() {
        return Optional.ofNullable(this.mhub);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom MNS endpoints.
     * 
     */
    @Import(name="mns")
    private @Nullable Output<String> mns;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom MNS endpoints.
     * 
     */
    public Optional<Output<String>> mns() {
        return Optional.ofNullable(this.mns);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom mscopensubscription endpoints.
     * 
     */
    @Import(name="mscopensubscription")
    private @Nullable Output<String> mscopensubscription;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom mscopensubscription endpoints.
     * 
     */
    public Optional<Output<String>> mscopensubscription() {
        return Optional.ofNullable(this.mscopensubscription);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom mse endpoints.
     * 
     */
    @Import(name="mse")
    private @Nullable Output<String> mse;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom mse endpoints.
     * 
     */
    public Optional<Output<String>> mse() {
        return Optional.ofNullable(this.mse);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom NAS endpoints.
     * 
     */
    @Import(name="nas")
    private @Nullable Output<String> nas;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom NAS endpoints.
     * 
     */
    public Optional<Output<String>> nas() {
        return Optional.ofNullable(this.nas);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom nlb endpoints.
     * 
     */
    @Import(name="nlb")
    private @Nullable Output<String> nlb;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom nlb endpoints.
     * 
     */
    public Optional<Output<String>> nlb() {
        return Optional.ofNullable(this.nlb);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom oceanbase endpoints.
     * 
     */
    @Import(name="oceanbase")
    private @Nullable Output<String> oceanbase;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom oceanbase endpoints.
     * 
     */
    public Optional<Output<String>> oceanbase() {
        return Optional.ofNullable(this.oceanbase);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ONS endpoints.
     * 
     */
    @Import(name="ons")
    private @Nullable Output<String> ons;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ONS endpoints.
     * 
     */
    public Optional<Output<String>> ons() {
        return Optional.ofNullable(this.ons);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom onsproxy endpoints.
     * 
     */
    @Import(name="onsproxy")
    private @Nullable Output<String> onsproxy;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom onsproxy endpoints.
     * 
     */
    public Optional<Output<String>> onsproxy() {
        return Optional.ofNullable(this.onsproxy);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom oos endpoints.
     * 
     */
    @Import(name="oos")
    private @Nullable Output<String> oos;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom oos endpoints.
     * 
     */
    public Optional<Output<String>> oos() {
        return Optional.ofNullable(this.oos);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom opensearch endpoints.
     * 
     */
    @Import(name="opensearch")
    private @Nullable Output<String> opensearch;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom opensearch endpoints.
     * 
     */
    public Optional<Output<String>> opensearch() {
        return Optional.ofNullable(this.opensearch);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom OSS endpoints.
     * 
     */
    @Import(name="oss")
    private @Nullable Output<String> oss;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom OSS endpoints.
     * 
     */
    public Optional<Output<String>> oss() {
        return Optional.ofNullable(this.oss);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Table Store endpoints.
     * 
     */
    @Import(name="ots")
    private @Nullable Output<String> ots;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Table Store endpoints.
     * 
     */
    public Optional<Output<String>> ots() {
        return Optional.ofNullable(this.ots);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom PolarDB endpoints.
     * 
     */
    @Import(name="polardb")
    private @Nullable Output<String> polardb;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom PolarDB endpoints.
     * 
     */
    public Optional<Output<String>> polardb() {
        return Optional.ofNullable(this.polardb);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom privatelink endpoints.
     * 
     */
    @Import(name="privatelink")
    private @Nullable Output<String> privatelink;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom privatelink endpoints.
     * 
     */
    public Optional<Output<String>> privatelink() {
        return Optional.ofNullable(this.privatelink);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Private Zone endpoints.
     * 
     */
    @Import(name="pvtz")
    private @Nullable Output<String> pvtz;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Private Zone endpoints.
     * 
     */
    public Optional<Output<String>> pvtz() {
        return Optional.ofNullable(this.pvtz);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom quickbi endpoints.
     * 
     */
    @Import(name="quickbi")
    private @Nullable Output<String> quickbi;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom quickbi endpoints.
     * 
     */
    public Optional<Output<String>> quickbi() {
        return Optional.ofNullable(this.quickbi);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom quotas endpoints.
     * 
     */
    @Import(name="quotas")
    private @Nullable Output<String> quotas;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom quotas endpoints.
     * 
     */
    public Optional<Output<String>> quotas() {
        return Optional.ofNullable(this.quotas);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom r_kvstore endpoints.
     * 
     */
    @Import(name="rKvstore")
    private @Nullable Output<String> rKvstore;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom r_kvstore endpoints.
     * 
     */
    public Optional<Output<String>> rKvstore() {
        return Optional.ofNullable(this.rKvstore);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom RAM endpoints.
     * 
     */
    @Import(name="ram")
    private @Nullable Output<String> ram;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom RAM endpoints.
     * 
     */
    public Optional<Output<String>> ram() {
        return Optional.ofNullable(this.ram);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom RDS endpoints.
     * 
     */
    @Import(name="rds")
    private @Nullable Output<String> rds;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom RDS endpoints.
     * 
     */
    public Optional<Output<String>> rds() {
        return Optional.ofNullable(this.rds);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom redisa endpoints.
     * 
     */
    @Import(name="redisa")
    private @Nullable Output<String> redisa;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom redisa endpoints.
     * 
     */
    public Optional<Output<String>> redisa() {
        return Optional.ofNullable(this.redisa);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom resourcemanager endpoints.
     * 
     */
    @Import(name="resourcemanager")
    private @Nullable Output<String> resourcemanager;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom resourcemanager endpoints.
     * 
     */
    public Optional<Output<String>> resourcemanager() {
        return Optional.ofNullable(this.resourcemanager);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom resourcesharing endpoints.
     * 
     */
    @Import(name="resourcesharing")
    private @Nullable Output<String> resourcesharing;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom resourcesharing endpoints.
     * 
     */
    public Optional<Output<String>> resourcesharing() {
        return Optional.ofNullable(this.resourcesharing);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ros endpoints.
     * 
     */
    @Import(name="ros")
    private @Nullable Output<String> ros;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ros endpoints.
     * 
     */
    public Optional<Output<String>> ros() {
        return Optional.ofNullable(this.ros);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom sas endpoints.
     * 
     */
    @Import(name="sas")
    private @Nullable Output<String> sas;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom sas endpoints.
     * 
     */
    public Optional<Output<String>> sas() {
        return Optional.ofNullable(this.sas);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom scdn endpoints.
     * 
     */
    @Import(name="scdn")
    private @Nullable Output<String> scdn;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom scdn endpoints.
     * 
     */
    public Optional<Output<String>> scdn() {
        return Optional.ofNullable(this.scdn);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom sddp endpoints.
     * 
     */
    @Import(name="sddp")
    private @Nullable Output<String> sddp;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom sddp endpoints.
     * 
     */
    public Optional<Output<String>> sddp() {
        return Optional.ofNullable(this.sddp);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom serverless endpoints.
     * 
     */
    @Import(name="serverless")
    private @Nullable Output<String> serverless;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom serverless endpoints.
     * 
     */
    public Optional<Output<String>> serverless() {
        return Optional.ofNullable(this.serverless);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom servicemesh endpoints.
     * 
     */
    @Import(name="servicemesh")
    private @Nullable Output<String> servicemesh;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom servicemesh endpoints.
     * 
     */
    public Optional<Output<String>> servicemesh() {
        return Optional.ofNullable(this.servicemesh);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom sgw endpoints.
     * 
     */
    @Import(name="sgw")
    private @Nullable Output<String> sgw;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom sgw endpoints.
     * 
     */
    public Optional<Output<String>> sgw() {
        return Optional.ofNullable(this.sgw);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom SLB endpoints.
     * 
     */
    @Import(name="slb")
    private @Nullable Output<String> slb;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom SLB endpoints.
     * 
     */
    public Optional<Output<String>> slb() {
        return Optional.ofNullable(this.slb);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom smartag endpoints.
     * 
     */
    @Import(name="smartag")
    private @Nullable Output<String> smartag;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom smartag endpoints.
     * 
     */
    public Optional<Output<String>> smartag() {
        return Optional.ofNullable(this.smartag);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom srvcatalog endpoints.
     * 
     */
    @Import(name="srvcatalog")
    private @Nullable Output<String> srvcatalog;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom srvcatalog endpoints.
     * 
     */
    public Optional<Output<String>> srvcatalog() {
        return Optional.ofNullable(this.srvcatalog);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom STS endpoints.
     * 
     */
    @Import(name="sts")
    private @Nullable Output<String> sts;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom STS endpoints.
     * 
     */
    public Optional<Output<String>> sts() {
        return Optional.ofNullable(this.sts);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom swas endpoints.
     * 
     */
    @Import(name="swas")
    private @Nullable Output<String> swas;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom swas endpoints.
     * 
     */
    public Optional<Output<String>> swas() {
        return Optional.ofNullable(this.swas);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom tag endpoints.
     * 
     */
    @Import(name="tag")
    private @Nullable Output<String> tag;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom tag endpoints.
     * 
     */
    public Optional<Output<String>> tag() {
        return Optional.ofNullable(this.tag);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom vod endpoints.
     * 
     */
    @Import(name="vod")
    private @Nullable Output<String> vod;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom vod endpoints.
     * 
     */
    public Optional<Output<String>> vod() {
        return Optional.ofNullable(this.vod);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom VPC and VPN endpoints.
     * 
     */
    @Import(name="vpc")
    private @Nullable Output<String> vpc;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom VPC and VPN endpoints.
     * 
     */
    public Optional<Output<String>> vpc() {
        return Optional.ofNullable(this.vpc);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom vpcpeer endpoints.
     * 
     */
    @Import(name="vpcpeer")
    private @Nullable Output<String> vpcpeer;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom vpcpeer endpoints.
     * 
     */
    public Optional<Output<String>> vpcpeer() {
        return Optional.ofNullable(this.vpcpeer);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom vs endpoints.
     * 
     */
    @Import(name="vs")
    private @Nullable Output<String> vs;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom vs endpoints.
     * 
     */
    public Optional<Output<String>> vs() {
        return Optional.ofNullable(this.vs);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom waf endpoints.
     * 
     */
    @Import(name="waf")
    private @Nullable Output<String> waf;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom waf endpoints.
     * 
     */
    public Optional<Output<String>> waf() {
        return Optional.ofNullable(this.waf);
    }

    /**
     * Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom waf_openapi endpoints.
     * 
     */
    @Import(name="wafOpenapi")
    private @Nullable Output<String> wafOpenapi;

    /**
     * @return Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom waf_openapi endpoints.
     * 
     */
    public Optional<Output<String>> wafOpenapi() {
        return Optional.ofNullable(this.wafOpenapi);
    }

    private ProviderEndpointArgs() {}

    private ProviderEndpointArgs(ProviderEndpointArgs $) {
        this.acr = $.acr;
        this.actiontrail = $.actiontrail;
        this.adb = $.adb;
        this.alb = $.alb;
        this.alidfs = $.alidfs;
        this.alidns = $.alidns;
        this.alikafka = $.alikafka;
        this.apigateway = $.apigateway;
        this.arms = $.arms;
        this.bastionhost = $.bastionhost;
        this.beebot = $.beebot;
        this.bpstudio = $.bpstudio;
        this.brainIndustrial = $.brainIndustrial;
        this.bssopenapi = $.bssopenapi;
        this.cas = $.cas;
        this.cassandra = $.cassandra;
        this.cbn = $.cbn;
        this.cbs = $.cbs;
        this.cddc = $.cddc;
        this.cdn = $.cdn;
        this.cds = $.cds;
        this.clickhouse = $.clickhouse;
        this.cloudauth = $.cloudauth;
        this.cloudfirewall = $.cloudfirewall;
        this.cloudfw = $.cloudfw;
        this.cloudphone = $.cloudphone;
        this.cloudsso = $.cloudsso;
        this.cms = $.cms;
        this.computenest = $.computenest;
        this.config = $.config;
        this.cr = $.cr;
        this.cs = $.cs;
        this.das = $.das;
        this.datahub = $.datahub;
        this.dataworkspublic = $.dataworkspublic;
        this.dbfs = $.dbfs;
        this.dcdn = $.dcdn;
        this.ddosbasic = $.ddosbasic;
        this.ddosbgp = $.ddosbgp;
        this.ddoscoo = $.ddoscoo;
        this.dds = $.dds;
        this.devopsrdc = $.devopsrdc;
        this.dg = $.dg;
        this.dm = $.dm;
        this.dmsEnterprise = $.dmsEnterprise;
        this.dmsenterprise = $.dmsenterprise;
        this.dns = $.dns;
        this.drds = $.drds;
        this.dts = $.dts;
        this.dysms = $.dysms;
        this.eais = $.eais;
        this.ebs = $.ebs;
        this.eci = $.eci;
        this.ecs = $.ecs;
        this.edas = $.edas;
        this.edasschedulerx = $.edasschedulerx;
        this.edsuser = $.edsuser;
        this.eflo = $.eflo;
        this.ehpc = $.ehpc;
        this.ehs = $.ehs;
        this.eipanycast = $.eipanycast;
        this.elasticsearch = $.elasticsearch;
        this.emr = $.emr;
        this.ens = $.ens;
        this.ess = $.ess;
        this.eventbridge = $.eventbridge;
        this.fc = $.fc;
        this.fnf = $.fnf;
        this.ga = $.ga;
        this.gaplus = $.gaplus;
        this.gds = $.gds;
        this.gpdb = $.gpdb;
        this.gwsecd = $.gwsecd;
        this.hbr = $.hbr;
        this.hcsSgw = $.hcsSgw;
        this.hitsdb = $.hitsdb;
        this.imm = $.imm;
        this.imp = $.imp;
        this.ims = $.ims;
        this.iot = $.iot;
        this.kms = $.kms;
        this.kvstore = $.kvstore;
        this.location = $.location;
        this.log = $.log;
        this.market = $.market;
        this.maxcompute = $.maxcompute;
        this.mhub = $.mhub;
        this.mns = $.mns;
        this.mscopensubscription = $.mscopensubscription;
        this.mse = $.mse;
        this.nas = $.nas;
        this.nlb = $.nlb;
        this.oceanbase = $.oceanbase;
        this.ons = $.ons;
        this.onsproxy = $.onsproxy;
        this.oos = $.oos;
        this.opensearch = $.opensearch;
        this.oss = $.oss;
        this.ots = $.ots;
        this.polardb = $.polardb;
        this.privatelink = $.privatelink;
        this.pvtz = $.pvtz;
        this.quickbi = $.quickbi;
        this.quotas = $.quotas;
        this.rKvstore = $.rKvstore;
        this.ram = $.ram;
        this.rds = $.rds;
        this.redisa = $.redisa;
        this.resourcemanager = $.resourcemanager;
        this.resourcesharing = $.resourcesharing;
        this.ros = $.ros;
        this.sas = $.sas;
        this.scdn = $.scdn;
        this.sddp = $.sddp;
        this.serverless = $.serverless;
        this.servicemesh = $.servicemesh;
        this.sgw = $.sgw;
        this.slb = $.slb;
        this.smartag = $.smartag;
        this.srvcatalog = $.srvcatalog;
        this.sts = $.sts;
        this.swas = $.swas;
        this.tag = $.tag;
        this.vod = $.vod;
        this.vpc = $.vpc;
        this.vpcpeer = $.vpcpeer;
        this.vs = $.vs;
        this.waf = $.waf;
        this.wafOpenapi = $.wafOpenapi;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderEndpointArgs $;

        public Builder() {
            $ = new ProviderEndpointArgs();
        }

        public Builder(ProviderEndpointArgs defaults) {
            $ = new ProviderEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param acr Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom acr endpoints.
         * 
         * @return builder
         * 
         */
        public Builder acr(@Nullable Output<String> acr) {
            $.acr = acr;
            return this;
        }

        /**
         * @param acr Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom acr endpoints.
         * 
         * @return builder
         * 
         */
        public Builder acr(String acr) {
            return acr(Output.of(acr));
        }

        /**
         * @param actiontrail Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Actiontrail endpoints.
         * 
         * @return builder
         * 
         */
        public Builder actiontrail(@Nullable Output<String> actiontrail) {
            $.actiontrail = actiontrail;
            return this;
        }

        /**
         * @param actiontrail Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Actiontrail endpoints.
         * 
         * @return builder
         * 
         */
        public Builder actiontrail(String actiontrail) {
            return actiontrail(Output.of(actiontrail));
        }

        /**
         * @param adb Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom AnalyticDB endpoints.
         * 
         * @return builder
         * 
         */
        public Builder adb(@Nullable Output<String> adb) {
            $.adb = adb;
            return this;
        }

        /**
         * @param adb Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom AnalyticDB endpoints.
         * 
         * @return builder
         * 
         */
        public Builder adb(String adb) {
            return adb(Output.of(adb));
        }

        /**
         * @param alb Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom alb endpoints.
         * 
         * @return builder
         * 
         */
        public Builder alb(@Nullable Output<String> alb) {
            $.alb = alb;
            return this;
        }

        /**
         * @param alb Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom alb endpoints.
         * 
         * @return builder
         * 
         */
        public Builder alb(String alb) {
            return alb(Output.of(alb));
        }

        /**
         * @param alidfs Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom alidfs endpoints.
         * 
         * @return builder
         * 
         */
        public Builder alidfs(@Nullable Output<String> alidfs) {
            $.alidfs = alidfs;
            return this;
        }

        /**
         * @param alidfs Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom alidfs endpoints.
         * 
         * @return builder
         * 
         */
        public Builder alidfs(String alidfs) {
            return alidfs(Output.of(alidfs));
        }

        /**
         * @param alidns Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom alidns endpoints.
         * 
         * @return builder
         * 
         */
        public Builder alidns(@Nullable Output<String> alidns) {
            $.alidns = alidns;
            return this;
        }

        /**
         * @param alidns Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom alidns endpoints.
         * 
         * @return builder
         * 
         */
        public Builder alidns(String alidns) {
            return alidns(Output.of(alidns));
        }

        /**
         * @param alikafka Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ALIKAFKA endpoints.
         * 
         * @return builder
         * 
         */
        public Builder alikafka(@Nullable Output<String> alikafka) {
            $.alikafka = alikafka;
            return this;
        }

        /**
         * @param alikafka Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ALIKAFKA endpoints.
         * 
         * @return builder
         * 
         */
        public Builder alikafka(String alikafka) {
            return alikafka(Output.of(alikafka));
        }

        /**
         * @param apigateway Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Api Gateway endpoints.
         * 
         * @return builder
         * 
         */
        public Builder apigateway(@Nullable Output<String> apigateway) {
            $.apigateway = apigateway;
            return this;
        }

        /**
         * @param apigateway Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Api Gateway endpoints.
         * 
         * @return builder
         * 
         */
        public Builder apigateway(String apigateway) {
            return apigateway(Output.of(apigateway));
        }

        /**
         * @param arms Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom arms endpoints.
         * 
         * @return builder
         * 
         */
        public Builder arms(@Nullable Output<String> arms) {
            $.arms = arms;
            return this;
        }

        /**
         * @param arms Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom arms endpoints.
         * 
         * @return builder
         * 
         */
        public Builder arms(String arms) {
            return arms(Output.of(arms));
        }

        /**
         * @param bastionhost Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom bastionhost endpoints.
         * 
         * @return builder
         * 
         */
        public Builder bastionhost(@Nullable Output<String> bastionhost) {
            $.bastionhost = bastionhost;
            return this;
        }

        /**
         * @param bastionhost Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom bastionhost endpoints.
         * 
         * @return builder
         * 
         */
        public Builder bastionhost(String bastionhost) {
            return bastionhost(Output.of(bastionhost));
        }

        /**
         * @param beebot Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom beebot endpoints.
         * 
         * @return builder
         * 
         */
        public Builder beebot(@Nullable Output<String> beebot) {
            $.beebot = beebot;
            return this;
        }

        /**
         * @param beebot Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom beebot endpoints.
         * 
         * @return builder
         * 
         */
        public Builder beebot(String beebot) {
            return beebot(Output.of(beebot));
        }

        /**
         * @param bpstudio Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom bpstudio endpoints.
         * 
         * @return builder
         * 
         */
        public Builder bpstudio(@Nullable Output<String> bpstudio) {
            $.bpstudio = bpstudio;
            return this;
        }

        /**
         * @param bpstudio Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom bpstudio endpoints.
         * 
         * @return builder
         * 
         */
        public Builder bpstudio(String bpstudio) {
            return bpstudio(Output.of(bpstudio));
        }

        /**
         * @param brainIndustrial Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom brain_industrial endpoints.
         * 
         * @return builder
         * 
         */
        public Builder brainIndustrial(@Nullable Output<String> brainIndustrial) {
            $.brainIndustrial = brainIndustrial;
            return this;
        }

        /**
         * @param brainIndustrial Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom brain_industrial endpoints.
         * 
         * @return builder
         * 
         */
        public Builder brainIndustrial(String brainIndustrial) {
            return brainIndustrial(Output.of(brainIndustrial));
        }

        /**
         * @param bssopenapi Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom BSSOPENAPI endpoints.
         * 
         * @return builder
         * 
         */
        public Builder bssopenapi(@Nullable Output<String> bssopenapi) {
            $.bssopenapi = bssopenapi;
            return this;
        }

        /**
         * @param bssopenapi Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom BSSOPENAPI endpoints.
         * 
         * @return builder
         * 
         */
        public Builder bssopenapi(String bssopenapi) {
            return bssopenapi(Output.of(bssopenapi));
        }

        /**
         * @param cas Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom CAS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cas(@Nullable Output<String> cas) {
            $.cas = cas;
            return this;
        }

        /**
         * @param cas Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom CAS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cas(String cas) {
            return cas(Output.of(cas));
        }

        /**
         * @param cassandra Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cassandra endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cassandra(@Nullable Output<String> cassandra) {
            $.cassandra = cassandra;
            return this;
        }

        /**
         * @param cassandra Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cassandra endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cassandra(String cassandra) {
            return cassandra(Output.of(cassandra));
        }

        /**
         * @param cbn Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cbn endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cbn(@Nullable Output<String> cbn) {
            $.cbn = cbn;
            return this;
        }

        /**
         * @param cbn Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cbn endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cbn(String cbn) {
            return cbn(Output.of(cbn));
        }

        /**
         * @param cbs Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cbs endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cbs(@Nullable Output<String> cbs) {
            $.cbs = cbs;
            return this;
        }

        /**
         * @param cbs Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cbs endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cbs(String cbs) {
            return cbs(Output.of(cbs));
        }

        /**
         * @param cddc Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cddc endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cddc(@Nullable Output<String> cddc) {
            $.cddc = cddc;
            return this;
        }

        /**
         * @param cddc Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cddc endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cddc(String cddc) {
            return cddc(Output.of(cddc));
        }

        /**
         * @param cdn Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom CDN endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cdn(@Nullable Output<String> cdn) {
            $.cdn = cdn;
            return this;
        }

        /**
         * @param cdn Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom CDN endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cdn(String cdn) {
            return cdn(Output.of(cdn));
        }

        /**
         * @param cds Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cds endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cds(@Nullable Output<String> cds) {
            $.cds = cds;
            return this;
        }

        /**
         * @param cds Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cds endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cds(String cds) {
            return cds(Output.of(cds));
        }

        /**
         * @param clickhouse Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom clickhouse endpoints.
         * 
         * @return builder
         * 
         */
        public Builder clickhouse(@Nullable Output<String> clickhouse) {
            $.clickhouse = clickhouse;
            return this;
        }

        /**
         * @param clickhouse Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom clickhouse endpoints.
         * 
         * @return builder
         * 
         */
        public Builder clickhouse(String clickhouse) {
            return clickhouse(Output.of(clickhouse));
        }

        /**
         * @param cloudauth Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cloudauth endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cloudauth(@Nullable Output<String> cloudauth) {
            $.cloudauth = cloudauth;
            return this;
        }

        /**
         * @param cloudauth Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cloudauth endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cloudauth(String cloudauth) {
            return cloudauth(Output.of(cloudauth));
        }

        /**
         * @param cloudfirewall Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cloudfirewall endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cloudfirewall(@Nullable Output<String> cloudfirewall) {
            $.cloudfirewall = cloudfirewall;
            return this;
        }

        /**
         * @param cloudfirewall Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cloudfirewall endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cloudfirewall(String cloudfirewall) {
            return cloudfirewall(Output.of(cloudfirewall));
        }

        /**
         * @param cloudfw Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cloudfw endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cloudfw(@Nullable Output<String> cloudfw) {
            $.cloudfw = cloudfw;
            return this;
        }

        /**
         * @param cloudfw Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cloudfw endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cloudfw(String cloudfw) {
            return cloudfw(Output.of(cloudfw));
        }

        /**
         * @param cloudphone Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cloudphone endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cloudphone(@Nullable Output<String> cloudphone) {
            $.cloudphone = cloudphone;
            return this;
        }

        /**
         * @param cloudphone Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cloudphone endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cloudphone(String cloudphone) {
            return cloudphone(Output.of(cloudphone));
        }

        /**
         * @param cloudsso Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cloudsso endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cloudsso(@Nullable Output<String> cloudsso) {
            $.cloudsso = cloudsso;
            return this;
        }

        /**
         * @param cloudsso Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom cloudsso endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cloudsso(String cloudsso) {
            return cloudsso(Output.of(cloudsso));
        }

        /**
         * @param cms Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Cloud Monitor endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cms(@Nullable Output<String> cms) {
            $.cms = cms;
            return this;
        }

        /**
         * @param cms Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Cloud Monitor endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cms(String cms) {
            return cms(Output.of(cms));
        }

        /**
         * @param computenest Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom computenest endpoints.
         * 
         * @return builder
         * 
         */
        public Builder computenest(@Nullable Output<String> computenest) {
            $.computenest = computenest;
            return this;
        }

        /**
         * @param computenest Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom computenest endpoints.
         * 
         * @return builder
         * 
         */
        public Builder computenest(String computenest) {
            return computenest(Output.of(computenest));
        }

        /**
         * @param config Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom config endpoints.
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<String> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom config endpoints.
         * 
         * @return builder
         * 
         */
        public Builder config(String config) {
            return config(Output.of(config));
        }

        /**
         * @param cr Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Container Registry endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cr(@Nullable Output<String> cr) {
            $.cr = cr;
            return this;
        }

        /**
         * @param cr Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Container Registry endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cr(String cr) {
            return cr(Output.of(cr));
        }

        /**
         * @param cs Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Container Service endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cs(@Nullable Output<String> cs) {
            $.cs = cs;
            return this;
        }

        /**
         * @param cs Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Container Service endpoints.
         * 
         * @return builder
         * 
         */
        public Builder cs(String cs) {
            return cs(Output.of(cs));
        }

        /**
         * @param das Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom das endpoints.
         * 
         * @return builder
         * 
         */
        public Builder das(@Nullable Output<String> das) {
            $.das = das;
            return this;
        }

        /**
         * @param das Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom das endpoints.
         * 
         * @return builder
         * 
         */
        public Builder das(String das) {
            return das(Output.of(das));
        }

        /**
         * @param datahub Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Datahub endpoints.
         * 
         * @return builder
         * 
         */
        public Builder datahub(@Nullable Output<String> datahub) {
            $.datahub = datahub;
            return this;
        }

        /**
         * @param datahub Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Datahub endpoints.
         * 
         * @return builder
         * 
         */
        public Builder datahub(String datahub) {
            return datahub(Output.of(datahub));
        }

        /**
         * @param dataworkspublic Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dataworkspublic endpoints.
         * 
         * @return builder
         * 
         */
        public Builder dataworkspublic(@Nullable Output<String> dataworkspublic) {
            $.dataworkspublic = dataworkspublic;
            return this;
        }

        /**
         * @param dataworkspublic Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dataworkspublic endpoints.
         * 
         * @return builder
         * 
         */
        public Builder dataworkspublic(String dataworkspublic) {
            return dataworkspublic(Output.of(dataworkspublic));
        }

        /**
         * @param dbfs Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dbfs endpoints.
         * 
         * @return builder
         * 
         */
        public Builder dbfs(@Nullable Output<String> dbfs) {
            $.dbfs = dbfs;
            return this;
        }

        /**
         * @param dbfs Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dbfs endpoints.
         * 
         * @return builder
         * 
         */
        public Builder dbfs(String dbfs) {
            return dbfs(Output.of(dbfs));
        }

        /**
         * @param dcdn Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dcdn endpoints.
         * 
         * @return builder
         * 
         */
        public Builder dcdn(@Nullable Output<String> dcdn) {
            $.dcdn = dcdn;
            return this;
        }

        /**
         * @param dcdn Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dcdn endpoints.
         * 
         * @return builder
         * 
         */
        public Builder dcdn(String dcdn) {
            return dcdn(Output.of(dcdn));
        }

        /**
         * @param ddosbasic Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ddosbasic endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ddosbasic(@Nullable Output<String> ddosbasic) {
            $.ddosbasic = ddosbasic;
            return this;
        }

        /**
         * @param ddosbasic Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ddosbasic endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ddosbasic(String ddosbasic) {
            return ddosbasic(Output.of(ddosbasic));
        }

        /**
         * @param ddosbgp Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom DDOSBGP endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ddosbgp(@Nullable Output<String> ddosbgp) {
            $.ddosbgp = ddosbgp;
            return this;
        }

        /**
         * @param ddosbgp Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom DDOSBGP endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ddosbgp(String ddosbgp) {
            return ddosbgp(Output.of(ddosbgp));
        }

        /**
         * @param ddoscoo Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom DDOSCOO endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ddoscoo(@Nullable Output<String> ddoscoo) {
            $.ddoscoo = ddoscoo;
            return this;
        }

        /**
         * @param ddoscoo Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom DDOSCOO endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ddoscoo(String ddoscoo) {
            return ddoscoo(Output.of(ddoscoo));
        }

        /**
         * @param dds Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom MongoDB endpoints.
         * 
         * @return builder
         * 
         */
        public Builder dds(@Nullable Output<String> dds) {
            $.dds = dds;
            return this;
        }

        /**
         * @param dds Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom MongoDB endpoints.
         * 
         * @return builder
         * 
         */
        public Builder dds(String dds) {
            return dds(Output.of(dds));
        }

        /**
         * @param devopsrdc Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom devopsrdc endpoints.
         * 
         * @return builder
         * 
         */
        public Builder devopsrdc(@Nullable Output<String> devopsrdc) {
            $.devopsrdc = devopsrdc;
            return this;
        }

        /**
         * @param devopsrdc Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom devopsrdc endpoints.
         * 
         * @return builder
         * 
         */
        public Builder devopsrdc(String devopsrdc) {
            return devopsrdc(Output.of(devopsrdc));
        }

        /**
         * @param dg Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dg endpoints.
         * 
         * @return builder
         * 
         */
        public Builder dg(@Nullable Output<String> dg) {
            $.dg = dg;
            return this;
        }

        /**
         * @param dg Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dg endpoints.
         * 
         * @return builder
         * 
         */
        public Builder dg(String dg) {
            return dg(Output.of(dg));
        }

        /**
         * @param dm Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dm endpoints.
         * 
         * @return builder
         * 
         */
        public Builder dm(@Nullable Output<String> dm) {
            $.dm = dm;
            return this;
        }

        /**
         * @param dm Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dm endpoints.
         * 
         * @return builder
         * 
         */
        public Builder dm(String dm) {
            return dm(Output.of(dm));
        }

        /**
         * @param dmsEnterprise Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dms_enterprise endpoints.
         * 
         * @return builder
         * 
         */
        public Builder dmsEnterprise(@Nullable Output<String> dmsEnterprise) {
            $.dmsEnterprise = dmsEnterprise;
            return this;
        }

        /**
         * @param dmsEnterprise Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dms_enterprise endpoints.
         * 
         * @return builder
         * 
         */
        public Builder dmsEnterprise(String dmsEnterprise) {
            return dmsEnterprise(Output.of(dmsEnterprise));
        }

        /**
         * @param dmsenterprise Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dmsenterprise endpoints.
         * 
         * @return builder
         * 
         */
        public Builder dmsenterprise(@Nullable Output<String> dmsenterprise) {
            $.dmsenterprise = dmsenterprise;
            return this;
        }

        /**
         * @param dmsenterprise Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dmsenterprise endpoints.
         * 
         * @return builder
         * 
         */
        public Builder dmsenterprise(String dmsenterprise) {
            return dmsenterprise(Output.of(dmsenterprise));
        }

        /**
         * @param dns Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom DNS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder dns(@Nullable Output<String> dns) {
            $.dns = dns;
            return this;
        }

        /**
         * @param dns Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom DNS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder dns(String dns) {
            return dns(Output.of(dns));
        }

        /**
         * @param drds Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom DRDS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder drds(@Nullable Output<String> drds) {
            $.drds = drds;
            return this;
        }

        /**
         * @param drds Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom DRDS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder drds(String drds) {
            return drds(Output.of(drds));
        }

        /**
         * @param dts Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dts endpoints.
         * 
         * @return builder
         * 
         */
        public Builder dts(@Nullable Output<String> dts) {
            $.dts = dts;
            return this;
        }

        /**
         * @param dts Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom dts endpoints.
         * 
         * @return builder
         * 
         */
        public Builder dts(String dts) {
            return dts(Output.of(dts));
        }

        public Builder dysms(@Nullable Output<String> dysms) {
            $.dysms = dysms;
            return this;
        }

        public Builder dysms(String dysms) {
            return dysms(Output.of(dysms));
        }

        /**
         * @param eais Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom eais endpoints.
         * 
         * @return builder
         * 
         */
        public Builder eais(@Nullable Output<String> eais) {
            $.eais = eais;
            return this;
        }

        /**
         * @param eais Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom eais endpoints.
         * 
         * @return builder
         * 
         */
        public Builder eais(String eais) {
            return eais(Output.of(eais));
        }

        /**
         * @param ebs Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ebs endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ebs(@Nullable Output<String> ebs) {
            $.ebs = ebs;
            return this;
        }

        /**
         * @param ebs Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ebs endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ebs(String ebs) {
            return ebs(Output.of(ebs));
        }

        /**
         * @param eci Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom eci endpoints.
         * 
         * @return builder
         * 
         */
        public Builder eci(@Nullable Output<String> eci) {
            $.eci = eci;
            return this;
        }

        /**
         * @param eci Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom eci endpoints.
         * 
         * @return builder
         * 
         */
        public Builder eci(String eci) {
            return eci(Output.of(eci));
        }

        /**
         * @param ecs Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ECS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ecs(@Nullable Output<String> ecs) {
            $.ecs = ecs;
            return this;
        }

        /**
         * @param ecs Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ECS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ecs(String ecs) {
            return ecs(Output.of(ecs));
        }

        /**
         * @param edas Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom edas endpoints.
         * 
         * @return builder
         * 
         */
        public Builder edas(@Nullable Output<String> edas) {
            $.edas = edas;
            return this;
        }

        /**
         * @param edas Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom edas endpoints.
         * 
         * @return builder
         * 
         */
        public Builder edas(String edas) {
            return edas(Output.of(edas));
        }

        /**
         * @param edasschedulerx Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom edasschedulerx endpoints.
         * 
         * @return builder
         * 
         */
        public Builder edasschedulerx(@Nullable Output<String> edasschedulerx) {
            $.edasschedulerx = edasschedulerx;
            return this;
        }

        /**
         * @param edasschedulerx Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom edasschedulerx endpoints.
         * 
         * @return builder
         * 
         */
        public Builder edasschedulerx(String edasschedulerx) {
            return edasschedulerx(Output.of(edasschedulerx));
        }

        /**
         * @param edsuser Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom edsuser endpoints.
         * 
         * @return builder
         * 
         */
        public Builder edsuser(@Nullable Output<String> edsuser) {
            $.edsuser = edsuser;
            return this;
        }

        /**
         * @param edsuser Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom edsuser endpoints.
         * 
         * @return builder
         * 
         */
        public Builder edsuser(String edsuser) {
            return edsuser(Output.of(edsuser));
        }

        /**
         * @param eflo Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom eflo endpoints.
         * 
         * @return builder
         * 
         */
        public Builder eflo(@Nullable Output<String> eflo) {
            $.eflo = eflo;
            return this;
        }

        /**
         * @param eflo Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom eflo endpoints.
         * 
         * @return builder
         * 
         */
        public Builder eflo(String eflo) {
            return eflo(Output.of(eflo));
        }

        /**
         * @param ehpc Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ehpc endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ehpc(@Nullable Output<String> ehpc) {
            $.ehpc = ehpc;
            return this;
        }

        /**
         * @param ehpc Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ehpc endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ehpc(String ehpc) {
            return ehpc(Output.of(ehpc));
        }

        /**
         * @param ehs Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ehs endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ehs(@Nullable Output<String> ehs) {
            $.ehs = ehs;
            return this;
        }

        /**
         * @param ehs Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ehs endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ehs(String ehs) {
            return ehs(Output.of(ehs));
        }

        /**
         * @param eipanycast Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom eipanycast endpoints.
         * 
         * @return builder
         * 
         */
        public Builder eipanycast(@Nullable Output<String> eipanycast) {
            $.eipanycast = eipanycast;
            return this;
        }

        /**
         * @param eipanycast Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom eipanycast endpoints.
         * 
         * @return builder
         * 
         */
        public Builder eipanycast(String eipanycast) {
            return eipanycast(Output.of(eipanycast));
        }

        /**
         * @param elasticsearch Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Elasticsearch endpoints.
         * 
         * @return builder
         * 
         */
        public Builder elasticsearch(@Nullable Output<String> elasticsearch) {
            $.elasticsearch = elasticsearch;
            return this;
        }

        /**
         * @param elasticsearch Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Elasticsearch endpoints.
         * 
         * @return builder
         * 
         */
        public Builder elasticsearch(String elasticsearch) {
            return elasticsearch(Output.of(elasticsearch));
        }

        /**
         * @param emr Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom EMR endpoints.
         * 
         * @return builder
         * 
         */
        public Builder emr(@Nullable Output<String> emr) {
            $.emr = emr;
            return this;
        }

        /**
         * @param emr Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom EMR endpoints.
         * 
         * @return builder
         * 
         */
        public Builder emr(String emr) {
            return emr(Output.of(emr));
        }

        /**
         * @param ens Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ens endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ens(@Nullable Output<String> ens) {
            $.ens = ens;
            return this;
        }

        /**
         * @param ens Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ens endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ens(String ens) {
            return ens(Output.of(ens));
        }

        /**
         * @param ess Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Autoscaling endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ess(@Nullable Output<String> ess) {
            $.ess = ess;
            return this;
        }

        /**
         * @param ess Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Autoscaling endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ess(String ess) {
            return ess(Output.of(ess));
        }

        /**
         * @param eventbridge Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom eventbridge_share endpoints.
         * 
         * @return builder
         * 
         */
        public Builder eventbridge(@Nullable Output<String> eventbridge) {
            $.eventbridge = eventbridge;
            return this;
        }

        /**
         * @param eventbridge Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom eventbridge_share endpoints.
         * 
         * @return builder
         * 
         */
        public Builder eventbridge(String eventbridge) {
            return eventbridge(Output.of(eventbridge));
        }

        /**
         * @param fc Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Function Computing endpoints.
         * 
         * @return builder
         * 
         */
        public Builder fc(@Nullable Output<String> fc) {
            $.fc = fc;
            return this;
        }

        /**
         * @param fc Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Function Computing endpoints.
         * 
         * @return builder
         * 
         */
        public Builder fc(String fc) {
            return fc(Output.of(fc));
        }

        /**
         * @param fnf Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom fnf endpoints.
         * 
         * @return builder
         * 
         */
        public Builder fnf(@Nullable Output<String> fnf) {
            $.fnf = fnf;
            return this;
        }

        /**
         * @param fnf Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom fnf endpoints.
         * 
         * @return builder
         * 
         */
        public Builder fnf(String fnf) {
            return fnf(Output.of(fnf));
        }

        /**
         * @param ga Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ga endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ga(@Nullable Output<String> ga) {
            $.ga = ga;
            return this;
        }

        /**
         * @param ga Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ga endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ga(String ga) {
            return ga(Output.of(ga));
        }

        /**
         * @param gaplus Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom gaplus endpoints.
         * 
         * @return builder
         * 
         */
        public Builder gaplus(@Nullable Output<String> gaplus) {
            $.gaplus = gaplus;
            return this;
        }

        /**
         * @param gaplus Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom gaplus endpoints.
         * 
         * @return builder
         * 
         */
        public Builder gaplus(String gaplus) {
            return gaplus(Output.of(gaplus));
        }

        /**
         * @param gds Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom gds endpoints.
         * 
         * @return builder
         * 
         */
        public Builder gds(@Nullable Output<String> gds) {
            $.gds = gds;
            return this;
        }

        /**
         * @param gds Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom gds endpoints.
         * 
         * @return builder
         * 
         */
        public Builder gds(String gds) {
            return gds(Output.of(gds));
        }

        /**
         * @param gpdb Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom GPDB endpoints.
         * 
         * @return builder
         * 
         */
        public Builder gpdb(@Nullable Output<String> gpdb) {
            $.gpdb = gpdb;
            return this;
        }

        /**
         * @param gpdb Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom GPDB endpoints.
         * 
         * @return builder
         * 
         */
        public Builder gpdb(String gpdb) {
            return gpdb(Output.of(gpdb));
        }

        /**
         * @param gwsecd Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom gwsecd endpoints.
         * 
         * @return builder
         * 
         */
        public Builder gwsecd(@Nullable Output<String> gwsecd) {
            $.gwsecd = gwsecd;
            return this;
        }

        /**
         * @param gwsecd Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom gwsecd endpoints.
         * 
         * @return builder
         * 
         */
        public Builder gwsecd(String gwsecd) {
            return gwsecd(Output.of(gwsecd));
        }

        /**
         * @param hbr Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom hbr endpoints.
         * 
         * @return builder
         * 
         */
        public Builder hbr(@Nullable Output<String> hbr) {
            $.hbr = hbr;
            return this;
        }

        /**
         * @param hbr Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom hbr endpoints.
         * 
         * @return builder
         * 
         */
        public Builder hbr(String hbr) {
            return hbr(Output.of(hbr));
        }

        /**
         * @param hcsSgw Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom hcs_sgw endpoints.
         * 
         * @return builder
         * 
         */
        public Builder hcsSgw(@Nullable Output<String> hcsSgw) {
            $.hcsSgw = hcsSgw;
            return this;
        }

        /**
         * @param hcsSgw Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom hcs_sgw endpoints.
         * 
         * @return builder
         * 
         */
        public Builder hcsSgw(String hcsSgw) {
            return hcsSgw(Output.of(hcsSgw));
        }

        /**
         * @param hitsdb Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom hitsdb endpoints.
         * 
         * @return builder
         * 
         */
        public Builder hitsdb(@Nullable Output<String> hitsdb) {
            $.hitsdb = hitsdb;
            return this;
        }

        /**
         * @param hitsdb Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom hitsdb endpoints.
         * 
         * @return builder
         * 
         */
        public Builder hitsdb(String hitsdb) {
            return hitsdb(Output.of(hitsdb));
        }

        /**
         * @param imm Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom imm endpoints.
         * 
         * @return builder
         * 
         */
        public Builder imm(@Nullable Output<String> imm) {
            $.imm = imm;
            return this;
        }

        /**
         * @param imm Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom imm endpoints.
         * 
         * @return builder
         * 
         */
        public Builder imm(String imm) {
            return imm(Output.of(imm));
        }

        /**
         * @param imp Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom imp endpoints.
         * 
         * @return builder
         * 
         */
        public Builder imp(@Nullable Output<String> imp) {
            $.imp = imp;
            return this;
        }

        /**
         * @param imp Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom imp endpoints.
         * 
         * @return builder
         * 
         */
        public Builder imp(String imp) {
            return imp(Output.of(imp));
        }

        /**
         * @param ims Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ims endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ims(@Nullable Output<String> ims) {
            $.ims = ims;
            return this;
        }

        /**
         * @param ims Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ims endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ims(String ims) {
            return ims(Output.of(ims));
        }

        /**
         * @param iot Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom iot endpoints.
         * 
         * @return builder
         * 
         */
        public Builder iot(@Nullable Output<String> iot) {
            $.iot = iot;
            return this;
        }

        /**
         * @param iot Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom iot endpoints.
         * 
         * @return builder
         * 
         */
        public Builder iot(String iot) {
            return iot(Output.of(iot));
        }

        /**
         * @param kms Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom KMS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder kms(@Nullable Output<String> kms) {
            $.kms = kms;
            return this;
        }

        /**
         * @param kms Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom KMS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder kms(String kms) {
            return kms(Output.of(kms));
        }

        /**
         * @param kvstore Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom R-KVStore endpoints.
         * 
         * @return builder
         * 
         */
        public Builder kvstore(@Nullable Output<String> kvstore) {
            $.kvstore = kvstore;
            return this;
        }

        /**
         * @param kvstore Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom R-KVStore endpoints.
         * 
         * @return builder
         * 
         */
        public Builder kvstore(String kvstore) {
            return kvstore(Output.of(kvstore));
        }

        /**
         * @param location Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Location Service endpoints.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Location Service endpoints.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param log Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Log Service endpoints.
         * 
         * @return builder
         * 
         */
        public Builder log(@Nullable Output<String> log) {
            $.log = log;
            return this;
        }

        /**
         * @param log Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Log Service endpoints.
         * 
         * @return builder
         * 
         */
        public Builder log(String log) {
            return log(Output.of(log));
        }

        /**
         * @param market Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Market Place endpoints.
         * 
         * @return builder
         * 
         */
        public Builder market(@Nullable Output<String> market) {
            $.market = market;
            return this;
        }

        /**
         * @param market Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Market Place endpoints.
         * 
         * @return builder
         * 
         */
        public Builder market(String market) {
            return market(Output.of(market));
        }

        /**
         * @param maxcompute Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom MaxCompute endpoints.
         * 
         * @return builder
         * 
         */
        public Builder maxcompute(@Nullable Output<String> maxcompute) {
            $.maxcompute = maxcompute;
            return this;
        }

        /**
         * @param maxcompute Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom MaxCompute endpoints.
         * 
         * @return builder
         * 
         */
        public Builder maxcompute(String maxcompute) {
            return maxcompute(Output.of(maxcompute));
        }

        /**
         * @param mhub Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom mhub endpoints.
         * 
         * @return builder
         * 
         */
        public Builder mhub(@Nullable Output<String> mhub) {
            $.mhub = mhub;
            return this;
        }

        /**
         * @param mhub Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom mhub endpoints.
         * 
         * @return builder
         * 
         */
        public Builder mhub(String mhub) {
            return mhub(Output.of(mhub));
        }

        /**
         * @param mns Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom MNS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder mns(@Nullable Output<String> mns) {
            $.mns = mns;
            return this;
        }

        /**
         * @param mns Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom MNS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder mns(String mns) {
            return mns(Output.of(mns));
        }

        /**
         * @param mscopensubscription Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom mscopensubscription endpoints.
         * 
         * @return builder
         * 
         */
        public Builder mscopensubscription(@Nullable Output<String> mscopensubscription) {
            $.mscopensubscription = mscopensubscription;
            return this;
        }

        /**
         * @param mscopensubscription Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom mscopensubscription endpoints.
         * 
         * @return builder
         * 
         */
        public Builder mscopensubscription(String mscopensubscription) {
            return mscopensubscription(Output.of(mscopensubscription));
        }

        /**
         * @param mse Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom mse endpoints.
         * 
         * @return builder
         * 
         */
        public Builder mse(@Nullable Output<String> mse) {
            $.mse = mse;
            return this;
        }

        /**
         * @param mse Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom mse endpoints.
         * 
         * @return builder
         * 
         */
        public Builder mse(String mse) {
            return mse(Output.of(mse));
        }

        /**
         * @param nas Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom NAS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder nas(@Nullable Output<String> nas) {
            $.nas = nas;
            return this;
        }

        /**
         * @param nas Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom NAS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder nas(String nas) {
            return nas(Output.of(nas));
        }

        /**
         * @param nlb Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom nlb endpoints.
         * 
         * @return builder
         * 
         */
        public Builder nlb(@Nullable Output<String> nlb) {
            $.nlb = nlb;
            return this;
        }

        /**
         * @param nlb Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom nlb endpoints.
         * 
         * @return builder
         * 
         */
        public Builder nlb(String nlb) {
            return nlb(Output.of(nlb));
        }

        /**
         * @param oceanbase Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom oceanbase endpoints.
         * 
         * @return builder
         * 
         */
        public Builder oceanbase(@Nullable Output<String> oceanbase) {
            $.oceanbase = oceanbase;
            return this;
        }

        /**
         * @param oceanbase Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom oceanbase endpoints.
         * 
         * @return builder
         * 
         */
        public Builder oceanbase(String oceanbase) {
            return oceanbase(Output.of(oceanbase));
        }

        /**
         * @param ons Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ONS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ons(@Nullable Output<String> ons) {
            $.ons = ons;
            return this;
        }

        /**
         * @param ons Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ONS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ons(String ons) {
            return ons(Output.of(ons));
        }

        /**
         * @param onsproxy Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom onsproxy endpoints.
         * 
         * @return builder
         * 
         */
        public Builder onsproxy(@Nullable Output<String> onsproxy) {
            $.onsproxy = onsproxy;
            return this;
        }

        /**
         * @param onsproxy Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom onsproxy endpoints.
         * 
         * @return builder
         * 
         */
        public Builder onsproxy(String onsproxy) {
            return onsproxy(Output.of(onsproxy));
        }

        /**
         * @param oos Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom oos endpoints.
         * 
         * @return builder
         * 
         */
        public Builder oos(@Nullable Output<String> oos) {
            $.oos = oos;
            return this;
        }

        /**
         * @param oos Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom oos endpoints.
         * 
         * @return builder
         * 
         */
        public Builder oos(String oos) {
            return oos(Output.of(oos));
        }

        /**
         * @param opensearch Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom opensearch endpoints.
         * 
         * @return builder
         * 
         */
        public Builder opensearch(@Nullable Output<String> opensearch) {
            $.opensearch = opensearch;
            return this;
        }

        /**
         * @param opensearch Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom opensearch endpoints.
         * 
         * @return builder
         * 
         */
        public Builder opensearch(String opensearch) {
            return opensearch(Output.of(opensearch));
        }

        /**
         * @param oss Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom OSS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder oss(@Nullable Output<String> oss) {
            $.oss = oss;
            return this;
        }

        /**
         * @param oss Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom OSS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder oss(String oss) {
            return oss(Output.of(oss));
        }

        /**
         * @param ots Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Table Store endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ots(@Nullable Output<String> ots) {
            $.ots = ots;
            return this;
        }

        /**
         * @param ots Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Table Store endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ots(String ots) {
            return ots(Output.of(ots));
        }

        /**
         * @param polardb Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom PolarDB endpoints.
         * 
         * @return builder
         * 
         */
        public Builder polardb(@Nullable Output<String> polardb) {
            $.polardb = polardb;
            return this;
        }

        /**
         * @param polardb Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom PolarDB endpoints.
         * 
         * @return builder
         * 
         */
        public Builder polardb(String polardb) {
            return polardb(Output.of(polardb));
        }

        /**
         * @param privatelink Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom privatelink endpoints.
         * 
         * @return builder
         * 
         */
        public Builder privatelink(@Nullable Output<String> privatelink) {
            $.privatelink = privatelink;
            return this;
        }

        /**
         * @param privatelink Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom privatelink endpoints.
         * 
         * @return builder
         * 
         */
        public Builder privatelink(String privatelink) {
            return privatelink(Output.of(privatelink));
        }

        /**
         * @param pvtz Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Private Zone endpoints.
         * 
         * @return builder
         * 
         */
        public Builder pvtz(@Nullable Output<String> pvtz) {
            $.pvtz = pvtz;
            return this;
        }

        /**
         * @param pvtz Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom Private Zone endpoints.
         * 
         * @return builder
         * 
         */
        public Builder pvtz(String pvtz) {
            return pvtz(Output.of(pvtz));
        }

        /**
         * @param quickbi Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom quickbi endpoints.
         * 
         * @return builder
         * 
         */
        public Builder quickbi(@Nullable Output<String> quickbi) {
            $.quickbi = quickbi;
            return this;
        }

        /**
         * @param quickbi Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom quickbi endpoints.
         * 
         * @return builder
         * 
         */
        public Builder quickbi(String quickbi) {
            return quickbi(Output.of(quickbi));
        }

        /**
         * @param quotas Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom quotas endpoints.
         * 
         * @return builder
         * 
         */
        public Builder quotas(@Nullable Output<String> quotas) {
            $.quotas = quotas;
            return this;
        }

        /**
         * @param quotas Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom quotas endpoints.
         * 
         * @return builder
         * 
         */
        public Builder quotas(String quotas) {
            return quotas(Output.of(quotas));
        }

        /**
         * @param rKvstore Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom r_kvstore endpoints.
         * 
         * @return builder
         * 
         */
        public Builder rKvstore(@Nullable Output<String> rKvstore) {
            $.rKvstore = rKvstore;
            return this;
        }

        /**
         * @param rKvstore Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom r_kvstore endpoints.
         * 
         * @return builder
         * 
         */
        public Builder rKvstore(String rKvstore) {
            return rKvstore(Output.of(rKvstore));
        }

        /**
         * @param ram Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom RAM endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ram(@Nullable Output<String> ram) {
            $.ram = ram;
            return this;
        }

        /**
         * @param ram Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom RAM endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ram(String ram) {
            return ram(Output.of(ram));
        }

        /**
         * @param rds Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom RDS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder rds(@Nullable Output<String> rds) {
            $.rds = rds;
            return this;
        }

        /**
         * @param rds Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom RDS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder rds(String rds) {
            return rds(Output.of(rds));
        }

        /**
         * @param redisa Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom redisa endpoints.
         * 
         * @return builder
         * 
         */
        public Builder redisa(@Nullable Output<String> redisa) {
            $.redisa = redisa;
            return this;
        }

        /**
         * @param redisa Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom redisa endpoints.
         * 
         * @return builder
         * 
         */
        public Builder redisa(String redisa) {
            return redisa(Output.of(redisa));
        }

        /**
         * @param resourcemanager Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom resourcemanager endpoints.
         * 
         * @return builder
         * 
         */
        public Builder resourcemanager(@Nullable Output<String> resourcemanager) {
            $.resourcemanager = resourcemanager;
            return this;
        }

        /**
         * @param resourcemanager Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom resourcemanager endpoints.
         * 
         * @return builder
         * 
         */
        public Builder resourcemanager(String resourcemanager) {
            return resourcemanager(Output.of(resourcemanager));
        }

        /**
         * @param resourcesharing Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom resourcesharing endpoints.
         * 
         * @return builder
         * 
         */
        public Builder resourcesharing(@Nullable Output<String> resourcesharing) {
            $.resourcesharing = resourcesharing;
            return this;
        }

        /**
         * @param resourcesharing Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom resourcesharing endpoints.
         * 
         * @return builder
         * 
         */
        public Builder resourcesharing(String resourcesharing) {
            return resourcesharing(Output.of(resourcesharing));
        }

        /**
         * @param ros Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ros endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ros(@Nullable Output<String> ros) {
            $.ros = ros;
            return this;
        }

        /**
         * @param ros Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom ros endpoints.
         * 
         * @return builder
         * 
         */
        public Builder ros(String ros) {
            return ros(Output.of(ros));
        }

        /**
         * @param sas Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom sas endpoints.
         * 
         * @return builder
         * 
         */
        public Builder sas(@Nullable Output<String> sas) {
            $.sas = sas;
            return this;
        }

        /**
         * @param sas Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom sas endpoints.
         * 
         * @return builder
         * 
         */
        public Builder sas(String sas) {
            return sas(Output.of(sas));
        }

        /**
         * @param scdn Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom scdn endpoints.
         * 
         * @return builder
         * 
         */
        public Builder scdn(@Nullable Output<String> scdn) {
            $.scdn = scdn;
            return this;
        }

        /**
         * @param scdn Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom scdn endpoints.
         * 
         * @return builder
         * 
         */
        public Builder scdn(String scdn) {
            return scdn(Output.of(scdn));
        }

        /**
         * @param sddp Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom sddp endpoints.
         * 
         * @return builder
         * 
         */
        public Builder sddp(@Nullable Output<String> sddp) {
            $.sddp = sddp;
            return this;
        }

        /**
         * @param sddp Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom sddp endpoints.
         * 
         * @return builder
         * 
         */
        public Builder sddp(String sddp) {
            return sddp(Output.of(sddp));
        }

        /**
         * @param serverless Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom serverless endpoints.
         * 
         * @return builder
         * 
         */
        public Builder serverless(@Nullable Output<String> serverless) {
            $.serverless = serverless;
            return this;
        }

        /**
         * @param serverless Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom serverless endpoints.
         * 
         * @return builder
         * 
         */
        public Builder serverless(String serverless) {
            return serverless(Output.of(serverless));
        }

        /**
         * @param servicemesh Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom servicemesh endpoints.
         * 
         * @return builder
         * 
         */
        public Builder servicemesh(@Nullable Output<String> servicemesh) {
            $.servicemesh = servicemesh;
            return this;
        }

        /**
         * @param servicemesh Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom servicemesh endpoints.
         * 
         * @return builder
         * 
         */
        public Builder servicemesh(String servicemesh) {
            return servicemesh(Output.of(servicemesh));
        }

        /**
         * @param sgw Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom sgw endpoints.
         * 
         * @return builder
         * 
         */
        public Builder sgw(@Nullable Output<String> sgw) {
            $.sgw = sgw;
            return this;
        }

        /**
         * @param sgw Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom sgw endpoints.
         * 
         * @return builder
         * 
         */
        public Builder sgw(String sgw) {
            return sgw(Output.of(sgw));
        }

        /**
         * @param slb Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom SLB endpoints.
         * 
         * @return builder
         * 
         */
        public Builder slb(@Nullable Output<String> slb) {
            $.slb = slb;
            return this;
        }

        /**
         * @param slb Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom SLB endpoints.
         * 
         * @return builder
         * 
         */
        public Builder slb(String slb) {
            return slb(Output.of(slb));
        }

        /**
         * @param smartag Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom smartag endpoints.
         * 
         * @return builder
         * 
         */
        public Builder smartag(@Nullable Output<String> smartag) {
            $.smartag = smartag;
            return this;
        }

        /**
         * @param smartag Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom smartag endpoints.
         * 
         * @return builder
         * 
         */
        public Builder smartag(String smartag) {
            return smartag(Output.of(smartag));
        }

        /**
         * @param srvcatalog Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom srvcatalog endpoints.
         * 
         * @return builder
         * 
         */
        public Builder srvcatalog(@Nullable Output<String> srvcatalog) {
            $.srvcatalog = srvcatalog;
            return this;
        }

        /**
         * @param srvcatalog Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom srvcatalog endpoints.
         * 
         * @return builder
         * 
         */
        public Builder srvcatalog(String srvcatalog) {
            return srvcatalog(Output.of(srvcatalog));
        }

        /**
         * @param sts Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom STS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder sts(@Nullable Output<String> sts) {
            $.sts = sts;
            return this;
        }

        /**
         * @param sts Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom STS endpoints.
         * 
         * @return builder
         * 
         */
        public Builder sts(String sts) {
            return sts(Output.of(sts));
        }

        /**
         * @param swas Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom swas endpoints.
         * 
         * @return builder
         * 
         */
        public Builder swas(@Nullable Output<String> swas) {
            $.swas = swas;
            return this;
        }

        /**
         * @param swas Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom swas endpoints.
         * 
         * @return builder
         * 
         */
        public Builder swas(String swas) {
            return swas(Output.of(swas));
        }

        /**
         * @param tag Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom tag endpoints.
         * 
         * @return builder
         * 
         */
        public Builder tag(@Nullable Output<String> tag) {
            $.tag = tag;
            return this;
        }

        /**
         * @param tag Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom tag endpoints.
         * 
         * @return builder
         * 
         */
        public Builder tag(String tag) {
            return tag(Output.of(tag));
        }

        /**
         * @param vod Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom vod endpoints.
         * 
         * @return builder
         * 
         */
        public Builder vod(@Nullable Output<String> vod) {
            $.vod = vod;
            return this;
        }

        /**
         * @param vod Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom vod endpoints.
         * 
         * @return builder
         * 
         */
        public Builder vod(String vod) {
            return vod(Output.of(vod));
        }

        /**
         * @param vpc Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom VPC and VPN endpoints.
         * 
         * @return builder
         * 
         */
        public Builder vpc(@Nullable Output<String> vpc) {
            $.vpc = vpc;
            return this;
        }

        /**
         * @param vpc Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom VPC and VPN endpoints.
         * 
         * @return builder
         * 
         */
        public Builder vpc(String vpc) {
            return vpc(Output.of(vpc));
        }

        /**
         * @param vpcpeer Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom vpcpeer endpoints.
         * 
         * @return builder
         * 
         */
        public Builder vpcpeer(@Nullable Output<String> vpcpeer) {
            $.vpcpeer = vpcpeer;
            return this;
        }

        /**
         * @param vpcpeer Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom vpcpeer endpoints.
         * 
         * @return builder
         * 
         */
        public Builder vpcpeer(String vpcpeer) {
            return vpcpeer(Output.of(vpcpeer));
        }

        /**
         * @param vs Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom vs endpoints.
         * 
         * @return builder
         * 
         */
        public Builder vs(@Nullable Output<String> vs) {
            $.vs = vs;
            return this;
        }

        /**
         * @param vs Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom vs endpoints.
         * 
         * @return builder
         * 
         */
        public Builder vs(String vs) {
            return vs(Output.of(vs));
        }

        /**
         * @param waf Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom waf endpoints.
         * 
         * @return builder
         * 
         */
        public Builder waf(@Nullable Output<String> waf) {
            $.waf = waf;
            return this;
        }

        /**
         * @param waf Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom waf endpoints.
         * 
         * @return builder
         * 
         */
        public Builder waf(String waf) {
            return waf(Output.of(waf));
        }

        /**
         * @param wafOpenapi Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom waf_openapi endpoints.
         * 
         * @return builder
         * 
         */
        public Builder wafOpenapi(@Nullable Output<String> wafOpenapi) {
            $.wafOpenapi = wafOpenapi;
            return this;
        }

        /**
         * @param wafOpenapi Use this to override the default endpoint URL constructed from the `region`. It&#39;s typically used to connect to custom waf_openapi endpoints.
         * 
         * @return builder
         * 
         */
        public Builder wafOpenapi(String wafOpenapi) {
            return wafOpenapi(Output.of(wafOpenapi));
        }

        public ProviderEndpointArgs build() {
            return $;
        }
    }

}
