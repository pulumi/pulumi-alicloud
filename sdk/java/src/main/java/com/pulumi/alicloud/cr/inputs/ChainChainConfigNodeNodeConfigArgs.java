// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cr.inputs;

import com.pulumi.alicloud.cr.inputs.ChainChainConfigNodeNodeConfigDenyPolicyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ChainChainConfigNodeNodeConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ChainChainConfigNodeNodeConfigArgs Empty = new ChainChainConfigNodeNodeConfigArgs();

    /**
     * Blocking rules for scanning nodes in delivery chain nodes. See `deny_policy` below. **Note:** When `node_name` is `VULNERABILITY_SCANNING`, the parameters in `deny_policy` need to be filled in.
     * 
     */
    @Import(name="denyPolicies")
    private @Nullable Output<List<ChainChainConfigNodeNodeConfigDenyPolicyArgs>> denyPolicies;

    /**
     * @return Blocking rules for scanning nodes in delivery chain nodes. See `deny_policy` below. **Note:** When `node_name` is `VULNERABILITY_SCANNING`, the parameters in `deny_policy` need to be filled in.
     * 
     */
    public Optional<Output<List<ChainChainConfigNodeNodeConfigDenyPolicyArgs>>> denyPolicies() {
        return Optional.ofNullable(this.denyPolicies);
    }

    private ChainChainConfigNodeNodeConfigArgs() {}

    private ChainChainConfigNodeNodeConfigArgs(ChainChainConfigNodeNodeConfigArgs $) {
        this.denyPolicies = $.denyPolicies;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChainChainConfigNodeNodeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChainChainConfigNodeNodeConfigArgs $;

        public Builder() {
            $ = new ChainChainConfigNodeNodeConfigArgs();
        }

        public Builder(ChainChainConfigNodeNodeConfigArgs defaults) {
            $ = new ChainChainConfigNodeNodeConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param denyPolicies Blocking rules for scanning nodes in delivery chain nodes. See `deny_policy` below. **Note:** When `node_name` is `VULNERABILITY_SCANNING`, the parameters in `deny_policy` need to be filled in.
         * 
         * @return builder
         * 
         */
        public Builder denyPolicies(@Nullable Output<List<ChainChainConfigNodeNodeConfigDenyPolicyArgs>> denyPolicies) {
            $.denyPolicies = denyPolicies;
            return this;
        }

        /**
         * @param denyPolicies Blocking rules for scanning nodes in delivery chain nodes. See `deny_policy` below. **Note:** When `node_name` is `VULNERABILITY_SCANNING`, the parameters in `deny_policy` need to be filled in.
         * 
         * @return builder
         * 
         */
        public Builder denyPolicies(List<ChainChainConfigNodeNodeConfigDenyPolicyArgs> denyPolicies) {
            return denyPolicies(Output.of(denyPolicies));
        }

        /**
         * @param denyPolicies Blocking rules for scanning nodes in delivery chain nodes. See `deny_policy` below. **Note:** When `node_name` is `VULNERABILITY_SCANNING`, the parameters in `deny_policy` need to be filled in.
         * 
         * @return builder
         * 
         */
        public Builder denyPolicies(ChainChainConfigNodeNodeConfigDenyPolicyArgs... denyPolicies) {
            return denyPolicies(List.of(denyPolicies));
        }

        public ChainChainConfigNodeNodeConfigArgs build() {
            return $;
        }
    }

}
