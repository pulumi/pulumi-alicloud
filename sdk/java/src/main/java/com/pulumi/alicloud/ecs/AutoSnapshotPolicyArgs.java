// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs;

import com.pulumi.alicloud.ecs.inputs.AutoSnapshotPolicyCopyEncryptionConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutoSnapshotPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutoSnapshotPolicyArgs Empty = new AutoSnapshotPolicyArgs();

    /**
     * The name of the automatic snapshot policy. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with http:// or https://. The name can contain letters, digits, colons (:), underscores (_), and hyphens (-).
     * 
     */
    @Import(name="autoSnapshotPolicyName")
    private @Nullable Output<String> autoSnapshotPolicyName;

    /**
     * @return The name of the automatic snapshot policy. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with http:// or https://. The name can contain letters, digits, colons (:), underscores (_), and hyphens (-).
     * 
     */
    public Optional<Output<String>> autoSnapshotPolicyName() {
        return Optional.ofNullable(this.autoSnapshotPolicyName);
    }

    /**
     * The retention period of the snapshot copy in the destination region. Unit: days. Valid values:
     * - `-1`: The snapshot copy is retained until it is deleted.
     * 
     */
    @Import(name="copiedSnapshotsRetentionDays")
    private @Nullable Output<Integer> copiedSnapshotsRetentionDays;

    /**
     * @return The retention period of the snapshot copy in the destination region. Unit: days. Valid values:
     * - `-1`: The snapshot copy is retained until it is deleted.
     * 
     */
    public Optional<Output<Integer>> copiedSnapshotsRetentionDays() {
        return Optional.ofNullable(this.copiedSnapshotsRetentionDays);
    }

    /**
     * The encryption parameters for cross-region snapshot replication. See `copyEncryptionConfiguration` below.
     * 
     */
    @Import(name="copyEncryptionConfiguration")
    private @Nullable Output<AutoSnapshotPolicyCopyEncryptionConfigurationArgs> copyEncryptionConfiguration;

    /**
     * @return The encryption parameters for cross-region snapshot replication. See `copyEncryptionConfiguration` below.
     * 
     */
    public Optional<Output<AutoSnapshotPolicyCopyEncryptionConfigurationArgs>> copyEncryptionConfiguration() {
        return Optional.ofNullable(this.copyEncryptionConfiguration);
    }

    /**
     * Specifies whether to enable cross-region replication for snapshots. Valid values: `true`, `false`.
     * 
     */
    @Import(name="enableCrossRegionCopy")
    private @Nullable Output<Boolean> enableCrossRegionCopy;

    /**
     * @return Specifies whether to enable cross-region replication for snapshots. Valid values: `true`, `false`.
     * 
     */
    public Optional<Output<Boolean>> enableCrossRegionCopy() {
        return Optional.ofNullable(this.enableCrossRegionCopy);
    }

    /**
     * . Field `name` has been deprecated from provider version 1.236.0. New field `autoSnapshotPolicyName` instead.
     * 
     * @deprecated
     * Field `name` has been deprecated from provider version 1.236.0. New field `autoSnapshotPolicyName` instead.
     * 
     */
    @Deprecated /* Field `name` has been deprecated from provider version 1.236.0. New field `autoSnapshotPolicyName` instead. */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return . Field `name` has been deprecated from provider version 1.236.0. New field `autoSnapshotPolicyName` instead.
     * 
     * @deprecated
     * Field `name` has been deprecated from provider version 1.236.0. New field `autoSnapshotPolicyName` instead.
     * 
     */
    @Deprecated /* Field `name` has been deprecated from provider version 1.236.0. New field `autoSnapshotPolicyName` instead. */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The days of the week on which to create automatic snapshots. Valid values: `1` to `7`, which correspond to the days of the week. For example, `1` indicates Monday. One or more days can be specified.
     * 
     */
    @Import(name="repeatWeekdays", required=true)
    private Output<List<String>> repeatWeekdays;

    /**
     * @return The days of the week on which to create automatic snapshots. Valid values: `1` to `7`, which correspond to the days of the week. For example, `1` indicates Monday. One or more days can be specified.
     * 
     */
    public Output<List<String>> repeatWeekdays() {
        return this.repeatWeekdays;
    }

    /**
     * The ID of the resource group. If this parameter is specified to query resources, up to 1,000 resources that belong to the specified resource group can be displayed in the response.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group. If this parameter is specified to query resources, up to 1,000 resources that belong to the specified resource group can be displayed in the response.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The retention period of the automatic snapshots. Unit: days. Valid values:
     * - `-1`: Automatic snapshots are retained until they are deleted.
     * 
     */
    @Import(name="retentionDays", required=true)
    private Output<Integer> retentionDays;

    /**
     * @return The retention period of the automatic snapshots. Unit: days. Valid values:
     * - `-1`: Automatic snapshots are retained until they are deleted.
     * 
     */
    public Output<Integer> retentionDays() {
        return this.retentionDays;
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The destination region to which to copy the snapshot. You can specify only a single destination region.
     * 
     */
    @Import(name="targetCopyRegions")
    private @Nullable Output<List<String>> targetCopyRegions;

    /**
     * @return The destination region to which to copy the snapshot. You can specify only a single destination region.
     * 
     */
    public Optional<Output<List<String>>> targetCopyRegions() {
        return Optional.ofNullable(this.targetCopyRegions);
    }

    /**
     * The points in time of the day at which to create automatic snapshots.
     * 
     * The time is displayed in UTC+8. Unit: hours. Valid values: `0` to `23`, which correspond to the 24 points in time on the hour from 00:00:00 to 23:00:00. For example, 1 indicates 01:00:00. Multiple points in time can be specified.
     * 
     * The parameter value is a JSON array that contains up to 24 points in time separated by commas (,). Example: [&#34;0&#34;, &#34;1&#34;, ... &#34;23&#34;].
     * 
     * The following arguments will be discarded. Please use new fields as soon as possible:
     * 
     */
    @Import(name="timePoints", required=true)
    private Output<List<String>> timePoints;

    /**
     * @return The points in time of the day at which to create automatic snapshots.
     * 
     * The time is displayed in UTC+8. Unit: hours. Valid values: `0` to `23`, which correspond to the 24 points in time on the hour from 00:00:00 to 23:00:00. For example, 1 indicates 01:00:00. Multiple points in time can be specified.
     * 
     * The parameter value is a JSON array that contains up to 24 points in time separated by commas (,). Example: [&#34;0&#34;, &#34;1&#34;, ... &#34;23&#34;].
     * 
     * The following arguments will be discarded. Please use new fields as soon as possible:
     * 
     */
    public Output<List<String>> timePoints() {
        return this.timePoints;
    }

    private AutoSnapshotPolicyArgs() {}

    private AutoSnapshotPolicyArgs(AutoSnapshotPolicyArgs $) {
        this.autoSnapshotPolicyName = $.autoSnapshotPolicyName;
        this.copiedSnapshotsRetentionDays = $.copiedSnapshotsRetentionDays;
        this.copyEncryptionConfiguration = $.copyEncryptionConfiguration;
        this.enableCrossRegionCopy = $.enableCrossRegionCopy;
        this.name = $.name;
        this.repeatWeekdays = $.repeatWeekdays;
        this.resourceGroupId = $.resourceGroupId;
        this.retentionDays = $.retentionDays;
        this.tags = $.tags;
        this.targetCopyRegions = $.targetCopyRegions;
        this.timePoints = $.timePoints;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutoSnapshotPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutoSnapshotPolicyArgs $;

        public Builder() {
            $ = new AutoSnapshotPolicyArgs();
        }

        public Builder(AutoSnapshotPolicyArgs defaults) {
            $ = new AutoSnapshotPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoSnapshotPolicyName The name of the automatic snapshot policy. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with http:// or https://. The name can contain letters, digits, colons (:), underscores (_), and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder autoSnapshotPolicyName(@Nullable Output<String> autoSnapshotPolicyName) {
            $.autoSnapshotPolicyName = autoSnapshotPolicyName;
            return this;
        }

        /**
         * @param autoSnapshotPolicyName The name of the automatic snapshot policy. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with http:// or https://. The name can contain letters, digits, colons (:), underscores (_), and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder autoSnapshotPolicyName(String autoSnapshotPolicyName) {
            return autoSnapshotPolicyName(Output.of(autoSnapshotPolicyName));
        }

        /**
         * @param copiedSnapshotsRetentionDays The retention period of the snapshot copy in the destination region. Unit: days. Valid values:
         * - `-1`: The snapshot copy is retained until it is deleted.
         * 
         * @return builder
         * 
         */
        public Builder copiedSnapshotsRetentionDays(@Nullable Output<Integer> copiedSnapshotsRetentionDays) {
            $.copiedSnapshotsRetentionDays = copiedSnapshotsRetentionDays;
            return this;
        }

        /**
         * @param copiedSnapshotsRetentionDays The retention period of the snapshot copy in the destination region. Unit: days. Valid values:
         * - `-1`: The snapshot copy is retained until it is deleted.
         * 
         * @return builder
         * 
         */
        public Builder copiedSnapshotsRetentionDays(Integer copiedSnapshotsRetentionDays) {
            return copiedSnapshotsRetentionDays(Output.of(copiedSnapshotsRetentionDays));
        }

        /**
         * @param copyEncryptionConfiguration The encryption parameters for cross-region snapshot replication. See `copyEncryptionConfiguration` below.
         * 
         * @return builder
         * 
         */
        public Builder copyEncryptionConfiguration(@Nullable Output<AutoSnapshotPolicyCopyEncryptionConfigurationArgs> copyEncryptionConfiguration) {
            $.copyEncryptionConfiguration = copyEncryptionConfiguration;
            return this;
        }

        /**
         * @param copyEncryptionConfiguration The encryption parameters for cross-region snapshot replication. See `copyEncryptionConfiguration` below.
         * 
         * @return builder
         * 
         */
        public Builder copyEncryptionConfiguration(AutoSnapshotPolicyCopyEncryptionConfigurationArgs copyEncryptionConfiguration) {
            return copyEncryptionConfiguration(Output.of(copyEncryptionConfiguration));
        }

        /**
         * @param enableCrossRegionCopy Specifies whether to enable cross-region replication for snapshots. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder enableCrossRegionCopy(@Nullable Output<Boolean> enableCrossRegionCopy) {
            $.enableCrossRegionCopy = enableCrossRegionCopy;
            return this;
        }

        /**
         * @param enableCrossRegionCopy Specifies whether to enable cross-region replication for snapshots. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder enableCrossRegionCopy(Boolean enableCrossRegionCopy) {
            return enableCrossRegionCopy(Output.of(enableCrossRegionCopy));
        }

        /**
         * @param name . Field `name` has been deprecated from provider version 1.236.0. New field `autoSnapshotPolicyName` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `name` has been deprecated from provider version 1.236.0. New field `autoSnapshotPolicyName` instead.
         * 
         */
        @Deprecated /* Field `name` has been deprecated from provider version 1.236.0. New field `autoSnapshotPolicyName` instead. */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name . Field `name` has been deprecated from provider version 1.236.0. New field `autoSnapshotPolicyName` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `name` has been deprecated from provider version 1.236.0. New field `autoSnapshotPolicyName` instead.
         * 
         */
        @Deprecated /* Field `name` has been deprecated from provider version 1.236.0. New field `autoSnapshotPolicyName` instead. */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param repeatWeekdays The days of the week on which to create automatic snapshots. Valid values: `1` to `7`, which correspond to the days of the week. For example, `1` indicates Monday. One or more days can be specified.
         * 
         * @return builder
         * 
         */
        public Builder repeatWeekdays(Output<List<String>> repeatWeekdays) {
            $.repeatWeekdays = repeatWeekdays;
            return this;
        }

        /**
         * @param repeatWeekdays The days of the week on which to create automatic snapshots. Valid values: `1` to `7`, which correspond to the days of the week. For example, `1` indicates Monday. One or more days can be specified.
         * 
         * @return builder
         * 
         */
        public Builder repeatWeekdays(List<String> repeatWeekdays) {
            return repeatWeekdays(Output.of(repeatWeekdays));
        }

        /**
         * @param repeatWeekdays The days of the week on which to create automatic snapshots. Valid values: `1` to `7`, which correspond to the days of the week. For example, `1` indicates Monday. One or more days can be specified.
         * 
         * @return builder
         * 
         */
        public Builder repeatWeekdays(String... repeatWeekdays) {
            return repeatWeekdays(List.of(repeatWeekdays));
        }

        /**
         * @param resourceGroupId The ID of the resource group. If this parameter is specified to query resources, up to 1,000 resources that belong to the specified resource group can be displayed in the response.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group. If this parameter is specified to query resources, up to 1,000 resources that belong to the specified resource group can be displayed in the response.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param retentionDays The retention period of the automatic snapshots. Unit: days. Valid values:
         * - `-1`: Automatic snapshots are retained until they are deleted.
         * 
         * @return builder
         * 
         */
        public Builder retentionDays(Output<Integer> retentionDays) {
            $.retentionDays = retentionDays;
            return this;
        }

        /**
         * @param retentionDays The retention period of the automatic snapshots. Unit: days. Valid values:
         * - `-1`: Automatic snapshots are retained until they are deleted.
         * 
         * @return builder
         * 
         */
        public Builder retentionDays(Integer retentionDays) {
            return retentionDays(Output.of(retentionDays));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param targetCopyRegions The destination region to which to copy the snapshot. You can specify only a single destination region.
         * 
         * @return builder
         * 
         */
        public Builder targetCopyRegions(@Nullable Output<List<String>> targetCopyRegions) {
            $.targetCopyRegions = targetCopyRegions;
            return this;
        }

        /**
         * @param targetCopyRegions The destination region to which to copy the snapshot. You can specify only a single destination region.
         * 
         * @return builder
         * 
         */
        public Builder targetCopyRegions(List<String> targetCopyRegions) {
            return targetCopyRegions(Output.of(targetCopyRegions));
        }

        /**
         * @param targetCopyRegions The destination region to which to copy the snapshot. You can specify only a single destination region.
         * 
         * @return builder
         * 
         */
        public Builder targetCopyRegions(String... targetCopyRegions) {
            return targetCopyRegions(List.of(targetCopyRegions));
        }

        /**
         * @param timePoints The points in time of the day at which to create automatic snapshots.
         * 
         * The time is displayed in UTC+8. Unit: hours. Valid values: `0` to `23`, which correspond to the 24 points in time on the hour from 00:00:00 to 23:00:00. For example, 1 indicates 01:00:00. Multiple points in time can be specified.
         * 
         * The parameter value is a JSON array that contains up to 24 points in time separated by commas (,). Example: [&#34;0&#34;, &#34;1&#34;, ... &#34;23&#34;].
         * 
         * The following arguments will be discarded. Please use new fields as soon as possible:
         * 
         * @return builder
         * 
         */
        public Builder timePoints(Output<List<String>> timePoints) {
            $.timePoints = timePoints;
            return this;
        }

        /**
         * @param timePoints The points in time of the day at which to create automatic snapshots.
         * 
         * The time is displayed in UTC+8. Unit: hours. Valid values: `0` to `23`, which correspond to the 24 points in time on the hour from 00:00:00 to 23:00:00. For example, 1 indicates 01:00:00. Multiple points in time can be specified.
         * 
         * The parameter value is a JSON array that contains up to 24 points in time separated by commas (,). Example: [&#34;0&#34;, &#34;1&#34;, ... &#34;23&#34;].
         * 
         * The following arguments will be discarded. Please use new fields as soon as possible:
         * 
         * @return builder
         * 
         */
        public Builder timePoints(List<String> timePoints) {
            return timePoints(Output.of(timePoints));
        }

        /**
         * @param timePoints The points in time of the day at which to create automatic snapshots.
         * 
         * The time is displayed in UTC+8. Unit: hours. Valid values: `0` to `23`, which correspond to the 24 points in time on the hour from 00:00:00 to 23:00:00. For example, 1 indicates 01:00:00. Multiple points in time can be specified.
         * 
         * The parameter value is a JSON array that contains up to 24 points in time separated by commas (,). Example: [&#34;0&#34;, &#34;1&#34;, ... &#34;23&#34;].
         * 
         * The following arguments will be discarded. Please use new fields as soon as possible:
         * 
         * @return builder
         * 
         */
        public Builder timePoints(String... timePoints) {
            return timePoints(List.of(timePoints));
        }

        public AutoSnapshotPolicyArgs build() {
            if ($.repeatWeekdays == null) {
                throw new MissingRequiredPropertyException("AutoSnapshotPolicyArgs", "repeatWeekdays");
            }
            if ($.retentionDays == null) {
                throw new MissingRequiredPropertyException("AutoSnapshotPolicyArgs", "retentionDays");
            }
            if ($.timePoints == null) {
                throw new MissingRequiredPropertyException("AutoSnapshotPolicyArgs", "timePoints");
            }
            return $;
        }
    }

}
