// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cfg;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RemediationArgs extends com.pulumi.resources.ResourceArgs {

    public static final RemediationArgs Empty = new RemediationArgs();

    /**
     * Rule ID.
     * 
     */
    @Import(name="configRuleId", required=true)
    private Output<String> configRuleId;

    /**
     * @return Rule ID.
     * 
     */
    public Output<String> configRuleId() {
        return this.configRuleId;
    }

    /**
     * Execution type, valid values: `Manual`, `Automatic`.
     * 
     */
    @Import(name="invokeType", required=true)
    private Output<String> invokeType;

    /**
     * @return Execution type, valid values: `Manual`, `Automatic`.
     * 
     */
    public Output<String> invokeType() {
        return this.invokeType;
    }

    /**
     * Remediation parameter.
     * 
     */
    @Import(name="params", required=true)
    private Output<String> params;

    /**
     * @return Remediation parameter.
     * 
     */
    public Output<String> params() {
        return this.params;
    }

    /**
     * Remediation resource type, valid values: `ALIYUN` , `CUSTOMER`.
     * 
     */
    @Import(name="remediationSourceType")
    private @Nullable Output<String> remediationSourceType;

    /**
     * @return Remediation resource type, valid values: `ALIYUN` , `CUSTOMER`.
     * 
     */
    public Optional<Output<String>> remediationSourceType() {
        return Optional.ofNullable(this.remediationSourceType);
    }

    /**
     * Remediation template ID.
     * 
     */
    @Import(name="remediationTemplateId", required=true)
    private Output<String> remediationTemplateId;

    /**
     * @return Remediation template ID.
     * 
     */
    public Output<String> remediationTemplateId() {
        return this.remediationTemplateId;
    }

    /**
     * Remediation type, valid values: `OOS`, `FC`.
     * 
     * The following arguments will be discarded. Please use new fields as soon as possible:
     * 
     */
    @Import(name="remediationType", required=true)
    private Output<String> remediationType;

    /**
     * @return Remediation type, valid values: `OOS`, `FC`.
     * 
     * The following arguments will be discarded. Please use new fields as soon as possible:
     * 
     */
    public Output<String> remediationType() {
        return this.remediationType;
    }

    private RemediationArgs() {}

    private RemediationArgs(RemediationArgs $) {
        this.configRuleId = $.configRuleId;
        this.invokeType = $.invokeType;
        this.params = $.params;
        this.remediationSourceType = $.remediationSourceType;
        this.remediationTemplateId = $.remediationTemplateId;
        this.remediationType = $.remediationType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RemediationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RemediationArgs $;

        public Builder() {
            $ = new RemediationArgs();
        }

        public Builder(RemediationArgs defaults) {
            $ = new RemediationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configRuleId Rule ID.
         * 
         * @return builder
         * 
         */
        public Builder configRuleId(Output<String> configRuleId) {
            $.configRuleId = configRuleId;
            return this;
        }

        /**
         * @param configRuleId Rule ID.
         * 
         * @return builder
         * 
         */
        public Builder configRuleId(String configRuleId) {
            return configRuleId(Output.of(configRuleId));
        }

        /**
         * @param invokeType Execution type, valid values: `Manual`, `Automatic`.
         * 
         * @return builder
         * 
         */
        public Builder invokeType(Output<String> invokeType) {
            $.invokeType = invokeType;
            return this;
        }

        /**
         * @param invokeType Execution type, valid values: `Manual`, `Automatic`.
         * 
         * @return builder
         * 
         */
        public Builder invokeType(String invokeType) {
            return invokeType(Output.of(invokeType));
        }

        /**
         * @param params Remediation parameter.
         * 
         * @return builder
         * 
         */
        public Builder params(Output<String> params) {
            $.params = params;
            return this;
        }

        /**
         * @param params Remediation parameter.
         * 
         * @return builder
         * 
         */
        public Builder params(String params) {
            return params(Output.of(params));
        }

        /**
         * @param remediationSourceType Remediation resource type, valid values: `ALIYUN` , `CUSTOMER`.
         * 
         * @return builder
         * 
         */
        public Builder remediationSourceType(@Nullable Output<String> remediationSourceType) {
            $.remediationSourceType = remediationSourceType;
            return this;
        }

        /**
         * @param remediationSourceType Remediation resource type, valid values: `ALIYUN` , `CUSTOMER`.
         * 
         * @return builder
         * 
         */
        public Builder remediationSourceType(String remediationSourceType) {
            return remediationSourceType(Output.of(remediationSourceType));
        }

        /**
         * @param remediationTemplateId Remediation template ID.
         * 
         * @return builder
         * 
         */
        public Builder remediationTemplateId(Output<String> remediationTemplateId) {
            $.remediationTemplateId = remediationTemplateId;
            return this;
        }

        /**
         * @param remediationTemplateId Remediation template ID.
         * 
         * @return builder
         * 
         */
        public Builder remediationTemplateId(String remediationTemplateId) {
            return remediationTemplateId(Output.of(remediationTemplateId));
        }

        /**
         * @param remediationType Remediation type, valid values: `OOS`, `FC`.
         * 
         * The following arguments will be discarded. Please use new fields as soon as possible:
         * 
         * @return builder
         * 
         */
        public Builder remediationType(Output<String> remediationType) {
            $.remediationType = remediationType;
            return this;
        }

        /**
         * @param remediationType Remediation type, valid values: `OOS`, `FC`.
         * 
         * The following arguments will be discarded. Please use new fields as soon as possible:
         * 
         * @return builder
         * 
         */
        public Builder remediationType(String remediationType) {
            return remediationType(Output.of(remediationType));
        }

        public RemediationArgs build() {
            if ($.configRuleId == null) {
                throw new MissingRequiredPropertyException("RemediationArgs", "configRuleId");
            }
            if ($.invokeType == null) {
                throw new MissingRequiredPropertyException("RemediationArgs", "invokeType");
            }
            if ($.params == null) {
                throw new MissingRequiredPropertyException("RemediationArgs", "params");
            }
            if ($.remediationTemplateId == null) {
                throw new MissingRequiredPropertyException("RemediationArgs", "remediationTemplateId");
            }
            if ($.remediationType == null) {
                throw new MissingRequiredPropertyException("RemediationArgs", "remediationType");
            }
            return $;
        }
    }

}
