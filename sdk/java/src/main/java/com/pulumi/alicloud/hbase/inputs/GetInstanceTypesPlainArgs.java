// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.hbase.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInstanceTypesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInstanceTypesPlainArgs Empty = new GetInstanceTypesPlainArgs();

    /**
     * The charge type of create hbase cluster instance, `PrePaid` or `PostPaid`.
     * 
     */
    @Import(name="chargeType")
    private @Nullable String chargeType;

    /**
     * @return The charge type of create hbase cluster instance, `PrePaid` or `PostPaid`.
     * 
     */
    public Optional<String> chargeType() {
        return Optional.ofNullable(this.chargeType);
    }

    /**
     * The disk type, `cloudSsd`, `cloudEssdPl1`, `cloudEfficiency`, `localHddPro`, `localSsdPro`.
     * 
     */
    @Import(name="diskType")
    private @Nullable String diskType;

    /**
     * @return The disk type, `cloudSsd`, `cloudEssdPl1`, `cloudEfficiency`, `localHddPro`, `localSsdPro`.
     * 
     */
    public Optional<String> diskType() {
        return Optional.ofNullable(this.diskType);
    }

    /**
     * The engine name, `singlehbase`, `hbase`, `hbaseue`, `bds`.
     * 
     */
    @Import(name="engine")
    private @Nullable String engine;

    /**
     * @return The engine name, `singlehbase`, `hbase`, `hbaseue`, `bds`.
     * 
     */
    public Optional<String> engine() {
        return Optional.ofNullable(this.engine);
    }

    /**
     * The hbase instance type of create hbase cluster instance.
     * 
     */
    @Import(name="instanceType")
    private @Nullable String instanceType;

    /**
     * @return The hbase instance type of create hbase cluster instance.
     * 
     */
    public Optional<String> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The dest region id, default client region.
     * 
     */
    @Import(name="regionId")
    private @Nullable String regionId;

    /**
     * @return The dest region id, default client region.
     * 
     */
    public Optional<String> regionId() {
        return Optional.ofNullable(this.regionId);
    }

    /**
     * The engine version, singlehbase/hbase=1.1/2.0, bds=1.0.
     * 
     */
    @Import(name="version")
    private @Nullable String version;

    /**
     * @return The engine version, singlehbase/hbase=1.1/2.0, bds=1.0.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    /**
     * The zone id, belong to regionId.
     * 
     */
    @Import(name="zoneId")
    private @Nullable String zoneId;

    /**
     * @return The zone id, belong to regionId.
     * 
     */
    public Optional<String> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private GetInstanceTypesPlainArgs() {}

    private GetInstanceTypesPlainArgs(GetInstanceTypesPlainArgs $) {
        this.chargeType = $.chargeType;
        this.diskType = $.diskType;
        this.engine = $.engine;
        this.instanceType = $.instanceType;
        this.outputFile = $.outputFile;
        this.regionId = $.regionId;
        this.version = $.version;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstanceTypesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstanceTypesPlainArgs $;

        public Builder() {
            $ = new GetInstanceTypesPlainArgs();
        }

        public Builder(GetInstanceTypesPlainArgs defaults) {
            $ = new GetInstanceTypesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param chargeType The charge type of create hbase cluster instance, `PrePaid` or `PostPaid`.
         * 
         * @return builder
         * 
         */
        public Builder chargeType(@Nullable String chargeType) {
            $.chargeType = chargeType;
            return this;
        }

        /**
         * @param diskType The disk type, `cloudSsd`, `cloudEssdPl1`, `cloudEfficiency`, `localHddPro`, `localSsdPro`.
         * 
         * @return builder
         * 
         */
        public Builder diskType(@Nullable String diskType) {
            $.diskType = diskType;
            return this;
        }

        /**
         * @param engine The engine name, `singlehbase`, `hbase`, `hbaseue`, `bds`.
         * 
         * @return builder
         * 
         */
        public Builder engine(@Nullable String engine) {
            $.engine = engine;
            return this;
        }

        /**
         * @param instanceType The hbase instance type of create hbase cluster instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable String instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param regionId The dest region id, default client region.
         * 
         * @return builder
         * 
         */
        public Builder regionId(@Nullable String regionId) {
            $.regionId = regionId;
            return this;
        }

        /**
         * @param version The engine version, singlehbase/hbase=1.1/2.0, bds=1.0.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable String version) {
            $.version = version;
            return this;
        }

        /**
         * @param zoneId The zone id, belong to regionId.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable String zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        public GetInstanceTypesPlainArgs build() {
            return $;
        }
    }

}
