// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WafRuleConfigActionsBypass {
    /**
     * @return The IDs of custom rules to skip.
     * 
     */
    private @Nullable List<Integer> customRules;
    /**
     * @return The IDs of specific managed rules to skip.
     * 
     */
    private @Nullable List<Integer> regularRules;
    /**
     * @return The types of managed rules to skip.
     * 
     */
    private @Nullable List<String> regularTypes;
    /**
     * @return The scope that is skipped when requests match conditions defined in the whitelist rule.
     * 
     */
    private @Nullable String skip;
    /**
     * @return The rule categories that are skipped when requests match conditions defined in the whitelist rule.
     * 
     */
    private @Nullable List<String> tags;

    private WafRuleConfigActionsBypass() {}
    /**
     * @return The IDs of custom rules to skip.
     * 
     */
    public List<Integer> customRules() {
        return this.customRules == null ? List.of() : this.customRules;
    }
    /**
     * @return The IDs of specific managed rules to skip.
     * 
     */
    public List<Integer> regularRules() {
        return this.regularRules == null ? List.of() : this.regularRules;
    }
    /**
     * @return The types of managed rules to skip.
     * 
     */
    public List<String> regularTypes() {
        return this.regularTypes == null ? List.of() : this.regularTypes;
    }
    /**
     * @return The scope that is skipped when requests match conditions defined in the whitelist rule.
     * 
     */
    public Optional<String> skip() {
        return Optional.ofNullable(this.skip);
    }
    /**
     * @return The rule categories that are skipped when requests match conditions defined in the whitelist rule.
     * 
     */
    public List<String> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WafRuleConfigActionsBypass defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<Integer> customRules;
        private @Nullable List<Integer> regularRules;
        private @Nullable List<String> regularTypes;
        private @Nullable String skip;
        private @Nullable List<String> tags;
        public Builder() {}
        public Builder(WafRuleConfigActionsBypass defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customRules = defaults.customRules;
    	      this.regularRules = defaults.regularRules;
    	      this.regularTypes = defaults.regularTypes;
    	      this.skip = defaults.skip;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder customRules(@Nullable List<Integer> customRules) {

            this.customRules = customRules;
            return this;
        }
        public Builder customRules(Integer... customRules) {
            return customRules(List.of(customRules));
        }
        @CustomType.Setter
        public Builder regularRules(@Nullable List<Integer> regularRules) {

            this.regularRules = regularRules;
            return this;
        }
        public Builder regularRules(Integer... regularRules) {
            return regularRules(List.of(regularRules));
        }
        @CustomType.Setter
        public Builder regularTypes(@Nullable List<String> regularTypes) {

            this.regularTypes = regularTypes;
            return this;
        }
        public Builder regularTypes(String... regularTypes) {
            return regularTypes(List.of(regularTypes));
        }
        @CustomType.Setter
        public Builder skip(@Nullable String skip) {

            this.skip = skip;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<String> tags) {

            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public WafRuleConfigActionsBypass build() {
            final var _resultValue = new WafRuleConfigActionsBypass();
            _resultValue.customRules = customRules;
            _resultValue.regularRules = regularRules;
            _resultValue.regularTypes = regularTypes;
            _resultValue.skip = skip;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
