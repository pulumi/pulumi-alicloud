// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SiteOriginClientCertificateState extends com.pulumi.resources.ResourceArgs {

    public static final SiteOriginClientCertificateState Empty = new SiteOriginClientCertificateState();

    /**
     * The certificate content.
     * 
     */
    @Import(name="certificate")
    private @Nullable Output<String> certificate;

    /**
     * @return The certificate content.
     * 
     */
    public Optional<Output<String>> certificate() {
        return Optional.ofNullable(this.certificate);
    }

    /**
     * The time when the certificate was created.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The time when the certificate was created.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The private key of the certificate.
     * 
     */
    @Import(name="privateKey")
    private @Nullable Output<String> privateKey;

    /**
     * @return The private key of the certificate.
     * 
     */
    public Optional<Output<String>> privateKey() {
        return Optional.ofNullable(this.privateKey);
    }

    /**
     * Site ID.
     * 
     */
    @Import(name="siteId")
    private @Nullable Output<Integer> siteId;

    /**
     * @return Site ID.
     * 
     */
    public Optional<Output<Integer>> siteId() {
        return Optional.ofNullable(this.siteId);
    }

    /**
     * The certificate ID on ESA.
     * 
     */
    @Import(name="siteOriginClientCertificateId")
    private @Nullable Output<String> siteOriginClientCertificateId;

    /**
     * @return The certificate ID on ESA.
     * 
     */
    public Optional<Output<String>> siteOriginClientCertificateId() {
        return Optional.ofNullable(this.siteOriginClientCertificateId);
    }

    /**
     * The certificate name.
     * 
     */
    @Import(name="siteOriginClientCertificateName")
    private @Nullable Output<String> siteOriginClientCertificateName;

    /**
     * @return The certificate name.
     * 
     */
    public Optional<Output<String>> siteOriginClientCertificateName() {
        return Optional.ofNullable(this.siteOriginClientCertificateName);
    }

    /**
     * The status of the certificate.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the certificate.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private SiteOriginClientCertificateState() {}

    private SiteOriginClientCertificateState(SiteOriginClientCertificateState $) {
        this.certificate = $.certificate;
        this.createTime = $.createTime;
        this.privateKey = $.privateKey;
        this.siteId = $.siteId;
        this.siteOriginClientCertificateId = $.siteOriginClientCertificateId;
        this.siteOriginClientCertificateName = $.siteOriginClientCertificateName;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SiteOriginClientCertificateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SiteOriginClientCertificateState $;

        public Builder() {
            $ = new SiteOriginClientCertificateState();
        }

        public Builder(SiteOriginClientCertificateState defaults) {
            $ = new SiteOriginClientCertificateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificate The certificate content.
         * 
         * @return builder
         * 
         */
        public Builder certificate(@Nullable Output<String> certificate) {
            $.certificate = certificate;
            return this;
        }

        /**
         * @param certificate The certificate content.
         * 
         * @return builder
         * 
         */
        public Builder certificate(String certificate) {
            return certificate(Output.of(certificate));
        }

        /**
         * @param createTime The time when the certificate was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The time when the certificate was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param privateKey The private key of the certificate.
         * 
         * @return builder
         * 
         */
        public Builder privateKey(@Nullable Output<String> privateKey) {
            $.privateKey = privateKey;
            return this;
        }

        /**
         * @param privateKey The private key of the certificate.
         * 
         * @return builder
         * 
         */
        public Builder privateKey(String privateKey) {
            return privateKey(Output.of(privateKey));
        }

        /**
         * @param siteId Site ID.
         * 
         * @return builder
         * 
         */
        public Builder siteId(@Nullable Output<Integer> siteId) {
            $.siteId = siteId;
            return this;
        }

        /**
         * @param siteId Site ID.
         * 
         * @return builder
         * 
         */
        public Builder siteId(Integer siteId) {
            return siteId(Output.of(siteId));
        }

        /**
         * @param siteOriginClientCertificateId The certificate ID on ESA.
         * 
         * @return builder
         * 
         */
        public Builder siteOriginClientCertificateId(@Nullable Output<String> siteOriginClientCertificateId) {
            $.siteOriginClientCertificateId = siteOriginClientCertificateId;
            return this;
        }

        /**
         * @param siteOriginClientCertificateId The certificate ID on ESA.
         * 
         * @return builder
         * 
         */
        public Builder siteOriginClientCertificateId(String siteOriginClientCertificateId) {
            return siteOriginClientCertificateId(Output.of(siteOriginClientCertificateId));
        }

        /**
         * @param siteOriginClientCertificateName The certificate name.
         * 
         * @return builder
         * 
         */
        public Builder siteOriginClientCertificateName(@Nullable Output<String> siteOriginClientCertificateName) {
            $.siteOriginClientCertificateName = siteOriginClientCertificateName;
            return this;
        }

        /**
         * @param siteOriginClientCertificateName The certificate name.
         * 
         * @return builder
         * 
         */
        public Builder siteOriginClientCertificateName(String siteOriginClientCertificateName) {
            return siteOriginClientCertificateName(Output.of(siteOriginClientCertificateName));
        }

        /**
         * @param status The status of the certificate.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the certificate.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public SiteOriginClientCertificateState build() {
            return $;
        }
    }

}
