// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTransitRouterRouteTableAssociationsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTransitRouterRouteTableAssociationsPlainArgs Empty = new GetTransitRouterRouteTableAssociationsPlainArgs();

    /**
     * A list of CEN Transit Router Route Table Association IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable List<String> ids;

    /**
     * @return A list of CEN Transit Router Route Table Association IDs.
     * 
     */
    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The status of the route table, including `Active`, `Associating`, `Dissociating`.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return The status of the route table, including `Active`, `Associating`, `Dissociating`.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The ID of the network instance connection.
     * 
     */
    @Import(name="transitRouterAttachmentId")
    private @Nullable String transitRouterAttachmentId;

    /**
     * @return The ID of the network instance connection.
     * 
     */
    public Optional<String> transitRouterAttachmentId() {
        return Optional.ofNullable(this.transitRouterAttachmentId);
    }

    /**
     * The ID of the next hop.
     * 
     */
    @Import(name="transitRouterAttachmentResourceId")
    private @Nullable String transitRouterAttachmentResourceId;

    /**
     * @return The ID of the next hop.
     * 
     */
    public Optional<String> transitRouterAttachmentResourceId() {
        return Optional.ofNullable(this.transitRouterAttachmentResourceId);
    }

    /**
     * The type of next hop. Valid values:
     * * `VPC`: virtual private cloud (VPC)
     * * `VBR`: virtual border router (VBR)
     * * `TR`: transit router
     * * `VPN`: VPN attachment
     * 
     */
    @Import(name="transitRouterAttachmentResourceType")
    private @Nullable String transitRouterAttachmentResourceType;

    /**
     * @return The type of next hop. Valid values:
     * * `VPC`: virtual private cloud (VPC)
     * * `VBR`: virtual border router (VBR)
     * * `TR`: transit router
     * * `VPN`: VPN attachment
     * 
     */
    public Optional<String> transitRouterAttachmentResourceType() {
        return Optional.ofNullable(this.transitRouterAttachmentResourceType);
    }

    /**
     * The ID of the route table of the Enterprise Edition transit router.
     * 
     */
    @Import(name="transitRouterRouteTableId")
    private @Nullable String transitRouterRouteTableId;

    /**
     * @return The ID of the route table of the Enterprise Edition transit router.
     * 
     */
    public Optional<String> transitRouterRouteTableId() {
        return Optional.ofNullable(this.transitRouterRouteTableId);
    }

    private GetTransitRouterRouteTableAssociationsPlainArgs() {}

    private GetTransitRouterRouteTableAssociationsPlainArgs(GetTransitRouterRouteTableAssociationsPlainArgs $) {
        this.ids = $.ids;
        this.outputFile = $.outputFile;
        this.status = $.status;
        this.transitRouterAttachmentId = $.transitRouterAttachmentId;
        this.transitRouterAttachmentResourceId = $.transitRouterAttachmentResourceId;
        this.transitRouterAttachmentResourceType = $.transitRouterAttachmentResourceType;
        this.transitRouterRouteTableId = $.transitRouterRouteTableId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTransitRouterRouteTableAssociationsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTransitRouterRouteTableAssociationsPlainArgs $;

        public Builder() {
            $ = new GetTransitRouterRouteTableAssociationsPlainArgs();
        }

        public Builder(GetTransitRouterRouteTableAssociationsPlainArgs defaults) {
            $ = new GetTransitRouterRouteTableAssociationsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ids A list of CEN Transit Router Route Table Association IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of CEN Transit Router Route Table Association IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param status The status of the route table, including `Active`, `Associating`, `Dissociating`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        /**
         * @param transitRouterAttachmentId The ID of the network instance connection.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentId(@Nullable String transitRouterAttachmentId) {
            $.transitRouterAttachmentId = transitRouterAttachmentId;
            return this;
        }

        /**
         * @param transitRouterAttachmentResourceId The ID of the next hop.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentResourceId(@Nullable String transitRouterAttachmentResourceId) {
            $.transitRouterAttachmentResourceId = transitRouterAttachmentResourceId;
            return this;
        }

        /**
         * @param transitRouterAttachmentResourceType The type of next hop. Valid values:
         * * `VPC`: virtual private cloud (VPC)
         * * `VBR`: virtual border router (VBR)
         * * `TR`: transit router
         * * `VPN`: VPN attachment
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentResourceType(@Nullable String transitRouterAttachmentResourceType) {
            $.transitRouterAttachmentResourceType = transitRouterAttachmentResourceType;
            return this;
        }

        /**
         * @param transitRouterRouteTableId The ID of the route table of the Enterprise Edition transit router.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterRouteTableId(@Nullable String transitRouterRouteTableId) {
            $.transitRouterRouteTableId = transitRouterRouteTableId;
            return this;
        }

        public GetTransitRouterRouteTableAssociationsPlainArgs build() {
            return $;
        }
    }

}
