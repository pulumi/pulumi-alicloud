// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.quotas.inputs;

import com.pulumi.alicloud.quotas.inputs.TemplateQuotaDimensionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TemplateQuotaState extends com.pulumi.resources.ResourceArgs {

    public static final TemplateQuotaState Empty = new TemplateQuotaState();

    /**
     * Quota application value.
     * 
     */
    @Import(name="desireValue")
    private @Nullable Output<Double> desireValue;

    /**
     * @return Quota application value.
     * 
     */
    public Optional<Output<Double>> desireValue() {
        return Optional.ofNullable(this.desireValue);
    }

    /**
     * The Quota Dimensions. See `dimensions` below.
     * 
     */
    @Import(name="dimensions")
    private @Nullable Output<List<TemplateQuotaDimensionArgs>> dimensions;

    /**
     * @return The Quota Dimensions. See `dimensions` below.
     * 
     */
    public Optional<Output<List<TemplateQuotaDimensionArgs>>> dimensions() {
        return Optional.ofNullable(this.dimensions);
    }

    /**
     * The UTC time when the quota takes effect.
     * 
     */
    @Import(name="effectiveTime")
    private @Nullable Output<String> effectiveTime;

    /**
     * @return The UTC time when the quota takes effect.
     * 
     */
    public Optional<Output<String>> effectiveTime() {
        return Optional.ofNullable(this.effectiveTime);
    }

    /**
     * The language of the quota alert notification. Value:
     * - zh: Chinese.
     * - en: English.
     * 
     */
    @Import(name="envLanguage")
    private @Nullable Output<String> envLanguage;

    /**
     * @return The language of the quota alert notification. Value:
     * - zh: Chinese.
     * - en: English.
     * 
     */
    public Optional<Output<String>> envLanguage() {
        return Optional.ofNullable(this.envLanguage);
    }

    /**
     * The UTC time when the quota expires.
     * 
     */
    @Import(name="expireTime")
    private @Nullable Output<String> expireTime;

    /**
     * @return The UTC time when the quota expires.
     * 
     */
    public Optional<Output<String>> expireTime() {
        return Optional.ofNullable(this.expireTime);
    }

    /**
     * Whether to notify the result of quota promotion application. Value:
     * - 0: No.
     * - 3: Yes.
     * 
     */
    @Import(name="noticeType")
    private @Nullable Output<Integer> noticeType;

    /**
     * @return Whether to notify the result of quota promotion application. Value:
     * - 0: No.
     * - 3: Yes.
     * 
     */
    public Optional<Output<Integer>> noticeType() {
        return Optional.ofNullable(this.noticeType);
    }

    /**
     * The abbreviation of the cloud service name.
     * 
     */
    @Import(name="productCode")
    private @Nullable Output<String> productCode;

    /**
     * @return The abbreviation of the cloud service name.
     * 
     */
    public Optional<Output<String>> productCode() {
        return Optional.ofNullable(this.productCode);
    }

    /**
     * The quota ID.
     * 
     */
    @Import(name="quotaActionCode")
    private @Nullable Output<String> quotaActionCode;

    /**
     * @return The quota ID.
     * 
     */
    public Optional<Output<String>> quotaActionCode() {
        return Optional.ofNullable(this.quotaActionCode);
    }

    /**
     * Type of quota. Value:
     * - CommonQuota : Generic quota.
     * - WhiteListLabel: Equity quota.
     * - FlowControl:API rate quota.
     * 
     */
    @Import(name="quotaCategory")
    private @Nullable Output<String> quotaCategory;

    /**
     * @return Type of quota. Value:
     * - CommonQuota : Generic quota.
     * - WhiteListLabel: Equity quota.
     * - FlowControl:API rate quota.
     * 
     */
    public Optional<Output<String>> quotaCategory() {
        return Optional.ofNullable(this.quotaCategory);
    }

    private TemplateQuotaState() {}

    private TemplateQuotaState(TemplateQuotaState $) {
        this.desireValue = $.desireValue;
        this.dimensions = $.dimensions;
        this.effectiveTime = $.effectiveTime;
        this.envLanguage = $.envLanguage;
        this.expireTime = $.expireTime;
        this.noticeType = $.noticeType;
        this.productCode = $.productCode;
        this.quotaActionCode = $.quotaActionCode;
        this.quotaCategory = $.quotaCategory;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TemplateQuotaState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TemplateQuotaState $;

        public Builder() {
            $ = new TemplateQuotaState();
        }

        public Builder(TemplateQuotaState defaults) {
            $ = new TemplateQuotaState(Objects.requireNonNull(defaults));
        }

        /**
         * @param desireValue Quota application value.
         * 
         * @return builder
         * 
         */
        public Builder desireValue(@Nullable Output<Double> desireValue) {
            $.desireValue = desireValue;
            return this;
        }

        /**
         * @param desireValue Quota application value.
         * 
         * @return builder
         * 
         */
        public Builder desireValue(Double desireValue) {
            return desireValue(Output.of(desireValue));
        }

        /**
         * @param dimensions The Quota Dimensions. See `dimensions` below.
         * 
         * @return builder
         * 
         */
        public Builder dimensions(@Nullable Output<List<TemplateQuotaDimensionArgs>> dimensions) {
            $.dimensions = dimensions;
            return this;
        }

        /**
         * @param dimensions The Quota Dimensions. See `dimensions` below.
         * 
         * @return builder
         * 
         */
        public Builder dimensions(List<TemplateQuotaDimensionArgs> dimensions) {
            return dimensions(Output.of(dimensions));
        }

        /**
         * @param dimensions The Quota Dimensions. See `dimensions` below.
         * 
         * @return builder
         * 
         */
        public Builder dimensions(TemplateQuotaDimensionArgs... dimensions) {
            return dimensions(List.of(dimensions));
        }

        /**
         * @param effectiveTime The UTC time when the quota takes effect.
         * 
         * @return builder
         * 
         */
        public Builder effectiveTime(@Nullable Output<String> effectiveTime) {
            $.effectiveTime = effectiveTime;
            return this;
        }

        /**
         * @param effectiveTime The UTC time when the quota takes effect.
         * 
         * @return builder
         * 
         */
        public Builder effectiveTime(String effectiveTime) {
            return effectiveTime(Output.of(effectiveTime));
        }

        /**
         * @param envLanguage The language of the quota alert notification. Value:
         * - zh: Chinese.
         * - en: English.
         * 
         * @return builder
         * 
         */
        public Builder envLanguage(@Nullable Output<String> envLanguage) {
            $.envLanguage = envLanguage;
            return this;
        }

        /**
         * @param envLanguage The language of the quota alert notification. Value:
         * - zh: Chinese.
         * - en: English.
         * 
         * @return builder
         * 
         */
        public Builder envLanguage(String envLanguage) {
            return envLanguage(Output.of(envLanguage));
        }

        /**
         * @param expireTime The UTC time when the quota expires.
         * 
         * @return builder
         * 
         */
        public Builder expireTime(@Nullable Output<String> expireTime) {
            $.expireTime = expireTime;
            return this;
        }

        /**
         * @param expireTime The UTC time when the quota expires.
         * 
         * @return builder
         * 
         */
        public Builder expireTime(String expireTime) {
            return expireTime(Output.of(expireTime));
        }

        /**
         * @param noticeType Whether to notify the result of quota promotion application. Value:
         * - 0: No.
         * - 3: Yes.
         * 
         * @return builder
         * 
         */
        public Builder noticeType(@Nullable Output<Integer> noticeType) {
            $.noticeType = noticeType;
            return this;
        }

        /**
         * @param noticeType Whether to notify the result of quota promotion application. Value:
         * - 0: No.
         * - 3: Yes.
         * 
         * @return builder
         * 
         */
        public Builder noticeType(Integer noticeType) {
            return noticeType(Output.of(noticeType));
        }

        /**
         * @param productCode The abbreviation of the cloud service name.
         * 
         * @return builder
         * 
         */
        public Builder productCode(@Nullable Output<String> productCode) {
            $.productCode = productCode;
            return this;
        }

        /**
         * @param productCode The abbreviation of the cloud service name.
         * 
         * @return builder
         * 
         */
        public Builder productCode(String productCode) {
            return productCode(Output.of(productCode));
        }

        /**
         * @param quotaActionCode The quota ID.
         * 
         * @return builder
         * 
         */
        public Builder quotaActionCode(@Nullable Output<String> quotaActionCode) {
            $.quotaActionCode = quotaActionCode;
            return this;
        }

        /**
         * @param quotaActionCode The quota ID.
         * 
         * @return builder
         * 
         */
        public Builder quotaActionCode(String quotaActionCode) {
            return quotaActionCode(Output.of(quotaActionCode));
        }

        /**
         * @param quotaCategory Type of quota. Value:
         * - CommonQuota : Generic quota.
         * - WhiteListLabel: Equity quota.
         * - FlowControl:API rate quota.
         * 
         * @return builder
         * 
         */
        public Builder quotaCategory(@Nullable Output<String> quotaCategory) {
            $.quotaCategory = quotaCategory;
            return this;
        }

        /**
         * @param quotaCategory Type of quota. Value:
         * - CommonQuota : Generic quota.
         * - WhiteListLabel: Equity quota.
         * - FlowControl:API rate quota.
         * 
         * @return builder
         * 
         */
        public Builder quotaCategory(String quotaCategory) {
            return quotaCategory(Output.of(quotaCategory));
        }

        public TemplateQuotaState build() {
            return $;
        }
    }

}
