// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs;

import com.pulumi.alicloud.cs.inputs.ManagedKubernetesAddonArgs;
import com.pulumi.alicloud.cs.inputs.ManagedKubernetesDeleteOptionArgs;
import com.pulumi.alicloud.cs.inputs.ManagedKubernetesMaintenanceWindowArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedKubernetesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedKubernetesArgs Empty = new ManagedKubernetesArgs();

    @Import(name="addons")
    private @Nullable Output<List<ManagedKubernetesAddonArgs>> addons;

    public Optional<Output<List<ManagedKubernetesAddonArgs>>> addons() {
        return Optional.ofNullable(this.addons);
    }

    @Import(name="apiAudiences")
    private @Nullable Output<List<String>> apiAudiences;

    public Optional<Output<List<String>>> apiAudiences() {
        return Optional.ofNullable(this.apiAudiences);
    }

    /**
     * The base64 encoded client certificate data required to communicate with your cluster. Add this to the client-certificate-data section of the kubeconfig file for your cluster.
     * 
     */
    @Import(name="clientCert")
    private @Nullable Output<String> clientCert;

    /**
     * @return The base64 encoded client certificate data required to communicate with your cluster. Add this to the client-certificate-data section of the kubeconfig file for your cluster.
     * 
     */
    public Optional<Output<String>> clientCert() {
        return Optional.ofNullable(this.clientCert);
    }

    /**
     * The base64 encoded client key data required to communicate with your cluster. Add this to the client-key-data section of the kubeconfig file for your cluster.
     * 
     */
    @Import(name="clientKey")
    private @Nullable Output<String> clientKey;

    /**
     * @return The base64 encoded client key data required to communicate with your cluster. Add this to the client-key-data section of the kubeconfig file for your cluster.
     * 
     */
    public Optional<Output<String>> clientKey() {
        return Optional.ofNullable(this.clientKey);
    }

    @Import(name="clusterCaCert")
    private @Nullable Output<String> clusterCaCert;

    public Optional<Output<String>> clusterCaCert() {
        return Optional.ofNullable(this.clusterCaCert);
    }

    /**
     * cluster local domain
     * 
     */
    @Import(name="clusterDomain")
    private @Nullable Output<String> clusterDomain;

    /**
     * @return cluster local domain
     * 
     */
    public Optional<Output<String>> clusterDomain() {
        return Optional.ofNullable(this.clusterDomain);
    }

    @Import(name="clusterSpec")
    private @Nullable Output<String> clusterSpec;

    public Optional<Output<String>> clusterSpec() {
        return Optional.ofNullable(this.clusterSpec);
    }

    @Import(name="controlPlaneLogComponents")
    private @Nullable Output<List<String>> controlPlaneLogComponents;

    public Optional<Output<List<String>>> controlPlaneLogComponents() {
        return Optional.ofNullable(this.controlPlaneLogComponents);
    }

    @Import(name="controlPlaneLogProject")
    private @Nullable Output<String> controlPlaneLogProject;

    public Optional<Output<String>> controlPlaneLogProject() {
        return Optional.ofNullable(this.controlPlaneLogProject);
    }

    @Import(name="controlPlaneLogTtl")
    private @Nullable Output<String> controlPlaneLogTtl;

    public Optional<Output<String>> controlPlaneLogTtl() {
        return Optional.ofNullable(this.controlPlaneLogTtl);
    }

    @Import(name="customSan")
    private @Nullable Output<String> customSan;

    public Optional<Output<String>> customSan() {
        return Optional.ofNullable(this.customSan);
    }

    @Import(name="deleteOptions")
    private @Nullable Output<List<ManagedKubernetesDeleteOptionArgs>> deleteOptions;

    public Optional<Output<List<ManagedKubernetesDeleteOptionArgs>>> deleteOptions() {
        return Optional.ofNullable(this.deleteOptions);
    }

    @Import(name="deletionProtection")
    private @Nullable Output<Boolean> deletionProtection;

    public Optional<Output<Boolean>> deletionProtection() {
        return Optional.ofNullable(this.deletionProtection);
    }

    @Import(name="enableRrsa")
    private @Nullable Output<Boolean> enableRrsa;

    public Optional<Output<Boolean>> enableRrsa() {
        return Optional.ofNullable(this.enableRrsa);
    }

    /**
     * disk encryption key, only in ack-pro
     * 
     */
    @Import(name="encryptionProviderKey")
    private @Nullable Output<String> encryptionProviderKey;

    /**
     * @return disk encryption key, only in ack-pro
     * 
     */
    public Optional<Output<String>> encryptionProviderKey() {
        return Optional.ofNullable(this.encryptionProviderKey);
    }

    @Import(name="isEnterpriseSecurityGroup")
    private @Nullable Output<Boolean> isEnterpriseSecurityGroup;

    public Optional<Output<Boolean>> isEnterpriseSecurityGroup() {
        return Optional.ofNullable(this.isEnterpriseSecurityGroup);
    }

    @Import(name="loadBalancerSpec")
    private @Nullable Output<String> loadBalancerSpec;

    public Optional<Output<String>> loadBalancerSpec() {
        return Optional.ofNullable(this.loadBalancerSpec);
    }

    @Import(name="maintenanceWindow")
    private @Nullable Output<ManagedKubernetesMaintenanceWindowArgs> maintenanceWindow;

    public Optional<Output<ManagedKubernetesMaintenanceWindowArgs>> maintenanceWindow() {
        return Optional.ofNullable(this.maintenanceWindow);
    }

    /**
     * Node name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Node name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="namePrefix")
    private @Nullable Output<String> namePrefix;

    public Optional<Output<String>> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    @Import(name="newNatGateway")
    private @Nullable Output<Boolean> newNatGateway;

    public Optional<Output<Boolean>> newNatGateway() {
        return Optional.ofNullable(this.newNatGateway);
    }

    @Import(name="nodeCidrMask")
    private @Nullable Output<Integer> nodeCidrMask;

    public Optional<Output<Integer>> nodeCidrMask() {
        return Optional.ofNullable(this.nodeCidrMask);
    }

    @Import(name="podCidr")
    private @Nullable Output<String> podCidr;

    public Optional<Output<String>> podCidr() {
        return Optional.ofNullable(this.podCidr);
    }

    @Import(name="podVswitchIds")
    private @Nullable Output<List<String>> podVswitchIds;

    public Optional<Output<List<String>>> podVswitchIds() {
        return Optional.ofNullable(this.podVswitchIds);
    }

    @Import(name="proxyMode")
    private @Nullable Output<String> proxyMode;

    public Optional<Output<String>> proxyMode() {
        return Optional.ofNullable(this.proxyMode);
    }

    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    @Import(name="retainResources")
    private @Nullable Output<List<String>> retainResources;

    public Optional<Output<List<String>>> retainResources() {
        return Optional.ofNullable(this.retainResources);
    }

    @Import(name="securityGroupId")
    private @Nullable Output<String> securityGroupId;

    public Optional<Output<String>> securityGroupId() {
        return Optional.ofNullable(this.securityGroupId);
    }

    @Import(name="serviceAccountIssuer")
    private @Nullable Output<String> serviceAccountIssuer;

    public Optional<Output<String>> serviceAccountIssuer() {
        return Optional.ofNullable(this.serviceAccountIssuer);
    }

    @Import(name="serviceCidr")
    private @Nullable Output<String> serviceCidr;

    public Optional<Output<String>> serviceCidr() {
        return Optional.ofNullable(this.serviceCidr);
    }

    @Import(name="slbInternetEnabled")
    private @Nullable Output<Boolean> slbInternetEnabled;

    public Optional<Output<Boolean>> slbInternetEnabled() {
        return Optional.ofNullable(this.slbInternetEnabled);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="timezone")
    private @Nullable Output<String> timezone;

    public Optional<Output<String>> timezone() {
        return Optional.ofNullable(this.timezone);
    }

    @Import(name="userCa")
    private @Nullable Output<String> userCa;

    public Optional<Output<String>> userCa() {
        return Optional.ofNullable(this.userCa);
    }

    @Import(name="version")
    private @Nullable Output<String> version;

    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    @Import(name="workerVswitchIds", required=true)
    private Output<List<String>> workerVswitchIds;

    public Output<List<String>> workerVswitchIds() {
        return this.workerVswitchIds;
    }

    private ManagedKubernetesArgs() {}

    private ManagedKubernetesArgs(ManagedKubernetesArgs $) {
        this.addons = $.addons;
        this.apiAudiences = $.apiAudiences;
        this.clientCert = $.clientCert;
        this.clientKey = $.clientKey;
        this.clusterCaCert = $.clusterCaCert;
        this.clusterDomain = $.clusterDomain;
        this.clusterSpec = $.clusterSpec;
        this.controlPlaneLogComponents = $.controlPlaneLogComponents;
        this.controlPlaneLogProject = $.controlPlaneLogProject;
        this.controlPlaneLogTtl = $.controlPlaneLogTtl;
        this.customSan = $.customSan;
        this.deleteOptions = $.deleteOptions;
        this.deletionProtection = $.deletionProtection;
        this.enableRrsa = $.enableRrsa;
        this.encryptionProviderKey = $.encryptionProviderKey;
        this.isEnterpriseSecurityGroup = $.isEnterpriseSecurityGroup;
        this.loadBalancerSpec = $.loadBalancerSpec;
        this.maintenanceWindow = $.maintenanceWindow;
        this.name = $.name;
        this.namePrefix = $.namePrefix;
        this.newNatGateway = $.newNatGateway;
        this.nodeCidrMask = $.nodeCidrMask;
        this.podCidr = $.podCidr;
        this.podVswitchIds = $.podVswitchIds;
        this.proxyMode = $.proxyMode;
        this.resourceGroupId = $.resourceGroupId;
        this.retainResources = $.retainResources;
        this.securityGroupId = $.securityGroupId;
        this.serviceAccountIssuer = $.serviceAccountIssuer;
        this.serviceCidr = $.serviceCidr;
        this.slbInternetEnabled = $.slbInternetEnabled;
        this.tags = $.tags;
        this.timezone = $.timezone;
        this.userCa = $.userCa;
        this.version = $.version;
        this.workerVswitchIds = $.workerVswitchIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedKubernetesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedKubernetesArgs $;

        public Builder() {
            $ = new ManagedKubernetesArgs();
        }

        public Builder(ManagedKubernetesArgs defaults) {
            $ = new ManagedKubernetesArgs(Objects.requireNonNull(defaults));
        }

        public Builder addons(@Nullable Output<List<ManagedKubernetesAddonArgs>> addons) {
            $.addons = addons;
            return this;
        }

        public Builder addons(List<ManagedKubernetesAddonArgs> addons) {
            return addons(Output.of(addons));
        }

        public Builder addons(ManagedKubernetesAddonArgs... addons) {
            return addons(List.of(addons));
        }

        public Builder apiAudiences(@Nullable Output<List<String>> apiAudiences) {
            $.apiAudiences = apiAudiences;
            return this;
        }

        public Builder apiAudiences(List<String> apiAudiences) {
            return apiAudiences(Output.of(apiAudiences));
        }

        public Builder apiAudiences(String... apiAudiences) {
            return apiAudiences(List.of(apiAudiences));
        }

        /**
         * @param clientCert The base64 encoded client certificate data required to communicate with your cluster. Add this to the client-certificate-data section of the kubeconfig file for your cluster.
         * 
         * @return builder
         * 
         */
        public Builder clientCert(@Nullable Output<String> clientCert) {
            $.clientCert = clientCert;
            return this;
        }

        /**
         * @param clientCert The base64 encoded client certificate data required to communicate with your cluster. Add this to the client-certificate-data section of the kubeconfig file for your cluster.
         * 
         * @return builder
         * 
         */
        public Builder clientCert(String clientCert) {
            return clientCert(Output.of(clientCert));
        }

        /**
         * @param clientKey The base64 encoded client key data required to communicate with your cluster. Add this to the client-key-data section of the kubeconfig file for your cluster.
         * 
         * @return builder
         * 
         */
        public Builder clientKey(@Nullable Output<String> clientKey) {
            $.clientKey = clientKey;
            return this;
        }

        /**
         * @param clientKey The base64 encoded client key data required to communicate with your cluster. Add this to the client-key-data section of the kubeconfig file for your cluster.
         * 
         * @return builder
         * 
         */
        public Builder clientKey(String clientKey) {
            return clientKey(Output.of(clientKey));
        }

        public Builder clusterCaCert(@Nullable Output<String> clusterCaCert) {
            $.clusterCaCert = clusterCaCert;
            return this;
        }

        public Builder clusterCaCert(String clusterCaCert) {
            return clusterCaCert(Output.of(clusterCaCert));
        }

        /**
         * @param clusterDomain cluster local domain
         * 
         * @return builder
         * 
         */
        public Builder clusterDomain(@Nullable Output<String> clusterDomain) {
            $.clusterDomain = clusterDomain;
            return this;
        }

        /**
         * @param clusterDomain cluster local domain
         * 
         * @return builder
         * 
         */
        public Builder clusterDomain(String clusterDomain) {
            return clusterDomain(Output.of(clusterDomain));
        }

        public Builder clusterSpec(@Nullable Output<String> clusterSpec) {
            $.clusterSpec = clusterSpec;
            return this;
        }

        public Builder clusterSpec(String clusterSpec) {
            return clusterSpec(Output.of(clusterSpec));
        }

        public Builder controlPlaneLogComponents(@Nullable Output<List<String>> controlPlaneLogComponents) {
            $.controlPlaneLogComponents = controlPlaneLogComponents;
            return this;
        }

        public Builder controlPlaneLogComponents(List<String> controlPlaneLogComponents) {
            return controlPlaneLogComponents(Output.of(controlPlaneLogComponents));
        }

        public Builder controlPlaneLogComponents(String... controlPlaneLogComponents) {
            return controlPlaneLogComponents(List.of(controlPlaneLogComponents));
        }

        public Builder controlPlaneLogProject(@Nullable Output<String> controlPlaneLogProject) {
            $.controlPlaneLogProject = controlPlaneLogProject;
            return this;
        }

        public Builder controlPlaneLogProject(String controlPlaneLogProject) {
            return controlPlaneLogProject(Output.of(controlPlaneLogProject));
        }

        public Builder controlPlaneLogTtl(@Nullable Output<String> controlPlaneLogTtl) {
            $.controlPlaneLogTtl = controlPlaneLogTtl;
            return this;
        }

        public Builder controlPlaneLogTtl(String controlPlaneLogTtl) {
            return controlPlaneLogTtl(Output.of(controlPlaneLogTtl));
        }

        public Builder customSan(@Nullable Output<String> customSan) {
            $.customSan = customSan;
            return this;
        }

        public Builder customSan(String customSan) {
            return customSan(Output.of(customSan));
        }

        public Builder deleteOptions(@Nullable Output<List<ManagedKubernetesDeleteOptionArgs>> deleteOptions) {
            $.deleteOptions = deleteOptions;
            return this;
        }

        public Builder deleteOptions(List<ManagedKubernetesDeleteOptionArgs> deleteOptions) {
            return deleteOptions(Output.of(deleteOptions));
        }

        public Builder deleteOptions(ManagedKubernetesDeleteOptionArgs... deleteOptions) {
            return deleteOptions(List.of(deleteOptions));
        }

        public Builder deletionProtection(@Nullable Output<Boolean> deletionProtection) {
            $.deletionProtection = deletionProtection;
            return this;
        }

        public Builder deletionProtection(Boolean deletionProtection) {
            return deletionProtection(Output.of(deletionProtection));
        }

        public Builder enableRrsa(@Nullable Output<Boolean> enableRrsa) {
            $.enableRrsa = enableRrsa;
            return this;
        }

        public Builder enableRrsa(Boolean enableRrsa) {
            return enableRrsa(Output.of(enableRrsa));
        }

        /**
         * @param encryptionProviderKey disk encryption key, only in ack-pro
         * 
         * @return builder
         * 
         */
        public Builder encryptionProviderKey(@Nullable Output<String> encryptionProviderKey) {
            $.encryptionProviderKey = encryptionProviderKey;
            return this;
        }

        /**
         * @param encryptionProviderKey disk encryption key, only in ack-pro
         * 
         * @return builder
         * 
         */
        public Builder encryptionProviderKey(String encryptionProviderKey) {
            return encryptionProviderKey(Output.of(encryptionProviderKey));
        }

        public Builder isEnterpriseSecurityGroup(@Nullable Output<Boolean> isEnterpriseSecurityGroup) {
            $.isEnterpriseSecurityGroup = isEnterpriseSecurityGroup;
            return this;
        }

        public Builder isEnterpriseSecurityGroup(Boolean isEnterpriseSecurityGroup) {
            return isEnterpriseSecurityGroup(Output.of(isEnterpriseSecurityGroup));
        }

        public Builder loadBalancerSpec(@Nullable Output<String> loadBalancerSpec) {
            $.loadBalancerSpec = loadBalancerSpec;
            return this;
        }

        public Builder loadBalancerSpec(String loadBalancerSpec) {
            return loadBalancerSpec(Output.of(loadBalancerSpec));
        }

        public Builder maintenanceWindow(@Nullable Output<ManagedKubernetesMaintenanceWindowArgs> maintenanceWindow) {
            $.maintenanceWindow = maintenanceWindow;
            return this;
        }

        public Builder maintenanceWindow(ManagedKubernetesMaintenanceWindowArgs maintenanceWindow) {
            return maintenanceWindow(Output.of(maintenanceWindow));
        }

        /**
         * @param name Node name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Node name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        public Builder namePrefix(String namePrefix) {
            return namePrefix(Output.of(namePrefix));
        }

        public Builder newNatGateway(@Nullable Output<Boolean> newNatGateway) {
            $.newNatGateway = newNatGateway;
            return this;
        }

        public Builder newNatGateway(Boolean newNatGateway) {
            return newNatGateway(Output.of(newNatGateway));
        }

        public Builder nodeCidrMask(@Nullable Output<Integer> nodeCidrMask) {
            $.nodeCidrMask = nodeCidrMask;
            return this;
        }

        public Builder nodeCidrMask(Integer nodeCidrMask) {
            return nodeCidrMask(Output.of(nodeCidrMask));
        }

        public Builder podCidr(@Nullable Output<String> podCidr) {
            $.podCidr = podCidr;
            return this;
        }

        public Builder podCidr(String podCidr) {
            return podCidr(Output.of(podCidr));
        }

        public Builder podVswitchIds(@Nullable Output<List<String>> podVswitchIds) {
            $.podVswitchIds = podVswitchIds;
            return this;
        }

        public Builder podVswitchIds(List<String> podVswitchIds) {
            return podVswitchIds(Output.of(podVswitchIds));
        }

        public Builder podVswitchIds(String... podVswitchIds) {
            return podVswitchIds(List.of(podVswitchIds));
        }

        public Builder proxyMode(@Nullable Output<String> proxyMode) {
            $.proxyMode = proxyMode;
            return this;
        }

        public Builder proxyMode(String proxyMode) {
            return proxyMode(Output.of(proxyMode));
        }

        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        public Builder retainResources(@Nullable Output<List<String>> retainResources) {
            $.retainResources = retainResources;
            return this;
        }

        public Builder retainResources(List<String> retainResources) {
            return retainResources(Output.of(retainResources));
        }

        public Builder retainResources(String... retainResources) {
            return retainResources(List.of(retainResources));
        }

        public Builder securityGroupId(@Nullable Output<String> securityGroupId) {
            $.securityGroupId = securityGroupId;
            return this;
        }

        public Builder securityGroupId(String securityGroupId) {
            return securityGroupId(Output.of(securityGroupId));
        }

        public Builder serviceAccountIssuer(@Nullable Output<String> serviceAccountIssuer) {
            $.serviceAccountIssuer = serviceAccountIssuer;
            return this;
        }

        public Builder serviceAccountIssuer(String serviceAccountIssuer) {
            return serviceAccountIssuer(Output.of(serviceAccountIssuer));
        }

        public Builder serviceCidr(@Nullable Output<String> serviceCidr) {
            $.serviceCidr = serviceCidr;
            return this;
        }

        public Builder serviceCidr(String serviceCidr) {
            return serviceCidr(Output.of(serviceCidr));
        }

        public Builder slbInternetEnabled(@Nullable Output<Boolean> slbInternetEnabled) {
            $.slbInternetEnabled = slbInternetEnabled;
            return this;
        }

        public Builder slbInternetEnabled(Boolean slbInternetEnabled) {
            return slbInternetEnabled(Output.of(slbInternetEnabled));
        }

        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        public Builder timezone(@Nullable Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        public Builder userCa(@Nullable Output<String> userCa) {
            $.userCa = userCa;
            return this;
        }

        public Builder userCa(String userCa) {
            return userCa(Output.of(userCa));
        }

        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        public Builder version(String version) {
            return version(Output.of(version));
        }

        public Builder workerVswitchIds(Output<List<String>> workerVswitchIds) {
            $.workerVswitchIds = workerVswitchIds;
            return this;
        }

        public Builder workerVswitchIds(List<String> workerVswitchIds) {
            return workerVswitchIds(Output.of(workerVswitchIds));
        }

        public Builder workerVswitchIds(String... workerVswitchIds) {
            return workerVswitchIds(List.of(workerVswitchIds));
        }

        public ManagedKubernetesArgs build() {
            if ($.workerVswitchIds == null) {
                throw new MissingRequiredPropertyException("ManagedKubernetesArgs", "workerVswitchIds");
            }
            return $;
        }
    }

}
