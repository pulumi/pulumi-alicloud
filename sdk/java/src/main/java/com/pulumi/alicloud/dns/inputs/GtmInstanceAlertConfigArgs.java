// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dns.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GtmInstanceAlertConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final GtmInstanceAlertConfigArgs Empty = new GtmInstanceAlertConfigArgs();

    /**
     * Whether to configure DingTalk notifications. Valid values: `true`, `false`.
     * 
     */
    @Import(name="dingtalkNotice")
    private @Nullable Output<Boolean> dingtalkNotice;

    /**
     * @return Whether to configure DingTalk notifications. Valid values: `true`, `false`.
     * 
     */
    public Optional<Output<Boolean>> dingtalkNotice() {
        return Optional.ofNullable(this.dingtalkNotice);
    }

    /**
     * Whether to configure mail notification. Valid values: `true`, `false`.
     * 
     */
    @Import(name="emailNotice")
    private @Nullable Output<Boolean> emailNotice;

    /**
     * @return Whether to configure mail notification. Valid values: `true`, `false`.
     * 
     */
    public Optional<Output<Boolean>> emailNotice() {
        return Optional.ofNullable(this.emailNotice);
    }

    /**
     * The Alarm Event Type.
     * - `ADDR_ALERT`: Address not available.
     * - `ADDR_RESUME`: Address Recovery available.
     * - `ADDR_POOL_GROUP_UNAVAILABLE`: Address pool collection not available.
     * - `ADDR_POOL_GROUP_AVAILABLE`: Address pool collection recovery available.
     * - `ACCESS_STRATEGY_POOL_GROUP_SWITCH`: Primary/standby address pool switch.
     * - `MONITOR_NODE_IP_CHANGE`: Monitoring node IP address changes.
     * 
     */
    @Import(name="noticeType")
    private @Nullable Output<String> noticeType;

    /**
     * @return The Alarm Event Type.
     * - `ADDR_ALERT`: Address not available.
     * - `ADDR_RESUME`: Address Recovery available.
     * - `ADDR_POOL_GROUP_UNAVAILABLE`: Address pool collection not available.
     * - `ADDR_POOL_GROUP_AVAILABLE`: Address pool collection recovery available.
     * - `ACCESS_STRATEGY_POOL_GROUP_SWITCH`: Primary/standby address pool switch.
     * - `MONITOR_NODE_IP_CHANGE`: Monitoring node IP address changes.
     * 
     */
    public Optional<Output<String>> noticeType() {
        return Optional.ofNullable(this.noticeType);
    }

    /**
     * Whether to configure SMS notification. Valid values: `true`, `false`.
     * 
     */
    @Import(name="smsNotice")
    private @Nullable Output<Boolean> smsNotice;

    /**
     * @return Whether to configure SMS notification. Valid values: `true`, `false`.
     * 
     */
    public Optional<Output<Boolean>> smsNotice() {
        return Optional.ofNullable(this.smsNotice);
    }

    private GtmInstanceAlertConfigArgs() {}

    private GtmInstanceAlertConfigArgs(GtmInstanceAlertConfigArgs $) {
        this.dingtalkNotice = $.dingtalkNotice;
        this.emailNotice = $.emailNotice;
        this.noticeType = $.noticeType;
        this.smsNotice = $.smsNotice;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GtmInstanceAlertConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GtmInstanceAlertConfigArgs $;

        public Builder() {
            $ = new GtmInstanceAlertConfigArgs();
        }

        public Builder(GtmInstanceAlertConfigArgs defaults) {
            $ = new GtmInstanceAlertConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dingtalkNotice Whether to configure DingTalk notifications. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder dingtalkNotice(@Nullable Output<Boolean> dingtalkNotice) {
            $.dingtalkNotice = dingtalkNotice;
            return this;
        }

        /**
         * @param dingtalkNotice Whether to configure DingTalk notifications. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder dingtalkNotice(Boolean dingtalkNotice) {
            return dingtalkNotice(Output.of(dingtalkNotice));
        }

        /**
         * @param emailNotice Whether to configure mail notification. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder emailNotice(@Nullable Output<Boolean> emailNotice) {
            $.emailNotice = emailNotice;
            return this;
        }

        /**
         * @param emailNotice Whether to configure mail notification. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder emailNotice(Boolean emailNotice) {
            return emailNotice(Output.of(emailNotice));
        }

        /**
         * @param noticeType The Alarm Event Type.
         * - `ADDR_ALERT`: Address not available.
         * - `ADDR_RESUME`: Address Recovery available.
         * - `ADDR_POOL_GROUP_UNAVAILABLE`: Address pool collection not available.
         * - `ADDR_POOL_GROUP_AVAILABLE`: Address pool collection recovery available.
         * - `ACCESS_STRATEGY_POOL_GROUP_SWITCH`: Primary/standby address pool switch.
         * - `MONITOR_NODE_IP_CHANGE`: Monitoring node IP address changes.
         * 
         * @return builder
         * 
         */
        public Builder noticeType(@Nullable Output<String> noticeType) {
            $.noticeType = noticeType;
            return this;
        }

        /**
         * @param noticeType The Alarm Event Type.
         * - `ADDR_ALERT`: Address not available.
         * - `ADDR_RESUME`: Address Recovery available.
         * - `ADDR_POOL_GROUP_UNAVAILABLE`: Address pool collection not available.
         * - `ADDR_POOL_GROUP_AVAILABLE`: Address pool collection recovery available.
         * - `ACCESS_STRATEGY_POOL_GROUP_SWITCH`: Primary/standby address pool switch.
         * - `MONITOR_NODE_IP_CHANGE`: Monitoring node IP address changes.
         * 
         * @return builder
         * 
         */
        public Builder noticeType(String noticeType) {
            return noticeType(Output.of(noticeType));
        }

        /**
         * @param smsNotice Whether to configure SMS notification. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder smsNotice(@Nullable Output<Boolean> smsNotice) {
            $.smsNotice = smsNotice;
            return this;
        }

        /**
         * @param smsNotice Whether to configure SMS notification. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder smsNotice(Boolean smsNotice) {
            return smsNotice(Output.of(smsNotice));
        }

        public GtmInstanceAlertConfigArgs build() {
            return $;
        }
    }

}
