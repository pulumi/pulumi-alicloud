// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ebs;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.ebs.DiskReplicaPairArgs;
import com.pulumi.alicloud.ebs.inputs.DiskReplicaPairState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Elastic Block Storage(EBS) Disk Replica Pair resource.
 * 
 * For information about Elastic Block Storage(EBS) Disk Replica Pair and how to use it, see [What is Disk Replica Pair](https://www.alibabacloud.com/help/en/ecs/developer-reference/api-ebs-2021-07-30-creatediskreplicapair).
 * 
 * &gt; **NOTE:** Available since v1.196.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.ebs.EbsFunctions;
 * import com.pulumi.alicloud.ecs.EcsDisk;
 * import com.pulumi.alicloud.ecs.EcsDiskArgs;
 * import com.pulumi.std.StdFunctions;
 * import com.pulumi.std.inputs.FormatArgs;
 * import com.pulumi.alicloud.ebs.DiskReplicaPair;
 * import com.pulumi.alicloud.ebs.DiskReplicaPairArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("tf-example");
 *         final var default = AlicloudFunctions.getRegions(GetRegionsArgs.builder()
 *             .current(true)
 *             .build());
 * 
 *         final var defaultGetRegions = EbsFunctions.getRegions(GetRegionsArgs.builder()
 *             .regionId(default_.regions()[0].id())
 *             .build());
 * 
 *         var defaultEcsDisk = new EcsDisk("defaultEcsDisk", EcsDiskArgs.builder()
 *             .zoneId(defaultGetRegions.regions()[0].zones()[0].zoneId())
 *             .category("cloud_essd")
 *             .deleteAutoSnapshot(true)
 *             .deleteWithInstance(true)
 *             .description(name)
 *             .diskName(name)
 *             .enableAutoSnapshot(true)
 *             .encrypted(true)
 *             .size(500)
 *             .tags(Map.ofEntries(
 *                 Map.entry("Created", "TF"),
 *                 Map.entry("For", "example"),
 *                 Map.entry("controlledBy", "ear")
 *             ))
 *             .build());
 * 
 *         var destination = new EcsDisk("destination", EcsDiskArgs.builder()
 *             .zoneId(defaultGetRegions.regions()[0].zones()[1].zoneId())
 *             .category("cloud_essd")
 *             .deleteAutoSnapshot(true)
 *             .deleteWithInstance(true)
 *             .description(StdFunctions.format(FormatArgs.builder()
 *                 .input("%s-destination")
 *                 .args(name)
 *                 .build()).result())
 *             .diskName(name)
 *             .enableAutoSnapshot(true)
 *             .encrypted(true)
 *             .size(500)
 *             .tags(Map.ofEntries(
 *                 Map.entry("Created", "TF"),
 *                 Map.entry("For", "example"),
 *                 Map.entry("controlledBy", "ear")
 *             ))
 *             .build());
 * 
 *         var defaultDiskReplicaPair = new DiskReplicaPair("defaultDiskReplicaPair", DiskReplicaPairArgs.builder()
 *             .destinationDiskId(destination.id())
 *             .destinationRegionId(default_.regions()[0].id())
 *             .paymentType("POSTPAY")
 *             .destinationZoneId(destination.zoneId())
 *             .sourceZoneId(defaultEcsDisk.zoneId())
 *             .diskId(defaultEcsDisk.id())
 *             .description(name)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Elastic Block Storage(EBS) Disk Replica Pair can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:ebs/diskReplicaPair:DiskReplicaPair example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:ebs/diskReplicaPair:DiskReplicaPair")
public class DiskReplicaPair extends com.pulumi.resources.CustomResource {
    /**
     * The bandwidth for asynchronous data replication between cloud disks. The unit is Kbps. Value range:
     * - 10240 Kbps: equal to 10 Mbps.
     * - 20480 Kbps: equal to 20 Mbps.
     * - 51200 Kbps: equal to 50 Mbps.
     * - 102400 Kbps: equal to 100 Mbps.
     * 
     * Default value: 10240.
     * This parameter cannot be specified when the ChargeType value is PayAsYouGo The system value is 0, which indicates that the disk is dynamically allocated according to data write changes during asynchronous replication.
     * 
     */
    @Export(name="bandwidth", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> bandwidth;

    /**
     * @return The bandwidth for asynchronous data replication between cloud disks. The unit is Kbps. Value range:
     * - 10240 Kbps: equal to 10 Mbps.
     * - 20480 Kbps: equal to 20 Mbps.
     * - 51200 Kbps: equal to 50 Mbps.
     * - 102400 Kbps: equal to 100 Mbps.
     * 
     * Default value: 10240.
     * This parameter cannot be specified when the ChargeType value is PayAsYouGo The system value is 0, which indicates that the disk is dynamically allocated according to data write changes during asynchronous replication.
     * 
     */
    public Output<Optional<Integer>> bandwidth() {
        return Codegen.optional(this.bandwidth);
    }
    /**
     * The creation time of the resource
     * 
     */
    @Export(name="createTime", refs={Integer.class}, tree="[0]")
    private Output<Integer> createTime;

    /**
     * @return The creation time of the resource
     * 
     */
    public Output<Integer> createTime() {
        return this.createTime;
    }
    /**
     * The description of the asynchronous replication relationship. 2 to 256 English or Chinese characters in length and cannot start with&#39; http:// &#39;or&#39; https.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the asynchronous replication relationship. 2 to 256 English or Chinese characters in length and cannot start with&#39; http:// &#39;or&#39; https.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The ID of the standby disk.
     * 
     */
    @Export(name="destinationDiskId", refs={String.class}, tree="[0]")
    private Output<String> destinationDiskId;

    /**
     * @return The ID of the standby disk.
     * 
     */
    public Output<String> destinationDiskId() {
        return this.destinationDiskId;
    }
    /**
     * The ID of the region to which the disaster recovery site belongs.
     * 
     */
    @Export(name="destinationRegionId", refs={String.class}, tree="[0]")
    private Output<String> destinationRegionId;

    /**
     * @return The ID of the region to which the disaster recovery site belongs.
     * 
     */
    public Output<String> destinationRegionId() {
        return this.destinationRegionId;
    }
    /**
     * The ID of the zone to which the disaster recovery site belongs.
     * 
     */
    @Export(name="destinationZoneId", refs={String.class}, tree="[0]")
    private Output<String> destinationZoneId;

    /**
     * @return The ID of the zone to which the disaster recovery site belongs.
     * 
     */
    public Output<String> destinationZoneId() {
        return this.destinationZoneId;
    }
    /**
     * The ID of the primary disk.
     * 
     */
    @Export(name="diskId", refs={String.class}, tree="[0]")
    private Output<String> diskId;

    /**
     * @return The ID of the primary disk.
     * 
     */
    public Output<String> diskId() {
        return this.diskId;
    }
    /**
     * The name of the asynchronous replication relationship. The length must be 2 to 128 characters in length and must start with a letter or Chinese name. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-).
     * 
     */
    @Export(name="diskReplicaPairName", refs={String.class}, tree="[0]")
    private Output<String> diskReplicaPairName;

    /**
     * @return The name of the asynchronous replication relationship. The length must be 2 to 128 characters in length and must start with a letter or Chinese name. It cannot start with http:// or https. It can contain Chinese, English, numbers, half-width colons (:), underscores (_), half-width periods (.), or dashes (-).
     * 
     */
    public Output<String> diskReplicaPairName() {
        return this.diskReplicaPairName;
    }
    /**
     * Whether to synchronize immediately. Value range:
     * - true: Start data synchronization immediately.
     * - false: Data Synchronization starts after the RPO time period.
     * 
     * Default value: false.
     * 
     */
    @Export(name="oneShot", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> oneShot;

    /**
     * @return Whether to synchronize immediately. Value range:
     * - true: Start data synchronization immediately.
     * - false: Data Synchronization starts after the RPO time period.
     * 
     * Default value: false.
     * 
     */
    public Output<Optional<Boolean>> oneShot() {
        return Codegen.optional(this.oneShot);
    }
    /**
     * . Field &#39;pair_name&#39; has been deprecated from provider version 1.245.0. New field &#39;disk_replica_pair_name&#39; instead.
     * 
     * @deprecated
     * Field &#39;pair_name&#39; has been deprecated since provider version 1.245.0. New field &#39;disk_replica_pair_name&#39; instead.
     * 
     */
    @Deprecated /* Field 'pair_name' has been deprecated since provider version 1.245.0. New field 'disk_replica_pair_name' instead. */
    @Export(name="pairName", refs={String.class}, tree="[0]")
    private Output<String> pairName;

    /**
     * @return . Field &#39;pair_name&#39; has been deprecated from provider version 1.245.0. New field &#39;disk_replica_pair_name&#39; instead.
     * 
     */
    public Output<String> pairName() {
        return this.pairName;
    }
    /**
     * The payment type of the resource
     * 
     */
    @Export(name="paymentType", refs={String.class}, tree="[0]")
    private Output<String> paymentType;

    /**
     * @return The payment type of the resource
     * 
     */
    public Output<String> paymentType() {
        return this.paymentType;
    }
    /**
     * The purchase duration of the asynchronous replication relationship. This parameter is required when &#39;ChargeType = PrePay. The duration unit is specified by&#39;periodunit&#39;, and the value range is:
     * - When &#39;PeriodUnit = Week&#39;, the value range of this parameter is 1, 2, 3, and 4.
     * - When &#39;PeriodUnit = Month&#39;, the value range of this parameter is 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, 60.
     * 
     */
    @Export(name="period", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> period;

    /**
     * @return The purchase duration of the asynchronous replication relationship. This parameter is required when &#39;ChargeType = PrePay. The duration unit is specified by&#39;periodunit&#39;, and the value range is:
     * - When &#39;PeriodUnit = Week&#39;, the value range of this parameter is 1, 2, 3, and 4.
     * - When &#39;PeriodUnit = Month&#39;, the value range of this parameter is 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, 60.
     * 
     */
    public Output<Optional<Integer>> period() {
        return Codegen.optional(this.period);
    }
    /**
     * The unit of the purchase time of the asynchronous replication relationship. Value range:
     * - Week: Week.
     * - Month: Month.
     * 
     * Default value: Month.
     * 
     */
    @Export(name="periodUnit", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> periodUnit;

    /**
     * @return The unit of the purchase time of the asynchronous replication relationship. Value range:
     * - Week: Week.
     * - Month: Month.
     * 
     * Default value: Month.
     * 
     */
    public Output<Optional<String>> periodUnit() {
        return Codegen.optional(this.periodUnit);
    }
    /**
     * The region ID  of the resource
     * 
     */
    @Export(name="regionId", refs={String.class}, tree="[0]")
    private Output<String> regionId;

    /**
     * @return The region ID  of the resource
     * 
     */
    public Output<String> regionId() {
        return this.regionId;
    }
    /**
     * The ID of the resource group
     * 
     */
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * Specifies whether to enable the reverse replication sub-feature. Valid values: true and false. Default value: true.
     * 
     */
    @Export(name="reverseReplicate", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> reverseReplicate;

    /**
     * @return Specifies whether to enable the reverse replication sub-feature. Valid values: true and false. Default value: true.
     * 
     */
    public Output<Optional<Boolean>> reverseReplicate() {
        return Codegen.optional(this.reverseReplicate);
    }
    /**
     * The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
     * 
     */
    @Export(name="rpo", refs={Integer.class}, tree="[0]")
    private Output<Integer> rpo;

    /**
     * @return The RPO value set by the consistency group in seconds. Currently only 900 seconds are supported.
     * 
     */
    public Output<Integer> rpo() {
        return this.rpo;
    }
    /**
     * The ID of the zone to which the production site belongs.
     * 
     */
    @Export(name="sourceZoneId", refs={String.class}, tree="[0]")
    private Output<String> sourceZoneId;

    /**
     * @return The ID of the zone to which the production site belongs.
     * 
     */
    public Output<String> sourceZoneId() {
        return this.sourceZoneId;
    }
    /**
     * The status of the resource
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the resource
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The tag of the resource
     * 
     * The following arguments will be discarded. Please use new fields as soon as possible:
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return The tag of the resource
     * 
     * The following arguments will be discarded. Please use new fields as soon as possible:
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DiskReplicaPair(java.lang.String name) {
        this(name, DiskReplicaPairArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DiskReplicaPair(java.lang.String name, DiskReplicaPairArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DiskReplicaPair(java.lang.String name, DiskReplicaPairArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ebs/diskReplicaPair:DiskReplicaPair", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DiskReplicaPair(java.lang.String name, Output<java.lang.String> id, @Nullable DiskReplicaPairState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ebs/diskReplicaPair:DiskReplicaPair", name, state, makeResourceOptions(options, id), false);
    }

    private static DiskReplicaPairArgs makeArgs(DiskReplicaPairArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DiskReplicaPairArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DiskReplicaPair get(java.lang.String name, Output<java.lang.String> id, @Nullable DiskReplicaPairState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DiskReplicaPair(name, id, state, options);
    }
}
