// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs;

import com.pulumi.alicloud.ecs.inputs.ImageDiskDeviceMappingArgs;
import com.pulumi.alicloud.ecs.inputs.ImageFeaturesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ImageArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImageArgs Empty = new ImageArgs();

    /**
     * The system architecture of the system disk. If you specify a data disk snapshot to create the system disk of the custom image, you must use Architecture to specify the system architecture of the system disk. Valid values: `i386`, `x86\_64`, `arm64`. Default value: `x86\_64`.
     * 
     */
    @Import(name="architecture")
    private @Nullable Output<String> architecture;

    /**
     * @return The system architecture of the system disk. If you specify a data disk snapshot to create the system disk of the custom image, you must use Architecture to specify the system architecture of the system disk. Valid values: `i386`, `x86\_64`, `arm64`. Default value: `x86\_64`.
     * 
     */
    public Optional<Output<String>> architecture() {
        return Optional.ofNullable(this.architecture);
    }

    /**
     * The new boot mode of the image. Valid values:
     * 
     * *   BIOS: Basic Input/Output System (BIOS)
     * 
     * *   UEFI: Unified Extensible Firmware Interface (UEFI)
     * 
     * *   UEFI-Preferred: BIOS and UEFI
     * 
     * &gt; **NOTE:**   Before you change the boot mode, we recommend that you obtain the boot modes supported by the image. If you specify an unsupported boot mode for the image, ECS instances that use the image cannot start as expected. If you do not know which boot modes are supported by the image, we recommend that you use the image check feature to perform a check. For information about the image check feature, see [Overview](https://www.alibabacloud.com/help/en/doc-detail/439819.html).
     * 
     * &gt; **NOTE:**   For information about the UEFI-Preferred boot mode, see [Best practices for ECS instance boot modes](https://www.alibabacloud.com/help/en/doc-detail/2244655.html).
     * 
     */
    @Import(name="bootMode")
    private @Nullable Output<String> bootMode;

    /**
     * @return The new boot mode of the image. Valid values:
     * 
     * *   BIOS: Basic Input/Output System (BIOS)
     * 
     * *   UEFI: Unified Extensible Firmware Interface (UEFI)
     * 
     * *   UEFI-Preferred: BIOS and UEFI
     * 
     * &gt; **NOTE:**   Before you change the boot mode, we recommend that you obtain the boot modes supported by the image. If you specify an unsupported boot mode for the image, ECS instances that use the image cannot start as expected. If you do not know which boot modes are supported by the image, we recommend that you use the image check feature to perform a check. For information about the image check feature, see [Overview](https://www.alibabacloud.com/help/en/doc-detail/439819.html).
     * 
     * &gt; **NOTE:**   For information about the UEFI-Preferred boot mode, see [Best practices for ECS instance boot modes](https://www.alibabacloud.com/help/en/doc-detail/2244655.html).
     * 
     */
    public Optional<Output<String>> bootMode() {
        return Optional.ofNullable(this.bootMode);
    }

    /**
     * Not the public attribute and it used to automatically delete dependence snapshots while deleting the image.
     * 
     */
    @Import(name="deleteAutoSnapshot")
    private @Nullable Output<Boolean> deleteAutoSnapshot;

    /**
     * @return Not the public attribute and it used to automatically delete dependence snapshots while deleting the image.
     * 
     */
    public Optional<Output<Boolean>> deleteAutoSnapshot() {
        return Optional.ofNullable(this.deleteAutoSnapshot);
    }

    /**
     * The new description of the custom image. The description must be 2 to 256 characters in length It cannot start with `http://` or `https://`. This parameter is empty by default, which specifies that the original description is retained.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The new description of the custom image. The description must be 2 to 256 characters in length It cannot start with `http://` or `https://`. This parameter is empty by default, which specifies that the original description is retained.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The mode in which to check the custom image. If you do not specify this parameter, the image is not checked. Only the standard check mode is supported.
     * 
     * &gt; **NOTE:**   This parameter is supported for most Linux and Windows operating system versions. For information about image check items and operating system limits for image check, see [Overview of image check](https://www.alibabacloud.com/help/en/doc-detail/439819.html) and [Operating system limits for image check](https://www.alibabacloud.com/help/en/doc-detail/475800.html).
     * 
     */
    @Import(name="detectionStrategy")
    private @Nullable Output<String> detectionStrategy;

    /**
     * @return The mode in which to check the custom image. If you do not specify this parameter, the image is not checked. Only the standard check mode is supported.
     * 
     * &gt; **NOTE:**   This parameter is supported for most Linux and Windows operating system versions. For information about image check items and operating system limits for image check, see [Overview of image check](https://www.alibabacloud.com/help/en/doc-detail/439819.html) and [Operating system limits for image check](https://www.alibabacloud.com/help/en/doc-detail/475800.html).
     * 
     */
    public Optional<Output<String>> detectionStrategy() {
        return Optional.ofNullable(this.detectionStrategy);
    }

    /**
     * Snapshot information for the image See `diskDeviceMapping` below.
     * 
     */
    @Import(name="diskDeviceMappings")
    private @Nullable Output<List<ImageDiskDeviceMappingArgs>> diskDeviceMappings;

    /**
     * @return Snapshot information for the image See `diskDeviceMapping` below.
     * 
     */
    public Optional<Output<List<ImageDiskDeviceMappingArgs>>> diskDeviceMappings() {
        return Optional.ofNullable(this.diskDeviceMappings);
    }

    /**
     * Features See `features` below.
     * 
     */
    @Import(name="features")
    private @Nullable Output<ImageFeaturesArgs> features;

    /**
     * @return Features See `features` below.
     * 
     */
    public Optional<Output<ImageFeaturesArgs>> features() {
        return Optional.ofNullable(this.features);
    }

    /**
     * Whether to perform forced deletion. Value range:
     * - true: forcibly deletes the custom image, ignoring whether the current image is used by other instances.
     * - false: The custom image is deleted normally. Before deleting the custom image, check whether the current image is used by other instances.
     * 
     * Default value: false
     * 
     */
    @Import(name="force")
    private @Nullable Output<Boolean> force;

    /**
     * @return Whether to perform forced deletion. Value range:
     * - true: forcibly deletes the custom image, ignoring whether the current image is used by other instances.
     * - false: The custom image is deleted normally. Before deleting the custom image, check whether the current image is used by other instances.
     * 
     * Default value: false
     * 
     */
    public Optional<Output<Boolean>> force() {
        return Optional.ofNullable(this.force);
    }

    /**
     * The name of the image family. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty.
     * 
     */
    @Import(name="imageFamily")
    private @Nullable Output<String> imageFamily;

    /**
     * @return The name of the image family. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty.
     * 
     */
    public Optional<Output<String>> imageFamily() {
        return Optional.ofNullable(this.imageFamily);
    }

    /**
     * The name of the custom image. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty. In this case, the original name is retained.
     * 
     */
    @Import(name="imageName")
    private @Nullable Output<String> imageName;

    /**
     * @return The name of the custom image. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty. In this case, the original name is retained.
     * 
     */
    public Optional<Output<String>> imageName() {
        return Optional.ofNullable(this.imageName);
    }

    /**
     * The image version.
     * 
     * &gt; **NOTE:**  If you specify an instance by configuring `InstanceId`, and the instance uses an Alibaba Cloud Marketplace image or a custom image that is created from an Alibaba Cloud Marketplace image, you must leave this parameter empty or set this parameter to the value of ImageVersion of the instance.
     * 
     */
    @Import(name="imageVersion")
    private @Nullable Output<String> imageVersion;

    /**
     * @return The image version.
     * 
     * &gt; **NOTE:**  If you specify an instance by configuring `InstanceId`, and the instance uses an Alibaba Cloud Marketplace image or a custom image that is created from an Alibaba Cloud Marketplace image, you must leave this parameter empty or set this parameter to the value of ImageVersion of the instance.
     * 
     */
    public Optional<Output<String>> imageVersion() {
        return Optional.ofNullable(this.imageVersion);
    }

    /**
     * The instance ID.
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return The instance ID.
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * The type of the license that is used to activate the operating system after the image is imported. Set the value to BYOL. BYOL: The license that comes with the source operating system is used. When you use the BYOL license, make sure that your license key is supported by Alibaba Cloud.
     * 
     */
    @Import(name="licenseType")
    private @Nullable Output<String> licenseType;

    /**
     * @return The type of the license that is used to activate the operating system after the image is imported. Set the value to BYOL. BYOL: The license that comes with the source operating system is used. When you use the BYOL license, make sure that your license key is supported by Alibaba Cloud.
     * 
     */
    public Optional<Output<String>> licenseType() {
        return Optional.ofNullable(this.licenseType);
    }

    /**
     * . Field &#39;name&#39; has been deprecated from provider version 1.227.0. New field &#39;image_name&#39; instead.
     * 
     * @deprecated
     * Field &#39;name&#39; has been deprecated since provider version 1.227.0. New field &#39;image_name&#39; instead.
     * 
     */
    @Deprecated /* Field 'name' has been deprecated since provider version 1.227.0. New field 'image_name' instead. */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return . Field &#39;name&#39; has been deprecated from provider version 1.227.0. New field &#39;image_name&#39; instead.
     * 
     * @deprecated
     * Field &#39;name&#39; has been deprecated since provider version 1.227.0. New field &#39;image_name&#39; instead.
     * 
     */
    @Deprecated /* Field 'name' has been deprecated since provider version 1.227.0. New field 'image_name' instead. */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The operating system distribution for the system disk in the custom image. If you specify a data disk snapshot to create the system disk of the custom image, use Platform to specify the operating system distribution for the system disk. Valid values: `Aliyun`, `Anolis`, `CentOS`, `Ubuntu`, `CoreOS`, `SUSE`, `Debian`, `OpenSUSE`, `FreeBSD`, `RedHat`, `Kylin`, `UOS`, `Fedora`, `Fedora CoreOS`, `CentOS Stream`, `AlmaLinux`, `Rocky Linux`, `Gentoo`, `Customized Linux`, `Others Linux`, `Windows Server 2022`, `Windows Server 2019`, `Windows Server 2016`, `Windows Server 2012`, `Windows Server 2008`, `Windows Server 2003`. Default value: `Others Linux`.
     * 
     */
    @Import(name="platform")
    private @Nullable Output<String> platform;

    /**
     * @return The operating system distribution for the system disk in the custom image. If you specify a data disk snapshot to create the system disk of the custom image, use Platform to specify the operating system distribution for the system disk. Valid values: `Aliyun`, `Anolis`, `CentOS`, `Ubuntu`, `CoreOS`, `SUSE`, `Debian`, `OpenSUSE`, `FreeBSD`, `RedHat`, `Kylin`, `UOS`, `Fedora`, `Fedora CoreOS`, `CentOS Stream`, `AlmaLinux`, `Rocky Linux`, `Gentoo`, `Customized Linux`, `Others Linux`, `Windows Server 2022`, `Windows Server 2019`, `Windows Server 2016`, `Windows Server 2012`, `Windows Server 2008`, `Windows Server 2003`. Default value: `Others Linux`.
     * 
     */
    public Optional<Output<String>> platform() {
        return Optional.ofNullable(this.platform);
    }

    /**
     * The ID of the resource group to which to assign the custom image. If you do not specify this parameter, the image is assigned to the default resource group.
     * 
     * &gt; **NOTE:**   If you call the CreateImage operation as a Resource Access Management (RAM) user who does not have the permissions to manage the default resource group and do not specify `ResourceGroupId`, the `Forbbiden: User not authorized to operate on the specified resource` error message is returned. You must specify the ID of a resource group that the RAM user has the permissions to manage or grant the RAM user the permissions to manage the default resource group before you call the CreateImage operation again.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group to which to assign the custom image. If you do not specify this parameter, the image is assigned to the default resource group.
     * 
     * &gt; **NOTE:**   If you call the CreateImage operation as a Resource Access Management (RAM) user who does not have the permissions to manage the default resource group and do not specify `ResourceGroupId`, the `Forbbiden: User not authorized to operate on the specified resource` error message is returned. You must specify the ID of a resource group that the RAM user has the permissions to manage or grant the RAM user the permissions to manage the default resource group before you call the CreateImage operation again.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The ID of the snapshot that you want to use to create the custom image.
     * 
     */
    @Import(name="snapshotId")
    private @Nullable Output<String> snapshotId;

    /**
     * @return The ID of the snapshot that you want to use to create the custom image.
     * 
     */
    public Optional<Output<String>> snapshotId() {
        return Optional.ofNullable(this.snapshotId);
    }

    /**
     * The tag
     * 
     * The following arguments will be discarded. Please use new fields as soon as possible:
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The tag
     * 
     * The following arguments will be discarded. Please use new fields as soon as possible:
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ImageArgs() {}

    private ImageArgs(ImageArgs $) {
        this.architecture = $.architecture;
        this.bootMode = $.bootMode;
        this.deleteAutoSnapshot = $.deleteAutoSnapshot;
        this.description = $.description;
        this.detectionStrategy = $.detectionStrategy;
        this.diskDeviceMappings = $.diskDeviceMappings;
        this.features = $.features;
        this.force = $.force;
        this.imageFamily = $.imageFamily;
        this.imageName = $.imageName;
        this.imageVersion = $.imageVersion;
        this.instanceId = $.instanceId;
        this.licenseType = $.licenseType;
        this.name = $.name;
        this.platform = $.platform;
        this.resourceGroupId = $.resourceGroupId;
        this.snapshotId = $.snapshotId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageArgs $;

        public Builder() {
            $ = new ImageArgs();
        }

        public Builder(ImageArgs defaults) {
            $ = new ImageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param architecture The system architecture of the system disk. If you specify a data disk snapshot to create the system disk of the custom image, you must use Architecture to specify the system architecture of the system disk. Valid values: `i386`, `x86\_64`, `arm64`. Default value: `x86\_64`.
         * 
         * @return builder
         * 
         */
        public Builder architecture(@Nullable Output<String> architecture) {
            $.architecture = architecture;
            return this;
        }

        /**
         * @param architecture The system architecture of the system disk. If you specify a data disk snapshot to create the system disk of the custom image, you must use Architecture to specify the system architecture of the system disk. Valid values: `i386`, `x86\_64`, `arm64`. Default value: `x86\_64`.
         * 
         * @return builder
         * 
         */
        public Builder architecture(String architecture) {
            return architecture(Output.of(architecture));
        }

        /**
         * @param bootMode The new boot mode of the image. Valid values:
         * 
         * *   BIOS: Basic Input/Output System (BIOS)
         * 
         * *   UEFI: Unified Extensible Firmware Interface (UEFI)
         * 
         * *   UEFI-Preferred: BIOS and UEFI
         * 
         * &gt; **NOTE:**   Before you change the boot mode, we recommend that you obtain the boot modes supported by the image. If you specify an unsupported boot mode for the image, ECS instances that use the image cannot start as expected. If you do not know which boot modes are supported by the image, we recommend that you use the image check feature to perform a check. For information about the image check feature, see [Overview](https://www.alibabacloud.com/help/en/doc-detail/439819.html).
         * 
         * &gt; **NOTE:**   For information about the UEFI-Preferred boot mode, see [Best practices for ECS instance boot modes](https://www.alibabacloud.com/help/en/doc-detail/2244655.html).
         * 
         * @return builder
         * 
         */
        public Builder bootMode(@Nullable Output<String> bootMode) {
            $.bootMode = bootMode;
            return this;
        }

        /**
         * @param bootMode The new boot mode of the image. Valid values:
         * 
         * *   BIOS: Basic Input/Output System (BIOS)
         * 
         * *   UEFI: Unified Extensible Firmware Interface (UEFI)
         * 
         * *   UEFI-Preferred: BIOS and UEFI
         * 
         * &gt; **NOTE:**   Before you change the boot mode, we recommend that you obtain the boot modes supported by the image. If you specify an unsupported boot mode for the image, ECS instances that use the image cannot start as expected. If you do not know which boot modes are supported by the image, we recommend that you use the image check feature to perform a check. For information about the image check feature, see [Overview](https://www.alibabacloud.com/help/en/doc-detail/439819.html).
         * 
         * &gt; **NOTE:**   For information about the UEFI-Preferred boot mode, see [Best practices for ECS instance boot modes](https://www.alibabacloud.com/help/en/doc-detail/2244655.html).
         * 
         * @return builder
         * 
         */
        public Builder bootMode(String bootMode) {
            return bootMode(Output.of(bootMode));
        }

        /**
         * @param deleteAutoSnapshot Not the public attribute and it used to automatically delete dependence snapshots while deleting the image.
         * 
         * @return builder
         * 
         */
        public Builder deleteAutoSnapshot(@Nullable Output<Boolean> deleteAutoSnapshot) {
            $.deleteAutoSnapshot = deleteAutoSnapshot;
            return this;
        }

        /**
         * @param deleteAutoSnapshot Not the public attribute and it used to automatically delete dependence snapshots while deleting the image.
         * 
         * @return builder
         * 
         */
        public Builder deleteAutoSnapshot(Boolean deleteAutoSnapshot) {
            return deleteAutoSnapshot(Output.of(deleteAutoSnapshot));
        }

        /**
         * @param description The new description of the custom image. The description must be 2 to 256 characters in length It cannot start with `http://` or `https://`. This parameter is empty by default, which specifies that the original description is retained.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The new description of the custom image. The description must be 2 to 256 characters in length It cannot start with `http://` or `https://`. This parameter is empty by default, which specifies that the original description is retained.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param detectionStrategy The mode in which to check the custom image. If you do not specify this parameter, the image is not checked. Only the standard check mode is supported.
         * 
         * &gt; **NOTE:**   This parameter is supported for most Linux and Windows operating system versions. For information about image check items and operating system limits for image check, see [Overview of image check](https://www.alibabacloud.com/help/en/doc-detail/439819.html) and [Operating system limits for image check](https://www.alibabacloud.com/help/en/doc-detail/475800.html).
         * 
         * @return builder
         * 
         */
        public Builder detectionStrategy(@Nullable Output<String> detectionStrategy) {
            $.detectionStrategy = detectionStrategy;
            return this;
        }

        /**
         * @param detectionStrategy The mode in which to check the custom image. If you do not specify this parameter, the image is not checked. Only the standard check mode is supported.
         * 
         * &gt; **NOTE:**   This parameter is supported for most Linux and Windows operating system versions. For information about image check items and operating system limits for image check, see [Overview of image check](https://www.alibabacloud.com/help/en/doc-detail/439819.html) and [Operating system limits for image check](https://www.alibabacloud.com/help/en/doc-detail/475800.html).
         * 
         * @return builder
         * 
         */
        public Builder detectionStrategy(String detectionStrategy) {
            return detectionStrategy(Output.of(detectionStrategy));
        }

        /**
         * @param diskDeviceMappings Snapshot information for the image See `diskDeviceMapping` below.
         * 
         * @return builder
         * 
         */
        public Builder diskDeviceMappings(@Nullable Output<List<ImageDiskDeviceMappingArgs>> diskDeviceMappings) {
            $.diskDeviceMappings = diskDeviceMappings;
            return this;
        }

        /**
         * @param diskDeviceMappings Snapshot information for the image See `diskDeviceMapping` below.
         * 
         * @return builder
         * 
         */
        public Builder diskDeviceMappings(List<ImageDiskDeviceMappingArgs> diskDeviceMappings) {
            return diskDeviceMappings(Output.of(diskDeviceMappings));
        }

        /**
         * @param diskDeviceMappings Snapshot information for the image See `diskDeviceMapping` below.
         * 
         * @return builder
         * 
         */
        public Builder diskDeviceMappings(ImageDiskDeviceMappingArgs... diskDeviceMappings) {
            return diskDeviceMappings(List.of(diskDeviceMappings));
        }

        /**
         * @param features Features See `features` below.
         * 
         * @return builder
         * 
         */
        public Builder features(@Nullable Output<ImageFeaturesArgs> features) {
            $.features = features;
            return this;
        }

        /**
         * @param features Features See `features` below.
         * 
         * @return builder
         * 
         */
        public Builder features(ImageFeaturesArgs features) {
            return features(Output.of(features));
        }

        /**
         * @param force Whether to perform forced deletion. Value range:
         * - true: forcibly deletes the custom image, ignoring whether the current image is used by other instances.
         * - false: The custom image is deleted normally. Before deleting the custom image, check whether the current image is used by other instances.
         * 
         * Default value: false
         * 
         * @return builder
         * 
         */
        public Builder force(@Nullable Output<Boolean> force) {
            $.force = force;
            return this;
        }

        /**
         * @param force Whether to perform forced deletion. Value range:
         * - true: forcibly deletes the custom image, ignoring whether the current image is used by other instances.
         * - false: The custom image is deleted normally. Before deleting the custom image, check whether the current image is used by other instances.
         * 
         * Default value: false
         * 
         * @return builder
         * 
         */
        public Builder force(Boolean force) {
            return force(Output.of(force));
        }

        /**
         * @param imageFamily The name of the image family. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty.
         * 
         * @return builder
         * 
         */
        public Builder imageFamily(@Nullable Output<String> imageFamily) {
            $.imageFamily = imageFamily;
            return this;
        }

        /**
         * @param imageFamily The name of the image family. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty.
         * 
         * @return builder
         * 
         */
        public Builder imageFamily(String imageFamily) {
            return imageFamily(Output.of(imageFamily));
        }

        /**
         * @param imageName The name of the custom image. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty. In this case, the original name is retained.
         * 
         * @return builder
         * 
         */
        public Builder imageName(@Nullable Output<String> imageName) {
            $.imageName = imageName;
            return this;
        }

        /**
         * @param imageName The name of the custom image. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\_), and hyphens (-). By default, this parameter is empty. In this case, the original name is retained.
         * 
         * @return builder
         * 
         */
        public Builder imageName(String imageName) {
            return imageName(Output.of(imageName));
        }

        /**
         * @param imageVersion The image version.
         * 
         * &gt; **NOTE:**  If you specify an instance by configuring `InstanceId`, and the instance uses an Alibaba Cloud Marketplace image or a custom image that is created from an Alibaba Cloud Marketplace image, you must leave this parameter empty or set this parameter to the value of ImageVersion of the instance.
         * 
         * @return builder
         * 
         */
        public Builder imageVersion(@Nullable Output<String> imageVersion) {
            $.imageVersion = imageVersion;
            return this;
        }

        /**
         * @param imageVersion The image version.
         * 
         * &gt; **NOTE:**  If you specify an instance by configuring `InstanceId`, and the instance uses an Alibaba Cloud Marketplace image or a custom image that is created from an Alibaba Cloud Marketplace image, you must leave this parameter empty or set this parameter to the value of ImageVersion of the instance.
         * 
         * @return builder
         * 
         */
        public Builder imageVersion(String imageVersion) {
            return imageVersion(Output.of(imageVersion));
        }

        /**
         * @param instanceId The instance ID.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The instance ID.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param licenseType The type of the license that is used to activate the operating system after the image is imported. Set the value to BYOL. BYOL: The license that comes with the source operating system is used. When you use the BYOL license, make sure that your license key is supported by Alibaba Cloud.
         * 
         * @return builder
         * 
         */
        public Builder licenseType(@Nullable Output<String> licenseType) {
            $.licenseType = licenseType;
            return this;
        }

        /**
         * @param licenseType The type of the license that is used to activate the operating system after the image is imported. Set the value to BYOL. BYOL: The license that comes with the source operating system is used. When you use the BYOL license, make sure that your license key is supported by Alibaba Cloud.
         * 
         * @return builder
         * 
         */
        public Builder licenseType(String licenseType) {
            return licenseType(Output.of(licenseType));
        }

        /**
         * @param name . Field &#39;name&#39; has been deprecated from provider version 1.227.0. New field &#39;image_name&#39; instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;name&#39; has been deprecated since provider version 1.227.0. New field &#39;image_name&#39; instead.
         * 
         */
        @Deprecated /* Field 'name' has been deprecated since provider version 1.227.0. New field 'image_name' instead. */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name . Field &#39;name&#39; has been deprecated from provider version 1.227.0. New field &#39;image_name&#39; instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;name&#39; has been deprecated since provider version 1.227.0. New field &#39;image_name&#39; instead.
         * 
         */
        @Deprecated /* Field 'name' has been deprecated since provider version 1.227.0. New field 'image_name' instead. */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param platform The operating system distribution for the system disk in the custom image. If you specify a data disk snapshot to create the system disk of the custom image, use Platform to specify the operating system distribution for the system disk. Valid values: `Aliyun`, `Anolis`, `CentOS`, `Ubuntu`, `CoreOS`, `SUSE`, `Debian`, `OpenSUSE`, `FreeBSD`, `RedHat`, `Kylin`, `UOS`, `Fedora`, `Fedora CoreOS`, `CentOS Stream`, `AlmaLinux`, `Rocky Linux`, `Gentoo`, `Customized Linux`, `Others Linux`, `Windows Server 2022`, `Windows Server 2019`, `Windows Server 2016`, `Windows Server 2012`, `Windows Server 2008`, `Windows Server 2003`. Default value: `Others Linux`.
         * 
         * @return builder
         * 
         */
        public Builder platform(@Nullable Output<String> platform) {
            $.platform = platform;
            return this;
        }

        /**
         * @param platform The operating system distribution for the system disk in the custom image. If you specify a data disk snapshot to create the system disk of the custom image, use Platform to specify the operating system distribution for the system disk. Valid values: `Aliyun`, `Anolis`, `CentOS`, `Ubuntu`, `CoreOS`, `SUSE`, `Debian`, `OpenSUSE`, `FreeBSD`, `RedHat`, `Kylin`, `UOS`, `Fedora`, `Fedora CoreOS`, `CentOS Stream`, `AlmaLinux`, `Rocky Linux`, `Gentoo`, `Customized Linux`, `Others Linux`, `Windows Server 2022`, `Windows Server 2019`, `Windows Server 2016`, `Windows Server 2012`, `Windows Server 2008`, `Windows Server 2003`. Default value: `Others Linux`.
         * 
         * @return builder
         * 
         */
        public Builder platform(String platform) {
            return platform(Output.of(platform));
        }

        /**
         * @param resourceGroupId The ID of the resource group to which to assign the custom image. If you do not specify this parameter, the image is assigned to the default resource group.
         * 
         * &gt; **NOTE:**   If you call the CreateImage operation as a Resource Access Management (RAM) user who does not have the permissions to manage the default resource group and do not specify `ResourceGroupId`, the `Forbbiden: User not authorized to operate on the specified resource` error message is returned. You must specify the ID of a resource group that the RAM user has the permissions to manage or grant the RAM user the permissions to manage the default resource group before you call the CreateImage operation again.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group to which to assign the custom image. If you do not specify this parameter, the image is assigned to the default resource group.
         * 
         * &gt; **NOTE:**   If you call the CreateImage operation as a Resource Access Management (RAM) user who does not have the permissions to manage the default resource group and do not specify `ResourceGroupId`, the `Forbbiden: User not authorized to operate on the specified resource` error message is returned. You must specify the ID of a resource group that the RAM user has the permissions to manage or grant the RAM user the permissions to manage the default resource group before you call the CreateImage operation again.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param snapshotId The ID of the snapshot that you want to use to create the custom image.
         * 
         * @return builder
         * 
         */
        public Builder snapshotId(@Nullable Output<String> snapshotId) {
            $.snapshotId = snapshotId;
            return this;
        }

        /**
         * @param snapshotId The ID of the snapshot that you want to use to create the custom image.
         * 
         * @return builder
         * 
         */
        public Builder snapshotId(String snapshotId) {
            return snapshotId(Output.of(snapshotId));
        }

        /**
         * @param tags The tag
         * 
         * The following arguments will be discarded. Please use new fields as soon as possible:
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tag
         * 
         * The following arguments will be discarded. Please use new fields as soon as possible:
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ImageArgs build() {
            return $;
        }
    }

}
