// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cdn.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainNewSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainNewSourceArgs Empty = new DomainNewSourceArgs();

    /**
     * The address of source. Valid values can be ip or doaminName. Each item&#39;s `content` can not be repeated.
     * 
     */
    @Import(name="content")
    private @Nullable Output<String> content;

    /**
     * @return The address of source. Valid values can be ip or doaminName. Each item&#39;s `content` can not be repeated.
     * 
     */
    public Optional<Output<String>> content() {
        return Optional.ofNullable(this.content);
    }

    /**
     * The port of source. Valid values are `443` and `80`. Default value is `80`.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return The port of source. Valid values are `443` and `80`. Default value is `80`.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * Priority of the source. Valid values are `0` and `100`. Default value is `20`.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return Priority of the source. Valid values are `0` and `100`. Default value is `20`.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * The type of the source. Valid values are `ipaddr`, `domain` and `oss`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of the source. Valid values are `ipaddr`, `domain` and `oss`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Weight of the source. Valid values are from `0` to `100`. Default value is `10`, but if type is `ipaddr`, the value can only be `10`.
     * 
     */
    @Import(name="weight")
    private @Nullable Output<Integer> weight;

    /**
     * @return Weight of the source. Valid values are from `0` to `100`. Default value is `10`, but if type is `ipaddr`, the value can only be `10`.
     * 
     */
    public Optional<Output<Integer>> weight() {
        return Optional.ofNullable(this.weight);
    }

    private DomainNewSourceArgs() {}

    private DomainNewSourceArgs(DomainNewSourceArgs $) {
        this.content = $.content;
        this.port = $.port;
        this.priority = $.priority;
        this.type = $.type;
        this.weight = $.weight;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainNewSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainNewSourceArgs $;

        public Builder() {
            $ = new DomainNewSourceArgs();
        }

        public Builder(DomainNewSourceArgs defaults) {
            $ = new DomainNewSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param content The address of source. Valid values can be ip or doaminName. Each item&#39;s `content` can not be repeated.
         * 
         * @return builder
         * 
         */
        public Builder content(@Nullable Output<String> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content The address of source. Valid values can be ip or doaminName. Each item&#39;s `content` can not be repeated.
         * 
         * @return builder
         * 
         */
        public Builder content(String content) {
            return content(Output.of(content));
        }

        /**
         * @param port The port of source. Valid values are `443` and `80`. Default value is `80`.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port The port of source. Valid values are `443` and `80`. Default value is `80`.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param priority Priority of the source. Valid values are `0` and `100`. Default value is `20`.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Priority of the source. Valid values are `0` and `100`. Default value is `20`.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param type The type of the source. Valid values are `ipaddr`, `domain` and `oss`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the source. Valid values are `ipaddr`, `domain` and `oss`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param weight Weight of the source. Valid values are from `0` to `100`. Default value is `10`, but if type is `ipaddr`, the value can only be `10`.
         * 
         * @return builder
         * 
         */
        public Builder weight(@Nullable Output<Integer> weight) {
            $.weight = weight;
            return this;
        }

        /**
         * @param weight Weight of the source. Valid values are from `0` to `100`. Default value is `10`, but if type is `ipaddr`, the value can only be `10`.
         * 
         * @return builder
         * 
         */
        public Builder weight(Integer weight) {
            return weight(Output.of(weight));
        }

        public DomainNewSourceArgs build() {
            return $;
        }
    }

}
