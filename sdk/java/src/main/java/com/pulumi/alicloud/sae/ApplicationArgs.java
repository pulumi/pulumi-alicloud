// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sae;

import com.pulumi.alicloud.sae.inputs.ApplicationConfigMapMountDescV2Args;
import com.pulumi.alicloud.sae.inputs.ApplicationCustomHostAliasV2Args;
import com.pulumi.alicloud.sae.inputs.ApplicationKafkaConfigsArgs;
import com.pulumi.alicloud.sae.inputs.ApplicationLivenessV2Args;
import com.pulumi.alicloud.sae.inputs.ApplicationNasConfigArgs;
import com.pulumi.alicloud.sae.inputs.ApplicationOssMountDescsV2Args;
import com.pulumi.alicloud.sae.inputs.ApplicationPostStartV2Args;
import com.pulumi.alicloud.sae.inputs.ApplicationPreStopV2Args;
import com.pulumi.alicloud.sae.inputs.ApplicationPvtzDiscoverySvcArgs;
import com.pulumi.alicloud.sae.inputs.ApplicationReadinessV2Args;
import com.pulumi.alicloud.sae.inputs.ApplicationTomcatConfigV2Args;
import com.pulumi.alicloud.sae.inputs.ApplicationUpdateStrategyV2Args;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationArgs Empty = new ApplicationArgs();

    /**
     * The ARN of the RAM role required when pulling images across accounts. Only necessary if the image_url is pointing to an ACR EE instance.
     * 
     */
    @Import(name="acrAssumeRoleArn")
    private @Nullable Output<String> acrAssumeRoleArn;

    /**
     * @return The ARN of the RAM role required when pulling images across accounts. Only necessary if the image_url is pointing to an ACR EE instance.
     * 
     */
    public Optional<Output<String>> acrAssumeRoleArn() {
        return Optional.ofNullable(this.acrAssumeRoleArn);
    }

    /**
     * The ID of the ACR EE instance. Only necessary if the image_url is pointing to an ACR EE instance.
     * 
     */
    @Import(name="acrInstanceId")
    private @Nullable Output<String> acrInstanceId;

    /**
     * @return The ID of the ACR EE instance. Only necessary if the image_url is pointing to an ACR EE instance.
     * 
     */
    public Optional<Output<String>> acrInstanceId() {
        return Optional.ofNullable(this.acrInstanceId);
    }

    /**
     * Application description information. No more than 1024 characters. **NOTE:** From version 1.211.0, `app_description` can be modified.
     * 
     */
    @Import(name="appDescription")
    private @Nullable Output<String> appDescription;

    /**
     * @return Application description information. No more than 1024 characters. **NOTE:** From version 1.211.0, `app_description` can be modified.
     * 
     */
    public Optional<Output<String>> appDescription() {
        return Optional.ofNullable(this.appDescription);
    }

    /**
     * Application Name. Combinations of numbers, letters, and dashes (-) are allowed. It must start with a letter and the maximum length is 36 characters.
     * 
     */
    @Import(name="appName", required=true)
    private Output<String> appName;

    /**
     * @return Application Name. Combinations of numbers, letters, and dashes (-) are allowed. It must start with a letter and the maximum length is 36 characters.
     * 
     */
    public Output<String> appName() {
        return this.appName;
    }

    /**
     * The auto config. Valid values: `true`, `false`.
     * 
     */
    @Import(name="autoConfig")
    private @Nullable Output<Boolean> autoConfig;

    /**
     * @return The auto config. Valid values: `true`, `false`.
     * 
     */
    public Optional<Output<Boolean>> autoConfig() {
        return Optional.ofNullable(this.autoConfig);
    }

    /**
     * The auto enable application scaling rule. Valid values: `true`, `false`.
     * 
     */
    @Import(name="autoEnableApplicationScalingRule")
    private @Nullable Output<Boolean> autoEnableApplicationScalingRule;

    /**
     * @return The auto enable application scaling rule. Valid values: `true`, `false`.
     * 
     */
    public Optional<Output<Boolean>> autoEnableApplicationScalingRule() {
        return Optional.ofNullable(this.autoEnableApplicationScalingRule);
    }

    /**
     * The batch wait time.
     * 
     */
    @Import(name="batchWaitTime")
    private @Nullable Output<Integer> batchWaitTime;

    /**
     * @return The batch wait time.
     * 
     */
    public Optional<Output<Integer>> batchWaitTime() {
        return Optional.ofNullable(this.batchWaitTime);
    }

    /**
     * The change order desc.
     * 
     */
    @Import(name="changeOrderDesc")
    private @Nullable Output<String> changeOrderDesc;

    /**
     * @return The change order desc.
     * 
     */
    public Optional<Output<String>> changeOrderDesc() {
        return Optional.ofNullable(this.changeOrderDesc);
    }

    /**
     * Mirror start command. The command must be an executable object in the container. For example: sleep. Setting this command will cause the original startup command of the mirror to become invalid.
     * 
     */
    @Import(name="command")
    private @Nullable Output<String> command;

    /**
     * @return Mirror start command. The command must be an executable object in the container. For example: sleep. Setting this command will cause the original startup command of the mirror to become invalid.
     * 
     */
    public Optional<Output<String>> command() {
        return Optional.ofNullable(this.command);
    }

    /**
     * Mirror startup command parameters. The parameters required for the above start command. For example: 1d. **NOTE:** Field `command_args` has been deprecated from provider version 1.211.0. New field `command_args_v2` instead.
     * 
     * @deprecated
     * Field `command_args` has been deprecated from provider version 1.211.0. New field `command_args_v2` instead.
     * 
     */
    @Deprecated /* Field `command_args` has been deprecated from provider version 1.211.0. New field `command_args_v2` instead. */
    @Import(name="commandArgs")
    private @Nullable Output<String> commandArgs;

    /**
     * @return Mirror startup command parameters. The parameters required for the above start command. For example: 1d. **NOTE:** Field `command_args` has been deprecated from provider version 1.211.0. New field `command_args_v2` instead.
     * 
     * @deprecated
     * Field `command_args` has been deprecated from provider version 1.211.0. New field `command_args_v2` instead.
     * 
     */
    @Deprecated /* Field `command_args` has been deprecated from provider version 1.211.0. New field `command_args_v2` instead. */
    public Optional<Output<String>> commandArgs() {
        return Optional.ofNullable(this.commandArgs);
    }

    /**
     * The parameters of the image startup command.
     * 
     */
    @Import(name="commandArgsV2s")
    private @Nullable Output<List<String>> commandArgsV2s;

    /**
     * @return The parameters of the image startup command.
     * 
     */
    public Optional<Output<List<String>>> commandArgsV2s() {
        return Optional.ofNullable(this.commandArgsV2s);
    }

    /**
     * ConfigMap mount description. **NOTE:** Field `config_map_mount_desc` has been deprecated from provider version 1.211.0. New field `config_map_mount_desc_v2` instead.
     * 
     * @deprecated
     * Field `config_map_mount_desc` has been deprecated from provider version 1.211.0. New field `config_map_mount_desc_v2` instead.
     * 
     */
    @Deprecated /* Field `config_map_mount_desc` has been deprecated from provider version 1.211.0. New field `config_map_mount_desc_v2` instead. */
    @Import(name="configMapMountDesc")
    private @Nullable Output<String> configMapMountDesc;

    /**
     * @return ConfigMap mount description. **NOTE:** Field `config_map_mount_desc` has been deprecated from provider version 1.211.0. New field `config_map_mount_desc_v2` instead.
     * 
     * @deprecated
     * Field `config_map_mount_desc` has been deprecated from provider version 1.211.0. New field `config_map_mount_desc_v2` instead.
     * 
     */
    @Deprecated /* Field `config_map_mount_desc` has been deprecated from provider version 1.211.0. New field `config_map_mount_desc_v2` instead. */
    public Optional<Output<String>> configMapMountDesc() {
        return Optional.ofNullable(this.configMapMountDesc);
    }

    /**
     * The description of the ConfigMap that is mounted to the application. A ConfigMap that is created on the ConfigMaps page of a namespace is used to inject configurations into containers. See `config_map_mount_desc_v2` below.
     * 
     */
    @Import(name="configMapMountDescV2s")
    private @Nullable Output<List<ApplicationConfigMapMountDescV2Args>> configMapMountDescV2s;

    /**
     * @return The description of the ConfigMap that is mounted to the application. A ConfigMap that is created on the ConfigMaps page of a namespace is used to inject configurations into containers. See `config_map_mount_desc_v2` below.
     * 
     */
    public Optional<Output<List<ApplicationConfigMapMountDescV2Args>>> configMapMountDescV2s() {
        return Optional.ofNullable(this.configMapMountDescV2s);
    }

    /**
     * The CPU required for each instance, in millicores, cannot be 0. Valid values: `500`, `1000`, `2000`, `4000`, `8000`, `16000`, `32000`.
     * 
     */
    @Import(name="cpu")
    private @Nullable Output<Integer> cpu;

    /**
     * @return The CPU required for each instance, in millicores, cannot be 0. Valid values: `500`, `1000`, `2000`, `4000`, `8000`, `16000`, `32000`.
     * 
     */
    public Optional<Output<Integer>> cpu() {
        return Optional.ofNullable(this.cpu);
    }

    /**
     * Custom host mapping in the container. For example: [{`hostName`:`samplehost`,`ip`:`127.0.0.1`}]. **NOTE:** Field `custom_host_alias` has been deprecated from provider version 1.211.0. New field `custom_host_alias_v2` instead.
     * 
     * @deprecated
     * Field `custom_host_alias` has been deprecated from provider version 1.211.0. New field `custom_host_alias_v2` instead.
     * 
     */
    @Deprecated /* Field `custom_host_alias` has been deprecated from provider version 1.211.0. New field `custom_host_alias_v2` instead. */
    @Import(name="customHostAlias")
    private @Nullable Output<String> customHostAlias;

    /**
     * @return Custom host mapping in the container. For example: [{`hostName`:`samplehost`,`ip`:`127.0.0.1`}]. **NOTE:** Field `custom_host_alias` has been deprecated from provider version 1.211.0. New field `custom_host_alias_v2` instead.
     * 
     * @deprecated
     * Field `custom_host_alias` has been deprecated from provider version 1.211.0. New field `custom_host_alias_v2` instead.
     * 
     */
    @Deprecated /* Field `custom_host_alias` has been deprecated from provider version 1.211.0. New field `custom_host_alias_v2` instead. */
    public Optional<Output<String>> customHostAlias() {
        return Optional.ofNullable(this.customHostAlias);
    }

    /**
     * The custom mapping between the hostname and IP address in the container. See `custom_host_alias_v2` below.
     * 
     */
    @Import(name="customHostAliasV2s")
    private @Nullable Output<List<ApplicationCustomHostAliasV2Args>> customHostAliasV2s;

    /**
     * @return The custom mapping between the hostname and IP address in the container. See `custom_host_alias_v2` below.
     * 
     */
    public Optional<Output<List<ApplicationCustomHostAliasV2Args>>> customHostAliasV2s() {
        return Optional.ofNullable(this.customHostAliasV2s);
    }

    /**
     * The deploy. Valid values: `true`, `false`.
     * 
     */
    @Import(name="deploy")
    private @Nullable Output<Boolean> deploy;

    /**
     * @return The deploy. Valid values: `true`, `false`.
     * 
     */
    public Optional<Output<Boolean>> deploy() {
        return Optional.ofNullable(this.deploy);
    }

    /**
     * The operating environment used by the Pandora application.
     * 
     */
    @Import(name="edasContainerVersion")
    private @Nullable Output<String> edasContainerVersion;

    /**
     * @return The operating environment used by the Pandora application.
     * 
     */
    public Optional<Output<String>> edasContainerVersion() {
        return Optional.ofNullable(this.edasContainerVersion);
    }

    /**
     * The enable ahas. Valid values: `true`, `false`.
     * 
     */
    @Import(name="enableAhas")
    private @Nullable Output<String> enableAhas;

    /**
     * @return The enable ahas. Valid values: `true`, `false`.
     * 
     */
    public Optional<Output<String>> enableAhas() {
        return Optional.ofNullable(this.enableAhas);
    }

    /**
     * The enable grey tag route. Default value: `false`. Valid values:
     * 
     */
    @Import(name="enableGreyTagRoute")
    private @Nullable Output<Boolean> enableGreyTagRoute;

    /**
     * @return The enable grey tag route. Default value: `false`. Valid values:
     * 
     */
    public Optional<Output<Boolean>> enableGreyTagRoute() {
        return Optional.ofNullable(this.enableGreyTagRoute);
    }

    /**
     * Container environment variable parameters. For example,`	[{&#34;name&#34;:&#34;envtmp&#34;,&#34;value&#34;:&#34;0&#34;}]`. The value description is as follows:
     * 
     */
    @Import(name="envs")
    private @Nullable Output<String> envs;

    /**
     * @return Container environment variable parameters. For example,`	[{&#34;name&#34;:&#34;envtmp&#34;,&#34;value&#34;:&#34;0&#34;}]`. The value description is as follows:
     * 
     */
    public Optional<Output<String>> envs() {
        return Optional.ofNullable(this.envs);
    }

    /**
     * The ID of the corresponding Secret.
     * 
     */
    @Import(name="imagePullSecrets")
    private @Nullable Output<String> imagePullSecrets;

    /**
     * @return The ID of the corresponding Secret.
     * 
     */
    public Optional<Output<String>> imagePullSecrets() {
        return Optional.ofNullable(this.imagePullSecrets);
    }

    /**
     * Mirror address. Only Image type applications can configure the mirror address.
     * 
     */
    @Import(name="imageUrl")
    private @Nullable Output<String> imageUrl;

    /**
     * @return Mirror address. Only Image type applications can configure the mirror address.
     * 
     */
    public Optional<Output<String>> imageUrl() {
        return Optional.ofNullable(this.imageUrl);
    }

    /**
     * The JAR package starts application parameters. Application default startup command: $JAVA_HOME/bin/java $JarStartOptions -jar $CATALINA_OPTS &#34;$package_path&#34; $JarStartArgs.
     * 
     */
    @Import(name="jarStartArgs")
    private @Nullable Output<String> jarStartArgs;

    /**
     * @return The JAR package starts application parameters. Application default startup command: $JAVA_HOME/bin/java $JarStartOptions -jar $CATALINA_OPTS &#34;$package_path&#34; $JarStartArgs.
     * 
     */
    public Optional<Output<String>> jarStartArgs() {
        return Optional.ofNullable(this.jarStartArgs);
    }

    /**
     * The JAR package starts the application option. Application default startup command: $JAVA_HOME/bin/java $JarStartOptions -jar $CATALINA_OPTS &#34;$package_path&#34; $JarStartArgs.
     * 
     */
    @Import(name="jarStartOptions")
    private @Nullable Output<String> jarStartOptions;

    /**
     * @return The JAR package starts the application option. Application default startup command: $JAVA_HOME/bin/java $JarStartOptions -jar $CATALINA_OPTS &#34;$package_path&#34; $JarStartArgs.
     * 
     */
    public Optional<Output<String>> jarStartOptions() {
        return Optional.ofNullable(this.jarStartOptions);
    }

    /**
     * The JDK version that the deployment package depends on. Image type applications are not supported.
     * 
     */
    @Import(name="jdk")
    private @Nullable Output<String> jdk;

    /**
     * @return The JDK version that the deployment package depends on. Image type applications are not supported.
     * 
     */
    public Optional<Output<String>> jdk() {
        return Optional.ofNullable(this.jdk);
    }

    /**
     * The logging configurations of ApsaraMQ for Kafka. See `kafka_configs` below.
     * 
     */
    @Import(name="kafkaConfigs")
    private @Nullable Output<ApplicationKafkaConfigsArgs> kafkaConfigs;

    /**
     * @return The logging configurations of ApsaraMQ for Kafka. See `kafka_configs` below.
     * 
     */
    public Optional<Output<ApplicationKafkaConfigsArgs>> kafkaConfigs() {
        return Optional.ofNullable(this.kafkaConfigs);
    }

    /**
     * Container health check. Containers that fail the health check will be shut down and restored. Currently, only the method of issuing commands in the container is supported.
     * **NOTE:** Field `liveness` has been deprecated from provider version 1.211.0. New field `liveness_v2` instead.
     * 
     * @deprecated
     * Field `liveness` has been deprecated from provider version 1.211.0. New field `liveness_v2` instead.
     * 
     */
    @Deprecated /* Field `liveness` has been deprecated from provider version 1.211.0. New field `liveness_v2` instead. */
    @Import(name="liveness")
    private @Nullable Output<String> liveness;

    /**
     * @return Container health check. Containers that fail the health check will be shut down and restored. Currently, only the method of issuing commands in the container is supported.
     * **NOTE:** Field `liveness` has been deprecated from provider version 1.211.0. New field `liveness_v2` instead.
     * 
     * @deprecated
     * Field `liveness` has been deprecated from provider version 1.211.0. New field `liveness_v2` instead.
     * 
     */
    @Deprecated /* Field `liveness` has been deprecated from provider version 1.211.0. New field `liveness_v2` instead. */
    public Optional<Output<String>> liveness() {
        return Optional.ofNullable(this.liveness);
    }

    /**
     * The liveness check settings of the container. See `liveness_v2` below.
     * 
     */
    @Import(name="livenessV2")
    private @Nullable Output<ApplicationLivenessV2Args> livenessV2;

    /**
     * @return The liveness check settings of the container. See `liveness_v2` below.
     * 
     */
    public Optional<Output<ApplicationLivenessV2Args>> livenessV2() {
        return Optional.ofNullable(this.livenessV2);
    }

    /**
     * The memory required for each instance, in MB, cannot be 0. One-to-one correspondence with CPU. Valid values: `1024`, `2048`, `4096`, `8192`, `12288`, `16384`, `24576`, `32768`, `65536`, `131072`.
     * 
     */
    @Import(name="memory")
    private @Nullable Output<Integer> memory;

    /**
     * @return The memory required for each instance, in MB, cannot be 0. One-to-one correspondence with CPU. Valid values: `1024`, `2048`, `4096`, `8192`, `12288`, `16384`, `24576`, `32768`, `65536`, `131072`.
     * 
     */
    public Optional<Output<Integer>> memory() {
        return Optional.ofNullable(this.memory);
    }

    /**
     * Select the Nacos registry. Valid values: `0`, `1`, `2`.
     * 
     */
    @Import(name="microRegistration")
    private @Nullable Output<String> microRegistration;

    /**
     * @return Select the Nacos registry. Valid values: `0`, `1`, `2`.
     * 
     */
    public Optional<Output<String>> microRegistration() {
        return Optional.ofNullable(this.microRegistration);
    }

    /**
     * Minimum Survival Instance Percentage. **NOTE:** When `min_ready_instances` and `min_ready_instance_ratio` are passed at the same time, and the value of `min_ready_instance_ratio` is not -1, the `min_ready_instance_ratio` parameter shall prevail. Assuming that `min_ready_instances` is 5 and `min_ready_instance_ratio` is 50, 50 is used to calculate the minimum number of surviving instances.The value description is as follows:
     * * `-1`: Initialization value, indicating that percentages are not used.
     * * `0~100`: The unit is percentage, rounded up. For example, if it is set to 50%, if there are currently 5 instances, the minimum number of surviving instances is 3.
     * 
     */
    @Import(name="minReadyInstanceRatio")
    private @Nullable Output<Integer> minReadyInstanceRatio;

    /**
     * @return Minimum Survival Instance Percentage. **NOTE:** When `min_ready_instances` and `min_ready_instance_ratio` are passed at the same time, and the value of `min_ready_instance_ratio` is not -1, the `min_ready_instance_ratio` parameter shall prevail. Assuming that `min_ready_instances` is 5 and `min_ready_instance_ratio` is 50, 50 is used to calculate the minimum number of surviving instances.The value description is as follows:
     * * `-1`: Initialization value, indicating that percentages are not used.
     * * `0~100`: The unit is percentage, rounded up. For example, if it is set to 50%, if there are currently 5 instances, the minimum number of surviving instances is 3.
     * 
     */
    public Optional<Output<Integer>> minReadyInstanceRatio() {
        return Optional.ofNullable(this.minReadyInstanceRatio);
    }

    /**
     * The Minimum Available Instance. On the Change Had Promised during the Available Number of Instances to Be.
     * 
     */
    @Import(name="minReadyInstances")
    private @Nullable Output<Integer> minReadyInstances;

    /**
     * @return The Minimum Available Instance. On the Change Had Promised during the Available Number of Instances to Be.
     * 
     */
    public Optional<Output<Integer>> minReadyInstances() {
        return Optional.ofNullable(this.minReadyInstances);
    }

    /**
     * SAE namespace ID. Only namespaces whose names are lowercase letters and dashes (-) are supported, and must start with a letter. The namespace can be obtained by calling the DescribeNamespaceList interface.
     * 
     */
    @Import(name="namespaceId")
    private @Nullable Output<String> namespaceId;

    /**
     * @return SAE namespace ID. Only namespaces whose names are lowercase letters and dashes (-) are supported, and must start with a letter. The namespace can be obtained by calling the DescribeNamespaceList interface.
     * 
     */
    public Optional<Output<String>> namespaceId() {
        return Optional.ofNullable(this.namespaceId);
    }

    /**
     * The configurations for mounting the NAS file system. See `nas_configs` below.
     * 
     */
    @Import(name="nasConfigs")
    private @Nullable Output<List<ApplicationNasConfigArgs>> nasConfigs;

    /**
     * @return The configurations for mounting the NAS file system. See `nas_configs` below.
     * 
     */
    public Optional<Output<List<ApplicationNasConfigArgs>>> nasConfigs() {
        return Optional.ofNullable(this.nasConfigs);
    }

    /**
     * OSS AccessKey ID.
     * 
     */
    @Import(name="ossAkId")
    private @Nullable Output<String> ossAkId;

    /**
     * @return OSS AccessKey ID.
     * 
     */
    public Optional<Output<String>> ossAkId() {
        return Optional.ofNullable(this.ossAkId);
    }

    /**
     * OSS  AccessKey Secret.
     * 
     */
    @Import(name="ossAkSecret")
    private @Nullable Output<String> ossAkSecret;

    /**
     * @return OSS  AccessKey Secret.
     * 
     */
    public Optional<Output<String>> ossAkSecret() {
        return Optional.ofNullable(this.ossAkSecret);
    }

    /**
     * OSS mount description information. **NOTE:** Field `oss_mount_descs` has been deprecated from provider version 1.211.0. New field `oss_mount_descs_v2` instead.
     * 
     * @deprecated
     * Field `oss_mount_descs` has been deprecated from provider version 1.211.0. New field `oss_mount_descs_v2` instead.
     * 
     */
    @Deprecated /* Field `oss_mount_descs` has been deprecated from provider version 1.211.0. New field `oss_mount_descs_v2` instead. */
    @Import(name="ossMountDescs")
    private @Nullable Output<String> ossMountDescs;

    /**
     * @return OSS mount description information. **NOTE:** Field `oss_mount_descs` has been deprecated from provider version 1.211.0. New field `oss_mount_descs_v2` instead.
     * 
     * @deprecated
     * Field `oss_mount_descs` has been deprecated from provider version 1.211.0. New field `oss_mount_descs_v2` instead.
     * 
     */
    @Deprecated /* Field `oss_mount_descs` has been deprecated from provider version 1.211.0. New field `oss_mount_descs_v2` instead. */
    public Optional<Output<String>> ossMountDescs() {
        return Optional.ofNullable(this.ossMountDescs);
    }

    /**
     * The description of the mounted Object Storage Service (OSS) bucket. See `oss_mount_descs_v2` below.
     * 
     */
    @Import(name="ossMountDescsV2s")
    private @Nullable Output<List<ApplicationOssMountDescsV2Args>> ossMountDescsV2s;

    /**
     * @return The description of the mounted Object Storage Service (OSS) bucket. See `oss_mount_descs_v2` below.
     * 
     */
    public Optional<Output<List<ApplicationOssMountDescsV2Args>>> ossMountDescsV2s() {
        return Optional.ofNullable(this.ossMountDescsV2s);
    }

    /**
     * Application package type. Valid values: `FatJar`, `War`, `Image`, `PhpZip`, `IMAGE_PHP_5_4`, `IMAGE_PHP_5_4_ALPINE`, `IMAGE_PHP_5_5`, `IMAGE_PHP_5_5_ALPINE`, `IMAGE_PHP_5_6`, `IMAGE_PHP_5_6_ALPINE`, `IMAGE_PHP_7_0`, `IMAGE_PHP_7_0_ALPINE`, `IMAGE_PHP_7_1`, `IMAGE_PHP_7_1_ALPINE`, `IMAGE_PHP_7_2`, `IMAGE_PHP_7_2_ALPINE`, `IMAGE_PHP_7_3`, `IMAGE_PHP_7_3_ALPINE`, `PythonZip`.
     * 
     */
    @Import(name="packageType", required=true)
    private Output<String> packageType;

    /**
     * @return Application package type. Valid values: `FatJar`, `War`, `Image`, `PhpZip`, `IMAGE_PHP_5_4`, `IMAGE_PHP_5_4_ALPINE`, `IMAGE_PHP_5_5`, `IMAGE_PHP_5_5_ALPINE`, `IMAGE_PHP_5_6`, `IMAGE_PHP_5_6_ALPINE`, `IMAGE_PHP_7_0`, `IMAGE_PHP_7_0_ALPINE`, `IMAGE_PHP_7_1`, `IMAGE_PHP_7_1_ALPINE`, `IMAGE_PHP_7_2`, `IMAGE_PHP_7_2_ALPINE`, `IMAGE_PHP_7_3`, `IMAGE_PHP_7_3_ALPINE`, `PythonZip`.
     * 
     */
    public Output<String> packageType() {
        return this.packageType;
    }

    /**
     * Deployment package address. Only FatJar or War type applications can configure the deployment package address.
     * 
     */
    @Import(name="packageUrl")
    private @Nullable Output<String> packageUrl;

    /**
     * @return Deployment package address. Only FatJar or War type applications can configure the deployment package address.
     * 
     */
    public Optional<Output<String>> packageUrl() {
        return Optional.ofNullable(this.packageUrl);
    }

    /**
     * The version number of the deployment package. Required when the Package Type is War and FatJar.
     * 
     */
    @Import(name="packageVersion")
    private @Nullable Output<String> packageVersion;

    /**
     * @return The version number of the deployment package. Required when the Package Type is War and FatJar.
     * 
     */
    public Optional<Output<String>> packageVersion() {
        return Optional.ofNullable(this.packageVersion);
    }

    /**
     * The Php environment.
     * 
     */
    @Import(name="php")
    private @Nullable Output<String> php;

    /**
     * @return The Php environment.
     * 
     */
    public Optional<Output<String>> php() {
        return Optional.ofNullable(this.php);
    }

    /**
     * The PHP application monitors the mount path, and you need to ensure that the PHP server will load the configuration file of this path. You don&#39;t need to pay attention to the configuration content, SAE will automatically render the correct configuration file.
     * 
     */
    @Import(name="phpArmsConfigLocation")
    private @Nullable Output<String> phpArmsConfigLocation;

    /**
     * @return The PHP application monitors the mount path, and you need to ensure that the PHP server will load the configuration file of this path. You don&#39;t need to pay attention to the configuration content, SAE will automatically render the correct configuration file.
     * 
     */
    public Optional<Output<String>> phpArmsConfigLocation() {
        return Optional.ofNullable(this.phpArmsConfigLocation);
    }

    /**
     * PHP configuration file content.
     * 
     */
    @Import(name="phpConfig")
    private @Nullable Output<String> phpConfig;

    /**
     * @return PHP configuration file content.
     * 
     */
    public Optional<Output<String>> phpConfig() {
        return Optional.ofNullable(this.phpConfig);
    }

    /**
     * PHP application startup configuration mount path, you need to ensure that the PHP server will start using this configuration file.
     * 
     */
    @Import(name="phpConfigLocation")
    private @Nullable Output<String> phpConfigLocation;

    /**
     * @return PHP application startup configuration mount path, you need to ensure that the PHP server will start using this configuration file.
     * 
     */
    public Optional<Output<String>> phpConfigLocation() {
        return Optional.ofNullable(this.phpConfigLocation);
    }

    /**
     * Execute the script after startup, the format is like: {`exec`:{`command`:[`cat`,&#34;/etc/group&#34;]}}. **NOTE:** Field `post_start` has been deprecated from provider version 1.211.0. New field `post_start_v2` instead.
     * 
     * @deprecated
     * Field `post_start` has been deprecated from provider version 1.211.0. New field `post_start_v2` instead.
     * 
     */
    @Deprecated /* Field `post_start` has been deprecated from provider version 1.211.0. New field `post_start_v2` instead. */
    @Import(name="postStart")
    private @Nullable Output<String> postStart;

    /**
     * @return Execute the script after startup, the format is like: {`exec`:{`command`:[`cat`,&#34;/etc/group&#34;]}}. **NOTE:** Field `post_start` has been deprecated from provider version 1.211.0. New field `post_start_v2` instead.
     * 
     * @deprecated
     * Field `post_start` has been deprecated from provider version 1.211.0. New field `post_start_v2` instead.
     * 
     */
    @Deprecated /* Field `post_start` has been deprecated from provider version 1.211.0. New field `post_start_v2` instead. */
    public Optional<Output<String>> postStart() {
        return Optional.ofNullable(this.postStart);
    }

    /**
     * The script that is run immediately after the container is started. See `post_start_v2` below.
     * 
     */
    @Import(name="postStartV2")
    private @Nullable Output<ApplicationPostStartV2Args> postStartV2;

    /**
     * @return The script that is run immediately after the container is started. See `post_start_v2` below.
     * 
     */
    public Optional<Output<ApplicationPostStartV2Args>> postStartV2() {
        return Optional.ofNullable(this.postStartV2);
    }

    /**
     * Execute the script before stopping, the format is like: {`exec`:{`command`:[`cat`,&#34;/etc/group&#34;]}}. **NOTE:** Field `pre_stop` has been deprecated from provider version 1.211.0. New field `pre_stop_v2` instead.
     * 
     * @deprecated
     * Field `pre_stop` has been deprecated from provider version 1.211.0. New field `pre_stop_v2` instead.
     * 
     */
    @Deprecated /* Field `pre_stop` has been deprecated from provider version 1.211.0. New field `pre_stop_v2` instead. */
    @Import(name="preStop")
    private @Nullable Output<String> preStop;

    /**
     * @return Execute the script before stopping, the format is like: {`exec`:{`command`:[`cat`,&#34;/etc/group&#34;]}}. **NOTE:** Field `pre_stop` has been deprecated from provider version 1.211.0. New field `pre_stop_v2` instead.
     * 
     * @deprecated
     * Field `pre_stop` has been deprecated from provider version 1.211.0. New field `pre_stop_v2` instead.
     * 
     */
    @Deprecated /* Field `pre_stop` has been deprecated from provider version 1.211.0. New field `pre_stop_v2` instead. */
    public Optional<Output<String>> preStop() {
        return Optional.ofNullable(this.preStop);
    }

    /**
     * The script that is run before the container is stopped. See `pre_stop_v2` below.
     * 
     */
    @Import(name="preStopV2")
    private @Nullable Output<ApplicationPreStopV2Args> preStopV2;

    /**
     * @return The script that is run before the container is stopped. See `pre_stop_v2` below.
     * 
     */
    public Optional<Output<ApplicationPreStopV2Args>> preStopV2() {
        return Optional.ofNullable(this.preStopV2);
    }

    /**
     * The programming language that is used to create the application. Valid values: `java`, `php`, `other`.
     * 
     */
    @Import(name="programmingLanguage")
    private @Nullable Output<String> programmingLanguage;

    /**
     * @return The programming language that is used to create the application. Valid values: `java`, `php`, `other`.
     * 
     */
    public Optional<Output<String>> programmingLanguage() {
        return Optional.ofNullable(this.programmingLanguage);
    }

    /**
     * The configurations of Kubernetes Service-based service registration and discovery. See `pvtz_discovery_svc` below.
     * 
     */
    @Import(name="pvtzDiscoverySvc")
    private @Nullable Output<ApplicationPvtzDiscoverySvcArgs> pvtzDiscoverySvc;

    /**
     * @return The configurations of Kubernetes Service-based service registration and discovery. See `pvtz_discovery_svc` below.
     * 
     */
    public Optional<Output<ApplicationPvtzDiscoverySvcArgs>> pvtzDiscoverySvc() {
        return Optional.ofNullable(this.pvtzDiscoverySvc);
    }

    /**
     * Application startup status checks, containers that fail multiple health checks will be shut down and restarted. Containers that do not pass the health check will not receive SLB traffic. For example: {`exec`:{`command`:[`sh`,&#34;-c&#34;,&#34;cat /home/admin/start.sh&#34;]},`initialDelaySeconds`:30,`periodSeconds`:30,&#34;timeoutSeconds &#34;:2}. Valid values: `command`, `initialDelaySeconds`, `periodSeconds`, `timeoutSeconds`.
     * **NOTE:** Field `readiness` has been deprecated from provider version 1.211.0. New field `readiness_v2` instead.
     * 
     * @deprecated
     * Field `readiness` has been deprecated from provider version 1.211.0. New field `readiness_v2` instead.
     * 
     */
    @Deprecated /* Field `readiness` has been deprecated from provider version 1.211.0. New field `readiness_v2` instead. */
    @Import(name="readiness")
    private @Nullable Output<String> readiness;

    /**
     * @return Application startup status checks, containers that fail multiple health checks will be shut down and restarted. Containers that do not pass the health check will not receive SLB traffic. For example: {`exec`:{`command`:[`sh`,&#34;-c&#34;,&#34;cat /home/admin/start.sh&#34;]},`initialDelaySeconds`:30,`periodSeconds`:30,&#34;timeoutSeconds &#34;:2}. Valid values: `command`, `initialDelaySeconds`, `periodSeconds`, `timeoutSeconds`.
     * **NOTE:** Field `readiness` has been deprecated from provider version 1.211.0. New field `readiness_v2` instead.
     * 
     * @deprecated
     * Field `readiness` has been deprecated from provider version 1.211.0. New field `readiness_v2` instead.
     * 
     */
    @Deprecated /* Field `readiness` has been deprecated from provider version 1.211.0. New field `readiness_v2` instead. */
    public Optional<Output<String>> readiness() {
        return Optional.ofNullable(this.readiness);
    }

    /**
     * The readiness check settings of the container. If a container fails this health check multiple times, the container is stopped and then restarted. See `readiness_v2` below.
     * 
     */
    @Import(name="readinessV2")
    private @Nullable Output<ApplicationReadinessV2Args> readinessV2;

    /**
     * @return The readiness check settings of the container. If a container fails this health check multiple times, the container is stopped and then restarted. See `readiness_v2` below.
     * 
     */
    public Optional<Output<ApplicationReadinessV2Args>> readinessV2() {
        return Optional.ofNullable(this.readinessV2);
    }

    /**
     * Initial number of instances.
     * 
     */
    @Import(name="replicas", required=true)
    private Output<Integer> replicas;

    /**
     * @return Initial number of instances.
     * 
     */
    public Output<Integer> replicas() {
        return this.replicas;
    }

    /**
     * Security group ID.
     * 
     */
    @Import(name="securityGroupId")
    private @Nullable Output<String> securityGroupId;

    /**
     * @return Security group ID.
     * 
     */
    public Optional<Output<String>> securityGroupId() {
        return Optional.ofNullable(this.securityGroupId);
    }

    /**
     * SLS  configuration.
     * 
     */
    @Import(name="slsConfigs")
    private @Nullable Output<String> slsConfigs;

    /**
     * @return SLS  configuration.
     * 
     */
    public Optional<Output<String>> slsConfigs() {
        return Optional.ofNullable(this.slsConfigs);
    }

    /**
     * The status of the resource. Valid values: `RUNNING`, `STOPPED`, `UNKNOWN`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource. Valid values: `RUNNING`, `STOPPED`, `UNKNOWN`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Graceful offline timeout, the default is 30, the unit is seconds. The value range is 1~60. Valid values: [1,60].
     * 
     */
    @Import(name="terminationGracePeriodSeconds")
    private @Nullable Output<Integer> terminationGracePeriodSeconds;

    /**
     * @return Graceful offline timeout, the default is 30, the unit is seconds. The value range is 1~60. Valid values: [1,60].
     * 
     */
    public Optional<Output<Integer>> terminationGracePeriodSeconds() {
        return Optional.ofNullable(this.terminationGracePeriodSeconds);
    }

    /**
     * Time zone. Default value: `Asia/Shanghai`.
     * 
     */
    @Import(name="timezone")
    private @Nullable Output<String> timezone;

    /**
     * @return Time zone. Default value: `Asia/Shanghai`.
     * 
     */
    public Optional<Output<String>> timezone() {
        return Optional.ofNullable(this.timezone);
    }

    /**
     * Tomcat file configuration, set to &#34;{}&#34; means to delete the configuration:  useDefaultConfig: Whether to use a custom configuration, if it is true, it means that the custom configuration is not used; if it is false, it means that the custom configuration is used. If you do not use custom configuration, the following parameter configuration will not take effect.  contextInputType: Select the access path of the application.  war: No need to fill in the custom path, the access path of the application is the WAR package name. root: No need to fill in the custom path, the access path of the application is /. custom: You need to fill in the custom path in the custom path below. contextPath: custom path, this parameter only needs to be configured when the contextInputType type is custom.  httpPort: The port range is 1024~65535. Ports less than 1024 need Root permission to operate. Because the container is configured with Admin permissions, please fill in a port greater than 1024. If not configured, the default is 8080. maxThreads: Configure the number of connections in the connection pool, the default size is 400. uriEncoding: Tomcat encoding format, including UTF-8, ISO-8859-1, GBK and GB2312. If not set, the default is ISO-8859-1. useBodyEncoding: Whether to use BodyEncoding for URL. Valid values: `contextInputType`, `contextPath`, `httpPort`, `maxThreads`, `uriEncoding`, `useBodyEncoding`, `useDefaultConfig`.
     * **NOTE:** Field `tomcat_config` has been deprecated from provider version 1.211.0. New field `tomcat_config_v2` instead.
     * 
     * @deprecated
     * Field `tomcat_config` has been deprecated from provider version 1.211.0. New field `tomcat_config_v2` instead.
     * 
     */
    @Deprecated /* Field `tomcat_config` has been deprecated from provider version 1.211.0. New field `tomcat_config_v2` instead. */
    @Import(name="tomcatConfig")
    private @Nullable Output<String> tomcatConfig;

    /**
     * @return Tomcat file configuration, set to &#34;{}&#34; means to delete the configuration:  useDefaultConfig: Whether to use a custom configuration, if it is true, it means that the custom configuration is not used; if it is false, it means that the custom configuration is used. If you do not use custom configuration, the following parameter configuration will not take effect.  contextInputType: Select the access path of the application.  war: No need to fill in the custom path, the access path of the application is the WAR package name. root: No need to fill in the custom path, the access path of the application is /. custom: You need to fill in the custom path in the custom path below. contextPath: custom path, this parameter only needs to be configured when the contextInputType type is custom.  httpPort: The port range is 1024~65535. Ports less than 1024 need Root permission to operate. Because the container is configured with Admin permissions, please fill in a port greater than 1024. If not configured, the default is 8080. maxThreads: Configure the number of connections in the connection pool, the default size is 400. uriEncoding: Tomcat encoding format, including UTF-8, ISO-8859-1, GBK and GB2312. If not set, the default is ISO-8859-1. useBodyEncoding: Whether to use BodyEncoding for URL. Valid values: `contextInputType`, `contextPath`, `httpPort`, `maxThreads`, `uriEncoding`, `useBodyEncoding`, `useDefaultConfig`.
     * **NOTE:** Field `tomcat_config` has been deprecated from provider version 1.211.0. New field `tomcat_config_v2` instead.
     * 
     * @deprecated
     * Field `tomcat_config` has been deprecated from provider version 1.211.0. New field `tomcat_config_v2` instead.
     * 
     */
    @Deprecated /* Field `tomcat_config` has been deprecated from provider version 1.211.0. New field `tomcat_config_v2` instead. */
    public Optional<Output<String>> tomcatConfig() {
        return Optional.ofNullable(this.tomcatConfig);
    }

    /**
     * The Tomcat configuration. See `tomcat_config_v2` below.
     * 
     */
    @Import(name="tomcatConfigV2")
    private @Nullable Output<ApplicationTomcatConfigV2Args> tomcatConfigV2;

    /**
     * @return The Tomcat configuration. See `tomcat_config_v2` below.
     * 
     */
    public Optional<Output<ApplicationTomcatConfigV2Args>> tomcatConfigV2() {
        return Optional.ofNullable(this.tomcatConfigV2);
    }

    /**
     * The update strategy. **NOTE:** Field `update_strategy` has been deprecated from provider version 1.211.0. New field `update_strategy_v2` instead.
     * 
     * @deprecated
     * Field `update_strategy` has been deprecated from provider version 1.211.0. New field `update_strategy_v2` instead.
     * 
     */
    @Deprecated /* Field `update_strategy` has been deprecated from provider version 1.211.0. New field `update_strategy_v2` instead. */
    @Import(name="updateStrategy")
    private @Nullable Output<String> updateStrategy;

    /**
     * @return The update strategy. **NOTE:** Field `update_strategy` has been deprecated from provider version 1.211.0. New field `update_strategy_v2` instead.
     * 
     * @deprecated
     * Field `update_strategy` has been deprecated from provider version 1.211.0. New field `update_strategy_v2` instead.
     * 
     */
    @Deprecated /* Field `update_strategy` has been deprecated from provider version 1.211.0. New field `update_strategy_v2` instead. */
    public Optional<Output<String>> updateStrategy() {
        return Optional.ofNullable(this.updateStrategy);
    }

    /**
     * The release policy. See `update_strategy_v2` below.
     * 
     */
    @Import(name="updateStrategyV2")
    private @Nullable Output<ApplicationUpdateStrategyV2Args> updateStrategyV2;

    /**
     * @return The release policy. See `update_strategy_v2` below.
     * 
     */
    public Optional<Output<ApplicationUpdateStrategyV2Args>> updateStrategyV2() {
        return Optional.ofNullable(this.updateStrategyV2);
    }

    /**
     * The vpc id.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The vpc id.
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    /**
     * The vswitch id. **NOTE:** From version 1.211.0, `vswitch_id` can be modified.
     * 
     */
    @Import(name="vswitchId")
    private @Nullable Output<String> vswitchId;

    /**
     * @return The vswitch id. **NOTE:** From version 1.211.0, `vswitch_id` can be modified.
     * 
     */
    public Optional<Output<String>> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    /**
     * WAR package launch application option. Application default startup command: java $JAVA_OPTS $CATALINA_OPTS [-Options] org.apache.catalina.startup.Bootstrap &#34;$@&#34; start.
     * 
     */
    @Import(name="warStartOptions")
    private @Nullable Output<String> warStartOptions;

    /**
     * @return WAR package launch application option. Application default startup command: java $JAVA_OPTS $CATALINA_OPTS [-Options] org.apache.catalina.startup.Bootstrap &#34;$@&#34; start.
     * 
     */
    public Optional<Output<String>> warStartOptions() {
        return Optional.ofNullable(this.warStartOptions);
    }

    /**
     * The version of tomcat that the deployment package depends on. Image type applications are not supported.
     * 
     */
    @Import(name="webContainer")
    private @Nullable Output<String> webContainer;

    /**
     * @return The version of tomcat that the deployment package depends on. Image type applications are not supported.
     * 
     */
    public Optional<Output<String>> webContainer() {
        return Optional.ofNullable(this.webContainer);
    }

    private ApplicationArgs() {}

    private ApplicationArgs(ApplicationArgs $) {
        this.acrAssumeRoleArn = $.acrAssumeRoleArn;
        this.acrInstanceId = $.acrInstanceId;
        this.appDescription = $.appDescription;
        this.appName = $.appName;
        this.autoConfig = $.autoConfig;
        this.autoEnableApplicationScalingRule = $.autoEnableApplicationScalingRule;
        this.batchWaitTime = $.batchWaitTime;
        this.changeOrderDesc = $.changeOrderDesc;
        this.command = $.command;
        this.commandArgs = $.commandArgs;
        this.commandArgsV2s = $.commandArgsV2s;
        this.configMapMountDesc = $.configMapMountDesc;
        this.configMapMountDescV2s = $.configMapMountDescV2s;
        this.cpu = $.cpu;
        this.customHostAlias = $.customHostAlias;
        this.customHostAliasV2s = $.customHostAliasV2s;
        this.deploy = $.deploy;
        this.edasContainerVersion = $.edasContainerVersion;
        this.enableAhas = $.enableAhas;
        this.enableGreyTagRoute = $.enableGreyTagRoute;
        this.envs = $.envs;
        this.imagePullSecrets = $.imagePullSecrets;
        this.imageUrl = $.imageUrl;
        this.jarStartArgs = $.jarStartArgs;
        this.jarStartOptions = $.jarStartOptions;
        this.jdk = $.jdk;
        this.kafkaConfigs = $.kafkaConfigs;
        this.liveness = $.liveness;
        this.livenessV2 = $.livenessV2;
        this.memory = $.memory;
        this.microRegistration = $.microRegistration;
        this.minReadyInstanceRatio = $.minReadyInstanceRatio;
        this.minReadyInstances = $.minReadyInstances;
        this.namespaceId = $.namespaceId;
        this.nasConfigs = $.nasConfigs;
        this.ossAkId = $.ossAkId;
        this.ossAkSecret = $.ossAkSecret;
        this.ossMountDescs = $.ossMountDescs;
        this.ossMountDescsV2s = $.ossMountDescsV2s;
        this.packageType = $.packageType;
        this.packageUrl = $.packageUrl;
        this.packageVersion = $.packageVersion;
        this.php = $.php;
        this.phpArmsConfigLocation = $.phpArmsConfigLocation;
        this.phpConfig = $.phpConfig;
        this.phpConfigLocation = $.phpConfigLocation;
        this.postStart = $.postStart;
        this.postStartV2 = $.postStartV2;
        this.preStop = $.preStop;
        this.preStopV2 = $.preStopV2;
        this.programmingLanguage = $.programmingLanguage;
        this.pvtzDiscoverySvc = $.pvtzDiscoverySvc;
        this.readiness = $.readiness;
        this.readinessV2 = $.readinessV2;
        this.replicas = $.replicas;
        this.securityGroupId = $.securityGroupId;
        this.slsConfigs = $.slsConfigs;
        this.status = $.status;
        this.tags = $.tags;
        this.terminationGracePeriodSeconds = $.terminationGracePeriodSeconds;
        this.timezone = $.timezone;
        this.tomcatConfig = $.tomcatConfig;
        this.tomcatConfigV2 = $.tomcatConfigV2;
        this.updateStrategy = $.updateStrategy;
        this.updateStrategyV2 = $.updateStrategyV2;
        this.vpcId = $.vpcId;
        this.vswitchId = $.vswitchId;
        this.warStartOptions = $.warStartOptions;
        this.webContainer = $.webContainer;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationArgs $;

        public Builder() {
            $ = new ApplicationArgs();
        }

        public Builder(ApplicationArgs defaults) {
            $ = new ApplicationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param acrAssumeRoleArn The ARN of the RAM role required when pulling images across accounts. Only necessary if the image_url is pointing to an ACR EE instance.
         * 
         * @return builder
         * 
         */
        public Builder acrAssumeRoleArn(@Nullable Output<String> acrAssumeRoleArn) {
            $.acrAssumeRoleArn = acrAssumeRoleArn;
            return this;
        }

        /**
         * @param acrAssumeRoleArn The ARN of the RAM role required when pulling images across accounts. Only necessary if the image_url is pointing to an ACR EE instance.
         * 
         * @return builder
         * 
         */
        public Builder acrAssumeRoleArn(String acrAssumeRoleArn) {
            return acrAssumeRoleArn(Output.of(acrAssumeRoleArn));
        }

        /**
         * @param acrInstanceId The ID of the ACR EE instance. Only necessary if the image_url is pointing to an ACR EE instance.
         * 
         * @return builder
         * 
         */
        public Builder acrInstanceId(@Nullable Output<String> acrInstanceId) {
            $.acrInstanceId = acrInstanceId;
            return this;
        }

        /**
         * @param acrInstanceId The ID of the ACR EE instance. Only necessary if the image_url is pointing to an ACR EE instance.
         * 
         * @return builder
         * 
         */
        public Builder acrInstanceId(String acrInstanceId) {
            return acrInstanceId(Output.of(acrInstanceId));
        }

        /**
         * @param appDescription Application description information. No more than 1024 characters. **NOTE:** From version 1.211.0, `app_description` can be modified.
         * 
         * @return builder
         * 
         */
        public Builder appDescription(@Nullable Output<String> appDescription) {
            $.appDescription = appDescription;
            return this;
        }

        /**
         * @param appDescription Application description information. No more than 1024 characters. **NOTE:** From version 1.211.0, `app_description` can be modified.
         * 
         * @return builder
         * 
         */
        public Builder appDescription(String appDescription) {
            return appDescription(Output.of(appDescription));
        }

        /**
         * @param appName Application Name. Combinations of numbers, letters, and dashes (-) are allowed. It must start with a letter and the maximum length is 36 characters.
         * 
         * @return builder
         * 
         */
        public Builder appName(Output<String> appName) {
            $.appName = appName;
            return this;
        }

        /**
         * @param appName Application Name. Combinations of numbers, letters, and dashes (-) are allowed. It must start with a letter and the maximum length is 36 characters.
         * 
         * @return builder
         * 
         */
        public Builder appName(String appName) {
            return appName(Output.of(appName));
        }

        /**
         * @param autoConfig The auto config. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder autoConfig(@Nullable Output<Boolean> autoConfig) {
            $.autoConfig = autoConfig;
            return this;
        }

        /**
         * @param autoConfig The auto config. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder autoConfig(Boolean autoConfig) {
            return autoConfig(Output.of(autoConfig));
        }

        /**
         * @param autoEnableApplicationScalingRule The auto enable application scaling rule. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder autoEnableApplicationScalingRule(@Nullable Output<Boolean> autoEnableApplicationScalingRule) {
            $.autoEnableApplicationScalingRule = autoEnableApplicationScalingRule;
            return this;
        }

        /**
         * @param autoEnableApplicationScalingRule The auto enable application scaling rule. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder autoEnableApplicationScalingRule(Boolean autoEnableApplicationScalingRule) {
            return autoEnableApplicationScalingRule(Output.of(autoEnableApplicationScalingRule));
        }

        /**
         * @param batchWaitTime The batch wait time.
         * 
         * @return builder
         * 
         */
        public Builder batchWaitTime(@Nullable Output<Integer> batchWaitTime) {
            $.batchWaitTime = batchWaitTime;
            return this;
        }

        /**
         * @param batchWaitTime The batch wait time.
         * 
         * @return builder
         * 
         */
        public Builder batchWaitTime(Integer batchWaitTime) {
            return batchWaitTime(Output.of(batchWaitTime));
        }

        /**
         * @param changeOrderDesc The change order desc.
         * 
         * @return builder
         * 
         */
        public Builder changeOrderDesc(@Nullable Output<String> changeOrderDesc) {
            $.changeOrderDesc = changeOrderDesc;
            return this;
        }

        /**
         * @param changeOrderDesc The change order desc.
         * 
         * @return builder
         * 
         */
        public Builder changeOrderDesc(String changeOrderDesc) {
            return changeOrderDesc(Output.of(changeOrderDesc));
        }

        /**
         * @param command Mirror start command. The command must be an executable object in the container. For example: sleep. Setting this command will cause the original startup command of the mirror to become invalid.
         * 
         * @return builder
         * 
         */
        public Builder command(@Nullable Output<String> command) {
            $.command = command;
            return this;
        }

        /**
         * @param command Mirror start command. The command must be an executable object in the container. For example: sleep. Setting this command will cause the original startup command of the mirror to become invalid.
         * 
         * @return builder
         * 
         */
        public Builder command(String command) {
            return command(Output.of(command));
        }

        /**
         * @param commandArgs Mirror startup command parameters. The parameters required for the above start command. For example: 1d. **NOTE:** Field `command_args` has been deprecated from provider version 1.211.0. New field `command_args_v2` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `command_args` has been deprecated from provider version 1.211.0. New field `command_args_v2` instead.
         * 
         */
        @Deprecated /* Field `command_args` has been deprecated from provider version 1.211.0. New field `command_args_v2` instead. */
        public Builder commandArgs(@Nullable Output<String> commandArgs) {
            $.commandArgs = commandArgs;
            return this;
        }

        /**
         * @param commandArgs Mirror startup command parameters. The parameters required for the above start command. For example: 1d. **NOTE:** Field `command_args` has been deprecated from provider version 1.211.0. New field `command_args_v2` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `command_args` has been deprecated from provider version 1.211.0. New field `command_args_v2` instead.
         * 
         */
        @Deprecated /* Field `command_args` has been deprecated from provider version 1.211.0. New field `command_args_v2` instead. */
        public Builder commandArgs(String commandArgs) {
            return commandArgs(Output.of(commandArgs));
        }

        /**
         * @param commandArgsV2s The parameters of the image startup command.
         * 
         * @return builder
         * 
         */
        public Builder commandArgsV2s(@Nullable Output<List<String>> commandArgsV2s) {
            $.commandArgsV2s = commandArgsV2s;
            return this;
        }

        /**
         * @param commandArgsV2s The parameters of the image startup command.
         * 
         * @return builder
         * 
         */
        public Builder commandArgsV2s(List<String> commandArgsV2s) {
            return commandArgsV2s(Output.of(commandArgsV2s));
        }

        /**
         * @param commandArgsV2s The parameters of the image startup command.
         * 
         * @return builder
         * 
         */
        public Builder commandArgsV2s(String... commandArgsV2s) {
            return commandArgsV2s(List.of(commandArgsV2s));
        }

        /**
         * @param configMapMountDesc ConfigMap mount description. **NOTE:** Field `config_map_mount_desc` has been deprecated from provider version 1.211.0. New field `config_map_mount_desc_v2` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `config_map_mount_desc` has been deprecated from provider version 1.211.0. New field `config_map_mount_desc_v2` instead.
         * 
         */
        @Deprecated /* Field `config_map_mount_desc` has been deprecated from provider version 1.211.0. New field `config_map_mount_desc_v2` instead. */
        public Builder configMapMountDesc(@Nullable Output<String> configMapMountDesc) {
            $.configMapMountDesc = configMapMountDesc;
            return this;
        }

        /**
         * @param configMapMountDesc ConfigMap mount description. **NOTE:** Field `config_map_mount_desc` has been deprecated from provider version 1.211.0. New field `config_map_mount_desc_v2` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `config_map_mount_desc` has been deprecated from provider version 1.211.0. New field `config_map_mount_desc_v2` instead.
         * 
         */
        @Deprecated /* Field `config_map_mount_desc` has been deprecated from provider version 1.211.0. New field `config_map_mount_desc_v2` instead. */
        public Builder configMapMountDesc(String configMapMountDesc) {
            return configMapMountDesc(Output.of(configMapMountDesc));
        }

        /**
         * @param configMapMountDescV2s The description of the ConfigMap that is mounted to the application. A ConfigMap that is created on the ConfigMaps page of a namespace is used to inject configurations into containers. See `config_map_mount_desc_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder configMapMountDescV2s(@Nullable Output<List<ApplicationConfigMapMountDescV2Args>> configMapMountDescV2s) {
            $.configMapMountDescV2s = configMapMountDescV2s;
            return this;
        }

        /**
         * @param configMapMountDescV2s The description of the ConfigMap that is mounted to the application. A ConfigMap that is created on the ConfigMaps page of a namespace is used to inject configurations into containers. See `config_map_mount_desc_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder configMapMountDescV2s(List<ApplicationConfigMapMountDescV2Args> configMapMountDescV2s) {
            return configMapMountDescV2s(Output.of(configMapMountDescV2s));
        }

        /**
         * @param configMapMountDescV2s The description of the ConfigMap that is mounted to the application. A ConfigMap that is created on the ConfigMaps page of a namespace is used to inject configurations into containers. See `config_map_mount_desc_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder configMapMountDescV2s(ApplicationConfigMapMountDescV2Args... configMapMountDescV2s) {
            return configMapMountDescV2s(List.of(configMapMountDescV2s));
        }

        /**
         * @param cpu The CPU required for each instance, in millicores, cannot be 0. Valid values: `500`, `1000`, `2000`, `4000`, `8000`, `16000`, `32000`.
         * 
         * @return builder
         * 
         */
        public Builder cpu(@Nullable Output<Integer> cpu) {
            $.cpu = cpu;
            return this;
        }

        /**
         * @param cpu The CPU required for each instance, in millicores, cannot be 0. Valid values: `500`, `1000`, `2000`, `4000`, `8000`, `16000`, `32000`.
         * 
         * @return builder
         * 
         */
        public Builder cpu(Integer cpu) {
            return cpu(Output.of(cpu));
        }

        /**
         * @param customHostAlias Custom host mapping in the container. For example: [{`hostName`:`samplehost`,`ip`:`127.0.0.1`}]. **NOTE:** Field `custom_host_alias` has been deprecated from provider version 1.211.0. New field `custom_host_alias_v2` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `custom_host_alias` has been deprecated from provider version 1.211.0. New field `custom_host_alias_v2` instead.
         * 
         */
        @Deprecated /* Field `custom_host_alias` has been deprecated from provider version 1.211.0. New field `custom_host_alias_v2` instead. */
        public Builder customHostAlias(@Nullable Output<String> customHostAlias) {
            $.customHostAlias = customHostAlias;
            return this;
        }

        /**
         * @param customHostAlias Custom host mapping in the container. For example: [{`hostName`:`samplehost`,`ip`:`127.0.0.1`}]. **NOTE:** Field `custom_host_alias` has been deprecated from provider version 1.211.0. New field `custom_host_alias_v2` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `custom_host_alias` has been deprecated from provider version 1.211.0. New field `custom_host_alias_v2` instead.
         * 
         */
        @Deprecated /* Field `custom_host_alias` has been deprecated from provider version 1.211.0. New field `custom_host_alias_v2` instead. */
        public Builder customHostAlias(String customHostAlias) {
            return customHostAlias(Output.of(customHostAlias));
        }

        /**
         * @param customHostAliasV2s The custom mapping between the hostname and IP address in the container. See `custom_host_alias_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder customHostAliasV2s(@Nullable Output<List<ApplicationCustomHostAliasV2Args>> customHostAliasV2s) {
            $.customHostAliasV2s = customHostAliasV2s;
            return this;
        }

        /**
         * @param customHostAliasV2s The custom mapping between the hostname and IP address in the container. See `custom_host_alias_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder customHostAliasV2s(List<ApplicationCustomHostAliasV2Args> customHostAliasV2s) {
            return customHostAliasV2s(Output.of(customHostAliasV2s));
        }

        /**
         * @param customHostAliasV2s The custom mapping between the hostname and IP address in the container. See `custom_host_alias_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder customHostAliasV2s(ApplicationCustomHostAliasV2Args... customHostAliasV2s) {
            return customHostAliasV2s(List.of(customHostAliasV2s));
        }

        /**
         * @param deploy The deploy. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder deploy(@Nullable Output<Boolean> deploy) {
            $.deploy = deploy;
            return this;
        }

        /**
         * @param deploy The deploy. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder deploy(Boolean deploy) {
            return deploy(Output.of(deploy));
        }

        /**
         * @param edasContainerVersion The operating environment used by the Pandora application.
         * 
         * @return builder
         * 
         */
        public Builder edasContainerVersion(@Nullable Output<String> edasContainerVersion) {
            $.edasContainerVersion = edasContainerVersion;
            return this;
        }

        /**
         * @param edasContainerVersion The operating environment used by the Pandora application.
         * 
         * @return builder
         * 
         */
        public Builder edasContainerVersion(String edasContainerVersion) {
            return edasContainerVersion(Output.of(edasContainerVersion));
        }

        /**
         * @param enableAhas The enable ahas. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder enableAhas(@Nullable Output<String> enableAhas) {
            $.enableAhas = enableAhas;
            return this;
        }

        /**
         * @param enableAhas The enable ahas. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder enableAhas(String enableAhas) {
            return enableAhas(Output.of(enableAhas));
        }

        /**
         * @param enableGreyTagRoute The enable grey tag route. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder enableGreyTagRoute(@Nullable Output<Boolean> enableGreyTagRoute) {
            $.enableGreyTagRoute = enableGreyTagRoute;
            return this;
        }

        /**
         * @param enableGreyTagRoute The enable grey tag route. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder enableGreyTagRoute(Boolean enableGreyTagRoute) {
            return enableGreyTagRoute(Output.of(enableGreyTagRoute));
        }

        /**
         * @param envs Container environment variable parameters. For example,`	[{&#34;name&#34;:&#34;envtmp&#34;,&#34;value&#34;:&#34;0&#34;}]`. The value description is as follows:
         * 
         * @return builder
         * 
         */
        public Builder envs(@Nullable Output<String> envs) {
            $.envs = envs;
            return this;
        }

        /**
         * @param envs Container environment variable parameters. For example,`	[{&#34;name&#34;:&#34;envtmp&#34;,&#34;value&#34;:&#34;0&#34;}]`. The value description is as follows:
         * 
         * @return builder
         * 
         */
        public Builder envs(String envs) {
            return envs(Output.of(envs));
        }

        /**
         * @param imagePullSecrets The ID of the corresponding Secret.
         * 
         * @return builder
         * 
         */
        public Builder imagePullSecrets(@Nullable Output<String> imagePullSecrets) {
            $.imagePullSecrets = imagePullSecrets;
            return this;
        }

        /**
         * @param imagePullSecrets The ID of the corresponding Secret.
         * 
         * @return builder
         * 
         */
        public Builder imagePullSecrets(String imagePullSecrets) {
            return imagePullSecrets(Output.of(imagePullSecrets));
        }

        /**
         * @param imageUrl Mirror address. Only Image type applications can configure the mirror address.
         * 
         * @return builder
         * 
         */
        public Builder imageUrl(@Nullable Output<String> imageUrl) {
            $.imageUrl = imageUrl;
            return this;
        }

        /**
         * @param imageUrl Mirror address. Only Image type applications can configure the mirror address.
         * 
         * @return builder
         * 
         */
        public Builder imageUrl(String imageUrl) {
            return imageUrl(Output.of(imageUrl));
        }

        /**
         * @param jarStartArgs The JAR package starts application parameters. Application default startup command: $JAVA_HOME/bin/java $JarStartOptions -jar $CATALINA_OPTS &#34;$package_path&#34; $JarStartArgs.
         * 
         * @return builder
         * 
         */
        public Builder jarStartArgs(@Nullable Output<String> jarStartArgs) {
            $.jarStartArgs = jarStartArgs;
            return this;
        }

        /**
         * @param jarStartArgs The JAR package starts application parameters. Application default startup command: $JAVA_HOME/bin/java $JarStartOptions -jar $CATALINA_OPTS &#34;$package_path&#34; $JarStartArgs.
         * 
         * @return builder
         * 
         */
        public Builder jarStartArgs(String jarStartArgs) {
            return jarStartArgs(Output.of(jarStartArgs));
        }

        /**
         * @param jarStartOptions The JAR package starts the application option. Application default startup command: $JAVA_HOME/bin/java $JarStartOptions -jar $CATALINA_OPTS &#34;$package_path&#34; $JarStartArgs.
         * 
         * @return builder
         * 
         */
        public Builder jarStartOptions(@Nullable Output<String> jarStartOptions) {
            $.jarStartOptions = jarStartOptions;
            return this;
        }

        /**
         * @param jarStartOptions The JAR package starts the application option. Application default startup command: $JAVA_HOME/bin/java $JarStartOptions -jar $CATALINA_OPTS &#34;$package_path&#34; $JarStartArgs.
         * 
         * @return builder
         * 
         */
        public Builder jarStartOptions(String jarStartOptions) {
            return jarStartOptions(Output.of(jarStartOptions));
        }

        /**
         * @param jdk The JDK version that the deployment package depends on. Image type applications are not supported.
         * 
         * @return builder
         * 
         */
        public Builder jdk(@Nullable Output<String> jdk) {
            $.jdk = jdk;
            return this;
        }

        /**
         * @param jdk The JDK version that the deployment package depends on. Image type applications are not supported.
         * 
         * @return builder
         * 
         */
        public Builder jdk(String jdk) {
            return jdk(Output.of(jdk));
        }

        /**
         * @param kafkaConfigs The logging configurations of ApsaraMQ for Kafka. See `kafka_configs` below.
         * 
         * @return builder
         * 
         */
        public Builder kafkaConfigs(@Nullable Output<ApplicationKafkaConfigsArgs> kafkaConfigs) {
            $.kafkaConfigs = kafkaConfigs;
            return this;
        }

        /**
         * @param kafkaConfigs The logging configurations of ApsaraMQ for Kafka. See `kafka_configs` below.
         * 
         * @return builder
         * 
         */
        public Builder kafkaConfigs(ApplicationKafkaConfigsArgs kafkaConfigs) {
            return kafkaConfigs(Output.of(kafkaConfigs));
        }

        /**
         * @param liveness Container health check. Containers that fail the health check will be shut down and restored. Currently, only the method of issuing commands in the container is supported.
         * **NOTE:** Field `liveness` has been deprecated from provider version 1.211.0. New field `liveness_v2` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `liveness` has been deprecated from provider version 1.211.0. New field `liveness_v2` instead.
         * 
         */
        @Deprecated /* Field `liveness` has been deprecated from provider version 1.211.0. New field `liveness_v2` instead. */
        public Builder liveness(@Nullable Output<String> liveness) {
            $.liveness = liveness;
            return this;
        }

        /**
         * @param liveness Container health check. Containers that fail the health check will be shut down and restored. Currently, only the method of issuing commands in the container is supported.
         * **NOTE:** Field `liveness` has been deprecated from provider version 1.211.0. New field `liveness_v2` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `liveness` has been deprecated from provider version 1.211.0. New field `liveness_v2` instead.
         * 
         */
        @Deprecated /* Field `liveness` has been deprecated from provider version 1.211.0. New field `liveness_v2` instead. */
        public Builder liveness(String liveness) {
            return liveness(Output.of(liveness));
        }

        /**
         * @param livenessV2 The liveness check settings of the container. See `liveness_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder livenessV2(@Nullable Output<ApplicationLivenessV2Args> livenessV2) {
            $.livenessV2 = livenessV2;
            return this;
        }

        /**
         * @param livenessV2 The liveness check settings of the container. See `liveness_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder livenessV2(ApplicationLivenessV2Args livenessV2) {
            return livenessV2(Output.of(livenessV2));
        }

        /**
         * @param memory The memory required for each instance, in MB, cannot be 0. One-to-one correspondence with CPU. Valid values: `1024`, `2048`, `4096`, `8192`, `12288`, `16384`, `24576`, `32768`, `65536`, `131072`.
         * 
         * @return builder
         * 
         */
        public Builder memory(@Nullable Output<Integer> memory) {
            $.memory = memory;
            return this;
        }

        /**
         * @param memory The memory required for each instance, in MB, cannot be 0. One-to-one correspondence with CPU. Valid values: `1024`, `2048`, `4096`, `8192`, `12288`, `16384`, `24576`, `32768`, `65536`, `131072`.
         * 
         * @return builder
         * 
         */
        public Builder memory(Integer memory) {
            return memory(Output.of(memory));
        }

        /**
         * @param microRegistration Select the Nacos registry. Valid values: `0`, `1`, `2`.
         * 
         * @return builder
         * 
         */
        public Builder microRegistration(@Nullable Output<String> microRegistration) {
            $.microRegistration = microRegistration;
            return this;
        }

        /**
         * @param microRegistration Select the Nacos registry. Valid values: `0`, `1`, `2`.
         * 
         * @return builder
         * 
         */
        public Builder microRegistration(String microRegistration) {
            return microRegistration(Output.of(microRegistration));
        }

        /**
         * @param minReadyInstanceRatio Minimum Survival Instance Percentage. **NOTE:** When `min_ready_instances` and `min_ready_instance_ratio` are passed at the same time, and the value of `min_ready_instance_ratio` is not -1, the `min_ready_instance_ratio` parameter shall prevail. Assuming that `min_ready_instances` is 5 and `min_ready_instance_ratio` is 50, 50 is used to calculate the minimum number of surviving instances.The value description is as follows:
         * * `-1`: Initialization value, indicating that percentages are not used.
         * * `0~100`: The unit is percentage, rounded up. For example, if it is set to 50%, if there are currently 5 instances, the minimum number of surviving instances is 3.
         * 
         * @return builder
         * 
         */
        public Builder minReadyInstanceRatio(@Nullable Output<Integer> minReadyInstanceRatio) {
            $.minReadyInstanceRatio = minReadyInstanceRatio;
            return this;
        }

        /**
         * @param minReadyInstanceRatio Minimum Survival Instance Percentage. **NOTE:** When `min_ready_instances` and `min_ready_instance_ratio` are passed at the same time, and the value of `min_ready_instance_ratio` is not -1, the `min_ready_instance_ratio` parameter shall prevail. Assuming that `min_ready_instances` is 5 and `min_ready_instance_ratio` is 50, 50 is used to calculate the minimum number of surviving instances.The value description is as follows:
         * * `-1`: Initialization value, indicating that percentages are not used.
         * * `0~100`: The unit is percentage, rounded up. For example, if it is set to 50%, if there are currently 5 instances, the minimum number of surviving instances is 3.
         * 
         * @return builder
         * 
         */
        public Builder minReadyInstanceRatio(Integer minReadyInstanceRatio) {
            return minReadyInstanceRatio(Output.of(minReadyInstanceRatio));
        }

        /**
         * @param minReadyInstances The Minimum Available Instance. On the Change Had Promised during the Available Number of Instances to Be.
         * 
         * @return builder
         * 
         */
        public Builder minReadyInstances(@Nullable Output<Integer> minReadyInstances) {
            $.minReadyInstances = minReadyInstances;
            return this;
        }

        /**
         * @param minReadyInstances The Minimum Available Instance. On the Change Had Promised during the Available Number of Instances to Be.
         * 
         * @return builder
         * 
         */
        public Builder minReadyInstances(Integer minReadyInstances) {
            return minReadyInstances(Output.of(minReadyInstances));
        }

        /**
         * @param namespaceId SAE namespace ID. Only namespaces whose names are lowercase letters and dashes (-) are supported, and must start with a letter. The namespace can be obtained by calling the DescribeNamespaceList interface.
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(@Nullable Output<String> namespaceId) {
            $.namespaceId = namespaceId;
            return this;
        }

        /**
         * @param namespaceId SAE namespace ID. Only namespaces whose names are lowercase letters and dashes (-) are supported, and must start with a letter. The namespace can be obtained by calling the DescribeNamespaceList interface.
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(String namespaceId) {
            return namespaceId(Output.of(namespaceId));
        }

        /**
         * @param nasConfigs The configurations for mounting the NAS file system. See `nas_configs` below.
         * 
         * @return builder
         * 
         */
        public Builder nasConfigs(@Nullable Output<List<ApplicationNasConfigArgs>> nasConfigs) {
            $.nasConfigs = nasConfigs;
            return this;
        }

        /**
         * @param nasConfigs The configurations for mounting the NAS file system. See `nas_configs` below.
         * 
         * @return builder
         * 
         */
        public Builder nasConfigs(List<ApplicationNasConfigArgs> nasConfigs) {
            return nasConfigs(Output.of(nasConfigs));
        }

        /**
         * @param nasConfigs The configurations for mounting the NAS file system. See `nas_configs` below.
         * 
         * @return builder
         * 
         */
        public Builder nasConfigs(ApplicationNasConfigArgs... nasConfigs) {
            return nasConfigs(List.of(nasConfigs));
        }

        /**
         * @param ossAkId OSS AccessKey ID.
         * 
         * @return builder
         * 
         */
        public Builder ossAkId(@Nullable Output<String> ossAkId) {
            $.ossAkId = ossAkId;
            return this;
        }

        /**
         * @param ossAkId OSS AccessKey ID.
         * 
         * @return builder
         * 
         */
        public Builder ossAkId(String ossAkId) {
            return ossAkId(Output.of(ossAkId));
        }

        /**
         * @param ossAkSecret OSS  AccessKey Secret.
         * 
         * @return builder
         * 
         */
        public Builder ossAkSecret(@Nullable Output<String> ossAkSecret) {
            $.ossAkSecret = ossAkSecret;
            return this;
        }

        /**
         * @param ossAkSecret OSS  AccessKey Secret.
         * 
         * @return builder
         * 
         */
        public Builder ossAkSecret(String ossAkSecret) {
            return ossAkSecret(Output.of(ossAkSecret));
        }

        /**
         * @param ossMountDescs OSS mount description information. **NOTE:** Field `oss_mount_descs` has been deprecated from provider version 1.211.0. New field `oss_mount_descs_v2` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `oss_mount_descs` has been deprecated from provider version 1.211.0. New field `oss_mount_descs_v2` instead.
         * 
         */
        @Deprecated /* Field `oss_mount_descs` has been deprecated from provider version 1.211.0. New field `oss_mount_descs_v2` instead. */
        public Builder ossMountDescs(@Nullable Output<String> ossMountDescs) {
            $.ossMountDescs = ossMountDescs;
            return this;
        }

        /**
         * @param ossMountDescs OSS mount description information. **NOTE:** Field `oss_mount_descs` has been deprecated from provider version 1.211.0. New field `oss_mount_descs_v2` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `oss_mount_descs` has been deprecated from provider version 1.211.0. New field `oss_mount_descs_v2` instead.
         * 
         */
        @Deprecated /* Field `oss_mount_descs` has been deprecated from provider version 1.211.0. New field `oss_mount_descs_v2` instead. */
        public Builder ossMountDescs(String ossMountDescs) {
            return ossMountDescs(Output.of(ossMountDescs));
        }

        /**
         * @param ossMountDescsV2s The description of the mounted Object Storage Service (OSS) bucket. See `oss_mount_descs_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder ossMountDescsV2s(@Nullable Output<List<ApplicationOssMountDescsV2Args>> ossMountDescsV2s) {
            $.ossMountDescsV2s = ossMountDescsV2s;
            return this;
        }

        /**
         * @param ossMountDescsV2s The description of the mounted Object Storage Service (OSS) bucket. See `oss_mount_descs_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder ossMountDescsV2s(List<ApplicationOssMountDescsV2Args> ossMountDescsV2s) {
            return ossMountDescsV2s(Output.of(ossMountDescsV2s));
        }

        /**
         * @param ossMountDescsV2s The description of the mounted Object Storage Service (OSS) bucket. See `oss_mount_descs_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder ossMountDescsV2s(ApplicationOssMountDescsV2Args... ossMountDescsV2s) {
            return ossMountDescsV2s(List.of(ossMountDescsV2s));
        }

        /**
         * @param packageType Application package type. Valid values: `FatJar`, `War`, `Image`, `PhpZip`, `IMAGE_PHP_5_4`, `IMAGE_PHP_5_4_ALPINE`, `IMAGE_PHP_5_5`, `IMAGE_PHP_5_5_ALPINE`, `IMAGE_PHP_5_6`, `IMAGE_PHP_5_6_ALPINE`, `IMAGE_PHP_7_0`, `IMAGE_PHP_7_0_ALPINE`, `IMAGE_PHP_7_1`, `IMAGE_PHP_7_1_ALPINE`, `IMAGE_PHP_7_2`, `IMAGE_PHP_7_2_ALPINE`, `IMAGE_PHP_7_3`, `IMAGE_PHP_7_3_ALPINE`, `PythonZip`.
         * 
         * @return builder
         * 
         */
        public Builder packageType(Output<String> packageType) {
            $.packageType = packageType;
            return this;
        }

        /**
         * @param packageType Application package type. Valid values: `FatJar`, `War`, `Image`, `PhpZip`, `IMAGE_PHP_5_4`, `IMAGE_PHP_5_4_ALPINE`, `IMAGE_PHP_5_5`, `IMAGE_PHP_5_5_ALPINE`, `IMAGE_PHP_5_6`, `IMAGE_PHP_5_6_ALPINE`, `IMAGE_PHP_7_0`, `IMAGE_PHP_7_0_ALPINE`, `IMAGE_PHP_7_1`, `IMAGE_PHP_7_1_ALPINE`, `IMAGE_PHP_7_2`, `IMAGE_PHP_7_2_ALPINE`, `IMAGE_PHP_7_3`, `IMAGE_PHP_7_3_ALPINE`, `PythonZip`.
         * 
         * @return builder
         * 
         */
        public Builder packageType(String packageType) {
            return packageType(Output.of(packageType));
        }

        /**
         * @param packageUrl Deployment package address. Only FatJar or War type applications can configure the deployment package address.
         * 
         * @return builder
         * 
         */
        public Builder packageUrl(@Nullable Output<String> packageUrl) {
            $.packageUrl = packageUrl;
            return this;
        }

        /**
         * @param packageUrl Deployment package address. Only FatJar or War type applications can configure the deployment package address.
         * 
         * @return builder
         * 
         */
        public Builder packageUrl(String packageUrl) {
            return packageUrl(Output.of(packageUrl));
        }

        /**
         * @param packageVersion The version number of the deployment package. Required when the Package Type is War and FatJar.
         * 
         * @return builder
         * 
         */
        public Builder packageVersion(@Nullable Output<String> packageVersion) {
            $.packageVersion = packageVersion;
            return this;
        }

        /**
         * @param packageVersion The version number of the deployment package. Required when the Package Type is War and FatJar.
         * 
         * @return builder
         * 
         */
        public Builder packageVersion(String packageVersion) {
            return packageVersion(Output.of(packageVersion));
        }

        /**
         * @param php The Php environment.
         * 
         * @return builder
         * 
         */
        public Builder php(@Nullable Output<String> php) {
            $.php = php;
            return this;
        }

        /**
         * @param php The Php environment.
         * 
         * @return builder
         * 
         */
        public Builder php(String php) {
            return php(Output.of(php));
        }

        /**
         * @param phpArmsConfigLocation The PHP application monitors the mount path, and you need to ensure that the PHP server will load the configuration file of this path. You don&#39;t need to pay attention to the configuration content, SAE will automatically render the correct configuration file.
         * 
         * @return builder
         * 
         */
        public Builder phpArmsConfigLocation(@Nullable Output<String> phpArmsConfigLocation) {
            $.phpArmsConfigLocation = phpArmsConfigLocation;
            return this;
        }

        /**
         * @param phpArmsConfigLocation The PHP application monitors the mount path, and you need to ensure that the PHP server will load the configuration file of this path. You don&#39;t need to pay attention to the configuration content, SAE will automatically render the correct configuration file.
         * 
         * @return builder
         * 
         */
        public Builder phpArmsConfigLocation(String phpArmsConfigLocation) {
            return phpArmsConfigLocation(Output.of(phpArmsConfigLocation));
        }

        /**
         * @param phpConfig PHP configuration file content.
         * 
         * @return builder
         * 
         */
        public Builder phpConfig(@Nullable Output<String> phpConfig) {
            $.phpConfig = phpConfig;
            return this;
        }

        /**
         * @param phpConfig PHP configuration file content.
         * 
         * @return builder
         * 
         */
        public Builder phpConfig(String phpConfig) {
            return phpConfig(Output.of(phpConfig));
        }

        /**
         * @param phpConfigLocation PHP application startup configuration mount path, you need to ensure that the PHP server will start using this configuration file.
         * 
         * @return builder
         * 
         */
        public Builder phpConfigLocation(@Nullable Output<String> phpConfigLocation) {
            $.phpConfigLocation = phpConfigLocation;
            return this;
        }

        /**
         * @param phpConfigLocation PHP application startup configuration mount path, you need to ensure that the PHP server will start using this configuration file.
         * 
         * @return builder
         * 
         */
        public Builder phpConfigLocation(String phpConfigLocation) {
            return phpConfigLocation(Output.of(phpConfigLocation));
        }

        /**
         * @param postStart Execute the script after startup, the format is like: {`exec`:{`command`:[`cat`,&#34;/etc/group&#34;]}}. **NOTE:** Field `post_start` has been deprecated from provider version 1.211.0. New field `post_start_v2` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `post_start` has been deprecated from provider version 1.211.0. New field `post_start_v2` instead.
         * 
         */
        @Deprecated /* Field `post_start` has been deprecated from provider version 1.211.0. New field `post_start_v2` instead. */
        public Builder postStart(@Nullable Output<String> postStart) {
            $.postStart = postStart;
            return this;
        }

        /**
         * @param postStart Execute the script after startup, the format is like: {`exec`:{`command`:[`cat`,&#34;/etc/group&#34;]}}. **NOTE:** Field `post_start` has been deprecated from provider version 1.211.0. New field `post_start_v2` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `post_start` has been deprecated from provider version 1.211.0. New field `post_start_v2` instead.
         * 
         */
        @Deprecated /* Field `post_start` has been deprecated from provider version 1.211.0. New field `post_start_v2` instead. */
        public Builder postStart(String postStart) {
            return postStart(Output.of(postStart));
        }

        /**
         * @param postStartV2 The script that is run immediately after the container is started. See `post_start_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder postStartV2(@Nullable Output<ApplicationPostStartV2Args> postStartV2) {
            $.postStartV2 = postStartV2;
            return this;
        }

        /**
         * @param postStartV2 The script that is run immediately after the container is started. See `post_start_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder postStartV2(ApplicationPostStartV2Args postStartV2) {
            return postStartV2(Output.of(postStartV2));
        }

        /**
         * @param preStop Execute the script before stopping, the format is like: {`exec`:{`command`:[`cat`,&#34;/etc/group&#34;]}}. **NOTE:** Field `pre_stop` has been deprecated from provider version 1.211.0. New field `pre_stop_v2` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `pre_stop` has been deprecated from provider version 1.211.0. New field `pre_stop_v2` instead.
         * 
         */
        @Deprecated /* Field `pre_stop` has been deprecated from provider version 1.211.0. New field `pre_stop_v2` instead. */
        public Builder preStop(@Nullable Output<String> preStop) {
            $.preStop = preStop;
            return this;
        }

        /**
         * @param preStop Execute the script before stopping, the format is like: {`exec`:{`command`:[`cat`,&#34;/etc/group&#34;]}}. **NOTE:** Field `pre_stop` has been deprecated from provider version 1.211.0. New field `pre_stop_v2` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `pre_stop` has been deprecated from provider version 1.211.0. New field `pre_stop_v2` instead.
         * 
         */
        @Deprecated /* Field `pre_stop` has been deprecated from provider version 1.211.0. New field `pre_stop_v2` instead. */
        public Builder preStop(String preStop) {
            return preStop(Output.of(preStop));
        }

        /**
         * @param preStopV2 The script that is run before the container is stopped. See `pre_stop_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder preStopV2(@Nullable Output<ApplicationPreStopV2Args> preStopV2) {
            $.preStopV2 = preStopV2;
            return this;
        }

        /**
         * @param preStopV2 The script that is run before the container is stopped. See `pre_stop_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder preStopV2(ApplicationPreStopV2Args preStopV2) {
            return preStopV2(Output.of(preStopV2));
        }

        /**
         * @param programmingLanguage The programming language that is used to create the application. Valid values: `java`, `php`, `other`.
         * 
         * @return builder
         * 
         */
        public Builder programmingLanguage(@Nullable Output<String> programmingLanguage) {
            $.programmingLanguage = programmingLanguage;
            return this;
        }

        /**
         * @param programmingLanguage The programming language that is used to create the application. Valid values: `java`, `php`, `other`.
         * 
         * @return builder
         * 
         */
        public Builder programmingLanguage(String programmingLanguage) {
            return programmingLanguage(Output.of(programmingLanguage));
        }

        /**
         * @param pvtzDiscoverySvc The configurations of Kubernetes Service-based service registration and discovery. See `pvtz_discovery_svc` below.
         * 
         * @return builder
         * 
         */
        public Builder pvtzDiscoverySvc(@Nullable Output<ApplicationPvtzDiscoverySvcArgs> pvtzDiscoverySvc) {
            $.pvtzDiscoverySvc = pvtzDiscoverySvc;
            return this;
        }

        /**
         * @param pvtzDiscoverySvc The configurations of Kubernetes Service-based service registration and discovery. See `pvtz_discovery_svc` below.
         * 
         * @return builder
         * 
         */
        public Builder pvtzDiscoverySvc(ApplicationPvtzDiscoverySvcArgs pvtzDiscoverySvc) {
            return pvtzDiscoverySvc(Output.of(pvtzDiscoverySvc));
        }

        /**
         * @param readiness Application startup status checks, containers that fail multiple health checks will be shut down and restarted. Containers that do not pass the health check will not receive SLB traffic. For example: {`exec`:{`command`:[`sh`,&#34;-c&#34;,&#34;cat /home/admin/start.sh&#34;]},`initialDelaySeconds`:30,`periodSeconds`:30,&#34;timeoutSeconds &#34;:2}. Valid values: `command`, `initialDelaySeconds`, `periodSeconds`, `timeoutSeconds`.
         * **NOTE:** Field `readiness` has been deprecated from provider version 1.211.0. New field `readiness_v2` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `readiness` has been deprecated from provider version 1.211.0. New field `readiness_v2` instead.
         * 
         */
        @Deprecated /* Field `readiness` has been deprecated from provider version 1.211.0. New field `readiness_v2` instead. */
        public Builder readiness(@Nullable Output<String> readiness) {
            $.readiness = readiness;
            return this;
        }

        /**
         * @param readiness Application startup status checks, containers that fail multiple health checks will be shut down and restarted. Containers that do not pass the health check will not receive SLB traffic. For example: {`exec`:{`command`:[`sh`,&#34;-c&#34;,&#34;cat /home/admin/start.sh&#34;]},`initialDelaySeconds`:30,`periodSeconds`:30,&#34;timeoutSeconds &#34;:2}. Valid values: `command`, `initialDelaySeconds`, `periodSeconds`, `timeoutSeconds`.
         * **NOTE:** Field `readiness` has been deprecated from provider version 1.211.0. New field `readiness_v2` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `readiness` has been deprecated from provider version 1.211.0. New field `readiness_v2` instead.
         * 
         */
        @Deprecated /* Field `readiness` has been deprecated from provider version 1.211.0. New field `readiness_v2` instead. */
        public Builder readiness(String readiness) {
            return readiness(Output.of(readiness));
        }

        /**
         * @param readinessV2 The readiness check settings of the container. If a container fails this health check multiple times, the container is stopped and then restarted. See `readiness_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder readinessV2(@Nullable Output<ApplicationReadinessV2Args> readinessV2) {
            $.readinessV2 = readinessV2;
            return this;
        }

        /**
         * @param readinessV2 The readiness check settings of the container. If a container fails this health check multiple times, the container is stopped and then restarted. See `readiness_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder readinessV2(ApplicationReadinessV2Args readinessV2) {
            return readinessV2(Output.of(readinessV2));
        }

        /**
         * @param replicas Initial number of instances.
         * 
         * @return builder
         * 
         */
        public Builder replicas(Output<Integer> replicas) {
            $.replicas = replicas;
            return this;
        }

        /**
         * @param replicas Initial number of instances.
         * 
         * @return builder
         * 
         */
        public Builder replicas(Integer replicas) {
            return replicas(Output.of(replicas));
        }

        /**
         * @param securityGroupId Security group ID.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupId(@Nullable Output<String> securityGroupId) {
            $.securityGroupId = securityGroupId;
            return this;
        }

        /**
         * @param securityGroupId Security group ID.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupId(String securityGroupId) {
            return securityGroupId(Output.of(securityGroupId));
        }

        /**
         * @param slsConfigs SLS  configuration.
         * 
         * @return builder
         * 
         */
        public Builder slsConfigs(@Nullable Output<String> slsConfigs) {
            $.slsConfigs = slsConfigs;
            return this;
        }

        /**
         * @param slsConfigs SLS  configuration.
         * 
         * @return builder
         * 
         */
        public Builder slsConfigs(String slsConfigs) {
            return slsConfigs(Output.of(slsConfigs));
        }

        /**
         * @param status The status of the resource. Valid values: `RUNNING`, `STOPPED`, `UNKNOWN`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource. Valid values: `RUNNING`, `STOPPED`, `UNKNOWN`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param terminationGracePeriodSeconds Graceful offline timeout, the default is 30, the unit is seconds. The value range is 1~60. Valid values: [1,60].
         * 
         * @return builder
         * 
         */
        public Builder terminationGracePeriodSeconds(@Nullable Output<Integer> terminationGracePeriodSeconds) {
            $.terminationGracePeriodSeconds = terminationGracePeriodSeconds;
            return this;
        }

        /**
         * @param terminationGracePeriodSeconds Graceful offline timeout, the default is 30, the unit is seconds. The value range is 1~60. Valid values: [1,60].
         * 
         * @return builder
         * 
         */
        public Builder terminationGracePeriodSeconds(Integer terminationGracePeriodSeconds) {
            return terminationGracePeriodSeconds(Output.of(terminationGracePeriodSeconds));
        }

        /**
         * @param timezone Time zone. Default value: `Asia/Shanghai`.
         * 
         * @return builder
         * 
         */
        public Builder timezone(@Nullable Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        /**
         * @param timezone Time zone. Default value: `Asia/Shanghai`.
         * 
         * @return builder
         * 
         */
        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        /**
         * @param tomcatConfig Tomcat file configuration, set to &#34;{}&#34; means to delete the configuration:  useDefaultConfig: Whether to use a custom configuration, if it is true, it means that the custom configuration is not used; if it is false, it means that the custom configuration is used. If you do not use custom configuration, the following parameter configuration will not take effect.  contextInputType: Select the access path of the application.  war: No need to fill in the custom path, the access path of the application is the WAR package name. root: No need to fill in the custom path, the access path of the application is /. custom: You need to fill in the custom path in the custom path below. contextPath: custom path, this parameter only needs to be configured when the contextInputType type is custom.  httpPort: The port range is 1024~65535. Ports less than 1024 need Root permission to operate. Because the container is configured with Admin permissions, please fill in a port greater than 1024. If not configured, the default is 8080. maxThreads: Configure the number of connections in the connection pool, the default size is 400. uriEncoding: Tomcat encoding format, including UTF-8, ISO-8859-1, GBK and GB2312. If not set, the default is ISO-8859-1. useBodyEncoding: Whether to use BodyEncoding for URL. Valid values: `contextInputType`, `contextPath`, `httpPort`, `maxThreads`, `uriEncoding`, `useBodyEncoding`, `useDefaultConfig`.
         * **NOTE:** Field `tomcat_config` has been deprecated from provider version 1.211.0. New field `tomcat_config_v2` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `tomcat_config` has been deprecated from provider version 1.211.0. New field `tomcat_config_v2` instead.
         * 
         */
        @Deprecated /* Field `tomcat_config` has been deprecated from provider version 1.211.0. New field `tomcat_config_v2` instead. */
        public Builder tomcatConfig(@Nullable Output<String> tomcatConfig) {
            $.tomcatConfig = tomcatConfig;
            return this;
        }

        /**
         * @param tomcatConfig Tomcat file configuration, set to &#34;{}&#34; means to delete the configuration:  useDefaultConfig: Whether to use a custom configuration, if it is true, it means that the custom configuration is not used; if it is false, it means that the custom configuration is used. If you do not use custom configuration, the following parameter configuration will not take effect.  contextInputType: Select the access path of the application.  war: No need to fill in the custom path, the access path of the application is the WAR package name. root: No need to fill in the custom path, the access path of the application is /. custom: You need to fill in the custom path in the custom path below. contextPath: custom path, this parameter only needs to be configured when the contextInputType type is custom.  httpPort: The port range is 1024~65535. Ports less than 1024 need Root permission to operate. Because the container is configured with Admin permissions, please fill in a port greater than 1024. If not configured, the default is 8080. maxThreads: Configure the number of connections in the connection pool, the default size is 400. uriEncoding: Tomcat encoding format, including UTF-8, ISO-8859-1, GBK and GB2312. If not set, the default is ISO-8859-1. useBodyEncoding: Whether to use BodyEncoding for URL. Valid values: `contextInputType`, `contextPath`, `httpPort`, `maxThreads`, `uriEncoding`, `useBodyEncoding`, `useDefaultConfig`.
         * **NOTE:** Field `tomcat_config` has been deprecated from provider version 1.211.0. New field `tomcat_config_v2` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `tomcat_config` has been deprecated from provider version 1.211.0. New field `tomcat_config_v2` instead.
         * 
         */
        @Deprecated /* Field `tomcat_config` has been deprecated from provider version 1.211.0. New field `tomcat_config_v2` instead. */
        public Builder tomcatConfig(String tomcatConfig) {
            return tomcatConfig(Output.of(tomcatConfig));
        }

        /**
         * @param tomcatConfigV2 The Tomcat configuration. See `tomcat_config_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder tomcatConfigV2(@Nullable Output<ApplicationTomcatConfigV2Args> tomcatConfigV2) {
            $.tomcatConfigV2 = tomcatConfigV2;
            return this;
        }

        /**
         * @param tomcatConfigV2 The Tomcat configuration. See `tomcat_config_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder tomcatConfigV2(ApplicationTomcatConfigV2Args tomcatConfigV2) {
            return tomcatConfigV2(Output.of(tomcatConfigV2));
        }

        /**
         * @param updateStrategy The update strategy. **NOTE:** Field `update_strategy` has been deprecated from provider version 1.211.0. New field `update_strategy_v2` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `update_strategy` has been deprecated from provider version 1.211.0. New field `update_strategy_v2` instead.
         * 
         */
        @Deprecated /* Field `update_strategy` has been deprecated from provider version 1.211.0. New field `update_strategy_v2` instead. */
        public Builder updateStrategy(@Nullable Output<String> updateStrategy) {
            $.updateStrategy = updateStrategy;
            return this;
        }

        /**
         * @param updateStrategy The update strategy. **NOTE:** Field `update_strategy` has been deprecated from provider version 1.211.0. New field `update_strategy_v2` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Field `update_strategy` has been deprecated from provider version 1.211.0. New field `update_strategy_v2` instead.
         * 
         */
        @Deprecated /* Field `update_strategy` has been deprecated from provider version 1.211.0. New field `update_strategy_v2` instead. */
        public Builder updateStrategy(String updateStrategy) {
            return updateStrategy(Output.of(updateStrategy));
        }

        /**
         * @param updateStrategyV2 The release policy. See `update_strategy_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder updateStrategyV2(@Nullable Output<ApplicationUpdateStrategyV2Args> updateStrategyV2) {
            $.updateStrategyV2 = updateStrategyV2;
            return this;
        }

        /**
         * @param updateStrategyV2 The release policy. See `update_strategy_v2` below.
         * 
         * @return builder
         * 
         */
        public Builder updateStrategyV2(ApplicationUpdateStrategyV2Args updateStrategyV2) {
            return updateStrategyV2(Output.of(updateStrategyV2));
        }

        /**
         * @param vpcId The vpc id.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The vpc id.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param vswitchId The vswitch id. **NOTE:** From version 1.211.0, `vswitch_id` can be modified.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(@Nullable Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId The vswitch id. **NOTE:** From version 1.211.0, `vswitch_id` can be modified.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        /**
         * @param warStartOptions WAR package launch application option. Application default startup command: java $JAVA_OPTS $CATALINA_OPTS [-Options] org.apache.catalina.startup.Bootstrap &#34;$@&#34; start.
         * 
         * @return builder
         * 
         */
        public Builder warStartOptions(@Nullable Output<String> warStartOptions) {
            $.warStartOptions = warStartOptions;
            return this;
        }

        /**
         * @param warStartOptions WAR package launch application option. Application default startup command: java $JAVA_OPTS $CATALINA_OPTS [-Options] org.apache.catalina.startup.Bootstrap &#34;$@&#34; start.
         * 
         * @return builder
         * 
         */
        public Builder warStartOptions(String warStartOptions) {
            return warStartOptions(Output.of(warStartOptions));
        }

        /**
         * @param webContainer The version of tomcat that the deployment package depends on. Image type applications are not supported.
         * 
         * @return builder
         * 
         */
        public Builder webContainer(@Nullable Output<String> webContainer) {
            $.webContainer = webContainer;
            return this;
        }

        /**
         * @param webContainer The version of tomcat that the deployment package depends on. Image type applications are not supported.
         * 
         * @return builder
         * 
         */
        public Builder webContainer(String webContainer) {
            return webContainer(Output.of(webContainer));
        }

        public ApplicationArgs build() {
            $.appName = Objects.requireNonNull($.appName, "expected parameter 'appName' to be non-null");
            $.packageType = Objects.requireNonNull($.packageType, "expected parameter 'packageType' to be non-null");
            $.replicas = Objects.requireNonNull($.replicas, "expected parameter 'replicas' to be non-null");
            return $;
        }
    }

}
