// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGroupMetricRulesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGroupMetricRulesArgs Empty = new GetGroupMetricRulesArgs();

    /**
     * The dimensions that specify the resources to be associated with the alert rule.
     * 
     */
    @Import(name="dimensions")
    private @Nullable Output<String> dimensions;

    /**
     * @return The dimensions that specify the resources to be associated with the alert rule.
     * 
     */
    public Optional<Output<String>> dimensions() {
        return Optional.ofNullable(this.dimensions);
    }

    /**
     * EnableState.
     * 
     */
    @Import(name="enableState")
    private @Nullable Output<Boolean> enableState;

    /**
     * @return EnableState.
     * 
     */
    public Optional<Output<Boolean>> enableState() {
        return Optional.ofNullable(this.enableState);
    }

    /**
     * The ID of the application group.
     * 
     */
    @Import(name="groupId")
    private @Nullable Output<String> groupId;

    /**
     * @return The ID of the application group.
     * 
     */
    public Optional<Output<String>> groupId() {
        return Optional.ofNullable(this.groupId);
    }

    /**
     * The name of the alert rule.
     * 
     */
    @Import(name="groupMetricRuleName")
    private @Nullable Output<String> groupMetricRuleName;

    /**
     * @return The name of the alert rule.
     * 
     */
    public Optional<Output<String>> groupMetricRuleName() {
        return Optional.ofNullable(this.groupMetricRuleName);
    }

    /**
     * A list of Group Metric Rule IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of Group Metric Rule IDs.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * The name of the metric.
     * 
     */
    @Import(name="metricName")
    private @Nullable Output<String> metricName;

    /**
     * @return The name of the metric.
     * 
     */
    public Optional<Output<String>> metricName() {
        return Optional.ofNullable(this.metricName);
    }

    /**
     * A regex string to filter results by Group Metric Rule name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    /**
     * @return A regex string to filter results by Group Metric Rule name.
     * 
     */
    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * The namespace of the service.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The namespace of the service.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The status of Group Metric Rule.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of Group Metric Rule.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private GetGroupMetricRulesArgs() {}

    private GetGroupMetricRulesArgs(GetGroupMetricRulesArgs $) {
        this.dimensions = $.dimensions;
        this.enableState = $.enableState;
        this.groupId = $.groupId;
        this.groupMetricRuleName = $.groupMetricRuleName;
        this.ids = $.ids;
        this.metricName = $.metricName;
        this.nameRegex = $.nameRegex;
        this.namespace = $.namespace;
        this.outputFile = $.outputFile;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGroupMetricRulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGroupMetricRulesArgs $;

        public Builder() {
            $ = new GetGroupMetricRulesArgs();
        }

        public Builder(GetGroupMetricRulesArgs defaults) {
            $ = new GetGroupMetricRulesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dimensions The dimensions that specify the resources to be associated with the alert rule.
         * 
         * @return builder
         * 
         */
        public Builder dimensions(@Nullable Output<String> dimensions) {
            $.dimensions = dimensions;
            return this;
        }

        /**
         * @param dimensions The dimensions that specify the resources to be associated with the alert rule.
         * 
         * @return builder
         * 
         */
        public Builder dimensions(String dimensions) {
            return dimensions(Output.of(dimensions));
        }

        /**
         * @param enableState EnableState.
         * 
         * @return builder
         * 
         */
        public Builder enableState(@Nullable Output<Boolean> enableState) {
            $.enableState = enableState;
            return this;
        }

        /**
         * @param enableState EnableState.
         * 
         * @return builder
         * 
         */
        public Builder enableState(Boolean enableState) {
            return enableState(Output.of(enableState));
        }

        /**
         * @param groupId The ID of the application group.
         * 
         * @return builder
         * 
         */
        public Builder groupId(@Nullable Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId The ID of the application group.
         * 
         * @return builder
         * 
         */
        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param groupMetricRuleName The name of the alert rule.
         * 
         * @return builder
         * 
         */
        public Builder groupMetricRuleName(@Nullable Output<String> groupMetricRuleName) {
            $.groupMetricRuleName = groupMetricRuleName;
            return this;
        }

        /**
         * @param groupMetricRuleName The name of the alert rule.
         * 
         * @return builder
         * 
         */
        public Builder groupMetricRuleName(String groupMetricRuleName) {
            return groupMetricRuleName(Output.of(groupMetricRuleName));
        }

        /**
         * @param ids A list of Group Metric Rule IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Group Metric Rule IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of Group Metric Rule IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param metricName The name of the metric.
         * 
         * @return builder
         * 
         */
        public Builder metricName(@Nullable Output<String> metricName) {
            $.metricName = metricName;
            return this;
        }

        /**
         * @param metricName The name of the metric.
         * 
         * @return builder
         * 
         */
        public Builder metricName(String metricName) {
            return metricName(Output.of(metricName));
        }

        /**
         * @param nameRegex A regex string to filter results by Group Metric Rule name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param nameRegex A regex string to filter results by Group Metric Rule name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        /**
         * @param namespace The namespace of the service.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace of the service.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        /**
         * @param status The status of Group Metric Rule.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of Group Metric Rule.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public GetGroupMetricRulesArgs build() {
            return $;
        }
    }

}
