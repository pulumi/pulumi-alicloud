// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.mns;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TopicArgs extends com.pulumi.resources.ResourceArgs {

    public static final TopicArgs Empty = new TopicArgs();

    /**
     * Is logging enabled? true or false. Default value to false.
     * 
     */
    @Import(name="loggingEnabled")
    private @Nullable Output<Boolean> loggingEnabled;

    /**
     * @return Is logging enabled? true or false. Default value to false.
     * 
     */
    public Optional<Output<Boolean>> loggingEnabled() {
        return Optional.ofNullable(this.loggingEnabled);
    }

    /**
     * This indicates the maximum length, in bytes, of any message body sent to the topic. Valid value range: 1024-65536, i.e., 1K to 64K. Default value to 65536.
     * 
     */
    @Import(name="maximumMessageSize")
    private @Nullable Output<Integer> maximumMessageSize;

    /**
     * @return This indicates the maximum length, in bytes, of any message body sent to the topic. Valid value range: 1024-65536, i.e., 1K to 64K. Default value to 65536.
     * 
     */
    public Optional<Output<Integer>> maximumMessageSize() {
        return Optional.ofNullable(this.maximumMessageSize);
    }

    /**
     * Two topics on a single account in the same region cannot have the same name. A topic name must start with an English letter or a digit, and can contain English letters, digits, and hyphens, with the length not exceeding 256 characters.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Two topics on a single account in the same region cannot have the same name. A topic name must start with an English letter or a digit, and can contain English letters, digits, and hyphens, with the length not exceeding 256 characters.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private TopicArgs() {}

    private TopicArgs(TopicArgs $) {
        this.loggingEnabled = $.loggingEnabled;
        this.maximumMessageSize = $.maximumMessageSize;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicArgs $;

        public Builder() {
            $ = new TopicArgs();
        }

        public Builder(TopicArgs defaults) {
            $ = new TopicArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param loggingEnabled Is logging enabled? true or false. Default value to false.
         * 
         * @return builder
         * 
         */
        public Builder loggingEnabled(@Nullable Output<Boolean> loggingEnabled) {
            $.loggingEnabled = loggingEnabled;
            return this;
        }

        /**
         * @param loggingEnabled Is logging enabled? true or false. Default value to false.
         * 
         * @return builder
         * 
         */
        public Builder loggingEnabled(Boolean loggingEnabled) {
            return loggingEnabled(Output.of(loggingEnabled));
        }

        /**
         * @param maximumMessageSize This indicates the maximum length, in bytes, of any message body sent to the topic. Valid value range: 1024-65536, i.e., 1K to 64K. Default value to 65536.
         * 
         * @return builder
         * 
         */
        public Builder maximumMessageSize(@Nullable Output<Integer> maximumMessageSize) {
            $.maximumMessageSize = maximumMessageSize;
            return this;
        }

        /**
         * @param maximumMessageSize This indicates the maximum length, in bytes, of any message body sent to the topic. Valid value range: 1024-65536, i.e., 1K to 64K. Default value to 65536.
         * 
         * @return builder
         * 
         */
        public Builder maximumMessageSize(Integer maximumMessageSize) {
            return maximumMessageSize(Output.of(maximumMessageSize));
        }

        /**
         * @param name Two topics on a single account in the same region cannot have the same name. A topic name must start with an English letter or a digit, and can contain English letters, digits, and hyphens, with the length not exceeding 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Two topics on a single account in the same region cannot have the same name. A topic name must start with an English letter or a digit, and can contain English letters, digits, and hyphens, with the length not exceeding 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public TopicArgs build() {
            return $;
        }
    }

}
