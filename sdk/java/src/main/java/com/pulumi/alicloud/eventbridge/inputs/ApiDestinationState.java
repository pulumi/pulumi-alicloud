// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eventbridge.inputs;

import com.pulumi.alicloud.eventbridge.inputs.ApiDestinationHttpApiParametersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiDestinationState extends com.pulumi.resources.ResourceArgs {

    public static final ApiDestinationState Empty = new ApiDestinationState();

    /**
     * The name of the API destination.
     * 
     */
    @Import(name="apiDestinationName")
    private @Nullable Output<String> apiDestinationName;

    /**
     * @return The name of the API destination.
     * 
     */
    public Optional<Output<String>> apiDestinationName() {
        return Optional.ofNullable(this.apiDestinationName);
    }

    /**
     * The name of the connection.
     * 
     */
    @Import(name="connectionName")
    private @Nullable Output<String> connectionName;

    /**
     * @return The name of the connection.
     * 
     */
    public Optional<Output<String>> connectionName() {
        return Optional.ofNullable(this.connectionName);
    }

    /**
     * The creation time of the Api Destination.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<Integer> createTime;

    /**
     * @return The creation time of the Api Destination.
     * 
     */
    public Optional<Output<Integer>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The description of the API destination.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the API destination.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The parameters that are configured for the API destination. See `http_api_parameters` below.
     * 
     */
    @Import(name="httpApiParameters")
    private @Nullable Output<ApiDestinationHttpApiParametersArgs> httpApiParameters;

    /**
     * @return The parameters that are configured for the API destination. See `http_api_parameters` below.
     * 
     */
    public Optional<Output<ApiDestinationHttpApiParametersArgs>> httpApiParameters() {
        return Optional.ofNullable(this.httpApiParameters);
    }

    private ApiDestinationState() {}

    private ApiDestinationState(ApiDestinationState $) {
        this.apiDestinationName = $.apiDestinationName;
        this.connectionName = $.connectionName;
        this.createTime = $.createTime;
        this.description = $.description;
        this.httpApiParameters = $.httpApiParameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiDestinationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiDestinationState $;

        public Builder() {
            $ = new ApiDestinationState();
        }

        public Builder(ApiDestinationState defaults) {
            $ = new ApiDestinationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiDestinationName The name of the API destination.
         * 
         * @return builder
         * 
         */
        public Builder apiDestinationName(@Nullable Output<String> apiDestinationName) {
            $.apiDestinationName = apiDestinationName;
            return this;
        }

        /**
         * @param apiDestinationName The name of the API destination.
         * 
         * @return builder
         * 
         */
        public Builder apiDestinationName(String apiDestinationName) {
            return apiDestinationName(Output.of(apiDestinationName));
        }

        /**
         * @param connectionName The name of the connection.
         * 
         * @return builder
         * 
         */
        public Builder connectionName(@Nullable Output<String> connectionName) {
            $.connectionName = connectionName;
            return this;
        }

        /**
         * @param connectionName The name of the connection.
         * 
         * @return builder
         * 
         */
        public Builder connectionName(String connectionName) {
            return connectionName(Output.of(connectionName));
        }

        /**
         * @param createTime The creation time of the Api Destination.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<Integer> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the Api Destination.
         * 
         * @return builder
         * 
         */
        public Builder createTime(Integer createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param description The description of the API destination.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the API destination.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param httpApiParameters The parameters that are configured for the API destination. See `http_api_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder httpApiParameters(@Nullable Output<ApiDestinationHttpApiParametersArgs> httpApiParameters) {
            $.httpApiParameters = httpApiParameters;
            return this;
        }

        /**
         * @param httpApiParameters The parameters that are configured for the API destination. See `http_api_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder httpApiParameters(ApiDestinationHttpApiParametersArgs httpApiParameters) {
            return httpApiParameters(Output.of(httpApiParameters));
        }

        public ApiDestinationState build() {
            return $;
        }
    }

}
