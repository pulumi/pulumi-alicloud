// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dns.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAlidnsRecordsRecord {
    /**
     * @return The domain name associated to the records.
     * 
     */
    private String domainName;
    /**
     * @return ID of the resource.
     * 
     */
    private String id;
    /**
     * @return ISP line. For checking all resolution lines enumeration please visit [Alibaba Cloud DNS doc](https://www.alibabacloud.com/help/en/alibaba-cloud-dns/latest/dns-lines)
     * 
     */
    private String line;
    /**
     * @return Indicates whether the record is locked.
     * 
     */
    private Boolean locked;
    /**
     * @return Priority of the `MX` record.
     * 
     */
    private Integer priority;
    /**
     * @return ID of the record.
     * 
     */
    private String recordId;
    /**
     * @return The remark of the domain record.  **NOTE:** Available in 1.144.0+.
     * 
     */
    private String remark;
    /**
     * @return Host record of the domain.
     * 
     */
    private String rr;
    /**
     * @return Record status. Valid values: `ENABLE` and `DISABLE`.
     * 
     */
    private String status;
    /**
     * @return TTL of the record.
     * 
     */
    private Integer ttl;
    /**
     * @return Record type. Valid values: `A`, `NS`, `MX`, `TXT`, `CNAME`, `SRV`, `AAAA`, `REDIRECT_URL`, `FORWORD_URL` .
     * 
     */
    private String type;
    /**
     * @return Host record value of the domain.
     * 
     */
    private String value;

    private GetAlidnsRecordsRecord() {}
    /**
     * @return The domain name associated to the records.
     * 
     */
    public String domainName() {
        return this.domainName;
    }
    /**
     * @return ID of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return ISP line. For checking all resolution lines enumeration please visit [Alibaba Cloud DNS doc](https://www.alibabacloud.com/help/en/alibaba-cloud-dns/latest/dns-lines)
     * 
     */
    public String line() {
        return this.line;
    }
    /**
     * @return Indicates whether the record is locked.
     * 
     */
    public Boolean locked() {
        return this.locked;
    }
    /**
     * @return Priority of the `MX` record.
     * 
     */
    public Integer priority() {
        return this.priority;
    }
    /**
     * @return ID of the record.
     * 
     */
    public String recordId() {
        return this.recordId;
    }
    /**
     * @return The remark of the domain record.  **NOTE:** Available in 1.144.0+.
     * 
     */
    public String remark() {
        return this.remark;
    }
    /**
     * @return Host record of the domain.
     * 
     */
    public String rr() {
        return this.rr;
    }
    /**
     * @return Record status. Valid values: `ENABLE` and `DISABLE`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return TTL of the record.
     * 
     */
    public Integer ttl() {
        return this.ttl;
    }
    /**
     * @return Record type. Valid values: `A`, `NS`, `MX`, `TXT`, `CNAME`, `SRV`, `AAAA`, `REDIRECT_URL`, `FORWORD_URL` .
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Host record value of the domain.
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAlidnsRecordsRecord defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String domainName;
        private String id;
        private String line;
        private Boolean locked;
        private Integer priority;
        private String recordId;
        private String remark;
        private String rr;
        private String status;
        private Integer ttl;
        private String type;
        private String value;
        public Builder() {}
        public Builder(GetAlidnsRecordsRecord defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domainName = defaults.domainName;
    	      this.id = defaults.id;
    	      this.line = defaults.line;
    	      this.locked = defaults.locked;
    	      this.priority = defaults.priority;
    	      this.recordId = defaults.recordId;
    	      this.remark = defaults.remark;
    	      this.rr = defaults.rr;
    	      this.status = defaults.status;
    	      this.ttl = defaults.ttl;
    	      this.type = defaults.type;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder domainName(String domainName) {
            if (domainName == null) {
              throw new MissingRequiredPropertyException("GetAlidnsRecordsRecord", "domainName");
            }
            this.domainName = domainName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAlidnsRecordsRecord", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder line(String line) {
            if (line == null) {
              throw new MissingRequiredPropertyException("GetAlidnsRecordsRecord", "line");
            }
            this.line = line;
            return this;
        }
        @CustomType.Setter
        public Builder locked(Boolean locked) {
            if (locked == null) {
              throw new MissingRequiredPropertyException("GetAlidnsRecordsRecord", "locked");
            }
            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetAlidnsRecordsRecord", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder recordId(String recordId) {
            if (recordId == null) {
              throw new MissingRequiredPropertyException("GetAlidnsRecordsRecord", "recordId");
            }
            this.recordId = recordId;
            return this;
        }
        @CustomType.Setter
        public Builder remark(String remark) {
            if (remark == null) {
              throw new MissingRequiredPropertyException("GetAlidnsRecordsRecord", "remark");
            }
            this.remark = remark;
            return this;
        }
        @CustomType.Setter
        public Builder rr(String rr) {
            if (rr == null) {
              throw new MissingRequiredPropertyException("GetAlidnsRecordsRecord", "rr");
            }
            this.rr = rr;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetAlidnsRecordsRecord", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder ttl(Integer ttl) {
            if (ttl == null) {
              throw new MissingRequiredPropertyException("GetAlidnsRecordsRecord", "ttl");
            }
            this.ttl = ttl;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetAlidnsRecordsRecord", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("GetAlidnsRecordsRecord", "value");
            }
            this.value = value;
            return this;
        }
        public GetAlidnsRecordsRecord build() {
            final var _resultValue = new GetAlidnsRecordsRecord();
            _resultValue.domainName = domainName;
            _resultValue.id = id;
            _resultValue.line = line;
            _resultValue.locked = locked;
            _resultValue.priority = priority;
            _resultValue.recordId = recordId;
            _resultValue.remark = remark;
            _resultValue.rr = rr;
            _resultValue.status = status;
            _resultValue.ttl = ttl;
            _resultValue.type = type;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
