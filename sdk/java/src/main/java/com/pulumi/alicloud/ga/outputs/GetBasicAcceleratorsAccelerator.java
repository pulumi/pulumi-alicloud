// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ga.outputs;

import com.pulumi.alicloud.ga.outputs.GetBasicAcceleratorsAcceleratorBasicBandwidthPackage;
import com.pulumi.alicloud.ga.outputs.GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBasicAcceleratorsAccelerator {
    /**
     * @return The bandwidth billing method.
     * 
     */
    private String bandwidthBillingType;
    /**
     * @return The id of the Global Accelerator Basic Accelerator instance.
     * 
     */
    private String basicAcceleratorId;
    /**
     * @return The name of the Global Accelerator Basic Accelerator instance.
     * 
     */
    private String basicAcceleratorName;
    /**
     * @return The details about the basic bandwidth plan that is associated with the Global Accelerator Basic Accelerator instance.
     * 
     */
    private List<GetBasicAcceleratorsAcceleratorBasicBandwidthPackage> basicBandwidthPackages;
    /**
     * @return The ID of the endpoint group that is associated with the Global Accelerator Basic Accelerator instance.
     * 
     */
    private String basicEndpointGroupId;
    /**
     * @return The ID of the acceleration region.
     * 
     */
    private String basicIpSetId;
    /**
     * @return The timestamp that indicates when the Global Accelerator Basic Accelerator instance was created.
     * 
     */
    private Integer createTime;
    /**
     * @return The details about the cross-region acceleration bandwidth plan that is associated with the Global Accelerator Basic Accelerator instance. **NOTE:** This array is returned only for Global Accelerator Basic Accelerator instances that are created on the International site.
     * 
     */
    private List<GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage> crossDomainBandwidthPackages;
    /**
     * @return The description of the Global Accelerator Basic Accelerator instance.
     * 
     */
    private String description;
    /**
     * @return The timestamp that indicates when the Global Accelerator Basic Accelerator instance was expired.
     * 
     */
    private Integer expiredTime;
    /**
     * @return The id of the Global Accelerator Basic Accelerator.
     * 
     */
    private String id;
    /**
     * @return The billing method of the Global Accelerator Basic Accelerator instance. Only `PREPAY` is returned, which indicates the subscription billing method.
     * 
     */
    private String instanceChargeType;
    /**
     * @return The ID of the region where the Global Accelerator Basic Accelerator instance is deployed.
     * 
     */
    private String regionId;
    /**
     * @return The status of the Global Accelerator Basic Accelerator instance. Valid Value: `init`, `active`, `configuring`, `binding`, `unbinding`, `deleting`, `finacialLocked`.
     * 
     */
    private String status;

    private GetBasicAcceleratorsAccelerator() {}
    /**
     * @return The bandwidth billing method.
     * 
     */
    public String bandwidthBillingType() {
        return this.bandwidthBillingType;
    }
    /**
     * @return The id of the Global Accelerator Basic Accelerator instance.
     * 
     */
    public String basicAcceleratorId() {
        return this.basicAcceleratorId;
    }
    /**
     * @return The name of the Global Accelerator Basic Accelerator instance.
     * 
     */
    public String basicAcceleratorName() {
        return this.basicAcceleratorName;
    }
    /**
     * @return The details about the basic bandwidth plan that is associated with the Global Accelerator Basic Accelerator instance.
     * 
     */
    public List<GetBasicAcceleratorsAcceleratorBasicBandwidthPackage> basicBandwidthPackages() {
        return this.basicBandwidthPackages;
    }
    /**
     * @return The ID of the endpoint group that is associated with the Global Accelerator Basic Accelerator instance.
     * 
     */
    public String basicEndpointGroupId() {
        return this.basicEndpointGroupId;
    }
    /**
     * @return The ID of the acceleration region.
     * 
     */
    public String basicIpSetId() {
        return this.basicIpSetId;
    }
    /**
     * @return The timestamp that indicates when the Global Accelerator Basic Accelerator instance was created.
     * 
     */
    public Integer createTime() {
        return this.createTime;
    }
    /**
     * @return The details about the cross-region acceleration bandwidth plan that is associated with the Global Accelerator Basic Accelerator instance. **NOTE:** This array is returned only for Global Accelerator Basic Accelerator instances that are created on the International site.
     * 
     */
    public List<GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage> crossDomainBandwidthPackages() {
        return this.crossDomainBandwidthPackages;
    }
    /**
     * @return The description of the Global Accelerator Basic Accelerator instance.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The timestamp that indicates when the Global Accelerator Basic Accelerator instance was expired.
     * 
     */
    public Integer expiredTime() {
        return this.expiredTime;
    }
    /**
     * @return The id of the Global Accelerator Basic Accelerator.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The billing method of the Global Accelerator Basic Accelerator instance. Only `PREPAY` is returned, which indicates the subscription billing method.
     * 
     */
    public String instanceChargeType() {
        return this.instanceChargeType;
    }
    /**
     * @return The ID of the region where the Global Accelerator Basic Accelerator instance is deployed.
     * 
     */
    public String regionId() {
        return this.regionId;
    }
    /**
     * @return The status of the Global Accelerator Basic Accelerator instance. Valid Value: `init`, `active`, `configuring`, `binding`, `unbinding`, `deleting`, `finacialLocked`.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBasicAcceleratorsAccelerator defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bandwidthBillingType;
        private String basicAcceleratorId;
        private String basicAcceleratorName;
        private List<GetBasicAcceleratorsAcceleratorBasicBandwidthPackage> basicBandwidthPackages;
        private String basicEndpointGroupId;
        private String basicIpSetId;
        private Integer createTime;
        private List<GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage> crossDomainBandwidthPackages;
        private String description;
        private Integer expiredTime;
        private String id;
        private String instanceChargeType;
        private String regionId;
        private String status;
        public Builder() {}
        public Builder(GetBasicAcceleratorsAccelerator defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandwidthBillingType = defaults.bandwidthBillingType;
    	      this.basicAcceleratorId = defaults.basicAcceleratorId;
    	      this.basicAcceleratorName = defaults.basicAcceleratorName;
    	      this.basicBandwidthPackages = defaults.basicBandwidthPackages;
    	      this.basicEndpointGroupId = defaults.basicEndpointGroupId;
    	      this.basicIpSetId = defaults.basicIpSetId;
    	      this.createTime = defaults.createTime;
    	      this.crossDomainBandwidthPackages = defaults.crossDomainBandwidthPackages;
    	      this.description = defaults.description;
    	      this.expiredTime = defaults.expiredTime;
    	      this.id = defaults.id;
    	      this.instanceChargeType = defaults.instanceChargeType;
    	      this.regionId = defaults.regionId;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder bandwidthBillingType(String bandwidthBillingType) {
            if (bandwidthBillingType == null) {
              throw new MissingRequiredPropertyException("GetBasicAcceleratorsAccelerator", "bandwidthBillingType");
            }
            this.bandwidthBillingType = bandwidthBillingType;
            return this;
        }
        @CustomType.Setter
        public Builder basicAcceleratorId(String basicAcceleratorId) {
            if (basicAcceleratorId == null) {
              throw new MissingRequiredPropertyException("GetBasicAcceleratorsAccelerator", "basicAcceleratorId");
            }
            this.basicAcceleratorId = basicAcceleratorId;
            return this;
        }
        @CustomType.Setter
        public Builder basicAcceleratorName(String basicAcceleratorName) {
            if (basicAcceleratorName == null) {
              throw new MissingRequiredPropertyException("GetBasicAcceleratorsAccelerator", "basicAcceleratorName");
            }
            this.basicAcceleratorName = basicAcceleratorName;
            return this;
        }
        @CustomType.Setter
        public Builder basicBandwidthPackages(List<GetBasicAcceleratorsAcceleratorBasicBandwidthPackage> basicBandwidthPackages) {
            if (basicBandwidthPackages == null) {
              throw new MissingRequiredPropertyException("GetBasicAcceleratorsAccelerator", "basicBandwidthPackages");
            }
            this.basicBandwidthPackages = basicBandwidthPackages;
            return this;
        }
        public Builder basicBandwidthPackages(GetBasicAcceleratorsAcceleratorBasicBandwidthPackage... basicBandwidthPackages) {
            return basicBandwidthPackages(List.of(basicBandwidthPackages));
        }
        @CustomType.Setter
        public Builder basicEndpointGroupId(String basicEndpointGroupId) {
            if (basicEndpointGroupId == null) {
              throw new MissingRequiredPropertyException("GetBasicAcceleratorsAccelerator", "basicEndpointGroupId");
            }
            this.basicEndpointGroupId = basicEndpointGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder basicIpSetId(String basicIpSetId) {
            if (basicIpSetId == null) {
              throw new MissingRequiredPropertyException("GetBasicAcceleratorsAccelerator", "basicIpSetId");
            }
            this.basicIpSetId = basicIpSetId;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(Integer createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetBasicAcceleratorsAccelerator", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder crossDomainBandwidthPackages(List<GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage> crossDomainBandwidthPackages) {
            if (crossDomainBandwidthPackages == null) {
              throw new MissingRequiredPropertyException("GetBasicAcceleratorsAccelerator", "crossDomainBandwidthPackages");
            }
            this.crossDomainBandwidthPackages = crossDomainBandwidthPackages;
            return this;
        }
        public Builder crossDomainBandwidthPackages(GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage... crossDomainBandwidthPackages) {
            return crossDomainBandwidthPackages(List.of(crossDomainBandwidthPackages));
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetBasicAcceleratorsAccelerator", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder expiredTime(Integer expiredTime) {
            if (expiredTime == null) {
              throw new MissingRequiredPropertyException("GetBasicAcceleratorsAccelerator", "expiredTime");
            }
            this.expiredTime = expiredTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetBasicAcceleratorsAccelerator", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceChargeType(String instanceChargeType) {
            if (instanceChargeType == null) {
              throw new MissingRequiredPropertyException("GetBasicAcceleratorsAccelerator", "instanceChargeType");
            }
            this.instanceChargeType = instanceChargeType;
            return this;
        }
        @CustomType.Setter
        public Builder regionId(String regionId) {
            if (regionId == null) {
              throw new MissingRequiredPropertyException("GetBasicAcceleratorsAccelerator", "regionId");
            }
            this.regionId = regionId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetBasicAcceleratorsAccelerator", "status");
            }
            this.status = status;
            return this;
        }
        public GetBasicAcceleratorsAccelerator build() {
            final var _resultValue = new GetBasicAcceleratorsAccelerator();
            _resultValue.bandwidthBillingType = bandwidthBillingType;
            _resultValue.basicAcceleratorId = basicAcceleratorId;
            _resultValue.basicAcceleratorName = basicAcceleratorName;
            _resultValue.basicBandwidthPackages = basicBandwidthPackages;
            _resultValue.basicEndpointGroupId = basicEndpointGroupId;
            _resultValue.basicIpSetId = basicIpSetId;
            _resultValue.createTime = createTime;
            _resultValue.crossDomainBandwidthPackages = crossDomainBandwidthPackages;
            _resultValue.description = description;
            _resultValue.expiredTime = expiredTime;
            _resultValue.id = id;
            _resultValue.instanceChargeType = instanceChargeType;
            _resultValue.regionId = regionId;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
