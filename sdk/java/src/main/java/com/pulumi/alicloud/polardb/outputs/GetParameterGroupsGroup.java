// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.polardb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetParameterGroupsGroup {
    /**
     * @return The time when the parameter template was created. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
     * 
     */
    private String createTime;
    /**
     * @return The type of the database engine. Only `MySQL` is supported.
     * 
     */
    private String dbType;
    /**
     * @return The version number of the database engine. Valid values: `5.6`, `5.7`, `8.0`.
     * 
     */
    private String dbVersion;
    /**
     * @return Indicates whether to restart the cluster when this parameter template is applied.
     * 
     */
    private String forceRestart;
    /**
     * @return The ID of the Parameter Group.
     * 
     */
    private String id;
    /**
     * @return The number of parameters in the parameter template.
     * 
     */
    private Integer parameterCounts;
    /**
     * @return The description of the parameter template.
     * 
     */
    private String parameterGroupDesc;
    /**
     * @return The ID of the Parameter Group.
     * 
     */
    private String parameterGroupId;
    /**
     * @return The name of the parameter template.
     * 
     */
    private String parameterGroupName;
    /**
     * @return The type of the parameter template.
     * 
     */
    private String parameterGroupType;

    private GetParameterGroupsGroup() {}
    /**
     * @return The time when the parameter template was created. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The type of the database engine. Only `MySQL` is supported.
     * 
     */
    public String dbType() {
        return this.dbType;
    }
    /**
     * @return The version number of the database engine. Valid values: `5.6`, `5.7`, `8.0`.
     * 
     */
    public String dbVersion() {
        return this.dbVersion;
    }
    /**
     * @return Indicates whether to restart the cluster when this parameter template is applied.
     * 
     */
    public String forceRestart() {
        return this.forceRestart;
    }
    /**
     * @return The ID of the Parameter Group.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The number of parameters in the parameter template.
     * 
     */
    public Integer parameterCounts() {
        return this.parameterCounts;
    }
    /**
     * @return The description of the parameter template.
     * 
     */
    public String parameterGroupDesc() {
        return this.parameterGroupDesc;
    }
    /**
     * @return The ID of the Parameter Group.
     * 
     */
    public String parameterGroupId() {
        return this.parameterGroupId;
    }
    /**
     * @return The name of the parameter template.
     * 
     */
    public String parameterGroupName() {
        return this.parameterGroupName;
    }
    /**
     * @return The type of the parameter template.
     * 
     */
    public String parameterGroupType() {
        return this.parameterGroupType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetParameterGroupsGroup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String dbType;
        private String dbVersion;
        private String forceRestart;
        private String id;
        private Integer parameterCounts;
        private String parameterGroupDesc;
        private String parameterGroupId;
        private String parameterGroupName;
        private String parameterGroupType;
        public Builder() {}
        public Builder(GetParameterGroupsGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.dbType = defaults.dbType;
    	      this.dbVersion = defaults.dbVersion;
    	      this.forceRestart = defaults.forceRestart;
    	      this.id = defaults.id;
    	      this.parameterCounts = defaults.parameterCounts;
    	      this.parameterGroupDesc = defaults.parameterGroupDesc;
    	      this.parameterGroupId = defaults.parameterGroupId;
    	      this.parameterGroupName = defaults.parameterGroupName;
    	      this.parameterGroupType = defaults.parameterGroupType;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder dbType(String dbType) {
            this.dbType = Objects.requireNonNull(dbType);
            return this;
        }
        @CustomType.Setter
        public Builder dbVersion(String dbVersion) {
            this.dbVersion = Objects.requireNonNull(dbVersion);
            return this;
        }
        @CustomType.Setter
        public Builder forceRestart(String forceRestart) {
            this.forceRestart = Objects.requireNonNull(forceRestart);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder parameterCounts(Integer parameterCounts) {
            this.parameterCounts = Objects.requireNonNull(parameterCounts);
            return this;
        }
        @CustomType.Setter
        public Builder parameterGroupDesc(String parameterGroupDesc) {
            this.parameterGroupDesc = Objects.requireNonNull(parameterGroupDesc);
            return this;
        }
        @CustomType.Setter
        public Builder parameterGroupId(String parameterGroupId) {
            this.parameterGroupId = Objects.requireNonNull(parameterGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder parameterGroupName(String parameterGroupName) {
            this.parameterGroupName = Objects.requireNonNull(parameterGroupName);
            return this;
        }
        @CustomType.Setter
        public Builder parameterGroupType(String parameterGroupType) {
            this.parameterGroupType = Objects.requireNonNull(parameterGroupType);
            return this;
        }
        public GetParameterGroupsGroup build() {
            final var o = new GetParameterGroupsGroup();
            o.createTime = createTime;
            o.dbType = dbType;
            o.dbVersion = dbVersion;
            o.forceRestart = forceRestart;
            o.id = id;
            o.parameterCounts = parameterCounts;
            o.parameterGroupDesc = parameterGroupDesc;
            o.parameterGroupId = parameterGroupId;
            o.parameterGroupName = parameterGroupName;
            o.parameterGroupType = parameterGroupType;
            return o;
        }
    }
}
