// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nas;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.nas.DataFlowArgs;
import com.pulumi.alicloud.nas.inputs.DataFlowState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a File Storage (NAS) Data Flow resource.
 * 
 * For information about File Storage (NAS) Data Flow and how to use it, see [What is Data Flow](https://www.alibabacloud.com/help/en/doc-detail/27530.html).
 * 
 * &gt; **NOTE:** Available since v1.153.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.nas.NasFunctions;
 * import com.pulumi.alicloud.nas.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.nas.FileSystem;
 * import com.pulumi.alicloud.nas.FileSystemArgs;
 * import com.pulumi.alicloud.nas.MountTarget;
 * import com.pulumi.alicloud.nas.MountTargetArgs;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.oss.Bucket;
 * import com.pulumi.alicloud.oss.BucketArgs;
 * import com.pulumi.alicloud.nas.Fileset;
 * import com.pulumi.alicloud.nas.FilesetArgs;
 * import com.pulumi.alicloud.nas.DataFlow;
 * import com.pulumi.alicloud.nas.DataFlowArgs;
 * import com.pulumi.std.StdFunctions;
 * import com.pulumi.std.inputs.JoinArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var example = NasFunctions.getZones(GetZonesArgs.builder()
 *             .fileSystemType("cpfs")
 *             .build());
 * 
 *         var exampleNetwork = new Network("exampleNetwork", NetworkArgs.builder()
 *             .vpcName("terraform-example")
 *             .cidrBlock("172.17.3.0/24")
 *             .build());
 * 
 *         var exampleSwitch = new Switch("exampleSwitch", SwitchArgs.builder()
 *             .vswitchName("terraform-example")
 *             .cidrBlock("172.17.3.0/24")
 *             .vpcId(exampleNetwork.id())
 *             .zoneId(example.zones()[1].zoneId())
 *             .build());
 * 
 *         var exampleFileSystem = new FileSystem("exampleFileSystem", FileSystemArgs.builder()
 *             .protocolType("cpfs")
 *             .storageType("advance_200")
 *             .fileSystemType("cpfs")
 *             .capacity(3600)
 *             .description("terraform-example")
 *             .zoneId(example.zones()[1].zoneId())
 *             .vpcId(exampleNetwork.id())
 *             .vswitchId(exampleSwitch.id())
 *             .build());
 * 
 *         var exampleMountTarget = new MountTarget("exampleMountTarget", MountTargetArgs.builder()
 *             .fileSystemId(exampleFileSystem.id())
 *             .vswitchId(exampleSwitch.id())
 *             .build());
 * 
 *         var exampleInteger = new Integer("exampleInteger", IntegerArgs.builder()
 *             .max(99999)
 *             .min(10000)
 *             .build());
 * 
 *         var exampleBucket = new Bucket("exampleBucket", BucketArgs.builder()
 *             .bucket(String.format("example-value-%s", exampleInteger.result()))
 *             .acl("private")
 *             .tags(Map.of("cpfs-dataflow", "true"))
 *             .build());
 * 
 *         var exampleFileset = new Fileset("exampleFileset", FilesetArgs.builder()
 *             .fileSystemId(exampleMountTarget.fileSystemId())
 *             .description("terraform-example")
 *             .fileSystemPath("/example_path/")
 *             .build());
 * 
 *         var exampleDataFlow = new DataFlow("exampleDataFlow", DataFlowArgs.builder()
 *             .fsetId(exampleFileset.filesetId())
 *             .description("terraform-example")
 *             .fileSystemId(exampleFileSystem.id())
 *             .sourceSecurityType("SSL")
 *             .sourceStorage(StdFunctions.join(JoinArgs.builder()
 *                 .separator("")
 *                 .input(                
 *                     "oss://",
 *                     exampleBucket.bucket())
 *                 .build()).applyValue(_invoke -> _invoke.result()))
 *             .throughput(600)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * File Storage (NAS) Data Flow can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:nas/dataFlow:DataFlow example &lt;file_system_id&gt;:&lt;data_flow_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:nas/dataFlow:DataFlow")
public class DataFlow extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the Data flow.
     * 
     */
    @Export(name="dataFlowId", refs={String.class}, tree="[0]")
    private Output<String> dataFlowId;

    /**
     * @return The ID of the Data flow.
     * 
     */
    public Output<String> dataFlowId() {
        return this.dataFlowId;
    }
    /**
     * The Description of the data flow. Restrictions:
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The Description of the data flow. Restrictions:
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The dry run.
     * 
     */
    @Export(name="dryRun", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dryRun;

    /**
     * @return The dry run.
     * 
     */
    public Output<Optional<Boolean>> dryRun() {
        return Codegen.optional(this.dryRun);
    }
    /**
     * The ID of the file system.
     * 
     */
    @Export(name="fileSystemId", refs={String.class}, tree="[0]")
    private Output<String> fileSystemId;

    /**
     * @return The ID of the file system.
     * 
     */
    public Output<String> fileSystemId() {
        return this.fileSystemId;
    }
    /**
     * The ID of the Fileset.
     * 
     */
    @Export(name="fsetId", refs={String.class}, tree="[0]")
    private Output<String> fsetId;

    /**
     * @return The ID of the Fileset.
     * 
     */
    public Output<String> fsetId() {
        return this.fsetId;
    }
    /**
     * The security protection type of the source storage. If the source storage must be accessed through security protection, specify the security protection type of the source storage. Value:
     * - `NONE` (default): Indicates that the source storage does not need to be accessed through security protection.
     * - `SSL`: Protects access through SSL certificates.
     * 
     */
    @Export(name="sourceSecurityType", refs={String.class}, tree="[0]")
    private Output<String> sourceSecurityType;

    /**
     * @return The security protection type of the source storage. If the source storage must be accessed through security protection, specify the security protection type of the source storage. Value:
     * - `NONE` (default): Indicates that the source storage does not need to be accessed through security protection.
     * - `SSL`: Protects access through SSL certificates.
     * 
     */
    public Output<String> sourceSecurityType() {
        return this.sourceSecurityType;
    }
    /**
     * The access path of the source store. Format: `&lt;storage type&gt;://&lt;path&gt;`. Among them:
     * - storage type: currently only OSS is supported.
     * - path: the bucket name of OSS.
     * - Only lowercase letters, numbers, and dashes (-) are supported and must start and end with lowercase letters or numbers.
     * 
     */
    @Export(name="sourceStorage", refs={String.class}, tree="[0]")
    private Output<String> sourceStorage;

    /**
     * @return The access path of the source store. Format: `&lt;storage type&gt;://&lt;path&gt;`. Among them:
     * - storage type: currently only OSS is supported.
     * - path: the bucket name of OSS.
     * - Only lowercase letters, numbers, and dashes (-) are supported and must start and end with lowercase letters or numbers.
     * 
     */
    public Output<String> sourceStorage() {
        return this.sourceStorage;
    }
    /**
     * The status of the Data flow. Valid values: `Running`, `Stopped`.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the Data flow. Valid values: `Running`, `Stopped`.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The maximum transmission bandwidth of data flow, unit: `MB/s`. Valid values: `1200`, `1500`, `600`. **NOTE:** The transmission bandwidth of data flow must be less than the IO bandwidth of the file system.
     * 
     */
    @Export(name="throughput", refs={Integer.class}, tree="[0]")
    private Output<Integer> throughput;

    /**
     * @return The maximum transmission bandwidth of data flow, unit: `MB/s`. Valid values: `1200`, `1500`, `600`. **NOTE:** The transmission bandwidth of data flow must be less than the IO bandwidth of the file system.
     * 
     */
    public Output<Integer> throughput() {
        return this.throughput;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DataFlow(java.lang.String name) {
        this(name, DataFlowArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DataFlow(java.lang.String name, DataFlowArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DataFlow(java.lang.String name, DataFlowArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:nas/dataFlow:DataFlow", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DataFlow(java.lang.String name, Output<java.lang.String> id, @Nullable DataFlowState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:nas/dataFlow:DataFlow", name, state, makeResourceOptions(options, id), false);
    }

    private static DataFlowArgs makeArgs(DataFlowArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DataFlowArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DataFlow get(java.lang.String name, Output<java.lang.String> id, @Nullable DataFlowState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DataFlow(name, id, state, options);
    }
}
