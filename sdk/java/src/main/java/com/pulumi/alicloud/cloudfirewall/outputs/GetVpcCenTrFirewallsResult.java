// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudfirewall.outputs;

import com.pulumi.alicloud.cloudfirewall.outputs.GetVpcCenTrFirewallsFirewall;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVpcCenTrFirewallsResult {
    /**
     * @return The ID of the CEN instance.
     * 
     */
    private @Nullable String cenId;
    private @Nullable Integer currentPage;
    /**
     * @return Firewall ID
     * 
     */
    private @Nullable String firewallId;
    /**
     * @return The name of Cloud Firewall.
     * 
     */
    private @Nullable String firewallName;
    /**
     * @return The status of the VPC boundary firewall. Value:-**opened**: opened-**closed**: closed-**notconfigured**: indicates that the VPC boundary firewall has not been configured yet.-**configured**: indicates that the VPC boundary firewall has been configured.-**creating**: indicates that a VPC boundary firewall is being created.-**opening**: indicates that the VPC border firewall is being enabled.-**deleting**: indicates that the VPC boundary firewall is being deleted.&gt; If this parameter is not set, the VPC boundary firewall in all states is queried.
     * 
     */
    private @Nullable String firewallSwitchStatus;
    /**
     * @return A list of Vpc Cen Tr Firewall Entries. Each element contains the following attributes:
     * 
     */
    private List<GetVpcCenTrFirewallsFirewall> firewalls;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of Vpc Cen Tr Firewall IDs.
     * 
     */
    private List<String> ids;
    private @Nullable String outputFile;
    private @Nullable Integer pageNumber;
    private @Nullable Integer pageSize;
    /**
     * @return The region ID of the transit router instance.
     * 
     */
    private @Nullable String regionNo;
    /**
     * @return The routing pattern. Value: managed: indicates automatic mode
     * 
     */
    private @Nullable String routeMode;
    /**
     * @return The ID of the transit router instance.
     * 
     */
    private @Nullable String transitRouterId;

    private GetVpcCenTrFirewallsResult() {}
    /**
     * @return The ID of the CEN instance.
     * 
     */
    public Optional<String> cenId() {
        return Optional.ofNullable(this.cenId);
    }
    public Optional<Integer> currentPage() {
        return Optional.ofNullable(this.currentPage);
    }
    /**
     * @return Firewall ID
     * 
     */
    public Optional<String> firewallId() {
        return Optional.ofNullable(this.firewallId);
    }
    /**
     * @return The name of Cloud Firewall.
     * 
     */
    public Optional<String> firewallName() {
        return Optional.ofNullable(this.firewallName);
    }
    /**
     * @return The status of the VPC boundary firewall. Value:-**opened**: opened-**closed**: closed-**notconfigured**: indicates that the VPC boundary firewall has not been configured yet.-**configured**: indicates that the VPC boundary firewall has been configured.-**creating**: indicates that a VPC boundary firewall is being created.-**opening**: indicates that the VPC border firewall is being enabled.-**deleting**: indicates that the VPC boundary firewall is being deleted.&gt; If this parameter is not set, the VPC boundary firewall in all states is queried.
     * 
     */
    public Optional<String> firewallSwitchStatus() {
        return Optional.ofNullable(this.firewallSwitchStatus);
    }
    /**
     * @return A list of Vpc Cen Tr Firewall Entries. Each element contains the following attributes:
     * 
     */
    public List<GetVpcCenTrFirewallsFirewall> firewalls() {
        return this.firewalls;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of Vpc Cen Tr Firewall IDs.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public Optional<Integer> pageNumber() {
        return Optional.ofNullable(this.pageNumber);
    }
    public Optional<Integer> pageSize() {
        return Optional.ofNullable(this.pageSize);
    }
    /**
     * @return The region ID of the transit router instance.
     * 
     */
    public Optional<String> regionNo() {
        return Optional.ofNullable(this.regionNo);
    }
    /**
     * @return The routing pattern. Value: managed: indicates automatic mode
     * 
     */
    public Optional<String> routeMode() {
        return Optional.ofNullable(this.routeMode);
    }
    /**
     * @return The ID of the transit router instance.
     * 
     */
    public Optional<String> transitRouterId() {
        return Optional.ofNullable(this.transitRouterId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpcCenTrFirewallsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String cenId;
        private @Nullable Integer currentPage;
        private @Nullable String firewallId;
        private @Nullable String firewallName;
        private @Nullable String firewallSwitchStatus;
        private List<GetVpcCenTrFirewallsFirewall> firewalls;
        private String id;
        private List<String> ids;
        private @Nullable String outputFile;
        private @Nullable Integer pageNumber;
        private @Nullable Integer pageSize;
        private @Nullable String regionNo;
        private @Nullable String routeMode;
        private @Nullable String transitRouterId;
        public Builder() {}
        public Builder(GetVpcCenTrFirewallsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cenId = defaults.cenId;
    	      this.currentPage = defaults.currentPage;
    	      this.firewallId = defaults.firewallId;
    	      this.firewallName = defaults.firewallName;
    	      this.firewallSwitchStatus = defaults.firewallSwitchStatus;
    	      this.firewalls = defaults.firewalls;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.outputFile = defaults.outputFile;
    	      this.pageNumber = defaults.pageNumber;
    	      this.pageSize = defaults.pageSize;
    	      this.regionNo = defaults.regionNo;
    	      this.routeMode = defaults.routeMode;
    	      this.transitRouterId = defaults.transitRouterId;
        }

        @CustomType.Setter
        public Builder cenId(@Nullable String cenId) {

            this.cenId = cenId;
            return this;
        }
        @CustomType.Setter
        public Builder currentPage(@Nullable Integer currentPage) {

            this.currentPage = currentPage;
            return this;
        }
        @CustomType.Setter
        public Builder firewallId(@Nullable String firewallId) {

            this.firewallId = firewallId;
            return this;
        }
        @CustomType.Setter
        public Builder firewallName(@Nullable String firewallName) {

            this.firewallName = firewallName;
            return this;
        }
        @CustomType.Setter
        public Builder firewallSwitchStatus(@Nullable String firewallSwitchStatus) {

            this.firewallSwitchStatus = firewallSwitchStatus;
            return this;
        }
        @CustomType.Setter
        public Builder firewalls(List<GetVpcCenTrFirewallsFirewall> firewalls) {
            if (firewalls == null) {
              throw new MissingRequiredPropertyException("GetVpcCenTrFirewallsResult", "firewalls");
            }
            this.firewalls = firewalls;
            return this;
        }
        public Builder firewalls(GetVpcCenTrFirewallsFirewall... firewalls) {
            return firewalls(List.of(firewalls));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVpcCenTrFirewallsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            if (ids == null) {
              throw new MissingRequiredPropertyException("GetVpcCenTrFirewallsResult", "ids");
            }
            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder pageNumber(@Nullable Integer pageNumber) {

            this.pageNumber = pageNumber;
            return this;
        }
        @CustomType.Setter
        public Builder pageSize(@Nullable Integer pageSize) {

            this.pageSize = pageSize;
            return this;
        }
        @CustomType.Setter
        public Builder regionNo(@Nullable String regionNo) {

            this.regionNo = regionNo;
            return this;
        }
        @CustomType.Setter
        public Builder routeMode(@Nullable String routeMode) {

            this.routeMode = routeMode;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterId(@Nullable String transitRouterId) {

            this.transitRouterId = transitRouterId;
            return this;
        }
        public GetVpcCenTrFirewallsResult build() {
            final var _resultValue = new GetVpcCenTrFirewallsResult();
            _resultValue.cenId = cenId;
            _resultValue.currentPage = currentPage;
            _resultValue.firewallId = firewallId;
            _resultValue.firewallName = firewallName;
            _resultValue.firewallSwitchStatus = firewallSwitchStatus;
            _resultValue.firewalls = firewalls;
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.outputFile = outputFile;
            _resultValue.pageNumber = pageNumber;
            _resultValue.pageSize = pageSize;
            _resultValue.regionNo = regionNo;
            _resultValue.routeMode = routeMode;
            _resultValue.transitRouterId = transitRouterId;
            return _resultValue;
        }
    }
}
