// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpn.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IpsecServerIpsecConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final IpsecServerIpsecConfigArgs Empty = new IpsecServerIpsecConfigArgs();

    /**
     * The authentication algorithm that is used in Phase 2 negotiations. Default value: `sha1`.
     * 
     */
    @Import(name="ipsecAuthAlg")
    private @Nullable Output<String> ipsecAuthAlg;

    /**
     * @return The authentication algorithm that is used in Phase 2 negotiations. Default value: `sha1`.
     * 
     */
    public Optional<Output<String>> ipsecAuthAlg() {
        return Optional.ofNullable(this.ipsecAuthAlg);
    }

    /**
     * The encryption algorithm that is used in Phase 2 negotiations. Default value: `aes`.
     * 
     */
    @Import(name="ipsecEncAlg")
    private @Nullable Output<String> ipsecEncAlg;

    /**
     * @return The encryption algorithm that is used in Phase 2 negotiations. Default value: `aes`.
     * 
     */
    public Optional<Output<String>> ipsecEncAlg() {
        return Optional.ofNullable(this.ipsecEncAlg);
    }

    /**
     * The SA lifetime determined by Phase 2 negotiations. Valid values: `0` to `86400`. Default value: `86400`. Unit: `seconds`.
     * 
     */
    @Import(name="ipsecLifetime")
    private @Nullable Output<Integer> ipsecLifetime;

    /**
     * @return The SA lifetime determined by Phase 2 negotiations. Valid values: `0` to `86400`. Default value: `86400`. Unit: `seconds`.
     * 
     */
    public Optional<Output<Integer>> ipsecLifetime() {
        return Optional.ofNullable(this.ipsecLifetime);
    }

    /**
     * Forwards packets of all protocols. The Diffie-Hellman key exchange algorithm used in Phase 2 negotiations. Default value: `group2`.
     * 
     */
    @Import(name="ipsecPfs")
    private @Nullable Output<String> ipsecPfs;

    /**
     * @return Forwards packets of all protocols. The Diffie-Hellman key exchange algorithm used in Phase 2 negotiations. Default value: `group2`.
     * 
     */
    public Optional<Output<String>> ipsecPfs() {
        return Optional.ofNullable(this.ipsecPfs);
    }

    private IpsecServerIpsecConfigArgs() {}

    private IpsecServerIpsecConfigArgs(IpsecServerIpsecConfigArgs $) {
        this.ipsecAuthAlg = $.ipsecAuthAlg;
        this.ipsecEncAlg = $.ipsecEncAlg;
        this.ipsecLifetime = $.ipsecLifetime;
        this.ipsecPfs = $.ipsecPfs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IpsecServerIpsecConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IpsecServerIpsecConfigArgs $;

        public Builder() {
            $ = new IpsecServerIpsecConfigArgs();
        }

        public Builder(IpsecServerIpsecConfigArgs defaults) {
            $ = new IpsecServerIpsecConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipsecAuthAlg The authentication algorithm that is used in Phase 2 negotiations. Default value: `sha1`.
         * 
         * @return builder
         * 
         */
        public Builder ipsecAuthAlg(@Nullable Output<String> ipsecAuthAlg) {
            $.ipsecAuthAlg = ipsecAuthAlg;
            return this;
        }

        /**
         * @param ipsecAuthAlg The authentication algorithm that is used in Phase 2 negotiations. Default value: `sha1`.
         * 
         * @return builder
         * 
         */
        public Builder ipsecAuthAlg(String ipsecAuthAlg) {
            return ipsecAuthAlg(Output.of(ipsecAuthAlg));
        }

        /**
         * @param ipsecEncAlg The encryption algorithm that is used in Phase 2 negotiations. Default value: `aes`.
         * 
         * @return builder
         * 
         */
        public Builder ipsecEncAlg(@Nullable Output<String> ipsecEncAlg) {
            $.ipsecEncAlg = ipsecEncAlg;
            return this;
        }

        /**
         * @param ipsecEncAlg The encryption algorithm that is used in Phase 2 negotiations. Default value: `aes`.
         * 
         * @return builder
         * 
         */
        public Builder ipsecEncAlg(String ipsecEncAlg) {
            return ipsecEncAlg(Output.of(ipsecEncAlg));
        }

        /**
         * @param ipsecLifetime The SA lifetime determined by Phase 2 negotiations. Valid values: `0` to `86400`. Default value: `86400`. Unit: `seconds`.
         * 
         * @return builder
         * 
         */
        public Builder ipsecLifetime(@Nullable Output<Integer> ipsecLifetime) {
            $.ipsecLifetime = ipsecLifetime;
            return this;
        }

        /**
         * @param ipsecLifetime The SA lifetime determined by Phase 2 negotiations. Valid values: `0` to `86400`. Default value: `86400`. Unit: `seconds`.
         * 
         * @return builder
         * 
         */
        public Builder ipsecLifetime(Integer ipsecLifetime) {
            return ipsecLifetime(Output.of(ipsecLifetime));
        }

        /**
         * @param ipsecPfs Forwards packets of all protocols. The Diffie-Hellman key exchange algorithm used in Phase 2 negotiations. Default value: `group2`.
         * 
         * @return builder
         * 
         */
        public Builder ipsecPfs(@Nullable Output<String> ipsecPfs) {
            $.ipsecPfs = ipsecPfs;
            return this;
        }

        /**
         * @param ipsecPfs Forwards packets of all protocols. The Diffie-Hellman key exchange algorithm used in Phase 2 negotiations. Default value: `group2`.
         * 
         * @return builder
         * 
         */
        public Builder ipsecPfs(String ipsecPfs) {
            return ipsecPfs(Output.of(ipsecPfs));
        }

        public IpsecServerIpsecConfigArgs build() {
            return $;
        }
    }

}
