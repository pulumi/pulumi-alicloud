// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AlarmEscalationsInfo {
    /**
     * @return Info level alarm comparison operator. Default value: `&gt;`. Valid values: `&gt;`, `&gt;=`, `&lt;`, `&lt;=`, `!=`, `==`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`. **NOTE:** From version 1.231.0, `comparison_operator` can be set to `==`.
     * 
     */
    private @Nullable String comparisonOperator;
    /**
     * @return Info level alarm statistics method. It must be consistent with that defined for metrics. For more information, see [How to use it](https://cms.console.aliyun.com/metric-meta/acs_ecs_dashboard/ecs).
     * 
     */
    private @Nullable String statistics;
    /**
     * @return Info level alarm threshold value, which must be a numeric value currently.
     * 
     */
    private @Nullable String threshold;
    /**
     * @return Info level alarm retry times. Default value: `3`.
     * 
     */
    private @Nullable Integer times;

    private AlarmEscalationsInfo() {}
    /**
     * @return Info level alarm comparison operator. Default value: `&gt;`. Valid values: `&gt;`, `&gt;=`, `&lt;`, `&lt;=`, `!=`, `==`, `GreaterThanYesterday`, `LessThanYesterday`, `GreaterThanLastWeek`, `LessThanLastWeek`, `GreaterThanLastPeriod`, `LessThanLastPeriod`. **NOTE:** From version 1.231.0, `comparison_operator` can be set to `==`.
     * 
     */
    public Optional<String> comparisonOperator() {
        return Optional.ofNullable(this.comparisonOperator);
    }
    /**
     * @return Info level alarm statistics method. It must be consistent with that defined for metrics. For more information, see [How to use it](https://cms.console.aliyun.com/metric-meta/acs_ecs_dashboard/ecs).
     * 
     */
    public Optional<String> statistics() {
        return Optional.ofNullable(this.statistics);
    }
    /**
     * @return Info level alarm threshold value, which must be a numeric value currently.
     * 
     */
    public Optional<String> threshold() {
        return Optional.ofNullable(this.threshold);
    }
    /**
     * @return Info level alarm retry times. Default value: `3`.
     * 
     */
    public Optional<Integer> times() {
        return Optional.ofNullable(this.times);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AlarmEscalationsInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String comparisonOperator;
        private @Nullable String statistics;
        private @Nullable String threshold;
        private @Nullable Integer times;
        public Builder() {}
        public Builder(AlarmEscalationsInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comparisonOperator = defaults.comparisonOperator;
    	      this.statistics = defaults.statistics;
    	      this.threshold = defaults.threshold;
    	      this.times = defaults.times;
        }

        @CustomType.Setter
        public Builder comparisonOperator(@Nullable String comparisonOperator) {

            this.comparisonOperator = comparisonOperator;
            return this;
        }
        @CustomType.Setter
        public Builder statistics(@Nullable String statistics) {

            this.statistics = statistics;
            return this;
        }
        @CustomType.Setter
        public Builder threshold(@Nullable String threshold) {

            this.threshold = threshold;
            return this;
        }
        @CustomType.Setter
        public Builder times(@Nullable Integer times) {

            this.times = times;
            return this;
        }
        public AlarmEscalationsInfo build() {
            final var _resultValue = new AlarmEscalationsInfo();
            _resultValue.comparisonOperator = comparisonOperator;
            _resultValue.statistics = statistics;
            _resultValue.threshold = threshold;
            _resultValue.times = times;
            return _resultValue;
        }
    }
}
