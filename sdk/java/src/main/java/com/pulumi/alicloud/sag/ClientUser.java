// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sag;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.sag.ClientUserArgs;
import com.pulumi.alicloud.sag.inputs.ClientUserState;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Sag ClientUser resource. This topic describes how to manage accounts as an administrator. After you configure the network, you can create multiple accounts and distribute them to end users so that clients can access Alibaba Cloud.
 * 
 * For information about Sag ClientUser and how to use it, see [What is Sag ClientUser](https://www.alibabacloud.com/help/en/smart-access-gateway/latest/createsmartaccessgatewayclientuser).
 * 
 * &gt; **NOTE:** Available since v1.65.0.
 * 
 * &gt; **NOTE:** Only the following regions support. [`cn-shanghai`, `cn-shanghai-finance-1`, `cn-hongkong`, `ap-southeast-1`, `ap-southeast-3`, `ap-southeast-5`, `ap-northeast-1`, `eu-central-1`]
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.sag.ClientUser;
 * import com.pulumi.alicloud.sag.ClientUserArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("tf-example");
 *         final var sagId = config.get("sagId").orElse("sag-9bifkfaz4fg***");
 *         var default_ = new ClientUser("default", ClientUserArgs.builder()
 *             .sagId(sagId)
 *             .bandwidth("20")
 *             .userMail("tf-example}{@literal @}{@code abc.com")
 *             .userName(name)
 *             .password("example1234")
 *             .clientIp("192.1.10.0")
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * The Sag ClientUser can be imported using the name, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:sag/clientUser:ClientUser example sag-abc123456:tf-username-abc123456
 * ```
 * 
 */
@ResourceType(type="alicloud:sag/clientUser:ClientUser")
public class ClientUser extends com.pulumi.resources.CustomResource {
    /**
     * The SAG APP bandwidth that the user can use. Unit: Kbit/s. Maximum value: 2000 Kbit/s.
     * 
     */
    @Export(name="bandwidth", refs={Integer.class}, tree="[0]")
    private Output<Integer> bandwidth;

    /**
     * @return The SAG APP bandwidth that the user can use. Unit: Kbit/s. Maximum value: 2000 Kbit/s.
     * 
     */
    public Output<Integer> bandwidth() {
        return this.bandwidth;
    }
    /**
     * The IP address of the SAG APP. If you specify this parameter, the current account always uses the specified IP address.Note The IP address must be in the private CIDR block of the SAG client.If you do not specify this parameter, the system automatically allocates an IP address from the private CIDR block of the SAG client. In this case, each re-connection uses a different IP address.
     * 
     */
    @Export(name="clientIp", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clientIp;

    /**
     * @return The IP address of the SAG APP. If you specify this parameter, the current account always uses the specified IP address.Note The IP address must be in the private CIDR block of the SAG client.If you do not specify this parameter, the system automatically allocates an IP address from the private CIDR block of the SAG client. In this case, each re-connection uses a different IP address.
     * 
     */
    public Output<Optional<String>> clientIp() {
        return Codegen.optional(this.clientIp);
    }
    /**
     * The password of the KMS Encryption.
     * 
     */
    @Export(name="kmsEncryptedPassword", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> kmsEncryptedPassword;

    /**
     * @return The password of the KMS Encryption.
     * 
     */
    public Output<Optional<String>> kmsEncryptedPassword() {
        return Codegen.optional(this.kmsEncryptedPassword);
    }
    /**
     * The context of the KMS Encryption.
     * 
     */
    @Export(name="kmsEncryptionContext", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> kmsEncryptionContext;

    /**
     * @return The context of the KMS Encryption.
     * 
     */
    public Output<Optional<Map<String,String>>> kmsEncryptionContext() {
        return Codegen.optional(this.kmsEncryptionContext);
    }
    /**
     * The password used to log on to the SAG APP.Both the user name and the password must be specified. If you specify the user name, the password must be specified, too.
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output<String> password;

    /**
     * @return The password used to log on to the SAG APP.Both the user name and the password must be specified. If you specify the user name, the password must be specified, too.
     * 
     */
    public Output<String> password() {
        return this.password;
    }
    /**
     * The ID of the SAG instance created for the SAG APP.
     * 
     */
    @Export(name="sagId", refs={String.class}, tree="[0]")
    private Output<String> sagId;

    /**
     * @return The ID of the SAG instance created for the SAG APP.
     * 
     */
    public Output<String> sagId() {
        return this.sagId;
    }
    /**
     * The email address of the user. The administrator uses this address to send the account information for logging on to the APP to the user.
     * 
     */
    @Export(name="userMail", refs={String.class}, tree="[0]")
    private Output<String> userMail;

    /**
     * @return The email address of the user. The administrator uses this address to send the account information for logging on to the APP to the user.
     * 
     */
    public Output<String> userMail() {
        return this.userMail;
    }
    /**
     * The user name. User names in the same SAG APP must be unique.Both the user name and the password must be specified. If you specify the user name, the password must be specified, too.
     * 
     */
    @Export(name="userName", refs={String.class}, tree="[0]")
    private Output<String> userName;

    /**
     * @return The user name. User names in the same SAG APP must be unique.Both the user name and the password must be specified. If you specify the user name, the password must be specified, too.
     * 
     */
    public Output<String> userName() {
        return this.userName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ClientUser(java.lang.String name) {
        this(name, ClientUserArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ClientUser(java.lang.String name, ClientUserArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ClientUser(java.lang.String name, ClientUserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:sag/clientUser:ClientUser", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ClientUser(java.lang.String name, Output<java.lang.String> id, @Nullable ClientUserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:sag/clientUser:ClientUser", name, state, makeResourceOptions(options, id), false);
    }

    private static ClientUserArgs makeArgs(ClientUserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ClientUserArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("alicloud:rocketmq/clientUser:ClientUser").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ClientUser get(java.lang.String name, Output<java.lang.String> id, @Nullable ClientUserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ClientUser(name, id, state, options);
    }
}
