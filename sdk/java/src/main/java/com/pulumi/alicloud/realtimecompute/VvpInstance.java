// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.realtimecompute;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.realtimecompute.VvpInstanceArgs;
import com.pulumi.alicloud.realtimecompute.inputs.VvpInstanceState;
import com.pulumi.alicloud.realtimecompute.outputs.VvpInstanceResourceSpec;
import com.pulumi.alicloud.realtimecompute.outputs.VvpInstanceStorage;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * Realtime Compute Vvp Instance can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:realtimecompute/vvpInstance:VvpInstance example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:realtimecompute/vvpInstance:VvpInstance")
public class VvpInstance extends com.pulumi.resources.CustomResource {
    /**
     * The creation time of the resource.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The creation time of the resource.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The number of subscription periods. If the payment type is PRE, this parameter is required.
     * 
     */
    @Export(name="duration", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> duration;

    /**
     * @return The number of subscription periods. If the payment type is PRE, this parameter is required.
     * 
     */
    public Output<Optional<Integer>> duration() {
        return Codegen.optional(this.duration);
    }
    /**
     * The payment type of the resource.
     * 
     */
    @Export(name="paymentType", refs={String.class}, tree="[0]")
    private Output<String> paymentType;

    /**
     * @return The payment type of the resource.
     * 
     */
    public Output<String> paymentType() {
        return this.paymentType;
    }
    /**
     * The subscription period. If the payment type is PRE, this parameter is required.
     * 
     */
    @Export(name="pricingCycle", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> pricingCycle;

    /**
     * @return The subscription period. If the payment type is PRE, this parameter is required.
     * 
     */
    public Output<Optional<String>> pricingCycle() {
        return Codegen.optional(this.pricingCycle);
    }
    /**
     * The resource group to which the newly purchased instance belongs.
     * 
     */
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupId;

    /**
     * @return The resource group to which the newly purchased instance belongs.
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * Resource specifications. See `resource_spec` below.
     * 
     */
    @Export(name="resourceSpec", refs={VvpInstanceResourceSpec.class}, tree="[0]")
    private Output<VvpInstanceResourceSpec> resourceSpec;

    /**
     * @return Resource specifications. See `resource_spec` below.
     * 
     */
    public Output<VvpInstanceResourceSpec> resourceSpec() {
        return this.resourceSpec;
    }
    /**
     * The status of the resource.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the resource.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Store information. See `storage` below.
     * 
     */
    @Export(name="storage", refs={VvpInstanceStorage.class}, tree="[0]")
    private Output<VvpInstanceStorage> storage;

    /**
     * @return Store information. See `storage` below.
     * 
     */
    public Output<VvpInstanceStorage> storage() {
        return this.storage;
    }
    /**
     * The tags of the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> tags;

    /**
     * @return The tags of the resource.
     * 
     */
    public Output<Optional<Map<String,Object>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The VPC ID of the user.
     * 
     */
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output<String> vpcId;

    /**
     * @return The VPC ID of the user.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }
    /**
     * Virtual Switch ID.
     * 
     */
    @Export(name="vswitchIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> vswitchIds;

    /**
     * @return Virtual Switch ID.
     * 
     */
    public Output<List<String>> vswitchIds() {
        return this.vswitchIds;
    }
    /**
     * The name of the workspace.
     * 
     */
    @Export(name="vvpInstanceName", refs={String.class}, tree="[0]")
    private Output<String> vvpInstanceName;

    /**
     * @return The name of the workspace.
     * 
     */
    public Output<String> vvpInstanceName() {
        return this.vvpInstanceName;
    }
    /**
     * The zone ID of the resource.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return The zone ID of the resource.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VvpInstance(String name) {
        this(name, VvpInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VvpInstance(String name, VvpInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VvpInstance(String name, VvpInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:realtimecompute/vvpInstance:VvpInstance", name, args == null ? VvpInstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private VvpInstance(String name, Output<String> id, @Nullable VvpInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:realtimecompute/vvpInstance:VvpInstance", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VvpInstance get(String name, Output<String> id, @Nullable VvpInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VvpInstance(name, id, state, options);
    }
}
