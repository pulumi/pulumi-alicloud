// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.maxcompute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class QuotaScheduleScheduleListConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final QuotaScheduleScheduleListConditionArgs Empty = new QuotaScheduleScheduleListConditionArgs();

    /**
     * Effective time. The format is HH:mm, sample value: 00:00
     * 
     * &gt; **NOTE:** The configuration must start from the effective time of 00:00. The input time must be either a whole hour or a half hour, and the minimum interval between each schedule is 30 minutes.
     * 
     */
    @Import(name="at", required=true)
    private Output<String> at;

    /**
     * @return Effective time. The format is HH:mm, sample value: 00:00
     * 
     * &gt; **NOTE:** The configuration must start from the effective time of 00:00. The input time must be either a whole hour or a half hour, and the minimum interval between each schedule is 30 minutes.
     * 
     */
    public Output<String> at() {
        return this.at;
    }

    private QuotaScheduleScheduleListConditionArgs() {}

    private QuotaScheduleScheduleListConditionArgs(QuotaScheduleScheduleListConditionArgs $) {
        this.at = $.at;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QuotaScheduleScheduleListConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QuotaScheduleScheduleListConditionArgs $;

        public Builder() {
            $ = new QuotaScheduleScheduleListConditionArgs();
        }

        public Builder(QuotaScheduleScheduleListConditionArgs defaults) {
            $ = new QuotaScheduleScheduleListConditionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param at Effective time. The format is HH:mm, sample value: 00:00
         * 
         * &gt; **NOTE:** The configuration must start from the effective time of 00:00. The input time must be either a whole hour or a half hour, and the minimum interval between each schedule is 30 minutes.
         * 
         * @return builder
         * 
         */
        public Builder at(Output<String> at) {
            $.at = at;
            return this;
        }

        /**
         * @param at Effective time. The format is HH:mm, sample value: 00:00
         * 
         * &gt; **NOTE:** The configuration must start from the effective time of 00:00. The input time must be either a whole hour or a half hour, and the minimum interval between each schedule is 30 minutes.
         * 
         * @return builder
         * 
         */
        public Builder at(String at) {
            return at(Output.of(at));
        }

        public QuotaScheduleScheduleListConditionArgs build() {
            if ($.at == null) {
                throw new MissingRequiredPropertyException("QuotaScheduleScheduleListConditionArgs", "at");
            }
            return $;
        }
    }

}
