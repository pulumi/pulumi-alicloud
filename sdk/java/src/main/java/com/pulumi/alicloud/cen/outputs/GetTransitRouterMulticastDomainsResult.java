// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.outputs;

import com.pulumi.alicloud.cen.outputs.GetTransitRouterMulticastDomainsDomain;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTransitRouterMulticastDomainsResult {
    /**
     * @return A list of Cen Transit Router Multicast Domains. Each element contains the following attributes:
     * 
     */
    private List<GetTransitRouterMulticastDomainsDomain> domains;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<String> ids;
    private @Nullable String nameRegex;
    /**
     * @return A list of Transit Router Multicast Domain names.
     * 
     */
    private List<String> names;
    private @Nullable String outputFile;
    /**
     * @return The status of the Transit Router Multicast Domain.
     * 
     */
    private @Nullable String status;
    /**
     * @return The ID of the transit router.
     * 
     */
    private String transitRouterId;
    /**
     * @return The ID of the Transit Router Multicast Domain.
     * 
     */
    private @Nullable String transitRouterMulticastDomainId;

    private GetTransitRouterMulticastDomainsResult() {}
    /**
     * @return A list of Cen Transit Router Multicast Domains. Each element contains the following attributes:
     * 
     */
    public List<GetTransitRouterMulticastDomainsDomain> domains() {
        return this.domains;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    /**
     * @return A list of Transit Router Multicast Domain names.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return The status of the Transit Router Multicast Domain.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The ID of the transit router.
     * 
     */
    public String transitRouterId() {
        return this.transitRouterId;
    }
    /**
     * @return The ID of the Transit Router Multicast Domain.
     * 
     */
    public Optional<String> transitRouterMulticastDomainId() {
        return Optional.ofNullable(this.transitRouterMulticastDomainId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTransitRouterMulticastDomainsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetTransitRouterMulticastDomainsDomain> domains;
        private String id;
        private List<String> ids;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String outputFile;
        private @Nullable String status;
        private String transitRouterId;
        private @Nullable String transitRouterMulticastDomainId;
        public Builder() {}
        public Builder(GetTransitRouterMulticastDomainsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domains = defaults.domains;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.outputFile = defaults.outputFile;
    	      this.status = defaults.status;
    	      this.transitRouterId = defaults.transitRouterId;
    	      this.transitRouterMulticastDomainId = defaults.transitRouterMulticastDomainId;
        }

        @CustomType.Setter
        public Builder domains(List<GetTransitRouterMulticastDomainsDomain> domains) {
            this.domains = Objects.requireNonNull(domains);
            return this;
        }
        public Builder domains(GetTransitRouterMulticastDomainsDomain... domains) {
            return domains(List.of(domains));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder names(List<String> names) {
            this.names = Objects.requireNonNull(names);
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterId(String transitRouterId) {
            this.transitRouterId = Objects.requireNonNull(transitRouterId);
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterMulticastDomainId(@Nullable String transitRouterMulticastDomainId) {
            this.transitRouterMulticastDomainId = transitRouterMulticastDomainId;
            return this;
        }
        public GetTransitRouterMulticastDomainsResult build() {
            final var _resultValue = new GetTransitRouterMulticastDomainsResult();
            _resultValue.domains = domains;
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.nameRegex = nameRegex;
            _resultValue.names = names;
            _resultValue.outputFile = outputFile;
            _resultValue.status = status;
            _resultValue.transitRouterId = transitRouterId;
            _resultValue.transitRouterMulticastDomainId = transitRouterMulticastDomainId;
            return _resultValue;
        }
    }
}
