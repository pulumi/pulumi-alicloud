// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.inputs;

import com.pulumi.alicloud.cen.inputs.TransitRouterVpnAttachmentZoneArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransitRouterVpnAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final TransitRouterVpnAttachmentState Empty = new TransitRouterVpnAttachmentState();

    /**
     * Whether to allow the forwarding router instance to automatically publish routing entries to IPsec connections.
     * 
     */
    @Import(name="autoPublishRouteEnabled")
    private @Nullable Output<Boolean> autoPublishRouteEnabled;

    /**
     * @return Whether to allow the forwarding router instance to automatically publish routing entries to IPsec connections.
     * 
     */
    public Optional<Output<Boolean>> autoPublishRouteEnabled() {
        return Optional.ofNullable(this.autoPublishRouteEnabled);
    }

    /**
     * The id of the cen.
     * 
     */
    @Import(name="cenId")
    private @Nullable Output<String> cenId;

    /**
     * @return The id of the cen.
     * 
     */
    public Optional<Output<String>> cenId() {
        return Optional.ofNullable(this.cenId);
    }

    /**
     * The associating status of the network.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The associating status of the network.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The description of the VPN connection. The description can contain `2` to `256` characters. The description must start with English letters, but cannot start with `http://` or `https://`.
     * 
     */
    @Import(name="transitRouterAttachmentDescription")
    private @Nullable Output<String> transitRouterAttachmentDescription;

    /**
     * @return The description of the VPN connection. The description can contain `2` to `256` characters. The description must start with English letters, but cannot start with `http://` or `https://`.
     * 
     */
    public Optional<Output<String>> transitRouterAttachmentDescription() {
        return Optional.ofNullable(this.transitRouterAttachmentDescription);
    }

    /**
     * The name of the VPN connection. The name must be `2` to `128` characters in length, and can contain digits, underscores (_), and hyphens (-). It must start with a letter.
     * 
     */
    @Import(name="transitRouterAttachmentName")
    private @Nullable Output<String> transitRouterAttachmentName;

    /**
     * @return The name of the VPN connection. The name must be `2` to `128` characters in length, and can contain digits, underscores (_), and hyphens (-). It must start with a letter.
     * 
     */
    public Optional<Output<String>> transitRouterAttachmentName() {
        return Optional.ofNullable(this.transitRouterAttachmentName);
    }

    /**
     * The ID of the forwarding router instance.
     * 
     */
    @Import(name="transitRouterId")
    private @Nullable Output<String> transitRouterId;

    /**
     * @return The ID of the forwarding router instance.
     * 
     */
    public Optional<Output<String>> transitRouterId() {
        return Optional.ofNullable(this.transitRouterId);
    }

    /**
     * The id of the vpn.
     * 
     */
    @Import(name="vpnId")
    private @Nullable Output<String> vpnId;

    /**
     * @return The id of the vpn.
     * 
     */
    public Optional<Output<String>> vpnId() {
        return Optional.ofNullable(this.vpnId);
    }

    /**
     * The owner id of vpn. **NOTE:** You must set `vpn_owner_id`, if you want to connect the transit router to an IPsec-VPN connection that belongs to another Alibaba Cloud account.
     * 
     */
    @Import(name="vpnOwnerId")
    private @Nullable Output<String> vpnOwnerId;

    /**
     * @return The owner id of vpn. **NOTE:** You must set `vpn_owner_id`, if you want to connect the transit router to an IPsec-VPN connection that belongs to another Alibaba Cloud account.
     * 
     */
    public Optional<Output<String>> vpnOwnerId() {
        return Optional.ofNullable(this.vpnOwnerId);
    }

    /**
     * The list of zone mapping. See `zone` below.
     * 
     */
    @Import(name="zones")
    private @Nullable Output<List<TransitRouterVpnAttachmentZoneArgs>> zones;

    /**
     * @return The list of zone mapping. See `zone` below.
     * 
     */
    public Optional<Output<List<TransitRouterVpnAttachmentZoneArgs>>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private TransitRouterVpnAttachmentState() {}

    private TransitRouterVpnAttachmentState(TransitRouterVpnAttachmentState $) {
        this.autoPublishRouteEnabled = $.autoPublishRouteEnabled;
        this.cenId = $.cenId;
        this.status = $.status;
        this.tags = $.tags;
        this.transitRouterAttachmentDescription = $.transitRouterAttachmentDescription;
        this.transitRouterAttachmentName = $.transitRouterAttachmentName;
        this.transitRouterId = $.transitRouterId;
        this.vpnId = $.vpnId;
        this.vpnOwnerId = $.vpnOwnerId;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransitRouterVpnAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransitRouterVpnAttachmentState $;

        public Builder() {
            $ = new TransitRouterVpnAttachmentState();
        }

        public Builder(TransitRouterVpnAttachmentState defaults) {
            $ = new TransitRouterVpnAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoPublishRouteEnabled Whether to allow the forwarding router instance to automatically publish routing entries to IPsec connections.
         * 
         * @return builder
         * 
         */
        public Builder autoPublishRouteEnabled(@Nullable Output<Boolean> autoPublishRouteEnabled) {
            $.autoPublishRouteEnabled = autoPublishRouteEnabled;
            return this;
        }

        /**
         * @param autoPublishRouteEnabled Whether to allow the forwarding router instance to automatically publish routing entries to IPsec connections.
         * 
         * @return builder
         * 
         */
        public Builder autoPublishRouteEnabled(Boolean autoPublishRouteEnabled) {
            return autoPublishRouteEnabled(Output.of(autoPublishRouteEnabled));
        }

        /**
         * @param cenId The id of the cen.
         * 
         * @return builder
         * 
         */
        public Builder cenId(@Nullable Output<String> cenId) {
            $.cenId = cenId;
            return this;
        }

        /**
         * @param cenId The id of the cen.
         * 
         * @return builder
         * 
         */
        public Builder cenId(String cenId) {
            return cenId(Output.of(cenId));
        }

        /**
         * @param status The associating status of the network.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The associating status of the network.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param transitRouterAttachmentDescription The description of the VPN connection. The description can contain `2` to `256` characters. The description must start with English letters, but cannot start with `http://` or `https://`.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentDescription(@Nullable Output<String> transitRouterAttachmentDescription) {
            $.transitRouterAttachmentDescription = transitRouterAttachmentDescription;
            return this;
        }

        /**
         * @param transitRouterAttachmentDescription The description of the VPN connection. The description can contain `2` to `256` characters. The description must start with English letters, but cannot start with `http://` or `https://`.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentDescription(String transitRouterAttachmentDescription) {
            return transitRouterAttachmentDescription(Output.of(transitRouterAttachmentDescription));
        }

        /**
         * @param transitRouterAttachmentName The name of the VPN connection. The name must be `2` to `128` characters in length, and can contain digits, underscores (_), and hyphens (-). It must start with a letter.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentName(@Nullable Output<String> transitRouterAttachmentName) {
            $.transitRouterAttachmentName = transitRouterAttachmentName;
            return this;
        }

        /**
         * @param transitRouterAttachmentName The name of the VPN connection. The name must be `2` to `128` characters in length, and can contain digits, underscores (_), and hyphens (-). It must start with a letter.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentName(String transitRouterAttachmentName) {
            return transitRouterAttachmentName(Output.of(transitRouterAttachmentName));
        }

        /**
         * @param transitRouterId The ID of the forwarding router instance.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterId(@Nullable Output<String> transitRouterId) {
            $.transitRouterId = transitRouterId;
            return this;
        }

        /**
         * @param transitRouterId The ID of the forwarding router instance.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterId(String transitRouterId) {
            return transitRouterId(Output.of(transitRouterId));
        }

        /**
         * @param vpnId The id of the vpn.
         * 
         * @return builder
         * 
         */
        public Builder vpnId(@Nullable Output<String> vpnId) {
            $.vpnId = vpnId;
            return this;
        }

        /**
         * @param vpnId The id of the vpn.
         * 
         * @return builder
         * 
         */
        public Builder vpnId(String vpnId) {
            return vpnId(Output.of(vpnId));
        }

        /**
         * @param vpnOwnerId The owner id of vpn. **NOTE:** You must set `vpn_owner_id`, if you want to connect the transit router to an IPsec-VPN connection that belongs to another Alibaba Cloud account.
         * 
         * @return builder
         * 
         */
        public Builder vpnOwnerId(@Nullable Output<String> vpnOwnerId) {
            $.vpnOwnerId = vpnOwnerId;
            return this;
        }

        /**
         * @param vpnOwnerId The owner id of vpn. **NOTE:** You must set `vpn_owner_id`, if you want to connect the transit router to an IPsec-VPN connection that belongs to another Alibaba Cloud account.
         * 
         * @return builder
         * 
         */
        public Builder vpnOwnerId(String vpnOwnerId) {
            return vpnOwnerId(Output.of(vpnOwnerId));
        }

        /**
         * @param zones The list of zone mapping. See `zone` below.
         * 
         * @return builder
         * 
         */
        public Builder zones(@Nullable Output<List<TransitRouterVpnAttachmentZoneArgs>> zones) {
            $.zones = zones;
            return this;
        }

        /**
         * @param zones The list of zone mapping. See `zone` below.
         * 
         * @return builder
         * 
         */
        public Builder zones(List<TransitRouterVpnAttachmentZoneArgs> zones) {
            return zones(Output.of(zones));
        }

        /**
         * @param zones The list of zone mapping. See `zone` below.
         * 
         * @return builder
         * 
         */
        public Builder zones(TransitRouterVpnAttachmentZoneArgs... zones) {
            return zones(List.of(zones));
        }

        public TransitRouterVpnAttachmentState build() {
            return $;
        }
    }

}
