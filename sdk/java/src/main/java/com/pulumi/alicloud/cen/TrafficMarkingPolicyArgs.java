// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TrafficMarkingPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final TrafficMarkingPolicyArgs Empty = new TrafficMarkingPolicyArgs();

    /**
     * The description of the Traffic Marking Policy. The description must be 2 to 128 characters in length, and must start with a letter. It can contain digits, underscores (_), and hyphens (-).
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Traffic Marking Policy. The description must be 2 to 128 characters in length, and must start with a letter. It can contain digits, underscores (_), and hyphens (-).
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The dry run.
     * 
     */
    @Import(name="dryRun")
    private @Nullable Output<Boolean> dryRun;

    /**
     * @return The dry run.
     * 
     */
    public Optional<Output<Boolean>> dryRun() {
        return Optional.ofNullable(this.dryRun);
    }

    /**
     * The DSCP(Differentiated Services Code Point) of the Traffic Marking Policy. Value range: 0~63.
     * 
     */
    @Import(name="markingDscp", required=true)
    private Output<Integer> markingDscp;

    /**
     * @return The DSCP(Differentiated Services Code Point) of the Traffic Marking Policy. Value range: 0~63.
     * 
     */
    public Output<Integer> markingDscp() {
        return this.markingDscp;
    }

    /**
     * The Priority of the Traffic Marking Policy. Value range: 1~100.
     * 
     */
    @Import(name="priority", required=true)
    private Output<Integer> priority;

    /**
     * @return The Priority of the Traffic Marking Policy. Value range: 1~100.
     * 
     */
    public Output<Integer> priority() {
        return this.priority;
    }

    /**
     * The name of the Traffic Marking Policy. The name must be 2 to 128 characters in length, and must start with a letter. It can contain digits, underscores (_), and hyphens (-).
     * 
     */
    @Import(name="trafficMarkingPolicyName")
    private @Nullable Output<String> trafficMarkingPolicyName;

    /**
     * @return The name of the Traffic Marking Policy. The name must be 2 to 128 characters in length, and must start with a letter. It can contain digits, underscores (_), and hyphens (-).
     * 
     */
    public Optional<Output<String>> trafficMarkingPolicyName() {
        return Optional.ofNullable(this.trafficMarkingPolicyName);
    }

    /**
     * The ID of the transit router.
     * 
     */
    @Import(name="transitRouterId", required=true)
    private Output<String> transitRouterId;

    /**
     * @return The ID of the transit router.
     * 
     */
    public Output<String> transitRouterId() {
        return this.transitRouterId;
    }

    private TrafficMarkingPolicyArgs() {}

    private TrafficMarkingPolicyArgs(TrafficMarkingPolicyArgs $) {
        this.description = $.description;
        this.dryRun = $.dryRun;
        this.markingDscp = $.markingDscp;
        this.priority = $.priority;
        this.trafficMarkingPolicyName = $.trafficMarkingPolicyName;
        this.transitRouterId = $.transitRouterId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TrafficMarkingPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TrafficMarkingPolicyArgs $;

        public Builder() {
            $ = new TrafficMarkingPolicyArgs();
        }

        public Builder(TrafficMarkingPolicyArgs defaults) {
            $ = new TrafficMarkingPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the Traffic Marking Policy. The description must be 2 to 128 characters in length, and must start with a letter. It can contain digits, underscores (_), and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Traffic Marking Policy. The description must be 2 to 128 characters in length, and must start with a letter. It can contain digits, underscores (_), and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param dryRun The dry run.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(@Nullable Output<Boolean> dryRun) {
            $.dryRun = dryRun;
            return this;
        }

        /**
         * @param dryRun The dry run.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(Boolean dryRun) {
            return dryRun(Output.of(dryRun));
        }

        /**
         * @param markingDscp The DSCP(Differentiated Services Code Point) of the Traffic Marking Policy. Value range: 0~63.
         * 
         * @return builder
         * 
         */
        public Builder markingDscp(Output<Integer> markingDscp) {
            $.markingDscp = markingDscp;
            return this;
        }

        /**
         * @param markingDscp The DSCP(Differentiated Services Code Point) of the Traffic Marking Policy. Value range: 0~63.
         * 
         * @return builder
         * 
         */
        public Builder markingDscp(Integer markingDscp) {
            return markingDscp(Output.of(markingDscp));
        }

        /**
         * @param priority The Priority of the Traffic Marking Policy. Value range: 1~100.
         * 
         * @return builder
         * 
         */
        public Builder priority(Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority The Priority of the Traffic Marking Policy. Value range: 1~100.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param trafficMarkingPolicyName The name of the Traffic Marking Policy. The name must be 2 to 128 characters in length, and must start with a letter. It can contain digits, underscores (_), and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder trafficMarkingPolicyName(@Nullable Output<String> trafficMarkingPolicyName) {
            $.trafficMarkingPolicyName = trafficMarkingPolicyName;
            return this;
        }

        /**
         * @param trafficMarkingPolicyName The name of the Traffic Marking Policy. The name must be 2 to 128 characters in length, and must start with a letter. It can contain digits, underscores (_), and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder trafficMarkingPolicyName(String trafficMarkingPolicyName) {
            return trafficMarkingPolicyName(Output.of(trafficMarkingPolicyName));
        }

        /**
         * @param transitRouterId The ID of the transit router.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterId(Output<String> transitRouterId) {
            $.transitRouterId = transitRouterId;
            return this;
        }

        /**
         * @param transitRouterId The ID of the transit router.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterId(String transitRouterId) {
            return transitRouterId(Output.of(transitRouterId));
        }

        public TrafficMarkingPolicyArgs build() {
            if ($.markingDscp == null) {
                throw new MissingRequiredPropertyException("TrafficMarkingPolicyArgs", "markingDscp");
            }
            if ($.priority == null) {
                throw new MissingRequiredPropertyException("TrafficMarkingPolicyArgs", "priority");
            }
            if ($.transitRouterId == null) {
                throw new MissingRequiredPropertyException("TrafficMarkingPolicyArgs", "transitRouterId");
            }
            return $;
        }
    }

}
