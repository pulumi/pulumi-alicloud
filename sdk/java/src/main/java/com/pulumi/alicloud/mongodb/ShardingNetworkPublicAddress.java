// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.mongodb;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.mongodb.ShardingNetworkPublicAddressArgs;
import com.pulumi.alicloud.mongodb.inputs.ShardingNetworkPublicAddressState;
import com.pulumi.alicloud.mongodb.outputs.ShardingNetworkPublicAddressNetworkAddress;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides a MongoDB Sharding Network Public Address resource.
 * 
 * For information about MongoDB Sharding Network Public Address and how to use it, see [What is Sharding Network Public Address](https://www.alibabacloud.com/help/doc-detail/67602.html).
 * 
 * &gt; **NOTE:** Available since v1.149.0.
 * 
 * &gt; **NOTE:** This operation supports sharded cluster instances only.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.mongodb.MongodbFunctions;
 * import com.pulumi.alicloud.mongodb.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.mongodb.ShardingInstance;
 * import com.pulumi.alicloud.mongodb.ShardingInstanceArgs;
 * import com.pulumi.alicloud.mongodb.inputs.ShardingInstanceShardListArgs;
 * import com.pulumi.alicloud.mongodb.inputs.ShardingInstanceMongoListArgs;
 * import com.pulumi.alicloud.mongodb.ShardingNetworkPublicAddress;
 * import com.pulumi.alicloud.mongodb.ShardingNetworkPublicAddressArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get(&#34;name&#34;).orElse(&#34;terraform-example&#34;);
 *         final var defaultZones = MongodbFunctions.getZones();
 * 
 *         final var index = defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()).length() - 1;
 * 
 *         final var zoneId = defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones())[index].id();
 * 
 *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
 *             .vpcName(name)
 *             .cidrBlock(&#34;172.17.3.0/24&#34;)
 *             .build());
 * 
 *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
 *             .vswitchName(name)
 *             .cidrBlock(&#34;172.17.3.0/24&#34;)
 *             .vpcId(defaultNetwork.id())
 *             .zoneId(zoneId)
 *             .build());
 * 
 *         var defaultShardingInstance = new ShardingInstance(&#34;defaultShardingInstance&#34;, ShardingInstanceArgs.builder()        
 *             .zoneId(zoneId)
 *             .vswitchId(defaultSwitch.id())
 *             .engineVersion(&#34;4.2&#34;)
 *             .shardLists(            
 *                 ShardingInstanceShardListArgs.builder()
 *                     .nodeClass(&#34;dds.shard.mid&#34;)
 *                     .nodeStorage(&#34;10&#34;)
 *                     .build(),
 *                 ShardingInstanceShardListArgs.builder()
 *                     .nodeClass(&#34;dds.shard.standard&#34;)
 *                     .nodeStorage(&#34;20&#34;)
 *                     .readonlyReplicas(&#34;1&#34;)
 *                     .build())
 *             .mongoLists(            
 *                 ShardingInstanceMongoListArgs.builder()
 *                     .nodeClass(&#34;dds.mongos.mid&#34;)
 *                     .build(),
 *                 ShardingInstanceMongoListArgs.builder()
 *                     .nodeClass(&#34;dds.mongos.mid&#34;)
 *                     .build())
 *             .build());
 * 
 *         var example = new ShardingNetworkPublicAddress(&#34;example&#34;, ShardingNetworkPublicAddressArgs.builder()        
 *             .dbInstanceId(defaultShardingInstance.id())
 *             .nodeId(defaultShardingInstance.mongoLists().applyValue(mongoLists -&gt; mongoLists[0].nodeId()))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * MongoDB Sharding Network Public Address can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:mongodb/shardingNetworkPublicAddress:ShardingNetworkPublicAddress example &lt;db_instance_id&gt;:&lt;node_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:mongodb/shardingNetworkPublicAddress:ShardingNetworkPublicAddress")
public class ShardingNetworkPublicAddress extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the instance.
     * 
     */
    @Export(name="dbInstanceId", refs={String.class}, tree="[0]")
    private Output<String> dbInstanceId;

    /**
     * @return The ID of the instance.
     * 
     */
    public Output<String> dbInstanceId() {
        return this.dbInstanceId;
    }
    /**
     * The endpoint of the instance.
     * 
     */
    @Export(name="networkAddresses", refs={List.class,ShardingNetworkPublicAddressNetworkAddress.class}, tree="[0,1]")
    private Output<List<ShardingNetworkPublicAddressNetworkAddress>> networkAddresses;

    /**
     * @return The endpoint of the instance.
     * 
     */
    public Output<List<ShardingNetworkPublicAddressNetworkAddress>> networkAddresses() {
        return this.networkAddresses;
    }
    /**
     * The ID of the `mongos`, `shard`, or `Configserver` node in the sharded cluster instance.
     * 
     */
    @Export(name="nodeId", refs={String.class}, tree="[0]")
    private Output<String> nodeId;

    /**
     * @return The ID of the `mongos`, `shard`, or `Configserver` node in the sharded cluster instance.
     * 
     */
    public Output<String> nodeId() {
        return this.nodeId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ShardingNetworkPublicAddress(String name) {
        this(name, ShardingNetworkPublicAddressArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ShardingNetworkPublicAddress(String name, ShardingNetworkPublicAddressArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ShardingNetworkPublicAddress(String name, ShardingNetworkPublicAddressArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:mongodb/shardingNetworkPublicAddress:ShardingNetworkPublicAddress", name, args == null ? ShardingNetworkPublicAddressArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ShardingNetworkPublicAddress(String name, Output<String> id, @Nullable ShardingNetworkPublicAddressState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:mongodb/shardingNetworkPublicAddress:ShardingNetworkPublicAddress", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ShardingNetworkPublicAddress get(String name, Output<String> id, @Nullable ShardingNetworkPublicAddressState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ShardingNetworkPublicAddress(name, id, state, options);
    }
}
