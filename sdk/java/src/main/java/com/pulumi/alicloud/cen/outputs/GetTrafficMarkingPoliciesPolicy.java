// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTrafficMarkingPoliciesPolicy {
    /**
     * @return The description of the Traffic Marking Policy.
     * 
     */
    private String description;
    /**
     * @return The ID of the resource. The value is formatted `&lt;transit_router_id&gt;:&lt;traffic_marking_policy_id&gt;`.
     * 
     */
    private String id;
    /**
     * @return The DSCP(Differentiated Services Code Point) of the Traffic Marking Policy.
     * 
     */
    private Integer markingDscp;
    /**
     * @return The Priority of the Traffic Marking Policy.
     * 
     */
    private Integer priority;
    /**
     * @return The status of the resource.
     * 
     */
    private String status;
    /**
     * @return The ID of the Traffic Marking Policy.
     * 
     */
    private String trafficMarkingPolicyId;
    /**
     * @return The name of the Traffic Marking Policy.
     * 
     */
    private String trafficMarkingPolicyName;
    /**
     * @return The ID of the transit router.
     * 
     */
    private String transitRouterId;

    private GetTrafficMarkingPoliciesPolicy() {}
    /**
     * @return The description of the Traffic Marking Policy.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The ID of the resource. The value is formatted `&lt;transit_router_id&gt;:&lt;traffic_marking_policy_id&gt;`.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The DSCP(Differentiated Services Code Point) of the Traffic Marking Policy.
     * 
     */
    public Integer markingDscp() {
        return this.markingDscp;
    }
    /**
     * @return The Priority of the Traffic Marking Policy.
     * 
     */
    public Integer priority() {
        return this.priority;
    }
    /**
     * @return The status of the resource.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The ID of the Traffic Marking Policy.
     * 
     */
    public String trafficMarkingPolicyId() {
        return this.trafficMarkingPolicyId;
    }
    /**
     * @return The name of the Traffic Marking Policy.
     * 
     */
    public String trafficMarkingPolicyName() {
        return this.trafficMarkingPolicyName;
    }
    /**
     * @return The ID of the transit router.
     * 
     */
    public String transitRouterId() {
        return this.transitRouterId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTrafficMarkingPoliciesPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String id;
        private Integer markingDscp;
        private Integer priority;
        private String status;
        private String trafficMarkingPolicyId;
        private String trafficMarkingPolicyName;
        private String transitRouterId;
        public Builder() {}
        public Builder(GetTrafficMarkingPoliciesPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.markingDscp = defaults.markingDscp;
    	      this.priority = defaults.priority;
    	      this.status = defaults.status;
    	      this.trafficMarkingPolicyId = defaults.trafficMarkingPolicyId;
    	      this.trafficMarkingPolicyName = defaults.trafficMarkingPolicyName;
    	      this.transitRouterId = defaults.transitRouterId;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetTrafficMarkingPoliciesPolicy", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTrafficMarkingPoliciesPolicy", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder markingDscp(Integer markingDscp) {
            if (markingDscp == null) {
              throw new MissingRequiredPropertyException("GetTrafficMarkingPoliciesPolicy", "markingDscp");
            }
            this.markingDscp = markingDscp;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetTrafficMarkingPoliciesPolicy", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetTrafficMarkingPoliciesPolicy", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder trafficMarkingPolicyId(String trafficMarkingPolicyId) {
            if (trafficMarkingPolicyId == null) {
              throw new MissingRequiredPropertyException("GetTrafficMarkingPoliciesPolicy", "trafficMarkingPolicyId");
            }
            this.trafficMarkingPolicyId = trafficMarkingPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder trafficMarkingPolicyName(String trafficMarkingPolicyName) {
            if (trafficMarkingPolicyName == null) {
              throw new MissingRequiredPropertyException("GetTrafficMarkingPoliciesPolicy", "trafficMarkingPolicyName");
            }
            this.trafficMarkingPolicyName = trafficMarkingPolicyName;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterId(String transitRouterId) {
            if (transitRouterId == null) {
              throw new MissingRequiredPropertyException("GetTrafficMarkingPoliciesPolicy", "transitRouterId");
            }
            this.transitRouterId = transitRouterId;
            return this;
        }
        public GetTrafficMarkingPoliciesPolicy build() {
            final var _resultValue = new GetTrafficMarkingPoliciesPolicy();
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.markingDscp = markingDscp;
            _resultValue.priority = priority;
            _resultValue.status = status;
            _resultValue.trafficMarkingPolicyId = trafficMarkingPolicyId;
            _resultValue.trafficMarkingPolicyName = trafficMarkingPolicyName;
            _resultValue.transitRouterId = transitRouterId;
            return _resultValue;
        }
    }
}
