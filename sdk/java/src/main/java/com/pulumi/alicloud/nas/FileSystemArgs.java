// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nas;

import com.pulumi.alicloud.nas.inputs.FileSystemNfsAclArgs;
import com.pulumi.alicloud.nas.inputs.FileSystemOptionsArgs;
import com.pulumi.alicloud.nas.inputs.FileSystemRecycleBinArgs;
import com.pulumi.alicloud.nas.inputs.FileSystemSmbAclArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FileSystemArgs extends com.pulumi.resources.ResourceArgs {

    public static final FileSystemArgs Empty = new FileSystemArgs();

    /**
     * File system capacity.
     * 
     * Unit: GiB, required and valid when FileSystemType = extreme or cpfs.
     * 
     * For optional values, please refer to the actual specifications on the purchase page:
     * -[Fast NAS Pay-As-You-Go Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme_post#/buy)
     * -[Fast NAS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme#/buy)
     * -[Parallel File System CPFS Pay-As-You-Go Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_cpfs_post#/buy)
     * -[Parallel File System CPFS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=cpfs#/buy)
     * 
     */
    @Import(name="capacity")
    private @Nullable Output<Integer> capacity;

    /**
     * @return File system capacity.
     * 
     * Unit: GiB, required and valid when FileSystemType = extreme or cpfs.
     * 
     * For optional values, please refer to the actual specifications on the purchase page:
     * -[Fast NAS Pay-As-You-Go Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme_post#/buy)
     * -[Fast NAS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme#/buy)
     * -[Parallel File System CPFS Pay-As-You-Go Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_cpfs_post#/buy)
     * -[Parallel File System CPFS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=cpfs#/buy)
     * 
     */
    public Optional<Output<Integer>> capacity() {
        return Optional.ofNullable(this.capacity);
    }

    /**
     * File system description.
     * 
     * Restrictions:
     * - 2~128 English or Chinese characters in length.
     * - Must start with upper and lower case letters or Chinese, and cannot start with&#39;http: // &#39;and&#39;https.
     * - Can contain numbers, colons (:), underscores (_), or dashes (-).
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return File system description.
     * 
     * Restrictions:
     * - 2~128 English or Chinese characters in length.
     * - Must start with upper and lower case letters or Chinese, and cannot start with&#39;http: // &#39;and&#39;https.
     * - Can contain numbers, colons (:), underscores (_), or dashes (-).
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Whether the file system is encrypted.
     * 
     * Use the KMS service hosting key to encrypt and store the file system disk data. When reading and writing encrypted data, there is no need to decrypt it.
     * 
     * Value:
     * - 0 (default): not encrypted.
     * - 1:NAS managed key. NAS managed keys are supported when FileSystemType = standard or extreme.
     * - 2: User management key. You can manage keys only when FileSystemType = extreme.
     * 
     */
    @Import(name="encryptType")
    private @Nullable Output<Integer> encryptType;

    /**
     * @return Whether the file system is encrypted.
     * 
     * Use the KMS service hosting key to encrypt and store the file system disk data. When reading and writing encrypted data, there is no need to decrypt it.
     * 
     * Value:
     * - 0 (default): not encrypted.
     * - 1:NAS managed key. NAS managed keys are supported when FileSystemType = standard or extreme.
     * - 2: User management key. You can manage keys only when FileSystemType = extreme.
     * 
     */
    public Optional<Output<Integer>> encryptType() {
        return Optional.ofNullable(this.encryptType);
    }

    /**
     * File system type.
     * 
     * Value:
     * - standard (default): Universal NAS
     * - extreme: extreme NAS
     * - cpfs: file storage CPFS
     * 
     */
    @Import(name="fileSystemType")
    private @Nullable Output<String> fileSystemType;

    /**
     * @return File system type.
     * 
     * Value:
     * - standard (default): Universal NAS
     * - extreme: extreme NAS
     * - cpfs: file storage CPFS
     * 
     */
    public Optional<Output<String>> fileSystemType() {
        return Optional.ofNullable(this.fileSystemType);
    }

    /**
     * String of keytab file content encrypted by base64
     * 
     */
    @Import(name="keytab")
    private @Nullable Output<String> keytab;

    /**
     * @return String of keytab file content encrypted by base64
     * 
     */
    public Optional<Output<String>> keytab() {
        return Optional.ofNullable(this.keytab);
    }

    /**
     * String of the keytab file content encrypted by MD5
     * 
     */
    @Import(name="keytabMd5")
    private @Nullable Output<String> keytabMd5;

    /**
     * @return String of the keytab file content encrypted by MD5
     * 
     */
    public Optional<Output<String>> keytabMd5() {
        return Optional.ofNullable(this.keytabMd5);
    }

    /**
     * The ID of the KMS key.
     * This parameter is required only when EncryptType = 2.
     * 
     */
    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    /**
     * @return The ID of the KMS key.
     * This parameter is required only when EncryptType = 2.
     * 
     */
    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    /**
     * NFS ACL See `nfsAcl` below.
     * 
     */
    @Import(name="nfsAcl")
    private @Nullable Output<FileSystemNfsAclArgs> nfsAcl;

    /**
     * @return NFS ACL See `nfsAcl` below.
     * 
     */
    public Optional<Output<FileSystemNfsAclArgs>> nfsAcl() {
        return Optional.ofNullable(this.nfsAcl);
    }

    /**
     * Option. See `options` below.
     * 
     */
    @Import(name="options")
    private @Nullable Output<FileSystemOptionsArgs> options;

    /**
     * @return Option. See `options` below.
     * 
     */
    public Optional<Output<FileSystemOptionsArgs>> options() {
        return Optional.ofNullable(this.options);
    }

    /**
     * File transfer protocol type.
     * - When FileSystemType = standard, the values are NFS and SMB.
     * - When FileSystemType = extreme, the value is NFS.
     * - When FileSystemType = cpfs, the value is cpfs.
     * 
     */
    @Import(name="protocolType", required=true)
    private Output<String> protocolType;

    /**
     * @return File transfer protocol type.
     * - When FileSystemType = standard, the values are NFS and SMB.
     * - When FileSystemType = extreme, the value is NFS.
     * - When FileSystemType = cpfs, the value is cpfs.
     * 
     */
    public Output<String> protocolType() {
        return this.protocolType;
    }

    /**
     * Recycle Bin See `recycleBin` below.
     * 
     */
    @Import(name="recycleBin")
    private @Nullable Output<FileSystemRecycleBinArgs> recycleBin;

    /**
     * @return Recycle Bin See `recycleBin` below.
     * 
     */
    public Optional<Output<FileSystemRecycleBinArgs>> recycleBin() {
        return Optional.ofNullable(this.recycleBin);
    }

    /**
     * The ID of the resource group.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * SMB ACL See `smbAcl` below.
     * 
     */
    @Import(name="smbAcl")
    private @Nullable Output<FileSystemSmbAclArgs> smbAcl;

    /**
     * @return SMB ACL See `smbAcl` below.
     * 
     */
    public Optional<Output<FileSystemSmbAclArgs>> smbAcl() {
        return Optional.ofNullable(this.smbAcl);
    }

    /**
     * Only extreme NAS is supported.
     * 
     * &gt; **NOTE:** A file system is created from a snapshot. The version of the created file system is the same as that of the snapshot source file system. For example, if the source file system version of the snapshot is 1 and you need to create A file system of version 2, you can first create A file system A from the snapshot, then create A file system B that meets the configuration of version 2, copy the data in file system A to file system B, and migrate the business to file system B after the copy is completed.
     * 
     */
    @Import(name="snapshotId")
    private @Nullable Output<String> snapshotId;

    /**
     * @return Only extreme NAS is supported.
     * 
     * &gt; **NOTE:** A file system is created from a snapshot. The version of the created file system is the same as that of the snapshot source file system. For example, if the source file system version of the snapshot is 1 and you need to create A file system of version 2, you can first create A file system A from the snapshot, then create A file system B that meets the configuration of version 2, copy the data in file system A to file system B, and migrate the business to file system B after the copy is completed.
     * 
     */
    public Optional<Output<String>> snapshotId() {
        return Optional.ofNullable(this.snapshotId);
    }

    /**
     * The storage type.
     * - When FileSystemType = standard, the values are Performance, Capacity, and Premium.
     * - When FileSystemType = extreme, the value is standard or advance.
     * - When FileSystemType = cpfs, the values are advance_100(100MB/s/TiB baseline) and advance_200(200MB/s/TiB baseline).
     * 
     */
    @Import(name="storageType", required=true)
    private Output<String> storageType;

    /**
     * @return The storage type.
     * - When FileSystemType = standard, the values are Performance, Capacity, and Premium.
     * - When FileSystemType = extreme, the value is standard or advance.
     * - When FileSystemType = cpfs, the values are advance_100(100MB/s/TiB baseline) and advance_200(200MB/s/TiB baseline).
     * 
     */
    public Output<String> storageType() {
        return this.storageType;
    }

    /**
     * Label information collection.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Label information collection.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The ID of the VPC network.
     * This parameter must be configured when FileSystemType = cpfs.
     * When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The ID of the VPC network.
     * This parameter must be configured when FileSystemType = cpfs.
     * When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    /**
     * The ID of the switch.
     * This parameter must be configured when FileSystemType = cpfs.
     * When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
     * 
     */
    @Import(name="vswitchId")
    private @Nullable Output<String> vswitchId;

    /**
     * @return The ID of the switch.
     * This parameter must be configured when FileSystemType = cpfs.
     * When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
     * 
     */
    public Optional<Output<String>> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    /**
     * The zone ID.
     * 
     * The usable area refers to the physical area where power and network are independent of each other in the same area.
     * 
     * When the FileSystemType is set to standard, this parameter is optional. By default, a zone that meets the conditions is randomly selected based on the ProtocolType and StorageType configurations. This parameter is required when FileSystemType = extreme or FileSystemType = cpfs.
     * 
     * &gt; **NOTE:** - file systems in different zones in the same region communicate with ECS cloud servers.
     * 
     * &gt; **NOTE:** - We recommend that the file system and the ECS instance belong to the same zone to avoid cross-zone latency.
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return The zone ID.
     * 
     * The usable area refers to the physical area where power and network are independent of each other in the same area.
     * 
     * When the FileSystemType is set to standard, this parameter is optional. By default, a zone that meets the conditions is randomly selected based on the ProtocolType and StorageType configurations. This parameter is required when FileSystemType = extreme or FileSystemType = cpfs.
     * 
     * &gt; **NOTE:** - file systems in different zones in the same region communicate with ECS cloud servers.
     * 
     * &gt; **NOTE:** - We recommend that the file system and the ECS instance belong to the same zone to avoid cross-zone latency.
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private FileSystemArgs() {}

    private FileSystemArgs(FileSystemArgs $) {
        this.capacity = $.capacity;
        this.description = $.description;
        this.encryptType = $.encryptType;
        this.fileSystemType = $.fileSystemType;
        this.keytab = $.keytab;
        this.keytabMd5 = $.keytabMd5;
        this.kmsKeyId = $.kmsKeyId;
        this.nfsAcl = $.nfsAcl;
        this.options = $.options;
        this.protocolType = $.protocolType;
        this.recycleBin = $.recycleBin;
        this.resourceGroupId = $.resourceGroupId;
        this.smbAcl = $.smbAcl;
        this.snapshotId = $.snapshotId;
        this.storageType = $.storageType;
        this.tags = $.tags;
        this.vpcId = $.vpcId;
        this.vswitchId = $.vswitchId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FileSystemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FileSystemArgs $;

        public Builder() {
            $ = new FileSystemArgs();
        }

        public Builder(FileSystemArgs defaults) {
            $ = new FileSystemArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacity File system capacity.
         * 
         * Unit: GiB, required and valid when FileSystemType = extreme or cpfs.
         * 
         * For optional values, please refer to the actual specifications on the purchase page:
         * -[Fast NAS Pay-As-You-Go Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme_post#/buy)
         * -[Fast NAS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme#/buy)
         * -[Parallel File System CPFS Pay-As-You-Go Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_cpfs_post#/buy)
         * -[Parallel File System CPFS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=cpfs#/buy)
         * 
         * @return builder
         * 
         */
        public Builder capacity(@Nullable Output<Integer> capacity) {
            $.capacity = capacity;
            return this;
        }

        /**
         * @param capacity File system capacity.
         * 
         * Unit: GiB, required and valid when FileSystemType = extreme or cpfs.
         * 
         * For optional values, please refer to the actual specifications on the purchase page:
         * -[Fast NAS Pay-As-You-Go Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme_post#/buy)
         * -[Fast NAS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_extreme#/buy)
         * -[Parallel File System CPFS Pay-As-You-Go Purchase Page](https://common-buy.aliyun.com/? commodityCode=nas_cpfs_post#/buy)
         * -[Parallel File System CPFS Package Monthly Purchase Page](https://common-buy.aliyun.com/? commodityCode=cpfs#/buy)
         * 
         * @return builder
         * 
         */
        public Builder capacity(Integer capacity) {
            return capacity(Output.of(capacity));
        }

        /**
         * @param description File system description.
         * 
         * Restrictions:
         * - 2~128 English or Chinese characters in length.
         * - Must start with upper and lower case letters or Chinese, and cannot start with&#39;http: // &#39;and&#39;https.
         * - Can contain numbers, colons (:), underscores (_), or dashes (-).
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description File system description.
         * 
         * Restrictions:
         * - 2~128 English or Chinese characters in length.
         * - Must start with upper and lower case letters or Chinese, and cannot start with&#39;http: // &#39;and&#39;https.
         * - Can contain numbers, colons (:), underscores (_), or dashes (-).
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param encryptType Whether the file system is encrypted.
         * 
         * Use the KMS service hosting key to encrypt and store the file system disk data. When reading and writing encrypted data, there is no need to decrypt it.
         * 
         * Value:
         * - 0 (default): not encrypted.
         * - 1:NAS managed key. NAS managed keys are supported when FileSystemType = standard or extreme.
         * - 2: User management key. You can manage keys only when FileSystemType = extreme.
         * 
         * @return builder
         * 
         */
        public Builder encryptType(@Nullable Output<Integer> encryptType) {
            $.encryptType = encryptType;
            return this;
        }

        /**
         * @param encryptType Whether the file system is encrypted.
         * 
         * Use the KMS service hosting key to encrypt and store the file system disk data. When reading and writing encrypted data, there is no need to decrypt it.
         * 
         * Value:
         * - 0 (default): not encrypted.
         * - 1:NAS managed key. NAS managed keys are supported when FileSystemType = standard or extreme.
         * - 2: User management key. You can manage keys only when FileSystemType = extreme.
         * 
         * @return builder
         * 
         */
        public Builder encryptType(Integer encryptType) {
            return encryptType(Output.of(encryptType));
        }

        /**
         * @param fileSystemType File system type.
         * 
         * Value:
         * - standard (default): Universal NAS
         * - extreme: extreme NAS
         * - cpfs: file storage CPFS
         * 
         * @return builder
         * 
         */
        public Builder fileSystemType(@Nullable Output<String> fileSystemType) {
            $.fileSystemType = fileSystemType;
            return this;
        }

        /**
         * @param fileSystemType File system type.
         * 
         * Value:
         * - standard (default): Universal NAS
         * - extreme: extreme NAS
         * - cpfs: file storage CPFS
         * 
         * @return builder
         * 
         */
        public Builder fileSystemType(String fileSystemType) {
            return fileSystemType(Output.of(fileSystemType));
        }

        /**
         * @param keytab String of keytab file content encrypted by base64
         * 
         * @return builder
         * 
         */
        public Builder keytab(@Nullable Output<String> keytab) {
            $.keytab = keytab;
            return this;
        }

        /**
         * @param keytab String of keytab file content encrypted by base64
         * 
         * @return builder
         * 
         */
        public Builder keytab(String keytab) {
            return keytab(Output.of(keytab));
        }

        /**
         * @param keytabMd5 String of the keytab file content encrypted by MD5
         * 
         * @return builder
         * 
         */
        public Builder keytabMd5(@Nullable Output<String> keytabMd5) {
            $.keytabMd5 = keytabMd5;
            return this;
        }

        /**
         * @param keytabMd5 String of the keytab file content encrypted by MD5
         * 
         * @return builder
         * 
         */
        public Builder keytabMd5(String keytabMd5) {
            return keytabMd5(Output.of(keytabMd5));
        }

        /**
         * @param kmsKeyId The ID of the KMS key.
         * This parameter is required only when EncryptType = 2.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        /**
         * @param kmsKeyId The ID of the KMS key.
         * This parameter is required only when EncryptType = 2.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        /**
         * @param nfsAcl NFS ACL See `nfsAcl` below.
         * 
         * @return builder
         * 
         */
        public Builder nfsAcl(@Nullable Output<FileSystemNfsAclArgs> nfsAcl) {
            $.nfsAcl = nfsAcl;
            return this;
        }

        /**
         * @param nfsAcl NFS ACL See `nfsAcl` below.
         * 
         * @return builder
         * 
         */
        public Builder nfsAcl(FileSystemNfsAclArgs nfsAcl) {
            return nfsAcl(Output.of(nfsAcl));
        }

        /**
         * @param options Option. See `options` below.
         * 
         * @return builder
         * 
         */
        public Builder options(@Nullable Output<FileSystemOptionsArgs> options) {
            $.options = options;
            return this;
        }

        /**
         * @param options Option. See `options` below.
         * 
         * @return builder
         * 
         */
        public Builder options(FileSystemOptionsArgs options) {
            return options(Output.of(options));
        }

        /**
         * @param protocolType File transfer protocol type.
         * - When FileSystemType = standard, the values are NFS and SMB.
         * - When FileSystemType = extreme, the value is NFS.
         * - When FileSystemType = cpfs, the value is cpfs.
         * 
         * @return builder
         * 
         */
        public Builder protocolType(Output<String> protocolType) {
            $.protocolType = protocolType;
            return this;
        }

        /**
         * @param protocolType File transfer protocol type.
         * - When FileSystemType = standard, the values are NFS and SMB.
         * - When FileSystemType = extreme, the value is NFS.
         * - When FileSystemType = cpfs, the value is cpfs.
         * 
         * @return builder
         * 
         */
        public Builder protocolType(String protocolType) {
            return protocolType(Output.of(protocolType));
        }

        /**
         * @param recycleBin Recycle Bin See `recycleBin` below.
         * 
         * @return builder
         * 
         */
        public Builder recycleBin(@Nullable Output<FileSystemRecycleBinArgs> recycleBin) {
            $.recycleBin = recycleBin;
            return this;
        }

        /**
         * @param recycleBin Recycle Bin See `recycleBin` below.
         * 
         * @return builder
         * 
         */
        public Builder recycleBin(FileSystemRecycleBinArgs recycleBin) {
            return recycleBin(Output.of(recycleBin));
        }

        /**
         * @param resourceGroupId The ID of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param smbAcl SMB ACL See `smbAcl` below.
         * 
         * @return builder
         * 
         */
        public Builder smbAcl(@Nullable Output<FileSystemSmbAclArgs> smbAcl) {
            $.smbAcl = smbAcl;
            return this;
        }

        /**
         * @param smbAcl SMB ACL See `smbAcl` below.
         * 
         * @return builder
         * 
         */
        public Builder smbAcl(FileSystemSmbAclArgs smbAcl) {
            return smbAcl(Output.of(smbAcl));
        }

        /**
         * @param snapshotId Only extreme NAS is supported.
         * 
         * &gt; **NOTE:** A file system is created from a snapshot. The version of the created file system is the same as that of the snapshot source file system. For example, if the source file system version of the snapshot is 1 and you need to create A file system of version 2, you can first create A file system A from the snapshot, then create A file system B that meets the configuration of version 2, copy the data in file system A to file system B, and migrate the business to file system B after the copy is completed.
         * 
         * @return builder
         * 
         */
        public Builder snapshotId(@Nullable Output<String> snapshotId) {
            $.snapshotId = snapshotId;
            return this;
        }

        /**
         * @param snapshotId Only extreme NAS is supported.
         * 
         * &gt; **NOTE:** A file system is created from a snapshot. The version of the created file system is the same as that of the snapshot source file system. For example, if the source file system version of the snapshot is 1 and you need to create A file system of version 2, you can first create A file system A from the snapshot, then create A file system B that meets the configuration of version 2, copy the data in file system A to file system B, and migrate the business to file system B after the copy is completed.
         * 
         * @return builder
         * 
         */
        public Builder snapshotId(String snapshotId) {
            return snapshotId(Output.of(snapshotId));
        }

        /**
         * @param storageType The storage type.
         * - When FileSystemType = standard, the values are Performance, Capacity, and Premium.
         * - When FileSystemType = extreme, the value is standard or advance.
         * - When FileSystemType = cpfs, the values are advance_100(100MB/s/TiB baseline) and advance_200(200MB/s/TiB baseline).
         * 
         * @return builder
         * 
         */
        public Builder storageType(Output<String> storageType) {
            $.storageType = storageType;
            return this;
        }

        /**
         * @param storageType The storage type.
         * - When FileSystemType = standard, the values are Performance, Capacity, and Premium.
         * - When FileSystemType = extreme, the value is standard or advance.
         * - When FileSystemType = cpfs, the values are advance_100(100MB/s/TiB baseline) and advance_200(200MB/s/TiB baseline).
         * 
         * @return builder
         * 
         */
        public Builder storageType(String storageType) {
            return storageType(Output.of(storageType));
        }

        /**
         * @param tags Label information collection.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Label information collection.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param vpcId The ID of the VPC network.
         * This parameter must be configured when FileSystemType = cpfs.
         * When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The ID of the VPC network.
         * This parameter must be configured when FileSystemType = cpfs.
         * When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param vswitchId The ID of the switch.
         * This parameter must be configured when FileSystemType = cpfs.
         * When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(@Nullable Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId The ID of the switch.
         * This parameter must be configured when FileSystemType = cpfs.
         * When the FileSystemType is standard or extreme, this parameter is reserved for the interface and has not taken effect yet. You do not need to configure it.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        /**
         * @param zoneId The zone ID.
         * 
         * The usable area refers to the physical area where power and network are independent of each other in the same area.
         * 
         * When the FileSystemType is set to standard, this parameter is optional. By default, a zone that meets the conditions is randomly selected based on the ProtocolType and StorageType configurations. This parameter is required when FileSystemType = extreme or FileSystemType = cpfs.
         * 
         * &gt; **NOTE:** - file systems in different zones in the same region communicate with ECS cloud servers.
         * 
         * &gt; **NOTE:** - We recommend that the file system and the ECS instance belong to the same zone to avoid cross-zone latency.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The zone ID.
         * 
         * The usable area refers to the physical area where power and network are independent of each other in the same area.
         * 
         * When the FileSystemType is set to standard, this parameter is optional. By default, a zone that meets the conditions is randomly selected based on the ProtocolType and StorageType configurations. This parameter is required when FileSystemType = extreme or FileSystemType = cpfs.
         * 
         * &gt; **NOTE:** - file systems in different zones in the same region communicate with ECS cloud servers.
         * 
         * &gt; **NOTE:** - We recommend that the file system and the ECS instance belong to the same zone to avoid cross-zone latency.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public FileSystemArgs build() {
            if ($.protocolType == null) {
                throw new MissingRequiredPropertyException("FileSystemArgs", "protocolType");
            }
            if ($.storageType == null) {
                throw new MissingRequiredPropertyException("FileSystemArgs", "storageType");
            }
            return $;
        }
    }

}
