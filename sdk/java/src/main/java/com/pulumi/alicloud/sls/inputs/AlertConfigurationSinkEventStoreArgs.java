// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sls.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertConfigurationSinkEventStoreArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertConfigurationSinkEventStoreArgs Empty = new AlertConfigurationSinkEventStoreArgs();

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="endpoint")
    private @Nullable Output<String> endpoint;

    public Optional<Output<String>> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    @Import(name="eventStore")
    private @Nullable Output<String> eventStore;

    public Optional<Output<String>> eventStore() {
        return Optional.ofNullable(this.eventStore);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    private AlertConfigurationSinkEventStoreArgs() {}

    private AlertConfigurationSinkEventStoreArgs(AlertConfigurationSinkEventStoreArgs $) {
        this.enabled = $.enabled;
        this.endpoint = $.endpoint;
        this.eventStore = $.eventStore;
        this.project = $.project;
        this.roleArn = $.roleArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertConfigurationSinkEventStoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertConfigurationSinkEventStoreArgs $;

        public Builder() {
            $ = new AlertConfigurationSinkEventStoreArgs();
        }

        public Builder(AlertConfigurationSinkEventStoreArgs defaults) {
            $ = new AlertConfigurationSinkEventStoreArgs(Objects.requireNonNull(defaults));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder endpoint(@Nullable Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        public Builder eventStore(@Nullable Output<String> eventStore) {
            $.eventStore = eventStore;
            return this;
        }

        public Builder eventStore(String eventStore) {
            return eventStore(Output.of(eventStore));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public AlertConfigurationSinkEventStoreArgs build() {
            return $;
        }
    }

}
