// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetHoneyPotsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetHoneyPotsArgs Empty = new GetHoneyPotsArgs();

    /**
     * Honeypot ID.
     * 
     */
    @Import(name="honeypotId")
    private @Nullable Output<String> honeypotId;

    /**
     * @return Honeypot ID.
     * 
     */
    public Optional<Output<String>> honeypotId() {
        return Optional.ofNullable(this.honeypotId);
    }

    /**
     * Honeypot custom name.
     * 
     */
    @Import(name="honeypotName")
    private @Nullable Output<String> honeypotName;

    /**
     * @return Honeypot custom name.
     * 
     */
    public Optional<Output<String>> honeypotName() {
        return Optional.ofNullable(this.honeypotName);
    }

    /**
     * A list of Honey Pot IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of Honey Pot IDs.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * A regex string to filter results by honey pot name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    /**
     * @return A regex string to filter results by honey pot name.
     * 
     */
    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * The ID of the honeypot management node.
     * 
     */
    @Import(name="nodeId")
    private @Nullable Output<String> nodeId;

    /**
     * @return The ID of the honeypot management node.
     * 
     */
    public Optional<Output<String>> nodeId() {
        return Optional.ofNullable(this.nodeId);
    }

    /**
     * The name of the honeypot management node.
     * 
     */
    @Import(name="nodeName")
    private @Nullable Output<String> nodeName;

    /**
     * @return The name of the honeypot management node.
     * 
     */
    public Optional<Output<String>> nodeName() {
        return Optional.ofNullable(this.nodeName);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    private GetHoneyPotsArgs() {}

    private GetHoneyPotsArgs(GetHoneyPotsArgs $) {
        this.honeypotId = $.honeypotId;
        this.honeypotName = $.honeypotName;
        this.ids = $.ids;
        this.nameRegex = $.nameRegex;
        this.nodeId = $.nodeId;
        this.nodeName = $.nodeName;
        this.outputFile = $.outputFile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetHoneyPotsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetHoneyPotsArgs $;

        public Builder() {
            $ = new GetHoneyPotsArgs();
        }

        public Builder(GetHoneyPotsArgs defaults) {
            $ = new GetHoneyPotsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param honeypotId Honeypot ID.
         * 
         * @return builder
         * 
         */
        public Builder honeypotId(@Nullable Output<String> honeypotId) {
            $.honeypotId = honeypotId;
            return this;
        }

        /**
         * @param honeypotId Honeypot ID.
         * 
         * @return builder
         * 
         */
        public Builder honeypotId(String honeypotId) {
            return honeypotId(Output.of(honeypotId));
        }

        /**
         * @param honeypotName Honeypot custom name.
         * 
         * @return builder
         * 
         */
        public Builder honeypotName(@Nullable Output<String> honeypotName) {
            $.honeypotName = honeypotName;
            return this;
        }

        /**
         * @param honeypotName Honeypot custom name.
         * 
         * @return builder
         * 
         */
        public Builder honeypotName(String honeypotName) {
            return honeypotName(Output.of(honeypotName));
        }

        /**
         * @param ids A list of Honey Pot IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Honey Pot IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of Honey Pot IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param nameRegex A regex string to filter results by honey pot name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param nameRegex A regex string to filter results by honey pot name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        /**
         * @param nodeId The ID of the honeypot management node.
         * 
         * @return builder
         * 
         */
        public Builder nodeId(@Nullable Output<String> nodeId) {
            $.nodeId = nodeId;
            return this;
        }

        /**
         * @param nodeId The ID of the honeypot management node.
         * 
         * @return builder
         * 
         */
        public Builder nodeId(String nodeId) {
            return nodeId(Output.of(nodeId));
        }

        /**
         * @param nodeName The name of the honeypot management node.
         * 
         * @return builder
         * 
         */
        public Builder nodeName(@Nullable Output<String> nodeName) {
            $.nodeName = nodeName;
            return this;
        }

        /**
         * @param nodeName The name of the honeypot management node.
         * 
         * @return builder
         * 
         */
        public Builder nodeName(String nodeName) {
            return nodeName(Output.of(nodeName));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        public GetHoneyPotsArgs build() {
            return $;
        }
    }

}
