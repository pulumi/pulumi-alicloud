// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class Ipv4CidrBlockArgs extends com.pulumi.resources.ResourceArgs {

    public static final Ipv4CidrBlockArgs Empty = new Ipv4CidrBlockArgs();

    /**
     * The ID of the IP Address Manager (IPAM) pool that contains IPv4 addresses.
     * 
     */
    @Import(name="ipv4IpamPoolId")
    private @Nullable Output<String> ipv4IpamPoolId;

    /**
     * @return The ID of the IP Address Manager (IPAM) pool that contains IPv4 addresses.
     * 
     */
    public Optional<Output<String>> ipv4IpamPoolId() {
        return Optional.ofNullable(this.ipv4IpamPoolId);
    }

    /**
     * Additional network segment information.
     * 
     */
    @Import(name="secondaryCidrBlock")
    private @Nullable Output<String> secondaryCidrBlock;

    /**
     * @return Additional network segment information.
     * 
     */
    public Optional<Output<String>> secondaryCidrBlock() {
        return Optional.ofNullable(this.secondaryCidrBlock);
    }

    /**
     * Add an additional CIDR block from the IPAM address pool to the VPC by entering a mask.
     * 
     * &gt; **NOTE:**  Specify the IPAM address pool to add an additional CIDR block to the VPC. Enter at least one of the SecondaryCidrBlock or SecondaryCidrMask parameters.
     * 
     */
    @Import(name="secondaryCidrMask")
    private @Nullable Output<Integer> secondaryCidrMask;

    /**
     * @return Add an additional CIDR block from the IPAM address pool to the VPC by entering a mask.
     * 
     * &gt; **NOTE:**  Specify the IPAM address pool to add an additional CIDR block to the VPC. Enter at least one of the SecondaryCidrBlock or SecondaryCidrMask parameters.
     * 
     */
    public Optional<Output<Integer>> secondaryCidrMask() {
        return Optional.ofNullable(this.secondaryCidrMask);
    }

    /**
     * The ID of the VPC.
     * 
     */
    @Import(name="vpcId", required=true)
    private Output<String> vpcId;

    /**
     * @return The ID of the VPC.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }

    private Ipv4CidrBlockArgs() {}

    private Ipv4CidrBlockArgs(Ipv4CidrBlockArgs $) {
        this.ipv4IpamPoolId = $.ipv4IpamPoolId;
        this.secondaryCidrBlock = $.secondaryCidrBlock;
        this.secondaryCidrMask = $.secondaryCidrMask;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(Ipv4CidrBlockArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Ipv4CidrBlockArgs $;

        public Builder() {
            $ = new Ipv4CidrBlockArgs();
        }

        public Builder(Ipv4CidrBlockArgs defaults) {
            $ = new Ipv4CidrBlockArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipv4IpamPoolId The ID of the IP Address Manager (IPAM) pool that contains IPv4 addresses.
         * 
         * @return builder
         * 
         */
        public Builder ipv4IpamPoolId(@Nullable Output<String> ipv4IpamPoolId) {
            $.ipv4IpamPoolId = ipv4IpamPoolId;
            return this;
        }

        /**
         * @param ipv4IpamPoolId The ID of the IP Address Manager (IPAM) pool that contains IPv4 addresses.
         * 
         * @return builder
         * 
         */
        public Builder ipv4IpamPoolId(String ipv4IpamPoolId) {
            return ipv4IpamPoolId(Output.of(ipv4IpamPoolId));
        }

        /**
         * @param secondaryCidrBlock Additional network segment information.
         * 
         * @return builder
         * 
         */
        public Builder secondaryCidrBlock(@Nullable Output<String> secondaryCidrBlock) {
            $.secondaryCidrBlock = secondaryCidrBlock;
            return this;
        }

        /**
         * @param secondaryCidrBlock Additional network segment information.
         * 
         * @return builder
         * 
         */
        public Builder secondaryCidrBlock(String secondaryCidrBlock) {
            return secondaryCidrBlock(Output.of(secondaryCidrBlock));
        }

        /**
         * @param secondaryCidrMask Add an additional CIDR block from the IPAM address pool to the VPC by entering a mask.
         * 
         * &gt; **NOTE:**  Specify the IPAM address pool to add an additional CIDR block to the VPC. Enter at least one of the SecondaryCidrBlock or SecondaryCidrMask parameters.
         * 
         * @return builder
         * 
         */
        public Builder secondaryCidrMask(@Nullable Output<Integer> secondaryCidrMask) {
            $.secondaryCidrMask = secondaryCidrMask;
            return this;
        }

        /**
         * @param secondaryCidrMask Add an additional CIDR block from the IPAM address pool to the VPC by entering a mask.
         * 
         * &gt; **NOTE:**  Specify the IPAM address pool to add an additional CIDR block to the VPC. Enter at least one of the SecondaryCidrBlock or SecondaryCidrMask parameters.
         * 
         * @return builder
         * 
         */
        public Builder secondaryCidrMask(Integer secondaryCidrMask) {
            return secondaryCidrMask(Output.of(secondaryCidrMask));
        }

        /**
         * @param vpcId The ID of the VPC.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The ID of the VPC.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public Ipv4CidrBlockArgs build() {
            if ($.vpcId == null) {
                throw new MissingRequiredPropertyException("Ipv4CidrBlockArgs", "vpcId");
            }
            return $;
        }
    }

}
