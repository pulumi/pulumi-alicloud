// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class Ipv4CidrBlockArgs extends com.pulumi.resources.ResourceArgs {

    public static final Ipv4CidrBlockArgs Empty = new Ipv4CidrBlockArgs();

    /**
     * The IPv4 CIDR block. Take note of the following requirements:
     * * You can specify one of the following standard IPv4 CIDR blocks or their subnets as the secondary IPv4 CIDR block: 192.168.0.0/16, 172.16.0.0/12, and 10.0.0.0/8.
     * * You can also use a custom CIDR block other than 100.64.0.0/10, 224.0.0.0/4, 127.0.0.0/8, 169.254.0.0/16, or their subnets as the secondary IPv4 CIDR block of the VPC.
     * * The CIDR block cannot start with 0. The subnet mask must be 8 to 28 bits in length.
     * * The secondary CIDR block cannot overlap with the primary CIDR block or an existing secondary CIDR block.
     * 
     */
    @Import(name="secondaryCidrBlock", required=true)
    private Output<String> secondaryCidrBlock;

    /**
     * @return The IPv4 CIDR block. Take note of the following requirements:
     * * You can specify one of the following standard IPv4 CIDR blocks or their subnets as the secondary IPv4 CIDR block: 192.168.0.0/16, 172.16.0.0/12, and 10.0.0.0/8.
     * * You can also use a custom CIDR block other than 100.64.0.0/10, 224.0.0.0/4, 127.0.0.0/8, 169.254.0.0/16, or their subnets as the secondary IPv4 CIDR block of the VPC.
     * * The CIDR block cannot start with 0. The subnet mask must be 8 to 28 bits in length.
     * * The secondary CIDR block cannot overlap with the primary CIDR block or an existing secondary CIDR block.
     * 
     */
    public Output<String> secondaryCidrBlock() {
        return this.secondaryCidrBlock;
    }

    /**
     * The ID of the VPC.
     * 
     */
    @Import(name="vpcId", required=true)
    private Output<String> vpcId;

    /**
     * @return The ID of the VPC.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }

    private Ipv4CidrBlockArgs() {}

    private Ipv4CidrBlockArgs(Ipv4CidrBlockArgs $) {
        this.secondaryCidrBlock = $.secondaryCidrBlock;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(Ipv4CidrBlockArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Ipv4CidrBlockArgs $;

        public Builder() {
            $ = new Ipv4CidrBlockArgs();
        }

        public Builder(Ipv4CidrBlockArgs defaults) {
            $ = new Ipv4CidrBlockArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param secondaryCidrBlock The IPv4 CIDR block. Take note of the following requirements:
         * * You can specify one of the following standard IPv4 CIDR blocks or their subnets as the secondary IPv4 CIDR block: 192.168.0.0/16, 172.16.0.0/12, and 10.0.0.0/8.
         * * You can also use a custom CIDR block other than 100.64.0.0/10, 224.0.0.0/4, 127.0.0.0/8, 169.254.0.0/16, or their subnets as the secondary IPv4 CIDR block of the VPC.
         * * The CIDR block cannot start with 0. The subnet mask must be 8 to 28 bits in length.
         * * The secondary CIDR block cannot overlap with the primary CIDR block or an existing secondary CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder secondaryCidrBlock(Output<String> secondaryCidrBlock) {
            $.secondaryCidrBlock = secondaryCidrBlock;
            return this;
        }

        /**
         * @param secondaryCidrBlock The IPv4 CIDR block. Take note of the following requirements:
         * * You can specify one of the following standard IPv4 CIDR blocks or their subnets as the secondary IPv4 CIDR block: 192.168.0.0/16, 172.16.0.0/12, and 10.0.0.0/8.
         * * You can also use a custom CIDR block other than 100.64.0.0/10, 224.0.0.0/4, 127.0.0.0/8, 169.254.0.0/16, or their subnets as the secondary IPv4 CIDR block of the VPC.
         * * The CIDR block cannot start with 0. The subnet mask must be 8 to 28 bits in length.
         * * The secondary CIDR block cannot overlap with the primary CIDR block or an existing secondary CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder secondaryCidrBlock(String secondaryCidrBlock) {
            return secondaryCidrBlock(Output.of(secondaryCidrBlock));
        }

        /**
         * @param vpcId The ID of the VPC.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The ID of the VPC.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public Ipv4CidrBlockArgs build() {
            if ($.secondaryCidrBlock == null) {
                throw new MissingRequiredPropertyException("Ipv4CidrBlockArgs", "secondaryCidrBlock");
            }
            if ($.vpcId == null) {
                throw new MissingRequiredPropertyException("Ipv4CidrBlockArgs", "vpcId");
            }
            return $;
        }
    }

}
