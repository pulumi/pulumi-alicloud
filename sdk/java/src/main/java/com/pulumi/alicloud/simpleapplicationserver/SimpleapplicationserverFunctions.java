// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.simpleapplicationserver;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.simpleapplicationserver.inputs.GetImagesArgs;
import com.pulumi.alicloud.simpleapplicationserver.inputs.GetImagesPlainArgs;
import com.pulumi.alicloud.simpleapplicationserver.inputs.GetInstancesArgs;
import com.pulumi.alicloud.simpleapplicationserver.inputs.GetInstancesPlainArgs;
import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerCustomImagesArgs;
import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerCustomImagesPlainArgs;
import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerDisksArgs;
import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerDisksPlainArgs;
import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerFirewallRulesArgs;
import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerFirewallRulesPlainArgs;
import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerPlansArgs;
import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerPlansPlainArgs;
import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerSnapshotsArgs;
import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerSnapshotsPlainArgs;
import com.pulumi.alicloud.simpleapplicationserver.outputs.GetImagesResult;
import com.pulumi.alicloud.simpleapplicationserver.outputs.GetInstancesResult;
import com.pulumi.alicloud.simpleapplicationserver.outputs.GetServerCustomImagesResult;
import com.pulumi.alicloud.simpleapplicationserver.outputs.GetServerDisksResult;
import com.pulumi.alicloud.simpleapplicationserver.outputs.GetServerFirewallRulesResult;
import com.pulumi.alicloud.simpleapplicationserver.outputs.GetServerPlansResult;
import com.pulumi.alicloud.simpleapplicationserver.outputs.GetServerSnapshotsResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import java.util.concurrent.CompletableFuture;

public final class SimpleapplicationserverFunctions {
    /**
     * This data source provides the Simple Application Server Images of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     */
    public static Output<GetImagesResult> getImages() {
        return getImages(GetImagesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Images of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     */
    public static CompletableFuture<GetImagesResult> getImagesPlain() {
        return getImagesPlain(GetImagesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Images of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     */
    public static Output<GetImagesResult> getImages(GetImagesArgs args) {
        return getImages(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Images of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     */
    public static CompletableFuture<GetImagesResult> getImagesPlain(GetImagesPlainArgs args) {
        return getImagesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Images of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     */
    public static Output<GetImagesResult> getImages(GetImagesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:simpleapplicationserver/getImages:getImages", TypeShape.of(GetImagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Simple Application Server Images of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     */
    public static Output<GetImagesResult> getImages(GetImagesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:simpleapplicationserver/getImages:getImages", TypeShape.of(GetImagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Simple Application Server Images of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     */
    public static CompletableFuture<GetImagesResult> getImagesPlain(GetImagesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:simpleapplicationserver/getImages:getImages", TypeShape.of(GetImagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Simple Application Server Instances of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getInstances(GetInstancesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerInstanceId1", ids.instances()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getInstances(GetInstancesArgs.builder()
     *             .nameRegex("^my-Instance")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerInstanceId2", nameRegex.instances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInstancesResult> getInstances() {
        return getInstances(GetInstancesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Instances of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getInstances(GetInstancesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerInstanceId1", ids.instances()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getInstances(GetInstancesArgs.builder()
     *             .nameRegex("^my-Instance")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerInstanceId2", nameRegex.instances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetInstancesResult> getInstancesPlain() {
        return getInstancesPlain(GetInstancesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Instances of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getInstances(GetInstancesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerInstanceId1", ids.instances()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getInstances(GetInstancesArgs.builder()
     *             .nameRegex("^my-Instance")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerInstanceId2", nameRegex.instances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInstancesResult> getInstances(GetInstancesArgs args) {
        return getInstances(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Instances of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getInstances(GetInstancesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerInstanceId1", ids.instances()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getInstances(GetInstancesArgs.builder()
     *             .nameRegex("^my-Instance")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerInstanceId2", nameRegex.instances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetInstancesResult> getInstancesPlain(GetInstancesPlainArgs args) {
        return getInstancesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Instances of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getInstances(GetInstancesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerInstanceId1", ids.instances()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getInstances(GetInstancesArgs.builder()
     *             .nameRegex("^my-Instance")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerInstanceId2", nameRegex.instances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInstancesResult> getInstances(GetInstancesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:simpleapplicationserver/getInstances:getInstances", TypeShape.of(GetInstancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Simple Application Server Instances of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getInstances(GetInstancesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerInstanceId1", ids.instances()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getInstances(GetInstancesArgs.builder()
     *             .nameRegex("^my-Instance")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerInstanceId2", nameRegex.instances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetInstancesResult> getInstances(GetInstancesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:simpleapplicationserver/getInstances:getInstances", TypeShape.of(GetInstancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Simple Application Server Instances of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getInstances(GetInstancesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerInstanceId1", ids.instances()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getInstances(GetInstancesArgs.builder()
     *             .nameRegex("^my-Instance")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerInstanceId2", nameRegex.instances()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetInstancesResult> getInstancesPlain(GetInstancesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:simpleapplicationserver/getInstances:getInstances", TypeShape.of(GetInstancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Simple Application Server Custom Images of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerCustomImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerCustomImages(GetServerCustomImagesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerCustomImageId1", ids.images()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerCustomImages(GetServerCustomImagesArgs.builder()
     *             .nameRegex("^my-CustomImage")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerCustomImageId2", nameRegex.images()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetServerCustomImagesResult> getServerCustomImages() {
        return getServerCustomImages(GetServerCustomImagesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Custom Images of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerCustomImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerCustomImages(GetServerCustomImagesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerCustomImageId1", ids.images()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerCustomImages(GetServerCustomImagesArgs.builder()
     *             .nameRegex("^my-CustomImage")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerCustomImageId2", nameRegex.images()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetServerCustomImagesResult> getServerCustomImagesPlain() {
        return getServerCustomImagesPlain(GetServerCustomImagesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Custom Images of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerCustomImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerCustomImages(GetServerCustomImagesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerCustomImageId1", ids.images()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerCustomImages(GetServerCustomImagesArgs.builder()
     *             .nameRegex("^my-CustomImage")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerCustomImageId2", nameRegex.images()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetServerCustomImagesResult> getServerCustomImages(GetServerCustomImagesArgs args) {
        return getServerCustomImages(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Custom Images of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerCustomImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerCustomImages(GetServerCustomImagesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerCustomImageId1", ids.images()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerCustomImages(GetServerCustomImagesArgs.builder()
     *             .nameRegex("^my-CustomImage")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerCustomImageId2", nameRegex.images()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetServerCustomImagesResult> getServerCustomImagesPlain(GetServerCustomImagesPlainArgs args) {
        return getServerCustomImagesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Custom Images of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerCustomImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerCustomImages(GetServerCustomImagesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerCustomImageId1", ids.images()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerCustomImages(GetServerCustomImagesArgs.builder()
     *             .nameRegex("^my-CustomImage")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerCustomImageId2", nameRegex.images()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetServerCustomImagesResult> getServerCustomImages(GetServerCustomImagesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:simpleapplicationserver/getServerCustomImages:getServerCustomImages", TypeShape.of(GetServerCustomImagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Simple Application Server Custom Images of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerCustomImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerCustomImages(GetServerCustomImagesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerCustomImageId1", ids.images()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerCustomImages(GetServerCustomImagesArgs.builder()
     *             .nameRegex("^my-CustomImage")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerCustomImageId2", nameRegex.images()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetServerCustomImagesResult> getServerCustomImages(GetServerCustomImagesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:simpleapplicationserver/getServerCustomImages:getServerCustomImages", TypeShape.of(GetServerCustomImagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Simple Application Server Custom Images of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerCustomImagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerCustomImages(GetServerCustomImagesArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerCustomImageId1", ids.images()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerCustomImages(GetServerCustomImagesArgs.builder()
     *             .nameRegex("^my-CustomImage")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerCustomImageId2", nameRegex.images()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetServerCustomImagesResult> getServerCustomImagesPlain(GetServerCustomImagesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:simpleapplicationserver/getServerCustomImages:getServerCustomImages", TypeShape.of(GetServerCustomImagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Simple Application Server Disks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId1", ids.disks()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .nameRegex("^my-Disk")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId2", nameRegex.disks()[0].id());
     *         final var status = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .status("In_use")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId3", status.disks()[0].id());
     *         final var instanceId = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .instanceId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId4", instanceId.disks()[0].id());
     *         final var diskType = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .diskType("System")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId5", diskType.disks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetServerDisksResult> getServerDisks() {
        return getServerDisks(GetServerDisksArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Disks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId1", ids.disks()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .nameRegex("^my-Disk")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId2", nameRegex.disks()[0].id());
     *         final var status = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .status("In_use")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId3", status.disks()[0].id());
     *         final var instanceId = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .instanceId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId4", instanceId.disks()[0].id());
     *         final var diskType = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .diskType("System")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId5", diskType.disks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetServerDisksResult> getServerDisksPlain() {
        return getServerDisksPlain(GetServerDisksPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Disks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId1", ids.disks()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .nameRegex("^my-Disk")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId2", nameRegex.disks()[0].id());
     *         final var status = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .status("In_use")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId3", status.disks()[0].id());
     *         final var instanceId = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .instanceId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId4", instanceId.disks()[0].id());
     *         final var diskType = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .diskType("System")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId5", diskType.disks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetServerDisksResult> getServerDisks(GetServerDisksArgs args) {
        return getServerDisks(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Disks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId1", ids.disks()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .nameRegex("^my-Disk")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId2", nameRegex.disks()[0].id());
     *         final var status = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .status("In_use")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId3", status.disks()[0].id());
     *         final var instanceId = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .instanceId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId4", instanceId.disks()[0].id());
     *         final var diskType = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .diskType("System")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId5", diskType.disks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetServerDisksResult> getServerDisksPlain(GetServerDisksPlainArgs args) {
        return getServerDisksPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Disks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId1", ids.disks()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .nameRegex("^my-Disk")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId2", nameRegex.disks()[0].id());
     *         final var status = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .status("In_use")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId3", status.disks()[0].id());
     *         final var instanceId = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .instanceId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId4", instanceId.disks()[0].id());
     *         final var diskType = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .diskType("System")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId5", diskType.disks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetServerDisksResult> getServerDisks(GetServerDisksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:simpleapplicationserver/getServerDisks:getServerDisks", TypeShape.of(GetServerDisksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Simple Application Server Disks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId1", ids.disks()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .nameRegex("^my-Disk")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId2", nameRegex.disks()[0].id());
     *         final var status = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .status("In_use")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId3", status.disks()[0].id());
     *         final var instanceId = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .instanceId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId4", instanceId.disks()[0].id());
     *         final var diskType = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .diskType("System")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId5", diskType.disks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetServerDisksResult> getServerDisks(GetServerDisksArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:simpleapplicationserver/getServerDisks:getServerDisks", TypeShape.of(GetServerDisksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Simple Application Server Disks of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerDisksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId1", ids.disks()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .nameRegex("^my-Disk")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId2", nameRegex.disks()[0].id());
     *         final var status = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .status("In_use")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId3", status.disks()[0].id());
     *         final var instanceId = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .instanceId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId4", instanceId.disks()[0].id());
     *         final var diskType = SimpleapplicationserverFunctions.getServerDisks(GetServerDisksArgs.builder()
     *             .diskType("System")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerDiskId5", diskType.disks()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetServerDisksResult> getServerDisksPlain(GetServerDisksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:simpleapplicationserver/getServerDisks:getServerDisks", TypeShape.of(GetServerDisksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Simple Application Server Firewall Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerFirewallRules(GetServerFirewallRulesArgs.builder()
     *             .instanceId("example_value")
     *             .ids(            
     *                 "example_value-1",
     *                 "example_value-2")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerFirewallRuleId1", ids.rules()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetServerFirewallRulesResult> getServerFirewallRules(GetServerFirewallRulesArgs args) {
        return getServerFirewallRules(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Firewall Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerFirewallRules(GetServerFirewallRulesArgs.builder()
     *             .instanceId("example_value")
     *             .ids(            
     *                 "example_value-1",
     *                 "example_value-2")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerFirewallRuleId1", ids.rules()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetServerFirewallRulesResult> getServerFirewallRulesPlain(GetServerFirewallRulesPlainArgs args) {
        return getServerFirewallRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Firewall Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerFirewallRules(GetServerFirewallRulesArgs.builder()
     *             .instanceId("example_value")
     *             .ids(            
     *                 "example_value-1",
     *                 "example_value-2")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerFirewallRuleId1", ids.rules()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetServerFirewallRulesResult> getServerFirewallRules(GetServerFirewallRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:simpleapplicationserver/getServerFirewallRules:getServerFirewallRules", TypeShape.of(GetServerFirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Simple Application Server Firewall Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerFirewallRules(GetServerFirewallRulesArgs.builder()
     *             .instanceId("example_value")
     *             .ids(            
     *                 "example_value-1",
     *                 "example_value-2")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerFirewallRuleId1", ids.rules()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetServerFirewallRulesResult> getServerFirewallRules(GetServerFirewallRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:simpleapplicationserver/getServerFirewallRules:getServerFirewallRules", TypeShape.of(GetServerFirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Simple Application Server Firewall Rules of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerFirewallRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerFirewallRules(GetServerFirewallRulesArgs.builder()
     *             .instanceId("example_value")
     *             .ids(            
     *                 "example_value-1",
     *                 "example_value-2")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerFirewallRuleId1", ids.rules()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetServerFirewallRulesResult> getServerFirewallRulesPlain(GetServerFirewallRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:simpleapplicationserver/getServerFirewallRules:getServerFirewallRules", TypeShape.of(GetServerFirewallRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Simple Application Server Plans of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerPlansArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SimpleapplicationserverFunctions.getServerPlans(GetServerPlansArgs.builder()
     *             .memory(1)
     *             .bandwidth(3)
     *             .diskSize(40)
     *             .flow(6)
     *             .core(2)
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerPlanId1", ids.plans()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetServerPlansResult> getServerPlans() {
        return getServerPlans(GetServerPlansArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Plans of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerPlansArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SimpleapplicationserverFunctions.getServerPlans(GetServerPlansArgs.builder()
     *             .memory(1)
     *             .bandwidth(3)
     *             .diskSize(40)
     *             .flow(6)
     *             .core(2)
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerPlanId1", ids.plans()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetServerPlansResult> getServerPlansPlain() {
        return getServerPlansPlain(GetServerPlansPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Plans of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerPlansArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SimpleapplicationserverFunctions.getServerPlans(GetServerPlansArgs.builder()
     *             .memory(1)
     *             .bandwidth(3)
     *             .diskSize(40)
     *             .flow(6)
     *             .core(2)
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerPlanId1", ids.plans()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetServerPlansResult> getServerPlans(GetServerPlansArgs args) {
        return getServerPlans(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Plans of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerPlansArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SimpleapplicationserverFunctions.getServerPlans(GetServerPlansArgs.builder()
     *             .memory(1)
     *             .bandwidth(3)
     *             .diskSize(40)
     *             .flow(6)
     *             .core(2)
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerPlanId1", ids.plans()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetServerPlansResult> getServerPlansPlain(GetServerPlansPlainArgs args) {
        return getServerPlansPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Plans of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerPlansArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SimpleapplicationserverFunctions.getServerPlans(GetServerPlansArgs.builder()
     *             .memory(1)
     *             .bandwidth(3)
     *             .diskSize(40)
     *             .flow(6)
     *             .core(2)
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerPlanId1", ids.plans()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetServerPlansResult> getServerPlans(GetServerPlansArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:simpleapplicationserver/getServerPlans:getServerPlans", TypeShape.of(GetServerPlansResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Simple Application Server Plans of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerPlansArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SimpleapplicationserverFunctions.getServerPlans(GetServerPlansArgs.builder()
     *             .memory(1)
     *             .bandwidth(3)
     *             .diskSize(40)
     *             .flow(6)
     *             .core(2)
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerPlanId1", ids.plans()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetServerPlansResult> getServerPlans(GetServerPlansArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:simpleapplicationserver/getServerPlans:getServerPlans", TypeShape.of(GetServerPlansResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Simple Application Server Plans of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.135.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerPlansArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = SimpleapplicationserverFunctions.getServerPlans(GetServerPlansArgs.builder()
     *             .memory(1)
     *             .bandwidth(3)
     *             .diskSize(40)
     *             .flow(6)
     *             .core(2)
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerPlanId1", ids.plans()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetServerPlansResult> getServerPlansPlain(GetServerPlansPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:simpleapplicationserver/getServerPlans:getServerPlans", TypeShape.of(GetServerPlansResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Simple Application Server Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId1", ids.snapshots()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .nameRegex("^my-Snapshot")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId2", nameRegex.snapshots()[0].id());
     *         final var diskIdConf = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .diskId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId3", diskIdConf.snapshots()[0].id());
     *         final var instanceIdConf = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .instanceId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId4", instanceIdConf.snapshots()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetServerSnapshotsResult> getServerSnapshots() {
        return getServerSnapshots(GetServerSnapshotsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId1", ids.snapshots()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .nameRegex("^my-Snapshot")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId2", nameRegex.snapshots()[0].id());
     *         final var diskIdConf = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .diskId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId3", diskIdConf.snapshots()[0].id());
     *         final var instanceIdConf = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .instanceId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId4", instanceIdConf.snapshots()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetServerSnapshotsResult> getServerSnapshotsPlain() {
        return getServerSnapshotsPlain(GetServerSnapshotsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId1", ids.snapshots()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .nameRegex("^my-Snapshot")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId2", nameRegex.snapshots()[0].id());
     *         final var diskIdConf = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .diskId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId3", diskIdConf.snapshots()[0].id());
     *         final var instanceIdConf = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .instanceId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId4", instanceIdConf.snapshots()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetServerSnapshotsResult> getServerSnapshots(GetServerSnapshotsArgs args) {
        return getServerSnapshots(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId1", ids.snapshots()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .nameRegex("^my-Snapshot")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId2", nameRegex.snapshots()[0].id());
     *         final var diskIdConf = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .diskId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId3", diskIdConf.snapshots()[0].id());
     *         final var instanceIdConf = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .instanceId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId4", instanceIdConf.snapshots()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetServerSnapshotsResult> getServerSnapshotsPlain(GetServerSnapshotsPlainArgs args) {
        return getServerSnapshotsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the Simple Application Server Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId1", ids.snapshots()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .nameRegex("^my-Snapshot")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId2", nameRegex.snapshots()[0].id());
     *         final var diskIdConf = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .diskId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId3", diskIdConf.snapshots()[0].id());
     *         final var instanceIdConf = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .instanceId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId4", instanceIdConf.snapshots()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetServerSnapshotsResult> getServerSnapshots(GetServerSnapshotsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("alicloud:simpleapplicationserver/getServerSnapshots:getServerSnapshots", TypeShape.of(GetServerSnapshotsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Simple Application Server Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId1", ids.snapshots()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .nameRegex("^my-Snapshot")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId2", nameRegex.snapshots()[0].id());
     *         final var diskIdConf = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .diskId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId3", diskIdConf.snapshots()[0].id());
     *         final var instanceIdConf = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .instanceId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId4", instanceIdConf.snapshots()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetServerSnapshotsResult> getServerSnapshots(GetServerSnapshotsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("alicloud:simpleapplicationserver/getServerSnapshots:getServerSnapshots", TypeShape.of(GetServerSnapshotsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the Simple Application Server Snapshots of the current Alibaba Cloud user.
     * 
     * &gt; **NOTE:** Available in v1.143.0+.
     * 
     * ## Example Usage
     * 
     * Basic Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.alicloud.simpleapplicationserver.SimpleapplicationserverFunctions;
     * import com.pulumi.alicloud.simpleapplicationserver.inputs.GetServerSnapshotsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var ids = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId1", ids.snapshots()[0].id());
     *         final var nameRegex = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .nameRegex("^my-Snapshot")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId2", nameRegex.snapshots()[0].id());
     *         final var diskIdConf = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .diskId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId3", diskIdConf.snapshots()[0].id());
     *         final var instanceIdConf = SimpleapplicationserverFunctions.getServerSnapshots(GetServerSnapshotsArgs.builder()
     *             .ids("example_id")
     *             .instanceId("example_value")
     *             .build());
     * 
     *         ctx.export("simpleApplicationServerSnapshotId4", instanceIdConf.snapshots()[0].id());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetServerSnapshotsResult> getServerSnapshotsPlain(GetServerSnapshotsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("alicloud:simpleapplicationserver/getServerSnapshots:getServerSnapshots", TypeShape.of(GetServerSnapshotsResult.class), args, Utilities.withVersion(options));
    }
}
