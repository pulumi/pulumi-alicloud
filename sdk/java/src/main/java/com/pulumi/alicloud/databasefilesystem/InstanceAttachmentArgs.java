// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.databasefilesystem;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class InstanceAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceAttachmentArgs Empty = new InstanceAttachmentArgs();

    /**
     * The ID of the ECS instance.
     * 
     */
    @Import(name="ecsId", required=true)
    private Output<String> ecsId;

    /**
     * @return The ID of the ECS instance.
     * 
     */
    public Output<String> ecsId() {
        return this.ecsId;
    }

    /**
     * The ID of the database file system.
     * 
     */
    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    /**
     * @return The ID of the database file system.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }

    private InstanceAttachmentArgs() {}

    private InstanceAttachmentArgs(InstanceAttachmentArgs $) {
        this.ecsId = $.ecsId;
        this.instanceId = $.instanceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceAttachmentArgs $;

        public Builder() {
            $ = new InstanceAttachmentArgs();
        }

        public Builder(InstanceAttachmentArgs defaults) {
            $ = new InstanceAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ecsId The ID of the ECS instance.
         * 
         * @return builder
         * 
         */
        public Builder ecsId(Output<String> ecsId) {
            $.ecsId = ecsId;
            return this;
        }

        /**
         * @param ecsId The ID of the ECS instance.
         * 
         * @return builder
         * 
         */
        public Builder ecsId(String ecsId) {
            return ecsId(Output.of(ecsId));
        }

        /**
         * @param instanceId The ID of the database file system.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The ID of the database file system.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        public InstanceAttachmentArgs build() {
            if ($.ecsId == null) {
                throw new MissingRequiredPropertyException("InstanceAttachmentArgs", "ecsId");
            }
            if ($.instanceId == null) {
                throw new MissingRequiredPropertyException("InstanceAttachmentArgs", "instanceId");
            }
            return $;
        }
    }

}
