// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.edas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetApplicationsApplication {
    /**
     * @return The ID of the application that you want to deploy.
     * 
     */
    private String appId;
    /**
     * @return The name of your EDAS application. Only letters &#39;-&#39; &#39;_&#39; and numbers are allowed. The length cannot exceed 36 characters.
     * 
     */
    private String appName;
    /**
     * @return The type of the package for the deployment of the application that you want to create. The valid values are: WAR and JAR. We strongly recommend you to set this parameter when creating the application.
     * 
     */
    private String applicationType;
    /**
     * @return The package ID of Enterprise Distributed Application Service (EDAS) Container.
     * 
     */
    private Integer buildPackageId;
    /**
     * @return The ID of the cluster that you want to create the application.
     * 
     */
    private String clusterId;
    /**
     * @return The type of the cluster that you want to create. Valid values: 1: Swarm cluster. 2: ECS cluster. 3: Kubernetes cluster.
     * 
     */
    private Integer clusterType;
    /**
     * @return The ID of the namespace the application belongs to.
     * 
     */
    private String regionId;

    private GetApplicationsApplication() {}
    /**
     * @return The ID of the application that you want to deploy.
     * 
     */
    public String appId() {
        return this.appId;
    }
    /**
     * @return The name of your EDAS application. Only letters &#39;-&#39; &#39;_&#39; and numbers are allowed. The length cannot exceed 36 characters.
     * 
     */
    public String appName() {
        return this.appName;
    }
    /**
     * @return The type of the package for the deployment of the application that you want to create. The valid values are: WAR and JAR. We strongly recommend you to set this parameter when creating the application.
     * 
     */
    public String applicationType() {
        return this.applicationType;
    }
    /**
     * @return The package ID of Enterprise Distributed Application Service (EDAS) Container.
     * 
     */
    public Integer buildPackageId() {
        return this.buildPackageId;
    }
    /**
     * @return The ID of the cluster that you want to create the application.
     * 
     */
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return The type of the cluster that you want to create. Valid values: 1: Swarm cluster. 2: ECS cluster. 3: Kubernetes cluster.
     * 
     */
    public Integer clusterType() {
        return this.clusterType;
    }
    /**
     * @return The ID of the namespace the application belongs to.
     * 
     */
    public String regionId() {
        return this.regionId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationsApplication defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String appId;
        private String appName;
        private String applicationType;
        private Integer buildPackageId;
        private String clusterId;
        private Integer clusterType;
        private String regionId;
        public Builder() {}
        public Builder(GetApplicationsApplication defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appId = defaults.appId;
    	      this.appName = defaults.appName;
    	      this.applicationType = defaults.applicationType;
    	      this.buildPackageId = defaults.buildPackageId;
    	      this.clusterId = defaults.clusterId;
    	      this.clusterType = defaults.clusterType;
    	      this.regionId = defaults.regionId;
        }

        @CustomType.Setter
        public Builder appId(String appId) {
            if (appId == null) {
              throw new MissingRequiredPropertyException("GetApplicationsApplication", "appId");
            }
            this.appId = appId;
            return this;
        }
        @CustomType.Setter
        public Builder appName(String appName) {
            if (appName == null) {
              throw new MissingRequiredPropertyException("GetApplicationsApplication", "appName");
            }
            this.appName = appName;
            return this;
        }
        @CustomType.Setter
        public Builder applicationType(String applicationType) {
            if (applicationType == null) {
              throw new MissingRequiredPropertyException("GetApplicationsApplication", "applicationType");
            }
            this.applicationType = applicationType;
            return this;
        }
        @CustomType.Setter
        public Builder buildPackageId(Integer buildPackageId) {
            if (buildPackageId == null) {
              throw new MissingRequiredPropertyException("GetApplicationsApplication", "buildPackageId");
            }
            this.buildPackageId = buildPackageId;
            return this;
        }
        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            if (clusterId == null) {
              throw new MissingRequiredPropertyException("GetApplicationsApplication", "clusterId");
            }
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder clusterType(Integer clusterType) {
            if (clusterType == null) {
              throw new MissingRequiredPropertyException("GetApplicationsApplication", "clusterType");
            }
            this.clusterType = clusterType;
            return this;
        }
        @CustomType.Setter
        public Builder regionId(String regionId) {
            if (regionId == null) {
              throw new MissingRequiredPropertyException("GetApplicationsApplication", "regionId");
            }
            this.regionId = regionId;
            return this;
        }
        public GetApplicationsApplication build() {
            final var _resultValue = new GetApplicationsApplication();
            _resultValue.appId = appId;
            _resultValue.appName = appName;
            _resultValue.applicationType = applicationType;
            _resultValue.buildPackageId = buildPackageId;
            _resultValue.clusterId = clusterId;
            _resultValue.clusterType = clusterType;
            _resultValue.regionId = regionId;
            return _resultValue;
        }
    }
}
