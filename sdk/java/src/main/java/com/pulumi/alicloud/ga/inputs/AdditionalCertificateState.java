// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ga.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AdditionalCertificateState extends com.pulumi.resources.ResourceArgs {

    public static final AdditionalCertificateState Empty = new AdditionalCertificateState();

    /**
     * The ID of the GA instance.
     * 
     */
    @Import(name="acceleratorId")
    private @Nullable Output<String> acceleratorId;

    /**
     * @return The ID of the GA instance.
     * 
     */
    public Optional<Output<String>> acceleratorId() {
        return Optional.ofNullable(this.acceleratorId);
    }

    /**
     * The Certificate ID. **NOTE:** From version 1.209.1, `certificateId` can be modified.
     * 
     */
    @Import(name="certificateId")
    private @Nullable Output<String> certificateId;

    /**
     * @return The Certificate ID. **NOTE:** From version 1.209.1, `certificateId` can be modified.
     * 
     */
    public Optional<Output<String>> certificateId() {
        return Optional.ofNullable(this.certificateId);
    }

    /**
     * The domain name specified by the certificate. **NOTE:** You can associate each domain name with only one additional certificate.
     * 
     */
    @Import(name="domain")
    private @Nullable Output<String> domain;

    /**
     * @return The domain name specified by the certificate. **NOTE:** You can associate each domain name with only one additional certificate.
     * 
     */
    public Optional<Output<String>> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * The ID of the listener. **NOTE:** Only HTTPS listeners support this parameter.
     * 
     */
    @Import(name="listenerId")
    private @Nullable Output<String> listenerId;

    /**
     * @return The ID of the listener. **NOTE:** Only HTTPS listeners support this parameter.
     * 
     */
    public Optional<Output<String>> listenerId() {
        return Optional.ofNullable(this.listenerId);
    }

    private AdditionalCertificateState() {}

    private AdditionalCertificateState(AdditionalCertificateState $) {
        this.acceleratorId = $.acceleratorId;
        this.certificateId = $.certificateId;
        this.domain = $.domain;
        this.listenerId = $.listenerId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AdditionalCertificateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AdditionalCertificateState $;

        public Builder() {
            $ = new AdditionalCertificateState();
        }

        public Builder(AdditionalCertificateState defaults) {
            $ = new AdditionalCertificateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param acceleratorId The ID of the GA instance.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorId(@Nullable Output<String> acceleratorId) {
            $.acceleratorId = acceleratorId;
            return this;
        }

        /**
         * @param acceleratorId The ID of the GA instance.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorId(String acceleratorId) {
            return acceleratorId(Output.of(acceleratorId));
        }

        /**
         * @param certificateId The Certificate ID. **NOTE:** From version 1.209.1, `certificateId` can be modified.
         * 
         * @return builder
         * 
         */
        public Builder certificateId(@Nullable Output<String> certificateId) {
            $.certificateId = certificateId;
            return this;
        }

        /**
         * @param certificateId The Certificate ID. **NOTE:** From version 1.209.1, `certificateId` can be modified.
         * 
         * @return builder
         * 
         */
        public Builder certificateId(String certificateId) {
            return certificateId(Output.of(certificateId));
        }

        /**
         * @param domain The domain name specified by the certificate. **NOTE:** You can associate each domain name with only one additional certificate.
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain The domain name specified by the certificate. **NOTE:** You can associate each domain name with only one additional certificate.
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param listenerId The ID of the listener. **NOTE:** Only HTTPS listeners support this parameter.
         * 
         * @return builder
         * 
         */
        public Builder listenerId(@Nullable Output<String> listenerId) {
            $.listenerId = listenerId;
            return this;
        }

        /**
         * @param listenerId The ID of the listener. **NOTE:** Only HTTPS listeners support this parameter.
         * 
         * @return builder
         * 
         */
        public Builder listenerId(String listenerId) {
            return listenerId(Output.of(listenerId));
        }

        public AdditionalCertificateState build() {
            return $;
        }
    }

}
