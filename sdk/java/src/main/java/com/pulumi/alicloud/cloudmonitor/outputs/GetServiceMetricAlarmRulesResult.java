// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudmonitor.outputs;

import com.pulumi.alicloud.cloudmonitor.outputs.GetServiceMetricAlarmRulesRule;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetServiceMetricAlarmRulesResult {
    /**
     * @return The dimensions of the alert rule.
     * 
     */
    private @Nullable String dimensions;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<String> ids;
    /**
     * @return The metric that is used to monitor the cloud service.
     * 
     */
    private @Nullable String metricName;
    /**
     * @return The namespace of the cloud service.
     * 
     */
    private @Nullable String namespace;
    private @Nullable String outputFile;
    /**
     * @return The name of the alert rule.
     * 
     */
    private @Nullable String ruleName;
    /**
     * @return A list of Hybrid Double Writes. Each element contains the following attributes:
     * 
     */
    private List<GetServiceMetricAlarmRulesRule> rules;
    /**
     * @return Indicates whether the alert rule is enabled.
     * 
     */
    private @Nullable Boolean status;

    private GetServiceMetricAlarmRulesResult() {}
    /**
     * @return The dimensions of the alert rule.
     * 
     */
    public Optional<String> dimensions() {
        return Optional.ofNullable(this.dimensions);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    /**
     * @return The metric that is used to monitor the cloud service.
     * 
     */
    public Optional<String> metricName() {
        return Optional.ofNullable(this.metricName);
    }
    /**
     * @return The namespace of the cloud service.
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return The name of the alert rule.
     * 
     */
    public Optional<String> ruleName() {
        return Optional.ofNullable(this.ruleName);
    }
    /**
     * @return A list of Hybrid Double Writes. Each element contains the following attributes:
     * 
     */
    public List<GetServiceMetricAlarmRulesRule> rules() {
        return this.rules;
    }
    /**
     * @return Indicates whether the alert rule is enabled.
     * 
     */
    public Optional<Boolean> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceMetricAlarmRulesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dimensions;
        private String id;
        private List<String> ids;
        private @Nullable String metricName;
        private @Nullable String namespace;
        private @Nullable String outputFile;
        private @Nullable String ruleName;
        private List<GetServiceMetricAlarmRulesRule> rules;
        private @Nullable Boolean status;
        public Builder() {}
        public Builder(GetServiceMetricAlarmRulesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dimensions = defaults.dimensions;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.metricName = defaults.metricName;
    	      this.namespace = defaults.namespace;
    	      this.outputFile = defaults.outputFile;
    	      this.ruleName = defaults.ruleName;
    	      this.rules = defaults.rules;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder dimensions(@Nullable String dimensions) {

            this.dimensions = dimensions;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetServiceMetricAlarmRulesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            if (ids == null) {
              throw new MissingRequiredPropertyException("GetServiceMetricAlarmRulesResult", "ids");
            }
            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder metricName(@Nullable String metricName) {

            this.metricName = metricName;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {

            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder ruleName(@Nullable String ruleName) {

            this.ruleName = ruleName;
            return this;
        }
        @CustomType.Setter
        public Builder rules(List<GetServiceMetricAlarmRulesRule> rules) {
            if (rules == null) {
              throw new MissingRequiredPropertyException("GetServiceMetricAlarmRulesResult", "rules");
            }
            this.rules = rules;
            return this;
        }
        public Builder rules(GetServiceMetricAlarmRulesRule... rules) {
            return rules(List.of(rules));
        }
        @CustomType.Setter
        public Builder status(@Nullable Boolean status) {

            this.status = status;
            return this;
        }
        public GetServiceMetricAlarmRulesResult build() {
            final var _resultValue = new GetServiceMetricAlarmRulesResult();
            _resultValue.dimensions = dimensions;
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.metricName = metricName;
            _resultValue.namespace = namespace;
            _resultValue.outputFile = outputFile;
            _resultValue.ruleName = ruleName;
            _resultValue.rules = rules;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
