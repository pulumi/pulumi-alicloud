// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nlb;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServerGroupServerAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServerGroupServerAttachmentArgs Empty = new ServerGroupServerAttachmentArgs();

    /**
     * The description of the servers. The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (_), and hyphens (-).
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the servers. The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (_), and hyphens (-).
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The port used by the backend server. Valid values: 1 to 65535.
     * 
     */
    @Import(name="port", required=true)
    private Output<Integer> port;

    /**
     * @return The port used by the backend server. Valid values: 1 to 65535.
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }

    /**
     * The ID of the server group.
     * 
     */
    @Import(name="serverGroupId", required=true)
    private Output<String> serverGroupId;

    /**
     * @return The ID of the server group.
     * 
     */
    public Output<String> serverGroupId() {
        return this.serverGroupId;
    }

    /**
     * The ID of the server.
     * - If the server group type is Instance, set the ServerId parameter to the ID of an Elastic Compute Service (ECS) instance, an elastic network interface (ENI), or an elastic container instance. These backend servers are specified by Ecs, Eni, or Eci.
     * - If the server group type is Ip, set the ServerId parameter to an IP address.
     * 
     */
    @Import(name="serverId", required=true)
    private Output<String> serverId;

    /**
     * @return The ID of the server.
     * - If the server group type is Instance, set the ServerId parameter to the ID of an Elastic Compute Service (ECS) instance, an elastic network interface (ENI), or an elastic container instance. These backend servers are specified by Ecs, Eni, or Eci.
     * - If the server group type is Ip, set the ServerId parameter to an IP address.
     * 
     */
    public Output<String> serverId() {
        return this.serverId;
    }

    /**
     * The IP address of the server. If the server group type is Ip, set the ServerId parameter to an IP address.
     * 
     */
    @Import(name="serverIp")
    private @Nullable Output<String> serverIp;

    /**
     * @return The IP address of the server. If the server group type is Ip, set the ServerId parameter to an IP address.
     * 
     */
    public Optional<Output<String>> serverIp() {
        return Optional.ofNullable(this.serverIp);
    }

    /**
     * The type of the backend server. Valid values: `Ecs`, `Eni`, `Eci`, `Ip`.
     * 
     */
    @Import(name="serverType", required=true)
    private Output<String> serverType;

    /**
     * @return The type of the backend server. Valid values: `Ecs`, `Eni`, `Eci`, `Ip`.
     * 
     */
    public Output<String> serverType() {
        return this.serverType;
    }

    /**
     * The weight of the backend server. Valid values: 0 to 100. Default value: 100. If the weight of a backend server is set to 0, no requests are forwarded to the backend server.
     * 
     */
    @Import(name="weight")
    private @Nullable Output<Integer> weight;

    /**
     * @return The weight of the backend server. Valid values: 0 to 100. Default value: 100. If the weight of a backend server is set to 0, no requests are forwarded to the backend server.
     * 
     */
    public Optional<Output<Integer>> weight() {
        return Optional.ofNullable(this.weight);
    }

    private ServerGroupServerAttachmentArgs() {}

    private ServerGroupServerAttachmentArgs(ServerGroupServerAttachmentArgs $) {
        this.description = $.description;
        this.port = $.port;
        this.serverGroupId = $.serverGroupId;
        this.serverId = $.serverId;
        this.serverIp = $.serverIp;
        this.serverType = $.serverType;
        this.weight = $.weight;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerGroupServerAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerGroupServerAttachmentArgs $;

        public Builder() {
            $ = new ServerGroupServerAttachmentArgs();
        }

        public Builder(ServerGroupServerAttachmentArgs defaults) {
            $ = new ServerGroupServerAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the servers. The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (_), and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the servers. The description must be 2 to 256 characters in length, and can contain letters, digits, commas (,), periods (.), semicolons (;), forward slashes (/), at signs (@), underscores (_), and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param port The port used by the backend server. Valid values: 1 to 65535.
         * 
         * @return builder
         * 
         */
        public Builder port(Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port The port used by the backend server. Valid values: 1 to 65535.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param serverGroupId The ID of the server group.
         * 
         * @return builder
         * 
         */
        public Builder serverGroupId(Output<String> serverGroupId) {
            $.serverGroupId = serverGroupId;
            return this;
        }

        /**
         * @param serverGroupId The ID of the server group.
         * 
         * @return builder
         * 
         */
        public Builder serverGroupId(String serverGroupId) {
            return serverGroupId(Output.of(serverGroupId));
        }

        /**
         * @param serverId The ID of the server.
         * - If the server group type is Instance, set the ServerId parameter to the ID of an Elastic Compute Service (ECS) instance, an elastic network interface (ENI), or an elastic container instance. These backend servers are specified by Ecs, Eni, or Eci.
         * - If the server group type is Ip, set the ServerId parameter to an IP address.
         * 
         * @return builder
         * 
         */
        public Builder serverId(Output<String> serverId) {
            $.serverId = serverId;
            return this;
        }

        /**
         * @param serverId The ID of the server.
         * - If the server group type is Instance, set the ServerId parameter to the ID of an Elastic Compute Service (ECS) instance, an elastic network interface (ENI), or an elastic container instance. These backend servers are specified by Ecs, Eni, or Eci.
         * - If the server group type is Ip, set the ServerId parameter to an IP address.
         * 
         * @return builder
         * 
         */
        public Builder serverId(String serverId) {
            return serverId(Output.of(serverId));
        }

        /**
         * @param serverIp The IP address of the server. If the server group type is Ip, set the ServerId parameter to an IP address.
         * 
         * @return builder
         * 
         */
        public Builder serverIp(@Nullable Output<String> serverIp) {
            $.serverIp = serverIp;
            return this;
        }

        /**
         * @param serverIp The IP address of the server. If the server group type is Ip, set the ServerId parameter to an IP address.
         * 
         * @return builder
         * 
         */
        public Builder serverIp(String serverIp) {
            return serverIp(Output.of(serverIp));
        }

        /**
         * @param serverType The type of the backend server. Valid values: `Ecs`, `Eni`, `Eci`, `Ip`.
         * 
         * @return builder
         * 
         */
        public Builder serverType(Output<String> serverType) {
            $.serverType = serverType;
            return this;
        }

        /**
         * @param serverType The type of the backend server. Valid values: `Ecs`, `Eni`, `Eci`, `Ip`.
         * 
         * @return builder
         * 
         */
        public Builder serverType(String serverType) {
            return serverType(Output.of(serverType));
        }

        /**
         * @param weight The weight of the backend server. Valid values: 0 to 100. Default value: 100. If the weight of a backend server is set to 0, no requests are forwarded to the backend server.
         * 
         * @return builder
         * 
         */
        public Builder weight(@Nullable Output<Integer> weight) {
            $.weight = weight;
            return this;
        }

        /**
         * @param weight The weight of the backend server. Valid values: 0 to 100. Default value: 100. If the weight of a backend server is set to 0, no requests are forwarded to the backend server.
         * 
         * @return builder
         * 
         */
        public Builder weight(Integer weight) {
            return weight(Output.of(weight));
        }

        public ServerGroupServerAttachmentArgs build() {
            if ($.port == null) {
                throw new MissingRequiredPropertyException("ServerGroupServerAttachmentArgs", "port");
            }
            if ($.serverGroupId == null) {
                throw new MissingRequiredPropertyException("ServerGroupServerAttachmentArgs", "serverGroupId");
            }
            if ($.serverId == null) {
                throw new MissingRequiredPropertyException("ServerGroupServerAttachmentArgs", "serverId");
            }
            if ($.serverType == null) {
                throw new MissingRequiredPropertyException("ServerGroupServerAttachmentArgs", "serverType");
            }
            return $;
        }
    }

}
