// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.slb;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CaCertificateArgs extends com.pulumi.resources.ResourceArgs {

    public static final CaCertificateArgs Empty = new CaCertificateArgs();

    /**
     * the content of the CA certificate.
     * 
     */
    @Import(name="caCertificate", required=true)
    private Output<String> caCertificate;

    /**
     * @return the content of the CA certificate.
     * 
     */
    public Output<String> caCertificate() {
        return this.caCertificate;
    }

    /**
     * Name of the CA Certificate.
     * 
     */
    @Import(name="caCertificateName")
    private @Nullable Output<String> caCertificateName;

    /**
     * @return Name of the CA Certificate.
     * 
     */
    public Optional<Output<String>> caCertificateName() {
        return Optional.ofNullable(this.caCertificateName);
    }

    /**
     * Field `name` has been deprecated from provider version 1.123.1. New field `ca_certificate_name` instead
     * 
     * @deprecated
     * Field &#39;name&#39; has been deprecated from provider version 1.123.1. New field &#39;ca_certificate_name&#39; instead
     * 
     */
    @Deprecated /* Field 'name' has been deprecated from provider version 1.123.1. New field 'ca_certificate_name' instead */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Field `name` has been deprecated from provider version 1.123.1. New field `ca_certificate_name` instead
     * 
     * @deprecated
     * Field &#39;name&#39; has been deprecated from provider version 1.123.1. New field &#39;ca_certificate_name&#39; instead
     * 
     */
    @Deprecated /* Field 'name' has been deprecated from provider version 1.123.1. New field 'ca_certificate_name' instead */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The Id of resource group which the slb_ca certificate belongs.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The Id of resource group which the slb_ca certificate belongs.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private CaCertificateArgs() {}

    private CaCertificateArgs(CaCertificateArgs $) {
        this.caCertificate = $.caCertificate;
        this.caCertificateName = $.caCertificateName;
        this.name = $.name;
        this.resourceGroupId = $.resourceGroupId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CaCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CaCertificateArgs $;

        public Builder() {
            $ = new CaCertificateArgs();
        }

        public Builder(CaCertificateArgs defaults) {
            $ = new CaCertificateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param caCertificate the content of the CA certificate.
         * 
         * @return builder
         * 
         */
        public Builder caCertificate(Output<String> caCertificate) {
            $.caCertificate = caCertificate;
            return this;
        }

        /**
         * @param caCertificate the content of the CA certificate.
         * 
         * @return builder
         * 
         */
        public Builder caCertificate(String caCertificate) {
            return caCertificate(Output.of(caCertificate));
        }

        /**
         * @param caCertificateName Name of the CA Certificate.
         * 
         * @return builder
         * 
         */
        public Builder caCertificateName(@Nullable Output<String> caCertificateName) {
            $.caCertificateName = caCertificateName;
            return this;
        }

        /**
         * @param caCertificateName Name of the CA Certificate.
         * 
         * @return builder
         * 
         */
        public Builder caCertificateName(String caCertificateName) {
            return caCertificateName(Output.of(caCertificateName));
        }

        /**
         * @param name Field `name` has been deprecated from provider version 1.123.1. New field `ca_certificate_name` instead
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;name&#39; has been deprecated from provider version 1.123.1. New field &#39;ca_certificate_name&#39; instead
         * 
         */
        @Deprecated /* Field 'name' has been deprecated from provider version 1.123.1. New field 'ca_certificate_name' instead */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Field `name` has been deprecated from provider version 1.123.1. New field `ca_certificate_name` instead
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;name&#39; has been deprecated from provider version 1.123.1. New field &#39;ca_certificate_name&#39; instead
         * 
         */
        @Deprecated /* Field 'name' has been deprecated from provider version 1.123.1. New field 'ca_certificate_name' instead */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupId The Id of resource group which the slb_ca certificate belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The Id of resource group which the slb_ca certificate belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        public CaCertificateArgs build() {
            if ($.caCertificate == null) {
                throw new MissingRequiredPropertyException("CaCertificateArgs", "caCertificate");
            }
            return $;
        }
    }

}
