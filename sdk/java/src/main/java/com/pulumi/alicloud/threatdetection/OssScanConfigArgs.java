// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OssScanConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final OssScanConfigArgs Empty = new OssScanConfigArgs();

    /**
     * Match all prefixes.
     * 
     */
    @Import(name="allKeyPrefix")
    private @Nullable Output<Boolean> allKeyPrefix;

    /**
     * @return Match all prefixes.
     * 
     */
    public Optional<Output<Boolean>> allKeyPrefix() {
        return Optional.ofNullable(this.allKeyPrefix);
    }

    /**
     * Bucket List.
     * 
     */
    @Import(name="bucketNameLists", required=true)
    private Output<List<String>> bucketNameLists;

    /**
     * @return Bucket List.
     * 
     */
    public Output<List<String>> bucketNameLists() {
        return this.bucketNameLists;
    }

    /**
     * Enable configuration.
     * 
     */
    @Import(name="enable", required=true)
    private Output<Integer> enable;

    /**
     * @return Enable configuration.
     * 
     */
    public Output<Integer> enable() {
        return this.enable;
    }

    /**
     * End time, hours, minutes and seconds.
     * 
     */
    @Import(name="endTime", required=true)
    private Output<String> endTime;

    /**
     * @return End time, hours, minutes and seconds.
     * 
     */
    public Output<String> endTime() {
        return this.endTime;
    }

    /**
     * File prefix list.
     * 
     */
    @Import(name="keyPrefixLists")
    private @Nullable Output<List<String>> keyPrefixLists;

    /**
     * @return File prefix list.
     * 
     */
    public Optional<Output<List<String>>> keyPrefixLists() {
        return Optional.ofNullable(this.keyPrefixLists);
    }

    /**
     * File Suffix List.
     * 
     */
    @Import(name="keySuffixLists", required=true)
    private Output<List<String>> keySuffixLists;

    /**
     * @return File Suffix List.
     * 
     */
    public Output<List<String>> keySuffixLists() {
        return this.keySuffixLists;
    }

    /**
     * Configuration Name.
     * 
     */
    @Import(name="ossScanConfigName")
    private @Nullable Output<String> ossScanConfigName;

    /**
     * @return Configuration Name.
     * 
     */
    public Optional<Output<String>> ossScanConfigName() {
        return Optional.ofNullable(this.ossScanConfigName);
    }

    /**
     * Scan cycle.
     * 
     */
    @Import(name="scanDayLists", required=true)
    private Output<List<Integer>> scanDayLists;

    /**
     * @return Scan cycle.
     * 
     */
    public Output<List<Integer>> scanDayLists() {
        return this.scanDayLists;
    }

    /**
     * Start time, hours, minutes and seconds.
     * 
     */
    @Import(name="startTime", required=true)
    private Output<String> startTime;

    /**
     * @return Start time, hours, minutes and seconds.
     * 
     */
    public Output<String> startTime() {
        return this.startTime;
    }

    private OssScanConfigArgs() {}

    private OssScanConfigArgs(OssScanConfigArgs $) {
        this.allKeyPrefix = $.allKeyPrefix;
        this.bucketNameLists = $.bucketNameLists;
        this.enable = $.enable;
        this.endTime = $.endTime;
        this.keyPrefixLists = $.keyPrefixLists;
        this.keySuffixLists = $.keySuffixLists;
        this.ossScanConfigName = $.ossScanConfigName;
        this.scanDayLists = $.scanDayLists;
        this.startTime = $.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OssScanConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OssScanConfigArgs $;

        public Builder() {
            $ = new OssScanConfigArgs();
        }

        public Builder(OssScanConfigArgs defaults) {
            $ = new OssScanConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allKeyPrefix Match all prefixes.
         * 
         * @return builder
         * 
         */
        public Builder allKeyPrefix(@Nullable Output<Boolean> allKeyPrefix) {
            $.allKeyPrefix = allKeyPrefix;
            return this;
        }

        /**
         * @param allKeyPrefix Match all prefixes.
         * 
         * @return builder
         * 
         */
        public Builder allKeyPrefix(Boolean allKeyPrefix) {
            return allKeyPrefix(Output.of(allKeyPrefix));
        }

        /**
         * @param bucketNameLists Bucket List.
         * 
         * @return builder
         * 
         */
        public Builder bucketNameLists(Output<List<String>> bucketNameLists) {
            $.bucketNameLists = bucketNameLists;
            return this;
        }

        /**
         * @param bucketNameLists Bucket List.
         * 
         * @return builder
         * 
         */
        public Builder bucketNameLists(List<String> bucketNameLists) {
            return bucketNameLists(Output.of(bucketNameLists));
        }

        /**
         * @param bucketNameLists Bucket List.
         * 
         * @return builder
         * 
         */
        public Builder bucketNameLists(String... bucketNameLists) {
            return bucketNameLists(List.of(bucketNameLists));
        }

        /**
         * @param enable Enable configuration.
         * 
         * @return builder
         * 
         */
        public Builder enable(Output<Integer> enable) {
            $.enable = enable;
            return this;
        }

        /**
         * @param enable Enable configuration.
         * 
         * @return builder
         * 
         */
        public Builder enable(Integer enable) {
            return enable(Output.of(enable));
        }

        /**
         * @param endTime End time, hours, minutes and seconds.
         * 
         * @return builder
         * 
         */
        public Builder endTime(Output<String> endTime) {
            $.endTime = endTime;
            return this;
        }

        /**
         * @param endTime End time, hours, minutes and seconds.
         * 
         * @return builder
         * 
         */
        public Builder endTime(String endTime) {
            return endTime(Output.of(endTime));
        }

        /**
         * @param keyPrefixLists File prefix list.
         * 
         * @return builder
         * 
         */
        public Builder keyPrefixLists(@Nullable Output<List<String>> keyPrefixLists) {
            $.keyPrefixLists = keyPrefixLists;
            return this;
        }

        /**
         * @param keyPrefixLists File prefix list.
         * 
         * @return builder
         * 
         */
        public Builder keyPrefixLists(List<String> keyPrefixLists) {
            return keyPrefixLists(Output.of(keyPrefixLists));
        }

        /**
         * @param keyPrefixLists File prefix list.
         * 
         * @return builder
         * 
         */
        public Builder keyPrefixLists(String... keyPrefixLists) {
            return keyPrefixLists(List.of(keyPrefixLists));
        }

        /**
         * @param keySuffixLists File Suffix List.
         * 
         * @return builder
         * 
         */
        public Builder keySuffixLists(Output<List<String>> keySuffixLists) {
            $.keySuffixLists = keySuffixLists;
            return this;
        }

        /**
         * @param keySuffixLists File Suffix List.
         * 
         * @return builder
         * 
         */
        public Builder keySuffixLists(List<String> keySuffixLists) {
            return keySuffixLists(Output.of(keySuffixLists));
        }

        /**
         * @param keySuffixLists File Suffix List.
         * 
         * @return builder
         * 
         */
        public Builder keySuffixLists(String... keySuffixLists) {
            return keySuffixLists(List.of(keySuffixLists));
        }

        /**
         * @param ossScanConfigName Configuration Name.
         * 
         * @return builder
         * 
         */
        public Builder ossScanConfigName(@Nullable Output<String> ossScanConfigName) {
            $.ossScanConfigName = ossScanConfigName;
            return this;
        }

        /**
         * @param ossScanConfigName Configuration Name.
         * 
         * @return builder
         * 
         */
        public Builder ossScanConfigName(String ossScanConfigName) {
            return ossScanConfigName(Output.of(ossScanConfigName));
        }

        /**
         * @param scanDayLists Scan cycle.
         * 
         * @return builder
         * 
         */
        public Builder scanDayLists(Output<List<Integer>> scanDayLists) {
            $.scanDayLists = scanDayLists;
            return this;
        }

        /**
         * @param scanDayLists Scan cycle.
         * 
         * @return builder
         * 
         */
        public Builder scanDayLists(List<Integer> scanDayLists) {
            return scanDayLists(Output.of(scanDayLists));
        }

        /**
         * @param scanDayLists Scan cycle.
         * 
         * @return builder
         * 
         */
        public Builder scanDayLists(Integer... scanDayLists) {
            return scanDayLists(List.of(scanDayLists));
        }

        /**
         * @param startTime Start time, hours, minutes and seconds.
         * 
         * @return builder
         * 
         */
        public Builder startTime(Output<String> startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param startTime Start time, hours, minutes and seconds.
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            return startTime(Output.of(startTime));
        }

        public OssScanConfigArgs build() {
            if ($.bucketNameLists == null) {
                throw new MissingRequiredPropertyException("OssScanConfigArgs", "bucketNameLists");
            }
            if ($.enable == null) {
                throw new MissingRequiredPropertyException("OssScanConfigArgs", "enable");
            }
            if ($.endTime == null) {
                throw new MissingRequiredPropertyException("OssScanConfigArgs", "endTime");
            }
            if ($.keySuffixLists == null) {
                throw new MissingRequiredPropertyException("OssScanConfigArgs", "keySuffixLists");
            }
            if ($.scanDayLists == null) {
                throw new MissingRequiredPropertyException("OssScanConfigArgs", "scanDayLists");
            }
            if ($.startTime == null) {
                throw new MissingRequiredPropertyException("OssScanConfigArgs", "startTime");
            }
            return $;
        }
    }

}
