// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sls;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.sls.CollectionPolicyArgs;
import com.pulumi.alicloud.sls.inputs.CollectionPolicyState;
import com.pulumi.alicloud.sls.outputs.CollectionPolicyCentralizeConfig;
import com.pulumi.alicloud.sls.outputs.CollectionPolicyDataConfig;
import com.pulumi.alicloud.sls.outputs.CollectionPolicyPolicyConfig;
import com.pulumi.alicloud.sls.outputs.CollectionPolicyResourceDirectory;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a SLS Collection Policy resource.
 * 
 * Orchestration policies for cloud product log collection.
 * 
 * For information about SLS Collection Policy and how to use it, see [What is Collection Policy](https://www.alibabacloud.com/help/en/).
 * 
 * &gt; **NOTE:** Available since v1.232.0.
 * 
 * ## Import
 * 
 * SLS Collection Policy can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:sls/collectionPolicy:CollectionPolicy example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:sls/collectionPolicy:CollectionPolicy")
public class CollectionPolicy extends com.pulumi.resources.CustomResource {
    /**
     * Centralized transfer configuration. See `centralize_config` below.
     * 
     */
    @Export(name="centralizeConfig", refs={CollectionPolicyCentralizeConfig.class}, tree="[0]")
    private Output<CollectionPolicyCentralizeConfig> centralizeConfig;

    /**
     * @return Centralized transfer configuration. See `centralize_config` below.
     * 
     */
    public Output<CollectionPolicyCentralizeConfig> centralizeConfig() {
        return this.centralizeConfig;
    }
    /**
     * Whether to enable centralized Conversion. The default value is false.
     * 
     */
    @Export(name="centralizeEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> centralizeEnabled;

    /**
     * @return Whether to enable centralized Conversion. The default value is false.
     * 
     */
    public Output<Optional<Boolean>> centralizeEnabled() {
        return Codegen.optional(this.centralizeEnabled);
    }
    /**
     * Log type encoding.
     * 
     */
    @Export(name="dataCode", refs={String.class}, tree="[0]")
    private Output<String> dataCode;

    /**
     * @return Log type encoding.
     * 
     */
    public Output<String> dataCode() {
        return this.dataCode;
    }
    /**
     * The configuration is supported only when the log type is global. For example, if the productCode is sls, global logs will be collected to the corresponding region during the first configuration. See `data_config` below.
     * 
     */
    @Export(name="dataConfig", refs={CollectionPolicyDataConfig.class}, tree="[0]")
    private Output<CollectionPolicyDataConfig> dataConfig;

    /**
     * @return The configuration is supported only when the log type is global. For example, if the productCode is sls, global logs will be collected to the corresponding region during the first configuration. See `data_config` below.
     * 
     */
    public Output<CollectionPolicyDataConfig> dataConfig() {
        return this.dataConfig;
    }
    /**
     * Whether to open.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    /**
     * @return Whether to open.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * Collection rule configuration. See `policy_config` below.
     * 
     */
    @Export(name="policyConfig", refs={CollectionPolicyPolicyConfig.class}, tree="[0]")
    private Output<CollectionPolicyPolicyConfig> policyConfig;

    /**
     * @return Collection rule configuration. See `policy_config` below.
     * 
     */
    public Output<CollectionPolicyPolicyConfig> policyConfig() {
        return this.policyConfig;
    }
    /**
     * The name of the rule, with a minimum of 3 characters and a maximum of 63 characters, must start with a letter.
     * 
     */
    @Export(name="policyName", refs={String.class}, tree="[0]")
    private Output<String> policyName;

    /**
     * @return The name of the rule, with a minimum of 3 characters and a maximum of 63 characters, must start with a letter.
     * 
     */
    public Output<String> policyName() {
        return this.policyName;
    }
    /**
     * Product code.
     * 
     */
    @Export(name="productCode", refs={String.class}, tree="[0]")
    private Output<String> productCode;

    /**
     * @return Product code.
     * 
     */
    public Output<String> productCode() {
        return this.productCode;
    }
    /**
     * For Resource Directory configuration, the account must have opened the resource directory and be an administrator or a delegated administrator. See `resource_directory` below.
     * 
     */
    @Export(name="resourceDirectory", refs={CollectionPolicyResourceDirectory.class}, tree="[0]")
    private Output<CollectionPolicyResourceDirectory> resourceDirectory;

    /**
     * @return For Resource Directory configuration, the account must have opened the resource directory and be an administrator or a delegated administrator. See `resource_directory` below.
     * 
     */
    public Output<CollectionPolicyResourceDirectory> resourceDirectory() {
        return this.resourceDirectory;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CollectionPolicy(java.lang.String name) {
        this(name, CollectionPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CollectionPolicy(java.lang.String name, CollectionPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CollectionPolicy(java.lang.String name, CollectionPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:sls/collectionPolicy:CollectionPolicy", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private CollectionPolicy(java.lang.String name, Output<java.lang.String> id, @Nullable CollectionPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:sls/collectionPolicy:CollectionPolicy", name, state, makeResourceOptions(options, id), false);
    }

    private static CollectionPolicyArgs makeArgs(CollectionPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CollectionPolicyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CollectionPolicy get(java.lang.String name, Output<java.lang.String> id, @Nullable CollectionPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CollectionPolicy(name, id, state, options);
    }
}
