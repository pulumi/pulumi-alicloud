// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sls.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CollectionPolicyPolicyConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final CollectionPolicyPolicyConfigArgs Empty = new CollectionPolicyPolicyConfigArgs();

    /**
     * A collection of instance IDs, valid only if resourceMode is instanceMode. Only instances whose instance ID is in the instance ID collection are collected.
     * 
     */
    @Import(name="instanceIds")
    private @Nullable Output<List<String>> instanceIds;

    /**
     * @return A collection of instance IDs, valid only if resourceMode is instanceMode. Only instances whose instance ID is in the instance ID collection are collected.
     * 
     */
    public Optional<Output<List<String>>> instanceIds() {
        return Optional.ofNullable(this.instanceIds);
    }

    /**
     * The region collection to which the instance belongs. Valid only when resourceMode is set to attributeMode. Wildcard characters are supported. If the region collection filter item is an empty array, it means that you do not need to filter by region, and all instances meet the filtering condition of the region collection. Otherwise, only instances with region attributes in the region collection are collected. The region collection and resource label of the instance. The instance objects are collected only when all of them are met.
     * 
     */
    @Import(name="regions")
    private @Nullable Output<List<String>> regions;

    /**
     * @return The region collection to which the instance belongs. Valid only when resourceMode is set to attributeMode. Wildcard characters are supported. If the region collection filter item is an empty array, it means that you do not need to filter by region, and all instances meet the filtering condition of the region collection. Otherwise, only instances with region attributes in the region collection are collected. The region collection and resource label of the instance. The instance objects are collected only when all of them are met.
     * 
     */
    public Optional<Output<List<String>>> regions() {
        return Optional.ofNullable(this.regions);
    }

    /**
     * Resource collection mode. If all is configured, all instances under the account will be collected to the default logstore. If attributeMode is configured, filtering will be performed according to the region attribute and resource label of the instance. If instanceMode is configured, filtering will be performed according to the instance ID.
     * 
     */
    @Import(name="resourceMode", required=true)
    private Output<String> resourceMode;

    /**
     * @return Resource collection mode. If all is configured, all instances under the account will be collected to the default logstore. If attributeMode is configured, filtering will be performed according to the region attribute and resource label of the instance. If instanceMode is configured, filtering will be performed according to the instance ID.
     * 
     */
    public Output<String> resourceMode() {
        return this.resourceMode;
    }

    /**
     * Resource label, valid if and only if resourceMode is attributeMode.
     * 
     * If the resource label filter item is empty, it means that you do not need to filter by resource label, and all instances meet the resource label filter condition. Otherwise, only instances whose resource label attributes meet the resource label configuration are collected.
     * 
     * The resource tag and the region collection to which the instance belongs work together. The instance objects are collected only when all of them are met.
     * 
     */
    @Import(name="resourceTags")
    private @Nullable Output<Map<String,String>> resourceTags;

    /**
     * @return Resource label, valid if and only if resourceMode is attributeMode.
     * 
     * If the resource label filter item is empty, it means that you do not need to filter by resource label, and all instances meet the resource label filter condition. Otherwise, only instances whose resource label attributes meet the resource label configuration are collected.
     * 
     * The resource tag and the region collection to which the instance belongs work together. The instance objects are collected only when all of them are met.
     * 
     */
    public Optional<Output<Map<String,String>>> resourceTags() {
        return Optional.ofNullable(this.resourceTags);
    }

    private CollectionPolicyPolicyConfigArgs() {}

    private CollectionPolicyPolicyConfigArgs(CollectionPolicyPolicyConfigArgs $) {
        this.instanceIds = $.instanceIds;
        this.regions = $.regions;
        this.resourceMode = $.resourceMode;
        this.resourceTags = $.resourceTags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CollectionPolicyPolicyConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CollectionPolicyPolicyConfigArgs $;

        public Builder() {
            $ = new CollectionPolicyPolicyConfigArgs();
        }

        public Builder(CollectionPolicyPolicyConfigArgs defaults) {
            $ = new CollectionPolicyPolicyConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param instanceIds A collection of instance IDs, valid only if resourceMode is instanceMode. Only instances whose instance ID is in the instance ID collection are collected.
         * 
         * @return builder
         * 
         */
        public Builder instanceIds(@Nullable Output<List<String>> instanceIds) {
            $.instanceIds = instanceIds;
            return this;
        }

        /**
         * @param instanceIds A collection of instance IDs, valid only if resourceMode is instanceMode. Only instances whose instance ID is in the instance ID collection are collected.
         * 
         * @return builder
         * 
         */
        public Builder instanceIds(List<String> instanceIds) {
            return instanceIds(Output.of(instanceIds));
        }

        /**
         * @param instanceIds A collection of instance IDs, valid only if resourceMode is instanceMode. Only instances whose instance ID is in the instance ID collection are collected.
         * 
         * @return builder
         * 
         */
        public Builder instanceIds(String... instanceIds) {
            return instanceIds(List.of(instanceIds));
        }

        /**
         * @param regions The region collection to which the instance belongs. Valid only when resourceMode is set to attributeMode. Wildcard characters are supported. If the region collection filter item is an empty array, it means that you do not need to filter by region, and all instances meet the filtering condition of the region collection. Otherwise, only instances with region attributes in the region collection are collected. The region collection and resource label of the instance. The instance objects are collected only when all of them are met.
         * 
         * @return builder
         * 
         */
        public Builder regions(@Nullable Output<List<String>> regions) {
            $.regions = regions;
            return this;
        }

        /**
         * @param regions The region collection to which the instance belongs. Valid only when resourceMode is set to attributeMode. Wildcard characters are supported. If the region collection filter item is an empty array, it means that you do not need to filter by region, and all instances meet the filtering condition of the region collection. Otherwise, only instances with region attributes in the region collection are collected. The region collection and resource label of the instance. The instance objects are collected only when all of them are met.
         * 
         * @return builder
         * 
         */
        public Builder regions(List<String> regions) {
            return regions(Output.of(regions));
        }

        /**
         * @param regions The region collection to which the instance belongs. Valid only when resourceMode is set to attributeMode. Wildcard characters are supported. If the region collection filter item is an empty array, it means that you do not need to filter by region, and all instances meet the filtering condition of the region collection. Otherwise, only instances with region attributes in the region collection are collected. The region collection and resource label of the instance. The instance objects are collected only when all of them are met.
         * 
         * @return builder
         * 
         */
        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }

        /**
         * @param resourceMode Resource collection mode. If all is configured, all instances under the account will be collected to the default logstore. If attributeMode is configured, filtering will be performed according to the region attribute and resource label of the instance. If instanceMode is configured, filtering will be performed according to the instance ID.
         * 
         * @return builder
         * 
         */
        public Builder resourceMode(Output<String> resourceMode) {
            $.resourceMode = resourceMode;
            return this;
        }

        /**
         * @param resourceMode Resource collection mode. If all is configured, all instances under the account will be collected to the default logstore. If attributeMode is configured, filtering will be performed according to the region attribute and resource label of the instance. If instanceMode is configured, filtering will be performed according to the instance ID.
         * 
         * @return builder
         * 
         */
        public Builder resourceMode(String resourceMode) {
            return resourceMode(Output.of(resourceMode));
        }

        /**
         * @param resourceTags Resource label, valid if and only if resourceMode is attributeMode.
         * 
         * If the resource label filter item is empty, it means that you do not need to filter by resource label, and all instances meet the resource label filter condition. Otherwise, only instances whose resource label attributes meet the resource label configuration are collected.
         * 
         * The resource tag and the region collection to which the instance belongs work together. The instance objects are collected only when all of them are met.
         * 
         * @return builder
         * 
         */
        public Builder resourceTags(@Nullable Output<Map<String,String>> resourceTags) {
            $.resourceTags = resourceTags;
            return this;
        }

        /**
         * @param resourceTags Resource label, valid if and only if resourceMode is attributeMode.
         * 
         * If the resource label filter item is empty, it means that you do not need to filter by resource label, and all instances meet the resource label filter condition. Otherwise, only instances whose resource label attributes meet the resource label configuration are collected.
         * 
         * The resource tag and the region collection to which the instance belongs work together. The instance objects are collected only when all of them are met.
         * 
         * @return builder
         * 
         */
        public Builder resourceTags(Map<String,String> resourceTags) {
            return resourceTags(Output.of(resourceTags));
        }

        public CollectionPolicyPolicyConfigArgs build() {
            if ($.resourceMode == null) {
                throw new MissingRequiredPropertyException("CollectionPolicyPolicyConfigArgs", "resourceMode");
            }
            return $;
        }
    }

}
