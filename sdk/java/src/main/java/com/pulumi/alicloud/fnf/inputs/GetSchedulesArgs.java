// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fnf.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSchedulesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSchedulesArgs Empty = new GetSchedulesArgs();

    /**
     * The name of the flow bound to the time-based schedule you want to create.
     * 
     */
    @Import(name="flowName", required=true)
    private Output<String> flowName;

    /**
     * @return The name of the flow bound to the time-based schedule you want to create.
     * 
     */
    public Output<String> flowName() {
        return this.flowName;
    }

    /**
     * A list of Schedule IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of Schedule IDs.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * The number of resource queries.
     * 
     */
    @Import(name="limit")
    private @Nullable Output<Integer> limit;

    /**
     * @return The number of resource queries.
     * 
     */
    public Optional<Output<Integer>> limit() {
        return Optional.ofNullable(this.limit);
    }

    /**
     * A regex string to filter results by Schedule name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    /**
     * @return A regex string to filter results by Schedule name.
     * 
     */
    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    private GetSchedulesArgs() {}

    private GetSchedulesArgs(GetSchedulesArgs $) {
        this.flowName = $.flowName;
        this.ids = $.ids;
        this.limit = $.limit;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSchedulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSchedulesArgs $;

        public Builder() {
            $ = new GetSchedulesArgs();
        }

        public Builder(GetSchedulesArgs defaults) {
            $ = new GetSchedulesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param flowName The name of the flow bound to the time-based schedule you want to create.
         * 
         * @return builder
         * 
         */
        public Builder flowName(Output<String> flowName) {
            $.flowName = flowName;
            return this;
        }

        /**
         * @param flowName The name of the flow bound to the time-based schedule you want to create.
         * 
         * @return builder
         * 
         */
        public Builder flowName(String flowName) {
            return flowName(Output.of(flowName));
        }

        /**
         * @param ids A list of Schedule IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Schedule IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of Schedule IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param limit The number of resource queries.
         * 
         * @return builder
         * 
         */
        public Builder limit(@Nullable Output<Integer> limit) {
            $.limit = limit;
            return this;
        }

        /**
         * @param limit The number of resource queries.
         * 
         * @return builder
         * 
         */
        public Builder limit(Integer limit) {
            return limit(Output.of(limit));
        }

        /**
         * @param nameRegex A regex string to filter results by Schedule name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param nameRegex A regex string to filter results by Schedule name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        public GetSchedulesArgs build() {
            if ($.flowName == null) {
                throw new MissingRequiredPropertyException("GetSchedulesArgs", "flowName");
            }
            return $;
        }
    }

}
