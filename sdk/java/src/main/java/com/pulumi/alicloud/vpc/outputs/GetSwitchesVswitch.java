// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSwitchesVswitch {
    /**
     * @return The available ip address count of the VSwitch.
     * 
     */
    private Integer availableIpAddressCount;
    /**
     * @return Filter results by a specific CIDR block. For example: &#34;172.16.0.0/12&#34;.
     * 
     */
    private String cidrBlock;
    /**
     * @return Time of creation.
     * 
     */
    private String creationTime;
    /**
     * @return Description of the VSwitch.
     * 
     */
    private String description;
    /**
     * @return ID of the VSwitch.
     * 
     */
    private String id;
    /**
     * @return The IPv6 CIDR block of the switch.
     * 
     */
    private String ipv6CidrBlock;
    /**
     * @return Indicate whether the VSwitch is created by the system.
     * 
     */
    private Boolean isDefault;
    /**
     * @return Name of the VSwitch.
     * 
     */
    private String name;
    /**
     * @return The Id of resource group which VSWitch belongs.
     * 
     */
    private String resourceGroupId;
    /**
     * @return The route table ID of the VSwitch.
     * 
     */
    private String routeTableId;
    /**
     * @return The status of the VSwitch. Valid values: `Available` and `Pending`.
     * 
     */
    private String status;
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    private Map<String,Object> tags;
    /**
     * @return ID of the VPC that owns the VSwitch.
     * 
     */
    private String vpcId;
    /**
     * @return ID of the VSwitch.
     * 
     */
    private String vswitchId;
    /**
     * @return The name of the VSwitch.
     * 
     */
    private String vswitchName;
    /**
     * @return The availability zone of the VSwitch.
     * 
     */
    private String zoneId;

    private GetSwitchesVswitch() {}
    /**
     * @return The available ip address count of the VSwitch.
     * 
     */
    public Integer availableIpAddressCount() {
        return this.availableIpAddressCount;
    }
    /**
     * @return Filter results by a specific CIDR block. For example: &#34;172.16.0.0/12&#34;.
     * 
     */
    public String cidrBlock() {
        return this.cidrBlock;
    }
    /**
     * @return Time of creation.
     * 
     */
    public String creationTime() {
        return this.creationTime;
    }
    /**
     * @return Description of the VSwitch.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return ID of the VSwitch.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The IPv6 CIDR block of the switch.
     * 
     */
    public String ipv6CidrBlock() {
        return this.ipv6CidrBlock;
    }
    /**
     * @return Indicate whether the VSwitch is created by the system.
     * 
     */
    public Boolean isDefault() {
        return this.isDefault;
    }
    /**
     * @return Name of the VSwitch.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Id of resource group which VSWitch belongs.
     * 
     */
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * @return The route table ID of the VSwitch.
     * 
     */
    public String routeTableId() {
        return this.routeTableId;
    }
    /**
     * @return The status of the VSwitch. Valid values: `Available` and `Pending`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Map<String,Object> tags() {
        return this.tags;
    }
    /**
     * @return ID of the VPC that owns the VSwitch.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }
    /**
     * @return ID of the VSwitch.
     * 
     */
    public String vswitchId() {
        return this.vswitchId;
    }
    /**
     * @return The name of the VSwitch.
     * 
     */
    public String vswitchName() {
        return this.vswitchName;
    }
    /**
     * @return The availability zone of the VSwitch.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSwitchesVswitch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer availableIpAddressCount;
        private String cidrBlock;
        private String creationTime;
        private String description;
        private String id;
        private String ipv6CidrBlock;
        private Boolean isDefault;
        private String name;
        private String resourceGroupId;
        private String routeTableId;
        private String status;
        private Map<String,Object> tags;
        private String vpcId;
        private String vswitchId;
        private String vswitchName;
        private String zoneId;
        public Builder() {}
        public Builder(GetSwitchesVswitch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availableIpAddressCount = defaults.availableIpAddressCount;
    	      this.cidrBlock = defaults.cidrBlock;
    	      this.creationTime = defaults.creationTime;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.ipv6CidrBlock = defaults.ipv6CidrBlock;
    	      this.isDefault = defaults.isDefault;
    	      this.name = defaults.name;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.routeTableId = defaults.routeTableId;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.vpcId = defaults.vpcId;
    	      this.vswitchId = defaults.vswitchId;
    	      this.vswitchName = defaults.vswitchName;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder availableIpAddressCount(Integer availableIpAddressCount) {
            if (availableIpAddressCount == null) {
              throw new MissingRequiredPropertyException("GetSwitchesVswitch", "availableIpAddressCount");
            }
            this.availableIpAddressCount = availableIpAddressCount;
            return this;
        }
        @CustomType.Setter
        public Builder cidrBlock(String cidrBlock) {
            if (cidrBlock == null) {
              throw new MissingRequiredPropertyException("GetSwitchesVswitch", "cidrBlock");
            }
            this.cidrBlock = cidrBlock;
            return this;
        }
        @CustomType.Setter
        public Builder creationTime(String creationTime) {
            if (creationTime == null) {
              throw new MissingRequiredPropertyException("GetSwitchesVswitch", "creationTime");
            }
            this.creationTime = creationTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetSwitchesVswitch", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSwitchesVswitch", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6CidrBlock(String ipv6CidrBlock) {
            if (ipv6CidrBlock == null) {
              throw new MissingRequiredPropertyException("GetSwitchesVswitch", "ipv6CidrBlock");
            }
            this.ipv6CidrBlock = ipv6CidrBlock;
            return this;
        }
        @CustomType.Setter
        public Builder isDefault(Boolean isDefault) {
            if (isDefault == null) {
              throw new MissingRequiredPropertyException("GetSwitchesVswitch", "isDefault");
            }
            this.isDefault = isDefault;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSwitchesVswitch", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupId(String resourceGroupId) {
            if (resourceGroupId == null) {
              throw new MissingRequiredPropertyException("GetSwitchesVswitch", "resourceGroupId");
            }
            this.resourceGroupId = resourceGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder routeTableId(String routeTableId) {
            if (routeTableId == null) {
              throw new MissingRequiredPropertyException("GetSwitchesVswitch", "routeTableId");
            }
            this.routeTableId = routeTableId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetSwitchesVswitch", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,Object> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetSwitchesVswitch", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            if (vpcId == null) {
              throw new MissingRequiredPropertyException("GetSwitchesVswitch", "vpcId");
            }
            this.vpcId = vpcId;
            return this;
        }
        @CustomType.Setter
        public Builder vswitchId(String vswitchId) {
            if (vswitchId == null) {
              throw new MissingRequiredPropertyException("GetSwitchesVswitch", "vswitchId");
            }
            this.vswitchId = vswitchId;
            return this;
        }
        @CustomType.Setter
        public Builder vswitchName(String vswitchName) {
            if (vswitchName == null) {
              throw new MissingRequiredPropertyException("GetSwitchesVswitch", "vswitchName");
            }
            this.vswitchName = vswitchName;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetSwitchesVswitch", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetSwitchesVswitch build() {
            final var _resultValue = new GetSwitchesVswitch();
            _resultValue.availableIpAddressCount = availableIpAddressCount;
            _resultValue.cidrBlock = cidrBlock;
            _resultValue.creationTime = creationTime;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.ipv6CidrBlock = ipv6CidrBlock;
            _resultValue.isDefault = isDefault;
            _resultValue.name = name;
            _resultValue.resourceGroupId = resourceGroupId;
            _resultValue.routeTableId = routeTableId;
            _resultValue.status = status;
            _resultValue.tags = tags;
            _resultValue.vpcId = vpcId;
            _resultValue.vswitchId = vswitchId;
            _resultValue.vswitchName = vswitchName;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
