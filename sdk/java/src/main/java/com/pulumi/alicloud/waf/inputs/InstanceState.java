// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.waf.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceState extends com.pulumi.resources.ResourceArgs {

    public static final InstanceState Empty = new InstanceState();

    /**
     * Specify whether big screen is supported. Valid values: [&#34;0&#34;, &#34;1&#34;]. &#34;0&#34; for false and &#34;1&#34; for true.
     * 
     */
    @Import(name="bigScreen")
    private @Nullable Output<String> bigScreen;

    /**
     * @return Specify whether big screen is supported. Valid values: [&#34;0&#34;, &#34;1&#34;]. &#34;0&#34; for false and &#34;1&#34; for true.
     * 
     */
    public Optional<Output<String>> bigScreen() {
        return Optional.ofNullable(this.bigScreen);
    }

    /**
     * Specify the number of exclusive WAF IP addresses.
     * 
     */
    @Import(name="exclusiveIpPackage")
    private @Nullable Output<String> exclusiveIpPackage;

    /**
     * @return Specify the number of exclusive WAF IP addresses.
     * 
     */
    public Optional<Output<String>> exclusiveIpPackage() {
        return Optional.ofNullable(this.exclusiveIpPackage);
    }

    /**
     * The extra bandwidth. Unit: Mbit/s.
     * 
     */
    @Import(name="extBandwidth")
    private @Nullable Output<String> extBandwidth;

    /**
     * @return The extra bandwidth. Unit: Mbit/s.
     * 
     */
    public Optional<Output<String>> extBandwidth() {
        return Optional.ofNullable(this.extBandwidth);
    }

    /**
     * The number of extra domains.
     * 
     */
    @Import(name="extDomainPackage")
    private @Nullable Output<String> extDomainPackage;

    /**
     * @return The number of extra domains.
     * 
     */
    public Optional<Output<String>> extDomainPackage() {
        return Optional.ofNullable(this.extDomainPackage);
    }

    /**
     * Log storage size. Unit: T. Valid values: [3, 5, 10, 20, 50].
     * 
     */
    @Import(name="logStorage")
    private @Nullable Output<String> logStorage;

    /**
     * @return Log storage size. Unit: T. Valid values: [3, 5, 10, 20, 50].
     * 
     */
    public Optional<Output<String>> logStorage() {
        return Optional.ofNullable(this.logStorage);
    }

    /**
     * Log storage period. Unit: day. Valid values: [180, 360].
     * 
     */
    @Import(name="logTime")
    private @Nullable Output<String> logTime;

    /**
     * @return Log storage period. Unit: day. Valid values: [180, 360].
     * 
     */
    public Optional<Output<String>> logTime() {
        return Optional.ofNullable(this.logTime);
    }

    /**
     * Type of configuration change. Valid value: Upgrade.
     * 
     */
    @Import(name="modifyType")
    private @Nullable Output<String> modifyType;

    /**
     * @return Type of configuration change. Valid value: Upgrade.
     * 
     */
    public Optional<Output<String>> modifyType() {
        return Optional.ofNullable(this.modifyType);
    }

    /**
     * Subscription plan:
     * * China site customers can purchase the following versions of China Mainland region, valid values: [&#34;version3&#34;, &#34;version4&#34;, &#34;version5&#34;].
     * * China site customers can purchase the following versions of International region, valid values: [&#34;versionProAsia&#34;, &#34;versionBusinessAsia&#34;, &#34;versionEnterpriseAsia&#34;]
     * * International site customers can purchase the following versions of China Mainland region: [&#34;versionProChina&#34;, &#34;versionBusinessChina&#34;, &#34;versionEnterpriseChina&#34;]
     * * International site customers can purchase the following versions of International region: [&#34;versionPro&#34;, &#34;versionBusiness&#34;, &#34;versionEnterprise&#34;].
     * 
     */
    @Import(name="packageCode")
    private @Nullable Output<String> packageCode;

    /**
     * @return Subscription plan:
     * * China site customers can purchase the following versions of China Mainland region, valid values: [&#34;version3&#34;, &#34;version4&#34;, &#34;version5&#34;].
     * * China site customers can purchase the following versions of International region, valid values: [&#34;versionProAsia&#34;, &#34;versionBusinessAsia&#34;, &#34;versionEnterpriseAsia&#34;]
     * * International site customers can purchase the following versions of China Mainland region: [&#34;versionProChina&#34;, &#34;versionBusinessChina&#34;, &#34;versionEnterpriseChina&#34;]
     * * International site customers can purchase the following versions of International region: [&#34;versionPro&#34;, &#34;versionBusiness&#34;, &#34;versionEnterprise&#34;].
     * 
     */
    public Optional<Output<String>> packageCode() {
        return Optional.ofNullable(this.packageCode);
    }

    /**
     * Service time of Web Application Firewall.
     * 
     */
    @Import(name="period")
    private @Nullable Output<Integer> period;

    /**
     * @return Service time of Web Application Firewall.
     * 
     */
    public Optional<Output<Integer>> period() {
        return Optional.ofNullable(this.period);
    }

    /**
     * Specify whether professional service is supported. Valid values: [&#34;true&#34;, &#34;false&#34;]
     * 
     */
    @Import(name="prefessionalService")
    private @Nullable Output<String> prefessionalService;

    /**
     * @return Specify whether professional service is supported. Valid values: [&#34;true&#34;, &#34;false&#34;]
     * 
     */
    public Optional<Output<String>> prefessionalService() {
        return Optional.ofNullable(this.prefessionalService);
    }

    /**
     * The instance region ID.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The instance region ID.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Renewal period of WAF service. Unit: month
     * 
     */
    @Import(name="renewPeriod")
    private @Nullable Output<Integer> renewPeriod;

    /**
     * @return Renewal period of WAF service. Unit: month
     * 
     */
    public Optional<Output<Integer>> renewPeriod() {
        return Optional.ofNullable(this.renewPeriod);
    }

    /**
     * Renewal status of WAF service. Valid values:
     * * AutoRenewal: The service time of WAF is renewed automatically.
     * * ManualRenewal (default): The service time of WAF is renewed manually.Specifies whether to configure a Layer-7 proxy, such as Anti-DDoS Pro or CDN, to filter the inbound traffic before it is forwarded to WAF. Valid values: &#34;On&#34; and &#34;Off&#34;. Default to &#34;Off&#34;.
     * 
     */
    @Import(name="renewalStatus")
    private @Nullable Output<String> renewalStatus;

    /**
     * @return Renewal status of WAF service. Valid values:
     * * AutoRenewal: The service time of WAF is renewed automatically.
     * * ManualRenewal (default): The service time of WAF is renewed manually.Specifies whether to configure a Layer-7 proxy, such as Anti-DDoS Pro or CDN, to filter the inbound traffic before it is forwarded to WAF. Valid values: &#34;On&#34; and &#34;Off&#34;. Default to &#34;Off&#34;.
     * 
     */
    public Optional<Output<String>> renewalStatus() {
        return Optional.ofNullable(this.renewalStatus);
    }

    /**
     * The resource group ID.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The resource group ID.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The status of the instance.
     * 
     */
    @Import(name="status")
    private @Nullable Output<Integer> status;

    /**
     * @return The status of the instance.
     * 
     */
    public Optional<Output<Integer>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Subscription of WAF service. Valid values: [&#34;Subscription&#34;, &#34;PayAsYouGo&#34;].
     * 
     */
    @Import(name="subscriptionType")
    private @Nullable Output<String> subscriptionType;

    /**
     * @return Subscription of WAF service. Valid values: [&#34;Subscription&#34;, &#34;PayAsYouGo&#34;].
     * 
     */
    public Optional<Output<String>> subscriptionType() {
        return Optional.ofNullable(this.subscriptionType);
    }

    /**
     * Specify whether Log service is supported. Valid values: [&#34;true&#34;, &#34;false&#34;]
     * 
     */
    @Import(name="wafLog")
    private @Nullable Output<String> wafLog;

    /**
     * @return Specify whether Log service is supported. Valid values: [&#34;true&#34;, &#34;false&#34;]
     * 
     */
    public Optional<Output<String>> wafLog() {
        return Optional.ofNullable(this.wafLog);
    }

    private InstanceState() {}

    private InstanceState(InstanceState $) {
        this.bigScreen = $.bigScreen;
        this.exclusiveIpPackage = $.exclusiveIpPackage;
        this.extBandwidth = $.extBandwidth;
        this.extDomainPackage = $.extDomainPackage;
        this.logStorage = $.logStorage;
        this.logTime = $.logTime;
        this.modifyType = $.modifyType;
        this.packageCode = $.packageCode;
        this.period = $.period;
        this.prefessionalService = $.prefessionalService;
        this.region = $.region;
        this.renewPeriod = $.renewPeriod;
        this.renewalStatus = $.renewalStatus;
        this.resourceGroupId = $.resourceGroupId;
        this.status = $.status;
        this.subscriptionType = $.subscriptionType;
        this.wafLog = $.wafLog;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceState $;

        public Builder() {
            $ = new InstanceState();
        }

        public Builder(InstanceState defaults) {
            $ = new InstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param bigScreen Specify whether big screen is supported. Valid values: [&#34;0&#34;, &#34;1&#34;]. &#34;0&#34; for false and &#34;1&#34; for true.
         * 
         * @return builder
         * 
         */
        public Builder bigScreen(@Nullable Output<String> bigScreen) {
            $.bigScreen = bigScreen;
            return this;
        }

        /**
         * @param bigScreen Specify whether big screen is supported. Valid values: [&#34;0&#34;, &#34;1&#34;]. &#34;0&#34; for false and &#34;1&#34; for true.
         * 
         * @return builder
         * 
         */
        public Builder bigScreen(String bigScreen) {
            return bigScreen(Output.of(bigScreen));
        }

        /**
         * @param exclusiveIpPackage Specify the number of exclusive WAF IP addresses.
         * 
         * @return builder
         * 
         */
        public Builder exclusiveIpPackage(@Nullable Output<String> exclusiveIpPackage) {
            $.exclusiveIpPackage = exclusiveIpPackage;
            return this;
        }

        /**
         * @param exclusiveIpPackage Specify the number of exclusive WAF IP addresses.
         * 
         * @return builder
         * 
         */
        public Builder exclusiveIpPackage(String exclusiveIpPackage) {
            return exclusiveIpPackage(Output.of(exclusiveIpPackage));
        }

        /**
         * @param extBandwidth The extra bandwidth. Unit: Mbit/s.
         * 
         * @return builder
         * 
         */
        public Builder extBandwidth(@Nullable Output<String> extBandwidth) {
            $.extBandwidth = extBandwidth;
            return this;
        }

        /**
         * @param extBandwidth The extra bandwidth. Unit: Mbit/s.
         * 
         * @return builder
         * 
         */
        public Builder extBandwidth(String extBandwidth) {
            return extBandwidth(Output.of(extBandwidth));
        }

        /**
         * @param extDomainPackage The number of extra domains.
         * 
         * @return builder
         * 
         */
        public Builder extDomainPackage(@Nullable Output<String> extDomainPackage) {
            $.extDomainPackage = extDomainPackage;
            return this;
        }

        /**
         * @param extDomainPackage The number of extra domains.
         * 
         * @return builder
         * 
         */
        public Builder extDomainPackage(String extDomainPackage) {
            return extDomainPackage(Output.of(extDomainPackage));
        }

        /**
         * @param logStorage Log storage size. Unit: T. Valid values: [3, 5, 10, 20, 50].
         * 
         * @return builder
         * 
         */
        public Builder logStorage(@Nullable Output<String> logStorage) {
            $.logStorage = logStorage;
            return this;
        }

        /**
         * @param logStorage Log storage size. Unit: T. Valid values: [3, 5, 10, 20, 50].
         * 
         * @return builder
         * 
         */
        public Builder logStorage(String logStorage) {
            return logStorage(Output.of(logStorage));
        }

        /**
         * @param logTime Log storage period. Unit: day. Valid values: [180, 360].
         * 
         * @return builder
         * 
         */
        public Builder logTime(@Nullable Output<String> logTime) {
            $.logTime = logTime;
            return this;
        }

        /**
         * @param logTime Log storage period. Unit: day. Valid values: [180, 360].
         * 
         * @return builder
         * 
         */
        public Builder logTime(String logTime) {
            return logTime(Output.of(logTime));
        }

        /**
         * @param modifyType Type of configuration change. Valid value: Upgrade.
         * 
         * @return builder
         * 
         */
        public Builder modifyType(@Nullable Output<String> modifyType) {
            $.modifyType = modifyType;
            return this;
        }

        /**
         * @param modifyType Type of configuration change. Valid value: Upgrade.
         * 
         * @return builder
         * 
         */
        public Builder modifyType(String modifyType) {
            return modifyType(Output.of(modifyType));
        }

        /**
         * @param packageCode Subscription plan:
         * * China site customers can purchase the following versions of China Mainland region, valid values: [&#34;version3&#34;, &#34;version4&#34;, &#34;version5&#34;].
         * * China site customers can purchase the following versions of International region, valid values: [&#34;versionProAsia&#34;, &#34;versionBusinessAsia&#34;, &#34;versionEnterpriseAsia&#34;]
         * * International site customers can purchase the following versions of China Mainland region: [&#34;versionProChina&#34;, &#34;versionBusinessChina&#34;, &#34;versionEnterpriseChina&#34;]
         * * International site customers can purchase the following versions of International region: [&#34;versionPro&#34;, &#34;versionBusiness&#34;, &#34;versionEnterprise&#34;].
         * 
         * @return builder
         * 
         */
        public Builder packageCode(@Nullable Output<String> packageCode) {
            $.packageCode = packageCode;
            return this;
        }

        /**
         * @param packageCode Subscription plan:
         * * China site customers can purchase the following versions of China Mainland region, valid values: [&#34;version3&#34;, &#34;version4&#34;, &#34;version5&#34;].
         * * China site customers can purchase the following versions of International region, valid values: [&#34;versionProAsia&#34;, &#34;versionBusinessAsia&#34;, &#34;versionEnterpriseAsia&#34;]
         * * International site customers can purchase the following versions of China Mainland region: [&#34;versionProChina&#34;, &#34;versionBusinessChina&#34;, &#34;versionEnterpriseChina&#34;]
         * * International site customers can purchase the following versions of International region: [&#34;versionPro&#34;, &#34;versionBusiness&#34;, &#34;versionEnterprise&#34;].
         * 
         * @return builder
         * 
         */
        public Builder packageCode(String packageCode) {
            return packageCode(Output.of(packageCode));
        }

        /**
         * @param period Service time of Web Application Firewall.
         * 
         * @return builder
         * 
         */
        public Builder period(@Nullable Output<Integer> period) {
            $.period = period;
            return this;
        }

        /**
         * @param period Service time of Web Application Firewall.
         * 
         * @return builder
         * 
         */
        public Builder period(Integer period) {
            return period(Output.of(period));
        }

        /**
         * @param prefessionalService Specify whether professional service is supported. Valid values: [&#34;true&#34;, &#34;false&#34;]
         * 
         * @return builder
         * 
         */
        public Builder prefessionalService(@Nullable Output<String> prefessionalService) {
            $.prefessionalService = prefessionalService;
            return this;
        }

        /**
         * @param prefessionalService Specify whether professional service is supported. Valid values: [&#34;true&#34;, &#34;false&#34;]
         * 
         * @return builder
         * 
         */
        public Builder prefessionalService(String prefessionalService) {
            return prefessionalService(Output.of(prefessionalService));
        }

        /**
         * @param region The instance region ID.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The instance region ID.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param renewPeriod Renewal period of WAF service. Unit: month
         * 
         * @return builder
         * 
         */
        public Builder renewPeriod(@Nullable Output<Integer> renewPeriod) {
            $.renewPeriod = renewPeriod;
            return this;
        }

        /**
         * @param renewPeriod Renewal period of WAF service. Unit: month
         * 
         * @return builder
         * 
         */
        public Builder renewPeriod(Integer renewPeriod) {
            return renewPeriod(Output.of(renewPeriod));
        }

        /**
         * @param renewalStatus Renewal status of WAF service. Valid values:
         * * AutoRenewal: The service time of WAF is renewed automatically.
         * * ManualRenewal (default): The service time of WAF is renewed manually.Specifies whether to configure a Layer-7 proxy, such as Anti-DDoS Pro or CDN, to filter the inbound traffic before it is forwarded to WAF. Valid values: &#34;On&#34; and &#34;Off&#34;. Default to &#34;Off&#34;.
         * 
         * @return builder
         * 
         */
        public Builder renewalStatus(@Nullable Output<String> renewalStatus) {
            $.renewalStatus = renewalStatus;
            return this;
        }

        /**
         * @param renewalStatus Renewal status of WAF service. Valid values:
         * * AutoRenewal: The service time of WAF is renewed automatically.
         * * ManualRenewal (default): The service time of WAF is renewed manually.Specifies whether to configure a Layer-7 proxy, such as Anti-DDoS Pro or CDN, to filter the inbound traffic before it is forwarded to WAF. Valid values: &#34;On&#34; and &#34;Off&#34;. Default to &#34;Off&#34;.
         * 
         * @return builder
         * 
         */
        public Builder renewalStatus(String renewalStatus) {
            return renewalStatus(Output.of(renewalStatus));
        }

        /**
         * @param resourceGroupId The resource group ID.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The resource group ID.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param status The status of the instance.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<Integer> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the instance.
         * 
         * @return builder
         * 
         */
        public Builder status(Integer status) {
            return status(Output.of(status));
        }

        /**
         * @param subscriptionType Subscription of WAF service. Valid values: [&#34;Subscription&#34;, &#34;PayAsYouGo&#34;].
         * 
         * @return builder
         * 
         */
        public Builder subscriptionType(@Nullable Output<String> subscriptionType) {
            $.subscriptionType = subscriptionType;
            return this;
        }

        /**
         * @param subscriptionType Subscription of WAF service. Valid values: [&#34;Subscription&#34;, &#34;PayAsYouGo&#34;].
         * 
         * @return builder
         * 
         */
        public Builder subscriptionType(String subscriptionType) {
            return subscriptionType(Output.of(subscriptionType));
        }

        /**
         * @param wafLog Specify whether Log service is supported. Valid values: [&#34;true&#34;, &#34;false&#34;]
         * 
         * @return builder
         * 
         */
        public Builder wafLog(@Nullable Output<String> wafLog) {
            $.wafLog = wafLog;
            return this;
        }

        /**
         * @param wafLog Specify whether Log service is supported. Valid values: [&#34;true&#34;, &#34;false&#34;]
         * 
         * @return builder
         * 
         */
        public Builder wafLog(String wafLog) {
            return wafLog(Output.of(wafLog));
        }

        public InstanceState build() {
            return $;
        }
    }

}
