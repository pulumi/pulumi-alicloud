// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.edas.inputs;

import com.pulumi.alicloud.edas.inputs.K8sSlbAttachmentSlbConfigPortMappingServicePortArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class K8sSlbAttachmentSlbConfigPortMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final K8sSlbAttachmentSlbConfigPortMappingArgs Empty = new K8sSlbAttachmentSlbConfigPortMappingArgs();

    @Import(name="certId")
    private @Nullable Output<String> certId;

    public Optional<Output<String>> certId() {
        return Optional.ofNullable(this.certId);
    }

    @Import(name="loadbalancerProtocol", required=true)
    private Output<String> loadbalancerProtocol;

    public Output<String> loadbalancerProtocol() {
        return this.loadbalancerProtocol;
    }

    @Import(name="servicePort", required=true)
    private Output<K8sSlbAttachmentSlbConfigPortMappingServicePortArgs> servicePort;

    public Output<K8sSlbAttachmentSlbConfigPortMappingServicePortArgs> servicePort() {
        return this.servicePort;
    }

    private K8sSlbAttachmentSlbConfigPortMappingArgs() {}

    private K8sSlbAttachmentSlbConfigPortMappingArgs(K8sSlbAttachmentSlbConfigPortMappingArgs $) {
        this.certId = $.certId;
        this.loadbalancerProtocol = $.loadbalancerProtocol;
        this.servicePort = $.servicePort;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(K8sSlbAttachmentSlbConfigPortMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private K8sSlbAttachmentSlbConfigPortMappingArgs $;

        public Builder() {
            $ = new K8sSlbAttachmentSlbConfigPortMappingArgs();
        }

        public Builder(K8sSlbAttachmentSlbConfigPortMappingArgs defaults) {
            $ = new K8sSlbAttachmentSlbConfigPortMappingArgs(Objects.requireNonNull(defaults));
        }

        public Builder certId(@Nullable Output<String> certId) {
            $.certId = certId;
            return this;
        }

        public Builder certId(String certId) {
            return certId(Output.of(certId));
        }

        public Builder loadbalancerProtocol(Output<String> loadbalancerProtocol) {
            $.loadbalancerProtocol = loadbalancerProtocol;
            return this;
        }

        public Builder loadbalancerProtocol(String loadbalancerProtocol) {
            return loadbalancerProtocol(Output.of(loadbalancerProtocol));
        }

        public Builder servicePort(Output<K8sSlbAttachmentSlbConfigPortMappingServicePortArgs> servicePort) {
            $.servicePort = servicePort;
            return this;
        }

        public Builder servicePort(K8sSlbAttachmentSlbConfigPortMappingServicePortArgs servicePort) {
            return servicePort(Output.of(servicePort));
        }

        public K8sSlbAttachmentSlbConfigPortMappingArgs build() {
            if ($.loadbalancerProtocol == null) {
                throw new MissingRequiredPropertyException("K8sSlbAttachmentSlbConfigPortMappingArgs", "loadbalancerProtocol");
            }
            if ($.servicePort == null) {
                throw new MissingRequiredPropertyException("K8sSlbAttachmentSlbConfigPortMappingArgs", "servicePort");
            }
            return $;
        }
    }

}
