// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetListenersListenerAccessLogTracingConfig {
    private Boolean tracingEnabled;
    private Integer tracingSample;
    private String tracingType;

    private GetListenersListenerAccessLogTracingConfig() {}
    public Boolean tracingEnabled() {
        return this.tracingEnabled;
    }
    public Integer tracingSample() {
        return this.tracingSample;
    }
    public String tracingType() {
        return this.tracingType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListenersListenerAccessLogTracingConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean tracingEnabled;
        private Integer tracingSample;
        private String tracingType;
        public Builder() {}
        public Builder(GetListenersListenerAccessLogTracingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.tracingEnabled = defaults.tracingEnabled;
    	      this.tracingSample = defaults.tracingSample;
    	      this.tracingType = defaults.tracingType;
        }

        @CustomType.Setter
        public Builder tracingEnabled(Boolean tracingEnabled) {
            if (tracingEnabled == null) {
              throw new MissingRequiredPropertyException("GetListenersListenerAccessLogTracingConfig", "tracingEnabled");
            }
            this.tracingEnabled = tracingEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder tracingSample(Integer tracingSample) {
            if (tracingSample == null) {
              throw new MissingRequiredPropertyException("GetListenersListenerAccessLogTracingConfig", "tracingSample");
            }
            this.tracingSample = tracingSample;
            return this;
        }
        @CustomType.Setter
        public Builder tracingType(String tracingType) {
            if (tracingType == null) {
              throw new MissingRequiredPropertyException("GetListenersListenerAccessLogTracingConfig", "tracingType");
            }
            this.tracingType = tracingType;
            return this;
        }
        public GetListenersListenerAccessLogTracingConfig build() {
            final var _resultValue = new GetListenersListenerAccessLogTracingConfig();
            _resultValue.tracingEnabled = tracingEnabled;
            _resultValue.tracingSample = tracingSample;
            _resultValue.tracingType = tracingType;
            return _resultValue;
        }
    }
}
