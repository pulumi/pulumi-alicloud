// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetListenersListenerAccessLogTracingConfig {
    /**
     * @return Xtrace Function. Value: True Or False. Default Value: False.
     * 
     * &gt; **NOTE:** Only Instances outside the Security Group to Access the Log Switch **accesslogenabled** Open, in Order to Set This Parameter to the **True**.
     * 
     */
    private Boolean tracingEnabled;
    /**
     * @return Xtrace Sampling Rate. Value: **1~10000**.
     * 
     * &gt; **NOTE:** This attribute is valid when **tracingenabled** is **true**.
     * 
     */
    private Integer tracingSample;
    /**
     * @return Xtrace Type Value Is **Zipkin**.
     * 
     * &gt; **NOTE:** This attribute is valid when **tracingenabled** is **true**.
     * 
     */
    private String tracingType;

    private GetListenersListenerAccessLogTracingConfig() {}
    /**
     * @return Xtrace Function. Value: True Or False. Default Value: False.
     * 
     * &gt; **NOTE:** Only Instances outside the Security Group to Access the Log Switch **accesslogenabled** Open, in Order to Set This Parameter to the **True**.
     * 
     */
    public Boolean tracingEnabled() {
        return this.tracingEnabled;
    }
    /**
     * @return Xtrace Sampling Rate. Value: **1~10000**.
     * 
     * &gt; **NOTE:** This attribute is valid when **tracingenabled** is **true**.
     * 
     */
    public Integer tracingSample() {
        return this.tracingSample;
    }
    /**
     * @return Xtrace Type Value Is **Zipkin**.
     * 
     * &gt; **NOTE:** This attribute is valid when **tracingenabled** is **true**.
     * 
     */
    public String tracingType() {
        return this.tracingType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListenersListenerAccessLogTracingConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean tracingEnabled;
        private Integer tracingSample;
        private String tracingType;
        public Builder() {}
        public Builder(GetListenersListenerAccessLogTracingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.tracingEnabled = defaults.tracingEnabled;
    	      this.tracingSample = defaults.tracingSample;
    	      this.tracingType = defaults.tracingType;
        }

        @CustomType.Setter
        public Builder tracingEnabled(Boolean tracingEnabled) {
            this.tracingEnabled = Objects.requireNonNull(tracingEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder tracingSample(Integer tracingSample) {
            this.tracingSample = Objects.requireNonNull(tracingSample);
            return this;
        }
        @CustomType.Setter
        public Builder tracingType(String tracingType) {
            this.tracingType = Objects.requireNonNull(tracingType);
            return this;
        }
        public GetListenersListenerAccessLogTracingConfig build() {
            final var _resultValue = new GetListenersListenerAccessLogTracingConfig();
            _resultValue.tracingEnabled = tracingEnabled;
            _resultValue.tracingSample = tracingSample;
            _resultValue.tracingType = tracingType;
            return _resultValue;
        }
    }
}
