// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.apigateway;

import com.pulumi.alicloud.apigateway.inputs.AccessControlListAclEntryArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessControlListArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessControlListArgs Empty = new AccessControlListArgs();

    /**
     * Access control list name.
     * 
     */
    @Import(name="accessControlListName", required=true)
    private Output<String> accessControlListName;

    /**
     * @return Access control list name.
     * 
     */
    public Output<String> accessControlListName() {
        return this.accessControlListName;
    }

    /**
     * Information list of access control policies. You can add at most 50 IP addresses or CIDR blocks to an ACL in each call. If the IP address or CIDR block that you want to add to an ACL already exists, the IP address or CIDR block is not added. The entries that you add must be CIDR blocks. See `acl_entrys` below.
     * 
     */
    @Import(name="aclEntrys")
    private @Nullable Output<List<AccessControlListAclEntryArgs>> aclEntrys;

    /**
     * @return Information list of access control policies. You can add at most 50 IP addresses or CIDR blocks to an ACL in each call. If the IP address or CIDR block that you want to add to an ACL already exists, the IP address or CIDR block is not added. The entries that you add must be CIDR blocks. See `acl_entrys` below.
     * 
     */
    public Optional<Output<List<AccessControlListAclEntryArgs>>> aclEntrys() {
        return Optional.ofNullable(this.aclEntrys);
    }

    /**
     * The IP version. Valid values: ipv4 and ipv6.
     * 
     */
    @Import(name="addressIpVersion")
    private @Nullable Output<String> addressIpVersion;

    /**
     * @return The IP version. Valid values: ipv4 and ipv6.
     * 
     */
    public Optional<Output<String>> addressIpVersion() {
        return Optional.ofNullable(this.addressIpVersion);
    }

    private AccessControlListArgs() {}

    private AccessControlListArgs(AccessControlListArgs $) {
        this.accessControlListName = $.accessControlListName;
        this.aclEntrys = $.aclEntrys;
        this.addressIpVersion = $.addressIpVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessControlListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessControlListArgs $;

        public Builder() {
            $ = new AccessControlListArgs();
        }

        public Builder(AccessControlListArgs defaults) {
            $ = new AccessControlListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessControlListName Access control list name.
         * 
         * @return builder
         * 
         */
        public Builder accessControlListName(Output<String> accessControlListName) {
            $.accessControlListName = accessControlListName;
            return this;
        }

        /**
         * @param accessControlListName Access control list name.
         * 
         * @return builder
         * 
         */
        public Builder accessControlListName(String accessControlListName) {
            return accessControlListName(Output.of(accessControlListName));
        }

        /**
         * @param aclEntrys Information list of access control policies. You can add at most 50 IP addresses or CIDR blocks to an ACL in each call. If the IP address or CIDR block that you want to add to an ACL already exists, the IP address or CIDR block is not added. The entries that you add must be CIDR blocks. See `acl_entrys` below.
         * 
         * @return builder
         * 
         */
        public Builder aclEntrys(@Nullable Output<List<AccessControlListAclEntryArgs>> aclEntrys) {
            $.aclEntrys = aclEntrys;
            return this;
        }

        /**
         * @param aclEntrys Information list of access control policies. You can add at most 50 IP addresses or CIDR blocks to an ACL in each call. If the IP address or CIDR block that you want to add to an ACL already exists, the IP address or CIDR block is not added. The entries that you add must be CIDR blocks. See `acl_entrys` below.
         * 
         * @return builder
         * 
         */
        public Builder aclEntrys(List<AccessControlListAclEntryArgs> aclEntrys) {
            return aclEntrys(Output.of(aclEntrys));
        }

        /**
         * @param aclEntrys Information list of access control policies. You can add at most 50 IP addresses or CIDR blocks to an ACL in each call. If the IP address or CIDR block that you want to add to an ACL already exists, the IP address or CIDR block is not added. The entries that you add must be CIDR blocks. See `acl_entrys` below.
         * 
         * @return builder
         * 
         */
        public Builder aclEntrys(AccessControlListAclEntryArgs... aclEntrys) {
            return aclEntrys(List.of(aclEntrys));
        }

        /**
         * @param addressIpVersion The IP version. Valid values: ipv4 and ipv6.
         * 
         * @return builder
         * 
         */
        public Builder addressIpVersion(@Nullable Output<String> addressIpVersion) {
            $.addressIpVersion = addressIpVersion;
            return this;
        }

        /**
         * @param addressIpVersion The IP version. Valid values: ipv4 and ipv6.
         * 
         * @return builder
         * 
         */
        public Builder addressIpVersion(String addressIpVersion) {
            return addressIpVersion(Output.of(addressIpVersion));
        }

        public AccessControlListArgs build() {
            if ($.accessControlListName == null) {
                throw new MissingRequiredPropertyException("AccessControlListArgs", "accessControlListName");
            }
            return $;
        }
    }

}
