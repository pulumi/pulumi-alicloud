// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nas;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.nas.MountTargetArgs;
import com.pulumi.alicloud.nas.inputs.MountTargetState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Network Attached Storage (NAS) Mount Target resource.
 * 
 * File system mount point.
 * 
 * For information about Network Attached Storage (NAS) Mount Target and how to use it, see [What is Mount Target](https://www.alibabacloud.com/help/en/doc-detail/27531.htm).
 * 
 * &gt; **NOTE:** Available since v1.34.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.nas.NasFunctions;
 * import com.pulumi.alicloud.nas.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.nas.FileSystem;
 * import com.pulumi.alicloud.nas.FileSystemArgs;
 * import com.pulumi.alicloud.nas.AccessGroup;
 * import com.pulumi.alicloud.nas.AccessGroupArgs;
 * import com.pulumi.alicloud.nas.MountTarget;
 * import com.pulumi.alicloud.nas.MountTargetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var default = NasFunctions.getZones(GetZonesArgs.builder()
 *             .fileSystemType("extreme")
 *             .build());
 * 
 *         final var countSize = default_.zones().length();
 * 
 *         final var zoneId = default_.zones()[countSize - 1].zoneId();
 * 
 *         var example = new Network("example", NetworkArgs.builder()
 *             .vpcName("terraform-example")
 *             .cidrBlock("172.17.3.0/24")
 *             .build());
 * 
 *         var exampleSwitch = new Switch("exampleSwitch", SwitchArgs.builder()
 *             .vswitchName(example.vpcName())
 *             .cidrBlock(example.cidrBlock())
 *             .vpcId(example.id())
 *             .zoneId(zoneId)
 *             .build());
 * 
 *         var exampleFileSystem = new FileSystem("exampleFileSystem", FileSystemArgs.builder()
 *             .protocolType("NFS")
 *             .storageType("advance")
 *             .fileSystemType("extreme")
 *             .capacity(100)
 *             .zoneId(zoneId)
 *             .build());
 * 
 *         var exampleAccessGroup = new AccessGroup("exampleAccessGroup", AccessGroupArgs.builder()
 *             .accessGroupName("access_group_xxx")
 *             .accessGroupType("Vpc")
 *             .description("test_access_group")
 *             .fileSystemType("extreme")
 *             .build());
 * 
 *         var exampleMountTarget = new MountTarget("exampleMountTarget", MountTargetArgs.builder()
 *             .fileSystemId(exampleFileSystem.id())
 *             .accessGroupName(exampleAccessGroup.accessGroupName())
 *             .vswitchId(exampleSwitch.id())
 *             .vpcId(example.id())
 *             .networkType(exampleAccessGroup.accessGroupType())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Network Attached Storage (NAS) Mount Target can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:nas/mountTarget:MountTarget example &lt;file_system_id&gt;:&lt;mount_target_domain&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:nas/mountTarget:MountTarget")
public class MountTarget extends com.pulumi.resources.CustomResource {
    /**
     * The name of the permission group.
     * 
     */
    @Export(name="accessGroupName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accessGroupName;

    /**
     * @return The name of the permission group.
     * 
     */
    public Output<Optional<String>> accessGroupName() {
        return Codegen.optional(this.accessGroupName);
    }
    /**
     * Whether to create an IPv6 mount point.
     * 
     * Value:
     * - true: create
     * - false (default): not created
     * 
     * &gt; **NOTE:**  currently, only extreme NAS supports IPv6 function in various regions in mainland China, and IPv6 function needs to be turned on for this file system.
     * 
     */
    @Export(name="dualStack", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dualStack;

    /**
     * @return Whether to create an IPv6 mount point.
     * 
     * Value:
     * - true: create
     * - false (default): not created
     * 
     * &gt; **NOTE:**  currently, only extreme NAS supports IPv6 function in various regions in mainland China, and IPv6 function needs to be turned on for this file system.
     * 
     */
    public Output<Optional<Boolean>> dualStack() {
        return Codegen.optional(this.dualStack);
    }
    /**
     * The ID of the file system.
     * 
     */
    @Export(name="fileSystemId", refs={String.class}, tree="[0]")
    private Output<String> fileSystemId;

    /**
     * @return The ID of the file system.
     * 
     */
    public Output<String> fileSystemId() {
        return this.fileSystemId;
    }
    /**
     * The domain name of the Mount point.
     * 
     */
    @Export(name="mountTargetDomain", refs={String.class}, tree="[0]")
    private Output<String> mountTargetDomain;

    /**
     * @return The domain name of the Mount point.
     * 
     */
    public Output<String> mountTargetDomain() {
        return this.mountTargetDomain;
    }
    /**
     * Network type.
     * 
     */
    @Export(name="networkType", refs={String.class}, tree="[0]")
    private Output<String> networkType;

    /**
     * @return Network type.
     * 
     */
    public Output<String> networkType() {
        return this.networkType;
    }
    /**
     * The ID of the security group.
     * 
     */
    @Export(name="securityGroupId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> securityGroupId;

    /**
     * @return The ID of the security group.
     * 
     */
    public Output<Optional<String>> securityGroupId() {
        return Codegen.optional(this.securityGroupId);
    }
    /**
     * The current status of the Mount point, including Active and Inactive, can be used to mount the file system only when the status is Active.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The current status of the Mount point, including Active and Inactive, can be used to mount the file system only when the status is Active.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * VPC ID.
     * 
     */
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output<String> vpcId;

    /**
     * @return VPC ID.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }
    /**
     * The ID of the switch.
     * 
     */
    @Export(name="vswitchId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vswitchId;

    /**
     * @return The ID of the switch.
     * 
     */
    public Output<Optional<String>> vswitchId() {
        return Codegen.optional(this.vswitchId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MountTarget(java.lang.String name) {
        this(name, MountTargetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MountTarget(java.lang.String name, MountTargetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MountTarget(java.lang.String name, MountTargetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:nas/mountTarget:MountTarget", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private MountTarget(java.lang.String name, Output<java.lang.String> id, @Nullable MountTargetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:nas/mountTarget:MountTarget", name, state, makeResourceOptions(options, id), false);
    }

    private static MountTargetArgs makeArgs(MountTargetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? MountTargetArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MountTarget get(java.lang.String name, Output<java.lang.String> id, @Nullable MountTargetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MountTarget(name, id, state, options);
    }
}
