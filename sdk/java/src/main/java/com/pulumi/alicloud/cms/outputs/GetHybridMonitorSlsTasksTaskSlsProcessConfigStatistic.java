// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic {
    private String alias;
    private String function;
    private String parameterOne;
    private String parameterTwo;
    private String slsKeyName;

    private GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic() {}
    public String alias() {
        return this.alias;
    }
    public String function() {
        return this.function;
    }
    public String parameterOne() {
        return this.parameterOne;
    }
    public String parameterTwo() {
        return this.parameterTwo;
    }
    public String slsKeyName() {
        return this.slsKeyName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String alias;
        private String function;
        private String parameterOne;
        private String parameterTwo;
        private String slsKeyName;
        public Builder() {}
        public Builder(GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alias = defaults.alias;
    	      this.function = defaults.function;
    	      this.parameterOne = defaults.parameterOne;
    	      this.parameterTwo = defaults.parameterTwo;
    	      this.slsKeyName = defaults.slsKeyName;
        }

        @CustomType.Setter
        public Builder alias(String alias) {
            if (alias == null) {
              throw new MissingRequiredPropertyException("GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic", "alias");
            }
            this.alias = alias;
            return this;
        }
        @CustomType.Setter
        public Builder function(String function) {
            if (function == null) {
              throw new MissingRequiredPropertyException("GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic", "function");
            }
            this.function = function;
            return this;
        }
        @CustomType.Setter
        public Builder parameterOne(String parameterOne) {
            if (parameterOne == null) {
              throw new MissingRequiredPropertyException("GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic", "parameterOne");
            }
            this.parameterOne = parameterOne;
            return this;
        }
        @CustomType.Setter
        public Builder parameterTwo(String parameterTwo) {
            if (parameterTwo == null) {
              throw new MissingRequiredPropertyException("GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic", "parameterTwo");
            }
            this.parameterTwo = parameterTwo;
            return this;
        }
        @CustomType.Setter
        public Builder slsKeyName(String slsKeyName) {
            if (slsKeyName == null) {
              throw new MissingRequiredPropertyException("GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic", "slsKeyName");
            }
            this.slsKeyName = slsKeyName;
            return this;
        }
        public GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic build() {
            final var _resultValue = new GetHybridMonitorSlsTasksTaskSlsProcessConfigStatistic();
            _resultValue.alias = alias;
            _resultValue.function = function;
            _resultValue.parameterOne = parameterOne;
            _resultValue.parameterTwo = parameterTwo;
            _resultValue.slsKeyName = slsKeyName;
            return _resultValue;
        }
    }
}
