// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eventbridge.inputs;

import com.pulumi.alicloud.eventbridge.inputs.ConnectionAuthParametersArgs;
import com.pulumi.alicloud.eventbridge.inputs.ConnectionNetworkParametersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionState extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionState Empty = new ConnectionState();

    /**
     * The parameters that are configured for authentication. See `auth_parameters` below.
     * 
     */
    @Import(name="authParameters")
    private @Nullable Output<ConnectionAuthParametersArgs> authParameters;

    /**
     * @return The parameters that are configured for authentication. See `auth_parameters` below.
     * 
     */
    public Optional<Output<ConnectionAuthParametersArgs>> authParameters() {
        return Optional.ofNullable(this.authParameters);
    }

    /**
     * The name of the connection.
     * 
     */
    @Import(name="connectionName")
    private @Nullable Output<String> connectionName;

    /**
     * @return The name of the connection.
     * 
     */
    public Optional<Output<String>> connectionName() {
        return Optional.ofNullable(this.connectionName);
    }

    /**
     * The creation time of the Connection.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time of the Connection.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The description of the connection.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the connection.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The parameters that are configured for the network. See `network_parameters` below.
     * 
     */
    @Import(name="networkParameters")
    private @Nullable Output<ConnectionNetworkParametersArgs> networkParameters;

    /**
     * @return The parameters that are configured for the network. See `network_parameters` below.
     * 
     */
    public Optional<Output<ConnectionNetworkParametersArgs>> networkParameters() {
        return Optional.ofNullable(this.networkParameters);
    }

    private ConnectionState() {}

    private ConnectionState(ConnectionState $) {
        this.authParameters = $.authParameters;
        this.connectionName = $.connectionName;
        this.createTime = $.createTime;
        this.description = $.description;
        this.networkParameters = $.networkParameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionState $;

        public Builder() {
            $ = new ConnectionState();
        }

        public Builder(ConnectionState defaults) {
            $ = new ConnectionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param authParameters The parameters that are configured for authentication. See `auth_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder authParameters(@Nullable Output<ConnectionAuthParametersArgs> authParameters) {
            $.authParameters = authParameters;
            return this;
        }

        /**
         * @param authParameters The parameters that are configured for authentication. See `auth_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder authParameters(ConnectionAuthParametersArgs authParameters) {
            return authParameters(Output.of(authParameters));
        }

        /**
         * @param connectionName The name of the connection.
         * 
         * @return builder
         * 
         */
        public Builder connectionName(@Nullable Output<String> connectionName) {
            $.connectionName = connectionName;
            return this;
        }

        /**
         * @param connectionName The name of the connection.
         * 
         * @return builder
         * 
         */
        public Builder connectionName(String connectionName) {
            return connectionName(Output.of(connectionName));
        }

        /**
         * @param createTime The creation time of the Connection.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the Connection.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param description The description of the connection.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the connection.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param networkParameters The parameters that are configured for the network. See `network_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder networkParameters(@Nullable Output<ConnectionNetworkParametersArgs> networkParameters) {
            $.networkParameters = networkParameters;
            return this;
        }

        /**
         * @param networkParameters The parameters that are configured for the network. See `network_parameters` below.
         * 
         * @return builder
         * 
         */
        public Builder networkParameters(ConnectionNetworkParametersArgs networkParameters) {
            return networkParameters(Output.of(networkParameters));
        }

        public ConnectionState build() {
            return $;
        }
    }

}
