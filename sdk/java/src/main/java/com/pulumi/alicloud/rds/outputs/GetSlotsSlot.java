// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rds.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSlotsSlot {
    /**
     * @return The name of the database where Replication Slot is located.
     * 
     */
    private String database;
    /**
     * @return The plugin used by Replication Slot.
     * 
     */
    private String plugin;
    /**
     * @return The Replication Slot name.
     * 
     */
    private String slotName;
    /**
     * @return The Replication Slot status.
     * 
     */
    private String slotStatus;
    /**
     * @return The Replication Slot type.
     * 
     */
    private String slotType;
    /**
     * @return Is the Replication Slot temporary.
     * 
     */
    private String temporary;
    /**
     * @return The amount of logs accumulated by Replication Slot.
     * 
     */
    private String walDelay;

    private GetSlotsSlot() {}
    /**
     * @return The name of the database where Replication Slot is located.
     * 
     */
    public String database() {
        return this.database;
    }
    /**
     * @return The plugin used by Replication Slot.
     * 
     */
    public String plugin() {
        return this.plugin;
    }
    /**
     * @return The Replication Slot name.
     * 
     */
    public String slotName() {
        return this.slotName;
    }
    /**
     * @return The Replication Slot status.
     * 
     */
    public String slotStatus() {
        return this.slotStatus;
    }
    /**
     * @return The Replication Slot type.
     * 
     */
    public String slotType() {
        return this.slotType;
    }
    /**
     * @return Is the Replication Slot temporary.
     * 
     */
    public String temporary() {
        return this.temporary;
    }
    /**
     * @return The amount of logs accumulated by Replication Slot.
     * 
     */
    public String walDelay() {
        return this.walDelay;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSlotsSlot defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String database;
        private String plugin;
        private String slotName;
        private String slotStatus;
        private String slotType;
        private String temporary;
        private String walDelay;
        public Builder() {}
        public Builder(GetSlotsSlot defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.database = defaults.database;
    	      this.plugin = defaults.plugin;
    	      this.slotName = defaults.slotName;
    	      this.slotStatus = defaults.slotStatus;
    	      this.slotType = defaults.slotType;
    	      this.temporary = defaults.temporary;
    	      this.walDelay = defaults.walDelay;
        }

        @CustomType.Setter
        public Builder database(String database) {
            if (database == null) {
              throw new MissingRequiredPropertyException("GetSlotsSlot", "database");
            }
            this.database = database;
            return this;
        }
        @CustomType.Setter
        public Builder plugin(String plugin) {
            if (plugin == null) {
              throw new MissingRequiredPropertyException("GetSlotsSlot", "plugin");
            }
            this.plugin = plugin;
            return this;
        }
        @CustomType.Setter
        public Builder slotName(String slotName) {
            if (slotName == null) {
              throw new MissingRequiredPropertyException("GetSlotsSlot", "slotName");
            }
            this.slotName = slotName;
            return this;
        }
        @CustomType.Setter
        public Builder slotStatus(String slotStatus) {
            if (slotStatus == null) {
              throw new MissingRequiredPropertyException("GetSlotsSlot", "slotStatus");
            }
            this.slotStatus = slotStatus;
            return this;
        }
        @CustomType.Setter
        public Builder slotType(String slotType) {
            if (slotType == null) {
              throw new MissingRequiredPropertyException("GetSlotsSlot", "slotType");
            }
            this.slotType = slotType;
            return this;
        }
        @CustomType.Setter
        public Builder temporary(String temporary) {
            if (temporary == null) {
              throw new MissingRequiredPropertyException("GetSlotsSlot", "temporary");
            }
            this.temporary = temporary;
            return this;
        }
        @CustomType.Setter
        public Builder walDelay(String walDelay) {
            if (walDelay == null) {
              throw new MissingRequiredPropertyException("GetSlotsSlot", "walDelay");
            }
            this.walDelay = walDelay;
            return this;
        }
        public GetSlotsSlot build() {
            final var _resultValue = new GetSlotsSlot();
            _resultValue.database = database;
            _resultValue.plugin = plugin;
            _resultValue.slotName = slotName;
            _resultValue.slotStatus = slotStatus;
            _resultValue.slotType = slotType;
            _resultValue.temporary = temporary;
            _resultValue.walDelay = walDelay;
            return _resultValue;
        }
    }
}
