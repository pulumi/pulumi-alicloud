// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.servicemesh.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExtensionProviderState extends com.pulumi.resources.ResourceArgs {

    public static final ExtensionProviderState Empty = new ExtensionProviderState();

    /**
     * The config of the Service Mesh Extension Provider. The `config` format is json.
     * 
     */
    @Import(name="config")
    private @Nullable Output<String> config;

    /**
     * @return The config of the Service Mesh Extension Provider. The `config` format is json.
     * 
     */
    public Optional<Output<String>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * The name of the Service Mesh Extension Provider. It must be prefixed with `$type-`, for example `httpextauth-xxx`, `grpcextauth-xxx`.
     * 
     */
    @Import(name="extensionProviderName")
    private @Nullable Output<String> extensionProviderName;

    /**
     * @return The name of the Service Mesh Extension Provider. It must be prefixed with `$type-`, for example `httpextauth-xxx`, `grpcextauth-xxx`.
     * 
     */
    public Optional<Output<String>> extensionProviderName() {
        return Optional.ofNullable(this.extensionProviderName);
    }

    /**
     * The ID of the Service Mesh.
     * 
     */
    @Import(name="serviceMeshId")
    private @Nullable Output<String> serviceMeshId;

    /**
     * @return The ID of the Service Mesh.
     * 
     */
    public Optional<Output<String>> serviceMeshId() {
        return Optional.ofNullable(this.serviceMeshId);
    }

    /**
     * The type of the Service Mesh Extension Provider. Valid values: `httpextauth`, `grpcextauth`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of the Service Mesh Extension Provider. Valid values: `httpextauth`, `grpcextauth`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private ExtensionProviderState() {}

    private ExtensionProviderState(ExtensionProviderState $) {
        this.config = $.config;
        this.extensionProviderName = $.extensionProviderName;
        this.serviceMeshId = $.serviceMeshId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExtensionProviderState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExtensionProviderState $;

        public Builder() {
            $ = new ExtensionProviderState();
        }

        public Builder(ExtensionProviderState defaults) {
            $ = new ExtensionProviderState(Objects.requireNonNull(defaults));
        }

        /**
         * @param config The config of the Service Mesh Extension Provider. The `config` format is json.
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<String> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config The config of the Service Mesh Extension Provider. The `config` format is json.
         * 
         * @return builder
         * 
         */
        public Builder config(String config) {
            return config(Output.of(config));
        }

        /**
         * @param extensionProviderName The name of the Service Mesh Extension Provider. It must be prefixed with `$type-`, for example `httpextauth-xxx`, `grpcextauth-xxx`.
         * 
         * @return builder
         * 
         */
        public Builder extensionProviderName(@Nullable Output<String> extensionProviderName) {
            $.extensionProviderName = extensionProviderName;
            return this;
        }

        /**
         * @param extensionProviderName The name of the Service Mesh Extension Provider. It must be prefixed with `$type-`, for example `httpextauth-xxx`, `grpcextauth-xxx`.
         * 
         * @return builder
         * 
         */
        public Builder extensionProviderName(String extensionProviderName) {
            return extensionProviderName(Output.of(extensionProviderName));
        }

        /**
         * @param serviceMeshId The ID of the Service Mesh.
         * 
         * @return builder
         * 
         */
        public Builder serviceMeshId(@Nullable Output<String> serviceMeshId) {
            $.serviceMeshId = serviceMeshId;
            return this;
        }

        /**
         * @param serviceMeshId The ID of the Service Mesh.
         * 
         * @return builder
         * 
         */
        public Builder serviceMeshId(String serviceMeshId) {
            return serviceMeshId(Output.of(serviceMeshId));
        }

        /**
         * @param type The type of the Service Mesh Extension Provider. Valid values: `httpextauth`, `grpcextauth`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the Service Mesh Extension Provider. Valid values: `httpextauth`, `grpcextauth`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ExtensionProviderState build() {
            return $;
        }
    }

}
