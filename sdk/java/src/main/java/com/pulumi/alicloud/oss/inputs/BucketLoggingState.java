// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketLoggingState extends com.pulumi.resources.ResourceArgs {

    public static final BucketLoggingState Empty = new BucketLoggingState();

    /**
     * The name of the bucket.
     * 
     */
    @Import(name="bucket")
    private @Nullable Output<String> bucket;

    /**
     * @return The name of the bucket.
     * 
     */
    public Optional<Output<String>> bucket() {
        return Optional.ofNullable(this.bucket);
    }

    /**
     * The bucket that stores access logs.
     * 
     */
    @Import(name="targetBucket")
    private @Nullable Output<String> targetBucket;

    /**
     * @return The bucket that stores access logs.
     * 
     */
    public Optional<Output<String>> targetBucket() {
        return Optional.ofNullable(this.targetBucket);
    }

    /**
     * The prefix of the saved log objects. This element can be left empty.
     * 
     */
    @Import(name="targetPrefix")
    private @Nullable Output<String> targetPrefix;

    /**
     * @return The prefix of the saved log objects. This element can be left empty.
     * 
     */
    public Optional<Output<String>> targetPrefix() {
        return Optional.ofNullable(this.targetPrefix);
    }

    private BucketLoggingState() {}

    private BucketLoggingState(BucketLoggingState $) {
        this.bucket = $.bucket;
        this.targetBucket = $.targetBucket;
        this.targetPrefix = $.targetPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketLoggingState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketLoggingState $;

        public Builder() {
            $ = new BucketLoggingState();
        }

        public Builder(BucketLoggingState defaults) {
            $ = new BucketLoggingState(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket The name of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucket(@Nullable Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket The name of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param targetBucket The bucket that stores access logs.
         * 
         * @return builder
         * 
         */
        public Builder targetBucket(@Nullable Output<String> targetBucket) {
            $.targetBucket = targetBucket;
            return this;
        }

        /**
         * @param targetBucket The bucket that stores access logs.
         * 
         * @return builder
         * 
         */
        public Builder targetBucket(String targetBucket) {
            return targetBucket(Output.of(targetBucket));
        }

        /**
         * @param targetPrefix The prefix of the saved log objects. This element can be left empty.
         * 
         * @return builder
         * 
         */
        public Builder targetPrefix(@Nullable Output<String> targetPrefix) {
            $.targetPrefix = targetPrefix;
            return this;
        }

        /**
         * @param targetPrefix The prefix of the saved log objects. This element can be left empty.
         * 
         * @return builder
         * 
         */
        public Builder targetPrefix(String targetPrefix) {
            return targetPrefix(Output.of(targetPrefix));
        }

        public BucketLoggingState build() {
            return $;
        }
    }

}
