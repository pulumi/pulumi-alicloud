// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final SecurityPolicyState Empty = new SecurityPolicyState();

    /**
     * The supported cipher suites, which are determined by the TLS protocol version.The specified cipher suites must be supported by at least one TLS protocol version that you select.
     * 
     */
    @Import(name="ciphers")
    private @Nullable Output<List<String>> ciphers;

    /**
     * @return The supported cipher suites, which are determined by the TLS protocol version.The specified cipher suites must be supported by at least one TLS protocol version that you select.
     * 
     */
    public Optional<Output<List<String>>> ciphers() {
        return Optional.ofNullable(this.ciphers);
    }

    /**
     * The dry run.
     * 
     */
    @Import(name="dryRun")
    private @Nullable Output<Boolean> dryRun;

    /**
     * @return The dry run.
     * 
     */
    public Optional<Output<Boolean>> dryRun() {
        return Optional.ofNullable(this.dryRun);
    }

    /**
     * The ID of the resource group.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The name of the resource. The name must be 2 to 128 characters in length and must start with a letter. It can contain digits, periods (.), underscores (_), and hyphens (-).
     * 
     */
    @Import(name="securityPolicyName")
    private @Nullable Output<String> securityPolicyName;

    /**
     * @return The name of the resource. The name must be 2 to 128 characters in length and must start with a letter. It can contain digits, periods (.), underscores (_), and hyphens (-).
     * 
     */
    public Optional<Output<String>> securityPolicyName() {
        return Optional.ofNullable(this.securityPolicyName);
    }

    /**
     * The status of the resource.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The TLS protocol versions that are supported. Valid values: TLSv1.0, TLSv1.1, TLSv1.2 and TLSv1.3.
     * 
     */
    @Import(name="tlsVersions")
    private @Nullable Output<List<String>> tlsVersions;

    /**
     * @return The TLS protocol versions that are supported. Valid values: TLSv1.0, TLSv1.1, TLSv1.2 and TLSv1.3.
     * 
     */
    public Optional<Output<List<String>>> tlsVersions() {
        return Optional.ofNullable(this.tlsVersions);
    }

    private SecurityPolicyState() {}

    private SecurityPolicyState(SecurityPolicyState $) {
        this.ciphers = $.ciphers;
        this.dryRun = $.dryRun;
        this.resourceGroupId = $.resourceGroupId;
        this.securityPolicyName = $.securityPolicyName;
        this.status = $.status;
        this.tags = $.tags;
        this.tlsVersions = $.tlsVersions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityPolicyState $;

        public Builder() {
            $ = new SecurityPolicyState();
        }

        public Builder(SecurityPolicyState defaults) {
            $ = new SecurityPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param ciphers The supported cipher suites, which are determined by the TLS protocol version.The specified cipher suites must be supported by at least one TLS protocol version that you select.
         * 
         * @return builder
         * 
         */
        public Builder ciphers(@Nullable Output<List<String>> ciphers) {
            $.ciphers = ciphers;
            return this;
        }

        /**
         * @param ciphers The supported cipher suites, which are determined by the TLS protocol version.The specified cipher suites must be supported by at least one TLS protocol version that you select.
         * 
         * @return builder
         * 
         */
        public Builder ciphers(List<String> ciphers) {
            return ciphers(Output.of(ciphers));
        }

        /**
         * @param ciphers The supported cipher suites, which are determined by the TLS protocol version.The specified cipher suites must be supported by at least one TLS protocol version that you select.
         * 
         * @return builder
         * 
         */
        public Builder ciphers(String... ciphers) {
            return ciphers(List.of(ciphers));
        }

        /**
         * @param dryRun The dry run.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(@Nullable Output<Boolean> dryRun) {
            $.dryRun = dryRun;
            return this;
        }

        /**
         * @param dryRun The dry run.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(Boolean dryRun) {
            return dryRun(Output.of(dryRun));
        }

        /**
         * @param resourceGroupId The ID of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param securityPolicyName The name of the resource. The name must be 2 to 128 characters in length and must start with a letter. It can contain digits, periods (.), underscores (_), and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyName(@Nullable Output<String> securityPolicyName) {
            $.securityPolicyName = securityPolicyName;
            return this;
        }

        /**
         * @param securityPolicyName The name of the resource. The name must be 2 to 128 characters in length and must start with a letter. It can contain digits, periods (.), underscores (_), and hyphens (-).
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyName(String securityPolicyName) {
            return securityPolicyName(Output.of(securityPolicyName));
        }

        /**
         * @param status The status of the resource.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tlsVersions The TLS protocol versions that are supported. Valid values: TLSv1.0, TLSv1.1, TLSv1.2 and TLSv1.3.
         * 
         * @return builder
         * 
         */
        public Builder tlsVersions(@Nullable Output<List<String>> tlsVersions) {
            $.tlsVersions = tlsVersions;
            return this;
        }

        /**
         * @param tlsVersions The TLS protocol versions that are supported. Valid values: TLSv1.0, TLSv1.1, TLSv1.2 and TLSv1.3.
         * 
         * @return builder
         * 
         */
        public Builder tlsVersions(List<String> tlsVersions) {
            return tlsVersions(Output.of(tlsVersions));
        }

        /**
         * @param tlsVersions The TLS protocol versions that are supported. Valid values: TLSv1.0, TLSv1.1, TLSv1.2 and TLSv1.3.
         * 
         * @return builder
         * 
         */
        public Builder tlsVersions(String... tlsVersions) {
            return tlsVersions(List.of(tlsVersions));
        }

        public SecurityPolicyState build() {
            return $;
        }
    }

}
