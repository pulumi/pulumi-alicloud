// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ram.outputs;

import com.pulumi.alicloud.ram.outputs.GetPolicyDocumentStatementCondition;
import com.pulumi.alicloud.ram.outputs.GetPolicyDocumentStatementPrincipal;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPolicyDocumentStatement {
    /**
     * @return Action of the RAM policy document. If you want to create a RAM role policy document, it must be `[&#34;sts:AssumeRole&#34;]`.
     * 
     */
    private List<String> actions;
    /**
     * @return Specifies the condition that are required for a policy to take effect. See `condition` below.
     * 
     */
    private @Nullable List<GetPolicyDocumentStatementCondition> conditions;
    /**
     * @return This parameter indicates whether or not the `action` is allowed. Valid values are `Allow` and `Deny`. Default value is `Allow`. If you want to create a RAM role policy document, it must be `Allow`.
     * 
     */
    private @Nullable String effect;
    /**
     * @return Principal of the RAM policy document. If you want to create a RAM role policy document, it must be set. See `principal` below.
     * 
     */
    private @Nullable List<GetPolicyDocumentStatementPrincipal> principals;
    /**
     * @return List of specific objects which will be authorized. If you want to create a RAM policy document, it must be set.
     * 
     */
    private @Nullable List<String> resources;

    private GetPolicyDocumentStatement() {}
    /**
     * @return Action of the RAM policy document. If you want to create a RAM role policy document, it must be `[&#34;sts:AssumeRole&#34;]`.
     * 
     */
    public List<String> actions() {
        return this.actions;
    }
    /**
     * @return Specifies the condition that are required for a policy to take effect. See `condition` below.
     * 
     */
    public List<GetPolicyDocumentStatementCondition> conditions() {
        return this.conditions == null ? List.of() : this.conditions;
    }
    /**
     * @return This parameter indicates whether or not the `action` is allowed. Valid values are `Allow` and `Deny`. Default value is `Allow`. If you want to create a RAM role policy document, it must be `Allow`.
     * 
     */
    public Optional<String> effect() {
        return Optional.ofNullable(this.effect);
    }
    /**
     * @return Principal of the RAM policy document. If you want to create a RAM role policy document, it must be set. See `principal` below.
     * 
     */
    public List<GetPolicyDocumentStatementPrincipal> principals() {
        return this.principals == null ? List.of() : this.principals;
    }
    /**
     * @return List of specific objects which will be authorized. If you want to create a RAM policy document, it must be set.
     * 
     */
    public List<String> resources() {
        return this.resources == null ? List.of() : this.resources;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPolicyDocumentStatement defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> actions;
        private @Nullable List<GetPolicyDocumentStatementCondition> conditions;
        private @Nullable String effect;
        private @Nullable List<GetPolicyDocumentStatementPrincipal> principals;
        private @Nullable List<String> resources;
        public Builder() {}
        public Builder(GetPolicyDocumentStatement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.conditions = defaults.conditions;
    	      this.effect = defaults.effect;
    	      this.principals = defaults.principals;
    	      this.resources = defaults.resources;
        }

        @CustomType.Setter
        public Builder actions(List<String> actions) {
            if (actions == null) {
              throw new MissingRequiredPropertyException("GetPolicyDocumentStatement", "actions");
            }
            this.actions = actions;
            return this;
        }
        public Builder actions(String... actions) {
            return actions(List.of(actions));
        }
        @CustomType.Setter
        public Builder conditions(@Nullable List<GetPolicyDocumentStatementCondition> conditions) {

            this.conditions = conditions;
            return this;
        }
        public Builder conditions(GetPolicyDocumentStatementCondition... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder effect(@Nullable String effect) {

            this.effect = effect;
            return this;
        }
        @CustomType.Setter
        public Builder principals(@Nullable List<GetPolicyDocumentStatementPrincipal> principals) {

            this.principals = principals;
            return this;
        }
        public Builder principals(GetPolicyDocumentStatementPrincipal... principals) {
            return principals(List.of(principals));
        }
        @CustomType.Setter
        public Builder resources(@Nullable List<String> resources) {

            this.resources = resources;
            return this;
        }
        public Builder resources(String... resources) {
            return resources(List.of(resources));
        }
        public GetPolicyDocumentStatement build() {
            final var _resultValue = new GetPolicyDocumentStatement();
            _resultValue.actions = actions;
            _resultValue.conditions = conditions;
            _resultValue.effect = effect;
            _resultValue.principals = principals;
            _resultValue.resources = resources;
            return _resultValue;
        }
    }
}
