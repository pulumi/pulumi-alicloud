// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.arms.inputs;

import com.pulumi.alicloud.arms.inputs.DispatchRuleNotifyRuleNotifyObjectArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class DispatchRuleNotifyRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final DispatchRuleNotifyRuleArgs Empty = new DispatchRuleNotifyRuleArgs();

    /**
     * The notification method. Valid values: dingTalk, sms, webhook, email, and wechat.
     * 
     */
    @Import(name="notifyChannels", required=true)
    private Output<List<String>> notifyChannels;

    /**
     * @return The notification method. Valid values: dingTalk, sms, webhook, email, and wechat.
     * 
     */
    public Output<List<String>> notifyChannels() {
        return this.notifyChannels;
    }

    /**
     * End time of notification.
     * 
     */
    @Import(name="notifyEndTime", required=true)
    private Output<String> notifyEndTime;

    /**
     * @return End time of notification.
     * 
     */
    public Output<String> notifyEndTime() {
        return this.notifyEndTime;
    }

    /**
     * Sets the notification object. See `notify_objects` below.
     * 
     */
    @Import(name="notifyObjects", required=true)
    private Output<List<DispatchRuleNotifyRuleNotifyObjectArgs>> notifyObjects;

    /**
     * @return Sets the notification object. See `notify_objects` below.
     * 
     */
    public Output<List<DispatchRuleNotifyRuleNotifyObjectArgs>> notifyObjects() {
        return this.notifyObjects;
    }

    /**
     * Start time of notification.
     * 
     */
    @Import(name="notifyStartTime", required=true)
    private Output<String> notifyStartTime;

    /**
     * @return Start time of notification.
     * 
     */
    public Output<String> notifyStartTime() {
        return this.notifyStartTime;
    }

    private DispatchRuleNotifyRuleArgs() {}

    private DispatchRuleNotifyRuleArgs(DispatchRuleNotifyRuleArgs $) {
        this.notifyChannels = $.notifyChannels;
        this.notifyEndTime = $.notifyEndTime;
        this.notifyObjects = $.notifyObjects;
        this.notifyStartTime = $.notifyStartTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DispatchRuleNotifyRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DispatchRuleNotifyRuleArgs $;

        public Builder() {
            $ = new DispatchRuleNotifyRuleArgs();
        }

        public Builder(DispatchRuleNotifyRuleArgs defaults) {
            $ = new DispatchRuleNotifyRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param notifyChannels The notification method. Valid values: dingTalk, sms, webhook, email, and wechat.
         * 
         * @return builder
         * 
         */
        public Builder notifyChannels(Output<List<String>> notifyChannels) {
            $.notifyChannels = notifyChannels;
            return this;
        }

        /**
         * @param notifyChannels The notification method. Valid values: dingTalk, sms, webhook, email, and wechat.
         * 
         * @return builder
         * 
         */
        public Builder notifyChannels(List<String> notifyChannels) {
            return notifyChannels(Output.of(notifyChannels));
        }

        /**
         * @param notifyChannels The notification method. Valid values: dingTalk, sms, webhook, email, and wechat.
         * 
         * @return builder
         * 
         */
        public Builder notifyChannels(String... notifyChannels) {
            return notifyChannels(List.of(notifyChannels));
        }

        /**
         * @param notifyEndTime End time of notification.
         * 
         * @return builder
         * 
         */
        public Builder notifyEndTime(Output<String> notifyEndTime) {
            $.notifyEndTime = notifyEndTime;
            return this;
        }

        /**
         * @param notifyEndTime End time of notification.
         * 
         * @return builder
         * 
         */
        public Builder notifyEndTime(String notifyEndTime) {
            return notifyEndTime(Output.of(notifyEndTime));
        }

        /**
         * @param notifyObjects Sets the notification object. See `notify_objects` below.
         * 
         * @return builder
         * 
         */
        public Builder notifyObjects(Output<List<DispatchRuleNotifyRuleNotifyObjectArgs>> notifyObjects) {
            $.notifyObjects = notifyObjects;
            return this;
        }

        /**
         * @param notifyObjects Sets the notification object. See `notify_objects` below.
         * 
         * @return builder
         * 
         */
        public Builder notifyObjects(List<DispatchRuleNotifyRuleNotifyObjectArgs> notifyObjects) {
            return notifyObjects(Output.of(notifyObjects));
        }

        /**
         * @param notifyObjects Sets the notification object. See `notify_objects` below.
         * 
         * @return builder
         * 
         */
        public Builder notifyObjects(DispatchRuleNotifyRuleNotifyObjectArgs... notifyObjects) {
            return notifyObjects(List.of(notifyObjects));
        }

        /**
         * @param notifyStartTime Start time of notification.
         * 
         * @return builder
         * 
         */
        public Builder notifyStartTime(Output<String> notifyStartTime) {
            $.notifyStartTime = notifyStartTime;
            return this;
        }

        /**
         * @param notifyStartTime Start time of notification.
         * 
         * @return builder
         * 
         */
        public Builder notifyStartTime(String notifyStartTime) {
            return notifyStartTime(Output.of(notifyStartTime));
        }

        public DispatchRuleNotifyRuleArgs build() {
            if ($.notifyChannels == null) {
                throw new MissingRequiredPropertyException("DispatchRuleNotifyRuleArgs", "notifyChannels");
            }
            if ($.notifyEndTime == null) {
                throw new MissingRequiredPropertyException("DispatchRuleNotifyRuleArgs", "notifyEndTime");
            }
            if ($.notifyObjects == null) {
                throw new MissingRequiredPropertyException("DispatchRuleNotifyRuleArgs", "notifyObjects");
            }
            if ($.notifyStartTime == null) {
                throw new MissingRequiredPropertyException("DispatchRuleNotifyRuleArgs", "notifyStartTime");
            }
            return $;
        }
    }

}
