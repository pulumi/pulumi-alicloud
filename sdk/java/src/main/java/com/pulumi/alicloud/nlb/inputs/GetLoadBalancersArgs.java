// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nlb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLoadBalancersArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLoadBalancersArgs Empty = new GetLoadBalancersArgs();

    /**
     * The IP version. Valid values: `ipv4`, `DualStack`.
     * 
     */
    @Import(name="addressIpVersion")
    private @Nullable Output<String> addressIpVersion;

    /**
     * @return The IP version. Valid values: `ipv4`, `DualStack`.
     * 
     */
    public Optional<Output<String>> addressIpVersion() {
        return Optional.ofNullable(this.addressIpVersion);
    }

    /**
     * The type of IPv4 address used by the NLB instance. Valid values: `Internet`, `Intranet`.
     * 
     */
    @Import(name="addressType")
    private @Nullable Output<String> addressType;

    /**
     * @return The type of IPv4 address used by the NLB instance. Valid values: `Internet`, `Intranet`.
     * 
     */
    public Optional<Output<String>> addressType() {
        return Optional.ofNullable(this.addressType);
    }

    /**
     * The domain name of the NLB instance.
     * 
     */
    @Import(name="dnsName")
    private @Nullable Output<String> dnsName;

    /**
     * @return The domain name of the NLB instance.
     * 
     */
    public Optional<Output<String>> dnsName() {
        return Optional.ofNullable(this.dnsName);
    }

    /**
     * A list of Load Balancer IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of Load Balancer IDs.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * The type of IPv6 address used by the NLB instance. Valid values: `Internet`, `Intranet`.
     * 
     */
    @Import(name="ipv6AddressType")
    private @Nullable Output<String> ipv6AddressType;

    /**
     * @return The type of IPv6 address used by the NLB instance. Valid values: `Internet`, `Intranet`.
     * 
     */
    public Optional<Output<String>> ipv6AddressType() {
        return Optional.ofNullable(this.ipv6AddressType);
    }

    /**
     * The business status of the NLB instance. Valid values: `Abnormal`, `Normal`.
     * 
     */
    @Import(name="loadBalancerBusinessStatus")
    private @Nullable Output<String> loadBalancerBusinessStatus;

    /**
     * @return The business status of the NLB instance. Valid values: `Abnormal`, `Normal`.
     * 
     */
    public Optional<Output<String>> loadBalancerBusinessStatus() {
        return Optional.ofNullable(this.loadBalancerBusinessStatus);
    }

    /**
     * The name of the NLB instance. You can specify at most 10 names.
     * 
     */
    @Import(name="loadBalancerNames")
    private @Nullable Output<List<String>> loadBalancerNames;

    /**
     * @return The name of the NLB instance. You can specify at most 10 names.
     * 
     */
    public Optional<Output<List<String>>> loadBalancerNames() {
        return Optional.ofNullable(this.loadBalancerNames);
    }

    /**
     * A regex string to filter results by Load Balancer name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    /**
     * @return A regex string to filter results by Load Balancer name.
     * 
     */
    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The ID of the resource group.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The status of the NLB instance. Valid values: `Inactive`, `Active`, `Provisioning`, `Configuring`, `Deleting`, `Deleted`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the NLB instance. Valid values: `Inactive`, `Active`, `Provisioning`, `Configuring`, `Deleting`, `Deleted`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The ID of the virtual private cloud (VPC) where the NLB instance is deployed. You can specify at most 10 IDs.
     * 
     */
    @Import(name="vpcIds")
    private @Nullable Output<List<String>> vpcIds;

    /**
     * @return The ID of the virtual private cloud (VPC) where the NLB instance is deployed. You can specify at most 10 IDs.
     * 
     */
    public Optional<Output<List<String>>> vpcIds() {
        return Optional.ofNullable(this.vpcIds);
    }

    /**
     * The name of the zone.
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return The name of the zone.
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private GetLoadBalancersArgs() {}

    private GetLoadBalancersArgs(GetLoadBalancersArgs $) {
        this.addressIpVersion = $.addressIpVersion;
        this.addressType = $.addressType;
        this.dnsName = $.dnsName;
        this.ids = $.ids;
        this.ipv6AddressType = $.ipv6AddressType;
        this.loadBalancerBusinessStatus = $.loadBalancerBusinessStatus;
        this.loadBalancerNames = $.loadBalancerNames;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.resourceGroupId = $.resourceGroupId;
        this.status = $.status;
        this.tags = $.tags;
        this.vpcIds = $.vpcIds;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLoadBalancersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLoadBalancersArgs $;

        public Builder() {
            $ = new GetLoadBalancersArgs();
        }

        public Builder(GetLoadBalancersArgs defaults) {
            $ = new GetLoadBalancersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addressIpVersion The IP version. Valid values: `ipv4`, `DualStack`.
         * 
         * @return builder
         * 
         */
        public Builder addressIpVersion(@Nullable Output<String> addressIpVersion) {
            $.addressIpVersion = addressIpVersion;
            return this;
        }

        /**
         * @param addressIpVersion The IP version. Valid values: `ipv4`, `DualStack`.
         * 
         * @return builder
         * 
         */
        public Builder addressIpVersion(String addressIpVersion) {
            return addressIpVersion(Output.of(addressIpVersion));
        }

        /**
         * @param addressType The type of IPv4 address used by the NLB instance. Valid values: `Internet`, `Intranet`.
         * 
         * @return builder
         * 
         */
        public Builder addressType(@Nullable Output<String> addressType) {
            $.addressType = addressType;
            return this;
        }

        /**
         * @param addressType The type of IPv4 address used by the NLB instance. Valid values: `Internet`, `Intranet`.
         * 
         * @return builder
         * 
         */
        public Builder addressType(String addressType) {
            return addressType(Output.of(addressType));
        }

        /**
         * @param dnsName The domain name of the NLB instance.
         * 
         * @return builder
         * 
         */
        public Builder dnsName(@Nullable Output<String> dnsName) {
            $.dnsName = dnsName;
            return this;
        }

        /**
         * @param dnsName The domain name of the NLB instance.
         * 
         * @return builder
         * 
         */
        public Builder dnsName(String dnsName) {
            return dnsName(Output.of(dnsName));
        }

        /**
         * @param ids A list of Load Balancer IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Load Balancer IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of Load Balancer IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param ipv6AddressType The type of IPv6 address used by the NLB instance. Valid values: `Internet`, `Intranet`.
         * 
         * @return builder
         * 
         */
        public Builder ipv6AddressType(@Nullable Output<String> ipv6AddressType) {
            $.ipv6AddressType = ipv6AddressType;
            return this;
        }

        /**
         * @param ipv6AddressType The type of IPv6 address used by the NLB instance. Valid values: `Internet`, `Intranet`.
         * 
         * @return builder
         * 
         */
        public Builder ipv6AddressType(String ipv6AddressType) {
            return ipv6AddressType(Output.of(ipv6AddressType));
        }

        /**
         * @param loadBalancerBusinessStatus The business status of the NLB instance. Valid values: `Abnormal`, `Normal`.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerBusinessStatus(@Nullable Output<String> loadBalancerBusinessStatus) {
            $.loadBalancerBusinessStatus = loadBalancerBusinessStatus;
            return this;
        }

        /**
         * @param loadBalancerBusinessStatus The business status of the NLB instance. Valid values: `Abnormal`, `Normal`.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerBusinessStatus(String loadBalancerBusinessStatus) {
            return loadBalancerBusinessStatus(Output.of(loadBalancerBusinessStatus));
        }

        /**
         * @param loadBalancerNames The name of the NLB instance. You can specify at most 10 names.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerNames(@Nullable Output<List<String>> loadBalancerNames) {
            $.loadBalancerNames = loadBalancerNames;
            return this;
        }

        /**
         * @param loadBalancerNames The name of the NLB instance. You can specify at most 10 names.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerNames(List<String> loadBalancerNames) {
            return loadBalancerNames(Output.of(loadBalancerNames));
        }

        /**
         * @param loadBalancerNames The name of the NLB instance. You can specify at most 10 names.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerNames(String... loadBalancerNames) {
            return loadBalancerNames(List.of(loadBalancerNames));
        }

        /**
         * @param nameRegex A regex string to filter results by Load Balancer name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param nameRegex A regex string to filter results by Load Balancer name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        /**
         * @param resourceGroupId The ID of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param status The status of the NLB instance. Valid values: `Inactive`, `Active`, `Provisioning`, `Configuring`, `Deleting`, `Deleted`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the NLB instance. Valid values: `Inactive`, `Active`, `Provisioning`, `Configuring`, `Deleting`, `Deleted`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param vpcIds The ID of the virtual private cloud (VPC) where the NLB instance is deployed. You can specify at most 10 IDs.
         * 
         * @return builder
         * 
         */
        public Builder vpcIds(@Nullable Output<List<String>> vpcIds) {
            $.vpcIds = vpcIds;
            return this;
        }

        /**
         * @param vpcIds The ID of the virtual private cloud (VPC) where the NLB instance is deployed. You can specify at most 10 IDs.
         * 
         * @return builder
         * 
         */
        public Builder vpcIds(List<String> vpcIds) {
            return vpcIds(Output.of(vpcIds));
        }

        /**
         * @param vpcIds The ID of the virtual private cloud (VPC) where the NLB instance is deployed. You can specify at most 10 IDs.
         * 
         * @return builder
         * 
         */
        public Builder vpcIds(String... vpcIds) {
            return vpcIds(List.of(vpcIds));
        }

        /**
         * @param zoneId The name of the zone.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The name of the zone.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public GetLoadBalancersArgs build() {
            return $;
        }
    }

}
