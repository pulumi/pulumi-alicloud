// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sls.inputs;

import com.pulumi.alicloud.sls.inputs.LogtailConfigOutputDetailArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogtailConfigState extends com.pulumi.resources.ResourceArgs {

    public static final LogtailConfigState Empty = new LogtailConfigState();

    /**
     * The creation time of the resource
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time of the resource
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The detailed configuration entered by logtail.
     * 
     */
    @Import(name="inputDetail")
    private @Nullable Output<String> inputDetail;

    /**
     * @return The detailed configuration entered by logtail.
     * 
     */
    public Optional<Output<String>> inputDetail() {
        return Optional.ofNullable(this.inputDetail);
    }

    /**
     * Method of log entry
     * 
     */
    @Import(name="inputType")
    private @Nullable Output<String> inputType;

    /**
     * @return Method of log entry
     * 
     */
    public Optional<Output<String>> inputType() {
        return Optional.ofNullable(this.inputType);
    }

    /**
     * Last modification time, unix timestamp
     * 
     */
    @Import(name="lastModifyTime")
    private @Nullable Output<Integer> lastModifyTime;

    /**
     * @return Last modification time, unix timestamp
     * 
     */
    public Optional<Output<Integer>> lastModifyTime() {
        return Optional.ofNullable(this.lastModifyTime);
    }

    /**
     * Sample log
     * 
     */
    @Import(name="logSample")
    private @Nullable Output<String> logSample;

    /**
     * @return Sample log
     * 
     */
    public Optional<Output<String>> logSample() {
        return Optional.ofNullable(this.logSample);
    }

    /**
     * The name of the resource
     * 
     */
    @Import(name="logtailConfigName")
    private @Nullable Output<String> logtailConfigName;

    /**
     * @return The name of the resource
     * 
     */
    public Optional<Output<String>> logtailConfigName() {
        return Optional.ofNullable(this.logtailConfigName);
    }

    /**
     * Detailed configuration of logtail output See `output_detail` below.
     * 
     */
    @Import(name="outputDetail")
    private @Nullable Output<LogtailConfigOutputDetailArgs> outputDetail;

    /**
     * @return Detailed configuration of logtail output See `output_detail` below.
     * 
     */
    public Optional<Output<LogtailConfigOutputDetailArgs>> outputDetail() {
        return Optional.ofNullable(this.outputDetail);
    }

    /**
     * Log output mode. You can only upload data to log service.
     * 
     */
    @Import(name="outputType")
    private @Nullable Output<String> outputType;

    /**
     * @return Log output mode. You can only upload data to log service.
     * 
     */
    public Optional<Output<String>> outputType() {
        return Optional.ofNullable(this.outputType);
    }

    /**
     * Project name
     * 
     */
    @Import(name="projectName")
    private @Nullable Output<String> projectName;

    /**
     * @return Project name
     * 
     */
    public Optional<Output<String>> projectName() {
        return Optional.ofNullable(this.projectName);
    }

    private LogtailConfigState() {}

    private LogtailConfigState(LogtailConfigState $) {
        this.createTime = $.createTime;
        this.inputDetail = $.inputDetail;
        this.inputType = $.inputType;
        this.lastModifyTime = $.lastModifyTime;
        this.logSample = $.logSample;
        this.logtailConfigName = $.logtailConfigName;
        this.outputDetail = $.outputDetail;
        this.outputType = $.outputType;
        this.projectName = $.projectName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogtailConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogtailConfigState $;

        public Builder() {
            $ = new LogtailConfigState();
        }

        public Builder(LogtailConfigState defaults) {
            $ = new LogtailConfigState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime The creation time of the resource
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time of the resource
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param inputDetail The detailed configuration entered by logtail.
         * 
         * @return builder
         * 
         */
        public Builder inputDetail(@Nullable Output<String> inputDetail) {
            $.inputDetail = inputDetail;
            return this;
        }

        /**
         * @param inputDetail The detailed configuration entered by logtail.
         * 
         * @return builder
         * 
         */
        public Builder inputDetail(String inputDetail) {
            return inputDetail(Output.of(inputDetail));
        }

        /**
         * @param inputType Method of log entry
         * 
         * @return builder
         * 
         */
        public Builder inputType(@Nullable Output<String> inputType) {
            $.inputType = inputType;
            return this;
        }

        /**
         * @param inputType Method of log entry
         * 
         * @return builder
         * 
         */
        public Builder inputType(String inputType) {
            return inputType(Output.of(inputType));
        }

        /**
         * @param lastModifyTime Last modification time, unix timestamp
         * 
         * @return builder
         * 
         */
        public Builder lastModifyTime(@Nullable Output<Integer> lastModifyTime) {
            $.lastModifyTime = lastModifyTime;
            return this;
        }

        /**
         * @param lastModifyTime Last modification time, unix timestamp
         * 
         * @return builder
         * 
         */
        public Builder lastModifyTime(Integer lastModifyTime) {
            return lastModifyTime(Output.of(lastModifyTime));
        }

        /**
         * @param logSample Sample log
         * 
         * @return builder
         * 
         */
        public Builder logSample(@Nullable Output<String> logSample) {
            $.logSample = logSample;
            return this;
        }

        /**
         * @param logSample Sample log
         * 
         * @return builder
         * 
         */
        public Builder logSample(String logSample) {
            return logSample(Output.of(logSample));
        }

        /**
         * @param logtailConfigName The name of the resource
         * 
         * @return builder
         * 
         */
        public Builder logtailConfigName(@Nullable Output<String> logtailConfigName) {
            $.logtailConfigName = logtailConfigName;
            return this;
        }

        /**
         * @param logtailConfigName The name of the resource
         * 
         * @return builder
         * 
         */
        public Builder logtailConfigName(String logtailConfigName) {
            return logtailConfigName(Output.of(logtailConfigName));
        }

        /**
         * @param outputDetail Detailed configuration of logtail output See `output_detail` below.
         * 
         * @return builder
         * 
         */
        public Builder outputDetail(@Nullable Output<LogtailConfigOutputDetailArgs> outputDetail) {
            $.outputDetail = outputDetail;
            return this;
        }

        /**
         * @param outputDetail Detailed configuration of logtail output See `output_detail` below.
         * 
         * @return builder
         * 
         */
        public Builder outputDetail(LogtailConfigOutputDetailArgs outputDetail) {
            return outputDetail(Output.of(outputDetail));
        }

        /**
         * @param outputType Log output mode. You can only upload data to log service.
         * 
         * @return builder
         * 
         */
        public Builder outputType(@Nullable Output<String> outputType) {
            $.outputType = outputType;
            return this;
        }

        /**
         * @param outputType Log output mode. You can only upload data to log service.
         * 
         * @return builder
         * 
         */
        public Builder outputType(String outputType) {
            return outputType(Output.of(outputType));
        }

        /**
         * @param projectName Project name
         * 
         * @return builder
         * 
         */
        public Builder projectName(@Nullable Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param projectName Project name
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        public LogtailConfigState build() {
            return $;
        }
    }

}
