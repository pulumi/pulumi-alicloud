// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs.outputs;

import com.pulumi.alicloud.cs.outputs.GetKubernetesNodePoolsNodepoolManagementAutoRepairPolicy;
import com.pulumi.alicloud.cs.outputs.GetKubernetesNodePoolsNodepoolManagementAutoUpgradePolicy;
import com.pulumi.alicloud.cs.outputs.GetKubernetesNodePoolsNodepoolManagementAutoVulFixPolicy;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetKubernetesNodePoolsNodepoolManagement {
    /**
     * @return Whether to enable automatic repair. Valid values: `true`: Automatic repair. `false`: not automatically repaired.
     * 
     */
    private Boolean autoRepair;
    /**
     * @return Automatic repair node policy.
     * 
     */
    private GetKubernetesNodePoolsNodepoolManagementAutoRepairPolicy autoRepairPolicy;
    /**
     * @return Specifies whether to enable auto update. Valid values: `true`: enables auto update. `false`: disables auto update.
     * 
     */
    private Boolean autoUpgrade;
    /**
     * @return The auto update policy.
     * 
     */
    private GetKubernetesNodePoolsNodepoolManagementAutoUpgradePolicy autoUpgradePolicy;
    /**
     * @return Specifies whether to automatically patch CVE vulnerabilities. Valid values: `true`, `false`.
     * 
     */
    private Boolean autoVulFix;
    /**
     * @return The auto CVE patching policy.
     * 
     */
    private GetKubernetesNodePoolsNodepoolManagementAutoVulFixPolicy autoVulFixPolicy;
    /**
     * @return Whether to enable automatic scaling. Value:- `true`: enables the node pool auto-scaling function.- `false`: Auto scaling is not enabled. When the value is false, other `auto_scaling` configuration parameters do not take effect.
     * 
     */
    private Boolean enable;
    /**
     * @return Maximum number of unavailable nodes. Default value: 1. Value range:\[1,1000\].
     * 
     */
    private Integer maxUnavailable;
    /**
     * @return Number of additional nodes. You have to specify one of surge, surge_percentage.
     * 
     */
    private Integer surge;
    /**
     * @return Proportion of additional nodes. You have to specify one of surge, surge_percentage.
     * 
     */
    private Integer surgePercentage;

    private GetKubernetesNodePoolsNodepoolManagement() {}
    /**
     * @return Whether to enable automatic repair. Valid values: `true`: Automatic repair. `false`: not automatically repaired.
     * 
     */
    public Boolean autoRepair() {
        return this.autoRepair;
    }
    /**
     * @return Automatic repair node policy.
     * 
     */
    public GetKubernetesNodePoolsNodepoolManagementAutoRepairPolicy autoRepairPolicy() {
        return this.autoRepairPolicy;
    }
    /**
     * @return Specifies whether to enable auto update. Valid values: `true`: enables auto update. `false`: disables auto update.
     * 
     */
    public Boolean autoUpgrade() {
        return this.autoUpgrade;
    }
    /**
     * @return The auto update policy.
     * 
     */
    public GetKubernetesNodePoolsNodepoolManagementAutoUpgradePolicy autoUpgradePolicy() {
        return this.autoUpgradePolicy;
    }
    /**
     * @return Specifies whether to automatically patch CVE vulnerabilities. Valid values: `true`, `false`.
     * 
     */
    public Boolean autoVulFix() {
        return this.autoVulFix;
    }
    /**
     * @return The auto CVE patching policy.
     * 
     */
    public GetKubernetesNodePoolsNodepoolManagementAutoVulFixPolicy autoVulFixPolicy() {
        return this.autoVulFixPolicy;
    }
    /**
     * @return Whether to enable automatic scaling. Value:- `true`: enables the node pool auto-scaling function.- `false`: Auto scaling is not enabled. When the value is false, other `auto_scaling` configuration parameters do not take effect.
     * 
     */
    public Boolean enable() {
        return this.enable;
    }
    /**
     * @return Maximum number of unavailable nodes. Default value: 1. Value range:\[1,1000\].
     * 
     */
    public Integer maxUnavailable() {
        return this.maxUnavailable;
    }
    /**
     * @return Number of additional nodes. You have to specify one of surge, surge_percentage.
     * 
     */
    public Integer surge() {
        return this.surge;
    }
    /**
     * @return Proportion of additional nodes. You have to specify one of surge, surge_percentage.
     * 
     */
    public Integer surgePercentage() {
        return this.surgePercentage;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKubernetesNodePoolsNodepoolManagement defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean autoRepair;
        private GetKubernetesNodePoolsNodepoolManagementAutoRepairPolicy autoRepairPolicy;
        private Boolean autoUpgrade;
        private GetKubernetesNodePoolsNodepoolManagementAutoUpgradePolicy autoUpgradePolicy;
        private Boolean autoVulFix;
        private GetKubernetesNodePoolsNodepoolManagementAutoVulFixPolicy autoVulFixPolicy;
        private Boolean enable;
        private Integer maxUnavailable;
        private Integer surge;
        private Integer surgePercentage;
        public Builder() {}
        public Builder(GetKubernetesNodePoolsNodepoolManagement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoRepair = defaults.autoRepair;
    	      this.autoRepairPolicy = defaults.autoRepairPolicy;
    	      this.autoUpgrade = defaults.autoUpgrade;
    	      this.autoUpgradePolicy = defaults.autoUpgradePolicy;
    	      this.autoVulFix = defaults.autoVulFix;
    	      this.autoVulFixPolicy = defaults.autoVulFixPolicy;
    	      this.enable = defaults.enable;
    	      this.maxUnavailable = defaults.maxUnavailable;
    	      this.surge = defaults.surge;
    	      this.surgePercentage = defaults.surgePercentage;
        }

        @CustomType.Setter
        public Builder autoRepair(Boolean autoRepair) {
            if (autoRepair == null) {
              throw new MissingRequiredPropertyException("GetKubernetesNodePoolsNodepoolManagement", "autoRepair");
            }
            this.autoRepair = autoRepair;
            return this;
        }
        @CustomType.Setter
        public Builder autoRepairPolicy(GetKubernetesNodePoolsNodepoolManagementAutoRepairPolicy autoRepairPolicy) {
            if (autoRepairPolicy == null) {
              throw new MissingRequiredPropertyException("GetKubernetesNodePoolsNodepoolManagement", "autoRepairPolicy");
            }
            this.autoRepairPolicy = autoRepairPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder autoUpgrade(Boolean autoUpgrade) {
            if (autoUpgrade == null) {
              throw new MissingRequiredPropertyException("GetKubernetesNodePoolsNodepoolManagement", "autoUpgrade");
            }
            this.autoUpgrade = autoUpgrade;
            return this;
        }
        @CustomType.Setter
        public Builder autoUpgradePolicy(GetKubernetesNodePoolsNodepoolManagementAutoUpgradePolicy autoUpgradePolicy) {
            if (autoUpgradePolicy == null) {
              throw new MissingRequiredPropertyException("GetKubernetesNodePoolsNodepoolManagement", "autoUpgradePolicy");
            }
            this.autoUpgradePolicy = autoUpgradePolicy;
            return this;
        }
        @CustomType.Setter
        public Builder autoVulFix(Boolean autoVulFix) {
            if (autoVulFix == null) {
              throw new MissingRequiredPropertyException("GetKubernetesNodePoolsNodepoolManagement", "autoVulFix");
            }
            this.autoVulFix = autoVulFix;
            return this;
        }
        @CustomType.Setter
        public Builder autoVulFixPolicy(GetKubernetesNodePoolsNodepoolManagementAutoVulFixPolicy autoVulFixPolicy) {
            if (autoVulFixPolicy == null) {
              throw new MissingRequiredPropertyException("GetKubernetesNodePoolsNodepoolManagement", "autoVulFixPolicy");
            }
            this.autoVulFixPolicy = autoVulFixPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder enable(Boolean enable) {
            if (enable == null) {
              throw new MissingRequiredPropertyException("GetKubernetesNodePoolsNodepoolManagement", "enable");
            }
            this.enable = enable;
            return this;
        }
        @CustomType.Setter
        public Builder maxUnavailable(Integer maxUnavailable) {
            if (maxUnavailable == null) {
              throw new MissingRequiredPropertyException("GetKubernetesNodePoolsNodepoolManagement", "maxUnavailable");
            }
            this.maxUnavailable = maxUnavailable;
            return this;
        }
        @CustomType.Setter
        public Builder surge(Integer surge) {
            if (surge == null) {
              throw new MissingRequiredPropertyException("GetKubernetesNodePoolsNodepoolManagement", "surge");
            }
            this.surge = surge;
            return this;
        }
        @CustomType.Setter
        public Builder surgePercentage(Integer surgePercentage) {
            if (surgePercentage == null) {
              throw new MissingRequiredPropertyException("GetKubernetesNodePoolsNodepoolManagement", "surgePercentage");
            }
            this.surgePercentage = surgePercentage;
            return this;
        }
        public GetKubernetesNodePoolsNodepoolManagement build() {
            final var _resultValue = new GetKubernetesNodePoolsNodepoolManagement();
            _resultValue.autoRepair = autoRepair;
            _resultValue.autoRepairPolicy = autoRepairPolicy;
            _resultValue.autoUpgrade = autoUpgrade;
            _resultValue.autoUpgradePolicy = autoUpgradePolicy;
            _resultValue.autoVulFix = autoVulFix;
            _resultValue.autoVulFixPolicy = autoVulFixPolicy;
            _resultValue.enable = enable;
            _resultValue.maxUnavailable = maxUnavailable;
            _resultValue.surge = surge;
            _resultValue.surgePercentage = surgePercentage;
            return _resultValue;
        }
    }
}
