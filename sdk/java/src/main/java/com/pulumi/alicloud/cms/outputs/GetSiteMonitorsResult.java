// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.outputs;

import com.pulumi.alicloud.cms.outputs.GetSiteMonitorsMonitor;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSiteMonitorsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of Site Monitor IDs.
     * 
     */
    private List<String> ids;
    /**
     * @return A list of Site Monitor Entries. Each element contains the following attributes:
     * 
     */
    private List<GetSiteMonitorsMonitor> monitors;
    private @Nullable String outputFile;
    /**
     * @return Task Id.
     * 
     */
    private @Nullable String taskId;
    /**
     * @return Task Type.
     * 
     */
    private @Nullable String taskType;

    private GetSiteMonitorsResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of Site Monitor IDs.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    /**
     * @return A list of Site Monitor Entries. Each element contains the following attributes:
     * 
     */
    public List<GetSiteMonitorsMonitor> monitors() {
        return this.monitors;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return Task Id.
     * 
     */
    public Optional<String> taskId() {
        return Optional.ofNullable(this.taskId);
    }
    /**
     * @return Task Type.
     * 
     */
    public Optional<String> taskType() {
        return Optional.ofNullable(this.taskType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSiteMonitorsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<String> ids;
        private List<GetSiteMonitorsMonitor> monitors;
        private @Nullable String outputFile;
        private @Nullable String taskId;
        private @Nullable String taskType;
        public Builder() {}
        public Builder(GetSiteMonitorsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.monitors = defaults.monitors;
    	      this.outputFile = defaults.outputFile;
    	      this.taskId = defaults.taskId;
    	      this.taskType = defaults.taskType;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSiteMonitorsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            if (ids == null) {
              throw new MissingRequiredPropertyException("GetSiteMonitorsResult", "ids");
            }
            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder monitors(List<GetSiteMonitorsMonitor> monitors) {
            if (monitors == null) {
              throw new MissingRequiredPropertyException("GetSiteMonitorsResult", "monitors");
            }
            this.monitors = monitors;
            return this;
        }
        public Builder monitors(GetSiteMonitorsMonitor... monitors) {
            return monitors(List.of(monitors));
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder taskId(@Nullable String taskId) {

            this.taskId = taskId;
            return this;
        }
        @CustomType.Setter
        public Builder taskType(@Nullable String taskType) {

            this.taskType = taskType;
            return this;
        }
        public GetSiteMonitorsResult build() {
            final var _resultValue = new GetSiteMonitorsResult();
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.monitors = monitors;
            _resultValue.outputFile = outputFile;
            _resultValue.taskId = taskId;
            _resultValue.taskType = taskType;
            return _resultValue;
        }
    }
}
