// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sls;

import com.pulumi.alicloud.sls.inputs.OssExportSinkConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OssExportSinkArgs extends com.pulumi.resources.ResourceArgs {

    public static final OssExportSinkArgs Empty = new OssExportSinkArgs();

    /**
     * OSSExportConfiguration See `configuration` below.
     * 
     */
    @Import(name="configuration", required=true)
    private Output<OssExportSinkConfigurationArgs> configuration;

    /**
     * @return OSSExportConfiguration See `configuration` below.
     * 
     */
    public Output<OssExportSinkConfigurationArgs> configuration() {
        return this.configuration;
    }

    /**
     * The description of the job.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the job.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The display name of the job.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return The display name of the job.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * The unique identifier of the OSS data shipping job.
     * 
     */
    @Import(name="jobName", required=true)
    private Output<String> jobName;

    /**
     * @return The unique identifier of the OSS data shipping job.
     * 
     */
    public Output<String> jobName() {
        return this.jobName;
    }

    /**
     * The name of the project.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return The name of the project.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    private OssExportSinkArgs() {}

    private OssExportSinkArgs(OssExportSinkArgs $) {
        this.configuration = $.configuration;
        this.description = $.description;
        this.displayName = $.displayName;
        this.jobName = $.jobName;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OssExportSinkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OssExportSinkArgs $;

        public Builder() {
            $ = new OssExportSinkArgs();
        }

        public Builder(OssExportSinkArgs defaults) {
            $ = new OssExportSinkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configuration OSSExportConfiguration See `configuration` below.
         * 
         * @return builder
         * 
         */
        public Builder configuration(Output<OssExportSinkConfigurationArgs> configuration) {
            $.configuration = configuration;
            return this;
        }

        /**
         * @param configuration OSSExportConfiguration See `configuration` below.
         * 
         * @return builder
         * 
         */
        public Builder configuration(OssExportSinkConfigurationArgs configuration) {
            return configuration(Output.of(configuration));
        }

        /**
         * @param description The description of the job.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the job.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The display name of the job.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name of the job.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param jobName The unique identifier of the OSS data shipping job.
         * 
         * @return builder
         * 
         */
        public Builder jobName(Output<String> jobName) {
            $.jobName = jobName;
            return this;
        }

        /**
         * @param jobName The unique identifier of the OSS data shipping job.
         * 
         * @return builder
         * 
         */
        public Builder jobName(String jobName) {
            return jobName(Output.of(jobName));
        }

        /**
         * @param project The name of the project.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The name of the project.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public OssExportSinkArgs build() {
            if ($.configuration == null) {
                throw new MissingRequiredPropertyException("OssExportSinkArgs", "configuration");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("OssExportSinkArgs", "displayName");
            }
            if ($.jobName == null) {
                throw new MissingRequiredPropertyException("OssExportSinkArgs", "jobName");
            }
            if ($.project == null) {
                throw new MissingRequiredPropertyException("OssExportSinkArgs", "project");
            }
            return $;
        }
    }

}
