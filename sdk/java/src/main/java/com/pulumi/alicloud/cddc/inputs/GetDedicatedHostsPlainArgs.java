// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cddc.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDedicatedHostsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDedicatedHostsPlainArgs Empty = new GetDedicatedHostsPlainArgs();

    /**
     * Specifies whether instances can be created on the host. Valid values: `1` or `0`. `1`: Instances can be created on the host. `0`: Instances cannot be created on the host.
     * 
     */
    @Import(name="allocationStatus")
    private @Nullable String allocationStatus;

    /**
     * @return Specifies whether instances can be created on the host. Valid values: `1` or `0`. `1`: Instances can be created on the host. `0`: Instances cannot be created on the host.
     * 
     */
    public Optional<String> allocationStatus() {
        return Optional.ofNullable(this.allocationStatus);
    }

    /**
     * The ID of the dedicated cluster in which the host is created.
     * 
     */
    @Import(name="dedicatedHostGroupId", required=true)
    private String dedicatedHostGroupId;

    /**
     * @return The ID of the dedicated cluster in which the host is created.
     * 
     */
    public String dedicatedHostGroupId() {
        return this.dedicatedHostGroupId;
    }

    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     * 
     */
    @Import(name="enableDetails")
    private @Nullable Boolean enableDetails;

    /**
     * @return Default to `false`. Set it to `true` can output more details about resource attributes.
     * 
     */
    public Optional<Boolean> enableDetails() {
        return Optional.ofNullable(this.enableDetails);
    }

    /**
     * The storage type of the host.
     * 
     */
    @Import(name="hostType")
    private @Nullable String hostType;

    /**
     * @return The storage type of the host.
     * 
     */
    public Optional<String> hostType() {
        return Optional.ofNullable(this.hostType);
    }

    /**
     * A list of Dedicated Host IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable List<String> ids;

    /**
     * @return A list of Dedicated Host IDs.
     * 
     */
    public Optional<List<String>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * The ID of the order.
     * 
     */
    @Import(name="orderId")
    private @Nullable String orderId;

    /**
     * @return The ID of the order.
     * 
     */
    public Optional<String> orderId() {
        return Optional.ofNullable(this.orderId);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable String outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * The state of the host.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return The state of the host.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The tag of the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,Object> tags;

    /**
     * @return The tag of the resource.
     * 
     */
    public Optional<Map<String,Object>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The zone ID of the host.
     * 
     */
    @Import(name="zoneId")
    private @Nullable String zoneId;

    /**
     * @return The zone ID of the host.
     * 
     */
    public Optional<String> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private GetDedicatedHostsPlainArgs() {}

    private GetDedicatedHostsPlainArgs(GetDedicatedHostsPlainArgs $) {
        this.allocationStatus = $.allocationStatus;
        this.dedicatedHostGroupId = $.dedicatedHostGroupId;
        this.enableDetails = $.enableDetails;
        this.hostType = $.hostType;
        this.ids = $.ids;
        this.orderId = $.orderId;
        this.outputFile = $.outputFile;
        this.status = $.status;
        this.tags = $.tags;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDedicatedHostsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDedicatedHostsPlainArgs $;

        public Builder() {
            $ = new GetDedicatedHostsPlainArgs();
        }

        public Builder(GetDedicatedHostsPlainArgs defaults) {
            $ = new GetDedicatedHostsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allocationStatus Specifies whether instances can be created on the host. Valid values: `1` or `0`. `1`: Instances can be created on the host. `0`: Instances cannot be created on the host.
         * 
         * @return builder
         * 
         */
        public Builder allocationStatus(@Nullable String allocationStatus) {
            $.allocationStatus = allocationStatus;
            return this;
        }

        /**
         * @param dedicatedHostGroupId The ID of the dedicated cluster in which the host is created.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedHostGroupId(String dedicatedHostGroupId) {
            $.dedicatedHostGroupId = dedicatedHostGroupId;
            return this;
        }

        /**
         * @param enableDetails Default to `false`. Set it to `true` can output more details about resource attributes.
         * 
         * @return builder
         * 
         */
        public Builder enableDetails(@Nullable Boolean enableDetails) {
            $.enableDetails = enableDetails;
            return this;
        }

        /**
         * @param hostType The storage type of the host.
         * 
         * @return builder
         * 
         */
        public Builder hostType(@Nullable String hostType) {
            $.hostType = hostType;
            return this;
        }

        /**
         * @param ids A list of Dedicated Host IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<String> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Dedicated Host IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param orderId The ID of the order.
         * 
         * @return builder
         * 
         */
        public Builder orderId(@Nullable String orderId) {
            $.orderId = orderId;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable String outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param status The state of the host.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        /**
         * @param tags The tag of the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,Object> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param zoneId The zone ID of the host.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable String zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        public GetDedicatedHostsPlainArgs build() {
            if ($.dedicatedHostGroupId == null) {
                throw new MissingRequiredPropertyException("GetDedicatedHostsPlainArgs", "dedicatedHostGroupId");
            }
            return $;
        }
    }

}
