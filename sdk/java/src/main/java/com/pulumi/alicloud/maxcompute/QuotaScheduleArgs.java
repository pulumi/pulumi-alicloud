// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.maxcompute;

import com.pulumi.alicloud.maxcompute.inputs.QuotaScheduleScheduleListArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class QuotaScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final QuotaScheduleArgs Empty = new QuotaScheduleArgs();

    /**
     * The nickname of level-1 compute quota.
     * 
     */
    @Import(name="nickname", required=true)
    private Output<String> nickname;

    /**
     * @return The nickname of level-1 compute quota.
     * 
     */
    public Output<String> nickname() {
        return this.nickname;
    }

    /**
     * schedule list See `schedule_list` below.
     * 
     */
    @Import(name="scheduleLists")
    private @Nullable Output<List<QuotaScheduleScheduleListArgs>> scheduleLists;

    /**
     * @return schedule list See `schedule_list` below.
     * 
     */
    public Optional<Output<List<QuotaScheduleScheduleListArgs>>> scheduleLists() {
        return Optional.ofNullable(this.scheduleLists);
    }

    /**
     * Time zone, reference value: UTC +8
     * 
     */
    @Import(name="timezone", required=true)
    private Output<String> timezone;

    /**
     * @return Time zone, reference value: UTC +8
     * 
     */
    public Output<String> timezone() {
        return this.timezone;
    }

    private QuotaScheduleArgs() {}

    private QuotaScheduleArgs(QuotaScheduleArgs $) {
        this.nickname = $.nickname;
        this.scheduleLists = $.scheduleLists;
        this.timezone = $.timezone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QuotaScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QuotaScheduleArgs $;

        public Builder() {
            $ = new QuotaScheduleArgs();
        }

        public Builder(QuotaScheduleArgs defaults) {
            $ = new QuotaScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param nickname The nickname of level-1 compute quota.
         * 
         * @return builder
         * 
         */
        public Builder nickname(Output<String> nickname) {
            $.nickname = nickname;
            return this;
        }

        /**
         * @param nickname The nickname of level-1 compute quota.
         * 
         * @return builder
         * 
         */
        public Builder nickname(String nickname) {
            return nickname(Output.of(nickname));
        }

        /**
         * @param scheduleLists schedule list See `schedule_list` below.
         * 
         * @return builder
         * 
         */
        public Builder scheduleLists(@Nullable Output<List<QuotaScheduleScheduleListArgs>> scheduleLists) {
            $.scheduleLists = scheduleLists;
            return this;
        }

        /**
         * @param scheduleLists schedule list See `schedule_list` below.
         * 
         * @return builder
         * 
         */
        public Builder scheduleLists(List<QuotaScheduleScheduleListArgs> scheduleLists) {
            return scheduleLists(Output.of(scheduleLists));
        }

        /**
         * @param scheduleLists schedule list See `schedule_list` below.
         * 
         * @return builder
         * 
         */
        public Builder scheduleLists(QuotaScheduleScheduleListArgs... scheduleLists) {
            return scheduleLists(List.of(scheduleLists));
        }

        /**
         * @param timezone Time zone, reference value: UTC +8
         * 
         * @return builder
         * 
         */
        public Builder timezone(Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        /**
         * @param timezone Time zone, reference value: UTC +8
         * 
         * @return builder
         * 
         */
        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        public QuotaScheduleArgs build() {
            if ($.nickname == null) {
                throw new MissingRequiredPropertyException("QuotaScheduleArgs", "nickname");
            }
            if ($.timezone == null) {
                throw new MissingRequiredPropertyException("QuotaScheduleArgs", "timezone");
            }
            return $;
        }
    }

}
