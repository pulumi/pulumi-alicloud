// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.pai.inputs;

import com.pulumi.alicloud.pai.inputs.WorkspaceModelVersionLabelArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceModelVersionState extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceModelVersionState Empty = new WorkspaceModelVersionState();

    /**
     * The approval status. Valid values:
     * - Pending: To be determined.
     * - Approved: Allow to go online.
     * - Rejected: Online is not allowed.
     * 
     */
    @Import(name="approvalStatus")
    private @Nullable Output<String> approvalStatus;

    /**
     * @return The approval status. Valid values:
     * - Pending: To be determined.
     * - Approved: Allow to go online.
     * - Rejected: Online is not allowed.
     * 
     */
    public Optional<Output<String>> approvalStatus() {
        return Optional.ofNullable(this.approvalStatus);
    }

    /**
     * Other information.
     * 
     */
    @Import(name="extraInfo")
    private @Nullable Output<Map<String,String>> extraInfo;

    /**
     * @return Other information.
     * 
     */
    public Optional<Output<Map<String,String>>> extraInfo() {
        return Optional.ofNullable(this.extraInfo);
    }

    /**
     * The format of the model. Valid values:
     * - OfflineModel
     * - SavedModel
     * - Keras H5
     * - Frozen Pb
     * - Caffe Prototxt
     * - TorchScript
     * - XGBoost
     * - PMML
     * - AlinkModel
     * - ONNX
     * 
     */
    @Import(name="formatType")
    private @Nullable Output<String> formatType;

    /**
     * @return The format of the model. Valid values:
     * - OfflineModel
     * - SavedModel
     * - Keras H5
     * - Frozen Pb
     * - Caffe Prototxt
     * - TorchScript
     * - XGBoost
     * - PMML
     * - AlinkModel
     * - ONNX
     * 
     */
    public Optional<Output<String>> formatType() {
        return Optional.ofNullable(this.formatType);
    }

    /**
     * The framework of the model. Valid values:
     * - Pytorch
     * - XGBoost
     * - Keras
     * - Caffe
     * - Alink
     * - Xflow
     * - TensorFlow
     * 
     */
    @Import(name="frameworkType")
    private @Nullable Output<String> frameworkType;

    /**
     * @return The framework of the model. Valid values:
     * - Pytorch
     * - XGBoost
     * - Keras
     * - Caffe
     * - Alink
     * - Xflow
     * - TensorFlow
     * 
     */
    public Optional<Output<String>> frameworkType() {
        return Optional.ofNullable(this.frameworkType);
    }

    /**
     * Describes how to apply to downstream inference services.
     * 
     */
    @Import(name="inferenceSpec")
    private @Nullable Output<Map<String,String>> inferenceSpec;

    /**
     * @return Describes how to apply to downstream inference services.
     * 
     */
    public Optional<Output<Map<String,String>>> inferenceSpec() {
        return Optional.ofNullable(this.inferenceSpec);
    }

    /**
     * List of model version labels. See `labels` below.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<List<WorkspaceModelVersionLabelArgs>> labels;

    /**
     * @return List of model version labels. See `labels` below.
     * 
     */
    public Optional<Output<List<WorkspaceModelVersionLabelArgs>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The metrics for the model. The serialized length is limited to 8192.
     * 
     */
    @Import(name="metrics")
    private @Nullable Output<Map<String,String>> metrics;

    /**
     * @return The metrics for the model. The serialized length is limited to 8192.
     * 
     */
    public Optional<Output<Map<String,String>>> metrics() {
        return Optional.ofNullable(this.metrics);
    }

    /**
     * The model ID.
     * 
     */
    @Import(name="modelId")
    private @Nullable Output<String> modelId;

    /**
     * @return The model ID.
     * 
     */
    public Optional<Output<String>> modelId() {
        return Optional.ofNullable(this.modelId);
    }

    /**
     * The extended field. This is a JSON string.
     * 
     */
    @Import(name="options")
    private @Nullable Output<String> options;

    /**
     * @return The extended field. This is a JSON string.
     * 
     */
    public Optional<Output<String>> options() {
        return Optional.ofNullable(this.options);
    }

    /**
     * The source ID.
     * 
     */
    @Import(name="sourceId")
    private @Nullable Output<String> sourceId;

    /**
     * @return The source ID.
     * 
     */
    public Optional<Output<String>> sourceId() {
        return Optional.ofNullable(this.sourceId);
    }

    /**
     * The type of the model source. Valid values:
     * - Custom: Custom.
     * - PAIFlow:PAI workflow.
     * - TrainingService:PAI training service.
     * 
     */
    @Import(name="sourceType")
    private @Nullable Output<String> sourceType;

    /**
     * @return The type of the model source. Valid values:
     * - Custom: Custom.
     * - PAIFlow:PAI workflow.
     * - TrainingService:PAI training service.
     * 
     */
    public Optional<Output<String>> sourceType() {
        return Optional.ofNullable(this.sourceType);
    }

    /**
     * The training configurations. Used for fine-tuning and incremental training.
     * 
     */
    @Import(name="trainingSpec")
    private @Nullable Output<Map<String,String>> trainingSpec;

    /**
     * @return The training configurations. Used for fine-tuning and incremental training.
     * 
     */
    public Optional<Output<Map<String,String>>> trainingSpec() {
        return Optional.ofNullable(this.trainingSpec);
    }

    /**
     * The URI of the model version.
     * 
     */
    @Import(name="uri")
    private @Nullable Output<String> uri;

    /**
     * @return The URI of the model version.
     * 
     */
    public Optional<Output<String>> uri() {
        return Optional.ofNullable(this.uri);
    }

    /**
     * The version descriptions.
     * 
     */
    @Import(name="versionDescription")
    private @Nullable Output<String> versionDescription;

    /**
     * @return The version descriptions.
     * 
     */
    public Optional<Output<String>> versionDescription() {
        return Optional.ofNullable(this.versionDescription);
    }

    /**
     * The Model version.
     * 
     */
    @Import(name="versionName")
    private @Nullable Output<String> versionName;

    /**
     * @return The Model version.
     * 
     */
    public Optional<Output<String>> versionName() {
        return Optional.ofNullable(this.versionName);
    }

    private WorkspaceModelVersionState() {}

    private WorkspaceModelVersionState(WorkspaceModelVersionState $) {
        this.approvalStatus = $.approvalStatus;
        this.extraInfo = $.extraInfo;
        this.formatType = $.formatType;
        this.frameworkType = $.frameworkType;
        this.inferenceSpec = $.inferenceSpec;
        this.labels = $.labels;
        this.metrics = $.metrics;
        this.modelId = $.modelId;
        this.options = $.options;
        this.sourceId = $.sourceId;
        this.sourceType = $.sourceType;
        this.trainingSpec = $.trainingSpec;
        this.uri = $.uri;
        this.versionDescription = $.versionDescription;
        this.versionName = $.versionName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceModelVersionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceModelVersionState $;

        public Builder() {
            $ = new WorkspaceModelVersionState();
        }

        public Builder(WorkspaceModelVersionState defaults) {
            $ = new WorkspaceModelVersionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param approvalStatus The approval status. Valid values:
         * - Pending: To be determined.
         * - Approved: Allow to go online.
         * - Rejected: Online is not allowed.
         * 
         * @return builder
         * 
         */
        public Builder approvalStatus(@Nullable Output<String> approvalStatus) {
            $.approvalStatus = approvalStatus;
            return this;
        }

        /**
         * @param approvalStatus The approval status. Valid values:
         * - Pending: To be determined.
         * - Approved: Allow to go online.
         * - Rejected: Online is not allowed.
         * 
         * @return builder
         * 
         */
        public Builder approvalStatus(String approvalStatus) {
            return approvalStatus(Output.of(approvalStatus));
        }

        /**
         * @param extraInfo Other information.
         * 
         * @return builder
         * 
         */
        public Builder extraInfo(@Nullable Output<Map<String,String>> extraInfo) {
            $.extraInfo = extraInfo;
            return this;
        }

        /**
         * @param extraInfo Other information.
         * 
         * @return builder
         * 
         */
        public Builder extraInfo(Map<String,String> extraInfo) {
            return extraInfo(Output.of(extraInfo));
        }

        /**
         * @param formatType The format of the model. Valid values:
         * - OfflineModel
         * - SavedModel
         * - Keras H5
         * - Frozen Pb
         * - Caffe Prototxt
         * - TorchScript
         * - XGBoost
         * - PMML
         * - AlinkModel
         * - ONNX
         * 
         * @return builder
         * 
         */
        public Builder formatType(@Nullable Output<String> formatType) {
            $.formatType = formatType;
            return this;
        }

        /**
         * @param formatType The format of the model. Valid values:
         * - OfflineModel
         * - SavedModel
         * - Keras H5
         * - Frozen Pb
         * - Caffe Prototxt
         * - TorchScript
         * - XGBoost
         * - PMML
         * - AlinkModel
         * - ONNX
         * 
         * @return builder
         * 
         */
        public Builder formatType(String formatType) {
            return formatType(Output.of(formatType));
        }

        /**
         * @param frameworkType The framework of the model. Valid values:
         * - Pytorch
         * - XGBoost
         * - Keras
         * - Caffe
         * - Alink
         * - Xflow
         * - TensorFlow
         * 
         * @return builder
         * 
         */
        public Builder frameworkType(@Nullable Output<String> frameworkType) {
            $.frameworkType = frameworkType;
            return this;
        }

        /**
         * @param frameworkType The framework of the model. Valid values:
         * - Pytorch
         * - XGBoost
         * - Keras
         * - Caffe
         * - Alink
         * - Xflow
         * - TensorFlow
         * 
         * @return builder
         * 
         */
        public Builder frameworkType(String frameworkType) {
            return frameworkType(Output.of(frameworkType));
        }

        /**
         * @param inferenceSpec Describes how to apply to downstream inference services.
         * 
         * @return builder
         * 
         */
        public Builder inferenceSpec(@Nullable Output<Map<String,String>> inferenceSpec) {
            $.inferenceSpec = inferenceSpec;
            return this;
        }

        /**
         * @param inferenceSpec Describes how to apply to downstream inference services.
         * 
         * @return builder
         * 
         */
        public Builder inferenceSpec(Map<String,String> inferenceSpec) {
            return inferenceSpec(Output.of(inferenceSpec));
        }

        /**
         * @param labels List of model version labels. See `labels` below.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<List<WorkspaceModelVersionLabelArgs>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels List of model version labels. See `labels` below.
         * 
         * @return builder
         * 
         */
        public Builder labels(List<WorkspaceModelVersionLabelArgs> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param labels List of model version labels. See `labels` below.
         * 
         * @return builder
         * 
         */
        public Builder labels(WorkspaceModelVersionLabelArgs... labels) {
            return labels(List.of(labels));
        }

        /**
         * @param metrics The metrics for the model. The serialized length is limited to 8192.
         * 
         * @return builder
         * 
         */
        public Builder metrics(@Nullable Output<Map<String,String>> metrics) {
            $.metrics = metrics;
            return this;
        }

        /**
         * @param metrics The metrics for the model. The serialized length is limited to 8192.
         * 
         * @return builder
         * 
         */
        public Builder metrics(Map<String,String> metrics) {
            return metrics(Output.of(metrics));
        }

        /**
         * @param modelId The model ID.
         * 
         * @return builder
         * 
         */
        public Builder modelId(@Nullable Output<String> modelId) {
            $.modelId = modelId;
            return this;
        }

        /**
         * @param modelId The model ID.
         * 
         * @return builder
         * 
         */
        public Builder modelId(String modelId) {
            return modelId(Output.of(modelId));
        }

        /**
         * @param options The extended field. This is a JSON string.
         * 
         * @return builder
         * 
         */
        public Builder options(@Nullable Output<String> options) {
            $.options = options;
            return this;
        }

        /**
         * @param options The extended field. This is a JSON string.
         * 
         * @return builder
         * 
         */
        public Builder options(String options) {
            return options(Output.of(options));
        }

        /**
         * @param sourceId The source ID.
         * 
         * @return builder
         * 
         */
        public Builder sourceId(@Nullable Output<String> sourceId) {
            $.sourceId = sourceId;
            return this;
        }

        /**
         * @param sourceId The source ID.
         * 
         * @return builder
         * 
         */
        public Builder sourceId(String sourceId) {
            return sourceId(Output.of(sourceId));
        }

        /**
         * @param sourceType The type of the model source. Valid values:
         * - Custom: Custom.
         * - PAIFlow:PAI workflow.
         * - TrainingService:PAI training service.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(@Nullable Output<String> sourceType) {
            $.sourceType = sourceType;
            return this;
        }

        /**
         * @param sourceType The type of the model source. Valid values:
         * - Custom: Custom.
         * - PAIFlow:PAI workflow.
         * - TrainingService:PAI training service.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(String sourceType) {
            return sourceType(Output.of(sourceType));
        }

        /**
         * @param trainingSpec The training configurations. Used for fine-tuning and incremental training.
         * 
         * @return builder
         * 
         */
        public Builder trainingSpec(@Nullable Output<Map<String,String>> trainingSpec) {
            $.trainingSpec = trainingSpec;
            return this;
        }

        /**
         * @param trainingSpec The training configurations. Used for fine-tuning and incremental training.
         * 
         * @return builder
         * 
         */
        public Builder trainingSpec(Map<String,String> trainingSpec) {
            return trainingSpec(Output.of(trainingSpec));
        }

        /**
         * @param uri The URI of the model version.
         * 
         * @return builder
         * 
         */
        public Builder uri(@Nullable Output<String> uri) {
            $.uri = uri;
            return this;
        }

        /**
         * @param uri The URI of the model version.
         * 
         * @return builder
         * 
         */
        public Builder uri(String uri) {
            return uri(Output.of(uri));
        }

        /**
         * @param versionDescription The version descriptions.
         * 
         * @return builder
         * 
         */
        public Builder versionDescription(@Nullable Output<String> versionDescription) {
            $.versionDescription = versionDescription;
            return this;
        }

        /**
         * @param versionDescription The version descriptions.
         * 
         * @return builder
         * 
         */
        public Builder versionDescription(String versionDescription) {
            return versionDescription(Output.of(versionDescription));
        }

        /**
         * @param versionName The Model version.
         * 
         * @return builder
         * 
         */
        public Builder versionName(@Nullable Output<String> versionName) {
            $.versionName = versionName;
            return this;
        }

        /**
         * @param versionName The Model version.
         * 
         * @return builder
         * 
         */
        public Builder versionName(String versionName) {
            return versionName(Output.of(versionName));
        }

        public WorkspaceModelVersionState build() {
            return $;
        }
    }

}
