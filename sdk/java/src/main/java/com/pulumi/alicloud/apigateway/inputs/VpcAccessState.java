// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.apigateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcAccessState extends com.pulumi.resources.ResourceArgs {

    public static final VpcAccessState Empty = new VpcAccessState();

    /**
     * ID of the instance in VPC (ECS/Server Load Balance).
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return ID of the instance in VPC (ECS/Server Load Balance).
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * The name of the vpc authorization.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the vpc authorization.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * ID of the port corresponding to the instance.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return ID of the port corresponding to the instance.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * The vpc id of the vpc authorization.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return The vpc id of the vpc authorization.
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private VpcAccessState() {}

    private VpcAccessState(VpcAccessState $) {
        this.instanceId = $.instanceId;
        this.name = $.name;
        this.port = $.port;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcAccessState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcAccessState $;

        public Builder() {
            $ = new VpcAccessState();
        }

        public Builder(VpcAccessState defaults) {
            $ = new VpcAccessState(Objects.requireNonNull(defaults));
        }

        /**
         * @param instanceId ID of the instance in VPC (ECS/Server Load Balance).
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId ID of the instance in VPC (ECS/Server Load Balance).
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param name The name of the vpc authorization.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the vpc authorization.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param port ID of the port corresponding to the instance.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port ID of the port corresponding to the instance.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param vpcId The vpc id of the vpc authorization.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The vpc id of the vpc authorization.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public VpcAccessState build() {
            return $;
        }
    }

}
