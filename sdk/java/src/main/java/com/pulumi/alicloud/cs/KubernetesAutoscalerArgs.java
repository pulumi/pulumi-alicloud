// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs;

import com.pulumi.alicloud.cs.inputs.KubernetesAutoscalerNodepoolArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KubernetesAutoscalerArgs extends com.pulumi.resources.ResourceArgs {

    public static final KubernetesAutoscalerArgs Empty = new KubernetesAutoscalerArgs();

    /**
     * The id of kubernetes cluster.
     * 
     */
    @Import(name="clusterId", required=true)
    private Output<String> clusterId;

    /**
     * @return The id of kubernetes cluster.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }

    /**
     * The cool_down_duration option of cluster-autoscaler.
     * 
     */
    @Import(name="coolDownDuration", required=true)
    private Output<String> coolDownDuration;

    /**
     * @return The cool_down_duration option of cluster-autoscaler.
     * 
     */
    public Output<String> coolDownDuration() {
        return this.coolDownDuration;
    }

    /**
     * The defer_scale_in_duration option of cluster-autoscaler.
     * 
     */
    @Import(name="deferScaleInDuration", required=true)
    private Output<String> deferScaleInDuration;

    /**
     * @return The defer_scale_in_duration option of cluster-autoscaler.
     * 
     */
    public Output<String> deferScaleInDuration() {
        return this.deferScaleInDuration;
    }

    /**
     * The list of the node pools. See `nodepools` below.
     * 
     */
    @Import(name="nodepools")
    private @Nullable Output<List<KubernetesAutoscalerNodepoolArgs>> nodepools;

    /**
     * @return The list of the node pools. See `nodepools` below.
     * 
     */
    public Optional<Output<List<KubernetesAutoscalerNodepoolArgs>>> nodepools() {
        return Optional.ofNullable(this.nodepools);
    }

    /**
     * Enable autoscaler access to alibabacloud service by ecs ramrole token. default: false
     * 
     */
    @Import(name="useEcsRamRoleToken")
    private @Nullable Output<Boolean> useEcsRamRoleToken;

    /**
     * @return Enable autoscaler access to alibabacloud service by ecs ramrole token. default: false
     * 
     */
    public Optional<Output<Boolean>> useEcsRamRoleToken() {
        return Optional.ofNullable(this.useEcsRamRoleToken);
    }

    /**
     * The utilization option of cluster-autoscaler.
     * 
     */
    @Import(name="utilization", required=true)
    private Output<String> utilization;

    /**
     * @return The utilization option of cluster-autoscaler.
     * 
     */
    public Output<String> utilization() {
        return this.utilization;
    }

    private KubernetesAutoscalerArgs() {}

    private KubernetesAutoscalerArgs(KubernetesAutoscalerArgs $) {
        this.clusterId = $.clusterId;
        this.coolDownDuration = $.coolDownDuration;
        this.deferScaleInDuration = $.deferScaleInDuration;
        this.nodepools = $.nodepools;
        this.useEcsRamRoleToken = $.useEcsRamRoleToken;
        this.utilization = $.utilization;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubernetesAutoscalerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubernetesAutoscalerArgs $;

        public Builder() {
            $ = new KubernetesAutoscalerArgs();
        }

        public Builder(KubernetesAutoscalerArgs defaults) {
            $ = new KubernetesAutoscalerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId The id of kubernetes cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The id of kubernetes cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param coolDownDuration The cool_down_duration option of cluster-autoscaler.
         * 
         * @return builder
         * 
         */
        public Builder coolDownDuration(Output<String> coolDownDuration) {
            $.coolDownDuration = coolDownDuration;
            return this;
        }

        /**
         * @param coolDownDuration The cool_down_duration option of cluster-autoscaler.
         * 
         * @return builder
         * 
         */
        public Builder coolDownDuration(String coolDownDuration) {
            return coolDownDuration(Output.of(coolDownDuration));
        }

        /**
         * @param deferScaleInDuration The defer_scale_in_duration option of cluster-autoscaler.
         * 
         * @return builder
         * 
         */
        public Builder deferScaleInDuration(Output<String> deferScaleInDuration) {
            $.deferScaleInDuration = deferScaleInDuration;
            return this;
        }

        /**
         * @param deferScaleInDuration The defer_scale_in_duration option of cluster-autoscaler.
         * 
         * @return builder
         * 
         */
        public Builder deferScaleInDuration(String deferScaleInDuration) {
            return deferScaleInDuration(Output.of(deferScaleInDuration));
        }

        /**
         * @param nodepools The list of the node pools. See `nodepools` below.
         * 
         * @return builder
         * 
         */
        public Builder nodepools(@Nullable Output<List<KubernetesAutoscalerNodepoolArgs>> nodepools) {
            $.nodepools = nodepools;
            return this;
        }

        /**
         * @param nodepools The list of the node pools. See `nodepools` below.
         * 
         * @return builder
         * 
         */
        public Builder nodepools(List<KubernetesAutoscalerNodepoolArgs> nodepools) {
            return nodepools(Output.of(nodepools));
        }

        /**
         * @param nodepools The list of the node pools. See `nodepools` below.
         * 
         * @return builder
         * 
         */
        public Builder nodepools(KubernetesAutoscalerNodepoolArgs... nodepools) {
            return nodepools(List.of(nodepools));
        }

        /**
         * @param useEcsRamRoleToken Enable autoscaler access to alibabacloud service by ecs ramrole token. default: false
         * 
         * @return builder
         * 
         */
        public Builder useEcsRamRoleToken(@Nullable Output<Boolean> useEcsRamRoleToken) {
            $.useEcsRamRoleToken = useEcsRamRoleToken;
            return this;
        }

        /**
         * @param useEcsRamRoleToken Enable autoscaler access to alibabacloud service by ecs ramrole token. default: false
         * 
         * @return builder
         * 
         */
        public Builder useEcsRamRoleToken(Boolean useEcsRamRoleToken) {
            return useEcsRamRoleToken(Output.of(useEcsRamRoleToken));
        }

        /**
         * @param utilization The utilization option of cluster-autoscaler.
         * 
         * @return builder
         * 
         */
        public Builder utilization(Output<String> utilization) {
            $.utilization = utilization;
            return this;
        }

        /**
         * @param utilization The utilization option of cluster-autoscaler.
         * 
         * @return builder
         * 
         */
        public Builder utilization(String utilization) {
            return utilization(Output.of(utilization));
        }

        public KubernetesAutoscalerArgs build() {
            if ($.clusterId == null) {
                throw new MissingRequiredPropertyException("KubernetesAutoscalerArgs", "clusterId");
            }
            if ($.coolDownDuration == null) {
                throw new MissingRequiredPropertyException("KubernetesAutoscalerArgs", "coolDownDuration");
            }
            if ($.deferScaleInDuration == null) {
                throw new MissingRequiredPropertyException("KubernetesAutoscalerArgs", "deferScaleInDuration");
            }
            if ($.utilization == null) {
                throw new MissingRequiredPropertyException("KubernetesAutoscalerArgs", "utilization");
            }
            return $;
        }
    }

}
