// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.vpc.PeerConnectionAccepterArgs;
import com.pulumi.alicloud.vpc.inputs.PeerConnectionAccepterState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Vpc Peer Connection Accepter resource.
 * 
 * For information about Vpc Peer Connection Accepter and how to use it, see [What is Peer Connection Accepter](https://www.alibabacloud.com/help/en/vpc/developer-reference/api-vpcpeer-2022-01-01-acceptvpcpeerconnection).
 * 
 * &gt; **NOTE:** Available since v1.196.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.vpc.PeerConnection;
 * import com.pulumi.alicloud.vpc.PeerConnectionArgs;
 * import com.pulumi.alicloud.vpc.PeerConnectionAccepter;
 * import com.pulumi.alicloud.vpc.PeerConnectionAccepterArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("tf-example");
 *         final var acceptingRegion = config.get("acceptingRegion").orElse("cn-beijing");
 *         final var anotherUid = config.get("anotherUid").orElse("xxxx");
 *         var local = new Network("local", NetworkArgs.builder()
 *             .vpcName(name)
 *             .cidrBlock("10.4.0.0/16")
 *             .build());
 * 
 *         var acceptingNetwork = new Network("acceptingNetwork", NetworkArgs.builder()
 *             .vpcName(name)
 *             .cidrBlock("192.168.0.0/16")
 *             .build());
 * 
 *         final var accepting = AlicloudFunctions.getAccount();
 * 
 *         var default_ = new PeerConnection("default", PeerConnectionArgs.builder()
 *             .peerConnectionName(name)
 *             .vpcId(local.id())
 *             .acceptingAliUid(accepting.applyValue(getAccountResult -> getAccountResult.id()))
 *             .acceptingRegionId(acceptingRegion)
 *             .acceptingVpcId(acceptingNetwork.id())
 *             .description(name)
 *             .build());
 * 
 *         var defaultPeerConnectionAccepter = new PeerConnectionAccepter("defaultPeerConnectionAccepter", PeerConnectionAccepterArgs.builder()
 *             .instanceId(default_.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Vpc Peer Connection Accepter can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:vpc/peerConnectionAccepter:PeerConnectionAccepter example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:vpc/peerConnectionAccepter:PeerConnectionAccepter")
public class PeerConnectionAccepter extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the Alibaba Cloud account (primary account) of the receiving end of the VPC peering connection to be created.-to-peer connection to the VPC account.-account VPC peer-to-peer connection.
     * 
     */
    @Export(name="acceptingOwnerUid", refs={Integer.class}, tree="[0]")
    private Output<Integer> acceptingOwnerUid;

    /**
     * @return The ID of the Alibaba Cloud account (primary account) of the receiving end of the VPC peering connection to be created.-to-peer connection to the VPC account.-account VPC peer-to-peer connection.
     * 
     */
    public Output<Integer> acceptingOwnerUid() {
        return this.acceptingOwnerUid;
    }
    /**
     * The region ID of the recipient of the VPC peering connection to be created.-to-peer connection in the same region, enter the same region ID as the region ID of the initiator.-region VPC peer-to-peer connection, enter a region ID that is different from the region ID of the initiator.
     * 
     */
    @Export(name="acceptingRegionId", refs={String.class}, tree="[0]")
    private Output<String> acceptingRegionId;

    /**
     * @return The region ID of the recipient of the VPC peering connection to be created.-to-peer connection in the same region, enter the same region ID as the region ID of the initiator.-region VPC peer-to-peer connection, enter a region ID that is different from the region ID of the initiator.
     * 
     */
    public Output<String> acceptingRegionId() {
        return this.acceptingRegionId;
    }
    /**
     * The VPC ID of the receiving end of the VPC peer connection.
     * 
     */
    @Export(name="acceptingVpcId", refs={String.class}, tree="[0]")
    private Output<String> acceptingVpcId;

    /**
     * @return The VPC ID of the receiving end of the VPC peer connection.
     * 
     */
    public Output<String> acceptingVpcId() {
        return this.acceptingVpcId;
    }
    /**
     * The new bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0.
     * 
     */
    @Export(name="bandwidth", refs={Integer.class}, tree="[0]")
    private Output<Integer> bandwidth;

    /**
     * @return The new bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0.
     * 
     */
    public Output<Integer> bandwidth() {
        return this.bandwidth;
    }
    /**
     * The creation time of the VPC peer connection. Use UTC time in the format&#39; YYYY-MM-DDThh:mm:ssZ &#39;.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The creation time of the VPC peer connection. Use UTC time in the format&#39; YYYY-MM-DDThh:mm:ssZ &#39;.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The new description of the VPC peering connection.
     * 
     * The description must be 1 to 256 characters in length, and cannot start with `http://` or `https://`.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return The new description of the VPC peering connection.
     * 
     * The description must be 1 to 256 characters in length, and cannot start with `http://` or `https://`.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Specifies whether to perform only a dry run, without performing the actual request. Valid values:
     * 
     */
    @Export(name="dryRun", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dryRun;

    /**
     * @return Specifies whether to perform only a dry run, without performing the actual request. Valid values:
     * 
     */
    public Output<Optional<Boolean>> dryRun() {
        return Codegen.optional(this.dryRun);
    }
    /**
     * Specifies whether to forcefully delete the VPC peering connection. Valid values:
     * 
     */
    @Export(name="forceDelete", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> forceDelete;

    /**
     * @return Specifies whether to forcefully delete the VPC peering connection. Valid values:
     * 
     */
    public Output<Optional<Boolean>> forceDelete() {
        return Codegen.optional(this.forceDelete);
    }
    /**
     * The ID of the VPC peering connection whose name or description you want to modify.
     * 
     */
    @Export(name="instanceId", refs={String.class}, tree="[0]")
    private Output<String> instanceId;

    /**
     * @return The ID of the VPC peering connection whose name or description you want to modify.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }
    /**
     * The new name of the VPC peering connection.
     * 
     * The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
     * 
     */
    @Export(name="peerConnectionAccepterName", refs={String.class}, tree="[0]")
    private Output<String> peerConnectionAccepterName;

    /**
     * @return The new name of the VPC peering connection.
     * 
     * The name must be 1 to 128 characters in length, and cannot start with `http://` or `https://`.
     * 
     */
    public Output<String> peerConnectionAccepterName() {
        return this.peerConnectionAccepterName;
    }
    /**
     * The ID of the new resource group.
     * 
     * &gt; **NOTE:**   You can use resource groups to manage resources within your Alibaba Cloud account by group. This helps you resolve issues such as resource grouping and permission management for your Alibaba Cloud account. For more information, see [What is resource management?](https://www.alibabacloud.com/help/en/doc-detail/94475.html)
     * 
     */
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupId;

    /**
     * @return The ID of the new resource group.
     * 
     * &gt; **NOTE:**   You can use resource groups to manage resources within your Alibaba Cloud account by group. This helps you resolve issues such as resource grouping and permission management for your Alibaba Cloud account. For more information, see [What is resource management?](https://www.alibabacloud.com/help/en/doc-detail/94475.html)
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * The status of the resource
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the resource
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The VPC ID of the initiator of the VPC peering connection.
     * 
     */
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output<String> vpcId;

    /**
     * @return The VPC ID of the initiator of the VPC peering connection.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PeerConnectionAccepter(java.lang.String name) {
        this(name, PeerConnectionAccepterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PeerConnectionAccepter(java.lang.String name, PeerConnectionAccepterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PeerConnectionAccepter(java.lang.String name, PeerConnectionAccepterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:vpc/peerConnectionAccepter:PeerConnectionAccepter", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private PeerConnectionAccepter(java.lang.String name, Output<java.lang.String> id, @Nullable PeerConnectionAccepterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:vpc/peerConnectionAccepter:PeerConnectionAccepter", name, state, makeResourceOptions(options, id), false);
    }

    private static PeerConnectionAccepterArgs makeArgs(PeerConnectionAccepterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? PeerConnectionAccepterArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PeerConnectionAccepter get(java.lang.String name, Output<java.lang.String> id, @Nullable PeerConnectionAccepterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PeerConnectionAccepter(name, id, state, options);
    }
}
