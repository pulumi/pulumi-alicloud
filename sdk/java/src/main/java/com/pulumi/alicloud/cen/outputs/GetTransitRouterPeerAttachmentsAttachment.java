// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTransitRouterPeerAttachmentsAttachment {
    /**
     * @return Auto publish route enabled.
     * 
     */
    private Boolean autoPublishRouteEnabled;
    /**
     * @return The bandwidth of the bandwidth package.
     * 
     */
    private Integer bandwidth;
    /**
     * @return ID of the CEN bandwidth package.
     * 
     */
    private String cenBandwidthPackageId;
    /**
     * @return ID of the geographic.
     * 
     */
    private String geographicSpanId;
    /**
     * @return The ID of CEN Transit Router peer attachments.
     * 
     */
    private String id;
    /**
     * @return ID of the peer transit router.
     * 
     */
    private String peerTransitRouterId;
    /**
     * @return Owner ID of the peer transit router.
     * 
     */
    private String peerTransitRouterOwnerId;
    /**
     * @return Region ID of the peer transit router.
     * 
     */
    private String peerTransitRouterRegionId;
    /**
     * @return Type of the resource.
     * 
     */
    private String resourceType;
    /**
     * @return The status of CEN Transit Router peer attachment. Valid values `Attached`, `Attaching` and `Detaching`.
     * 
     */
    private String status;
    /**
     * @return The description of CEN Transit Router peer attachments.
     * 
     */
    private String transitRouterAttachmentDescription;
    /**
     * @return The ID of CEN Transit Router peer attachments.
     * 
     */
    private String transitRouterAttachmentId;
    /**
     * @return Name of the transit router attachment.
     * 
     */
    private String transitRouterAttachmentName;
    /**
     * @return The ID of transit router.
     * 
     */
    private String transitRouterId;

    private GetTransitRouterPeerAttachmentsAttachment() {}
    /**
     * @return Auto publish route enabled.
     * 
     */
    public Boolean autoPublishRouteEnabled() {
        return this.autoPublishRouteEnabled;
    }
    /**
     * @return The bandwidth of the bandwidth package.
     * 
     */
    public Integer bandwidth() {
        return this.bandwidth;
    }
    /**
     * @return ID of the CEN bandwidth package.
     * 
     */
    public String cenBandwidthPackageId() {
        return this.cenBandwidthPackageId;
    }
    /**
     * @return ID of the geographic.
     * 
     */
    public String geographicSpanId() {
        return this.geographicSpanId;
    }
    /**
     * @return The ID of CEN Transit Router peer attachments.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return ID of the peer transit router.
     * 
     */
    public String peerTransitRouterId() {
        return this.peerTransitRouterId;
    }
    /**
     * @return Owner ID of the peer transit router.
     * 
     */
    public String peerTransitRouterOwnerId() {
        return this.peerTransitRouterOwnerId;
    }
    /**
     * @return Region ID of the peer transit router.
     * 
     */
    public String peerTransitRouterRegionId() {
        return this.peerTransitRouterRegionId;
    }
    /**
     * @return Type of the resource.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }
    /**
     * @return The status of CEN Transit Router peer attachment. Valid values `Attached`, `Attaching` and `Detaching`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The description of CEN Transit Router peer attachments.
     * 
     */
    public String transitRouterAttachmentDescription() {
        return this.transitRouterAttachmentDescription;
    }
    /**
     * @return The ID of CEN Transit Router peer attachments.
     * 
     */
    public String transitRouterAttachmentId() {
        return this.transitRouterAttachmentId;
    }
    /**
     * @return Name of the transit router attachment.
     * 
     */
    public String transitRouterAttachmentName() {
        return this.transitRouterAttachmentName;
    }
    /**
     * @return The ID of transit router.
     * 
     */
    public String transitRouterId() {
        return this.transitRouterId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTransitRouterPeerAttachmentsAttachment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean autoPublishRouteEnabled;
        private Integer bandwidth;
        private String cenBandwidthPackageId;
        private String geographicSpanId;
        private String id;
        private String peerTransitRouterId;
        private String peerTransitRouterOwnerId;
        private String peerTransitRouterRegionId;
        private String resourceType;
        private String status;
        private String transitRouterAttachmentDescription;
        private String transitRouterAttachmentId;
        private String transitRouterAttachmentName;
        private String transitRouterId;
        public Builder() {}
        public Builder(GetTransitRouterPeerAttachmentsAttachment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoPublishRouteEnabled = defaults.autoPublishRouteEnabled;
    	      this.bandwidth = defaults.bandwidth;
    	      this.cenBandwidthPackageId = defaults.cenBandwidthPackageId;
    	      this.geographicSpanId = defaults.geographicSpanId;
    	      this.id = defaults.id;
    	      this.peerTransitRouterId = defaults.peerTransitRouterId;
    	      this.peerTransitRouterOwnerId = defaults.peerTransitRouterOwnerId;
    	      this.peerTransitRouterRegionId = defaults.peerTransitRouterRegionId;
    	      this.resourceType = defaults.resourceType;
    	      this.status = defaults.status;
    	      this.transitRouterAttachmentDescription = defaults.transitRouterAttachmentDescription;
    	      this.transitRouterAttachmentId = defaults.transitRouterAttachmentId;
    	      this.transitRouterAttachmentName = defaults.transitRouterAttachmentName;
    	      this.transitRouterId = defaults.transitRouterId;
        }

        @CustomType.Setter
        public Builder autoPublishRouteEnabled(Boolean autoPublishRouteEnabled) {
            if (autoPublishRouteEnabled == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterPeerAttachmentsAttachment", "autoPublishRouteEnabled");
            }
            this.autoPublishRouteEnabled = autoPublishRouteEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder bandwidth(Integer bandwidth) {
            if (bandwidth == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterPeerAttachmentsAttachment", "bandwidth");
            }
            this.bandwidth = bandwidth;
            return this;
        }
        @CustomType.Setter
        public Builder cenBandwidthPackageId(String cenBandwidthPackageId) {
            if (cenBandwidthPackageId == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterPeerAttachmentsAttachment", "cenBandwidthPackageId");
            }
            this.cenBandwidthPackageId = cenBandwidthPackageId;
            return this;
        }
        @CustomType.Setter
        public Builder geographicSpanId(String geographicSpanId) {
            if (geographicSpanId == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterPeerAttachmentsAttachment", "geographicSpanId");
            }
            this.geographicSpanId = geographicSpanId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterPeerAttachmentsAttachment", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder peerTransitRouterId(String peerTransitRouterId) {
            if (peerTransitRouterId == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterPeerAttachmentsAttachment", "peerTransitRouterId");
            }
            this.peerTransitRouterId = peerTransitRouterId;
            return this;
        }
        @CustomType.Setter
        public Builder peerTransitRouterOwnerId(String peerTransitRouterOwnerId) {
            if (peerTransitRouterOwnerId == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterPeerAttachmentsAttachment", "peerTransitRouterOwnerId");
            }
            this.peerTransitRouterOwnerId = peerTransitRouterOwnerId;
            return this;
        }
        @CustomType.Setter
        public Builder peerTransitRouterRegionId(String peerTransitRouterRegionId) {
            if (peerTransitRouterRegionId == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterPeerAttachmentsAttachment", "peerTransitRouterRegionId");
            }
            this.peerTransitRouterRegionId = peerTransitRouterRegionId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            if (resourceType == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterPeerAttachmentsAttachment", "resourceType");
            }
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterPeerAttachmentsAttachment", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterAttachmentDescription(String transitRouterAttachmentDescription) {
            if (transitRouterAttachmentDescription == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterPeerAttachmentsAttachment", "transitRouterAttachmentDescription");
            }
            this.transitRouterAttachmentDescription = transitRouterAttachmentDescription;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterAttachmentId(String transitRouterAttachmentId) {
            if (transitRouterAttachmentId == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterPeerAttachmentsAttachment", "transitRouterAttachmentId");
            }
            this.transitRouterAttachmentId = transitRouterAttachmentId;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterAttachmentName(String transitRouterAttachmentName) {
            if (transitRouterAttachmentName == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterPeerAttachmentsAttachment", "transitRouterAttachmentName");
            }
            this.transitRouterAttachmentName = transitRouterAttachmentName;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterId(String transitRouterId) {
            if (transitRouterId == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterPeerAttachmentsAttachment", "transitRouterId");
            }
            this.transitRouterId = transitRouterId;
            return this;
        }
        public GetTransitRouterPeerAttachmentsAttachment build() {
            final var _resultValue = new GetTransitRouterPeerAttachmentsAttachment();
            _resultValue.autoPublishRouteEnabled = autoPublishRouteEnabled;
            _resultValue.bandwidth = bandwidth;
            _resultValue.cenBandwidthPackageId = cenBandwidthPackageId;
            _resultValue.geographicSpanId = geographicSpanId;
            _resultValue.id = id;
            _resultValue.peerTransitRouterId = peerTransitRouterId;
            _resultValue.peerTransitRouterOwnerId = peerTransitRouterOwnerId;
            _resultValue.peerTransitRouterRegionId = peerTransitRouterRegionId;
            _resultValue.resourceType = resourceType;
            _resultValue.status = status;
            _resultValue.transitRouterAttachmentDescription = transitRouterAttachmentDescription;
            _resultValue.transitRouterAttachmentId = transitRouterAttachmentId;
            _resultValue.transitRouterAttachmentName = transitRouterAttachmentName;
            _resultValue.transitRouterId = transitRouterId;
            return _resultValue;
        }
    }
}
