// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.message.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceEventRuleMatchRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceEventRuleMatchRuleArgs Empty = new ServiceEventRuleMatchRuleArgs();

    /**
     * Match state. valid values: `true`, `false`.
     * 
     */
    @Import(name="matchState")
    private @Nullable Output<String> matchState;

    /**
     * @return Match state. valid values: `true`, `false`.
     * 
     */
    public Optional<Output<String>> matchState() {
        return Optional.ofNullable(this.matchState);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Prefix matching rule.
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    /**
     * @return Prefix matching rule.
     * 
     */
    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    /**
     * Suffix matching rule.
     * 
     */
    @Import(name="suffix")
    private @Nullable Output<String> suffix;

    /**
     * @return Suffix matching rule.
     * 
     */
    public Optional<Output<String>> suffix() {
        return Optional.ofNullable(this.suffix);
    }

    private ServiceEventRuleMatchRuleArgs() {}

    private ServiceEventRuleMatchRuleArgs(ServiceEventRuleMatchRuleArgs $) {
        this.matchState = $.matchState;
        this.name = $.name;
        this.prefix = $.prefix;
        this.suffix = $.suffix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceEventRuleMatchRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceEventRuleMatchRuleArgs $;

        public Builder() {
            $ = new ServiceEventRuleMatchRuleArgs();
        }

        public Builder(ServiceEventRuleMatchRuleArgs defaults) {
            $ = new ServiceEventRuleMatchRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param matchState Match state. valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder matchState(@Nullable Output<String> matchState) {
            $.matchState = matchState;
            return this;
        }

        /**
         * @param matchState Match state. valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder matchState(String matchState) {
            return matchState(Output.of(matchState));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param prefix Prefix matching rule.
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix Prefix matching rule.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        /**
         * @param suffix Suffix matching rule.
         * 
         * @return builder
         * 
         */
        public Builder suffix(@Nullable Output<String> suffix) {
            $.suffix = suffix;
            return this;
        }

        /**
         * @param suffix Suffix matching rule.
         * 
         * @return builder
         * 
         */
        public Builder suffix(String suffix) {
            return suffix(Output.of(suffix));
        }

        public ServiceEventRuleMatchRuleArgs build() {
            return $;
        }
    }

}
