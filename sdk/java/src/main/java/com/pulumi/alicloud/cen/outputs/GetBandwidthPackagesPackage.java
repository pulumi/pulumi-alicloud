// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBandwidthPackagesPackage {
    /**
     * @return The bandwidth in Mbps of the CEN bandwidth package.
     * 
     */
    private Integer bandwidth;
    /**
     * @return The billing method, including `POSTPAY` and `PREPAY`.
     * 
     */
    private String bandwidthPackageChargeType;
    /**
     * @return Status of the CEN Bandwidth Package, including `Normal`, `FinancialLocked` and `SecurityLocked`.
     * 
     */
    private String businessStatus;
    /**
     * @return The ID of the bandwidth package.
     * 
     */
    private String cenBandwidthPackageId;
    /**
     * @return The name of the bandwidth package.
     * 
     */
    private String cenBandwidthPackageName;
    /**
     * @return The list of CEN instances that are associated with the bandwidth package.
     * 
     */
    private List<String> cenIds;
    /**
     * @return Description of the CEN Bandwidth Package.
     * 
     */
    private String description;
    private String expiredTime;
    /**
     * @return Region ID of the interconnected regions.
     * 
     */
    private String geographicRegionAId;
    /**
     * @return Region ID of the interconnected regions.
     * 
     */
    private String geographicRegionBId;
    /**
     * @return The area ID of the cross-area connection.
     * 
     */
    private String geographicSpanId;
    /**
     * @return Indicates whether renewal data is involved.
     * 
     */
    private String hasReservationData;
    /**
     * @return ID of the CEN Bandwidth Package.
     * 
     */
    private String id;
    /**
     * @return ID of a CEN instance.
     * 
     */
    private String instanceId;
    /**
     * @return Indicates whether the bandwidth package is a cross-border bandwidth package.
     * 
     */
    private Boolean isCrossBorder;
    /**
     * @return Name of the CEN Bandwidth Package.
     * 
     */
    private String name;
    /**
     * @return The billing method of the bandwidth package.
     * 
     */
    private String paymentType;
    /**
     * @return The expiration time of the temporary upgrade.
     * 
     */
    private String reservationActiveTime;
    /**
     * @return The restored bandwidth after the temporary upgrade.
     * 
     */
    private String reservationBandwidth;
    /**
     * @return The billing method after the configuration change.
     * 
     */
    private String reservationInternetChargeType;
    /**
     * @return The type of the configuration change.
     * 
     */
    private String reservationOrderType;
    /**
     * @return Status of the CEN Bandwidth Package in CEN instance, Valid value: `Idle` and `InUse`.
     * 
     */
    private String status;

    private GetBandwidthPackagesPackage() {}
    /**
     * @return The bandwidth in Mbps of the CEN bandwidth package.
     * 
     */
    public Integer bandwidth() {
        return this.bandwidth;
    }
    /**
     * @return The billing method, including `POSTPAY` and `PREPAY`.
     * 
     */
    public String bandwidthPackageChargeType() {
        return this.bandwidthPackageChargeType;
    }
    /**
     * @return Status of the CEN Bandwidth Package, including `Normal`, `FinancialLocked` and `SecurityLocked`.
     * 
     */
    public String businessStatus() {
        return this.businessStatus;
    }
    /**
     * @return The ID of the bandwidth package.
     * 
     */
    public String cenBandwidthPackageId() {
        return this.cenBandwidthPackageId;
    }
    /**
     * @return The name of the bandwidth package.
     * 
     */
    public String cenBandwidthPackageName() {
        return this.cenBandwidthPackageName;
    }
    /**
     * @return The list of CEN instances that are associated with the bandwidth package.
     * 
     */
    public List<String> cenIds() {
        return this.cenIds;
    }
    /**
     * @return Description of the CEN Bandwidth Package.
     * 
     */
    public String description() {
        return this.description;
    }
    public String expiredTime() {
        return this.expiredTime;
    }
    /**
     * @return Region ID of the interconnected regions.
     * 
     */
    public String geographicRegionAId() {
        return this.geographicRegionAId;
    }
    /**
     * @return Region ID of the interconnected regions.
     * 
     */
    public String geographicRegionBId() {
        return this.geographicRegionBId;
    }
    /**
     * @return The area ID of the cross-area connection.
     * 
     */
    public String geographicSpanId() {
        return this.geographicSpanId;
    }
    /**
     * @return Indicates whether renewal data is involved.
     * 
     */
    public String hasReservationData() {
        return this.hasReservationData;
    }
    /**
     * @return ID of the CEN Bandwidth Package.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return ID of a CEN instance.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return Indicates whether the bandwidth package is a cross-border bandwidth package.
     * 
     */
    public Boolean isCrossBorder() {
        return this.isCrossBorder;
    }
    /**
     * @return Name of the CEN Bandwidth Package.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The billing method of the bandwidth package.
     * 
     */
    public String paymentType() {
        return this.paymentType;
    }
    /**
     * @return The expiration time of the temporary upgrade.
     * 
     */
    public String reservationActiveTime() {
        return this.reservationActiveTime;
    }
    /**
     * @return The restored bandwidth after the temporary upgrade.
     * 
     */
    public String reservationBandwidth() {
        return this.reservationBandwidth;
    }
    /**
     * @return The billing method after the configuration change.
     * 
     */
    public String reservationInternetChargeType() {
        return this.reservationInternetChargeType;
    }
    /**
     * @return The type of the configuration change.
     * 
     */
    public String reservationOrderType() {
        return this.reservationOrderType;
    }
    /**
     * @return Status of the CEN Bandwidth Package in CEN instance, Valid value: `Idle` and `InUse`.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBandwidthPackagesPackage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer bandwidth;
        private String bandwidthPackageChargeType;
        private String businessStatus;
        private String cenBandwidthPackageId;
        private String cenBandwidthPackageName;
        private List<String> cenIds;
        private String description;
        private String expiredTime;
        private String geographicRegionAId;
        private String geographicRegionBId;
        private String geographicSpanId;
        private String hasReservationData;
        private String id;
        private String instanceId;
        private Boolean isCrossBorder;
        private String name;
        private String paymentType;
        private String reservationActiveTime;
        private String reservationBandwidth;
        private String reservationInternetChargeType;
        private String reservationOrderType;
        private String status;
        public Builder() {}
        public Builder(GetBandwidthPackagesPackage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandwidth = defaults.bandwidth;
    	      this.bandwidthPackageChargeType = defaults.bandwidthPackageChargeType;
    	      this.businessStatus = defaults.businessStatus;
    	      this.cenBandwidthPackageId = defaults.cenBandwidthPackageId;
    	      this.cenBandwidthPackageName = defaults.cenBandwidthPackageName;
    	      this.cenIds = defaults.cenIds;
    	      this.description = defaults.description;
    	      this.expiredTime = defaults.expiredTime;
    	      this.geographicRegionAId = defaults.geographicRegionAId;
    	      this.geographicRegionBId = defaults.geographicRegionBId;
    	      this.geographicSpanId = defaults.geographicSpanId;
    	      this.hasReservationData = defaults.hasReservationData;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.isCrossBorder = defaults.isCrossBorder;
    	      this.name = defaults.name;
    	      this.paymentType = defaults.paymentType;
    	      this.reservationActiveTime = defaults.reservationActiveTime;
    	      this.reservationBandwidth = defaults.reservationBandwidth;
    	      this.reservationInternetChargeType = defaults.reservationInternetChargeType;
    	      this.reservationOrderType = defaults.reservationOrderType;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder bandwidth(Integer bandwidth) {
            this.bandwidth = Objects.requireNonNull(bandwidth);
            return this;
        }
        @CustomType.Setter
        public Builder bandwidthPackageChargeType(String bandwidthPackageChargeType) {
            this.bandwidthPackageChargeType = Objects.requireNonNull(bandwidthPackageChargeType);
            return this;
        }
        @CustomType.Setter
        public Builder businessStatus(String businessStatus) {
            this.businessStatus = Objects.requireNonNull(businessStatus);
            return this;
        }
        @CustomType.Setter
        public Builder cenBandwidthPackageId(String cenBandwidthPackageId) {
            this.cenBandwidthPackageId = Objects.requireNonNull(cenBandwidthPackageId);
            return this;
        }
        @CustomType.Setter
        public Builder cenBandwidthPackageName(String cenBandwidthPackageName) {
            this.cenBandwidthPackageName = Objects.requireNonNull(cenBandwidthPackageName);
            return this;
        }
        @CustomType.Setter
        public Builder cenIds(List<String> cenIds) {
            this.cenIds = Objects.requireNonNull(cenIds);
            return this;
        }
        public Builder cenIds(String... cenIds) {
            return cenIds(List.of(cenIds));
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder expiredTime(String expiredTime) {
            this.expiredTime = Objects.requireNonNull(expiredTime);
            return this;
        }
        @CustomType.Setter
        public Builder geographicRegionAId(String geographicRegionAId) {
            this.geographicRegionAId = Objects.requireNonNull(geographicRegionAId);
            return this;
        }
        @CustomType.Setter
        public Builder geographicRegionBId(String geographicRegionBId) {
            this.geographicRegionBId = Objects.requireNonNull(geographicRegionBId);
            return this;
        }
        @CustomType.Setter
        public Builder geographicSpanId(String geographicSpanId) {
            this.geographicSpanId = Objects.requireNonNull(geographicSpanId);
            return this;
        }
        @CustomType.Setter
        public Builder hasReservationData(String hasReservationData) {
            this.hasReservationData = Objects.requireNonNull(hasReservationData);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        @CustomType.Setter
        public Builder isCrossBorder(Boolean isCrossBorder) {
            this.isCrossBorder = Objects.requireNonNull(isCrossBorder);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder paymentType(String paymentType) {
            this.paymentType = Objects.requireNonNull(paymentType);
            return this;
        }
        @CustomType.Setter
        public Builder reservationActiveTime(String reservationActiveTime) {
            this.reservationActiveTime = Objects.requireNonNull(reservationActiveTime);
            return this;
        }
        @CustomType.Setter
        public Builder reservationBandwidth(String reservationBandwidth) {
            this.reservationBandwidth = Objects.requireNonNull(reservationBandwidth);
            return this;
        }
        @CustomType.Setter
        public Builder reservationInternetChargeType(String reservationInternetChargeType) {
            this.reservationInternetChargeType = Objects.requireNonNull(reservationInternetChargeType);
            return this;
        }
        @CustomType.Setter
        public Builder reservationOrderType(String reservationOrderType) {
            this.reservationOrderType = Objects.requireNonNull(reservationOrderType);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public GetBandwidthPackagesPackage build() {
            final var o = new GetBandwidthPackagesPackage();
            o.bandwidth = bandwidth;
            o.bandwidthPackageChargeType = bandwidthPackageChargeType;
            o.businessStatus = businessStatus;
            o.cenBandwidthPackageId = cenBandwidthPackageId;
            o.cenBandwidthPackageName = cenBandwidthPackageName;
            o.cenIds = cenIds;
            o.description = description;
            o.expiredTime = expiredTime;
            o.geographicRegionAId = geographicRegionAId;
            o.geographicRegionBId = geographicRegionBId;
            o.geographicSpanId = geographicSpanId;
            o.hasReservationData = hasReservationData;
            o.id = id;
            o.instanceId = instanceId;
            o.isCrossBorder = isCrossBorder;
            o.name = name;
            o.paymentType = paymentType;
            o.reservationActiveTime = reservationActiveTime;
            o.reservationBandwidth = reservationBandwidth;
            o.reservationInternetChargeType = reservationInternetChargeType;
            o.reservationOrderType = reservationOrderType;
            o.status = status;
            return o;
        }
    }
}
