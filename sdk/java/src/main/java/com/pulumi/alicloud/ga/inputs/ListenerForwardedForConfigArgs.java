// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ga.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListenerForwardedForConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ListenerForwardedForConfigArgs Empty = new ListenerForwardedForConfigArgs();

    /**
     * Specifies whether to use the GA-AP header to retrieve the information about acceleration regions. Default value: `false`. Valid values:
     * 
     */
    @Import(name="forwardedForGaApEnabled")
    private @Nullable Output<Boolean> forwardedForGaApEnabled;

    /**
     * @return Specifies whether to use the GA-AP header to retrieve the information about acceleration regions. Default value: `false`. Valid values:
     * 
     */
    public Optional<Output<Boolean>> forwardedForGaApEnabled() {
        return Optional.ofNullable(this.forwardedForGaApEnabled);
    }

    /**
     * Specifies whether to use the GA-ID header to retrieve the ID of the GA instance. Default value: `false`. Valid values:
     * 
     */
    @Import(name="forwardedForGaIdEnabled")
    private @Nullable Output<Boolean> forwardedForGaIdEnabled;

    /**
     * @return Specifies whether to use the GA-ID header to retrieve the ID of the GA instance. Default value: `false`. Valid values:
     * 
     */
    public Optional<Output<Boolean>> forwardedForGaIdEnabled() {
        return Optional.ofNullable(this.forwardedForGaIdEnabled);
    }

    /**
     * Specifies whether to use the GA-X-Forward-Port header to retrieve the listener ports of the GA instance. Default value: `false`. Valid values:
     * 
     */
    @Import(name="forwardedForPortEnabled")
    private @Nullable Output<Boolean> forwardedForPortEnabled;

    /**
     * @return Specifies whether to use the GA-X-Forward-Port header to retrieve the listener ports of the GA instance. Default value: `false`. Valid values:
     * 
     */
    public Optional<Output<Boolean>> forwardedForPortEnabled() {
        return Optional.ofNullable(this.forwardedForPortEnabled);
    }

    /**
     * Specifies whether to use the GA-X-Forward-Proto header to retrieve the listener protocol of the GA instance. Default value: `false`. Valid values:
     * 
     */
    @Import(name="forwardedForProtoEnabled")
    private @Nullable Output<Boolean> forwardedForProtoEnabled;

    /**
     * @return Specifies whether to use the GA-X-Forward-Proto header to retrieve the listener protocol of the GA instance. Default value: `false`. Valid values:
     * 
     */
    public Optional<Output<Boolean>> forwardedForProtoEnabled() {
        return Optional.ofNullable(this.forwardedForProtoEnabled);
    }

    /**
     * Specifies whether to use the X-Real-IP header to retrieve client IP addresses. Default value: `false`. Valid values:
     * 
     */
    @Import(name="realIpEnabled")
    private @Nullable Output<Boolean> realIpEnabled;

    /**
     * @return Specifies whether to use the X-Real-IP header to retrieve client IP addresses. Default value: `false`. Valid values:
     * 
     */
    public Optional<Output<Boolean>> realIpEnabled() {
        return Optional.ofNullable(this.realIpEnabled);
    }

    private ListenerForwardedForConfigArgs() {}

    private ListenerForwardedForConfigArgs(ListenerForwardedForConfigArgs $) {
        this.forwardedForGaApEnabled = $.forwardedForGaApEnabled;
        this.forwardedForGaIdEnabled = $.forwardedForGaIdEnabled;
        this.forwardedForPortEnabled = $.forwardedForPortEnabled;
        this.forwardedForProtoEnabled = $.forwardedForProtoEnabled;
        this.realIpEnabled = $.realIpEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListenerForwardedForConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListenerForwardedForConfigArgs $;

        public Builder() {
            $ = new ListenerForwardedForConfigArgs();
        }

        public Builder(ListenerForwardedForConfigArgs defaults) {
            $ = new ListenerForwardedForConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param forwardedForGaApEnabled Specifies whether to use the GA-AP header to retrieve the information about acceleration regions. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder forwardedForGaApEnabled(@Nullable Output<Boolean> forwardedForGaApEnabled) {
            $.forwardedForGaApEnabled = forwardedForGaApEnabled;
            return this;
        }

        /**
         * @param forwardedForGaApEnabled Specifies whether to use the GA-AP header to retrieve the information about acceleration regions. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder forwardedForGaApEnabled(Boolean forwardedForGaApEnabled) {
            return forwardedForGaApEnabled(Output.of(forwardedForGaApEnabled));
        }

        /**
         * @param forwardedForGaIdEnabled Specifies whether to use the GA-ID header to retrieve the ID of the GA instance. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder forwardedForGaIdEnabled(@Nullable Output<Boolean> forwardedForGaIdEnabled) {
            $.forwardedForGaIdEnabled = forwardedForGaIdEnabled;
            return this;
        }

        /**
         * @param forwardedForGaIdEnabled Specifies whether to use the GA-ID header to retrieve the ID of the GA instance. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder forwardedForGaIdEnabled(Boolean forwardedForGaIdEnabled) {
            return forwardedForGaIdEnabled(Output.of(forwardedForGaIdEnabled));
        }

        /**
         * @param forwardedForPortEnabled Specifies whether to use the GA-X-Forward-Port header to retrieve the listener ports of the GA instance. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder forwardedForPortEnabled(@Nullable Output<Boolean> forwardedForPortEnabled) {
            $.forwardedForPortEnabled = forwardedForPortEnabled;
            return this;
        }

        /**
         * @param forwardedForPortEnabled Specifies whether to use the GA-X-Forward-Port header to retrieve the listener ports of the GA instance. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder forwardedForPortEnabled(Boolean forwardedForPortEnabled) {
            return forwardedForPortEnabled(Output.of(forwardedForPortEnabled));
        }

        /**
         * @param forwardedForProtoEnabled Specifies whether to use the GA-X-Forward-Proto header to retrieve the listener protocol of the GA instance. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder forwardedForProtoEnabled(@Nullable Output<Boolean> forwardedForProtoEnabled) {
            $.forwardedForProtoEnabled = forwardedForProtoEnabled;
            return this;
        }

        /**
         * @param forwardedForProtoEnabled Specifies whether to use the GA-X-Forward-Proto header to retrieve the listener protocol of the GA instance. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder forwardedForProtoEnabled(Boolean forwardedForProtoEnabled) {
            return forwardedForProtoEnabled(Output.of(forwardedForProtoEnabled));
        }

        /**
         * @param realIpEnabled Specifies whether to use the X-Real-IP header to retrieve client IP addresses. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder realIpEnabled(@Nullable Output<Boolean> realIpEnabled) {
            $.realIpEnabled = realIpEnabled;
            return this;
        }

        /**
         * @param realIpEnabled Specifies whether to use the X-Real-IP header to retrieve client IP addresses. Default value: `false`. Valid values:
         * 
         * @return builder
         * 
         */
        public Builder realIpEnabled(Boolean realIpEnabled) {
            return realIpEnabled(Output.of(realIpEnabled));
        }

        public ListenerForwardedForConfigArgs build() {
            return $;
        }
    }

}
