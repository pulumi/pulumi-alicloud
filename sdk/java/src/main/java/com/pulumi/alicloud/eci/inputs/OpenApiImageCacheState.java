// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eci.inputs;

import com.pulumi.alicloud.eci.inputs.OpenApiImageCacheImageRegistryCredentialArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OpenApiImageCacheState extends com.pulumi.resources.ResourceArgs {

    public static final OpenApiImageCacheState Empty = new OpenApiImageCacheState();

    @Import(name="containerGroupId")
    private @Nullable Output<String> containerGroupId;

    public Optional<Output<String>> containerGroupId() {
        return Optional.ofNullable(this.containerGroupId);
    }

    @Import(name="eipInstanceId")
    private @Nullable Output<String> eipInstanceId;

    public Optional<Output<String>> eipInstanceId() {
        return Optional.ofNullable(this.eipInstanceId);
    }

    @Import(name="imageCacheName")
    private @Nullable Output<String> imageCacheName;

    public Optional<Output<String>> imageCacheName() {
        return Optional.ofNullable(this.imageCacheName);
    }

    @Import(name="imageCacheSize")
    private @Nullable Output<Integer> imageCacheSize;

    public Optional<Output<Integer>> imageCacheSize() {
        return Optional.ofNullable(this.imageCacheSize);
    }

    @Import(name="imageRegistryCredentials")
    private @Nullable Output<List<OpenApiImageCacheImageRegistryCredentialArgs>> imageRegistryCredentials;

    public Optional<Output<List<OpenApiImageCacheImageRegistryCredentialArgs>>> imageRegistryCredentials() {
        return Optional.ofNullable(this.imageRegistryCredentials);
    }

    @Import(name="images")
    private @Nullable Output<List<String>> images;

    public Optional<Output<List<String>>> images() {
        return Optional.ofNullable(this.images);
    }

    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    @Import(name="retentionDays")
    private @Nullable Output<Integer> retentionDays;

    public Optional<Output<Integer>> retentionDays() {
        return Optional.ofNullable(this.retentionDays);
    }

    @Import(name="securityGroupId")
    private @Nullable Output<String> securityGroupId;

    public Optional<Output<String>> securityGroupId() {
        return Optional.ofNullable(this.securityGroupId);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="vswitchId")
    private @Nullable Output<String> vswitchId;

    public Optional<Output<String>> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private OpenApiImageCacheState() {}

    private OpenApiImageCacheState(OpenApiImageCacheState $) {
        this.containerGroupId = $.containerGroupId;
        this.eipInstanceId = $.eipInstanceId;
        this.imageCacheName = $.imageCacheName;
        this.imageCacheSize = $.imageCacheSize;
        this.imageRegistryCredentials = $.imageRegistryCredentials;
        this.images = $.images;
        this.resourceGroupId = $.resourceGroupId;
        this.retentionDays = $.retentionDays;
        this.securityGroupId = $.securityGroupId;
        this.status = $.status;
        this.vswitchId = $.vswitchId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OpenApiImageCacheState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OpenApiImageCacheState $;

        public Builder() {
            $ = new OpenApiImageCacheState();
        }

        public Builder(OpenApiImageCacheState defaults) {
            $ = new OpenApiImageCacheState(Objects.requireNonNull(defaults));
        }

        public Builder containerGroupId(@Nullable Output<String> containerGroupId) {
            $.containerGroupId = containerGroupId;
            return this;
        }

        public Builder containerGroupId(String containerGroupId) {
            return containerGroupId(Output.of(containerGroupId));
        }

        public Builder eipInstanceId(@Nullable Output<String> eipInstanceId) {
            $.eipInstanceId = eipInstanceId;
            return this;
        }

        public Builder eipInstanceId(String eipInstanceId) {
            return eipInstanceId(Output.of(eipInstanceId));
        }

        public Builder imageCacheName(@Nullable Output<String> imageCacheName) {
            $.imageCacheName = imageCacheName;
            return this;
        }

        public Builder imageCacheName(String imageCacheName) {
            return imageCacheName(Output.of(imageCacheName));
        }

        public Builder imageCacheSize(@Nullable Output<Integer> imageCacheSize) {
            $.imageCacheSize = imageCacheSize;
            return this;
        }

        public Builder imageCacheSize(Integer imageCacheSize) {
            return imageCacheSize(Output.of(imageCacheSize));
        }

        public Builder imageRegistryCredentials(@Nullable Output<List<OpenApiImageCacheImageRegistryCredentialArgs>> imageRegistryCredentials) {
            $.imageRegistryCredentials = imageRegistryCredentials;
            return this;
        }

        public Builder imageRegistryCredentials(List<OpenApiImageCacheImageRegistryCredentialArgs> imageRegistryCredentials) {
            return imageRegistryCredentials(Output.of(imageRegistryCredentials));
        }

        public Builder imageRegistryCredentials(OpenApiImageCacheImageRegistryCredentialArgs... imageRegistryCredentials) {
            return imageRegistryCredentials(List.of(imageRegistryCredentials));
        }

        public Builder images(@Nullable Output<List<String>> images) {
            $.images = images;
            return this;
        }

        public Builder images(List<String> images) {
            return images(Output.of(images));
        }

        public Builder images(String... images) {
            return images(List.of(images));
        }

        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        public Builder retentionDays(@Nullable Output<Integer> retentionDays) {
            $.retentionDays = retentionDays;
            return this;
        }

        public Builder retentionDays(Integer retentionDays) {
            return retentionDays(Output.of(retentionDays));
        }

        public Builder securityGroupId(@Nullable Output<String> securityGroupId) {
            $.securityGroupId = securityGroupId;
            return this;
        }

        public Builder securityGroupId(String securityGroupId) {
            return securityGroupId(Output.of(securityGroupId));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder vswitchId(@Nullable Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public OpenApiImageCacheState build() {
            return $;
        }
    }

}
