// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.expressconnect.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVbrPconnAssociationsAssociation {
    /**
     * @return The circuit code provided by the operator for the physical connection.
     * 
     */
    private String circuitCode;
    /**
     * @return Whether IPv6 is enabled.
     * 
     */
    private Boolean enableIpv6;
    /**
     * @return The ID of the Vbr Pconn Association.
     * 
     */
    private String id;
    /**
     * @return The Alibaba cloud IP address of the VBR instance.
     * 
     */
    private String localGatewayIp;
    /**
     * @return The IPv6 address on the Alibaba Cloud side of the VBR instance.
     * 
     */
    private String localIpv6GatewayIp;
    /**
     * @return The client IP address of the VBR instance.
     * 
     */
    private String peerGatewayIp;
    /**
     * @return The IPv6 address of the client side of the VBR instance.
     * 
     */
    private String peerIpv6GatewayIp;
    /**
     * @return The subnet mask of the Alibaba Cloud side and the client side of the VBR instance.Two IPv6 addresses must be in the same subnet.
     * 
     */
    private String peeringIpv6SubnetMask;
    /**
     * @return The subnet mask of the Alibaba Cloud side and the client side of the VBR instance.The two IP addresses must be in the same subnet.
     * 
     */
    private String peeringSubnetMask;
    /**
     * @return The ID of the leased line instance.
     * 
     */
    private String physicalConnectionId;
    /**
     * @return The status of the resource
     * 
     */
    private String status;
    /**
     * @return The ID of the VBR instance.
     * 
     */
    private String vbrId;
    /**
     * @return VLAN ID of the VBR.
     * 
     */
    private Integer vlanId;

    private GetVbrPconnAssociationsAssociation() {}
    /**
     * @return The circuit code provided by the operator for the physical connection.
     * 
     */
    public String circuitCode() {
        return this.circuitCode;
    }
    /**
     * @return Whether IPv6 is enabled.
     * 
     */
    public Boolean enableIpv6() {
        return this.enableIpv6;
    }
    /**
     * @return The ID of the Vbr Pconn Association.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Alibaba cloud IP address of the VBR instance.
     * 
     */
    public String localGatewayIp() {
        return this.localGatewayIp;
    }
    /**
     * @return The IPv6 address on the Alibaba Cloud side of the VBR instance.
     * 
     */
    public String localIpv6GatewayIp() {
        return this.localIpv6GatewayIp;
    }
    /**
     * @return The client IP address of the VBR instance.
     * 
     */
    public String peerGatewayIp() {
        return this.peerGatewayIp;
    }
    /**
     * @return The IPv6 address of the client side of the VBR instance.
     * 
     */
    public String peerIpv6GatewayIp() {
        return this.peerIpv6GatewayIp;
    }
    /**
     * @return The subnet mask of the Alibaba Cloud side and the client side of the VBR instance.Two IPv6 addresses must be in the same subnet.
     * 
     */
    public String peeringIpv6SubnetMask() {
        return this.peeringIpv6SubnetMask;
    }
    /**
     * @return The subnet mask of the Alibaba Cloud side and the client side of the VBR instance.The two IP addresses must be in the same subnet.
     * 
     */
    public String peeringSubnetMask() {
        return this.peeringSubnetMask;
    }
    /**
     * @return The ID of the leased line instance.
     * 
     */
    public String physicalConnectionId() {
        return this.physicalConnectionId;
    }
    /**
     * @return The status of the resource
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The ID of the VBR instance.
     * 
     */
    public String vbrId() {
        return this.vbrId;
    }
    /**
     * @return VLAN ID of the VBR.
     * 
     */
    public Integer vlanId() {
        return this.vlanId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVbrPconnAssociationsAssociation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String circuitCode;
        private Boolean enableIpv6;
        private String id;
        private String localGatewayIp;
        private String localIpv6GatewayIp;
        private String peerGatewayIp;
        private String peerIpv6GatewayIp;
        private String peeringIpv6SubnetMask;
        private String peeringSubnetMask;
        private String physicalConnectionId;
        private String status;
        private String vbrId;
        private Integer vlanId;
        public Builder() {}
        public Builder(GetVbrPconnAssociationsAssociation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.circuitCode = defaults.circuitCode;
    	      this.enableIpv6 = defaults.enableIpv6;
    	      this.id = defaults.id;
    	      this.localGatewayIp = defaults.localGatewayIp;
    	      this.localIpv6GatewayIp = defaults.localIpv6GatewayIp;
    	      this.peerGatewayIp = defaults.peerGatewayIp;
    	      this.peerIpv6GatewayIp = defaults.peerIpv6GatewayIp;
    	      this.peeringIpv6SubnetMask = defaults.peeringIpv6SubnetMask;
    	      this.peeringSubnetMask = defaults.peeringSubnetMask;
    	      this.physicalConnectionId = defaults.physicalConnectionId;
    	      this.status = defaults.status;
    	      this.vbrId = defaults.vbrId;
    	      this.vlanId = defaults.vlanId;
        }

        @CustomType.Setter
        public Builder circuitCode(String circuitCode) {
            if (circuitCode == null) {
              throw new MissingRequiredPropertyException("GetVbrPconnAssociationsAssociation", "circuitCode");
            }
            this.circuitCode = circuitCode;
            return this;
        }
        @CustomType.Setter
        public Builder enableIpv6(Boolean enableIpv6) {
            if (enableIpv6 == null) {
              throw new MissingRequiredPropertyException("GetVbrPconnAssociationsAssociation", "enableIpv6");
            }
            this.enableIpv6 = enableIpv6;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVbrPconnAssociationsAssociation", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder localGatewayIp(String localGatewayIp) {
            if (localGatewayIp == null) {
              throw new MissingRequiredPropertyException("GetVbrPconnAssociationsAssociation", "localGatewayIp");
            }
            this.localGatewayIp = localGatewayIp;
            return this;
        }
        @CustomType.Setter
        public Builder localIpv6GatewayIp(String localIpv6GatewayIp) {
            if (localIpv6GatewayIp == null) {
              throw new MissingRequiredPropertyException("GetVbrPconnAssociationsAssociation", "localIpv6GatewayIp");
            }
            this.localIpv6GatewayIp = localIpv6GatewayIp;
            return this;
        }
        @CustomType.Setter
        public Builder peerGatewayIp(String peerGatewayIp) {
            if (peerGatewayIp == null) {
              throw new MissingRequiredPropertyException("GetVbrPconnAssociationsAssociation", "peerGatewayIp");
            }
            this.peerGatewayIp = peerGatewayIp;
            return this;
        }
        @CustomType.Setter
        public Builder peerIpv6GatewayIp(String peerIpv6GatewayIp) {
            if (peerIpv6GatewayIp == null) {
              throw new MissingRequiredPropertyException("GetVbrPconnAssociationsAssociation", "peerIpv6GatewayIp");
            }
            this.peerIpv6GatewayIp = peerIpv6GatewayIp;
            return this;
        }
        @CustomType.Setter
        public Builder peeringIpv6SubnetMask(String peeringIpv6SubnetMask) {
            if (peeringIpv6SubnetMask == null) {
              throw new MissingRequiredPropertyException("GetVbrPconnAssociationsAssociation", "peeringIpv6SubnetMask");
            }
            this.peeringIpv6SubnetMask = peeringIpv6SubnetMask;
            return this;
        }
        @CustomType.Setter
        public Builder peeringSubnetMask(String peeringSubnetMask) {
            if (peeringSubnetMask == null) {
              throw new MissingRequiredPropertyException("GetVbrPconnAssociationsAssociation", "peeringSubnetMask");
            }
            this.peeringSubnetMask = peeringSubnetMask;
            return this;
        }
        @CustomType.Setter
        public Builder physicalConnectionId(String physicalConnectionId) {
            if (physicalConnectionId == null) {
              throw new MissingRequiredPropertyException("GetVbrPconnAssociationsAssociation", "physicalConnectionId");
            }
            this.physicalConnectionId = physicalConnectionId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetVbrPconnAssociationsAssociation", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder vbrId(String vbrId) {
            if (vbrId == null) {
              throw new MissingRequiredPropertyException("GetVbrPconnAssociationsAssociation", "vbrId");
            }
            this.vbrId = vbrId;
            return this;
        }
        @CustomType.Setter
        public Builder vlanId(Integer vlanId) {
            if (vlanId == null) {
              throw new MissingRequiredPropertyException("GetVbrPconnAssociationsAssociation", "vlanId");
            }
            this.vlanId = vlanId;
            return this;
        }
        public GetVbrPconnAssociationsAssociation build() {
            final var _resultValue = new GetVbrPconnAssociationsAssociation();
            _resultValue.circuitCode = circuitCode;
            _resultValue.enableIpv6 = enableIpv6;
            _resultValue.id = id;
            _resultValue.localGatewayIp = localGatewayIp;
            _resultValue.localIpv6GatewayIp = localIpv6GatewayIp;
            _resultValue.peerGatewayIp = peerGatewayIp;
            _resultValue.peerIpv6GatewayIp = peerIpv6GatewayIp;
            _resultValue.peeringIpv6SubnetMask = peeringIpv6SubnetMask;
            _resultValue.peeringSubnetMask = peeringSubnetMask;
            _resultValue.physicalConnectionId = physicalConnectionId;
            _resultValue.status = status;
            _resultValue.vbrId = vbrId;
            _resultValue.vlanId = vlanId;
            return _resultValue;
        }
    }
}
