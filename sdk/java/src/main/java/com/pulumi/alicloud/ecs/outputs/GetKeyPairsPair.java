// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.outputs;

import com.pulumi.alicloud.ecs.outputs.GetKeyPairsPairInstance;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetKeyPairsPair {
    /**
     * @return A finger print used to retrieve specified key pair.
     * 
     */
    private String fingerPrint;
    /**
     * @return ID of the key pair.
     * 
     */
    private String id;
    /**
     * @return A list of ECS instances that has been bound this key pair.
     * 
     */
    private List<GetKeyPairsPairInstance> instances;
    /**
     * @return Name of the key pair.
     * 
     */
    private String keyName;
    private String keyPairName;
    /**
     * @return The Id of resource group which the key pair belongs.
     * 
     */
    private String resourceGroupId;
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    private Map<String,Object> tags;

    private GetKeyPairsPair() {}
    /**
     * @return A finger print used to retrieve specified key pair.
     * 
     */
    public String fingerPrint() {
        return this.fingerPrint;
    }
    /**
     * @return ID of the key pair.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of ECS instances that has been bound this key pair.
     * 
     */
    public List<GetKeyPairsPairInstance> instances() {
        return this.instances;
    }
    /**
     * @return Name of the key pair.
     * 
     */
    public String keyName() {
        return this.keyName;
    }
    public String keyPairName() {
        return this.keyPairName;
    }
    /**
     * @return The Id of resource group which the key pair belongs.
     * 
     */
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Map<String,Object> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKeyPairsPair defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String fingerPrint;
        private String id;
        private List<GetKeyPairsPairInstance> instances;
        private String keyName;
        private String keyPairName;
        private String resourceGroupId;
        private Map<String,Object> tags;
        public Builder() {}
        public Builder(GetKeyPairsPair defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fingerPrint = defaults.fingerPrint;
    	      this.id = defaults.id;
    	      this.instances = defaults.instances;
    	      this.keyName = defaults.keyName;
    	      this.keyPairName = defaults.keyPairName;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder fingerPrint(String fingerPrint) {
            this.fingerPrint = Objects.requireNonNull(fingerPrint);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder instances(List<GetKeyPairsPairInstance> instances) {
            this.instances = Objects.requireNonNull(instances);
            return this;
        }
        public Builder instances(GetKeyPairsPairInstance... instances) {
            return instances(List.of(instances));
        }
        @CustomType.Setter
        public Builder keyName(String keyName) {
            this.keyName = Objects.requireNonNull(keyName);
            return this;
        }
        @CustomType.Setter
        public Builder keyPairName(String keyPairName) {
            this.keyPairName = Objects.requireNonNull(keyPairName);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupId(String resourceGroupId) {
            this.resourceGroupId = Objects.requireNonNull(resourceGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,Object> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public GetKeyPairsPair build() {
            final var o = new GetKeyPairsPair();
            o.fingerPrint = fingerPrint;
            o.id = id;
            o.instances = instances;
            o.keyName = keyName;
            o.keyPairName = keyPairName;
            o.resourceGroupId = resourceGroupId;
            o.tags = tags;
            return o;
        }
    }
}
