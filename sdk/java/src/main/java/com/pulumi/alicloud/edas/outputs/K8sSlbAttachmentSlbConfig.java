// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.edas.outputs;

import com.pulumi.alicloud.edas.outputs.K8sSlbAttachmentSlbConfigPortMapping;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class K8sSlbAttachmentSlbConfig {
    /**
     * @return The name of this SLB configuration, empty for auto-generated by EDAS server.
     * 
     */
    private @Nullable String name;
    /**
     * @return The port configuration for SLB instance, which is supported for multiple configurations. See `port_mappings` below.
     * 
     */
    private List<K8sSlbAttachmentSlbConfigPortMapping> portMappings;
    /**
     * @return The scheduler policy of SLB configuration, values can be &#39;rr&#39;(round-robin) or &#39;wrr&#39;(weighted round-robin).
     * 
     */
    private String scheduler;
    /**
     * @return The ID of your SLB instance, if value is empty which means EDAS will purchase an SLB instance with &#39;specification&#39; field.
     * 
     */
    private @Nullable String slbId;
    /**
     * @return The instance specification of SLB, values can be found [here](https://www.alibabacloud.com/help/en/server-load-balancer/latest/createloadbalancer-2#t4182.html), empty for &#39;slb.s1.small&#39;.
     * 
     */
    private @Nullable String specification;
    /**
     * @return The type of SLB instance, values can be &#39;internet&#39; or &#39;intranet&#39;.
     * 
     */
    private String type;

    private K8sSlbAttachmentSlbConfig() {}
    /**
     * @return The name of this SLB configuration, empty for auto-generated by EDAS server.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The port configuration for SLB instance, which is supported for multiple configurations. See `port_mappings` below.
     * 
     */
    public List<K8sSlbAttachmentSlbConfigPortMapping> portMappings() {
        return this.portMappings;
    }
    /**
     * @return The scheduler policy of SLB configuration, values can be &#39;rr&#39;(round-robin) or &#39;wrr&#39;(weighted round-robin).
     * 
     */
    public String scheduler() {
        return this.scheduler;
    }
    /**
     * @return The ID of your SLB instance, if value is empty which means EDAS will purchase an SLB instance with &#39;specification&#39; field.
     * 
     */
    public Optional<String> slbId() {
        return Optional.ofNullable(this.slbId);
    }
    /**
     * @return The instance specification of SLB, values can be found [here](https://www.alibabacloud.com/help/en/server-load-balancer/latest/createloadbalancer-2#t4182.html), empty for &#39;slb.s1.small&#39;.
     * 
     */
    public Optional<String> specification() {
        return Optional.ofNullable(this.specification);
    }
    /**
     * @return The type of SLB instance, values can be &#39;internet&#39; or &#39;intranet&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(K8sSlbAttachmentSlbConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String name;
        private List<K8sSlbAttachmentSlbConfigPortMapping> portMappings;
        private String scheduler;
        private @Nullable String slbId;
        private @Nullable String specification;
        private String type;
        public Builder() {}
        public Builder(K8sSlbAttachmentSlbConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.portMappings = defaults.portMappings;
    	      this.scheduler = defaults.scheduler;
    	      this.slbId = defaults.slbId;
    	      this.specification = defaults.specification;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder portMappings(List<K8sSlbAttachmentSlbConfigPortMapping> portMappings) {
            if (portMappings == null) {
              throw new MissingRequiredPropertyException("K8sSlbAttachmentSlbConfig", "portMappings");
            }
            this.portMappings = portMappings;
            return this;
        }
        public Builder portMappings(K8sSlbAttachmentSlbConfigPortMapping... portMappings) {
            return portMappings(List.of(portMappings));
        }
        @CustomType.Setter
        public Builder scheduler(String scheduler) {
            if (scheduler == null) {
              throw new MissingRequiredPropertyException("K8sSlbAttachmentSlbConfig", "scheduler");
            }
            this.scheduler = scheduler;
            return this;
        }
        @CustomType.Setter
        public Builder slbId(@Nullable String slbId) {

            this.slbId = slbId;
            return this;
        }
        @CustomType.Setter
        public Builder specification(@Nullable String specification) {

            this.specification = specification;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("K8sSlbAttachmentSlbConfig", "type");
            }
            this.type = type;
            return this;
        }
        public K8sSlbAttachmentSlbConfig build() {
            final var _resultValue = new K8sSlbAttachmentSlbConfig();
            _resultValue.name = name;
            _resultValue.portMappings = portMappings;
            _resultValue.scheduler = scheduler;
            _resultValue.slbId = slbId;
            _resultValue.specification = specification;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
