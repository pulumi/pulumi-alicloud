// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dts;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MigrationInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final MigrationInstanceArgs Empty = new MigrationInstanceArgs();

    /**
     * [ETL specifications](https://help.aliyun.com/document_detail/212324.html). The unit is the computing unit ComputeUnit (CU), 1CU=1vCPU+4 GB memory. The value range is an integer greater than or equal to 2.
     * 
     */
    @Import(name="computeUnit")
    private @Nullable Output<Integer> computeUnit;

    /**
     * @return [ETL specifications](https://help.aliyun.com/document_detail/212324.html). The unit is the computing unit ComputeUnit (CU), 1CU=1vCPU+4 GB memory. The value range is an integer greater than or equal to 2.
     * 
     */
    public Optional<Output<Integer>> computeUnit() {
        return Optional.ofNullable(this.computeUnit);
    }

    /**
     * The number of private customized RDS instances under PolarDB-X. The default value is 1. This parameter needs to be passed only when `source_endpoint_engine_name` equals `drds`.
     * 
     */
    @Import(name="databaseCount")
    private @Nullable Output<Integer> databaseCount;

    /**
     * @return The number of private customized RDS instances under PolarDB-X. The default value is 1. This parameter needs to be passed only when `source_endpoint_engine_name` equals `drds`.
     * 
     */
    public Optional<Output<Integer>> databaseCount() {
        return Optional.ofNullable(this.databaseCount);
    }

    /**
     * The type of destination engine. Valid values: `ADS`, `DB2`, `DRDS`, `DataHub`, `Greenplum`, `MSSQL`, `MySQL`, `PolarDB`, `PostgreSQL`, `Redis`, `Tablestore`, `as400`, `clickhouse`, `kafka`, `mongodb`, `odps`, `oracle`, `polardb_o`, `polardb_pg`, `tidb`. For the correspondence between the supported source and target libraries, see [Supported Databases, Synchronization Initialization Types and Synchronization Topologies](https://help.aliyun.com/document_detail/130744.html), [Supported Databases and Migration Types](https://help.aliyun.com/document_detail/26618.html).
     * 
     */
    @Import(name="destinationEndpointEngineName", required=true)
    private Output<String> destinationEndpointEngineName;

    /**
     * @return The type of destination engine. Valid values: `ADS`, `DB2`, `DRDS`, `DataHub`, `Greenplum`, `MSSQL`, `MySQL`, `PolarDB`, `PostgreSQL`, `Redis`, `Tablestore`, `as400`, `clickhouse`, `kafka`, `mongodb`, `odps`, `oracle`, `polardb_o`, `polardb_pg`, `tidb`. For the correspondence between the supported source and target libraries, see [Supported Databases, Synchronization Initialization Types and Synchronization Topologies](https://help.aliyun.com/document_detail/130744.html), [Supported Databases and Migration Types](https://help.aliyun.com/document_detail/26618.html).
     * 
     */
    public Output<String> destinationEndpointEngineName() {
        return this.destinationEndpointEngineName;
    }

    /**
     * The region of destination instance. List of [supported regions](https://help.aliyun.com/document_detail/141033.html).
     * 
     */
    @Import(name="destinationEndpointRegion", required=true)
    private Output<String> destinationEndpointRegion;

    /**
     * @return The region of destination instance. List of [supported regions](https://help.aliyun.com/document_detail/141033.html).
     * 
     */
    public Output<String> destinationEndpointRegion() {
        return this.destinationEndpointRegion;
    }

    /**
     * The instance class. Valid values: `large`, `medium`, `small`, `xlarge`, `xxlarge`. You can only upgrade the configuration, not downgrade the configuration. If you downgrade the instance, you need to [submit a ticket](https://selfservice.console.aliyun.com/ticket/category/dts/today).
     * 
     */
    @Import(name="instanceClass")
    private @Nullable Output<String> instanceClass;

    /**
     * @return The instance class. Valid values: `large`, `medium`, `small`, `xlarge`, `xxlarge`. You can only upgrade the configuration, not downgrade the configuration. If you downgrade the instance, you need to [submit a ticket](https://selfservice.console.aliyun.com/ticket/category/dts/today).
     * 
     */
    public Optional<Output<String>> instanceClass() {
        return Optional.ofNullable(this.instanceClass);
    }

    /**
     * The payment type of the resource. Valid values: `PayAsYouGo`.
     * 
     */
    @Import(name="paymentType", required=true)
    private Output<String> paymentType;

    /**
     * @return The payment type of the resource. Valid values: `PayAsYouGo`.
     * 
     */
    public Output<String> paymentType() {
        return this.paymentType;
    }

    /**
     * The type of source endpoint engine. Valid values: `ADS`, `DB2`, `DRDS`, `DataHub`, `Greenplum`, `MSSQL`, `MySQL`, `PolarDB`, `PostgreSQL`, `Redis`, `Tablestore`, `as400`, `clickhouse`, `kafka`, `mongodb`, `odps`, `oracle`, `polardb_o`, `polardb_pg`, `tidb`. For the correspondence between the supported source and target libraries, see [Supported Databases, Synchronization Initialization Types and Synchronization Topologies](https://help.aliyun.com/document_detail/130744.html), [Supported Databases and Migration Types](https://help.aliyun.com/document_detail/26618.html).
     * 
     */
    @Import(name="sourceEndpointEngineName", required=true)
    private Output<String> sourceEndpointEngineName;

    /**
     * @return The type of source endpoint engine. Valid values: `ADS`, `DB2`, `DRDS`, `DataHub`, `Greenplum`, `MSSQL`, `MySQL`, `PolarDB`, `PostgreSQL`, `Redis`, `Tablestore`, `as400`, `clickhouse`, `kafka`, `mongodb`, `odps`, `oracle`, `polardb_o`, `polardb_pg`, `tidb`. For the correspondence between the supported source and target libraries, see [Supported Databases, Synchronization Initialization Types and Synchronization Topologies](https://help.aliyun.com/document_detail/130744.html), [Supported Databases and Migration Types](https://help.aliyun.com/document_detail/26618.html).
     * 
     */
    public Output<String> sourceEndpointEngineName() {
        return this.sourceEndpointEngineName;
    }

    /**
     * The region of source instance.
     * 
     */
    @Import(name="sourceEndpointRegion", required=true)
    private Output<String> sourceEndpointRegion;

    /**
     * @return The region of source instance.
     * 
     */
    public Output<String> sourceEndpointRegion() {
        return this.sourceEndpointRegion;
    }

    /**
     * The sync architecture. Valid values: `oneway`.
     * 
     */
    @Import(name="syncArchitecture")
    private @Nullable Output<String> syncArchitecture;

    /**
     * @return The sync architecture. Valid values: `oneway`.
     * 
     */
    public Optional<Output<String>> syncArchitecture() {
        return Optional.ofNullable(this.syncArchitecture);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private MigrationInstanceArgs() {}

    private MigrationInstanceArgs(MigrationInstanceArgs $) {
        this.computeUnit = $.computeUnit;
        this.databaseCount = $.databaseCount;
        this.destinationEndpointEngineName = $.destinationEndpointEngineName;
        this.destinationEndpointRegion = $.destinationEndpointRegion;
        this.instanceClass = $.instanceClass;
        this.paymentType = $.paymentType;
        this.sourceEndpointEngineName = $.sourceEndpointEngineName;
        this.sourceEndpointRegion = $.sourceEndpointRegion;
        this.syncArchitecture = $.syncArchitecture;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MigrationInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MigrationInstanceArgs $;

        public Builder() {
            $ = new MigrationInstanceArgs();
        }

        public Builder(MigrationInstanceArgs defaults) {
            $ = new MigrationInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param computeUnit [ETL specifications](https://help.aliyun.com/document_detail/212324.html). The unit is the computing unit ComputeUnit (CU), 1CU=1vCPU+4 GB memory. The value range is an integer greater than or equal to 2.
         * 
         * @return builder
         * 
         */
        public Builder computeUnit(@Nullable Output<Integer> computeUnit) {
            $.computeUnit = computeUnit;
            return this;
        }

        /**
         * @param computeUnit [ETL specifications](https://help.aliyun.com/document_detail/212324.html). The unit is the computing unit ComputeUnit (CU), 1CU=1vCPU+4 GB memory. The value range is an integer greater than or equal to 2.
         * 
         * @return builder
         * 
         */
        public Builder computeUnit(Integer computeUnit) {
            return computeUnit(Output.of(computeUnit));
        }

        /**
         * @param databaseCount The number of private customized RDS instances under PolarDB-X. The default value is 1. This parameter needs to be passed only when `source_endpoint_engine_name` equals `drds`.
         * 
         * @return builder
         * 
         */
        public Builder databaseCount(@Nullable Output<Integer> databaseCount) {
            $.databaseCount = databaseCount;
            return this;
        }

        /**
         * @param databaseCount The number of private customized RDS instances under PolarDB-X. The default value is 1. This parameter needs to be passed only when `source_endpoint_engine_name` equals `drds`.
         * 
         * @return builder
         * 
         */
        public Builder databaseCount(Integer databaseCount) {
            return databaseCount(Output.of(databaseCount));
        }

        /**
         * @param destinationEndpointEngineName The type of destination engine. Valid values: `ADS`, `DB2`, `DRDS`, `DataHub`, `Greenplum`, `MSSQL`, `MySQL`, `PolarDB`, `PostgreSQL`, `Redis`, `Tablestore`, `as400`, `clickhouse`, `kafka`, `mongodb`, `odps`, `oracle`, `polardb_o`, `polardb_pg`, `tidb`. For the correspondence between the supported source and target libraries, see [Supported Databases, Synchronization Initialization Types and Synchronization Topologies](https://help.aliyun.com/document_detail/130744.html), [Supported Databases and Migration Types](https://help.aliyun.com/document_detail/26618.html).
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointEngineName(Output<String> destinationEndpointEngineName) {
            $.destinationEndpointEngineName = destinationEndpointEngineName;
            return this;
        }

        /**
         * @param destinationEndpointEngineName The type of destination engine. Valid values: `ADS`, `DB2`, `DRDS`, `DataHub`, `Greenplum`, `MSSQL`, `MySQL`, `PolarDB`, `PostgreSQL`, `Redis`, `Tablestore`, `as400`, `clickhouse`, `kafka`, `mongodb`, `odps`, `oracle`, `polardb_o`, `polardb_pg`, `tidb`. For the correspondence between the supported source and target libraries, see [Supported Databases, Synchronization Initialization Types and Synchronization Topologies](https://help.aliyun.com/document_detail/130744.html), [Supported Databases and Migration Types](https://help.aliyun.com/document_detail/26618.html).
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointEngineName(String destinationEndpointEngineName) {
            return destinationEndpointEngineName(Output.of(destinationEndpointEngineName));
        }

        /**
         * @param destinationEndpointRegion The region of destination instance. List of [supported regions](https://help.aliyun.com/document_detail/141033.html).
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointRegion(Output<String> destinationEndpointRegion) {
            $.destinationEndpointRegion = destinationEndpointRegion;
            return this;
        }

        /**
         * @param destinationEndpointRegion The region of destination instance. List of [supported regions](https://help.aliyun.com/document_detail/141033.html).
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpointRegion(String destinationEndpointRegion) {
            return destinationEndpointRegion(Output.of(destinationEndpointRegion));
        }

        /**
         * @param instanceClass The instance class. Valid values: `large`, `medium`, `small`, `xlarge`, `xxlarge`. You can only upgrade the configuration, not downgrade the configuration. If you downgrade the instance, you need to [submit a ticket](https://selfservice.console.aliyun.com/ticket/category/dts/today).
         * 
         * @return builder
         * 
         */
        public Builder instanceClass(@Nullable Output<String> instanceClass) {
            $.instanceClass = instanceClass;
            return this;
        }

        /**
         * @param instanceClass The instance class. Valid values: `large`, `medium`, `small`, `xlarge`, `xxlarge`. You can only upgrade the configuration, not downgrade the configuration. If you downgrade the instance, you need to [submit a ticket](https://selfservice.console.aliyun.com/ticket/category/dts/today).
         * 
         * @return builder
         * 
         */
        public Builder instanceClass(String instanceClass) {
            return instanceClass(Output.of(instanceClass));
        }

        /**
         * @param paymentType The payment type of the resource. Valid values: `PayAsYouGo`.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(Output<String> paymentType) {
            $.paymentType = paymentType;
            return this;
        }

        /**
         * @param paymentType The payment type of the resource. Valid values: `PayAsYouGo`.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(String paymentType) {
            return paymentType(Output.of(paymentType));
        }

        /**
         * @param sourceEndpointEngineName The type of source endpoint engine. Valid values: `ADS`, `DB2`, `DRDS`, `DataHub`, `Greenplum`, `MSSQL`, `MySQL`, `PolarDB`, `PostgreSQL`, `Redis`, `Tablestore`, `as400`, `clickhouse`, `kafka`, `mongodb`, `odps`, `oracle`, `polardb_o`, `polardb_pg`, `tidb`. For the correspondence between the supported source and target libraries, see [Supported Databases, Synchronization Initialization Types and Synchronization Topologies](https://help.aliyun.com/document_detail/130744.html), [Supported Databases and Migration Types](https://help.aliyun.com/document_detail/26618.html).
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointEngineName(Output<String> sourceEndpointEngineName) {
            $.sourceEndpointEngineName = sourceEndpointEngineName;
            return this;
        }

        /**
         * @param sourceEndpointEngineName The type of source endpoint engine. Valid values: `ADS`, `DB2`, `DRDS`, `DataHub`, `Greenplum`, `MSSQL`, `MySQL`, `PolarDB`, `PostgreSQL`, `Redis`, `Tablestore`, `as400`, `clickhouse`, `kafka`, `mongodb`, `odps`, `oracle`, `polardb_o`, `polardb_pg`, `tidb`. For the correspondence between the supported source and target libraries, see [Supported Databases, Synchronization Initialization Types and Synchronization Topologies](https://help.aliyun.com/document_detail/130744.html), [Supported Databases and Migration Types](https://help.aliyun.com/document_detail/26618.html).
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointEngineName(String sourceEndpointEngineName) {
            return sourceEndpointEngineName(Output.of(sourceEndpointEngineName));
        }

        /**
         * @param sourceEndpointRegion The region of source instance.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointRegion(Output<String> sourceEndpointRegion) {
            $.sourceEndpointRegion = sourceEndpointRegion;
            return this;
        }

        /**
         * @param sourceEndpointRegion The region of source instance.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpointRegion(String sourceEndpointRegion) {
            return sourceEndpointRegion(Output.of(sourceEndpointRegion));
        }

        /**
         * @param syncArchitecture The sync architecture. Valid values: `oneway`.
         * 
         * @return builder
         * 
         */
        public Builder syncArchitecture(@Nullable Output<String> syncArchitecture) {
            $.syncArchitecture = syncArchitecture;
            return this;
        }

        /**
         * @param syncArchitecture The sync architecture. Valid values: `oneway`.
         * 
         * @return builder
         * 
         */
        public Builder syncArchitecture(String syncArchitecture) {
            return syncArchitecture(Output.of(syncArchitecture));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        public MigrationInstanceArgs build() {
            if ($.destinationEndpointEngineName == null) {
                throw new MissingRequiredPropertyException("MigrationInstanceArgs", "destinationEndpointEngineName");
            }
            if ($.destinationEndpointRegion == null) {
                throw new MissingRequiredPropertyException("MigrationInstanceArgs", "destinationEndpointRegion");
            }
            if ($.paymentType == null) {
                throw new MissingRequiredPropertyException("MigrationInstanceArgs", "paymentType");
            }
            if ($.sourceEndpointEngineName == null) {
                throw new MissingRequiredPropertyException("MigrationInstanceArgs", "sourceEndpointEngineName");
            }
            if ($.sourceEndpointRegion == null) {
                throw new MissingRequiredPropertyException("MigrationInstanceArgs", "sourceEndpointRegion");
            }
            return $;
        }
    }

}
