// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.inputs;

import com.pulumi.alicloud.esa.inputs.SiteDeliveryTaskHttpDeliveryStandardAuthParamArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SiteDeliveryTaskHttpDeliveryArgs extends com.pulumi.resources.ResourceArgs {

    public static final SiteDeliveryTaskHttpDeliveryArgs Empty = new SiteDeliveryTaskHttpDeliveryArgs();

    @Import(name="compress")
    private @Nullable Output<String> compress;

    public Optional<Output<String>> compress() {
        return Optional.ofNullable(this.compress);
    }

    @Import(name="destUrl")
    private @Nullable Output<String> destUrl;

    public Optional<Output<String>> destUrl() {
        return Optional.ofNullable(this.destUrl);
    }

    @Import(name="headerParam")
    private @Nullable Output<Map<String,String>> headerParam;

    public Optional<Output<Map<String,String>>> headerParam() {
        return Optional.ofNullable(this.headerParam);
    }

    @Import(name="logBodyPrefix")
    private @Nullable Output<String> logBodyPrefix;

    public Optional<Output<String>> logBodyPrefix() {
        return Optional.ofNullable(this.logBodyPrefix);
    }

    @Import(name="logBodySuffix")
    private @Nullable Output<String> logBodySuffix;

    public Optional<Output<String>> logBodySuffix() {
        return Optional.ofNullable(this.logBodySuffix);
    }

    @Import(name="maxBatchMb")
    private @Nullable Output<Integer> maxBatchMb;

    public Optional<Output<Integer>> maxBatchMb() {
        return Optional.ofNullable(this.maxBatchMb);
    }

    @Import(name="maxBatchSize")
    private @Nullable Output<Integer> maxBatchSize;

    public Optional<Output<Integer>> maxBatchSize() {
        return Optional.ofNullable(this.maxBatchSize);
    }

    @Import(name="maxRetry")
    private @Nullable Output<Integer> maxRetry;

    public Optional<Output<Integer>> maxRetry() {
        return Optional.ofNullable(this.maxRetry);
    }

    @Import(name="queryParam")
    private @Nullable Output<Map<String,String>> queryParam;

    public Optional<Output<Map<String,String>>> queryParam() {
        return Optional.ofNullable(this.queryParam);
    }

    @Import(name="standardAuthOn")
    private @Nullable Output<Boolean> standardAuthOn;

    public Optional<Output<Boolean>> standardAuthOn() {
        return Optional.ofNullable(this.standardAuthOn);
    }

    /**
     * See `standardAuthParam` below.
     * 
     */
    @Import(name="standardAuthParam")
    private @Nullable Output<SiteDeliveryTaskHttpDeliveryStandardAuthParamArgs> standardAuthParam;

    /**
     * @return See `standardAuthParam` below.
     * 
     */
    public Optional<Output<SiteDeliveryTaskHttpDeliveryStandardAuthParamArgs>> standardAuthParam() {
        return Optional.ofNullable(this.standardAuthParam);
    }

    @Import(name="transformTimeout")
    private @Nullable Output<Integer> transformTimeout;

    public Optional<Output<Integer>> transformTimeout() {
        return Optional.ofNullable(this.transformTimeout);
    }

    private SiteDeliveryTaskHttpDeliveryArgs() {}

    private SiteDeliveryTaskHttpDeliveryArgs(SiteDeliveryTaskHttpDeliveryArgs $) {
        this.compress = $.compress;
        this.destUrl = $.destUrl;
        this.headerParam = $.headerParam;
        this.logBodyPrefix = $.logBodyPrefix;
        this.logBodySuffix = $.logBodySuffix;
        this.maxBatchMb = $.maxBatchMb;
        this.maxBatchSize = $.maxBatchSize;
        this.maxRetry = $.maxRetry;
        this.queryParam = $.queryParam;
        this.standardAuthOn = $.standardAuthOn;
        this.standardAuthParam = $.standardAuthParam;
        this.transformTimeout = $.transformTimeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SiteDeliveryTaskHttpDeliveryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SiteDeliveryTaskHttpDeliveryArgs $;

        public Builder() {
            $ = new SiteDeliveryTaskHttpDeliveryArgs();
        }

        public Builder(SiteDeliveryTaskHttpDeliveryArgs defaults) {
            $ = new SiteDeliveryTaskHttpDeliveryArgs(Objects.requireNonNull(defaults));
        }

        public Builder compress(@Nullable Output<String> compress) {
            $.compress = compress;
            return this;
        }

        public Builder compress(String compress) {
            return compress(Output.of(compress));
        }

        public Builder destUrl(@Nullable Output<String> destUrl) {
            $.destUrl = destUrl;
            return this;
        }

        public Builder destUrl(String destUrl) {
            return destUrl(Output.of(destUrl));
        }

        public Builder headerParam(@Nullable Output<Map<String,String>> headerParam) {
            $.headerParam = headerParam;
            return this;
        }

        public Builder headerParam(Map<String,String> headerParam) {
            return headerParam(Output.of(headerParam));
        }

        public Builder logBodyPrefix(@Nullable Output<String> logBodyPrefix) {
            $.logBodyPrefix = logBodyPrefix;
            return this;
        }

        public Builder logBodyPrefix(String logBodyPrefix) {
            return logBodyPrefix(Output.of(logBodyPrefix));
        }

        public Builder logBodySuffix(@Nullable Output<String> logBodySuffix) {
            $.logBodySuffix = logBodySuffix;
            return this;
        }

        public Builder logBodySuffix(String logBodySuffix) {
            return logBodySuffix(Output.of(logBodySuffix));
        }

        public Builder maxBatchMb(@Nullable Output<Integer> maxBatchMb) {
            $.maxBatchMb = maxBatchMb;
            return this;
        }

        public Builder maxBatchMb(Integer maxBatchMb) {
            return maxBatchMb(Output.of(maxBatchMb));
        }

        public Builder maxBatchSize(@Nullable Output<Integer> maxBatchSize) {
            $.maxBatchSize = maxBatchSize;
            return this;
        }

        public Builder maxBatchSize(Integer maxBatchSize) {
            return maxBatchSize(Output.of(maxBatchSize));
        }

        public Builder maxRetry(@Nullable Output<Integer> maxRetry) {
            $.maxRetry = maxRetry;
            return this;
        }

        public Builder maxRetry(Integer maxRetry) {
            return maxRetry(Output.of(maxRetry));
        }

        public Builder queryParam(@Nullable Output<Map<String,String>> queryParam) {
            $.queryParam = queryParam;
            return this;
        }

        public Builder queryParam(Map<String,String> queryParam) {
            return queryParam(Output.of(queryParam));
        }

        public Builder standardAuthOn(@Nullable Output<Boolean> standardAuthOn) {
            $.standardAuthOn = standardAuthOn;
            return this;
        }

        public Builder standardAuthOn(Boolean standardAuthOn) {
            return standardAuthOn(Output.of(standardAuthOn));
        }

        /**
         * @param standardAuthParam See `standardAuthParam` below.
         * 
         * @return builder
         * 
         */
        public Builder standardAuthParam(@Nullable Output<SiteDeliveryTaskHttpDeliveryStandardAuthParamArgs> standardAuthParam) {
            $.standardAuthParam = standardAuthParam;
            return this;
        }

        /**
         * @param standardAuthParam See `standardAuthParam` below.
         * 
         * @return builder
         * 
         */
        public Builder standardAuthParam(SiteDeliveryTaskHttpDeliveryStandardAuthParamArgs standardAuthParam) {
            return standardAuthParam(Output.of(standardAuthParam));
        }

        public Builder transformTimeout(@Nullable Output<Integer> transformTimeout) {
            $.transformTimeout = transformTimeout;
            return this;
        }

        public Builder transformTimeout(Integer transformTimeout) {
            return transformTimeout(Output.of(transformTimeout));
        }

        public SiteDeliveryTaskHttpDeliveryArgs build() {
            return $;
        }
    }

}
