// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.emrv2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterNodeGroupAutoScalingPolicyScalingRuleTimeTrigger {
    /**
     * @return The end time for this scaling rule specific metrics trigger.
     * 
     */
    private @Nullable String endTime;
    /**
     * @return The launch expiration time for this scaling rule specific time trigger. The value should between 0 and 3600.
     * 
     */
    private @Nullable Integer launchExpirationTime;
    /**
     * @return The launch time for this scaling rule specific time trigger.
     * 
     */
    private String launchTime;
    /**
     * @return The recurrence type for this scaling rule specific time trigger. Valid values: `MINUTELY`, `HOURLY`, `DAILY`, `WEEKLY`, `MONTHLY`.
     * 
     */
    private @Nullable String recurrenceType;
    /**
     * @return The recurrence value for this scaling rule specific time trigger.
     * 
     */
    private @Nullable String recurrenceValue;
    /**
     * @return The start time for this scaling rule specific metrics trigger.
     * 
     */
    private @Nullable String startTime;

    private ClusterNodeGroupAutoScalingPolicyScalingRuleTimeTrigger() {}
    /**
     * @return The end time for this scaling rule specific metrics trigger.
     * 
     */
    public Optional<String> endTime() {
        return Optional.ofNullable(this.endTime);
    }
    /**
     * @return The launch expiration time for this scaling rule specific time trigger. The value should between 0 and 3600.
     * 
     */
    public Optional<Integer> launchExpirationTime() {
        return Optional.ofNullable(this.launchExpirationTime);
    }
    /**
     * @return The launch time for this scaling rule specific time trigger.
     * 
     */
    public String launchTime() {
        return this.launchTime;
    }
    /**
     * @return The recurrence type for this scaling rule specific time trigger. Valid values: `MINUTELY`, `HOURLY`, `DAILY`, `WEEKLY`, `MONTHLY`.
     * 
     */
    public Optional<String> recurrenceType() {
        return Optional.ofNullable(this.recurrenceType);
    }
    /**
     * @return The recurrence value for this scaling rule specific time trigger.
     * 
     */
    public Optional<String> recurrenceValue() {
        return Optional.ofNullable(this.recurrenceValue);
    }
    /**
     * @return The start time for this scaling rule specific metrics trigger.
     * 
     */
    public Optional<String> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterNodeGroupAutoScalingPolicyScalingRuleTimeTrigger defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String endTime;
        private @Nullable Integer launchExpirationTime;
        private String launchTime;
        private @Nullable String recurrenceType;
        private @Nullable String recurrenceValue;
        private @Nullable String startTime;
        public Builder() {}
        public Builder(ClusterNodeGroupAutoScalingPolicyScalingRuleTimeTrigger defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endTime = defaults.endTime;
    	      this.launchExpirationTime = defaults.launchExpirationTime;
    	      this.launchTime = defaults.launchTime;
    	      this.recurrenceType = defaults.recurrenceType;
    	      this.recurrenceValue = defaults.recurrenceValue;
    	      this.startTime = defaults.startTime;
        }

        @CustomType.Setter
        public Builder endTime(@Nullable String endTime) {

            this.endTime = endTime;
            return this;
        }
        @CustomType.Setter
        public Builder launchExpirationTime(@Nullable Integer launchExpirationTime) {

            this.launchExpirationTime = launchExpirationTime;
            return this;
        }
        @CustomType.Setter
        public Builder launchTime(String launchTime) {
            if (launchTime == null) {
              throw new MissingRequiredPropertyException("ClusterNodeGroupAutoScalingPolicyScalingRuleTimeTrigger", "launchTime");
            }
            this.launchTime = launchTime;
            return this;
        }
        @CustomType.Setter
        public Builder recurrenceType(@Nullable String recurrenceType) {

            this.recurrenceType = recurrenceType;
            return this;
        }
        @CustomType.Setter
        public Builder recurrenceValue(@Nullable String recurrenceValue) {

            this.recurrenceValue = recurrenceValue;
            return this;
        }
        @CustomType.Setter
        public Builder startTime(@Nullable String startTime) {

            this.startTime = startTime;
            return this;
        }
        public ClusterNodeGroupAutoScalingPolicyScalingRuleTimeTrigger build() {
            final var _resultValue = new ClusterNodeGroupAutoScalingPolicyScalingRuleTimeTrigger();
            _resultValue.endTime = endTime;
            _resultValue.launchExpirationTime = launchExpirationTime;
            _resultValue.launchTime = launchTime;
            _resultValue.recurrenceType = recurrenceType;
            _resultValue.recurrenceValue = recurrenceValue;
            _resultValue.startTime = startTime;
            return _resultValue;
        }
    }
}
