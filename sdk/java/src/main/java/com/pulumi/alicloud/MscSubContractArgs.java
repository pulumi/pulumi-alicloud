// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class MscSubContractArgs extends com.pulumi.resources.ResourceArgs {

    public static final MscSubContractArgs Empty = new MscSubContractArgs();

    /**
     * The User&#39;s Contact Name. **Note:** The name must be 2 to 12 characters in length.
     * 
     */
    @Import(name="contactName", required=true)
    private Output<String> contactName;

    /**
     * @return The User&#39;s Contact Name. **Note:** The name must be 2 to 12 characters in length.
     * 
     */
    public Output<String> contactName() {
        return this.contactName;
    }

    /**
     * The User&#39;s Contact Email Address.
     * 
     */
    @Import(name="email", required=true)
    private Output<String> email;

    /**
     * @return The User&#39;s Contact Email Address.
     * 
     */
    public Output<String> email() {
        return this.email;
    }

    /**
     * The User&#39;s Telephone.
     * 
     */
    @Import(name="mobile", required=true)
    private Output<String> mobile;

    /**
     * @return The User&#39;s Telephone.
     * 
     */
    public Output<String> mobile() {
        return this.mobile;
    }

    /**
     * The User&#39;s Position. Valid values: `CEO`, `Technical Director`, `Maintenance Director`, `Project Director`,`Finance Director` and `Other`.
     * 
     * &gt; **NOTE:** When the user creates a contact, the user should use `alicloud.getMscSubContactVerificationMessage` to receive the verification message and confirm it.
     * 
     */
    @Import(name="position", required=true)
    private Output<String> position;

    /**
     * @return The User&#39;s Position. Valid values: `CEO`, `Technical Director`, `Maintenance Director`, `Project Director`,`Finance Director` and `Other`.
     * 
     * &gt; **NOTE:** When the user creates a contact, the user should use `alicloud.getMscSubContactVerificationMessage` to receive the verification message and confirm it.
     * 
     */
    public Output<String> position() {
        return this.position;
    }

    private MscSubContractArgs() {}

    private MscSubContractArgs(MscSubContractArgs $) {
        this.contactName = $.contactName;
        this.email = $.email;
        this.mobile = $.mobile;
        this.position = $.position;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MscSubContractArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MscSubContractArgs $;

        public Builder() {
            $ = new MscSubContractArgs();
        }

        public Builder(MscSubContractArgs defaults) {
            $ = new MscSubContractArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param contactName The User&#39;s Contact Name. **Note:** The name must be 2 to 12 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder contactName(Output<String> contactName) {
            $.contactName = contactName;
            return this;
        }

        /**
         * @param contactName The User&#39;s Contact Name. **Note:** The name must be 2 to 12 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder contactName(String contactName) {
            return contactName(Output.of(contactName));
        }

        /**
         * @param email The User&#39;s Contact Email Address.
         * 
         * @return builder
         * 
         */
        public Builder email(Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email The User&#39;s Contact Email Address.
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param mobile The User&#39;s Telephone.
         * 
         * @return builder
         * 
         */
        public Builder mobile(Output<String> mobile) {
            $.mobile = mobile;
            return this;
        }

        /**
         * @param mobile The User&#39;s Telephone.
         * 
         * @return builder
         * 
         */
        public Builder mobile(String mobile) {
            return mobile(Output.of(mobile));
        }

        /**
         * @param position The User&#39;s Position. Valid values: `CEO`, `Technical Director`, `Maintenance Director`, `Project Director`,`Finance Director` and `Other`.
         * 
         * &gt; **NOTE:** When the user creates a contact, the user should use `alicloud.getMscSubContactVerificationMessage` to receive the verification message and confirm it.
         * 
         * @return builder
         * 
         */
        public Builder position(Output<String> position) {
            $.position = position;
            return this;
        }

        /**
         * @param position The User&#39;s Position. Valid values: `CEO`, `Technical Director`, `Maintenance Director`, `Project Director`,`Finance Director` and `Other`.
         * 
         * &gt; **NOTE:** When the user creates a contact, the user should use `alicloud.getMscSubContactVerificationMessage` to receive the verification message and confirm it.
         * 
         * @return builder
         * 
         */
        public Builder position(String position) {
            return position(Output.of(position));
        }

        public MscSubContractArgs build() {
            if ($.contactName == null) {
                throw new MissingRequiredPropertyException("MscSubContractArgs", "contactName");
            }
            if ($.email == null) {
                throw new MissingRequiredPropertyException("MscSubContractArgs", "email");
            }
            if ($.mobile == null) {
                throw new MissingRequiredPropertyException("MscSubContractArgs", "mobile");
            }
            if ($.position == null) {
                throw new MissingRequiredPropertyException("MscSubContractArgs", "position");
            }
            return $;
        }
    }

}
