// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dfs;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.dfs.FileSystemArgs;
import com.pulumi.alicloud.dfs.inputs.FileSystemState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a DFS File System resource.
 * 
 * For information about DFS File System and how to use it, see [What is File System](https://www.alibabacloud.com/help/doc-detail/207144.htm).
 * 
 * &gt; **NOTE:** Available since v1.140.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.dfs.DfsFunctions;
 * import com.pulumi.alicloud.dfs.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.dfs.FileSystem;
 * import com.pulumi.alicloud.dfs.FileSystemArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get(&#34;name&#34;).orElse(&#34;tf-example&#34;);
 *         final var defaultZones = DfsFunctions.getZones();
 * 
 *         var defaultFileSystem = new FileSystem(&#34;defaultFileSystem&#34;, FileSystemArgs.builder()        
 *             .storageType(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].options()[0].storageType()))
 *             .zoneId(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].zoneId()))
 *             .protocolType(&#34;HDFS&#34;)
 *             .description(name)
 *             .fileSystemName(name)
 *             .throughputMode(&#34;Standard&#34;)
 *             .spaceCapacity(&#34;1024&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * DFS File System can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:dfs/fileSystem:FileSystem example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:dfs/fileSystem:FileSystem")
public class FileSystem extends com.pulumi.resources.CustomResource {
    /**
     * The description of the File system.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the File system.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The name of the File system.
     * 
     */
    @Export(name="fileSystemName", refs={String.class}, tree="[0]")
    private Output<String> fileSystemName;

    /**
     * @return The name of the File system.
     * 
     */
    public Output<String> fileSystemName() {
        return this.fileSystemName;
    }
    /**
     * The protocol type. Valid values: `HDFS`.
     * 
     */
    @Export(name="protocolType", refs={String.class}, tree="[0]")
    private Output<String> protocolType;

    /**
     * @return The protocol type. Valid values: `HDFS`.
     * 
     */
    public Output<String> protocolType() {
        return this.protocolType;
    }
    /**
     * The preset throughput of the File system. Valid values: `1` to `1024`, Unit: MB/s. **NOTE:** Only when `throughput_mode` is `Provisioned`, this param is valid.
     * 
     */
    @Export(name="provisionedThroughputInMiBps", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> provisionedThroughputInMiBps;

    /**
     * @return The preset throughput of the File system. Valid values: `1` to `1024`, Unit: MB/s. **NOTE:** Only when `throughput_mode` is `Provisioned`, this param is valid.
     * 
     */
    public Output<Optional<Integer>> provisionedThroughputInMiBps() {
        return Codegen.optional(this.provisionedThroughputInMiBps);
    }
    /**
     * The capacity budget of the File system. **NOTE:** When the actual data storage reaches the file system capacity budget, the data cannot be written. The file system capacity budget does not support shrinking.
     * 
     */
    @Export(name="spaceCapacity", refs={Integer.class}, tree="[0]")
    private Output<Integer> spaceCapacity;

    /**
     * @return The capacity budget of the File system. **NOTE:** When the actual data storage reaches the file system capacity budget, the data cannot be written. The file system capacity budget does not support shrinking.
     * 
     */
    public Output<Integer> spaceCapacity() {
        return this.spaceCapacity;
    }
    /**
     * The storage specifications of the File system. Valid values: `PERFORMANCE`, `STANDARD`.
     * 
     */
    @Export(name="storageType", refs={String.class}, tree="[0]")
    private Output<String> storageType;

    /**
     * @return The storage specifications of the File system. Valid values: `PERFORMANCE`, `STANDARD`.
     * 
     */
    public Output<String> storageType() {
        return this.storageType;
    }
    /**
     * The throughput mode of the File system. Valid values: `Provisioned`, `Standard`.
     * 
     */
    @Export(name="throughputMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> throughputMode;

    /**
     * @return The throughput mode of the File system. Valid values: `Provisioned`, `Standard`.
     * 
     */
    public Output<Optional<String>> throughputMode() {
        return Codegen.optional(this.throughputMode);
    }
    /**
     * The zone ID of the File system.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return The zone ID of the File system.
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FileSystem(String name) {
        this(name, FileSystemArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FileSystem(String name, FileSystemArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FileSystem(String name, FileSystemArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:dfs/fileSystem:FileSystem", name, args == null ? FileSystemArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private FileSystem(String name, Output<String> id, @Nullable FileSystemState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:dfs/fileSystem:FileSystem", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "throughputMode"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FileSystem get(String name, Output<String> id, @Nullable FileSystemState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FileSystem(name, id, state, options);
    }
}
