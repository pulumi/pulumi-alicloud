// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dfs;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.dfs.FileSystemArgs;
import com.pulumi.alicloud.dfs.inputs.FileSystemState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Apsara File Storage for HDFS (DFS) File System resource.
 * 
 * For information about Apsara File Storage for HDFS (DFS) File System and how to use it, see [What is File System](https://www.alibabacloud.com/help/en/aibaba-cloud-storage-services/latest/apsara-file-storage-for-hdfs).
 * 
 * &gt; **NOTE:** Available since v1.140.0.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.dfs.FileSystem;
 * import com.pulumi.alicloud.dfs.FileSystemArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get("name").orElse("tf-example");
 *         var default_ = new FileSystem("default", FileSystemArgs.builder()
 *             .storageType("PERFORMANCE")
 *             .zoneId("cn-hangzhou-b")
 *             .protocolType("PANGU")
 *             .description(name)
 *             .fileSystemName(name)
 *             .throughputMode("Provisioned")
 *             .spaceCapacity("1024")
 *             .provisionedThroughputInMiBps("512")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Apsara File Storage for HDFS (DFS) File System can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:dfs/fileSystem:FileSystem example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:dfs/fileSystem:FileSystem")
public class FileSystem extends com.pulumi.resources.CustomResource {
    /**
     * The creation time of the file system instance.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The creation time of the file system instance.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Redundancy mode of the file system. Value:
     * - LRS (default): Local redundancy.
     * - ZRS: Same-City redundancy. When ZRS is selected, zoneId is a string consisting of multiple zones that are expected to be redundant in the same city, for example,  &#39;zoneId1,zoneId2 &#39;.
     * 
     */
    @Export(name="dataRedundancyType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dataRedundancyType;

    /**
     * @return Redundancy mode of the file system. Value:
     * - LRS (default): Local redundancy.
     * - ZRS: Same-City redundancy. When ZRS is selected, zoneId is a string consisting of multiple zones that are expected to be redundant in the same city, for example,  &#39;zoneId1,zoneId2 &#39;.
     * 
     */
    public Output<Optional<String>> dataRedundancyType() {
        return Codegen.optional(this.dataRedundancyType);
    }
    /**
     * Dedicated cluster id, which is used to support scenarios such as group cloud migration.
     * 
     */
    @Export(name="dedicatedClusterId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dedicatedClusterId;

    /**
     * @return Dedicated cluster id, which is used to support scenarios such as group cloud migration.
     * 
     */
    public Output<Optional<String>> dedicatedClusterId() {
        return Codegen.optional(this.dedicatedClusterId);
    }
    /**
     * The description of the file system resource. No more than 32 characters in length.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the file system resource. No more than 32 characters in length.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The file system name. The naming rules are as follows: The length is 6~64 characters. Globally unique and cannot be an empty string. English letters are supported and can contain numbers, underscores (_), and dashes (-).
     * 
     */
    @Export(name="fileSystemName", refs={String.class}, tree="[0]")
    private Output<String> fileSystemName;

    /**
     * @return The file system name. The naming rules are as follows: The length is 6~64 characters. Globally unique and cannot be an empty string. English letters are supported and can contain numbers, underscores (_), and dashes (-).
     * 
     */
    public Output<String> fileSystemName() {
        return this.fileSystemName;
    }
    /**
     * Save set sequence number, the user selects the content of the specified sequence number in the Save set.
     * 
     */
    @Export(name="partitionNumber", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> partitionNumber;

    /**
     * @return Save set sequence number, the user selects the content of the specified sequence number in the Save set.
     * 
     */
    public Output<Optional<Integer>> partitionNumber() {
        return Codegen.optional(this.partitionNumber);
    }
    /**
     * The protocol type. Value: `HDFS`, `PANGU`.
     * 
     */
    @Export(name="protocolType", refs={String.class}, tree="[0]")
    private Output<String> protocolType;

    /**
     * @return The protocol type. Value: `HDFS`, `PANGU`.
     * 
     */
    public Output<String> protocolType() {
        return this.protocolType;
    }
    /**
     * Provisioned throughput. This parameter is required when ThroughputMode is set to Provisioned. Unit: MB/s Value range: 1~5120.
     * 
     */
    @Export(name="provisionedThroughputInMiBps", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> provisionedThroughputInMiBps;

    /**
     * @return Provisioned throughput. This parameter is required when ThroughputMode is set to Provisioned. Unit: MB/s Value range: 1~5120.
     * 
     */
    public Output<Optional<Integer>> provisionedThroughputInMiBps() {
        return Codegen.optional(this.provisionedThroughputInMiBps);
    }
    /**
     * (Available since v1.242.0) The region ID of the File System.
     * 
     */
    @Export(name="regionId", refs={String.class}, tree="[0]")
    private Output<String> regionId;

    /**
     * @return (Available since v1.242.0) The region ID of the File System.
     * 
     */
    public Output<String> regionId() {
        return this.regionId;
    }
    /**
     * File system capacity.  When the actual amount of data stored reaches the capacity of the file system, data cannot be written.  Unit: GiB.
     * 
     */
    @Export(name="spaceCapacity", refs={Integer.class}, tree="[0]")
    private Output<Integer> spaceCapacity;

    /**
     * @return File system capacity.  When the actual amount of data stored reaches the capacity of the file system, data cannot be written.  Unit: GiB.
     * 
     */
    public Output<Integer> spaceCapacity() {
        return this.spaceCapacity;
    }
    /**
     * Save set identity, used to select a user-specified save set.
     * 
     */
    @Export(name="storageSetName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storageSetName;

    /**
     * @return Save set identity, used to select a user-specified save set.
     * 
     */
    public Output<Optional<String>> storageSetName() {
        return Codegen.optional(this.storageSetName);
    }
    /**
     * The storage media type. Value: STANDARD (default): STANDARD PERFORMANCE: PERFORMANCE type.
     * 
     */
    @Export(name="storageType", refs={String.class}, tree="[0]")
    private Output<String> storageType;

    /**
     * @return The storage media type. Value: STANDARD (default): STANDARD PERFORMANCE: PERFORMANCE type.
     * 
     */
    public Output<String> storageType() {
        return this.storageType;
    }
    /**
     * The throughput mode. Value: Standard (default): Standard throughput Provisioned: preset throughput.
     * 
     */
    @Export(name="throughputMode", refs={String.class}, tree="[0]")
    private Output<String> throughputMode;

    /**
     * @return The throughput mode. Value: Standard (default): Standard throughput Provisioned: preset throughput.
     * 
     */
    public Output<String> throughputMode() {
        return this.throughputMode;
    }
    /**
     * Zone Id, which is used to create file system resources to the specified zone.
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> zoneId;

    /**
     * @return Zone Id, which is used to create file system resources to the specified zone.
     * 
     */
    public Output<Optional<String>> zoneId() {
        return Codegen.optional(this.zoneId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FileSystem(java.lang.String name) {
        this(name, FileSystemArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FileSystem(java.lang.String name, FileSystemArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FileSystem(java.lang.String name, FileSystemArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:dfs/fileSystem:FileSystem", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private FileSystem(java.lang.String name, Output<java.lang.String> id, @Nullable FileSystemState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:dfs/fileSystem:FileSystem", name, state, makeResourceOptions(options, id), false);
    }

    private static FileSystemArgs makeArgs(FileSystemArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FileSystemArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FileSystem get(java.lang.String name, Output<java.lang.String> id, @Nullable FileSystemState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FileSystem(name, id, state, options);
    }
}
