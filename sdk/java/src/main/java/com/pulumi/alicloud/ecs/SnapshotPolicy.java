// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
import com.pulumi.alicloud.ecs.inputs.SnapshotPolicyState;
import com.pulumi.alicloud.ecs.outputs.SnapshotPolicyCopyEncryptionConfiguration;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * &gt; **DEPRECATED:** This resource has been renamed to alicloud.ecs.AutoSnapshotPolicy from version 1.117.0.
 * 
 * Provides an ECS snapshot policy resource.
 * 
 * For information about snapshot policy and how to use it, see [Snapshot](https://www.alibabacloud.com/help/doc-detail/25460.html).
 * 
 * &gt; **NOTE:** Available in 1.42.0+.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.ecs.SnapshotPolicy;
 * import com.pulumi.alicloud.ecs.SnapshotPolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var sp = new SnapshotPolicy("sp", SnapshotPolicyArgs.builder()
 *             .name("tf-testAcc-sp")
 *             .repeatWeekdays(            
 *                 "1",
 *                 "2",
 *                 "3")
 *             .retentionDays(-1)
 *             .timePoints(            
 *                 "1",
 *                 "22",
 *                 "23")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Snapshot can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:ecs/snapshotPolicy:SnapshotPolicy snapshot sp-abc1234567890000
 * ```
 * 
 */
@ResourceType(type="alicloud:ecs/snapshotPolicy:SnapshotPolicy")
public class SnapshotPolicy extends com.pulumi.resources.CustomResource {
    @Export(name="autoSnapshotPolicyName", refs={String.class}, tree="[0]")
    private Output<String> autoSnapshotPolicyName;

    public Output<String> autoSnapshotPolicyName() {
        return this.autoSnapshotPolicyName;
    }
    @Export(name="copiedSnapshotsRetentionDays", refs={Integer.class}, tree="[0]")
    private Output<Integer> copiedSnapshotsRetentionDays;

    public Output<Integer> copiedSnapshotsRetentionDays() {
        return this.copiedSnapshotsRetentionDays;
    }
    @Export(name="copyEncryptionConfiguration", refs={SnapshotPolicyCopyEncryptionConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ SnapshotPolicyCopyEncryptionConfiguration> copyEncryptionConfiguration;

    public Output<Optional<SnapshotPolicyCopyEncryptionConfiguration>> copyEncryptionConfiguration() {
        return Codegen.optional(this.copyEncryptionConfiguration);
    }
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    public Output<String> createTime() {
        return this.createTime;
    }
    @Export(name="enableCrossRegionCopy", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableCrossRegionCopy;

    public Output<Optional<Boolean>> enableCrossRegionCopy() {
        return Codegen.optional(this.enableCrossRegionCopy);
    }
    /**
     * The snapshot policy name.
     * 
     * @deprecated
     * Field `name` has been deprecated from provider version 1.236.0. New field `auto_snapshot_policy_name` instead.
     * 
     */
    @Deprecated /* Field `name` has been deprecated from provider version 1.236.0. New field `auto_snapshot_policy_name` instead. */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The snapshot policy name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="regionId", refs={String.class}, tree="[0]")
    private Output<String> regionId;

    public Output<String> regionId() {
        return this.regionId;
    }
    /**
     * The automatic snapshot repetition dates. The unit of measurement is day and the repeating cycle is a week. Value range: [1, 7], which represents days starting from Monday to Sunday, for example 1  indicates Monday. When you want to schedule multiple automatic snapshot tasks for a disk in a week, you can set the RepeatWeekdays to an array.
     * - A maximum of seven time points can be selected.
     * - The format is  an JSON array of [&#34;1&#34;, &#34;2&#34;, … &#34;7&#34;]  and the time points are separated by commas (,).
     * 
     */
    @Export(name="repeatWeekdays", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> repeatWeekdays;

    /**
     * @return The automatic snapshot repetition dates. The unit of measurement is day and the repeating cycle is a week. Value range: [1, 7], which represents days starting from Monday to Sunday, for example 1  indicates Monday. When you want to schedule multiple automatic snapshot tasks for a disk in a week, you can set the RepeatWeekdays to an array.
     * - A maximum of seven time points can be selected.
     * - The format is  an JSON array of [&#34;1&#34;, &#34;2&#34;, … &#34;7&#34;]  and the time points are separated by commas (,).
     * 
     */
    public Output<List<String>> repeatWeekdays() {
        return this.repeatWeekdays;
    }
    @Export(name="resourceGroupId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> resourceGroupId;

    public Output<Optional<String>> resourceGroupId() {
        return Codegen.optional(this.resourceGroupId);
    }
    /**
     * The snapshot retention time, and the unit of measurement is day. Optional values:
     * - -1: The automatic snapshots are retained permanently.
     * - [1, 65536]: The number of days retained.
     * 
     * Default value: -1.
     * 
     */
    @Export(name="retentionDays", refs={Integer.class}, tree="[0]")
    private Output<Integer> retentionDays;

    /**
     * @return The snapshot retention time, and the unit of measurement is day. Optional values:
     * - -1: The automatic snapshots are retained permanently.
     * - [1, 65536]: The number of days retained.
     * 
     * Default value: -1.
     * 
     */
    public Output<Integer> retentionDays() {
        return this.retentionDays;
    }
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    public Output<String> status() {
        return this.status;
    }
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="targetCopyRegions", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> targetCopyRegions;

    public Output<Optional<List<String>>> targetCopyRegions() {
        return Codegen.optional(this.targetCopyRegions);
    }
    /**
     * The automatic snapshot creation schedule, and the unit of measurement is hour. Value range: [0, 23], which represents from 00:00 to 24:00,  for example 1 indicates 01:00. When you want to schedule multiple automatic snapshot tasks for a disk in a day, you can set the TimePoints to an array.
     * - A maximum of 24 time points can be selected.
     * - The format is  an JSON array of [&#34;0&#34;, &#34;1&#34;, … &#34;23&#34;] and the time points are separated by commas (,).
     * 
     */
    @Export(name="timePoints", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> timePoints;

    /**
     * @return The automatic snapshot creation schedule, and the unit of measurement is hour. Value range: [0, 23], which represents from 00:00 to 24:00,  for example 1 indicates 01:00. When you want to schedule multiple automatic snapshot tasks for a disk in a day, you can set the TimePoints to an array.
     * - A maximum of 24 time points can be selected.
     * - The format is  an JSON array of [&#34;0&#34;, &#34;1&#34;, … &#34;23&#34;] and the time points are separated by commas (,).
     * 
     */
    public Output<List<String>> timePoints() {
        return this.timePoints;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SnapshotPolicy(java.lang.String name) {
        this(name, SnapshotPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SnapshotPolicy(java.lang.String name, SnapshotPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SnapshotPolicy(java.lang.String name, SnapshotPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ecs/snapshotPolicy:SnapshotPolicy", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SnapshotPolicy(java.lang.String name, Output<java.lang.String> id, @Nullable SnapshotPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ecs/snapshotPolicy:SnapshotPolicy", name, state, makeResourceOptions(options, id), false);
    }

    private static SnapshotPolicyArgs makeArgs(SnapshotPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SnapshotPolicyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SnapshotPolicy get(java.lang.String name, Output<java.lang.String> id, @Nullable SnapshotPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SnapshotPolicy(name, id, state, options);
    }
}
