// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sls.outputs;

import com.pulumi.alicloud.sls.outputs.GetEtlsEtl;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEtlsResult {
    /**
     * @return A list of Etl Entries. Each element contains the following attributes:
     * 
     */
    private List<GetEtlsEtl> etls;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of Etl IDs.
     * 
     */
    private List<String> ids;
    /**
     * @return Destination Logstore Name.
     * 
     */
    private String logstore;
    private @Nullable Integer offset;
    private @Nullable String outputFile;
    /**
     * @return Target Project name.
     * 
     */
    private String project;
    private @Nullable Integer size;

    private GetEtlsResult() {}
    /**
     * @return A list of Etl Entries. Each element contains the following attributes:
     * 
     */
    public List<GetEtlsEtl> etls() {
        return this.etls;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of Etl IDs.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    /**
     * @return Destination Logstore Name.
     * 
     */
    public String logstore() {
        return this.logstore;
    }
    public Optional<Integer> offset() {
        return Optional.ofNullable(this.offset);
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return Target Project name.
     * 
     */
    public String project() {
        return this.project;
    }
    public Optional<Integer> size() {
        return Optional.ofNullable(this.size);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEtlsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetEtlsEtl> etls;
        private String id;
        private List<String> ids;
        private String logstore;
        private @Nullable Integer offset;
        private @Nullable String outputFile;
        private String project;
        private @Nullable Integer size;
        public Builder() {}
        public Builder(GetEtlsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.etls = defaults.etls;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.logstore = defaults.logstore;
    	      this.offset = defaults.offset;
    	      this.outputFile = defaults.outputFile;
    	      this.project = defaults.project;
    	      this.size = defaults.size;
        }

        @CustomType.Setter
        public Builder etls(List<GetEtlsEtl> etls) {
            if (etls == null) {
              throw new MissingRequiredPropertyException("GetEtlsResult", "etls");
            }
            this.etls = etls;
            return this;
        }
        public Builder etls(GetEtlsEtl... etls) {
            return etls(List.of(etls));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEtlsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            if (ids == null) {
              throw new MissingRequiredPropertyException("GetEtlsResult", "ids");
            }
            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder logstore(String logstore) {
            if (logstore == null) {
              throw new MissingRequiredPropertyException("GetEtlsResult", "logstore");
            }
            this.logstore = logstore;
            return this;
        }
        @CustomType.Setter
        public Builder offset(@Nullable Integer offset) {

            this.offset = offset;
            return this;
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {

            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetEtlsResult", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder size(@Nullable Integer size) {

            this.size = size;
            return this;
        }
        public GetEtlsResult build() {
            final var _resultValue = new GetEtlsResult();
            _resultValue.etls = etls;
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.logstore = logstore;
            _resultValue.offset = offset;
            _resultValue.outputFile = outputFile;
            _resultValue.project = project;
            _resultValue.size = size;
            return _resultValue;
        }
    }
}
