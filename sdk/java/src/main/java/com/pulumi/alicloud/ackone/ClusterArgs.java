// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ackone;

import com.pulumi.alicloud.ackone.inputs.ClusterNetworkArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterArgs Empty = new ClusterArgs();

    /**
     * (Available since v1.243.0) Whether to enable ArgoCD. Default to true. Only valid when `profile` is &#39;Default&#39;. It has to be false when cluster is deleted.
     * 
     */
    @Import(name="argocdEnabled")
    private @Nullable Output<Boolean> argocdEnabled;

    /**
     * @return (Available since v1.243.0) Whether to enable ArgoCD. Default to true. Only valid when `profile` is &#39;Default&#39;. It has to be false when cluster is deleted.
     * 
     */
    public Optional<Output<Boolean>> argocdEnabled() {
        return Optional.ofNullable(this.argocdEnabled);
    }

    /**
     * Cluster name.
     * 
     */
    @Import(name="clusterName")
    private @Nullable Output<String> clusterName;

    /**
     * @return Cluster name.
     * 
     */
    public Optional<Output<String>> clusterName() {
        return Optional.ofNullable(this.clusterName);
    }

    /**
     * Cluster network information. See `network` below.
     * 
     */
    @Import(name="network", required=true)
    private Output<ClusterNetworkArgs> network;

    /**
     * @return Cluster network information. See `network` below.
     * 
     */
    public Output<ClusterNetworkArgs> network() {
        return this.network;
    }

    /**
     * Cluster attributes. Valid values: &#39;Default&#39;, &#39;XFlow&#39;.
     * 
     * **Note**: When profile is Default, vswitches might not be deleted when cluster is deleted because there are some remaining resources in the vswitches. We are still fixing this problem.
     * 
     */
    @Import(name="profile")
    private @Nullable Output<String> profile;

    /**
     * @return Cluster attributes. Valid values: &#39;Default&#39;, &#39;XFlow&#39;.
     * 
     * **Note**: When profile is Default, vswitches might not be deleted when cluster is deleted because there are some remaining resources in the vswitches. We are still fixing this problem.
     * 
     */
    public Optional<Output<String>> profile() {
        return Optional.ofNullable(this.profile);
    }

    private ClusterArgs() {}

    private ClusterArgs(ClusterArgs $) {
        this.argocdEnabled = $.argocdEnabled;
        this.clusterName = $.clusterName;
        this.network = $.network;
        this.profile = $.profile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterArgs $;

        public Builder() {
            $ = new ClusterArgs();
        }

        public Builder(ClusterArgs defaults) {
            $ = new ClusterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param argocdEnabled (Available since v1.243.0) Whether to enable ArgoCD. Default to true. Only valid when `profile` is &#39;Default&#39;. It has to be false when cluster is deleted.
         * 
         * @return builder
         * 
         */
        public Builder argocdEnabled(@Nullable Output<Boolean> argocdEnabled) {
            $.argocdEnabled = argocdEnabled;
            return this;
        }

        /**
         * @param argocdEnabled (Available since v1.243.0) Whether to enable ArgoCD. Default to true. Only valid when `profile` is &#39;Default&#39;. It has to be false when cluster is deleted.
         * 
         * @return builder
         * 
         */
        public Builder argocdEnabled(Boolean argocdEnabled) {
            return argocdEnabled(Output.of(argocdEnabled));
        }

        /**
         * @param clusterName Cluster name.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(@Nullable Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterName Cluster name.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        /**
         * @param network Cluster network information. See `network` below.
         * 
         * @return builder
         * 
         */
        public Builder network(Output<ClusterNetworkArgs> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network Cluster network information. See `network` below.
         * 
         * @return builder
         * 
         */
        public Builder network(ClusterNetworkArgs network) {
            return network(Output.of(network));
        }

        /**
         * @param profile Cluster attributes. Valid values: &#39;Default&#39;, &#39;XFlow&#39;.
         * 
         * **Note**: When profile is Default, vswitches might not be deleted when cluster is deleted because there are some remaining resources in the vswitches. We are still fixing this problem.
         * 
         * @return builder
         * 
         */
        public Builder profile(@Nullable Output<String> profile) {
            $.profile = profile;
            return this;
        }

        /**
         * @param profile Cluster attributes. Valid values: &#39;Default&#39;, &#39;XFlow&#39;.
         * 
         * **Note**: When profile is Default, vswitches might not be deleted when cluster is deleted because there are some remaining resources in the vswitches. We are still fixing this problem.
         * 
         * @return builder
         * 
         */
        public Builder profile(String profile) {
            return profile(Output.of(profile));
        }

        public ClusterArgs build() {
            if ($.network == null) {
                throw new MissingRequiredPropertyException("ClusterArgs", "network");
            }
            return $;
        }
    }

}
