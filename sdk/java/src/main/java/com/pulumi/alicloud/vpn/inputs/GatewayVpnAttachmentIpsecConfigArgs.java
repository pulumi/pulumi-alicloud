// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpn.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewayVpnAttachmentIpsecConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayVpnAttachmentIpsecConfigArgs Empty = new GatewayVpnAttachmentIpsecConfigArgs();

    /**
     * The authentication algorithm negotiated in the second stage. Valid values: md5, sha1, sha256, sha384, sha512. Default value: MD5.
     * 
     */
    @Import(name="ipsecAuthAlg")
    private @Nullable Output<String> ipsecAuthAlg;

    /**
     * @return The authentication algorithm negotiated in the second stage. Valid values: md5, sha1, sha256, sha384, sha512. Default value: MD5.
     * 
     */
    public Optional<Output<String>> ipsecAuthAlg() {
        return Optional.ofNullable(this.ipsecAuthAlg);
    }

    /**
     * The encryption algorithm negotiated in the second stage. Valid values: aes, aes192, aes256, des, or 3des. Default value: aes.
     * 
     */
    @Import(name="ipsecEncAlg")
    private @Nullable Output<String> ipsecEncAlg;

    /**
     * @return The encryption algorithm negotiated in the second stage. Valid values: aes, aes192, aes256, des, or 3des. Default value: aes.
     * 
     */
    public Optional<Output<String>> ipsecEncAlg() {
        return Optional.ofNullable(this.ipsecEncAlg);
    }

    /**
     * The life cycle of SA negotiated in the second stage. Unit: seconds. Value range: 0~86400. Default value: 86400.
     * 
     */
    @Import(name="ipsecLifetime")
    private @Nullable Output<Integer> ipsecLifetime;

    /**
     * @return The life cycle of SA negotiated in the second stage. Unit: seconds. Value range: 0~86400. Default value: 86400.
     * 
     */
    public Optional<Output<Integer>> ipsecLifetime() {
        return Optional.ofNullable(this.ipsecLifetime);
    }

    /**
     * Diffie-Hellman Key Exchange Algorithm Used in Second Stage Negotiation
     * 
     */
    @Import(name="ipsecPfs")
    private @Nullable Output<String> ipsecPfs;

    /**
     * @return Diffie-Hellman Key Exchange Algorithm Used in Second Stage Negotiation
     * 
     */
    public Optional<Output<String>> ipsecPfs() {
        return Optional.ofNullable(this.ipsecPfs);
    }

    private GatewayVpnAttachmentIpsecConfigArgs() {}

    private GatewayVpnAttachmentIpsecConfigArgs(GatewayVpnAttachmentIpsecConfigArgs $) {
        this.ipsecAuthAlg = $.ipsecAuthAlg;
        this.ipsecEncAlg = $.ipsecEncAlg;
        this.ipsecLifetime = $.ipsecLifetime;
        this.ipsecPfs = $.ipsecPfs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayVpnAttachmentIpsecConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayVpnAttachmentIpsecConfigArgs $;

        public Builder() {
            $ = new GatewayVpnAttachmentIpsecConfigArgs();
        }

        public Builder(GatewayVpnAttachmentIpsecConfigArgs defaults) {
            $ = new GatewayVpnAttachmentIpsecConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipsecAuthAlg The authentication algorithm negotiated in the second stage. Valid values: md5, sha1, sha256, sha384, sha512. Default value: MD5.
         * 
         * @return builder
         * 
         */
        public Builder ipsecAuthAlg(@Nullable Output<String> ipsecAuthAlg) {
            $.ipsecAuthAlg = ipsecAuthAlg;
            return this;
        }

        /**
         * @param ipsecAuthAlg The authentication algorithm negotiated in the second stage. Valid values: md5, sha1, sha256, sha384, sha512. Default value: MD5.
         * 
         * @return builder
         * 
         */
        public Builder ipsecAuthAlg(String ipsecAuthAlg) {
            return ipsecAuthAlg(Output.of(ipsecAuthAlg));
        }

        /**
         * @param ipsecEncAlg The encryption algorithm negotiated in the second stage. Valid values: aes, aes192, aes256, des, or 3des. Default value: aes.
         * 
         * @return builder
         * 
         */
        public Builder ipsecEncAlg(@Nullable Output<String> ipsecEncAlg) {
            $.ipsecEncAlg = ipsecEncAlg;
            return this;
        }

        /**
         * @param ipsecEncAlg The encryption algorithm negotiated in the second stage. Valid values: aes, aes192, aes256, des, or 3des. Default value: aes.
         * 
         * @return builder
         * 
         */
        public Builder ipsecEncAlg(String ipsecEncAlg) {
            return ipsecEncAlg(Output.of(ipsecEncAlg));
        }

        /**
         * @param ipsecLifetime The life cycle of SA negotiated in the second stage. Unit: seconds. Value range: 0~86400. Default value: 86400.
         * 
         * @return builder
         * 
         */
        public Builder ipsecLifetime(@Nullable Output<Integer> ipsecLifetime) {
            $.ipsecLifetime = ipsecLifetime;
            return this;
        }

        /**
         * @param ipsecLifetime The life cycle of SA negotiated in the second stage. Unit: seconds. Value range: 0~86400. Default value: 86400.
         * 
         * @return builder
         * 
         */
        public Builder ipsecLifetime(Integer ipsecLifetime) {
            return ipsecLifetime(Output.of(ipsecLifetime));
        }

        /**
         * @param ipsecPfs Diffie-Hellman Key Exchange Algorithm Used in Second Stage Negotiation
         * 
         * @return builder
         * 
         */
        public Builder ipsecPfs(@Nullable Output<String> ipsecPfs) {
            $.ipsecPfs = ipsecPfs;
            return this;
        }

        /**
         * @param ipsecPfs Diffie-Hellman Key Exchange Algorithm Used in Second Stage Negotiation
         * 
         * @return builder
         * 
         */
        public Builder ipsecPfs(String ipsecPfs) {
            return ipsecPfs(Output.of(ipsecPfs));
        }

        public GatewayVpnAttachmentIpsecConfigArgs build() {
            return $;
        }
    }

}
