// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.slb;

import com.pulumi.alicloud.slb.inputs.MasterSlaveServerGroupServerArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MasterSlaveServerGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final MasterSlaveServerGroupArgs Empty = new MasterSlaveServerGroupArgs();

    /**
     * Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.
     * 
     */
    @Import(name="deleteProtectionValidation")
    private @Nullable Output<Boolean> deleteProtectionValidation;

    /**
     * @return Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.
     * 
     */
    public Optional<Output<Boolean>> deleteProtectionValidation() {
        return Optional.ofNullable(this.deleteProtectionValidation);
    }

    /**
     * The Load Balancer ID which is used to launch a new master slave server group.
     * 
     */
    @Import(name="loadBalancerId", required=true)
    private Output<String> loadBalancerId;

    /**
     * @return The Load Balancer ID which is used to launch a new master slave server group.
     * 
     */
    public Output<String> loadBalancerId() {
        return this.loadBalancerId;
    }

    /**
     * Name of the master slave server group.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the master slave server group.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A list of ECS instances to be added. Only two ECS instances can be supported in one resource. It contains six sub-fields as `Block server` follows.
     * 
     */
    @Import(name="servers")
    private @Nullable Output<List<MasterSlaveServerGroupServerArgs>> servers;

    /**
     * @return A list of ECS instances to be added. Only two ECS instances can be supported in one resource. It contains six sub-fields as `Block server` follows.
     * 
     */
    public Optional<Output<List<MasterSlaveServerGroupServerArgs>>> servers() {
        return Optional.ofNullable(this.servers);
    }

    private MasterSlaveServerGroupArgs() {}

    private MasterSlaveServerGroupArgs(MasterSlaveServerGroupArgs $) {
        this.deleteProtectionValidation = $.deleteProtectionValidation;
        this.loadBalancerId = $.loadBalancerId;
        this.name = $.name;
        this.servers = $.servers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MasterSlaveServerGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MasterSlaveServerGroupArgs $;

        public Builder() {
            $ = new MasterSlaveServerGroupArgs();
        }

        public Builder(MasterSlaveServerGroupArgs defaults) {
            $ = new MasterSlaveServerGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deleteProtectionValidation Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.
         * 
         * @return builder
         * 
         */
        public Builder deleteProtectionValidation(@Nullable Output<Boolean> deleteProtectionValidation) {
            $.deleteProtectionValidation = deleteProtectionValidation;
            return this;
        }

        /**
         * @param deleteProtectionValidation Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.
         * 
         * @return builder
         * 
         */
        public Builder deleteProtectionValidation(Boolean deleteProtectionValidation) {
            return deleteProtectionValidation(Output.of(deleteProtectionValidation));
        }

        /**
         * @param loadBalancerId The Load Balancer ID which is used to launch a new master slave server group.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerId(Output<String> loadBalancerId) {
            $.loadBalancerId = loadBalancerId;
            return this;
        }

        /**
         * @param loadBalancerId The Load Balancer ID which is used to launch a new master slave server group.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerId(String loadBalancerId) {
            return loadBalancerId(Output.of(loadBalancerId));
        }

        /**
         * @param name Name of the master slave server group.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the master slave server group.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param servers A list of ECS instances to be added. Only two ECS instances can be supported in one resource. It contains six sub-fields as `Block server` follows.
         * 
         * @return builder
         * 
         */
        public Builder servers(@Nullable Output<List<MasterSlaveServerGroupServerArgs>> servers) {
            $.servers = servers;
            return this;
        }

        /**
         * @param servers A list of ECS instances to be added. Only two ECS instances can be supported in one resource. It contains six sub-fields as `Block server` follows.
         * 
         * @return builder
         * 
         */
        public Builder servers(List<MasterSlaveServerGroupServerArgs> servers) {
            return servers(Output.of(servers));
        }

        /**
         * @param servers A list of ECS instances to be added. Only two ECS instances can be supported in one resource. It contains six sub-fields as `Block server` follows.
         * 
         * @return builder
         * 
         */
        public Builder servers(MasterSlaveServerGroupServerArgs... servers) {
            return servers(List.of(servers));
        }

        public MasterSlaveServerGroupArgs build() {
            if ($.loadBalancerId == null) {
                throw new MissingRequiredPropertyException("MasterSlaveServerGroupArgs", "loadBalancerId");
            }
            return $;
        }
    }

}
