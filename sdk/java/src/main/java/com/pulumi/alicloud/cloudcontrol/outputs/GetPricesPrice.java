// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudcontrol.outputs;

import com.pulumi.alicloud.cloudcontrol.outputs.GetPricesPriceModuleDetail;
import com.pulumi.alicloud.cloudcontrol.outputs.GetPricesPricePromotionDetail;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPricesPrice {
    /**
     * @return Currency. Value range: CNY: RMB. USD: USD. JPY: Japanese yen.
     * 
     */
    private String currency;
    /**
     * @return Discount
     * 
     */
    private Double discountPrice;
    /**
     * @return Pricing Module Price Details
     * 
     */
    private List<GetPricesPriceModuleDetail> moduleDetails;
    /**
     * @return Original Price
     * 
     */
    private Double originalPrice;
    /**
     * @return Offer Details
     * 
     */
    private List<GetPricesPricePromotionDetail> promotionDetails;
    /**
     * @return Preferential price
     * 
     */
    private Double tradePrice;

    private GetPricesPrice() {}
    /**
     * @return Currency. Value range: CNY: RMB. USD: USD. JPY: Japanese yen.
     * 
     */
    public String currency() {
        return this.currency;
    }
    /**
     * @return Discount
     * 
     */
    public Double discountPrice() {
        return this.discountPrice;
    }
    /**
     * @return Pricing Module Price Details
     * 
     */
    public List<GetPricesPriceModuleDetail> moduleDetails() {
        return this.moduleDetails;
    }
    /**
     * @return Original Price
     * 
     */
    public Double originalPrice() {
        return this.originalPrice;
    }
    /**
     * @return Offer Details
     * 
     */
    public List<GetPricesPricePromotionDetail> promotionDetails() {
        return this.promotionDetails;
    }
    /**
     * @return Preferential price
     * 
     */
    public Double tradePrice() {
        return this.tradePrice;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPricesPrice defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String currency;
        private Double discountPrice;
        private List<GetPricesPriceModuleDetail> moduleDetails;
        private Double originalPrice;
        private List<GetPricesPricePromotionDetail> promotionDetails;
        private Double tradePrice;
        public Builder() {}
        public Builder(GetPricesPrice defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currency = defaults.currency;
    	      this.discountPrice = defaults.discountPrice;
    	      this.moduleDetails = defaults.moduleDetails;
    	      this.originalPrice = defaults.originalPrice;
    	      this.promotionDetails = defaults.promotionDetails;
    	      this.tradePrice = defaults.tradePrice;
        }

        @CustomType.Setter
        public Builder currency(String currency) {
            if (currency == null) {
              throw new MissingRequiredPropertyException("GetPricesPrice", "currency");
            }
            this.currency = currency;
            return this;
        }
        @CustomType.Setter
        public Builder discountPrice(Double discountPrice) {
            if (discountPrice == null) {
              throw new MissingRequiredPropertyException("GetPricesPrice", "discountPrice");
            }
            this.discountPrice = discountPrice;
            return this;
        }
        @CustomType.Setter
        public Builder moduleDetails(List<GetPricesPriceModuleDetail> moduleDetails) {
            if (moduleDetails == null) {
              throw new MissingRequiredPropertyException("GetPricesPrice", "moduleDetails");
            }
            this.moduleDetails = moduleDetails;
            return this;
        }
        public Builder moduleDetails(GetPricesPriceModuleDetail... moduleDetails) {
            return moduleDetails(List.of(moduleDetails));
        }
        @CustomType.Setter
        public Builder originalPrice(Double originalPrice) {
            if (originalPrice == null) {
              throw new MissingRequiredPropertyException("GetPricesPrice", "originalPrice");
            }
            this.originalPrice = originalPrice;
            return this;
        }
        @CustomType.Setter
        public Builder promotionDetails(List<GetPricesPricePromotionDetail> promotionDetails) {
            if (promotionDetails == null) {
              throw new MissingRequiredPropertyException("GetPricesPrice", "promotionDetails");
            }
            this.promotionDetails = promotionDetails;
            return this;
        }
        public Builder promotionDetails(GetPricesPricePromotionDetail... promotionDetails) {
            return promotionDetails(List.of(promotionDetails));
        }
        @CustomType.Setter
        public Builder tradePrice(Double tradePrice) {
            if (tradePrice == null) {
              throw new MissingRequiredPropertyException("GetPricesPrice", "tradePrice");
            }
            this.tradePrice = tradePrice;
            return this;
        }
        public GetPricesPrice build() {
            final var _resultValue = new GetPricesPrice();
            _resultValue.currency = currency;
            _resultValue.discountPrice = discountPrice;
            _resultValue.moduleDetails = moduleDetails;
            _resultValue.originalPrice = originalPrice;
            _resultValue.promotionDetails = promotionDetails;
            _resultValue.tradePrice = tradePrice;
            return _resultValue;
        }
    }
}
