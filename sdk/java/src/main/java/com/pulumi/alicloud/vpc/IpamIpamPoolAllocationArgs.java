// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IpamIpamPoolAllocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final IpamIpamPoolAllocationArgs Empty = new IpamIpamPoolAllocationArgs();

    /**
     * The allocated address segment.
     * 
     */
    @Import(name="cidr")
    private @Nullable Output<String> cidr;

    /**
     * @return The allocated address segment.
     * 
     */
    public Optional<Output<String>> cidr() {
        return Optional.ofNullable(this.cidr);
    }

    /**
     * Create a custom reserved network segment from The IPAM address pool by entering a mask.
     * 
     * &gt; **NOTE:**  Enter at least one of `Cidr` or **CidrMask.
     * 
     */
    @Import(name="cidrMask")
    private @Nullable Output<Integer> cidrMask;

    /**
     * @return Create a custom reserved network segment from The IPAM address pool by entering a mask.
     * 
     * &gt; **NOTE:**  Enter at least one of `Cidr` or **CidrMask.
     * 
     */
    public Optional<Output<Integer>> cidrMask() {
        return Optional.ofNullable(this.cidrMask);
    }

    /**
     * The description of the ipam pool alloctaion.
     * It must be 1 to 256 characters in length and must start with an English letter or Chinese character, but cannot start with &#39;http:// &#39;or &#39;https. If it is not filled in, it is empty. The default value is empty.
     * 
     */
    @Import(name="ipamPoolAllocationDescription")
    private @Nullable Output<String> ipamPoolAllocationDescription;

    /**
     * @return The description of the ipam pool alloctaion.
     * It must be 1 to 256 characters in length and must start with an English letter or Chinese character, but cannot start with &#39;http:// &#39;or &#39;https. If it is not filled in, it is empty. The default value is empty.
     * 
     */
    public Optional<Output<String>> ipamPoolAllocationDescription() {
        return Optional.ofNullable(this.ipamPoolAllocationDescription);
    }

    /**
     * The name of the ipam pool allocation.
     * It must be 1 to 128 characters in length and cannot start with &#39;http:// &#39;or &#39;https.
     * 
     */
    @Import(name="ipamPoolAllocationName")
    private @Nullable Output<String> ipamPoolAllocationName;

    /**
     * @return The name of the ipam pool allocation.
     * It must be 1 to 128 characters in length and cannot start with &#39;http:// &#39;or &#39;https.
     * 
     */
    public Optional<Output<String>> ipamPoolAllocationName() {
        return Optional.ofNullable(this.ipamPoolAllocationName);
    }

    /**
     * The ID of the IPAM Pool.
     * 
     */
    @Import(name="ipamPoolId", required=true)
    private Output<String> ipamPoolId;

    /**
     * @return The ID of the IPAM Pool.
     * 
     */
    public Output<String> ipamPoolId() {
        return this.ipamPoolId;
    }

    private IpamIpamPoolAllocationArgs() {}

    private IpamIpamPoolAllocationArgs(IpamIpamPoolAllocationArgs $) {
        this.cidr = $.cidr;
        this.cidrMask = $.cidrMask;
        this.ipamPoolAllocationDescription = $.ipamPoolAllocationDescription;
        this.ipamPoolAllocationName = $.ipamPoolAllocationName;
        this.ipamPoolId = $.ipamPoolId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IpamIpamPoolAllocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IpamIpamPoolAllocationArgs $;

        public Builder() {
            $ = new IpamIpamPoolAllocationArgs();
        }

        public Builder(IpamIpamPoolAllocationArgs defaults) {
            $ = new IpamIpamPoolAllocationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidr The allocated address segment.
         * 
         * @return builder
         * 
         */
        public Builder cidr(@Nullable Output<String> cidr) {
            $.cidr = cidr;
            return this;
        }

        /**
         * @param cidr The allocated address segment.
         * 
         * @return builder
         * 
         */
        public Builder cidr(String cidr) {
            return cidr(Output.of(cidr));
        }

        /**
         * @param cidrMask Create a custom reserved network segment from The IPAM address pool by entering a mask.
         * 
         * &gt; **NOTE:**  Enter at least one of `Cidr` or **CidrMask.
         * 
         * @return builder
         * 
         */
        public Builder cidrMask(@Nullable Output<Integer> cidrMask) {
            $.cidrMask = cidrMask;
            return this;
        }

        /**
         * @param cidrMask Create a custom reserved network segment from The IPAM address pool by entering a mask.
         * 
         * &gt; **NOTE:**  Enter at least one of `Cidr` or **CidrMask.
         * 
         * @return builder
         * 
         */
        public Builder cidrMask(Integer cidrMask) {
            return cidrMask(Output.of(cidrMask));
        }

        /**
         * @param ipamPoolAllocationDescription The description of the ipam pool alloctaion.
         * It must be 1 to 256 characters in length and must start with an English letter or Chinese character, but cannot start with &#39;http:// &#39;or &#39;https. If it is not filled in, it is empty. The default value is empty.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolAllocationDescription(@Nullable Output<String> ipamPoolAllocationDescription) {
            $.ipamPoolAllocationDescription = ipamPoolAllocationDescription;
            return this;
        }

        /**
         * @param ipamPoolAllocationDescription The description of the ipam pool alloctaion.
         * It must be 1 to 256 characters in length and must start with an English letter or Chinese character, but cannot start with &#39;http:// &#39;or &#39;https. If it is not filled in, it is empty. The default value is empty.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolAllocationDescription(String ipamPoolAllocationDescription) {
            return ipamPoolAllocationDescription(Output.of(ipamPoolAllocationDescription));
        }

        /**
         * @param ipamPoolAllocationName The name of the ipam pool allocation.
         * It must be 1 to 128 characters in length and cannot start with &#39;http:// &#39;or &#39;https.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolAllocationName(@Nullable Output<String> ipamPoolAllocationName) {
            $.ipamPoolAllocationName = ipamPoolAllocationName;
            return this;
        }

        /**
         * @param ipamPoolAllocationName The name of the ipam pool allocation.
         * It must be 1 to 128 characters in length and cannot start with &#39;http:// &#39;or &#39;https.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolAllocationName(String ipamPoolAllocationName) {
            return ipamPoolAllocationName(Output.of(ipamPoolAllocationName));
        }

        /**
         * @param ipamPoolId The ID of the IPAM Pool.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolId(Output<String> ipamPoolId) {
            $.ipamPoolId = ipamPoolId;
            return this;
        }

        /**
         * @param ipamPoolId The ID of the IPAM Pool.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolId(String ipamPoolId) {
            return ipamPoolId(Output.of(ipamPoolId));
        }

        public IpamIpamPoolAllocationArgs build() {
            if ($.ipamPoolId == null) {
                throw new MissingRequiredPropertyException("IpamIpamPoolAllocationArgs", "ipamPoolId");
            }
            return $;
        }
    }

}
