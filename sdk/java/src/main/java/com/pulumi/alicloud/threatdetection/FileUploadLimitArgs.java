// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class FileUploadLimitArgs extends com.pulumi.resources.ResourceArgs {

    public static final FileUploadLimitArgs Empty = new FileUploadLimitArgs();

    /**
     * File Upload Threshold.
     * 
     */
    @Import(name="limit", required=true)
    private Output<Integer> limit;

    /**
     * @return File Upload Threshold.
     * 
     */
    public Output<Integer> limit() {
        return this.limit;
    }

    private FileUploadLimitArgs() {}

    private FileUploadLimitArgs(FileUploadLimitArgs $) {
        this.limit = $.limit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FileUploadLimitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FileUploadLimitArgs $;

        public Builder() {
            $ = new FileUploadLimitArgs();
        }

        public Builder(FileUploadLimitArgs defaults) {
            $ = new FileUploadLimitArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param limit File Upload Threshold.
         * 
         * @return builder
         * 
         */
        public Builder limit(Output<Integer> limit) {
            $.limit = limit;
            return this;
        }

        /**
         * @param limit File Upload Threshold.
         * 
         * @return builder
         * 
         */
        public Builder limit(Integer limit) {
            return limit(Output.of(limit));
        }

        public FileUploadLimitArgs build() {
            $.limit = Objects.requireNonNull($.limit, "expected parameter 'limit' to be non-null");
            return $;
        }
    }

}
