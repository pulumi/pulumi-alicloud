// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSitesSite {
    /**
     * @return Access type. Value:-**NS**: Managed access via NS.-**CNAME**: access through CNAME.
     * 
     */
    private String accessType;
    /**
     * @return Acceleration area
     * 
     */
    private String coverage;
    /**
     * @return Creation time
     * 
     */
    private String createTime;
    /**
     * @return The ID of the resource supplied above.
     * 
     */
    private Integer id;
    /**
     * @return The ID of the associated package instance.
     * 
     */
    private String instanceId;
    /**
     * @return Modification time
     * 
     */
    private String modifyTime;
    /**
     * @return Site Resolution Name Server List
     * 
     */
    private String nameServerList;
    /**
     * @return The ID of the resource group
     * 
     */
    private String resourceGroupId;
    /**
     * @return Site ID
     * 
     */
    private Integer siteId;
    /**
     * @return Site Name
     * 
     */
    private String siteName;
    /**
     * @return The status of the resource
     * 
     */
    private String status;

    private GetSitesSite() {}
    /**
     * @return Access type. Value:-**NS**: Managed access via NS.-**CNAME**: access through CNAME.
     * 
     */
    public String accessType() {
        return this.accessType;
    }
    /**
     * @return Acceleration area
     * 
     */
    public String coverage() {
        return this.coverage;
    }
    /**
     * @return Creation time
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The ID of the resource supplied above.
     * 
     */
    public Integer id() {
        return this.id;
    }
    /**
     * @return The ID of the associated package instance.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return Modification time
     * 
     */
    public String modifyTime() {
        return this.modifyTime;
    }
    /**
     * @return Site Resolution Name Server List
     * 
     */
    public String nameServerList() {
        return this.nameServerList;
    }
    /**
     * @return The ID of the resource group
     * 
     */
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * @return Site ID
     * 
     */
    public Integer siteId() {
        return this.siteId;
    }
    /**
     * @return Site Name
     * 
     */
    public String siteName() {
        return this.siteName;
    }
    /**
     * @return The status of the resource
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSitesSite defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessType;
        private String coverage;
        private String createTime;
        private Integer id;
        private String instanceId;
        private String modifyTime;
        private String nameServerList;
        private String resourceGroupId;
        private Integer siteId;
        private String siteName;
        private String status;
        public Builder() {}
        public Builder(GetSitesSite defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessType = defaults.accessType;
    	      this.coverage = defaults.coverage;
    	      this.createTime = defaults.createTime;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.modifyTime = defaults.modifyTime;
    	      this.nameServerList = defaults.nameServerList;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.siteId = defaults.siteId;
    	      this.siteName = defaults.siteName;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder accessType(String accessType) {
            if (accessType == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "accessType");
            }
            this.accessType = accessType;
            return this;
        }
        @CustomType.Setter
        public Builder coverage(String coverage) {
            if (coverage == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "coverage");
            }
            this.coverage = coverage;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder modifyTime(String modifyTime) {
            if (modifyTime == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "modifyTime");
            }
            this.modifyTime = modifyTime;
            return this;
        }
        @CustomType.Setter
        public Builder nameServerList(String nameServerList) {
            if (nameServerList == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "nameServerList");
            }
            this.nameServerList = nameServerList;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupId(String resourceGroupId) {
            if (resourceGroupId == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "resourceGroupId");
            }
            this.resourceGroupId = resourceGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder siteId(Integer siteId) {
            if (siteId == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "siteId");
            }
            this.siteId = siteId;
            return this;
        }
        @CustomType.Setter
        public Builder siteName(String siteName) {
            if (siteName == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "siteName");
            }
            this.siteName = siteName;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetSitesSite", "status");
            }
            this.status = status;
            return this;
        }
        public GetSitesSite build() {
            final var _resultValue = new GetSitesSite();
            _resultValue.accessType = accessType;
            _resultValue.coverage = coverage;
            _resultValue.createTime = createTime;
            _resultValue.id = id;
            _resultValue.instanceId = instanceId;
            _resultValue.modifyTime = modifyTime;
            _resultValue.nameServerList = nameServerList;
            _resultValue.resourceGroupId = resourceGroupId;
            _resultValue.siteId = siteId;
            _resultValue.siteName = siteName;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
