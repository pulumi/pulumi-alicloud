// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ram;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.ram.PolicyArgs;
import com.pulumi.alicloud.ram.inputs.PolicyState;
import com.pulumi.alicloud.ram.outputs.PolicyStatement;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a RAM Policy resource.
 * 
 * For information about RAM Policy and how to use it, see [What is Policy](https://www.alibabacloud.com/help/en/ram/developer-reference/api-ram-2015-05-01-createpolicy).
 * 
 * &gt; **NOTE:** Available since v1.0.0.
 * 
 * &gt; **NOTE:** When you want to destroy this resource forcefully(means remove all the relationships associated with it automatically and then destroy it) without set `force`  with `true` at beginning, you need add `force = true` to configuration file and run `pulumi preview`, then you can delete resource forcefully.
 * 
 * &gt; **NOTE:** Each policy can own at most 5 versions and the oldest version will be removed after its version achieves 5.
 * 
 * &gt; **NOTE:** If the policy has multiple versions, all non-default versions will be deleted first when deleting policy.
 * 
 * ## Example Usage
 * 
 * Basic Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.Integer;
 * import com.pulumi.random.IntegerArgs;
 * import com.pulumi.alicloud.ram.Policy;
 * import com.pulumi.alicloud.ram.PolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Create a new RAM Policy.
 *         var default_ = new Integer("default", IntegerArgs.builder()
 *             .min(10000)
 *             .max(99999)
 *             .build());
 * 
 *         var policy = new Policy("policy", PolicyArgs.builder()
 *             .policyName(String.format("tf-example-%s", default_.result()))
 *             .policyDocument("""
 *   {
 *     \"Statement\": [
 *       {
 *         \"Action\": [
 *           \"oss:ListObjects\",
 *           \"oss:GetObject\"
 *         ],
 *         \"Effect\": \"Allow\",
 *         \"Resource\": [
 *           \"acs:oss:*:*:mybucket\",
 *           \"acs:oss:*:*:mybucket/*\"
 *         ]
 *       }
 *     ],
 *       \"Version\": \"1\"
 *   }
 *             """)
 *             .description("this is a policy test")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * RAM Policy can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:ram/policy:Policy example &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:ram/policy:Policy")
public class Policy extends com.pulumi.resources.CustomResource {
    /**
     * Number of attachments of the policy.
     * 
     */
    @Export(name="attachmentCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> attachmentCount;

    /**
     * @return Number of attachments of the policy.
     * 
     */
    public Output<Integer> attachmentCount() {
        return this.attachmentCount;
    }
    /**
     * (Available since v1.246.0) The create time of the policy.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return (Available since v1.246.0) The create time of the policy.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The default version ID of the policy.
     * 
     */
    @Export(name="defaultVersion", refs={String.class}, tree="[0]")
    private Output<String> defaultVersion;

    /**
     * @return The default version ID of the policy.
     * 
     */
    public Output<String> defaultVersion() {
        return this.defaultVersion;
    }
    /**
     * The description of the policy. It can be 1 to 1024 characters in length.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the policy. It can be 1 to 1024 characters in length.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Field `document` has been deprecated from provider version 1.114.0. New field `policy_document` instead.
     * 
     * @deprecated
     * Field &#39;document&#39; has been deprecated from provider version 1.114.0. New field &#39;policy_document&#39; instead.
     * 
     */
    @Deprecated /* Field 'document' has been deprecated from provider version 1.114.0. New field 'policy_document' instead. */
    @Export(name="document", refs={String.class}, tree="[0]")
    private Output<String> document;

    /**
     * @return Field `document` has been deprecated from provider version 1.114.0. New field `policy_document` instead.
     * 
     */
    public Output<String> document() {
        return this.document;
    }
    /**
     * Specifies whether to force delete the Policy. Default value: `false`. Valid values:
     * 
     */
    @Export(name="force", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> force;

    /**
     * @return Specifies whether to force delete the Policy. Default value: `false`. Valid values:
     * 
     */
    public Output<Optional<Boolean>> force() {
        return Codegen.optional(this.force);
    }
    /**
     * Field `name` has been deprecated from provider version 1.114.0. New field `policy_name` instead.
     * 
     * @deprecated
     * Field &#39;name&#39; has been deprecated from provider version 1.114.0. New field &#39;policy_name&#39; instead.
     * 
     */
    @Deprecated /* Field 'name' has been deprecated from provider version 1.114.0. New field 'policy_name' instead. */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Field `name` has been deprecated from provider version 1.114.0. New field `policy_name` instead.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The content of the policy. The maximum length is 6144 bytes.
     * 
     */
    @Export(name="policyDocument", refs={String.class}, tree="[0]")
    private Output<String> policyDocument;

    /**
     * @return The content of the policy. The maximum length is 6144 bytes.
     * 
     */
    public Output<String> policyDocument() {
        return this.policyDocument;
    }
    /**
     * The policy name. It can be 1 to 128 characters in length and can contain English letters, digits, and dashes (-).
     * 
     */
    @Export(name="policyName", refs={String.class}, tree="[0]")
    private Output<String> policyName;

    /**
     * @return The policy name. It can be 1 to 128 characters in length and can contain English letters, digits, and dashes (-).
     * 
     */
    public Output<String> policyName() {
        return this.policyName;
    }
    /**
     * The automatic rotation mechanism of policy versions can delete historical policy versions. The default value is None. Valid values:
     * - `None`: Turn off the rotation mechanism.
     * - `DeleteOldestNonDefaultVersionWhenLimitExceeded`: When the number of permission policy versions exceeds the limit, the oldest and inactive version is deleted.
     * 
     */
    @Export(name="rotateStrategy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> rotateStrategy;

    /**
     * @return The automatic rotation mechanism of policy versions can delete historical policy versions. The default value is None. Valid values:
     * - `None`: Turn off the rotation mechanism.
     * - `DeleteOldestNonDefaultVersionWhenLimitExceeded`: When the number of permission policy versions exceeds the limit, the oldest and inactive version is deleted.
     * 
     */
    public Output<Optional<String>> rotateStrategy() {
        return Codegen.optional(this.rotateStrategy);
    }
    /**
     * Field `statement` has been deprecated from provider version 1.49.0. New field `document` instead. See `statement` below.
     * 
     * @deprecated
     * Field &#39;statement&#39; has been deprecated from version 1.49.0, and use field &#39;document&#39; to replace.
     * 
     */
    @Deprecated /* Field 'statement' has been deprecated from version 1.49.0, and use field 'document' to replace.  */
    @Export(name="statements", refs={List.class,PolicyStatement.class}, tree="[0,1]")
    private Output<List<PolicyStatement>> statements;

    /**
     * @return Field `statement` has been deprecated from provider version 1.49.0. New field `document` instead. See `statement` below.
     * 
     */
    public Output<List<PolicyStatement>> statements() {
        return this.statements;
    }
    /**
     * The list of tags on the policy.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return The list of tags on the policy.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The type of the policy.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of the policy.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Field `version` has been deprecated from provider version 1.49.0. New field `document` instead.
     * 
     * @deprecated
     * Field &#39;version&#39; has been deprecated from version 1.49.0, and use field &#39;document&#39; to replace.
     * 
     */
    @Deprecated /* Field 'version' has been deprecated from version 1.49.0, and use field 'document' to replace.  */
    @Export(name="version", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> version;

    /**
     * @return Field `version` has been deprecated from provider version 1.49.0. New field `document` instead.
     * 
     */
    public Output<Optional<String>> version() {
        return Codegen.optional(this.version);
    }
    /**
     * The ID of the default policy version.
     * 
     */
    @Export(name="versionId", refs={String.class}, tree="[0]")
    private Output<String> versionId;

    /**
     * @return The ID of the default policy version.
     * 
     */
    public Output<String> versionId() {
        return this.versionId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Policy(java.lang.String name) {
        this(name, PolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Policy(java.lang.String name, @Nullable PolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Policy(java.lang.String name, @Nullable PolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ram/policy:Policy", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Policy(java.lang.String name, Output<java.lang.String> id, @Nullable PolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ram/policy:Policy", name, state, makeResourceOptions(options, id), false);
    }

    private static PolicyArgs makeArgs(@Nullable PolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? PolicyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Policy get(java.lang.String name, Output<java.lang.String> id, @Nullable PolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Policy(name, id, state, options);
    }
}
