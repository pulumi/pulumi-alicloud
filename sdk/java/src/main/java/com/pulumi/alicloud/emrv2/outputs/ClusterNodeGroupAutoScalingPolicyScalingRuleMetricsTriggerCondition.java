// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.emrv2.outputs;

import com.pulumi.alicloud.emrv2.outputs.ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerConditionTag;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerCondition {
    private String comparisonOperator;
    private String metricName;
    private String statistics;
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    private @Nullable List<ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerConditionTag> tags;
    private Double threshold;

    private ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerCondition() {}
    public String comparisonOperator() {
        return this.comparisonOperator;
    }
    public String metricName() {
        return this.metricName;
    }
    public String statistics() {
        return this.statistics;
    }
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public List<ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerConditionTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    public Double threshold() {
        return this.threshold;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String comparisonOperator;
        private String metricName;
        private String statistics;
        private @Nullable List<ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerConditionTag> tags;
        private Double threshold;
        public Builder() {}
        public Builder(ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comparisonOperator = defaults.comparisonOperator;
    	      this.metricName = defaults.metricName;
    	      this.statistics = defaults.statistics;
    	      this.tags = defaults.tags;
    	      this.threshold = defaults.threshold;
        }

        @CustomType.Setter
        public Builder comparisonOperator(String comparisonOperator) {
            if (comparisonOperator == null) {
              throw new MissingRequiredPropertyException("ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerCondition", "comparisonOperator");
            }
            this.comparisonOperator = comparisonOperator;
            return this;
        }
        @CustomType.Setter
        public Builder metricName(String metricName) {
            if (metricName == null) {
              throw new MissingRequiredPropertyException("ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerCondition", "metricName");
            }
            this.metricName = metricName;
            return this;
        }
        @CustomType.Setter
        public Builder statistics(String statistics) {
            if (statistics == null) {
              throw new MissingRequiredPropertyException("ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerCondition", "statistics");
            }
            this.statistics = statistics;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerConditionTag> tags) {

            this.tags = tags;
            return this;
        }
        public Builder tags(ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerConditionTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder threshold(Double threshold) {
            if (threshold == null) {
              throw new MissingRequiredPropertyException("ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerCondition", "threshold");
            }
            this.threshold = threshold;
            return this;
        }
        public ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerCondition build() {
            final var _resultValue = new ClusterNodeGroupAutoScalingPolicyScalingRuleMetricsTriggerCondition();
            _resultValue.comparisonOperator = comparisonOperator;
            _resultValue.metricName = metricName;
            _resultValue.statistics = statistics;
            _resultValue.tags = tags;
            _resultValue.threshold = threshold;
            return _resultValue;
        }
    }
}
