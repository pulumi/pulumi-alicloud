// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.alb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadBalancerZoneShiftedAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final LoadBalancerZoneShiftedAttachmentState Empty = new LoadBalancerZoneShiftedAttachmentState();

    /**
     * The ID of the load balancing instance.
     * 
     */
    @Import(name="loadBalancerId")
    private @Nullable Output<String> loadBalancerId;

    /**
     * @return The ID of the load balancing instance.
     * 
     */
    public Optional<Output<String>> loadBalancerId() {
        return Optional.ofNullable(this.loadBalancerId);
    }

    /**
     * Availability zone status. Value:
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Availability zone status. Value:
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The VSwitch corresponding to the zone. By default, each zone uses one VSwitch and one subnet.
     * 
     */
    @Import(name="vswitchId")
    private @Nullable Output<String> vswitchId;

    /**
     * @return The VSwitch corresponding to the zone. By default, each zone uses one VSwitch and one subnet.
     * 
     */
    public Optional<Output<String>> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    /**
     * The ID of the zone.
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return The ID of the zone.
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private LoadBalancerZoneShiftedAttachmentState() {}

    private LoadBalancerZoneShiftedAttachmentState(LoadBalancerZoneShiftedAttachmentState $) {
        this.loadBalancerId = $.loadBalancerId;
        this.status = $.status;
        this.vswitchId = $.vswitchId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerZoneShiftedAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerZoneShiftedAttachmentState $;

        public Builder() {
            $ = new LoadBalancerZoneShiftedAttachmentState();
        }

        public Builder(LoadBalancerZoneShiftedAttachmentState defaults) {
            $ = new LoadBalancerZoneShiftedAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param loadBalancerId The ID of the load balancing instance.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerId(@Nullable Output<String> loadBalancerId) {
            $.loadBalancerId = loadBalancerId;
            return this;
        }

        /**
         * @param loadBalancerId The ID of the load balancing instance.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerId(String loadBalancerId) {
            return loadBalancerId(Output.of(loadBalancerId));
        }

        /**
         * @param status Availability zone status. Value:
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Availability zone status. Value:
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param vswitchId The VSwitch corresponding to the zone. By default, each zone uses one VSwitch and one subnet.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(@Nullable Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId The VSwitch corresponding to the zone. By default, each zone uses one VSwitch and one subnet.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        /**
         * @param zoneId The ID of the zone.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The ID of the zone.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public LoadBalancerZoneShiftedAttachmentState build() {
            return $;
        }
    }

}
