// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ros.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TemplateScratchSourceTagArgs extends com.pulumi.resources.ResourceArgs {

    public static final TemplateScratchSourceTagArgs Empty = new TemplateScratchSourceTagArgs();

    /**
     * Source label. **NOTE:** A maximum of 10 source labels can be configured.
     * 
     */
    @Import(name="resourceTags", required=true)
    private Output<Map<String,String>> resourceTags;

    /**
     * @return Source label. **NOTE:** A maximum of 10 source labels can be configured.
     * 
     */
    public Output<Map<String,String>> resourceTags() {
        return this.resourceTags;
    }

    @Import(name="resourceTypeFilters")
    private @Nullable Output<List<String>> resourceTypeFilters;

    public Optional<Output<List<String>>> resourceTypeFilters() {
        return Optional.ofNullable(this.resourceTypeFilters);
    }

    private TemplateScratchSourceTagArgs() {}

    private TemplateScratchSourceTagArgs(TemplateScratchSourceTagArgs $) {
        this.resourceTags = $.resourceTags;
        this.resourceTypeFilters = $.resourceTypeFilters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TemplateScratchSourceTagArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TemplateScratchSourceTagArgs $;

        public Builder() {
            $ = new TemplateScratchSourceTagArgs();
        }

        public Builder(TemplateScratchSourceTagArgs defaults) {
            $ = new TemplateScratchSourceTagArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceTags Source label. **NOTE:** A maximum of 10 source labels can be configured.
         * 
         * @return builder
         * 
         */
        public Builder resourceTags(Output<Map<String,String>> resourceTags) {
            $.resourceTags = resourceTags;
            return this;
        }

        /**
         * @param resourceTags Source label. **NOTE:** A maximum of 10 source labels can be configured.
         * 
         * @return builder
         * 
         */
        public Builder resourceTags(Map<String,String> resourceTags) {
            return resourceTags(Output.of(resourceTags));
        }

        public Builder resourceTypeFilters(@Nullable Output<List<String>> resourceTypeFilters) {
            $.resourceTypeFilters = resourceTypeFilters;
            return this;
        }

        public Builder resourceTypeFilters(List<String> resourceTypeFilters) {
            return resourceTypeFilters(Output.of(resourceTypeFilters));
        }

        public Builder resourceTypeFilters(String... resourceTypeFilters) {
            return resourceTypeFilters(List.of(resourceTypeFilters));
        }

        public TemplateScratchSourceTagArgs build() {
            if ($.resourceTags == null) {
                throw new MissingRequiredPropertyException("TemplateScratchSourceTagArgs", "resourceTags");
            }
            return $;
        }
    }

}
