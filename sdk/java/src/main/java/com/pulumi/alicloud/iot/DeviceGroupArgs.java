// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.iot;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeviceGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeviceGroupArgs Empty = new DeviceGroupArgs();

    /**
     * The GroupDesc of the device group.
     * 
     */
    @Import(name="groupDesc")
    private @Nullable Output<String> groupDesc;

    /**
     * @return The GroupDesc of the device group.
     * 
     */
    public Optional<Output<String>> groupDesc() {
        return Optional.ofNullable(this.groupDesc);
    }

    /**
     * The GroupName of the device group.
     * 
     */
    @Import(name="groupName", required=true)
    private Output<String> groupName;

    /**
     * @return The GroupName of the device group.
     * 
     */
    public Output<String> groupName() {
        return this.groupName;
    }

    /**
     * The id of the Iot Instance.
     * 
     */
    @Import(name="iotInstanceId")
    private @Nullable Output<String> iotInstanceId;

    /**
     * @return The id of the Iot Instance.
     * 
     */
    public Optional<Output<String>> iotInstanceId() {
        return Optional.ofNullable(this.iotInstanceId);
    }

    /**
     * The id of the SuperGroup.
     * 
     */
    @Import(name="superGroupId")
    private @Nullable Output<String> superGroupId;

    /**
     * @return The id of the SuperGroup.
     * 
     */
    public Optional<Output<String>> superGroupId() {
        return Optional.ofNullable(this.superGroupId);
    }

    private DeviceGroupArgs() {}

    private DeviceGroupArgs(DeviceGroupArgs $) {
        this.groupDesc = $.groupDesc;
        this.groupName = $.groupName;
        this.iotInstanceId = $.iotInstanceId;
        this.superGroupId = $.superGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeviceGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeviceGroupArgs $;

        public Builder() {
            $ = new DeviceGroupArgs();
        }

        public Builder(DeviceGroupArgs defaults) {
            $ = new DeviceGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupDesc The GroupDesc of the device group.
         * 
         * @return builder
         * 
         */
        public Builder groupDesc(@Nullable Output<String> groupDesc) {
            $.groupDesc = groupDesc;
            return this;
        }

        /**
         * @param groupDesc The GroupDesc of the device group.
         * 
         * @return builder
         * 
         */
        public Builder groupDesc(String groupDesc) {
            return groupDesc(Output.of(groupDesc));
        }

        /**
         * @param groupName The GroupName of the device group.
         * 
         * @return builder
         * 
         */
        public Builder groupName(Output<String> groupName) {
            $.groupName = groupName;
            return this;
        }

        /**
         * @param groupName The GroupName of the device group.
         * 
         * @return builder
         * 
         */
        public Builder groupName(String groupName) {
            return groupName(Output.of(groupName));
        }

        /**
         * @param iotInstanceId The id of the Iot Instance.
         * 
         * @return builder
         * 
         */
        public Builder iotInstanceId(@Nullable Output<String> iotInstanceId) {
            $.iotInstanceId = iotInstanceId;
            return this;
        }

        /**
         * @param iotInstanceId The id of the Iot Instance.
         * 
         * @return builder
         * 
         */
        public Builder iotInstanceId(String iotInstanceId) {
            return iotInstanceId(Output.of(iotInstanceId));
        }

        /**
         * @param superGroupId The id of the SuperGroup.
         * 
         * @return builder
         * 
         */
        public Builder superGroupId(@Nullable Output<String> superGroupId) {
            $.superGroupId = superGroupId;
            return this;
        }

        /**
         * @param superGroupId The id of the SuperGroup.
         * 
         * @return builder
         * 
         */
        public Builder superGroupId(String superGroupId) {
            return superGroupId(Output.of(superGroupId));
        }

        public DeviceGroupArgs build() {
            if ($.groupName == null) {
                throw new MissingRequiredPropertyException("DeviceGroupArgs", "groupName");
            }
            return $;
        }
    }

}
