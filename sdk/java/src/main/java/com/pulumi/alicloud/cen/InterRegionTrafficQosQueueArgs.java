// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InterRegionTrafficQosQueueArgs extends com.pulumi.resources.ResourceArgs {

    public static final InterRegionTrafficQosQueueArgs Empty = new InterRegionTrafficQosQueueArgs();

    /**
     * The guaranteed bandwidth value. If guaranteed by bandwidth is selected for TrafficQosPolicy, this value is valid.
     * 
     */
    @Import(name="bandwidth")
    private @Nullable Output<String> bandwidth;

    /**
     * @return The guaranteed bandwidth value. If guaranteed by bandwidth is selected for TrafficQosPolicy, this value is valid.
     * 
     */
    public Optional<Output<String>> bandwidth() {
        return Optional.ofNullable(this.bandwidth);
    }

    /**
     * The DSCP value of the traffic packet to be matched in the current queue, ranging from 0 to 63.
     * 
     */
    @Import(name="dscps", required=true)
    private Output<List<Integer>> dscps;

    /**
     * @return The DSCP value of the traffic packet to be matched in the current queue, ranging from 0 to 63.
     * 
     */
    public Output<List<Integer>> dscps() {
        return this.dscps;
    }

    /**
     * The description information of the traffic scheduling policy.
     * 
     */
    @Import(name="interRegionTrafficQosQueueDescription")
    private @Nullable Output<String> interRegionTrafficQosQueueDescription;

    /**
     * @return The description information of the traffic scheduling policy.
     * 
     */
    public Optional<Output<String>> interRegionTrafficQosQueueDescription() {
        return Optional.ofNullable(this.interRegionTrafficQosQueueDescription);
    }

    /**
     * The name of the traffic scheduling policy.
     * 
     */
    @Import(name="interRegionTrafficQosQueueName")
    private @Nullable Output<String> interRegionTrafficQosQueueName;

    /**
     * @return The name of the traffic scheduling policy.
     * 
     */
    public Optional<Output<String>> interRegionTrafficQosQueueName() {
        return Optional.ofNullable(this.interRegionTrafficQosQueueName);
    }

    /**
     * The percentage of cross-region bandwidth that the current queue can use.
     * 
     */
    @Import(name="remainBandwidthPercent")
    private @Nullable Output<Integer> remainBandwidthPercent;

    /**
     * @return The percentage of cross-region bandwidth that the current queue can use.
     * 
     */
    public Optional<Output<Integer>> remainBandwidthPercent() {
        return Optional.ofNullable(this.remainBandwidthPercent);
    }

    /**
     * The ID of the traffic scheduling policy.
     * 
     */
    @Import(name="trafficQosPolicyId", required=true)
    private Output<String> trafficQosPolicyId;

    /**
     * @return The ID of the traffic scheduling policy.
     * 
     */
    public Output<String> trafficQosPolicyId() {
        return this.trafficQosPolicyId;
    }

    private InterRegionTrafficQosQueueArgs() {}

    private InterRegionTrafficQosQueueArgs(InterRegionTrafficQosQueueArgs $) {
        this.bandwidth = $.bandwidth;
        this.dscps = $.dscps;
        this.interRegionTrafficQosQueueDescription = $.interRegionTrafficQosQueueDescription;
        this.interRegionTrafficQosQueueName = $.interRegionTrafficQosQueueName;
        this.remainBandwidthPercent = $.remainBandwidthPercent;
        this.trafficQosPolicyId = $.trafficQosPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InterRegionTrafficQosQueueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InterRegionTrafficQosQueueArgs $;

        public Builder() {
            $ = new InterRegionTrafficQosQueueArgs();
        }

        public Builder(InterRegionTrafficQosQueueArgs defaults) {
            $ = new InterRegionTrafficQosQueueArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bandwidth The guaranteed bandwidth value. If guaranteed by bandwidth is selected for TrafficQosPolicy, this value is valid.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(@Nullable Output<String> bandwidth) {
            $.bandwidth = bandwidth;
            return this;
        }

        /**
         * @param bandwidth The guaranteed bandwidth value. If guaranteed by bandwidth is selected for TrafficQosPolicy, this value is valid.
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(String bandwidth) {
            return bandwidth(Output.of(bandwidth));
        }

        /**
         * @param dscps The DSCP value of the traffic packet to be matched in the current queue, ranging from 0 to 63.
         * 
         * @return builder
         * 
         */
        public Builder dscps(Output<List<Integer>> dscps) {
            $.dscps = dscps;
            return this;
        }

        /**
         * @param dscps The DSCP value of the traffic packet to be matched in the current queue, ranging from 0 to 63.
         * 
         * @return builder
         * 
         */
        public Builder dscps(List<Integer> dscps) {
            return dscps(Output.of(dscps));
        }

        /**
         * @param dscps The DSCP value of the traffic packet to be matched in the current queue, ranging from 0 to 63.
         * 
         * @return builder
         * 
         */
        public Builder dscps(Integer... dscps) {
            return dscps(List.of(dscps));
        }

        /**
         * @param interRegionTrafficQosQueueDescription The description information of the traffic scheduling policy.
         * 
         * @return builder
         * 
         */
        public Builder interRegionTrafficQosQueueDescription(@Nullable Output<String> interRegionTrafficQosQueueDescription) {
            $.interRegionTrafficQosQueueDescription = interRegionTrafficQosQueueDescription;
            return this;
        }

        /**
         * @param interRegionTrafficQosQueueDescription The description information of the traffic scheduling policy.
         * 
         * @return builder
         * 
         */
        public Builder interRegionTrafficQosQueueDescription(String interRegionTrafficQosQueueDescription) {
            return interRegionTrafficQosQueueDescription(Output.of(interRegionTrafficQosQueueDescription));
        }

        /**
         * @param interRegionTrafficQosQueueName The name of the traffic scheduling policy.
         * 
         * @return builder
         * 
         */
        public Builder interRegionTrafficQosQueueName(@Nullable Output<String> interRegionTrafficQosQueueName) {
            $.interRegionTrafficQosQueueName = interRegionTrafficQosQueueName;
            return this;
        }

        /**
         * @param interRegionTrafficQosQueueName The name of the traffic scheduling policy.
         * 
         * @return builder
         * 
         */
        public Builder interRegionTrafficQosQueueName(String interRegionTrafficQosQueueName) {
            return interRegionTrafficQosQueueName(Output.of(interRegionTrafficQosQueueName));
        }

        /**
         * @param remainBandwidthPercent The percentage of cross-region bandwidth that the current queue can use.
         * 
         * @return builder
         * 
         */
        public Builder remainBandwidthPercent(@Nullable Output<Integer> remainBandwidthPercent) {
            $.remainBandwidthPercent = remainBandwidthPercent;
            return this;
        }

        /**
         * @param remainBandwidthPercent The percentage of cross-region bandwidth that the current queue can use.
         * 
         * @return builder
         * 
         */
        public Builder remainBandwidthPercent(Integer remainBandwidthPercent) {
            return remainBandwidthPercent(Output.of(remainBandwidthPercent));
        }

        /**
         * @param trafficQosPolicyId The ID of the traffic scheduling policy.
         * 
         * @return builder
         * 
         */
        public Builder trafficQosPolicyId(Output<String> trafficQosPolicyId) {
            $.trafficQosPolicyId = trafficQosPolicyId;
            return this;
        }

        /**
         * @param trafficQosPolicyId The ID of the traffic scheduling policy.
         * 
         * @return builder
         * 
         */
        public Builder trafficQosPolicyId(String trafficQosPolicyId) {
            return trafficQosPolicyId(Output.of(trafficQosPolicyId));
        }

        public InterRegionTrafficQosQueueArgs build() {
            if ($.dscps == null) {
                throw new MissingRequiredPropertyException("InterRegionTrafficQosQueueArgs", "dscps");
            }
            if ($.trafficQosPolicyId == null) {
                throw new MissingRequiredPropertyException("InterRegionTrafficQosQueueArgs", "trafficQosPolicyId");
            }
            return $;
        }
    }

}
