// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sls.outputs;

import com.pulumi.alicloud.sls.outputs.GetAlertsAlertConfiguration;
import com.pulumi.alicloud.sls.outputs.GetAlertsAlertSchedule;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAlertsAlert {
    /**
     * @return Alert rule ID, unique under Project
     * 
     */
    private String alertName;
    /**
     * @return Detailed configuration of alarm monitoring rules
     * 
     */
    private GetAlertsAlertConfiguration configuration;
    /**
     * @return Compatible fields, set to empty strings.
     * 
     */
    private String description;
    /**
     * @return Display name of the alarm rule
     * 
     */
    private String displayName;
    /**
     * @return The ID of the resource supplied above.
     * 
     */
    private String id;
    /**
     * @return Check the frequency-dependent configuration
     * 
     */
    private GetAlertsAlertSchedule schedule;

    private GetAlertsAlert() {}
    /**
     * @return Alert rule ID, unique under Project
     * 
     */
    public String alertName() {
        return this.alertName;
    }
    /**
     * @return Detailed configuration of alarm monitoring rules
     * 
     */
    public GetAlertsAlertConfiguration configuration() {
        return this.configuration;
    }
    /**
     * @return Compatible fields, set to empty strings.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Display name of the alarm rule
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The ID of the resource supplied above.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Check the frequency-dependent configuration
     * 
     */
    public GetAlertsAlertSchedule schedule() {
        return this.schedule;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAlertsAlert defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String alertName;
        private GetAlertsAlertConfiguration configuration;
        private String description;
        private String displayName;
        private String id;
        private GetAlertsAlertSchedule schedule;
        public Builder() {}
        public Builder(GetAlertsAlert defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alertName = defaults.alertName;
    	      this.configuration = defaults.configuration;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.schedule = defaults.schedule;
        }

        @CustomType.Setter
        public Builder alertName(String alertName) {
            if (alertName == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlert", "alertName");
            }
            this.alertName = alertName;
            return this;
        }
        @CustomType.Setter
        public Builder configuration(GetAlertsAlertConfiguration configuration) {
            if (configuration == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlert", "configuration");
            }
            this.configuration = configuration;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlert", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlert", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlert", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder schedule(GetAlertsAlertSchedule schedule) {
            if (schedule == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlert", "schedule");
            }
            this.schedule = schedule;
            return this;
        }
        public GetAlertsAlert build() {
            final var _resultValue = new GetAlertsAlert();
            _resultValue.alertName = alertName;
            _resultValue.configuration = configuration;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.schedule = schedule;
            return _resultValue;
        }
    }
}
