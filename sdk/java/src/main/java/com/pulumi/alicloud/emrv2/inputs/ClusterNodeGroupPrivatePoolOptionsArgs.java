// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.emrv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterNodeGroupPrivatePoolOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterNodeGroupPrivatePoolOptionsArgs Empty = new ClusterNodeGroupPrivatePoolOptionsArgs();

    /**
     * The node group specific private pool resource match criteria. Valid values: `Open`, `Target`, `None`.
     * 
     */
    @Import(name="matchCriteria")
    private @Nullable Output<String> matchCriteria;

    /**
     * @return The node group specific private pool resource match criteria. Valid values: `Open`, `Target`, `None`.
     * 
     */
    public Optional<Output<String>> matchCriteria() {
        return Optional.ofNullable(this.matchCriteria);
    }

    /**
     * The node group specific private pool resource ids.
     * 
     */
    @Import(name="privatePoolIds")
    private @Nullable Output<List<String>> privatePoolIds;

    /**
     * @return The node group specific private pool resource ids.
     * 
     */
    public Optional<Output<List<String>>> privatePoolIds() {
        return Optional.ofNullable(this.privatePoolIds);
    }

    private ClusterNodeGroupPrivatePoolOptionsArgs() {}

    private ClusterNodeGroupPrivatePoolOptionsArgs(ClusterNodeGroupPrivatePoolOptionsArgs $) {
        this.matchCriteria = $.matchCriteria;
        this.privatePoolIds = $.privatePoolIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterNodeGroupPrivatePoolOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterNodeGroupPrivatePoolOptionsArgs $;

        public Builder() {
            $ = new ClusterNodeGroupPrivatePoolOptionsArgs();
        }

        public Builder(ClusterNodeGroupPrivatePoolOptionsArgs defaults) {
            $ = new ClusterNodeGroupPrivatePoolOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param matchCriteria The node group specific private pool resource match criteria. Valid values: `Open`, `Target`, `None`.
         * 
         * @return builder
         * 
         */
        public Builder matchCriteria(@Nullable Output<String> matchCriteria) {
            $.matchCriteria = matchCriteria;
            return this;
        }

        /**
         * @param matchCriteria The node group specific private pool resource match criteria. Valid values: `Open`, `Target`, `None`.
         * 
         * @return builder
         * 
         */
        public Builder matchCriteria(String matchCriteria) {
            return matchCriteria(Output.of(matchCriteria));
        }

        /**
         * @param privatePoolIds The node group specific private pool resource ids.
         * 
         * @return builder
         * 
         */
        public Builder privatePoolIds(@Nullable Output<List<String>> privatePoolIds) {
            $.privatePoolIds = privatePoolIds;
            return this;
        }

        /**
         * @param privatePoolIds The node group specific private pool resource ids.
         * 
         * @return builder
         * 
         */
        public Builder privatePoolIds(List<String> privatePoolIds) {
            return privatePoolIds(Output.of(privatePoolIds));
        }

        /**
         * @param privatePoolIds The node group specific private pool resource ids.
         * 
         * @return builder
         * 
         */
        public Builder privatePoolIds(String... privatePoolIds) {
            return privatePoolIds(List.of(privatePoolIds));
        }

        public ClusterNodeGroupPrivatePoolOptionsArgs build() {
            return $;
        }
    }

}
