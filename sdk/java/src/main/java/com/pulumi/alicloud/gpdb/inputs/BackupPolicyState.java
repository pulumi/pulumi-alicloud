// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.gpdb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final BackupPolicyState Empty = new BackupPolicyState();

    /**
     * Data backup retention days.
     * 
     */
    @Import(name="backupRetentionPeriod")
    private @Nullable Output<Integer> backupRetentionPeriod;

    /**
     * @return Data backup retention days.
     * 
     */
    public Optional<Output<Integer>> backupRetentionPeriod() {
        return Optional.ofNullable(this.backupRetentionPeriod);
    }

    /**
     * The instance ID.
     * &gt; **NOTE:**  You can call the DescribeDBInstances operation to view the details of all AnalyticDB PostgreSQL instances in the target region, including the instance ID.
     * 
     */
    @Import(name="dbInstanceId")
    private @Nullable Output<String> dbInstanceId;

    /**
     * @return The instance ID.
     * &gt; **NOTE:**  You can call the DescribeDBInstances operation to view the details of all AnalyticDB PostgreSQL instances in the target region, including the instance ID.
     * 
     */
    public Optional<Output<String>> dbInstanceId() {
        return Optional.ofNullable(this.dbInstanceId);
    }

    /**
     * Whether to enable automatic recovery points. Value Description:
     * - **true**: enabled.
     * - **false**: Closed.
     * 
     */
    @Import(name="enableRecoveryPoint")
    private @Nullable Output<Boolean> enableRecoveryPoint;

    /**
     * @return Whether to enable automatic recovery points. Value Description:
     * - **true**: enabled.
     * - **false**: Closed.
     * 
     */
    public Optional<Output<Boolean>> enableRecoveryPoint() {
        return Optional.ofNullable(this.enableRecoveryPoint);
    }

    /**
     * Data backup cycle. Separate multiple values with commas (,). Value Description:
     * - **Monday**: Monday.
     * - **Tuesday**: Tuesday.
     * - **Wednesday**: Wednesday.
     * - **Thursday**: Thursday.
     * - **Friday**: Friday.
     * - **Saturday**: Saturday.
     * - **Sunday**: Sunday.
     * 
     */
    @Import(name="preferredBackupPeriod")
    private @Nullable Output<String> preferredBackupPeriod;

    /**
     * @return Data backup cycle. Separate multiple values with commas (,). Value Description:
     * - **Monday**: Monday.
     * - **Tuesday**: Tuesday.
     * - **Wednesday**: Wednesday.
     * - **Thursday**: Thursday.
     * - **Friday**: Friday.
     * - **Saturday**: Saturday.
     * - **Sunday**: Sunday.
     * 
     */
    public Optional<Output<String>> preferredBackupPeriod() {
        return Optional.ofNullable(this.preferredBackupPeriod);
    }

    /**
     * Data backup time. Format: HH:mmZ-HH:mmZ(UTC time).
     * 
     */
    @Import(name="preferredBackupTime")
    private @Nullable Output<String> preferredBackupTime;

    /**
     * @return Data backup time. Format: HH:mmZ-HH:mmZ(UTC time).
     * 
     */
    public Optional<Output<String>> preferredBackupTime() {
        return Optional.ofNullable(this.preferredBackupTime);
    }

    /**
     * Recovery point frequency. Value Description:
     * - **1**: Hourly.
     * - **2**: Every two hours.
     * - **4**: Every four hours.
     * - **8**: Every eight hours.
     * 
     */
    @Import(name="recoveryPointPeriod")
    private @Nullable Output<String> recoveryPointPeriod;

    /**
     * @return Recovery point frequency. Value Description:
     * - **1**: Hourly.
     * - **2**: Every two hours.
     * - **4**: Every four hours.
     * - **8**: Every eight hours.
     * 
     */
    public Optional<Output<String>> recoveryPointPeriod() {
        return Optional.ofNullable(this.recoveryPointPeriod);
    }

    private BackupPolicyState() {}

    private BackupPolicyState(BackupPolicyState $) {
        this.backupRetentionPeriod = $.backupRetentionPeriod;
        this.dbInstanceId = $.dbInstanceId;
        this.enableRecoveryPoint = $.enableRecoveryPoint;
        this.preferredBackupPeriod = $.preferredBackupPeriod;
        this.preferredBackupTime = $.preferredBackupTime;
        this.recoveryPointPeriod = $.recoveryPointPeriod;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupPolicyState $;

        public Builder() {
            $ = new BackupPolicyState();
        }

        public Builder(BackupPolicyState defaults) {
            $ = new BackupPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupRetentionPeriod Data backup retention days.
         * 
         * @return builder
         * 
         */
        public Builder backupRetentionPeriod(@Nullable Output<Integer> backupRetentionPeriod) {
            $.backupRetentionPeriod = backupRetentionPeriod;
            return this;
        }

        /**
         * @param backupRetentionPeriod Data backup retention days.
         * 
         * @return builder
         * 
         */
        public Builder backupRetentionPeriod(Integer backupRetentionPeriod) {
            return backupRetentionPeriod(Output.of(backupRetentionPeriod));
        }

        /**
         * @param dbInstanceId The instance ID.
         * &gt; **NOTE:**  You can call the DescribeDBInstances operation to view the details of all AnalyticDB PostgreSQL instances in the target region, including the instance ID.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceId(@Nullable Output<String> dbInstanceId) {
            $.dbInstanceId = dbInstanceId;
            return this;
        }

        /**
         * @param dbInstanceId The instance ID.
         * &gt; **NOTE:**  You can call the DescribeDBInstances operation to view the details of all AnalyticDB PostgreSQL instances in the target region, including the instance ID.
         * 
         * @return builder
         * 
         */
        public Builder dbInstanceId(String dbInstanceId) {
            return dbInstanceId(Output.of(dbInstanceId));
        }

        /**
         * @param enableRecoveryPoint Whether to enable automatic recovery points. Value Description:
         * - **true**: enabled.
         * - **false**: Closed.
         * 
         * @return builder
         * 
         */
        public Builder enableRecoveryPoint(@Nullable Output<Boolean> enableRecoveryPoint) {
            $.enableRecoveryPoint = enableRecoveryPoint;
            return this;
        }

        /**
         * @param enableRecoveryPoint Whether to enable automatic recovery points. Value Description:
         * - **true**: enabled.
         * - **false**: Closed.
         * 
         * @return builder
         * 
         */
        public Builder enableRecoveryPoint(Boolean enableRecoveryPoint) {
            return enableRecoveryPoint(Output.of(enableRecoveryPoint));
        }

        /**
         * @param preferredBackupPeriod Data backup cycle. Separate multiple values with commas (,). Value Description:
         * - **Monday**: Monday.
         * - **Tuesday**: Tuesday.
         * - **Wednesday**: Wednesday.
         * - **Thursday**: Thursday.
         * - **Friday**: Friday.
         * - **Saturday**: Saturday.
         * - **Sunday**: Sunday.
         * 
         * @return builder
         * 
         */
        public Builder preferredBackupPeriod(@Nullable Output<String> preferredBackupPeriod) {
            $.preferredBackupPeriod = preferredBackupPeriod;
            return this;
        }

        /**
         * @param preferredBackupPeriod Data backup cycle. Separate multiple values with commas (,). Value Description:
         * - **Monday**: Monday.
         * - **Tuesday**: Tuesday.
         * - **Wednesday**: Wednesday.
         * - **Thursday**: Thursday.
         * - **Friday**: Friday.
         * - **Saturday**: Saturday.
         * - **Sunday**: Sunday.
         * 
         * @return builder
         * 
         */
        public Builder preferredBackupPeriod(String preferredBackupPeriod) {
            return preferredBackupPeriod(Output.of(preferredBackupPeriod));
        }

        /**
         * @param preferredBackupTime Data backup time. Format: HH:mmZ-HH:mmZ(UTC time).
         * 
         * @return builder
         * 
         */
        public Builder preferredBackupTime(@Nullable Output<String> preferredBackupTime) {
            $.preferredBackupTime = preferredBackupTime;
            return this;
        }

        /**
         * @param preferredBackupTime Data backup time. Format: HH:mmZ-HH:mmZ(UTC time).
         * 
         * @return builder
         * 
         */
        public Builder preferredBackupTime(String preferredBackupTime) {
            return preferredBackupTime(Output.of(preferredBackupTime));
        }

        /**
         * @param recoveryPointPeriod Recovery point frequency. Value Description:
         * - **1**: Hourly.
         * - **2**: Every two hours.
         * - **4**: Every four hours.
         * - **8**: Every eight hours.
         * 
         * @return builder
         * 
         */
        public Builder recoveryPointPeriod(@Nullable Output<String> recoveryPointPeriod) {
            $.recoveryPointPeriod = recoveryPointPeriod;
            return this;
        }

        /**
         * @param recoveryPointPeriod Recovery point frequency. Value Description:
         * - **1**: Hourly.
         * - **2**: Every two hours.
         * - **4**: Every four hours.
         * - **8**: Every eight hours.
         * 
         * @return builder
         * 
         */
        public Builder recoveryPointPeriod(String recoveryPointPeriod) {
            return recoveryPointPeriod(Output.of(recoveryPointPeriod));
        }

        public BackupPolicyState build() {
            return $;
        }
    }

}
