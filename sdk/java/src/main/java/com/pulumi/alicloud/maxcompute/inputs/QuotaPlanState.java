// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.maxcompute.inputs;

import com.pulumi.alicloud.maxcompute.inputs.QuotaPlanQuotaArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class QuotaPlanState extends com.pulumi.resources.ResourceArgs {

    public static final QuotaPlanState Empty = new QuotaPlanState();

    /**
     * Whether to take effect immediately. “Valid values: true”\
     * .&gt; **NOTE:** when other quota plans in the same quota group take effect, the effective quota group will become invalid. That is, IsEffective will become false. The effective quota plan cannot be deleted.
     * 
     */
    @Import(name="isEffective")
    private @Nullable Output<Boolean> isEffective;

    /**
     * @return Whether to take effect immediately. “Valid values: true”\
     * .&gt; **NOTE:** when other quota plans in the same quota group take effect, the effective quota group will become invalid. That is, IsEffective will become false. The effective quota plan cannot be deleted.
     * 
     */
    public Optional<Output<Boolean>> isEffective() {
        return Optional.ofNullable(this.isEffective);
    }

    /**
     * Quota Name
     * 
     */
    @Import(name="nickname")
    private @Nullable Output<String> nickname;

    /**
     * @return Quota Name
     * 
     */
    public Optional<Output<String>> nickname() {
        return Optional.ofNullable(this.nickname);
    }

    /**
     * The Quota plan name. Start with a letter, containing letters, numbers, and underscores (_). It is no more than 64 characters long.
     * 
     */
    @Import(name="planName")
    private @Nullable Output<String> planName;

    /**
     * @return The Quota plan name. Start with a letter, containing letters, numbers, and underscores (_). It is no more than 64 characters long.
     * 
     */
    public Optional<Output<String>> planName() {
        return Optional.ofNullable(this.planName);
    }

    /**
     * Quota property See `quota` below.
     * 
     */
    @Import(name="quota")
    private @Nullable Output<QuotaPlanQuotaArgs> quota;

    /**
     * @return Quota property See `quota` below.
     * 
     */
    public Optional<Output<QuotaPlanQuotaArgs>> quota() {
        return Optional.ofNullable(this.quota);
    }

    private QuotaPlanState() {}

    private QuotaPlanState(QuotaPlanState $) {
        this.isEffective = $.isEffective;
        this.nickname = $.nickname;
        this.planName = $.planName;
        this.quota = $.quota;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QuotaPlanState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QuotaPlanState $;

        public Builder() {
            $ = new QuotaPlanState();
        }

        public Builder(QuotaPlanState defaults) {
            $ = new QuotaPlanState(Objects.requireNonNull(defaults));
        }

        /**
         * @param isEffective Whether to take effect immediately. “Valid values: true”\
         * .&gt; **NOTE:** when other quota plans in the same quota group take effect, the effective quota group will become invalid. That is, IsEffective will become false. The effective quota plan cannot be deleted.
         * 
         * @return builder
         * 
         */
        public Builder isEffective(@Nullable Output<Boolean> isEffective) {
            $.isEffective = isEffective;
            return this;
        }

        /**
         * @param isEffective Whether to take effect immediately. “Valid values: true”\
         * .&gt; **NOTE:** when other quota plans in the same quota group take effect, the effective quota group will become invalid. That is, IsEffective will become false. The effective quota plan cannot be deleted.
         * 
         * @return builder
         * 
         */
        public Builder isEffective(Boolean isEffective) {
            return isEffective(Output.of(isEffective));
        }

        /**
         * @param nickname Quota Name
         * 
         * @return builder
         * 
         */
        public Builder nickname(@Nullable Output<String> nickname) {
            $.nickname = nickname;
            return this;
        }

        /**
         * @param nickname Quota Name
         * 
         * @return builder
         * 
         */
        public Builder nickname(String nickname) {
            return nickname(Output.of(nickname));
        }

        /**
         * @param planName The Quota plan name. Start with a letter, containing letters, numbers, and underscores (_). It is no more than 64 characters long.
         * 
         * @return builder
         * 
         */
        public Builder planName(@Nullable Output<String> planName) {
            $.planName = planName;
            return this;
        }

        /**
         * @param planName The Quota plan name. Start with a letter, containing letters, numbers, and underscores (_). It is no more than 64 characters long.
         * 
         * @return builder
         * 
         */
        public Builder planName(String planName) {
            return planName(Output.of(planName));
        }

        /**
         * @param quota Quota property See `quota` below.
         * 
         * @return builder
         * 
         */
        public Builder quota(@Nullable Output<QuotaPlanQuotaArgs> quota) {
            $.quota = quota;
            return this;
        }

        /**
         * @param quota Quota property See `quota` below.
         * 
         * @return builder
         * 
         */
        public Builder quota(QuotaPlanQuotaArgs quota) {
            return quota(Output.of(quota));
        }

        public QuotaPlanState build() {
            return $;
        }
    }

}
