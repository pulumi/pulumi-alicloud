// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudsso.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAccessAssignmentsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAccessAssignmentsArgs Empty = new GetAccessAssignmentsArgs();

    /**
     * Access configuration ID.
     * 
     */
    @Import(name="accessConfigurationId")
    private @Nullable Output<String> accessConfigurationId;

    /**
     * @return Access configuration ID.
     * 
     */
    public Optional<Output<String>> accessConfigurationId() {
        return Optional.ofNullable(this.accessConfigurationId);
    }

    /**
     * Directory ID.
     * 
     */
    @Import(name="directoryId", required=true)
    private Output<String> directoryId;

    /**
     * @return Directory ID.
     * 
     */
    public Output<String> directoryId() {
        return this.directoryId;
    }

    /**
     * A list of Access Assignment IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of Access Assignment IDs.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * Create the identity type of the access assignment, which can be a user or a user group.
     * 
     */
    @Import(name="principalType")
    private @Nullable Output<String> principalType;

    /**
     * @return Create the identity type of the access assignment, which can be a user or a user group.
     * 
     */
    public Optional<Output<String>> principalType() {
        return Optional.ofNullable(this.principalType);
    }

    /**
     * The ID of the target to create the resource range.
     * 
     */
    @Import(name="targetId")
    private @Nullable Output<String> targetId;

    /**
     * @return The ID of the target to create the resource range.
     * 
     */
    public Optional<Output<String>> targetId() {
        return Optional.ofNullable(this.targetId);
    }

    /**
     * The type of the resource range target to be accessed. Only a single RD primary account or member account can be specified in the first phase.
     * 
     */
    @Import(name="targetType")
    private @Nullable Output<String> targetType;

    /**
     * @return The type of the resource range target to be accessed. Only a single RD primary account or member account can be specified in the first phase.
     * 
     */
    public Optional<Output<String>> targetType() {
        return Optional.ofNullable(this.targetType);
    }

    private GetAccessAssignmentsArgs() {}

    private GetAccessAssignmentsArgs(GetAccessAssignmentsArgs $) {
        this.accessConfigurationId = $.accessConfigurationId;
        this.directoryId = $.directoryId;
        this.ids = $.ids;
        this.outputFile = $.outputFile;
        this.principalType = $.principalType;
        this.targetId = $.targetId;
        this.targetType = $.targetType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAccessAssignmentsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAccessAssignmentsArgs $;

        public Builder() {
            $ = new GetAccessAssignmentsArgs();
        }

        public Builder(GetAccessAssignmentsArgs defaults) {
            $ = new GetAccessAssignmentsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessConfigurationId Access configuration ID.
         * 
         * @return builder
         * 
         */
        public Builder accessConfigurationId(@Nullable Output<String> accessConfigurationId) {
            $.accessConfigurationId = accessConfigurationId;
            return this;
        }

        /**
         * @param accessConfigurationId Access configuration ID.
         * 
         * @return builder
         * 
         */
        public Builder accessConfigurationId(String accessConfigurationId) {
            return accessConfigurationId(Output.of(accessConfigurationId));
        }

        /**
         * @param directoryId Directory ID.
         * 
         * @return builder
         * 
         */
        public Builder directoryId(Output<String> directoryId) {
            $.directoryId = directoryId;
            return this;
        }

        /**
         * @param directoryId Directory ID.
         * 
         * @return builder
         * 
         */
        public Builder directoryId(String directoryId) {
            return directoryId(Output.of(directoryId));
        }

        /**
         * @param ids A list of Access Assignment IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Access Assignment IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of Access Assignment IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        /**
         * @param principalType Create the identity type of the access assignment, which can be a user or a user group.
         * 
         * @return builder
         * 
         */
        public Builder principalType(@Nullable Output<String> principalType) {
            $.principalType = principalType;
            return this;
        }

        /**
         * @param principalType Create the identity type of the access assignment, which can be a user or a user group.
         * 
         * @return builder
         * 
         */
        public Builder principalType(String principalType) {
            return principalType(Output.of(principalType));
        }

        /**
         * @param targetId The ID of the target to create the resource range.
         * 
         * @return builder
         * 
         */
        public Builder targetId(@Nullable Output<String> targetId) {
            $.targetId = targetId;
            return this;
        }

        /**
         * @param targetId The ID of the target to create the resource range.
         * 
         * @return builder
         * 
         */
        public Builder targetId(String targetId) {
            return targetId(Output.of(targetId));
        }

        /**
         * @param targetType The type of the resource range target to be accessed. Only a single RD primary account or member account can be specified in the first phase.
         * 
         * @return builder
         * 
         */
        public Builder targetType(@Nullable Output<String> targetType) {
            $.targetType = targetType;
            return this;
        }

        /**
         * @param targetType The type of the resource range target to be accessed. Only a single RD primary account or member account can be specified in the first phase.
         * 
         * @return builder
         * 
         */
        public Builder targetType(String targetType) {
            return targetType(Output.of(targetType));
        }

        public GetAccessAssignmentsArgs build() {
            if ($.directoryId == null) {
                throw new MissingRequiredPropertyException("GetAccessAssignmentsArgs", "directoryId");
            }
            return $;
        }
    }

}
