// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ga;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BasicEndpointGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final BasicEndpointGroupArgs Empty = new BasicEndpointGroupArgs();

    /**
     * The ID of the basic GA instance.
     * 
     */
    @Import(name="acceleratorId", required=true)
    private Output<String> acceleratorId;

    /**
     * @return The ID of the basic GA instance.
     * 
     */
    public Output<String> acceleratorId() {
        return this.acceleratorId;
    }

    /**
     * The name of the endpoint group. The `basic_endpoint_group_name` must be 2 to 128 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). The name must start with a letter.
     * 
     */
    @Import(name="basicEndpointGroupName")
    private @Nullable Output<String> basicEndpointGroupName;

    /**
     * @return The name of the endpoint group. The `basic_endpoint_group_name` must be 2 to 128 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). The name must start with a letter.
     * 
     */
    public Optional<Output<String>> basicEndpointGroupName() {
        return Optional.ofNullable(this.basicEndpointGroupName);
    }

    /**
     * The description of the endpoint group. The `description` cannot exceed 256 characters in length and cannot contain http:// or https://.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the endpoint group. The `description` cannot exceed 256 characters in length and cannot contain http:// or https://.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The address of the endpoint.
     * 
     */
    @Import(name="endpointAddress")
    private @Nullable Output<String> endpointAddress;

    /**
     * @return The address of the endpoint.
     * 
     */
    public Optional<Output<String>> endpointAddress() {
        return Optional.ofNullable(this.endpointAddress);
    }

    /**
     * The ID of the region where you want to create the endpoint group.
     * 
     */
    @Import(name="endpointGroupRegion", required=true)
    private Output<String> endpointGroupRegion;

    /**
     * @return The ID of the region where you want to create the endpoint group.
     * 
     */
    public Output<String> endpointGroupRegion() {
        return this.endpointGroupRegion;
    }

    /**
     * The sub address of the endpoint.
     * 
     */
    @Import(name="endpointSubAddress")
    private @Nullable Output<String> endpointSubAddress;

    /**
     * @return The sub address of the endpoint.
     * 
     */
    public Optional<Output<String>> endpointSubAddress() {
        return Optional.ofNullable(this.endpointSubAddress);
    }

    /**
     * The type of the endpoint. Valid values: `ENI`, `SLB` and `ECS`.
     * 
     */
    @Import(name="endpointType")
    private @Nullable Output<String> endpointType;

    /**
     * @return The type of the endpoint. Valid values: `ENI`, `SLB` and `ECS`.
     * 
     */
    public Optional<Output<String>> endpointType() {
        return Optional.ofNullable(this.endpointType);
    }

    private BasicEndpointGroupArgs() {}

    private BasicEndpointGroupArgs(BasicEndpointGroupArgs $) {
        this.acceleratorId = $.acceleratorId;
        this.basicEndpointGroupName = $.basicEndpointGroupName;
        this.description = $.description;
        this.endpointAddress = $.endpointAddress;
        this.endpointGroupRegion = $.endpointGroupRegion;
        this.endpointSubAddress = $.endpointSubAddress;
        this.endpointType = $.endpointType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BasicEndpointGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BasicEndpointGroupArgs $;

        public Builder() {
            $ = new BasicEndpointGroupArgs();
        }

        public Builder(BasicEndpointGroupArgs defaults) {
            $ = new BasicEndpointGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param acceleratorId The ID of the basic GA instance.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorId(Output<String> acceleratorId) {
            $.acceleratorId = acceleratorId;
            return this;
        }

        /**
         * @param acceleratorId The ID of the basic GA instance.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorId(String acceleratorId) {
            return acceleratorId(Output.of(acceleratorId));
        }

        /**
         * @param basicEndpointGroupName The name of the endpoint group. The `basic_endpoint_group_name` must be 2 to 128 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). The name must start with a letter.
         * 
         * @return builder
         * 
         */
        public Builder basicEndpointGroupName(@Nullable Output<String> basicEndpointGroupName) {
            $.basicEndpointGroupName = basicEndpointGroupName;
            return this;
        }

        /**
         * @param basicEndpointGroupName The name of the endpoint group. The `basic_endpoint_group_name` must be 2 to 128 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). The name must start with a letter.
         * 
         * @return builder
         * 
         */
        public Builder basicEndpointGroupName(String basicEndpointGroupName) {
            return basicEndpointGroupName(Output.of(basicEndpointGroupName));
        }

        /**
         * @param description The description of the endpoint group. The `description` cannot exceed 256 characters in length and cannot contain http:// or https://.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the endpoint group. The `description` cannot exceed 256 characters in length and cannot contain http:// or https://.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param endpointAddress The address of the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder endpointAddress(@Nullable Output<String> endpointAddress) {
            $.endpointAddress = endpointAddress;
            return this;
        }

        /**
         * @param endpointAddress The address of the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder endpointAddress(String endpointAddress) {
            return endpointAddress(Output.of(endpointAddress));
        }

        /**
         * @param endpointGroupRegion The ID of the region where you want to create the endpoint group.
         * 
         * @return builder
         * 
         */
        public Builder endpointGroupRegion(Output<String> endpointGroupRegion) {
            $.endpointGroupRegion = endpointGroupRegion;
            return this;
        }

        /**
         * @param endpointGroupRegion The ID of the region where you want to create the endpoint group.
         * 
         * @return builder
         * 
         */
        public Builder endpointGroupRegion(String endpointGroupRegion) {
            return endpointGroupRegion(Output.of(endpointGroupRegion));
        }

        /**
         * @param endpointSubAddress The sub address of the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder endpointSubAddress(@Nullable Output<String> endpointSubAddress) {
            $.endpointSubAddress = endpointSubAddress;
            return this;
        }

        /**
         * @param endpointSubAddress The sub address of the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder endpointSubAddress(String endpointSubAddress) {
            return endpointSubAddress(Output.of(endpointSubAddress));
        }

        /**
         * @param endpointType The type of the endpoint. Valid values: `ENI`, `SLB` and `ECS`.
         * 
         * @return builder
         * 
         */
        public Builder endpointType(@Nullable Output<String> endpointType) {
            $.endpointType = endpointType;
            return this;
        }

        /**
         * @param endpointType The type of the endpoint. Valid values: `ENI`, `SLB` and `ECS`.
         * 
         * @return builder
         * 
         */
        public Builder endpointType(String endpointType) {
            return endpointType(Output.of(endpointType));
        }

        public BasicEndpointGroupArgs build() {
            if ($.acceleratorId == null) {
                throw new MissingRequiredPropertyException("BasicEndpointGroupArgs", "acceleratorId");
            }
            if ($.endpointGroupRegion == null) {
                throw new MissingRequiredPropertyException("BasicEndpointGroupArgs", "endpointGroupRegion");
            }
            return $;
        }
    }

}
