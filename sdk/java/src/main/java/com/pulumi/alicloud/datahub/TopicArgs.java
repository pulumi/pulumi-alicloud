// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.datahub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TopicArgs extends com.pulumi.resources.ResourceArgs {

    public static final TopicArgs Empty = new TopicArgs();

    /**
     * Comment of the datahub topic. It cannot be longer than 255 characters.
     * 
     * **Notes:** Currently `life_cycle` can not be modified and it will be supported in the next future.
     * 
     */
    @Import(name="comment")
    private @Nullable Output<String> comment;

    /**
     * @return Comment of the datahub topic. It cannot be longer than 255 characters.
     * 
     * **Notes:** Currently `life_cycle` can not be modified and it will be supported in the next future.
     * 
     */
    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * How many days this topic lives. The permitted range of values is [1, 7]. The default value is 3.
     * 
     */
    @Import(name="lifeCycle")
    private @Nullable Output<Integer> lifeCycle;

    /**
     * @return How many days this topic lives. The permitted range of values is [1, 7]. The default value is 3.
     * 
     */
    public Optional<Output<Integer>> lifeCycle() {
        return Optional.ofNullable(this.lifeCycle);
    }

    /**
     * The name of the datahub topic. Its length is limited to 1-128 and only characters such as letters, digits and &#39;_&#39; are allowed. It is case-insensitive.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the datahub topic. Its length is limited to 1-128 and only characters such as letters, digits and &#39;_&#39; are allowed. It is case-insensitive.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the datahub project that this topic belongs to. It is case-insensitive.
     * 
     */
    @Import(name="projectName", required=true)
    private Output<String> projectName;

    /**
     * @return The name of the datahub project that this topic belongs to. It is case-insensitive.
     * 
     */
    public Output<String> projectName() {
        return this.projectName;
    }

    /**
     * Schema of this topic, required only for TUPLE topic. Supported data types (case-insensitive) are:
     * - BIGINT
     * - STRING
     * - BOOLEAN
     * - DOUBLE
     * - TIMESTAMP
     * 
     */
    @Import(name="recordSchema")
    private @Nullable Output<Map<String,Object>> recordSchema;

    /**
     * @return Schema of this topic, required only for TUPLE topic. Supported data types (case-insensitive) are:
     * - BIGINT
     * - STRING
     * - BOOLEAN
     * - DOUBLE
     * - TIMESTAMP
     * 
     */
    public Optional<Output<Map<String,Object>>> recordSchema() {
        return Optional.ofNullable(this.recordSchema);
    }

    /**
     * The type of this topic. Its value must be one of {BLOB, TUPLE}. For BLOB topic, data will be organized as binary and encoded by BASE64. For TUPLE topic, data has fixed schema. The default value is &#34;TUPLE&#34; with a schema {STRING}.
     * 
     */
    @Import(name="recordType")
    private @Nullable Output<String> recordType;

    /**
     * @return The type of this topic. Its value must be one of {BLOB, TUPLE}. For BLOB topic, data will be organized as binary and encoded by BASE64. For TUPLE topic, data has fixed schema. The default value is &#34;TUPLE&#34; with a schema {STRING}.
     * 
     */
    public Optional<Output<String>> recordType() {
        return Optional.ofNullable(this.recordType);
    }

    /**
     * The number of shards this topic contains. The permitted range of values is [1, 10]. The default value is 1.
     * 
     */
    @Import(name="shardCount")
    private @Nullable Output<Integer> shardCount;

    /**
     * @return The number of shards this topic contains. The permitted range of values is [1, 10]. The default value is 1.
     * 
     */
    public Optional<Output<Integer>> shardCount() {
        return Optional.ofNullable(this.shardCount);
    }

    private TopicArgs() {}

    private TopicArgs(TopicArgs $) {
        this.comment = $.comment;
        this.lifeCycle = $.lifeCycle;
        this.name = $.name;
        this.projectName = $.projectName;
        this.recordSchema = $.recordSchema;
        this.recordType = $.recordType;
        this.shardCount = $.shardCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicArgs $;

        public Builder() {
            $ = new TopicArgs();
        }

        public Builder(TopicArgs defaults) {
            $ = new TopicArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param comment Comment of the datahub topic. It cannot be longer than 255 characters.
         * 
         * **Notes:** Currently `life_cycle` can not be modified and it will be supported in the next future.
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param comment Comment of the datahub topic. It cannot be longer than 255 characters.
         * 
         * **Notes:** Currently `life_cycle` can not be modified and it will be supported in the next future.
         * 
         * @return builder
         * 
         */
        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        /**
         * @param lifeCycle How many days this topic lives. The permitted range of values is [1, 7]. The default value is 3.
         * 
         * @return builder
         * 
         */
        public Builder lifeCycle(@Nullable Output<Integer> lifeCycle) {
            $.lifeCycle = lifeCycle;
            return this;
        }

        /**
         * @param lifeCycle How many days this topic lives. The permitted range of values is [1, 7]. The default value is 3.
         * 
         * @return builder
         * 
         */
        public Builder lifeCycle(Integer lifeCycle) {
            return lifeCycle(Output.of(lifeCycle));
        }

        /**
         * @param name The name of the datahub topic. Its length is limited to 1-128 and only characters such as letters, digits and &#39;_&#39; are allowed. It is case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the datahub topic. Its length is limited to 1-128 and only characters such as letters, digits and &#39;_&#39; are allowed. It is case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param projectName The name of the datahub project that this topic belongs to. It is case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder projectName(Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param projectName The name of the datahub project that this topic belongs to. It is case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        /**
         * @param recordSchema Schema of this topic, required only for TUPLE topic. Supported data types (case-insensitive) are:
         * - BIGINT
         * - STRING
         * - BOOLEAN
         * - DOUBLE
         * - TIMESTAMP
         * 
         * @return builder
         * 
         */
        public Builder recordSchema(@Nullable Output<Map<String,Object>> recordSchema) {
            $.recordSchema = recordSchema;
            return this;
        }

        /**
         * @param recordSchema Schema of this topic, required only for TUPLE topic. Supported data types (case-insensitive) are:
         * - BIGINT
         * - STRING
         * - BOOLEAN
         * - DOUBLE
         * - TIMESTAMP
         * 
         * @return builder
         * 
         */
        public Builder recordSchema(Map<String,Object> recordSchema) {
            return recordSchema(Output.of(recordSchema));
        }

        /**
         * @param recordType The type of this topic. Its value must be one of {BLOB, TUPLE}. For BLOB topic, data will be organized as binary and encoded by BASE64. For TUPLE topic, data has fixed schema. The default value is &#34;TUPLE&#34; with a schema {STRING}.
         * 
         * @return builder
         * 
         */
        public Builder recordType(@Nullable Output<String> recordType) {
            $.recordType = recordType;
            return this;
        }

        /**
         * @param recordType The type of this topic. Its value must be one of {BLOB, TUPLE}. For BLOB topic, data will be organized as binary and encoded by BASE64. For TUPLE topic, data has fixed schema. The default value is &#34;TUPLE&#34; with a schema {STRING}.
         * 
         * @return builder
         * 
         */
        public Builder recordType(String recordType) {
            return recordType(Output.of(recordType));
        }

        /**
         * @param shardCount The number of shards this topic contains. The permitted range of values is [1, 10]. The default value is 1.
         * 
         * @return builder
         * 
         */
        public Builder shardCount(@Nullable Output<Integer> shardCount) {
            $.shardCount = shardCount;
            return this;
        }

        /**
         * @param shardCount The number of shards this topic contains. The permitted range of values is [1, 10]. The default value is 1.
         * 
         * @return builder
         * 
         */
        public Builder shardCount(Integer shardCount) {
            return shardCount(Output.of(shardCount));
        }

        public TopicArgs build() {
            if ($.projectName == null) {
                throw new MissingRequiredPropertyException("TopicArgs", "projectName");
            }
            return $;
        }
    }

}
