// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpn.outputs;

import com.pulumi.alicloud.vpn.outputs.GetConnectionsConnection;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetConnectionsResult {
    /**
     * @return A list of VPN connections. Each element contains the following attributes:
     * 
     */
    private List<GetConnectionsConnection> connections;
    /**
     * @return ID of the VPN customer gateway.
     * 
     */
    private @Nullable String customerGatewayId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return (Optional) IDs of the VPN connections.
     * 
     */
    private List<String> ids;
    private @Nullable String nameRegex;
    /**
     * @return (Optional) names of the VPN connections.
     * 
     */
    private List<String> names;
    private @Nullable String outputFile;
    /**
     * @return ID of the VPN gateway.
     * 
     */
    private @Nullable String vpnGatewayId;

    private GetConnectionsResult() {}
    /**
     * @return A list of VPN connections. Each element contains the following attributes:
     * 
     */
    public List<GetConnectionsConnection> connections() {
        return this.connections;
    }
    /**
     * @return ID of the VPN customer gateway.
     * 
     */
    public Optional<String> customerGatewayId() {
        return Optional.ofNullable(this.customerGatewayId);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (Optional) IDs of the VPN connections.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    /**
     * @return (Optional) names of the VPN connections.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return ID of the VPN gateway.
     * 
     */
    public Optional<String> vpnGatewayId() {
        return Optional.ofNullable(this.vpnGatewayId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetConnectionsConnection> connections;
        private @Nullable String customerGatewayId;
        private String id;
        private List<String> ids;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String outputFile;
        private @Nullable String vpnGatewayId;
        public Builder() {}
        public Builder(GetConnectionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connections = defaults.connections;
    	      this.customerGatewayId = defaults.customerGatewayId;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.outputFile = defaults.outputFile;
    	      this.vpnGatewayId = defaults.vpnGatewayId;
        }

        @CustomType.Setter
        public Builder connections(List<GetConnectionsConnection> connections) {
            this.connections = Objects.requireNonNull(connections);
            return this;
        }
        public Builder connections(GetConnectionsConnection... connections) {
            return connections(List.of(connections));
        }
        @CustomType.Setter
        public Builder customerGatewayId(@Nullable String customerGatewayId) {
            this.customerGatewayId = customerGatewayId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder names(List<String> names) {
            this.names = Objects.requireNonNull(names);
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder vpnGatewayId(@Nullable String vpnGatewayId) {
            this.vpnGatewayId = vpnGatewayId;
            return this;
        }
        public GetConnectionsResult build() {
            final var o = new GetConnectionsResult();
            o.connections = connections;
            o.customerGatewayId = customerGatewayId;
            o.id = id;
            o.ids = ids;
            o.nameRegex = nameRegex;
            o.names = names;
            o.outputFile = outputFile;
            o.vpnGatewayId = vpnGatewayId;
            return o;
        }
    }
}
