// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.apig.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GatewayVswitch {
    /**
     * @return The name of the VPC gateway.
     * 
     */
    private @Nullable String name;
    /**
     * @return The ID of the virtual switch.
     * 
     */
    private @Nullable String vswitchId;

    private GatewayVswitch() {}
    /**
     * @return The name of the VPC gateway.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The ID of the virtual switch.
     * 
     */
    public Optional<String> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GatewayVswitch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String name;
        private @Nullable String vswitchId;
        public Builder() {}
        public Builder(GatewayVswitch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.vswitchId = defaults.vswitchId;
        }

        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder vswitchId(@Nullable String vswitchId) {

            this.vswitchId = vswitchId;
            return this;
        }
        public GatewayVswitch build() {
            final var _resultValue = new GatewayVswitch();
            _resultValue.name = name;
            _resultValue.vswitchId = vswitchId;
            return _resultValue;
        }
    }
}
