// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oos;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.oos.ExecutionArgs;
import com.pulumi.alicloud.oos.inputs.ExecutionState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a OOS Execution resource. For information about Alicloud OOS Execution and how to use it, see [What is Resource Alicloud OOS Execution](https://www.alibabacloud.com/help/doc-detail/120771.htm).
 * 
 * &gt; **NOTE:** Available in 1.93.0+.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.oos.Template;
 * import com.pulumi.alicloud.oos.TemplateArgs;
 * import com.pulumi.alicloud.oos.Execution;
 * import com.pulumi.alicloud.oos.ExecutionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Template(&#34;default&#34;, TemplateArgs.builder()        
 *             .content(&#34;&#34;&#34;
 *   {
 *     &#34;FormatVersion&#34;: &#34;OOS-2019-06-01&#34;,
 *     &#34;Description&#34;: &#34;Update Describe instances of given status&#34;,
 *     &#34;Parameters&#34;:{
 *       &#34;Status&#34;:{
 *         &#34;Type&#34;: &#34;String&#34;,
 *         &#34;Description&#34;: &#34;(Required) The status of the Ecs instance.&#34;
 *       }
 *     },
 *     &#34;Tasks&#34;: [
 *       {
 *         &#34;Properties&#34; :{
 *           &#34;Parameters&#34;:{
 *             &#34;Status&#34;: &#34;{{ Status }}&#34;
 *           },
 *           &#34;API&#34;: &#34;DescribeInstances&#34;,
 *           &#34;Service&#34;: &#34;Ecs&#34;
 *         },
 *         &#34;Name&#34;: &#34;foo&#34;,
 *         &#34;Action&#34;: &#34;ACS::ExecuteApi&#34;
 *       }]
 *   }
 *             &#34;&#34;&#34;)
 *             .templateName(&#34;test-name&#34;)
 *             .versionName(&#34;test&#34;)
 *             .tags(Map.ofEntries(
 *                 Map.entry(&#34;Created&#34;, &#34;TF&#34;),
 *                 Map.entry(&#34;For&#34;, &#34;acceptance Test&#34;)
 *             ))
 *             .build());
 * 
 *         var example = new Execution(&#34;example&#34;, ExecutionArgs.builder()        
 *             .templateName(default_.templateName())
 *             .description(&#34;From TF Test&#34;)
 *             .parameters(&#34;&#34;&#34;
 * 				{&#34;Status&#34;:&#34;Running&#34;}
 *             &#34;&#34;&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * OOS Execution can be imported using the id, e.g.
 * 
 * ```sh
 * $ pulumi import alicloud:oos/execution:Execution example exec-ef6xxxx
 * ```
 * 
 */
@ResourceType(type="alicloud:oos/execution:Execution")
public class Execution extends com.pulumi.resources.CustomResource {
    /**
     * The counters of OOS Execution.
     * 
     */
    @Export(name="counters", refs={String.class}, tree="[0]")
    private Output<String> counters;

    /**
     * @return The counters of OOS Execution.
     * 
     */
    public Output<String> counters() {
        return this.counters;
    }
    /**
     * The time when the execution was created.
     * 
     */
    @Export(name="createDate", refs={String.class}, tree="[0]")
    private Output<String> createDate;

    /**
     * @return The time when the execution was created.
     * 
     */
    public Output<String> createDate() {
        return this.createDate;
    }
    /**
     * The description of OOS Execution.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of OOS Execution.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The time when the execution was ended.
     * 
     */
    @Export(name="endDate", refs={String.class}, tree="[0]")
    private Output<String> endDate;

    /**
     * @return The time when the execution was ended.
     * 
     */
    public Output<String> endDate() {
        return this.endDate;
    }
    /**
     * The user who execute the template.
     * 
     */
    @Export(name="executedBy", refs={String.class}, tree="[0]")
    private Output<String> executedBy;

    /**
     * @return The user who execute the template.
     * 
     */
    public Output<String> executedBy() {
        return this.executedBy;
    }
    /**
     * Whether to include subtasks.
     * 
     */
    @Export(name="isParent", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isParent;

    /**
     * @return Whether to include subtasks.
     * 
     */
    public Output<Boolean> isParent() {
        return this.isParent;
    }
    /**
     * The loop mode of OOS Execution.
     * 
     */
    @Export(name="loopMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> loopMode;

    /**
     * @return The loop mode of OOS Execution.
     * 
     */
    public Output<Optional<String>> loopMode() {
        return Codegen.optional(this.loopMode);
    }
    /**
     * The mode of OOS Execution. Valid: `Automatic`, `Debug`. Default to `Automatic`.
     * 
     */
    @Export(name="mode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> mode;

    /**
     * @return The mode of OOS Execution. Valid: `Automatic`, `Debug`. Default to `Automatic`.
     * 
     */
    public Output<Optional<String>> mode() {
        return Codegen.optional(this.mode);
    }
    /**
     * The outputs of OOS Execution.
     * 
     */
    @Export(name="outputs", refs={String.class}, tree="[0]")
    private Output<String> outputs;

    /**
     * @return The outputs of OOS Execution.
     * 
     */
    public Output<String> outputs() {
        return this.outputs;
    }
    /**
     * The parameters required by the template. Default to `{}`.
     * 
     */
    @Export(name="parameters", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> parameters;

    /**
     * @return The parameters required by the template. Default to `{}`.
     * 
     */
    public Output<Optional<String>> parameters() {
        return Codegen.optional(this.parameters);
    }
    /**
     * The id of parent execution.
     * 
     */
    @Export(name="parentExecutionId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> parentExecutionId;

    /**
     * @return The id of parent execution.
     * 
     */
    public Output<Optional<String>> parentExecutionId() {
        return Codegen.optional(this.parentExecutionId);
    }
    /**
     * The role that executes the current template.
     * 
     */
    @Export(name="ramRole", refs={String.class}, tree="[0]")
    private Output<String> ramRole;

    /**
     * @return The role that executes the current template.
     * 
     */
    public Output<String> ramRole() {
        return this.ramRole;
    }
    /**
     * The mode of safety check.
     * 
     */
    @Export(name="safetyCheck", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> safetyCheck;

    /**
     * @return The mode of safety check.
     * 
     */
    public Output<Optional<String>> safetyCheck() {
        return Codegen.optional(this.safetyCheck);
    }
    /**
     * The time when the execution was started.
     * 
     */
    @Export(name="startDate", refs={String.class}, tree="[0]")
    private Output<String> startDate;

    /**
     * @return The time when the execution was started.
     * 
     */
    public Output<String> startDate() {
        return this.startDate;
    }
    /**
     * The status of OOS Execution.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of OOS Execution.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The message of status.
     * 
     */
    @Export(name="statusMessage", refs={String.class}, tree="[0]")
    private Output<String> statusMessage;

    /**
     * @return The message of status.
     * 
     */
    public Output<String> statusMessage() {
        return this.statusMessage;
    }
    /**
     * The content of template. When the user selects an existing template to create and execute a task, it is not necessary to pass in this field.
     * 
     */
    @Export(name="templateContent", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> templateContent;

    /**
     * @return The content of template. When the user selects an existing template to create and execute a task, it is not necessary to pass in this field.
     * 
     */
    public Output<Optional<String>> templateContent() {
        return Codegen.optional(this.templateContent);
    }
    /**
     * The id of template.
     * 
     */
    @Export(name="templateId", refs={String.class}, tree="[0]")
    private Output<String> templateId;

    /**
     * @return The id of template.
     * 
     */
    public Output<String> templateId() {
        return this.templateId;
    }
    /**
     * The name of execution template.
     * 
     */
    @Export(name="templateName", refs={String.class}, tree="[0]")
    private Output<String> templateName;

    /**
     * @return The name of execution template.
     * 
     */
    public Output<String> templateName() {
        return this.templateName;
    }
    /**
     * The version of execution template.
     * 
     */
    @Export(name="templateVersion", refs={String.class}, tree="[0]")
    private Output<String> templateVersion;

    /**
     * @return The version of execution template.
     * 
     */
    public Output<String> templateVersion() {
        return this.templateVersion;
    }
    /**
     * The time when the execution was updated.
     * 
     */
    @Export(name="updateDate", refs={String.class}, tree="[0]")
    private Output<String> updateDate;

    /**
     * @return The time when the execution was updated.
     * 
     */
    public Output<String> updateDate() {
        return this.updateDate;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Execution(String name) {
        this(name, ExecutionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Execution(String name, ExecutionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Execution(String name, ExecutionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:oos/execution:Execution", name, args == null ? ExecutionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Execution(String name, Output<String> id, @Nullable ExecutionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:oos/execution:Execution", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Execution get(String name, Output<String> id, @Nullable ExecutionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Execution(name, id, state, options);
    }
}
