// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.amqp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstancesInstance {
    /**
     * @return The timestamp that indicates when the order was created.
     * 
     */
    private String createTime;
    /**
     * @return The timestamp that indicates when the instance expires.
     * 
     */
    private String expireTime;
    /**
     * @return The ID of the Instance.
     * 
     */
    private String id;
    /**
     * @return THe instance Id.
     * 
     */
    private String instanceId;
    /**
     * @return THe instance name.
     * 
     */
    private String instanceName;
    /**
     * @return The instance type.
     * 
     */
    private String instanceType;
    /**
     * @return The billing method of the instance. **Note:** `paymentType` takes effect only if `enableDetails` is set to `true`.
     * 
     */
    private String paymentType;
    /**
     * @return The virtual private cloud (VPC) endpoint of the instance.
     * 
     */
    private String privateEndPoint;
    /**
     * @return The public endpoint of the instance.
     * 
     */
    private String publicEndpoint;
    /**
     * @return Auto renewal period of an instance. **Note:** `renewalDuration` takes effect only if `enableDetails` is set to `true`.
     * 
     */
    private Integer renewalDuration;
    /**
     * @return Automatic renewal period unit. **Note:** `renewalDurationUnit` takes effect only if `enableDetails` is set to `true`.
     * 
     */
    private String renewalDurationUnit;
    /**
     * @return Whether to renew an instance automatically or not. **Note:** `renewalStatus` takes effect only if `enableDetails` is set to `true`.
     * 
     */
    private String renewalStatus;
    /**
     * @return The status of the resource. Valid values: `DEPLOYING`, `SERVING`, `EXPIRED`, `RELEASED`.
     * 
     */
    private String status;
    /**
     * @return Indicates whether the instance supports elastic IP addresses (EIPs).
     * 
     */
    private Boolean supportEip;

    private GetInstancesInstance() {}
    /**
     * @return The timestamp that indicates when the order was created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The timestamp that indicates when the instance expires.
     * 
     */
    public String expireTime() {
        return this.expireTime;
    }
    /**
     * @return The ID of the Instance.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return THe instance Id.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return THe instance name.
     * 
     */
    public String instanceName() {
        return this.instanceName;
    }
    /**
     * @return The instance type.
     * 
     */
    public String instanceType() {
        return this.instanceType;
    }
    /**
     * @return The billing method of the instance. **Note:** `paymentType` takes effect only if `enableDetails` is set to `true`.
     * 
     */
    public String paymentType() {
        return this.paymentType;
    }
    /**
     * @return The virtual private cloud (VPC) endpoint of the instance.
     * 
     */
    public String privateEndPoint() {
        return this.privateEndPoint;
    }
    /**
     * @return The public endpoint of the instance.
     * 
     */
    public String publicEndpoint() {
        return this.publicEndpoint;
    }
    /**
     * @return Auto renewal period of an instance. **Note:** `renewalDuration` takes effect only if `enableDetails` is set to `true`.
     * 
     */
    public Integer renewalDuration() {
        return this.renewalDuration;
    }
    /**
     * @return Automatic renewal period unit. **Note:** `renewalDurationUnit` takes effect only if `enableDetails` is set to `true`.
     * 
     */
    public String renewalDurationUnit() {
        return this.renewalDurationUnit;
    }
    /**
     * @return Whether to renew an instance automatically or not. **Note:** `renewalStatus` takes effect only if `enableDetails` is set to `true`.
     * 
     */
    public String renewalStatus() {
        return this.renewalStatus;
    }
    /**
     * @return The status of the resource. Valid values: `DEPLOYING`, `SERVING`, `EXPIRED`, `RELEASED`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Indicates whether the instance supports elastic IP addresses (EIPs).
     * 
     */
    public Boolean supportEip() {
        return this.supportEip;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesInstance defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String expireTime;
        private String id;
        private String instanceId;
        private String instanceName;
        private String instanceType;
        private String paymentType;
        private String privateEndPoint;
        private String publicEndpoint;
        private Integer renewalDuration;
        private String renewalDurationUnit;
        private String renewalStatus;
        private String status;
        private Boolean supportEip;
        public Builder() {}
        public Builder(GetInstancesInstance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.expireTime = defaults.expireTime;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.instanceName = defaults.instanceName;
    	      this.instanceType = defaults.instanceType;
    	      this.paymentType = defaults.paymentType;
    	      this.privateEndPoint = defaults.privateEndPoint;
    	      this.publicEndpoint = defaults.publicEndpoint;
    	      this.renewalDuration = defaults.renewalDuration;
    	      this.renewalDurationUnit = defaults.renewalDurationUnit;
    	      this.renewalStatus = defaults.renewalStatus;
    	      this.status = defaults.status;
    	      this.supportEip = defaults.supportEip;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder expireTime(String expireTime) {
            if (expireTime == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "expireTime");
            }
            this.expireTime = expireTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder instanceName(String instanceName) {
            if (instanceName == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "instanceName");
            }
            this.instanceName = instanceName;
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(String instanceType) {
            if (instanceType == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "instanceType");
            }
            this.instanceType = instanceType;
            return this;
        }
        @CustomType.Setter
        public Builder paymentType(String paymentType) {
            if (paymentType == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "paymentType");
            }
            this.paymentType = paymentType;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndPoint(String privateEndPoint) {
            if (privateEndPoint == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "privateEndPoint");
            }
            this.privateEndPoint = privateEndPoint;
            return this;
        }
        @CustomType.Setter
        public Builder publicEndpoint(String publicEndpoint) {
            if (publicEndpoint == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "publicEndpoint");
            }
            this.publicEndpoint = publicEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder renewalDuration(Integer renewalDuration) {
            if (renewalDuration == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "renewalDuration");
            }
            this.renewalDuration = renewalDuration;
            return this;
        }
        @CustomType.Setter
        public Builder renewalDurationUnit(String renewalDurationUnit) {
            if (renewalDurationUnit == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "renewalDurationUnit");
            }
            this.renewalDurationUnit = renewalDurationUnit;
            return this;
        }
        @CustomType.Setter
        public Builder renewalStatus(String renewalStatus) {
            if (renewalStatus == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "renewalStatus");
            }
            this.renewalStatus = renewalStatus;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder supportEip(Boolean supportEip) {
            if (supportEip == null) {
              throw new MissingRequiredPropertyException("GetInstancesInstance", "supportEip");
            }
            this.supportEip = supportEip;
            return this;
        }
        public GetInstancesInstance build() {
            final var _resultValue = new GetInstancesInstance();
            _resultValue.createTime = createTime;
            _resultValue.expireTime = expireTime;
            _resultValue.id = id;
            _resultValue.instanceId = instanceId;
            _resultValue.instanceName = instanceName;
            _resultValue.instanceType = instanceType;
            _resultValue.paymentType = paymentType;
            _resultValue.privateEndPoint = privateEndPoint;
            _resultValue.publicEndpoint = publicEndpoint;
            _resultValue.renewalDuration = renewalDuration;
            _resultValue.renewalDurationUnit = renewalDurationUnit;
            _resultValue.renewalStatus = renewalStatus;
            _resultValue.status = status;
            _resultValue.supportEip = supportEip;
            return _resultValue;
        }
    }
}
