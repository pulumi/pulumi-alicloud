// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.nas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMountTargetsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMountTargetsArgs Empty = new GetMountTargetsArgs();

    /**
     * Filter results by a specific AccessGroupName.
     * 
     */
    @Import(name="accessGroupName")
    private @Nullable Output<String> accessGroupName;

    /**
     * @return Filter results by a specific AccessGroupName.
     * 
     */
    public Optional<Output<String>> accessGroupName() {
        return Optional.ofNullable(this.accessGroupName);
    }

    /**
     * The ID of the FileSystem that owns the MountTarget.
     * 
     */
    @Import(name="fileSystemId", required=true)
    private Output<String> fileSystemId;

    /**
     * @return The ID of the FileSystem that owns the MountTarget.
     * 
     */
    public Output<String> fileSystemId() {
        return this.fileSystemId;
    }

    /**
     * A list of MountTargetDomain.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of MountTargetDomain.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * Field `mount_target_domain` has been deprecated from provider version 1.53.0. New field `ids` replaces it.
     * 
     * @deprecated
     * Field &#39;mount_target_domain&#39; has been deprecated from provider version 1.53.0. New field &#39;ids&#39; replaces it.
     * 
     */
    @Deprecated /* Field 'mount_target_domain' has been deprecated from provider version 1.53.0. New field 'ids' replaces it. */
    @Import(name="mountTargetDomain")
    private @Nullable Output<String> mountTargetDomain;

    /**
     * @return Field `mount_target_domain` has been deprecated from provider version 1.53.0. New field `ids` replaces it.
     * 
     * @deprecated
     * Field &#39;mount_target_domain&#39; has been deprecated from provider version 1.53.0. New field &#39;ids&#39; replaces it.
     * 
     */
    @Deprecated /* Field 'mount_target_domain' has been deprecated from provider version 1.53.0. New field 'ids' replaces it. */
    public Optional<Output<String>> mountTargetDomain() {
        return Optional.ofNullable(this.mountTargetDomain);
    }

    /**
     * Filter results by a specific NetworkType.
     * 
     */
    @Import(name="networkType")
    private @Nullable Output<String> networkType;

    /**
     * @return Filter results by a specific NetworkType.
     * 
     */
    public Optional<Output<String>> networkType() {
        return Optional.ofNullable(this.networkType);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * Filter results by the status of mount target. Valid values: `Active`, `Inactive` and `Pending`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Filter results by the status of mount target. Valid values: `Active`, `Inactive` and `Pending`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Field `type` has been deprecated from provider version 1.95.0. New field `network_type` replaces it.
     * 
     * @deprecated
     * Field &#39;type&#39; has been deprecated from provider version 1.95.0. New field &#39;network_type&#39; replaces it.
     * 
     */
    @Deprecated /* Field 'type' has been deprecated from provider version 1.95.0. New field 'network_type' replaces it. */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Field `type` has been deprecated from provider version 1.95.0. New field `network_type` replaces it.
     * 
     * @deprecated
     * Field &#39;type&#39; has been deprecated from provider version 1.95.0. New field &#39;network_type&#39; replaces it.
     * 
     */
    @Deprecated /* Field 'type' has been deprecated from provider version 1.95.0. New field 'network_type' replaces it. */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Filter results by a specific VpcId.
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return Filter results by a specific VpcId.
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    /**
     * Filter results by a specific VSwitchId.
     * 
     */
    @Import(name="vswitchId")
    private @Nullable Output<String> vswitchId;

    /**
     * @return Filter results by a specific VSwitchId.
     * 
     */
    public Optional<Output<String>> vswitchId() {
        return Optional.ofNullable(this.vswitchId);
    }

    private GetMountTargetsArgs() {}

    private GetMountTargetsArgs(GetMountTargetsArgs $) {
        this.accessGroupName = $.accessGroupName;
        this.fileSystemId = $.fileSystemId;
        this.ids = $.ids;
        this.mountTargetDomain = $.mountTargetDomain;
        this.networkType = $.networkType;
        this.outputFile = $.outputFile;
        this.status = $.status;
        this.type = $.type;
        this.vpcId = $.vpcId;
        this.vswitchId = $.vswitchId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMountTargetsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMountTargetsArgs $;

        public Builder() {
            $ = new GetMountTargetsArgs();
        }

        public Builder(GetMountTargetsArgs defaults) {
            $ = new GetMountTargetsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessGroupName Filter results by a specific AccessGroupName.
         * 
         * @return builder
         * 
         */
        public Builder accessGroupName(@Nullable Output<String> accessGroupName) {
            $.accessGroupName = accessGroupName;
            return this;
        }

        /**
         * @param accessGroupName Filter results by a specific AccessGroupName.
         * 
         * @return builder
         * 
         */
        public Builder accessGroupName(String accessGroupName) {
            return accessGroupName(Output.of(accessGroupName));
        }

        /**
         * @param fileSystemId The ID of the FileSystem that owns the MountTarget.
         * 
         * @return builder
         * 
         */
        public Builder fileSystemId(Output<String> fileSystemId) {
            $.fileSystemId = fileSystemId;
            return this;
        }

        /**
         * @param fileSystemId The ID of the FileSystem that owns the MountTarget.
         * 
         * @return builder
         * 
         */
        public Builder fileSystemId(String fileSystemId) {
            return fileSystemId(Output.of(fileSystemId));
        }

        /**
         * @param ids A list of MountTargetDomain.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of MountTargetDomain.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of MountTargetDomain.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param mountTargetDomain Field `mount_target_domain` has been deprecated from provider version 1.53.0. New field `ids` replaces it.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;mount_target_domain&#39; has been deprecated from provider version 1.53.0. New field &#39;ids&#39; replaces it.
         * 
         */
        @Deprecated /* Field 'mount_target_domain' has been deprecated from provider version 1.53.0. New field 'ids' replaces it. */
        public Builder mountTargetDomain(@Nullable Output<String> mountTargetDomain) {
            $.mountTargetDomain = mountTargetDomain;
            return this;
        }

        /**
         * @param mountTargetDomain Field `mount_target_domain` has been deprecated from provider version 1.53.0. New field `ids` replaces it.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;mount_target_domain&#39; has been deprecated from provider version 1.53.0. New field &#39;ids&#39; replaces it.
         * 
         */
        @Deprecated /* Field 'mount_target_domain' has been deprecated from provider version 1.53.0. New field 'ids' replaces it. */
        public Builder mountTargetDomain(String mountTargetDomain) {
            return mountTargetDomain(Output.of(mountTargetDomain));
        }

        /**
         * @param networkType Filter results by a specific NetworkType.
         * 
         * @return builder
         * 
         */
        public Builder networkType(@Nullable Output<String> networkType) {
            $.networkType = networkType;
            return this;
        }

        /**
         * @param networkType Filter results by a specific NetworkType.
         * 
         * @return builder
         * 
         */
        public Builder networkType(String networkType) {
            return networkType(Output.of(networkType));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        /**
         * @param status Filter results by the status of mount target. Valid values: `Active`, `Inactive` and `Pending`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Filter results by the status of mount target. Valid values: `Active`, `Inactive` and `Pending`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param type Field `type` has been deprecated from provider version 1.95.0. New field `network_type` replaces it.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;type&#39; has been deprecated from provider version 1.95.0. New field &#39;network_type&#39; replaces it.
         * 
         */
        @Deprecated /* Field 'type' has been deprecated from provider version 1.95.0. New field 'network_type' replaces it. */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Field `type` has been deprecated from provider version 1.95.0. New field `network_type` replaces it.
         * 
         * @return builder
         * 
         * @deprecated
         * Field &#39;type&#39; has been deprecated from provider version 1.95.0. New field &#39;network_type&#39; replaces it.
         * 
         */
        @Deprecated /* Field 'type' has been deprecated from provider version 1.95.0. New field 'network_type' replaces it. */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param vpcId Filter results by a specific VpcId.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId Filter results by a specific VpcId.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param vswitchId Filter results by a specific VSwitchId.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(@Nullable Output<String> vswitchId) {
            $.vswitchId = vswitchId;
            return this;
        }

        /**
         * @param vswitchId Filter results by a specific VSwitchId.
         * 
         * @return builder
         * 
         */
        public Builder vswitchId(String vswitchId) {
            return vswitchId(Output.of(vswitchId));
        }

        public GetMountTargetsArgs build() {
            if ($.fileSystemId == null) {
                throw new MissingRequiredPropertyException("GetMountTargetsArgs", "fileSystemId");
            }
            return $;
        }
    }

}
