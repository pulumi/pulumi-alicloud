// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.apigateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetModelsModel {
    /**
     * @return The creation time of the model.
     * 
     */
    private String createTime;
    /**
     * @return The description of the model.
     * 
     */
    private String description;
    /**
     * @return The ID of the api group.
     * 
     */
    private String groupId;
    /**
     * @return The ID of the Api Gateway Model.
     * 
     */
    private String id;
    /**
     * @return The id of the model.
     * 
     */
    private String modelId;
    /**
     * @return The name of the Model.
     * 
     */
    private String modelName;
    /**
     * @return The reference of the model.
     * 
     */
    private String modelRef;
    /**
     * @return The modified time of the model.
     * 
     */
    private String modifiedTime;
    /**
     * @return The schema of the model.
     * 
     */
    private String schema;

    private GetModelsModel() {}
    /**
     * @return The creation time of the model.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The description of the model.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The ID of the api group.
     * 
     */
    public String groupId() {
        return this.groupId;
    }
    /**
     * @return The ID of the Api Gateway Model.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The id of the model.
     * 
     */
    public String modelId() {
        return this.modelId;
    }
    /**
     * @return The name of the Model.
     * 
     */
    public String modelName() {
        return this.modelName;
    }
    /**
     * @return The reference of the model.
     * 
     */
    public String modelRef() {
        return this.modelRef;
    }
    /**
     * @return The modified time of the model.
     * 
     */
    public String modifiedTime() {
        return this.modifiedTime;
    }
    /**
     * @return The schema of the model.
     * 
     */
    public String schema() {
        return this.schema;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetModelsModel defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String description;
        private String groupId;
        private String id;
        private String modelId;
        private String modelName;
        private String modelRef;
        private String modifiedTime;
        private String schema;
        public Builder() {}
        public Builder(GetModelsModel defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.groupId = defaults.groupId;
    	      this.id = defaults.id;
    	      this.modelId = defaults.modelId;
    	      this.modelName = defaults.modelName;
    	      this.modelRef = defaults.modelRef;
    	      this.modifiedTime = defaults.modifiedTime;
    	      this.schema = defaults.schema;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetModelsModel", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetModelsModel", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder groupId(String groupId) {
            if (groupId == null) {
              throw new MissingRequiredPropertyException("GetModelsModel", "groupId");
            }
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetModelsModel", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder modelId(String modelId) {
            if (modelId == null) {
              throw new MissingRequiredPropertyException("GetModelsModel", "modelId");
            }
            this.modelId = modelId;
            return this;
        }
        @CustomType.Setter
        public Builder modelName(String modelName) {
            if (modelName == null) {
              throw new MissingRequiredPropertyException("GetModelsModel", "modelName");
            }
            this.modelName = modelName;
            return this;
        }
        @CustomType.Setter
        public Builder modelRef(String modelRef) {
            if (modelRef == null) {
              throw new MissingRequiredPropertyException("GetModelsModel", "modelRef");
            }
            this.modelRef = modelRef;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedTime(String modifiedTime) {
            if (modifiedTime == null) {
              throw new MissingRequiredPropertyException("GetModelsModel", "modifiedTime");
            }
            this.modifiedTime = modifiedTime;
            return this;
        }
        @CustomType.Setter
        public Builder schema(String schema) {
            if (schema == null) {
              throw new MissingRequiredPropertyException("GetModelsModel", "schema");
            }
            this.schema = schema;
            return this;
        }
        public GetModelsModel build() {
            final var _resultValue = new GetModelsModel();
            _resultValue.createTime = createTime;
            _resultValue.description = description;
            _resultValue.groupId = groupId;
            _resultValue.id = id;
            _resultValue.modelId = modelId;
            _resultValue.modelName = modelName;
            _resultValue.modelRef = modelRef;
            _resultValue.modifiedTime = modifiedTime;
            _resultValue.schema = schema;
            return _resultValue;
        }
    }
}
