// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.log.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogTailAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final LogTailAttachmentState Empty = new LogTailAttachmentState();

    /**
     * The Logtail configuration name, which is unique in the same project.
     * 
     */
    @Import(name="logtailConfigName")
    private @Nullable Output<String> logtailConfigName;

    /**
     * @return The Logtail configuration name, which is unique in the same project.
     * 
     */
    public Optional<Output<String>> logtailConfigName() {
        return Optional.ofNullable(this.logtailConfigName);
    }

    /**
     * The machine group name, which is unique in the same project.
     * 
     */
    @Import(name="machineGroupName")
    private @Nullable Output<String> machineGroupName;

    /**
     * @return The machine group name, which is unique in the same project.
     * 
     */
    public Optional<Output<String>> machineGroupName() {
        return Optional.ofNullable(this.machineGroupName);
    }

    /**
     * The project name to the log store belongs.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The project name to the log store belongs.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private LogTailAttachmentState() {}

    private LogTailAttachmentState(LogTailAttachmentState $) {
        this.logtailConfigName = $.logtailConfigName;
        this.machineGroupName = $.machineGroupName;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogTailAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogTailAttachmentState $;

        public Builder() {
            $ = new LogTailAttachmentState();
        }

        public Builder(LogTailAttachmentState defaults) {
            $ = new LogTailAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param logtailConfigName The Logtail configuration name, which is unique in the same project.
         * 
         * @return builder
         * 
         */
        public Builder logtailConfigName(@Nullable Output<String> logtailConfigName) {
            $.logtailConfigName = logtailConfigName;
            return this;
        }

        /**
         * @param logtailConfigName The Logtail configuration name, which is unique in the same project.
         * 
         * @return builder
         * 
         */
        public Builder logtailConfigName(String logtailConfigName) {
            return logtailConfigName(Output.of(logtailConfigName));
        }

        /**
         * @param machineGroupName The machine group name, which is unique in the same project.
         * 
         * @return builder
         * 
         */
        public Builder machineGroupName(@Nullable Output<String> machineGroupName) {
            $.machineGroupName = machineGroupName;
            return this;
        }

        /**
         * @param machineGroupName The machine group name, which is unique in the same project.
         * 
         * @return builder
         * 
         */
        public Builder machineGroupName(String machineGroupName) {
            return machineGroupName(Output.of(machineGroupName));
        }

        /**
         * @param project The project name to the log store belongs.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The project name to the log store belongs.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public LogTailAttachmentState build() {
            return $;
        }
    }

}
