// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.maxcompute.outputs;

import com.pulumi.alicloud.maxcompute.outputs.GetProjectsProjectPropertiesEncryption;
import com.pulumi.alicloud.maxcompute.outputs.GetProjectsProjectPropertiesTableLifecycle;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetProjectsProjectProperties {
    /**
     * @return Whether to allow full table scan.
     * 
     */
    private Boolean allowFullScan;
    /**
     * @return Whether to turn on Decimal2.0.
     * 
     */
    private Boolean enableDecimal2;
    /**
     * @return Whether encryption is turned on.
     * 
     */
    private GetProjectsProjectPropertiesEncryption encryption;
    /**
     * @return Job default retention time.
     * 
     */
    private String retentionDays;
    /**
     * @return SQL charge limit.
     * 
     */
    private String sqlMeteringMax;
    /**
     * @return Life cycle of tables.
     * 
     */
    private GetProjectsProjectPropertiesTableLifecycle tableLifecycle;
    /**
     * @return Project time zone.
     * 
     */
    private String timezone;
    /**
     * @return Type system.
     * 
     */
    private String typeSystem;

    private GetProjectsProjectProperties() {}
    /**
     * @return Whether to allow full table scan.
     * 
     */
    public Boolean allowFullScan() {
        return this.allowFullScan;
    }
    /**
     * @return Whether to turn on Decimal2.0.
     * 
     */
    public Boolean enableDecimal2() {
        return this.enableDecimal2;
    }
    /**
     * @return Whether encryption is turned on.
     * 
     */
    public GetProjectsProjectPropertiesEncryption encryption() {
        return this.encryption;
    }
    /**
     * @return Job default retention time.
     * 
     */
    public String retentionDays() {
        return this.retentionDays;
    }
    /**
     * @return SQL charge limit.
     * 
     */
    public String sqlMeteringMax() {
        return this.sqlMeteringMax;
    }
    /**
     * @return Life cycle of tables.
     * 
     */
    public GetProjectsProjectPropertiesTableLifecycle tableLifecycle() {
        return this.tableLifecycle;
    }
    /**
     * @return Project time zone.
     * 
     */
    public String timezone() {
        return this.timezone;
    }
    /**
     * @return Type system.
     * 
     */
    public String typeSystem() {
        return this.typeSystem;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProjectsProjectProperties defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean allowFullScan;
        private Boolean enableDecimal2;
        private GetProjectsProjectPropertiesEncryption encryption;
        private String retentionDays;
        private String sqlMeteringMax;
        private GetProjectsProjectPropertiesTableLifecycle tableLifecycle;
        private String timezone;
        private String typeSystem;
        public Builder() {}
        public Builder(GetProjectsProjectProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowFullScan = defaults.allowFullScan;
    	      this.enableDecimal2 = defaults.enableDecimal2;
    	      this.encryption = defaults.encryption;
    	      this.retentionDays = defaults.retentionDays;
    	      this.sqlMeteringMax = defaults.sqlMeteringMax;
    	      this.tableLifecycle = defaults.tableLifecycle;
    	      this.timezone = defaults.timezone;
    	      this.typeSystem = defaults.typeSystem;
        }

        @CustomType.Setter
        public Builder allowFullScan(Boolean allowFullScan) {
            if (allowFullScan == null) {
              throw new MissingRequiredPropertyException("GetProjectsProjectProperties", "allowFullScan");
            }
            this.allowFullScan = allowFullScan;
            return this;
        }
        @CustomType.Setter
        public Builder enableDecimal2(Boolean enableDecimal2) {
            if (enableDecimal2 == null) {
              throw new MissingRequiredPropertyException("GetProjectsProjectProperties", "enableDecimal2");
            }
            this.enableDecimal2 = enableDecimal2;
            return this;
        }
        @CustomType.Setter
        public Builder encryption(GetProjectsProjectPropertiesEncryption encryption) {
            if (encryption == null) {
              throw new MissingRequiredPropertyException("GetProjectsProjectProperties", "encryption");
            }
            this.encryption = encryption;
            return this;
        }
        @CustomType.Setter
        public Builder retentionDays(String retentionDays) {
            if (retentionDays == null) {
              throw new MissingRequiredPropertyException("GetProjectsProjectProperties", "retentionDays");
            }
            this.retentionDays = retentionDays;
            return this;
        }
        @CustomType.Setter
        public Builder sqlMeteringMax(String sqlMeteringMax) {
            if (sqlMeteringMax == null) {
              throw new MissingRequiredPropertyException("GetProjectsProjectProperties", "sqlMeteringMax");
            }
            this.sqlMeteringMax = sqlMeteringMax;
            return this;
        }
        @CustomType.Setter
        public Builder tableLifecycle(GetProjectsProjectPropertiesTableLifecycle tableLifecycle) {
            if (tableLifecycle == null) {
              throw new MissingRequiredPropertyException("GetProjectsProjectProperties", "tableLifecycle");
            }
            this.tableLifecycle = tableLifecycle;
            return this;
        }
        @CustomType.Setter
        public Builder timezone(String timezone) {
            if (timezone == null) {
              throw new MissingRequiredPropertyException("GetProjectsProjectProperties", "timezone");
            }
            this.timezone = timezone;
            return this;
        }
        @CustomType.Setter
        public Builder typeSystem(String typeSystem) {
            if (typeSystem == null) {
              throw new MissingRequiredPropertyException("GetProjectsProjectProperties", "typeSystem");
            }
            this.typeSystem = typeSystem;
            return this;
        }
        public GetProjectsProjectProperties build() {
            final var _resultValue = new GetProjectsProjectProperties();
            _resultValue.allowFullScan = allowFullScan;
            _resultValue.enableDecimal2 = enableDecimal2;
            _resultValue.encryption = encryption;
            _resultValue.retentionDays = retentionDays;
            _resultValue.sqlMeteringMax = sqlMeteringMax;
            _resultValue.tableLifecycle = tableLifecycle;
            _resultValue.timezone = timezone;
            _resultValue.typeSystem = typeSystem;
            return _resultValue;
        }
    }
}
