// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.servicecatalog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProvisionedProductOutputArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProvisionedProductOutputArgs Empty = new ProvisionedProductOutputArgs();

    /**
     * Description of the output value defined in the template.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the output value defined in the template.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the output value defined in the template.
     * 
     */
    @Import(name="outputKey")
    private @Nullable Output<String> outputKey;

    /**
     * @return The name of the output value defined in the template.
     * 
     */
    public Optional<Output<String>> outputKey() {
        return Optional.ofNullable(this.outputKey);
    }

    /**
     * The content of the output value defined in the template.
     * 
     */
    @Import(name="outputValue")
    private @Nullable Output<String> outputValue;

    /**
     * @return The content of the output value defined in the template.
     * 
     */
    public Optional<Output<String>> outputValue() {
        return Optional.ofNullable(this.outputValue);
    }

    private ProvisionedProductOutputArgs() {}

    private ProvisionedProductOutputArgs(ProvisionedProductOutputArgs $) {
        this.description = $.description;
        this.outputKey = $.outputKey;
        this.outputValue = $.outputValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProvisionedProductOutputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProvisionedProductOutputArgs $;

        public Builder() {
            $ = new ProvisionedProductOutputArgs();
        }

        public Builder(ProvisionedProductOutputArgs defaults) {
            $ = new ProvisionedProductOutputArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description of the output value defined in the template.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the output value defined in the template.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param outputKey The name of the output value defined in the template.
         * 
         * @return builder
         * 
         */
        public Builder outputKey(@Nullable Output<String> outputKey) {
            $.outputKey = outputKey;
            return this;
        }

        /**
         * @param outputKey The name of the output value defined in the template.
         * 
         * @return builder
         * 
         */
        public Builder outputKey(String outputKey) {
            return outputKey(Output.of(outputKey));
        }

        /**
         * @param outputValue The content of the output value defined in the template.
         * 
         * @return builder
         * 
         */
        public Builder outputValue(@Nullable Output<String> outputValue) {
            $.outputValue = outputValue;
            return this;
        }

        /**
         * @param outputValue The content of the output value defined in the template.
         * 
         * @return builder
         * 
         */
        public Builder outputValue(String outputValue) {
            return outputValue(Output.of(outputValue));
        }

        public ProvisionedProductOutputArgs build() {
            return $;
        }
    }

}
