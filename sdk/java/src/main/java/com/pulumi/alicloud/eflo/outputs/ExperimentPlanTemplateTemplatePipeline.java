// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eflo.outputs;

import com.pulumi.alicloud.eflo.outputs.ExperimentPlanTemplateTemplatePipelineEnvParams;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ExperimentPlanTemplateTemplatePipeline {
    /**
     * @return Contains a series of parameters related to the environment. See `env_params` below.
     * 
     */
    private ExperimentPlanTemplateTemplatePipelineEnvParams envParams;
    /**
     * @return Indicates the sequence number of the pipeline node.
     * 
     */
    private Integer pipelineOrder;
    /**
     * @return The use of the template scenario. It can have the following optional parameters:
     * - baseline: benchmark evaluation
     * 
     */
    private String scene;
    /**
     * @return Represents additional parameters for the run.
     * 
     */
    private @Nullable Map<String,String> settingParams;
    /**
     * @return Used to uniquely identify a specific payload.
     * 
     */
    private Integer workloadId;
    /**
     * @return The name used to represent a specific payload.
     * 
     */
    private String workloadName;

    private ExperimentPlanTemplateTemplatePipeline() {}
    /**
     * @return Contains a series of parameters related to the environment. See `env_params` below.
     * 
     */
    public ExperimentPlanTemplateTemplatePipelineEnvParams envParams() {
        return this.envParams;
    }
    /**
     * @return Indicates the sequence number of the pipeline node.
     * 
     */
    public Integer pipelineOrder() {
        return this.pipelineOrder;
    }
    /**
     * @return The use of the template scenario. It can have the following optional parameters:
     * - baseline: benchmark evaluation
     * 
     */
    public String scene() {
        return this.scene;
    }
    /**
     * @return Represents additional parameters for the run.
     * 
     */
    public Map<String,String> settingParams() {
        return this.settingParams == null ? Map.of() : this.settingParams;
    }
    /**
     * @return Used to uniquely identify a specific payload.
     * 
     */
    public Integer workloadId() {
        return this.workloadId;
    }
    /**
     * @return The name used to represent a specific payload.
     * 
     */
    public String workloadName() {
        return this.workloadName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExperimentPlanTemplateTemplatePipeline defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private ExperimentPlanTemplateTemplatePipelineEnvParams envParams;
        private Integer pipelineOrder;
        private String scene;
        private @Nullable Map<String,String> settingParams;
        private Integer workloadId;
        private String workloadName;
        public Builder() {}
        public Builder(ExperimentPlanTemplateTemplatePipeline defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.envParams = defaults.envParams;
    	      this.pipelineOrder = defaults.pipelineOrder;
    	      this.scene = defaults.scene;
    	      this.settingParams = defaults.settingParams;
    	      this.workloadId = defaults.workloadId;
    	      this.workloadName = defaults.workloadName;
        }

        @CustomType.Setter
        public Builder envParams(ExperimentPlanTemplateTemplatePipelineEnvParams envParams) {
            if (envParams == null) {
              throw new MissingRequiredPropertyException("ExperimentPlanTemplateTemplatePipeline", "envParams");
            }
            this.envParams = envParams;
            return this;
        }
        @CustomType.Setter
        public Builder pipelineOrder(Integer pipelineOrder) {
            if (pipelineOrder == null) {
              throw new MissingRequiredPropertyException("ExperimentPlanTemplateTemplatePipeline", "pipelineOrder");
            }
            this.pipelineOrder = pipelineOrder;
            return this;
        }
        @CustomType.Setter
        public Builder scene(String scene) {
            if (scene == null) {
              throw new MissingRequiredPropertyException("ExperimentPlanTemplateTemplatePipeline", "scene");
            }
            this.scene = scene;
            return this;
        }
        @CustomType.Setter
        public Builder settingParams(@Nullable Map<String,String> settingParams) {

            this.settingParams = settingParams;
            return this;
        }
        @CustomType.Setter
        public Builder workloadId(Integer workloadId) {
            if (workloadId == null) {
              throw new MissingRequiredPropertyException("ExperimentPlanTemplateTemplatePipeline", "workloadId");
            }
            this.workloadId = workloadId;
            return this;
        }
        @CustomType.Setter
        public Builder workloadName(String workloadName) {
            if (workloadName == null) {
              throw new MissingRequiredPropertyException("ExperimentPlanTemplateTemplatePipeline", "workloadName");
            }
            this.workloadName = workloadName;
            return this;
        }
        public ExperimentPlanTemplateTemplatePipeline build() {
            final var _resultValue = new ExperimentPlanTemplateTemplatePipeline();
            _resultValue.envParams = envParams;
            _resultValue.pipelineOrder = pipelineOrder;
            _resultValue.scene = scene;
            _resultValue.settingParams = settingParams;
            _resultValue.workloadId = workloadId;
            _resultValue.workloadName = workloadName;
            return _resultValue;
        }
    }
}
