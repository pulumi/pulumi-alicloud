// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.resourcemanager.outputs;

import com.pulumi.alicloud.resourcemanager.outputs.GetAccountDeletionCheckTaskAbandonAbleCheck;
import com.pulumi.alicloud.resourcemanager.outputs.GetAccountDeletionCheckTaskNotAllowReason;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAccountDeletionCheckTaskResult {
    /**
     * @return The check items that you can choose to ignore for the member deletion. Each element contains the following attributes:
     * 
     */
    private List<GetAccountDeletionCheckTaskAbandonAbleCheck> abandonAbleChecks;
    private String accountId;
    /**
     * @return Indicates whether the member can be deleted.
     * 
     */
    private Boolean allowDelete;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The reasons why the member cannot be deleted. Each element contains the following attributes:
     * 
     */
    private List<GetAccountDeletionCheckTaskNotAllowReason> notAllowReasons;
    /**
     * @return The status of the check.
     * 
     */
    private String status;

    private GetAccountDeletionCheckTaskResult() {}
    /**
     * @return The check items that you can choose to ignore for the member deletion. Each element contains the following attributes:
     * 
     */
    public List<GetAccountDeletionCheckTaskAbandonAbleCheck> abandonAbleChecks() {
        return this.abandonAbleChecks;
    }
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return Indicates whether the member can be deleted.
     * 
     */
    public Boolean allowDelete() {
        return this.allowDelete;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The reasons why the member cannot be deleted. Each element contains the following attributes:
     * 
     */
    public List<GetAccountDeletionCheckTaskNotAllowReason> notAllowReasons() {
        return this.notAllowReasons;
    }
    /**
     * @return The status of the check.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountDeletionCheckTaskResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAccountDeletionCheckTaskAbandonAbleCheck> abandonAbleChecks;
        private String accountId;
        private Boolean allowDelete;
        private String id;
        private List<GetAccountDeletionCheckTaskNotAllowReason> notAllowReasons;
        private String status;
        public Builder() {}
        public Builder(GetAccountDeletionCheckTaskResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.abandonAbleChecks = defaults.abandonAbleChecks;
    	      this.accountId = defaults.accountId;
    	      this.allowDelete = defaults.allowDelete;
    	      this.id = defaults.id;
    	      this.notAllowReasons = defaults.notAllowReasons;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder abandonAbleChecks(List<GetAccountDeletionCheckTaskAbandonAbleCheck> abandonAbleChecks) {
            this.abandonAbleChecks = Objects.requireNonNull(abandonAbleChecks);
            return this;
        }
        public Builder abandonAbleChecks(GetAccountDeletionCheckTaskAbandonAbleCheck... abandonAbleChecks) {
            return abandonAbleChecks(List.of(abandonAbleChecks));
        }
        @CustomType.Setter
        public Builder accountId(String accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }
        @CustomType.Setter
        public Builder allowDelete(Boolean allowDelete) {
            this.allowDelete = Objects.requireNonNull(allowDelete);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder notAllowReasons(List<GetAccountDeletionCheckTaskNotAllowReason> notAllowReasons) {
            this.notAllowReasons = Objects.requireNonNull(notAllowReasons);
            return this;
        }
        public Builder notAllowReasons(GetAccountDeletionCheckTaskNotAllowReason... notAllowReasons) {
            return notAllowReasons(List.of(notAllowReasons));
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public GetAccountDeletionCheckTaskResult build() {
            final var _resultValue = new GetAccountDeletionCheckTaskResult();
            _resultValue.abandonAbleChecks = abandonAbleChecks;
            _resultValue.accountId = accountId;
            _resultValue.allowDelete = allowDelete;
            _resultValue.id = id;
            _resultValue.notAllowReasons = notAllowReasons;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
