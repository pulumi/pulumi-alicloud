// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.opensearch;

import com.pulumi.alicloud.opensearch.inputs.AppGroupOrderArgs;
import com.pulumi.alicloud.opensearch.inputs.AppGroupQuotaArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppGroupArgs Empty = new AppGroupArgs();

    /**
     * Application Group Name.
     * 
     */
    @Import(name="appGroupName", required=true)
    private Output<String> appGroupName;

    /**
     * @return Application Group Name.
     * 
     */
    public Output<String> appGroupName() {
        return this.appGroupName;
    }

    /**
     * Billing model. Valid values:`compute_resource` and `qps`.
     * 
     */
    @Import(name="chargeWay")
    private @Nullable Output<String> chargeWay;

    /**
     * @return Billing model. Valid values:`compute_resource` and `qps`.
     * 
     */
    public Optional<Output<String>> chargeWay() {
        return Optional.ofNullable(this.chargeWay);
    }

    /**
     * The version of Application Group Name.
     * 
     */
    @Import(name="currentVersion")
    private @Nullable Output<String> currentVersion;

    /**
     * @return The version of Application Group Name.
     * 
     */
    public Optional<Output<String>> currentVersion() {
        return Optional.ofNullable(this.currentVersion);
    }

    /**
     * The description of the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Order change type. Valid values: `UPGRADE` and `DOWNGRADE`.
     * 
     */
    @Import(name="orderType")
    private @Nullable Output<String> orderType;

    /**
     * @return Order change type. Valid values: `UPGRADE` and `DOWNGRADE`.
     * 
     */
    public Optional<Output<String>> orderType() {
        return Optional.ofNullable(this.orderType);
    }

    /**
     * Order cycle information. The details see Block order.
     * 
     */
    @Import(name="orders")
    private @Nullable Output<List<AppGroupOrderArgs>> orders;

    /**
     * @return Order cycle information. The details see Block order.
     * 
     */
    public Optional<Output<List<AppGroupOrderArgs>>> orders() {
        return Optional.ofNullable(this.orders);
    }

    /**
     * The billing method of the resource. Valid values: `Subscription` and `PayAsYouGo`.
     * 
     */
    @Import(name="paymentType", required=true)
    private Output<String> paymentType;

    /**
     * @return The billing method of the resource. Valid values: `Subscription` and `PayAsYouGo`.
     * 
     */
    public Output<String> paymentType() {
        return this.paymentType;
    }

    /**
     * Quota information.  The details see Block quota.
     * 
     */
    @Import(name="quota", required=true)
    private Output<AppGroupQuotaArgs> quota;

    /**
     * @return Quota information.  The details see Block quota.
     * 
     */
    public Output<AppGroupQuotaArgs> quota() {
        return this.quota;
    }

    /**
     * Application type. Valid Values: `standard`, `enhanced`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Application type. Valid Values: `standard`, `enhanced`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private AppGroupArgs() {}

    private AppGroupArgs(AppGroupArgs $) {
        this.appGroupName = $.appGroupName;
        this.chargeWay = $.chargeWay;
        this.currentVersion = $.currentVersion;
        this.description = $.description;
        this.orderType = $.orderType;
        this.orders = $.orders;
        this.paymentType = $.paymentType;
        this.quota = $.quota;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppGroupArgs $;

        public Builder() {
            $ = new AppGroupArgs();
        }

        public Builder(AppGroupArgs defaults) {
            $ = new AppGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appGroupName Application Group Name.
         * 
         * @return builder
         * 
         */
        public Builder appGroupName(Output<String> appGroupName) {
            $.appGroupName = appGroupName;
            return this;
        }

        /**
         * @param appGroupName Application Group Name.
         * 
         * @return builder
         * 
         */
        public Builder appGroupName(String appGroupName) {
            return appGroupName(Output.of(appGroupName));
        }

        /**
         * @param chargeWay Billing model. Valid values:`compute_resource` and `qps`.
         * 
         * @return builder
         * 
         */
        public Builder chargeWay(@Nullable Output<String> chargeWay) {
            $.chargeWay = chargeWay;
            return this;
        }

        /**
         * @param chargeWay Billing model. Valid values:`compute_resource` and `qps`.
         * 
         * @return builder
         * 
         */
        public Builder chargeWay(String chargeWay) {
            return chargeWay(Output.of(chargeWay));
        }

        /**
         * @param currentVersion The version of Application Group Name.
         * 
         * @return builder
         * 
         */
        public Builder currentVersion(@Nullable Output<String> currentVersion) {
            $.currentVersion = currentVersion;
            return this;
        }

        /**
         * @param currentVersion The version of Application Group Name.
         * 
         * @return builder
         * 
         */
        public Builder currentVersion(String currentVersion) {
            return currentVersion(Output.of(currentVersion));
        }

        /**
         * @param description The description of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param orderType Order change type. Valid values: `UPGRADE` and `DOWNGRADE`.
         * 
         * @return builder
         * 
         */
        public Builder orderType(@Nullable Output<String> orderType) {
            $.orderType = orderType;
            return this;
        }

        /**
         * @param orderType Order change type. Valid values: `UPGRADE` and `DOWNGRADE`.
         * 
         * @return builder
         * 
         */
        public Builder orderType(String orderType) {
            return orderType(Output.of(orderType));
        }

        /**
         * @param orders Order cycle information. The details see Block order.
         * 
         * @return builder
         * 
         */
        public Builder orders(@Nullable Output<List<AppGroupOrderArgs>> orders) {
            $.orders = orders;
            return this;
        }

        /**
         * @param orders Order cycle information. The details see Block order.
         * 
         * @return builder
         * 
         */
        public Builder orders(List<AppGroupOrderArgs> orders) {
            return orders(Output.of(orders));
        }

        /**
         * @param orders Order cycle information. The details see Block order.
         * 
         * @return builder
         * 
         */
        public Builder orders(AppGroupOrderArgs... orders) {
            return orders(List.of(orders));
        }

        /**
         * @param paymentType The billing method of the resource. Valid values: `Subscription` and `PayAsYouGo`.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(Output<String> paymentType) {
            $.paymentType = paymentType;
            return this;
        }

        /**
         * @param paymentType The billing method of the resource. Valid values: `Subscription` and `PayAsYouGo`.
         * 
         * @return builder
         * 
         */
        public Builder paymentType(String paymentType) {
            return paymentType(Output.of(paymentType));
        }

        /**
         * @param quota Quota information.  The details see Block quota.
         * 
         * @return builder
         * 
         */
        public Builder quota(Output<AppGroupQuotaArgs> quota) {
            $.quota = quota;
            return this;
        }

        /**
         * @param quota Quota information.  The details see Block quota.
         * 
         * @return builder
         * 
         */
        public Builder quota(AppGroupQuotaArgs quota) {
            return quota(Output.of(quota));
        }

        /**
         * @param type Application type. Valid Values: `standard`, `enhanced`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Application type. Valid Values: `standard`, `enhanced`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AppGroupArgs build() {
            if ($.appGroupName == null) {
                throw new MissingRequiredPropertyException("AppGroupArgs", "appGroupName");
            }
            if ($.paymentType == null) {
                throw new MissingRequiredPropertyException("AppGroupArgs", "paymentType");
            }
            if ($.quota == null) {
                throw new MissingRequiredPropertyException("AppGroupArgs", "quota");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("AppGroupArgs", "type");
            }
            return $;
        }
    }

}
