// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlarmContactGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlarmContactGroupArgs Empty = new AlarmContactGroupArgs();

    /**
     * The name of the alarm group.
     * 
     */
    @Import(name="alarmContactGroupName", required=true)
    private Output<String> alarmContactGroupName;

    /**
     * @return The name of the alarm group.
     * 
     */
    public Output<String> alarmContactGroupName() {
        return this.alarmContactGroupName;
    }

    /**
     * The name of the alert contact.
     * 
     */
    @Import(name="contacts")
    private @Nullable Output<List<String>> contacts;

    /**
     * @return The name of the alert contact.
     * 
     */
    public Optional<Output<List<String>>> contacts() {
        return Optional.ofNullable(this.contacts);
    }

    /**
     * The description of the alert group.
     * 
     */
    @Import(name="describe")
    private @Nullable Output<String> describe;

    /**
     * @return The description of the alert group.
     * 
     */
    public Optional<Output<String>> describe() {
        return Optional.ofNullable(this.describe);
    }

    /**
     * Whether to open weekly subscription.
     * 
     */
    @Import(name="enableSubscribed")
    private @Nullable Output<Boolean> enableSubscribed;

    /**
     * @return Whether to open weekly subscription.
     * 
     */
    public Optional<Output<Boolean>> enableSubscribed() {
        return Optional.ofNullable(this.enableSubscribed);
    }

    private AlarmContactGroupArgs() {}

    private AlarmContactGroupArgs(AlarmContactGroupArgs $) {
        this.alarmContactGroupName = $.alarmContactGroupName;
        this.contacts = $.contacts;
        this.describe = $.describe;
        this.enableSubscribed = $.enableSubscribed;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlarmContactGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlarmContactGroupArgs $;

        public Builder() {
            $ = new AlarmContactGroupArgs();
        }

        public Builder(AlarmContactGroupArgs defaults) {
            $ = new AlarmContactGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param alarmContactGroupName The name of the alarm group.
         * 
         * @return builder
         * 
         */
        public Builder alarmContactGroupName(Output<String> alarmContactGroupName) {
            $.alarmContactGroupName = alarmContactGroupName;
            return this;
        }

        /**
         * @param alarmContactGroupName The name of the alarm group.
         * 
         * @return builder
         * 
         */
        public Builder alarmContactGroupName(String alarmContactGroupName) {
            return alarmContactGroupName(Output.of(alarmContactGroupName));
        }

        /**
         * @param contacts The name of the alert contact.
         * 
         * @return builder
         * 
         */
        public Builder contacts(@Nullable Output<List<String>> contacts) {
            $.contacts = contacts;
            return this;
        }

        /**
         * @param contacts The name of the alert contact.
         * 
         * @return builder
         * 
         */
        public Builder contacts(List<String> contacts) {
            return contacts(Output.of(contacts));
        }

        /**
         * @param contacts The name of the alert contact.
         * 
         * @return builder
         * 
         */
        public Builder contacts(String... contacts) {
            return contacts(List.of(contacts));
        }

        /**
         * @param describe The description of the alert group.
         * 
         * @return builder
         * 
         */
        public Builder describe(@Nullable Output<String> describe) {
            $.describe = describe;
            return this;
        }

        /**
         * @param describe The description of the alert group.
         * 
         * @return builder
         * 
         */
        public Builder describe(String describe) {
            return describe(Output.of(describe));
        }

        /**
         * @param enableSubscribed Whether to open weekly subscription.
         * 
         * @return builder
         * 
         */
        public Builder enableSubscribed(@Nullable Output<Boolean> enableSubscribed) {
            $.enableSubscribed = enableSubscribed;
            return this;
        }

        /**
         * @param enableSubscribed Whether to open weekly subscription.
         * 
         * @return builder
         * 
         */
        public Builder enableSubscribed(Boolean enableSubscribed) {
            return enableSubscribed(Output.of(enableSubscribed));
        }

        public AlarmContactGroupArgs build() {
            if ($.alarmContactGroupName == null) {
                throw new MissingRequiredPropertyException("AlarmContactGroupArgs", "alarmContactGroupName");
            }
            return $;
        }
    }

}
