// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.kvstore;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuditLogConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuditLogConfigArgs Empty = new AuditLogConfigArgs();

    /**
     * Indicates Whether to Enable the Audit Log.  Valid value:
     * * true: Default Value, Open.
     * * false: Closed.
     * 
     * Note: When the Instance for the Cluster Architecture Or Read/Write Split Architecture, at the Same Time to Open Or Close the Data Node and the Proxy Node of the Audit Log Doesn&#39;t Support Separate Open.
     * 
     */
    @Import(name="dbAudit")
    private @Nullable Output<Boolean> dbAudit;

    /**
     * @return Indicates Whether to Enable the Audit Log.  Valid value:
     * * true: Default Value, Open.
     * * false: Closed.
     * 
     * Note: When the Instance for the Cluster Architecture Or Read/Write Split Architecture, at the Same Time to Open Or Close the Data Node and the Proxy Node of the Audit Log Doesn&#39;t Support Separate Open.
     * 
     */
    public Optional<Output<Boolean>> dbAudit() {
        return Optional.ofNullable(this.dbAudit);
    }

    /**
     * Instance ID, Call the Describeinstances Get.
     * 
     */
    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    /**
     * @return Instance ID, Call the Describeinstances Get.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }

    /**
     * Audit Log Retention Period Value: 1~365.
     * 
     * &gt; **NOTE**: When the Instance dbaudit Value Is Set to True, This Parameter Entry into Force. The Parameter Setting of the Current Region of All an Apsaradb for Redis Instance for a Data Entry into Force.
     * 
     */
    @Import(name="retention")
    private @Nullable Output<Integer> retention;

    /**
     * @return Audit Log Retention Period Value: 1~365.
     * 
     * &gt; **NOTE**: When the Instance dbaudit Value Is Set to True, This Parameter Entry into Force. The Parameter Setting of the Current Region of All an Apsaradb for Redis Instance for a Data Entry into Force.
     * 
     */
    public Optional<Output<Integer>> retention() {
        return Optional.ofNullable(this.retention);
    }

    private AuditLogConfigArgs() {}

    private AuditLogConfigArgs(AuditLogConfigArgs $) {
        this.dbAudit = $.dbAudit;
        this.instanceId = $.instanceId;
        this.retention = $.retention;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuditLogConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuditLogConfigArgs $;

        public Builder() {
            $ = new AuditLogConfigArgs();
        }

        public Builder(AuditLogConfigArgs defaults) {
            $ = new AuditLogConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dbAudit Indicates Whether to Enable the Audit Log.  Valid value:
         * * true: Default Value, Open.
         * * false: Closed.
         * 
         * Note: When the Instance for the Cluster Architecture Or Read/Write Split Architecture, at the Same Time to Open Or Close the Data Node and the Proxy Node of the Audit Log Doesn&#39;t Support Separate Open.
         * 
         * @return builder
         * 
         */
        public Builder dbAudit(@Nullable Output<Boolean> dbAudit) {
            $.dbAudit = dbAudit;
            return this;
        }

        /**
         * @param dbAudit Indicates Whether to Enable the Audit Log.  Valid value:
         * * true: Default Value, Open.
         * * false: Closed.
         * 
         * Note: When the Instance for the Cluster Architecture Or Read/Write Split Architecture, at the Same Time to Open Or Close the Data Node and the Proxy Node of the Audit Log Doesn&#39;t Support Separate Open.
         * 
         * @return builder
         * 
         */
        public Builder dbAudit(Boolean dbAudit) {
            return dbAudit(Output.of(dbAudit));
        }

        /**
         * @param instanceId Instance ID, Call the Describeinstances Get.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId Instance ID, Call the Describeinstances Get.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param retention Audit Log Retention Period Value: 1~365.
         * 
         * &gt; **NOTE**: When the Instance dbaudit Value Is Set to True, This Parameter Entry into Force. The Parameter Setting of the Current Region of All an Apsaradb for Redis Instance for a Data Entry into Force.
         * 
         * @return builder
         * 
         */
        public Builder retention(@Nullable Output<Integer> retention) {
            $.retention = retention;
            return this;
        }

        /**
         * @param retention Audit Log Retention Period Value: 1~365.
         * 
         * &gt; **NOTE**: When the Instance dbaudit Value Is Set to True, This Parameter Entry into Force. The Parameter Setting of the Current Region of All an Apsaradb for Redis Instance for a Data Entry into Force.
         * 
         * @return builder
         * 
         */
        public Builder retention(Integer retention) {
            return retention(Output.of(retention));
        }

        public AuditLogConfigArgs build() {
            if ($.instanceId == null) {
                throw new MissingRequiredPropertyException("AuditLogConfigArgs", "instanceId");
            }
            return $;
        }
    }

}
