// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rds;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RdsInstanceCrossBackupPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final RdsInstanceCrossBackupPolicyArgs Empty = new RdsInstanceCrossBackupPolicyArgs();

    /**
     * The ID of the destination region where the cross-region backup files of the instance are stored.
     * 
     */
    @Import(name="crossBackupRegion", required=true)
    private Output<String> crossBackupRegion;

    /**
     * @return The ID of the destination region where the cross-region backup files of the instance are stored.
     * 
     */
    public Output<String> crossBackupRegion() {
        return this.crossBackupRegion;
    }

    /**
     * The ID of the instance.
     * 
     */
    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    /**
     * @return The ID of the instance.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }

    /**
     * The status of the cross-region log backup feature on the instance. Valid values:
     * - Enable: Enables the feature.
     * - Disabled: Disables the feature.
     * 
     */
    @Import(name="logBackupEnabled")
    private @Nullable Output<String> logBackupEnabled;

    /**
     * @return The status of the cross-region log backup feature on the instance. Valid values:
     * - Enable: Enables the feature.
     * - Disabled: Disables the feature.
     * 
     */
    public Optional<Output<String>> logBackupEnabled() {
        return Optional.ofNullable(this.logBackupEnabled);
    }

    /**
     * The number of days for which the cross-region backup files of the instance are retained. Valid values: 7 to 1825. Default value: 7.
     * 
     */
    @Import(name="retention")
    private @Nullable Output<Integer> retention;

    /**
     * @return The number of days for which the cross-region backup files of the instance are retained. Valid values: 7 to 1825. Default value: 7.
     * 
     */
    public Optional<Output<Integer>> retention() {
        return Optional.ofNullable(this.retention);
    }

    private RdsInstanceCrossBackupPolicyArgs() {}

    private RdsInstanceCrossBackupPolicyArgs(RdsInstanceCrossBackupPolicyArgs $) {
        this.crossBackupRegion = $.crossBackupRegion;
        this.instanceId = $.instanceId;
        this.logBackupEnabled = $.logBackupEnabled;
        this.retention = $.retention;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RdsInstanceCrossBackupPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RdsInstanceCrossBackupPolicyArgs $;

        public Builder() {
            $ = new RdsInstanceCrossBackupPolicyArgs();
        }

        public Builder(RdsInstanceCrossBackupPolicyArgs defaults) {
            $ = new RdsInstanceCrossBackupPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param crossBackupRegion The ID of the destination region where the cross-region backup files of the instance are stored.
         * 
         * @return builder
         * 
         */
        public Builder crossBackupRegion(Output<String> crossBackupRegion) {
            $.crossBackupRegion = crossBackupRegion;
            return this;
        }

        /**
         * @param crossBackupRegion The ID of the destination region where the cross-region backup files of the instance are stored.
         * 
         * @return builder
         * 
         */
        public Builder crossBackupRegion(String crossBackupRegion) {
            return crossBackupRegion(Output.of(crossBackupRegion));
        }

        /**
         * @param instanceId The ID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The ID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param logBackupEnabled The status of the cross-region log backup feature on the instance. Valid values:
         * - Enable: Enables the feature.
         * - Disabled: Disables the feature.
         * 
         * @return builder
         * 
         */
        public Builder logBackupEnabled(@Nullable Output<String> logBackupEnabled) {
            $.logBackupEnabled = logBackupEnabled;
            return this;
        }

        /**
         * @param logBackupEnabled The status of the cross-region log backup feature on the instance. Valid values:
         * - Enable: Enables the feature.
         * - Disabled: Disables the feature.
         * 
         * @return builder
         * 
         */
        public Builder logBackupEnabled(String logBackupEnabled) {
            return logBackupEnabled(Output.of(logBackupEnabled));
        }

        /**
         * @param retention The number of days for which the cross-region backup files of the instance are retained. Valid values: 7 to 1825. Default value: 7.
         * 
         * @return builder
         * 
         */
        public Builder retention(@Nullable Output<Integer> retention) {
            $.retention = retention;
            return this;
        }

        /**
         * @param retention The number of days for which the cross-region backup files of the instance are retained. Valid values: 7 to 1825. Default value: 7.
         * 
         * @return builder
         * 
         */
        public Builder retention(Integer retention) {
            return retention(Output.of(retention));
        }

        public RdsInstanceCrossBackupPolicyArgs build() {
            if ($.crossBackupRegion == null) {
                throw new MissingRequiredPropertyException("RdsInstanceCrossBackupPolicyArgs", "crossBackupRegion");
            }
            if ($.instanceId == null) {
                throw new MissingRequiredPropertyException("RdsInstanceCrossBackupPolicyArgs", "instanceId");
            }
            return $;
        }
    }

}
