// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sag.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSmartagFlowLogsLog {
    /**
     * @return The time interval at which log data of active connections is collected. Valid values: 60 to 6000. Default value: 300. Unit: second.
     * 
     */
    private Integer activeAging;
    /**
     * @return The description of the flow log.
     * 
     */
    private String description;
    /**
     * @return The ID of the flow log.
     * 
     */
    private String flowLogId;
    /**
     * @return The name of the flow log.
     * 
     */
    private String flowLogName;
    /**
     * @return The ID of the Flow Log.
     * 
     */
    private String id;
    /**
     * @return The time interval at which log data of inactive connections is connected. Valid values: 10 to 600. Default value: 15. Unit: second.
     * 
     */
    private Integer inactiveAging;
    /**
     * @return The name of the Log Service Logstore.
     * 
     */
    private String logstoreName;
    /**
     * @return The IP address of the NetFlow collector where the flow log is stored.
     * 
     */
    private String netflowServerIp;
    /**
     * @return The port of the NetFlow collector. Default value: 9995.
     * 
     */
    private Integer netflowServerPort;
    /**
     * @return The NetFlow version. Default value: V9.
     * 
     */
    private String netflowVersion;
    /**
     * @return The location where the flow log is stored. Valid values:  sls: The flow log is stored in Log Service. netflow: The flow log is stored on a NetFlow collector. all: The flow log is stored both in Log Service and on a NetFlow collector.
     * 
     */
    private String outputType;
    /**
     * @return The name of the Log Service project.
     * 
     */
    private String projectName;
    /**
     * @return The ID of the resource group.
     * 
     */
    private String resourceGroupId;
    /**
     * @return The ID of the region where Log Service is deployed.
     * 
     */
    private String slsRegionId;
    /**
     * @return The status of the flow log. Valid values:  `Active`: The flow log is enabled. `Inactive`: The flow log is disabled.
     * 
     */
    private String status;
    /**
     * @return The number of Smart Access gateway (SAG) instances with which the flow log is associated.
     * 
     */
    private Integer totalSagNum;

    private GetSmartagFlowLogsLog() {}
    /**
     * @return The time interval at which log data of active connections is collected. Valid values: 60 to 6000. Default value: 300. Unit: second.
     * 
     */
    public Integer activeAging() {
        return this.activeAging;
    }
    /**
     * @return The description of the flow log.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The ID of the flow log.
     * 
     */
    public String flowLogId() {
        return this.flowLogId;
    }
    /**
     * @return The name of the flow log.
     * 
     */
    public String flowLogName() {
        return this.flowLogName;
    }
    /**
     * @return The ID of the Flow Log.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The time interval at which log data of inactive connections is connected. Valid values: 10 to 600. Default value: 15. Unit: second.
     * 
     */
    public Integer inactiveAging() {
        return this.inactiveAging;
    }
    /**
     * @return The name of the Log Service Logstore.
     * 
     */
    public String logstoreName() {
        return this.logstoreName;
    }
    /**
     * @return The IP address of the NetFlow collector where the flow log is stored.
     * 
     */
    public String netflowServerIp() {
        return this.netflowServerIp;
    }
    /**
     * @return The port of the NetFlow collector. Default value: 9995.
     * 
     */
    public Integer netflowServerPort() {
        return this.netflowServerPort;
    }
    /**
     * @return The NetFlow version. Default value: V9.
     * 
     */
    public String netflowVersion() {
        return this.netflowVersion;
    }
    /**
     * @return The location where the flow log is stored. Valid values:  sls: The flow log is stored in Log Service. netflow: The flow log is stored on a NetFlow collector. all: The flow log is stored both in Log Service and on a NetFlow collector.
     * 
     */
    public String outputType() {
        return this.outputType;
    }
    /**
     * @return The name of the Log Service project.
     * 
     */
    public String projectName() {
        return this.projectName;
    }
    /**
     * @return The ID of the resource group.
     * 
     */
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * @return The ID of the region where Log Service is deployed.
     * 
     */
    public String slsRegionId() {
        return this.slsRegionId;
    }
    /**
     * @return The status of the flow log. Valid values:  `Active`: The flow log is enabled. `Inactive`: The flow log is disabled.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The number of Smart Access gateway (SAG) instances with which the flow log is associated.
     * 
     */
    public Integer totalSagNum() {
        return this.totalSagNum;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSmartagFlowLogsLog defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer activeAging;
        private String description;
        private String flowLogId;
        private String flowLogName;
        private String id;
        private Integer inactiveAging;
        private String logstoreName;
        private String netflowServerIp;
        private Integer netflowServerPort;
        private String netflowVersion;
        private String outputType;
        private String projectName;
        private String resourceGroupId;
        private String slsRegionId;
        private String status;
        private Integer totalSagNum;
        public Builder() {}
        public Builder(GetSmartagFlowLogsLog defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeAging = defaults.activeAging;
    	      this.description = defaults.description;
    	      this.flowLogId = defaults.flowLogId;
    	      this.flowLogName = defaults.flowLogName;
    	      this.id = defaults.id;
    	      this.inactiveAging = defaults.inactiveAging;
    	      this.logstoreName = defaults.logstoreName;
    	      this.netflowServerIp = defaults.netflowServerIp;
    	      this.netflowServerPort = defaults.netflowServerPort;
    	      this.netflowVersion = defaults.netflowVersion;
    	      this.outputType = defaults.outputType;
    	      this.projectName = defaults.projectName;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.slsRegionId = defaults.slsRegionId;
    	      this.status = defaults.status;
    	      this.totalSagNum = defaults.totalSagNum;
        }

        @CustomType.Setter
        public Builder activeAging(Integer activeAging) {
            this.activeAging = Objects.requireNonNull(activeAging);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder flowLogId(String flowLogId) {
            this.flowLogId = Objects.requireNonNull(flowLogId);
            return this;
        }
        @CustomType.Setter
        public Builder flowLogName(String flowLogName) {
            this.flowLogName = Objects.requireNonNull(flowLogName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder inactiveAging(Integer inactiveAging) {
            this.inactiveAging = Objects.requireNonNull(inactiveAging);
            return this;
        }
        @CustomType.Setter
        public Builder logstoreName(String logstoreName) {
            this.logstoreName = Objects.requireNonNull(logstoreName);
            return this;
        }
        @CustomType.Setter
        public Builder netflowServerIp(String netflowServerIp) {
            this.netflowServerIp = Objects.requireNonNull(netflowServerIp);
            return this;
        }
        @CustomType.Setter
        public Builder netflowServerPort(Integer netflowServerPort) {
            this.netflowServerPort = Objects.requireNonNull(netflowServerPort);
            return this;
        }
        @CustomType.Setter
        public Builder netflowVersion(String netflowVersion) {
            this.netflowVersion = Objects.requireNonNull(netflowVersion);
            return this;
        }
        @CustomType.Setter
        public Builder outputType(String outputType) {
            this.outputType = Objects.requireNonNull(outputType);
            return this;
        }
        @CustomType.Setter
        public Builder projectName(String projectName) {
            this.projectName = Objects.requireNonNull(projectName);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupId(String resourceGroupId) {
            this.resourceGroupId = Objects.requireNonNull(resourceGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder slsRegionId(String slsRegionId) {
            this.slsRegionId = Objects.requireNonNull(slsRegionId);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder totalSagNum(Integer totalSagNum) {
            this.totalSagNum = Objects.requireNonNull(totalSagNum);
            return this;
        }
        public GetSmartagFlowLogsLog build() {
            final var o = new GetSmartagFlowLogsLog();
            o.activeAging = activeAging;
            o.description = description;
            o.flowLogId = flowLogId;
            o.flowLogName = flowLogName;
            o.id = id;
            o.inactiveAging = inactiveAging;
            o.logstoreName = logstoreName;
            o.netflowServerIp = netflowServerIp;
            o.netflowServerPort = netflowServerPort;
            o.netflowVersion = netflowVersion;
            o.outputType = outputType;
            o.projectName = projectName;
            o.resourceGroupId = resourceGroupId;
            o.slsRegionId = slsRegionId;
            o.status = status;
            o.totalSagNum = totalSagNum;
            return o;
        }
    }
}
