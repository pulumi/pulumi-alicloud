// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIpamIpamPoolAllocationsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIpamIpamPoolAllocationsArgs Empty = new GetIpamIpamPoolAllocationsArgs();

    /**
     * The allocated address segment.
     * 
     */
    @Import(name="cidr")
    private @Nullable Output<String> cidr;

    /**
     * @return The allocated address segment.
     * 
     */
    public Optional<Output<String>> cidr() {
        return Optional.ofNullable(this.cidr);
    }

    /**
     * A list of Ipam Pool Allocation IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of Ipam Pool Allocation IDs.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * The instance ID of the ipam pool allocation.
     * 
     */
    @Import(name="ipamPoolAllocationId")
    private @Nullable Output<String> ipamPoolAllocationId;

    /**
     * @return The instance ID of the ipam pool allocation.
     * 
     */
    public Optional<Output<String>> ipamPoolAllocationId() {
        return Optional.ofNullable(this.ipamPoolAllocationId);
    }

    /**
     * The name of the ipam pool allocation.It must be 1 to 128 characters in length and cannot start with &#39;http:// &#39;or &#39;https.
     * 
     */
    @Import(name="ipamPoolAllocationName")
    private @Nullable Output<String> ipamPoolAllocationName;

    /**
     * @return The name of the ipam pool allocation.It must be 1 to 128 characters in length and cannot start with &#39;http:// &#39;or &#39;https.
     * 
     */
    public Optional<Output<String>> ipamPoolAllocationName() {
        return Optional.ofNullable(this.ipamPoolAllocationName);
    }

    /**
     * The ID of the IPAM Pool.
     * 
     */
    @Import(name="ipamPoolId", required=true)
    private Output<String> ipamPoolId;

    /**
     * @return The ID of the IPAM Pool.
     * 
     */
    public Output<String> ipamPoolId() {
        return this.ipamPoolId;
    }

    /**
     * A regex string to filter results by Group Metric Rule name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    /**
     * @return A regex string to filter results by Group Metric Rule name.
     * 
     */
    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    private GetIpamIpamPoolAllocationsArgs() {}

    private GetIpamIpamPoolAllocationsArgs(GetIpamIpamPoolAllocationsArgs $) {
        this.cidr = $.cidr;
        this.ids = $.ids;
        this.ipamPoolAllocationId = $.ipamPoolAllocationId;
        this.ipamPoolAllocationName = $.ipamPoolAllocationName;
        this.ipamPoolId = $.ipamPoolId;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIpamIpamPoolAllocationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIpamIpamPoolAllocationsArgs $;

        public Builder() {
            $ = new GetIpamIpamPoolAllocationsArgs();
        }

        public Builder(GetIpamIpamPoolAllocationsArgs defaults) {
            $ = new GetIpamIpamPoolAllocationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidr The allocated address segment.
         * 
         * @return builder
         * 
         */
        public Builder cidr(@Nullable Output<String> cidr) {
            $.cidr = cidr;
            return this;
        }

        /**
         * @param cidr The allocated address segment.
         * 
         * @return builder
         * 
         */
        public Builder cidr(String cidr) {
            return cidr(Output.of(cidr));
        }

        /**
         * @param ids A list of Ipam Pool Allocation IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Ipam Pool Allocation IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of Ipam Pool Allocation IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param ipamPoolAllocationId The instance ID of the ipam pool allocation.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolAllocationId(@Nullable Output<String> ipamPoolAllocationId) {
            $.ipamPoolAllocationId = ipamPoolAllocationId;
            return this;
        }

        /**
         * @param ipamPoolAllocationId The instance ID of the ipam pool allocation.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolAllocationId(String ipamPoolAllocationId) {
            return ipamPoolAllocationId(Output.of(ipamPoolAllocationId));
        }

        /**
         * @param ipamPoolAllocationName The name of the ipam pool allocation.It must be 1 to 128 characters in length and cannot start with &#39;http:// &#39;or &#39;https.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolAllocationName(@Nullable Output<String> ipamPoolAllocationName) {
            $.ipamPoolAllocationName = ipamPoolAllocationName;
            return this;
        }

        /**
         * @param ipamPoolAllocationName The name of the ipam pool allocation.It must be 1 to 128 characters in length and cannot start with &#39;http:// &#39;or &#39;https.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolAllocationName(String ipamPoolAllocationName) {
            return ipamPoolAllocationName(Output.of(ipamPoolAllocationName));
        }

        /**
         * @param ipamPoolId The ID of the IPAM Pool.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolId(Output<String> ipamPoolId) {
            $.ipamPoolId = ipamPoolId;
            return this;
        }

        /**
         * @param ipamPoolId The ID of the IPAM Pool.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolId(String ipamPoolId) {
            return ipamPoolId(Output.of(ipamPoolId));
        }

        /**
         * @param nameRegex A regex string to filter results by Group Metric Rule name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param nameRegex A regex string to filter results by Group Metric Rule name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        public GetIpamIpamPoolAllocationsArgs build() {
            if ($.ipamPoolId == null) {
                throw new MissingRequiredPropertyException("GetIpamIpamPoolAllocationsArgs", "ipamPoolId");
            }
            return $;
        }
    }

}
