// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.esa.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSitesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSitesArgs Empty = new GetSitesArgs();

    /**
     * Access type. Value:-**NS**: Managed access via NS.-**CNAME**: access through CNAME.
     * 
     */
    @Import(name="accessType")
    private @Nullable Output<String> accessType;

    /**
     * @return Access type. Value:-**NS**: Managed access via NS.-**CNAME**: access through CNAME.
     * 
     */
    public Optional<Output<String>> accessType() {
        return Optional.ofNullable(this.accessType);
    }

    /**
     * Acceleration area
     * 
     */
    @Import(name="coverage")
    private @Nullable Output<String> coverage;

    /**
     * @return Acceleration area
     * 
     */
    public Optional<Output<String>> coverage() {
        return Optional.ofNullable(this.coverage);
    }

    /**
     * A list of Site IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of Site IDs.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * A regex string to filter results by Group Metric Rule name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    /**
     * @return A regex string to filter results by Group Metric Rule name.
     * 
     */
    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    /**
     * Only the Enterprise version, pass **true** when the table only queries the enterprise version of the site.
     * 
     */
    @Import(name="onlyEnterprise")
    private @Nullable Output<Boolean> onlyEnterprise;

    /**
     * @return Only the Enterprise version, pass **true** when the table only queries the enterprise version of the site.
     * 
     */
    public Optional<Output<Boolean>> onlyEnterprise() {
        return Optional.ofNullable(this.onlyEnterprise);
    }

    /**
     * File name where to save data source results (after running `pulumi preview`).
     * 
     */
    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    /**
     * @return File name where to save data source results (after running `pulumi preview`).
     * 
     */
    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    /**
     * Current page number.
     * 
     */
    @Import(name="pageNumber")
    private @Nullable Output<Integer> pageNumber;

    /**
     * @return Current page number.
     * 
     */
    public Optional<Output<Integer>> pageNumber() {
        return Optional.ofNullable(this.pageNumber);
    }

    /**
     * Number of records per page.
     * 
     */
    @Import(name="pageSize")
    private @Nullable Output<Integer> pageSize;

    /**
     * @return Number of records per page.
     * 
     */
    public Optional<Output<Integer>> pageSize() {
        return Optional.ofNullable(this.pageSize);
    }

    /**
     * Package subscription type. Value:-**basicplan**: Basic version.-**standardplan**: Standard version.-**advancedplan**: Advanced version.-**enterpriseplan**: Enterprise Edition.
     * 
     */
    @Import(name="planSubscribeType")
    private @Nullable Output<String> planSubscribeType;

    /**
     * @return Package subscription type. Value:-**basicplan**: Basic version.-**standardplan**: Standard version.-**advancedplan**: Advanced version.-**enterpriseplan**: Enterprise Edition.
     * 
     */
    public Optional<Output<String>> planSubscribeType() {
        return Optional.ofNullable(this.planSubscribeType);
    }

    /**
     * The ID of the resource group
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the resource group
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * Site Name
     * 
     */
    @Import(name="siteName")
    private @Nullable Output<String> siteName;

    /**
     * @return Site Name
     * 
     */
    public Optional<Output<String>> siteName() {
        return Optional.ofNullable(this.siteName);
    }

    /**
     * The search match pattern for the site name. The default value is exact match. Valid values:-**prefix**: matches the prefix.-**suffix**: The suffix matches.-**exact**: exact match.-**fuzzy**: fuzzy match.
     * 
     */
    @Import(name="siteSearchType")
    private @Nullable Output<String> siteSearchType;

    /**
     * @return The search match pattern for the site name. The default value is exact match. Valid values:-**prefix**: matches the prefix.-**suffix**: The suffix matches.-**exact**: exact match.-**fuzzy**: fuzzy match.
     * 
     */
    public Optional<Output<String>> siteSearchType() {
        return Optional.ofNullable(this.siteSearchType);
    }

    /**
     * The status of the resource
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the resource
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetSitesArgs() {}

    private GetSitesArgs(GetSitesArgs $) {
        this.accessType = $.accessType;
        this.coverage = $.coverage;
        this.ids = $.ids;
        this.nameRegex = $.nameRegex;
        this.onlyEnterprise = $.onlyEnterprise;
        this.outputFile = $.outputFile;
        this.pageNumber = $.pageNumber;
        this.pageSize = $.pageSize;
        this.planSubscribeType = $.planSubscribeType;
        this.resourceGroupId = $.resourceGroupId;
        this.siteName = $.siteName;
        this.siteSearchType = $.siteSearchType;
        this.status = $.status;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSitesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSitesArgs $;

        public Builder() {
            $ = new GetSitesArgs();
        }

        public Builder(GetSitesArgs defaults) {
            $ = new GetSitesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessType Access type. Value:-**NS**: Managed access via NS.-**CNAME**: access through CNAME.
         * 
         * @return builder
         * 
         */
        public Builder accessType(@Nullable Output<String> accessType) {
            $.accessType = accessType;
            return this;
        }

        /**
         * @param accessType Access type. Value:-**NS**: Managed access via NS.-**CNAME**: access through CNAME.
         * 
         * @return builder
         * 
         */
        public Builder accessType(String accessType) {
            return accessType(Output.of(accessType));
        }

        /**
         * @param coverage Acceleration area
         * 
         * @return builder
         * 
         */
        public Builder coverage(@Nullable Output<String> coverage) {
            $.coverage = coverage;
            return this;
        }

        /**
         * @param coverage Acceleration area
         * 
         * @return builder
         * 
         */
        public Builder coverage(String coverage) {
            return coverage(Output.of(coverage));
        }

        /**
         * @param ids A list of Site IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Site IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of Site IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param nameRegex A regex string to filter results by Group Metric Rule name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param nameRegex A regex string to filter results by Group Metric Rule name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        /**
         * @param onlyEnterprise Only the Enterprise version, pass **true** when the table only queries the enterprise version of the site.
         * 
         * @return builder
         * 
         */
        public Builder onlyEnterprise(@Nullable Output<Boolean> onlyEnterprise) {
            $.onlyEnterprise = onlyEnterprise;
            return this;
        }

        /**
         * @param onlyEnterprise Only the Enterprise version, pass **true** when the table only queries the enterprise version of the site.
         * 
         * @return builder
         * 
         */
        public Builder onlyEnterprise(Boolean onlyEnterprise) {
            return onlyEnterprise(Output.of(onlyEnterprise));
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        /**
         * @param outputFile File name where to save data source results (after running `pulumi preview`).
         * 
         * @return builder
         * 
         */
        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        /**
         * @param pageNumber Current page number.
         * 
         * @return builder
         * 
         */
        public Builder pageNumber(@Nullable Output<Integer> pageNumber) {
            $.pageNumber = pageNumber;
            return this;
        }

        /**
         * @param pageNumber Current page number.
         * 
         * @return builder
         * 
         */
        public Builder pageNumber(Integer pageNumber) {
            return pageNumber(Output.of(pageNumber));
        }

        /**
         * @param pageSize Number of records per page.
         * 
         * @return builder
         * 
         */
        public Builder pageSize(@Nullable Output<Integer> pageSize) {
            $.pageSize = pageSize;
            return this;
        }

        /**
         * @param pageSize Number of records per page.
         * 
         * @return builder
         * 
         */
        public Builder pageSize(Integer pageSize) {
            return pageSize(Output.of(pageSize));
        }

        /**
         * @param planSubscribeType Package subscription type. Value:-**basicplan**: Basic version.-**standardplan**: Standard version.-**advancedplan**: Advanced version.-**enterpriseplan**: Enterprise Edition.
         * 
         * @return builder
         * 
         */
        public Builder planSubscribeType(@Nullable Output<String> planSubscribeType) {
            $.planSubscribeType = planSubscribeType;
            return this;
        }

        /**
         * @param planSubscribeType Package subscription type. Value:-**basicplan**: Basic version.-**standardplan**: Standard version.-**advancedplan**: Advanced version.-**enterpriseplan**: Enterprise Edition.
         * 
         * @return builder
         * 
         */
        public Builder planSubscribeType(String planSubscribeType) {
            return planSubscribeType(Output.of(planSubscribeType));
        }

        /**
         * @param resourceGroupId The ID of the resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the resource group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param siteName Site Name
         * 
         * @return builder
         * 
         */
        public Builder siteName(@Nullable Output<String> siteName) {
            $.siteName = siteName;
            return this;
        }

        /**
         * @param siteName Site Name
         * 
         * @return builder
         * 
         */
        public Builder siteName(String siteName) {
            return siteName(Output.of(siteName));
        }

        /**
         * @param siteSearchType The search match pattern for the site name. The default value is exact match. Valid values:-**prefix**: matches the prefix.-**suffix**: The suffix matches.-**exact**: exact match.-**fuzzy**: fuzzy match.
         * 
         * @return builder
         * 
         */
        public Builder siteSearchType(@Nullable Output<String> siteSearchType) {
            $.siteSearchType = siteSearchType;
            return this;
        }

        /**
         * @param siteSearchType The search match pattern for the site name. The default value is exact match. Valid values:-**prefix**: matches the prefix.-**suffix**: The suffix matches.-**exact**: exact match.-**fuzzy**: fuzzy match.
         * 
         * @return builder
         * 
         */
        public Builder siteSearchType(String siteSearchType) {
            return siteSearchType(Output.of(siteSearchType));
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the resource
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags Resource tags
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GetSitesArgs build() {
            return $;
        }
    }

}
